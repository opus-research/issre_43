[
  {
    "_id": "661f9ec08dfb6b84f2427a23",
    "number": 6227,
    "body": "Issue #6143: In response to this issue, I've implemented a fix to ensure that moment.max validates the first argument as well as subsequent arguments before performing any comparisons. This ensures consistency and prevents potential errors when utilizing this function. The fix has been implemented and tested, and the changes are ready for review and merging.",
    "head_branch": "bugfix/#6143",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9ec18dfb6b84f2427a24",
    "number": 6226,
    "body": "Issue #6143: In response to this issue, I've implemented a fix to ensure that moment.max validates the first argument as well as subsequent arguments before performing any comparisons. This ensures consistency and prevents potential errors when utilizing this function. The fix has been implemented and tested, and the changes are ready for review and merging.",
    "head_branch": "bugfix/#6143",
    "is_a_fork": true,
    "comments": [
      " <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/6226/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-missing-id.svg\" alt=\"CLA Missing ID\" align=\"left\" height=\"28\" width=\"328\"></a> <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/6226/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-not-signed.svg\" alt=\"CLA Not Signed\" align=\"left\" height=\"28\" width=\"328\"></a><br/><br /><ul><li> :x: The email address for the commit (bb632e7b113cbda1dcc41fdec309f0610d6ae200) is not linked to the GitHub account, preventing the EasyCLA check. Consult <a href='https://confluence.linuxfoundation.org/pages/viewpage.action?pageId=86641302' target='_blank'>this Help Article</a> and <a href='https://help.github.com/en/github/committing-changes-to-your-project/why-are-my-commits-linked-to-the-wrong-user' target='_blank'>GitHub Help</a> to resolve. (To view the commit's email address, add .patch at the end of this PR page's URL.) For further assistance with EasyCLA, <a href='https://jira.linuxfoundation.org/servicedesk/customer/portal/4' target='_blank'>please submit a support request ticket</a>.</li><li><a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/6226/#/?version=2' target='_blank'>:x:</a> - login: @AKHILREDDY1636 / name: Akhil Reddy . The commit (55f21bb48fa7d32e0d3bf407a790467dbf3cb18f) is not authorized under a signed CLA. <a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/6226/#/?version=2' target='_blank'>Please click here to be authorized</a>. For further assistance with EasyCLA, <a href='https://jira.linuxfoundation.org/servicedesk/customer/portal/4' target='_blank'>please submit a support request ticket</a>.</li></ul>"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9ec28dfb6b84f2427a25",
    "number": 6225,
    "body": "Issue #6143: In response to this issue, I've implemented a fix to ensure that moment.max validates the first argument as well as subsequent arguments before performing any comparisons. This ensures consistency and prevents potential errors when utilizing this function. The fix has been implemented and tested, and the changes are ready for review and merging.",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      " <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/6225/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-missing-id.svg\" alt=\"CLA Missing ID\" align=\"left\" height=\"28\" width=\"328\"></a> <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/6225/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-not-signed.svg\" alt=\"CLA Not Signed\" align=\"left\" height=\"28\" width=\"328\"></a><br/><br /><ul><li> :x: The email address for the commit (bb632e7b113cbda1dcc41fdec309f0610d6ae200) is not linked to the GitHub account, preventing the EasyCLA check. Consult <a href='https://confluence.linuxfoundation.org/pages/viewpage.action?pageId=86641302' target='_blank'>this Help Article</a> and <a href='https://help.github.com/en/github/committing-changes-to-your-project/why-are-my-commits-linked-to-the-wrong-user' target='_blank'>GitHub Help</a> to resolve. (To view the commit's email address, add .patch at the end of this PR page's URL.) For further assistance with EasyCLA, <a href='https://jira.linuxfoundation.org/servicedesk/customer/portal/4' target='_blank'>please submit a support request ticket</a>.</li><li><a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/6225/#/?version=2' target='_blank'>:x:</a> - login: @AKHILREDDY1636 / name: Akhil Reddy . The commit (55f21bb48fa7d32e0d3bf407a790467dbf3cb18f) is not authorized under a signed CLA. <a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/6225/#/?version=2' target='_blank'>Please click here to be authorized</a>. For further assistance with EasyCLA, <a href='https://jira.linuxfoundation.org/servicedesk/customer/portal/4' target='_blank'>please submit a support request ticket</a>.</li></ul>"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9ec38dfb6b84f2427a26",
    "number": 6224,
    "body": "Issue #6143: In response to this issue, I've implemented a fix to ensure that moment.max validates the first argument as well as subsequent arguments before performing any comparisons. This ensures consistency and prevents potential errors when utilizing this function. The fix has been implemented and tested, and the changes are ready for review and merging.",
    "head_branch": "fix_#6143",
    "is_a_fork": true,
    "comments": [
      " <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/6224/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-missing-id.svg\" alt=\"CLA Missing ID\" align=\"left\" height=\"28\" width=\"328\"></a> <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/6224/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-not-signed.svg\" alt=\"CLA Not Signed\" align=\"left\" height=\"28\" width=\"328\"></a><br/><br /><ul><li>:white_check_mark: login: ichernev / name: Iskren Ivov Chernev  (18aba135ab927ffe7f868ee09276979bed6993a6)</li><li> :x: The email address for the commit (bb632e7b113cbda1dcc41fdec309f0610d6ae200) is not linked to the GitHub account, preventing the EasyCLA check. Consult <a href='https://confluence.linuxfoundation.org/pages/viewpage.action?pageId=86641302' target='_blank'>this Help Article</a> and <a href='https://help.github.com/en/github/committing-changes-to-your-project/why-are-my-commits-linked-to-the-wrong-user' target='_blank'>GitHub Help</a> to resolve. (To view the commit's email address, add .patch at the end of this PR page's URL.) For further assistance with EasyCLA, <a href='https://jira.linuxfoundation.org/servicedesk/customer/portal/4' target='_blank'>please submit a support request ticket</a>.</li></ul>"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9ec48dfb6b84f2427a27",
    "number": 6221,
    "body": "This pull request addresses the issue raised in #6202, where the current TypeScript definitions for the `toJSON` method do not accurately reflect the possible return value of `null` for invalid date instances. As documented, the `toJSON` method returns a string representation of the moment object when valid and `null` when the moment object represents an invalid date. However, the existing TypeScript type definitions only indicate a string return type, leading to potential type mismatches and runtime errors in TypeScript applications.\r\n\r\n### Changes Made\r\n- Updated the TypeScript definitions for the `toJSON` method to include `null` as a possible return type. The method now correctly reflects its return type as `string | null`, aligning with the actual behavior of the `toJSON` method.\r\n\r\n### Impact\r\n- This change ensures that TypeScript users of moment.js have accurate type information, preventing type-related runtime errors when dealing with invalid date instances. It reinforces the reliability of TypeScript definitions in the moment.js library.\r\n\r\n### Testing\r\n- Added new test to verify that TypeScript correctly recognizes the updated return type of the `toJSON` method. This test ensure that no type errors occur when a moment object is invalid, and `toJSON` returns `null`.\r\n- All existing tests have been run to ensure that this change does not affect other functionalities or introduce regressions.\r\n\r\n### Additional Notes\r\n- This change is focused solely on updating the TypeScript definitions to match the current JavaScript implementation of the `toJSON` method. No changes were made to the method's implementation.\r\n\r\nBy accurately reflecting the `toJSON` method's behavior in the TypeScript definitions, this pull request aims to improve the development experience for TypeScript users of moment.js, ensuring type safety and consistency with the library's runtime behavior.\r\n\r\nResolves #6202.\r\n",
    "head_branch": "fix-issue-6202",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/6221/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-not-signed.svg\" alt=\"CLA Not Signed\" align=\"left\" height=\"28\" width=\"328\" ><br/><br ><ul><li>:x: login: @utf26 /  The commit (2687a27e3bcaaa52d7d68e4fe8703ccc43c7785a). This user is authorized, but they must confirm their affiliation with their company. Start the authorization process <a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/6221/#/?version=2' target='_blank'> by clicking here</a>, click \\\"Corporate\\\", select the appropriate company from the list, then confirm your affiliation on the page that appears. For further assistance with EasyCLA, <a href='https://jira.linuxfoundation.org/servicedesk/customer/portal/4' target='_blank'>please submit a support request ticket</a>.</li></ul>",
      "It will probably break a lot of users codes, event if it's correct  \r\nsee the previous similar case, which has been reverted : https://github.com/moment/moment/commit/a52ffb2bd49fdef0149d13874e7aede361342198"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9ec58dfb6b84f2427a28",
    "number": 6219,
    "body": "Typing error, in swahili time is \"Saa\" and not \"Saat\"",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9ec68dfb6b84f2427a29",
    "number": 6218,
    "body": "Changed a typing error \"saat\" to \"saa\"",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ><br ><ul><li>:white_check_mark:login: Louq-Tech / (9020f387ffff1274ac9db0e39fedfaf4900cccdb)</li></ul><br>The committers listed above are authorized under a signed CLA."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9ec78dfb6b84f2427a2a",
    "number": 6217,
    "body": "Done according to:\r\nGeorgian: https://www.localeplanet.com/icu/ka/index.html \r\nDutch(Belgium): https://www.localeplanet.com/icu/nl-BE/index.html",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: adidaslevy  (f263776bd4bc7a5acd2cac8de4014015bd532848)</li><li>:white_check_mark: login: adilevy-em / name: Adi Levy  (48ef21871812dda87c24a3e80f8d8b8085c88430)</li></ul>",
      "Hi @ichernev I made sure to pass all the checks and gates for this PR. \r\nWhat happens next? ",
      "Hi @anandfresh, Upon approval - what is going to happen now? "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9ec88dfb6b84f2427a2b",
    "number": 6215,
    "body": "According to wikipedia, the correct date format is 'DD.MM.YYYY': https://en.wikipedia.org/wiki/List_of_date_formats_by_country.\r\n\r\nFixed that to conform the general used format.",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      " <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/6215/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-not-signed.svg\" alt=\"CLA Not Signed\" align=\"left\" height=\"28\" width=\"328\"></a><br/><br /><ul><li><a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/6215/#/?version=2' target='_blank'>:x:</a> - login: @adilevyattenti . The commit (60135f5d9659932a89cd5a93c50cc558f66b9ff0, f3bc6478c56104e52a3710e1d69f6fc284f33a82) is not authorized under a signed CLA. <a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/6215/#/?version=2' target='_blank'>Please click here to be authorized</a>. For further assistance with EasyCLA, <a href='https://jira.linuxfoundation.org/servicedesk/customer/portal/4' target='_blank'>please submit a support request ticket</a>.</li></ul>",
      "Noticed that  when translating content to Georgian. the date format is DD/MM/YYYY, whereas it should be: DD.MM.YYYY",
      "Reverting back, as the changes are not owned by my employer. ",
      "Reverting back, as the changes are not owned by my employer."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9ec98dfb6b84f2427a2c",
    "number": 6214,
    "body": "According to wikipedia, the correct date format is 'DD.MM.YYYY': https://en.wikipedia.org/wiki/List_of_date_formats_by_country.\r\n\r\nFixed that to conform the general used format.",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      " <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/6214/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-not-signed.svg\" alt=\"CLA Not Signed\" align=\"left\" height=\"28\" width=\"328\"></a><br/><br /><ul><li><a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/6214/#/?version=2' target='_blank'>:x:</a> - login: @adilevyattenti . The commit (f3bc6478c56104e52a3710e1d69f6fc284f33a82) is not authorized under a signed CLA. <a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/6214/#/?version=2' target='_blank'>Please click here to be authorized</a>. For further assistance with EasyCLA, <a href='https://jira.linuxfoundation.org/servicedesk/customer/portal/4' target='_blank'>please submit a support request ticket</a>.</li></ul>",
      "PRing again to conform the requirements. "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9eca8dfb6b84f2427a2d",
    "number": 6210,
    "body": null,
    "head_branch": "test/pr",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9ecb8dfb6b84f2427a2e",
    "number": 6209,
    "body": "Auto-generated from wizard",
    "head_branch": "ichernev-patch-1",
    "is_a_fork": false,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ><br ><ul><li>:white_check_mark:login: ichernev / (a6076db6657c915d2545e07bfb81cd67447bfa64)</li></ul><br>The committers listed above are authorized under a signed CLA."
    ],
    "commit_messages": [
      "Create npm-grunt.yml (#6209)\n\nAdd github actions to run tests against develop and PRs"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9ecc8dfb6b84f2427a2f",
    "number": 6208,
    "body": "Date format in Korea is YYYY-MM-DD instead of YYYY.MM.DD.\r\nSee date format here: https://en.wikipedia.org/wiki/Date_and_time_notation_in_South_Korea\r\n\r\n@ichernev",
    "head_branch": "fix-KO-date-format",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9ecd8dfb6b84f2427a30",
    "number": 6207,
    "body": "Date format in Korea is YYYY-MM-DD instead of YYYY.MM.DD.\r\nSee date format here: https://en.wikipedia.org/wiki/Date_and_time_notation_in_South_Korea",
    "head_branch": "fix-KO-date-format",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: michalbencur / name: Michal Bencur  (1192647d05549b5e65ee45e0a24877e069ce62db)</li></ul>"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9ece8dfb6b84f2427a31",
    "number": 6206,
    "body": "Date format in Korea is YYYY-MM-DD instead of YYYY.MM.DD. \r\nSee date format here: https://en.wikipedia.org/wiki/Date_and_time_notation_in_South_Korea\r\n",
    "head_branch": "fix-KO-date-format",
    "is_a_fork": true,
    "comments": [
      " <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/6206/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-missing-id.svg\" alt=\"CLA Missing ID\" align=\"left\" height=\"28\" width=\"328\"></a> <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/6206/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-not-signed.svg\" alt=\"CLA Not Signed\" align=\"left\" height=\"28\" width=\"328\"></a><br/><br /><ul><li> :x: The email address for the commit (1192647d05549b5e65ee45e0a24877e069ce62db) is not linked to the GitHub account, preventing the EasyCLA check. Consult <a href='https://confluence.linuxfoundation.org/pages/viewpage.action?pageId=86641302' target='_blank'>this Help Article</a> and <a href='https://help.github.com/en/github/committing-changes-to-your-project/why-are-my-commits-linked-to-the-wrong-user' target='_blank'>GitHub Help</a> to resolve. (To view the commit's email address, add .patch at the end of this PR page's URL.) For further assistance with EasyCLA, <a href='https://jira.linuxfoundation.org/servicedesk/customer/portal/4' target='_blank'>please submit a support request ticket</a>.</li></ul>"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9ecf8dfb6b84f2427a32",
    "number": 6200,
    "body": "Creating a locale for English (Gibraltar) ",
    "head_branch": "en-gi",
    "is_a_fork": true,
    "comments": [
      " <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/6200/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-not-signed.svg\" alt=\"CLA Not Signed\" align=\"left\" height=\"28\" width=\"328\"></a><br/><br /><ul><li><a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/6200/#/?version=2' target='_blank'>:x:</a> - login: @nathannorrisfairsailcom / name: Nathan Norris . The commit (5adff44c3639e325e611acd5c0ffc33e6ee95669, 196e3a68c621245bc629121e48ff8c8d99e3eb1d) is not authorized under a signed CLA. <a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/6200/#/?version=2' target='_blank'>Please click here to be authorized</a>. For further assistance with EasyCLA, <a href='https://jira.linuxfoundation.org/servicedesk/customer/portal/4' target='_blank'>please submit a support request ticket</a>.</li></ul>"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9ed08dfb6b84f2427a33",
    "number": 6197,
    "body": "the latest standard of abbreviation for August in Indonesian is \"Agu\" instead of \"Agt\",\r\n\r\nreference: https://www.unicode.org/cldr/charts/44/summary/id.html#3cb5a7caab50ce56",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: ardhyanth / name: Rahmadani Ardhyanto  (dc2ef376c518f695990c2f1758b5256a1c9abec2)</li></ul>"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9ed18dfb6b84f2427a34",
    "number": 6195,
    "body": "on-behalf-of: @Azure opensource@microsoft.com",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: dhirenofficial / name: Dhiren Tuladhar  (d4c8c8371bdaf35be9c410256a96e4081053b62c, 8be0dbf1ca797670656f85273e76766a1606d3ff)</li></ul>"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9ed28dfb6b84f2427a35",
    "number": 6193,
    "body": "Fixes #3944\r\n\r\nThe semantics of \"locale weekday\" are a bit iffy, but I guess it boils down to -- `locale_weekday - dow` is 0-6 (Mon-Sun).\r\n\r\nThe parser logic is a bit more involved and does it this way, so it makes more sense to obey it and fix the weekYear setter (instead of changing the semantics of weekday inside the rest of the (internal) code).",
    "head_branch": "fix-locale-week-year",
    "is_a_fork": false,
    "comments": [
      " <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/6193/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-not-signed.svg\" alt=\"CLA Not Signed\" align=\"left\" height=\"28\" width=\"328\"></a><br/><br /><ul><li><a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/6193/#/?version=2' target='_blank'>:x:</a> - login: @ichernev / name: Iskren Ivov Chernev . The commit (6767277b84ace3180353a1e68bf8bd9815405213) is not authorized under a signed CLA. <a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/6193/#/?version=2' target='_blank'>Please click here to be authorized</a>. For further assistance with EasyCLA, <a href='https://jira.linuxfoundation.org/servicedesk/customer/portal/4' target='_blank'>please submit a support request ticket</a>.</li></ul>",
      "Merged in 50af8c26039d398957db07b9775d573b5369e263"
    ],
    "commit_messages": [
      "Merge pull request #6193 from moment:fix-locale-week-year\n\n[bugfix] weekyear setter handle dow"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9ed38dfb6b84f2427a36",
    "number": 6191,
    "body": "According to local knowledge the month-names need to be rendered using the format-version when a numeral is added to them.\r\n\r\nThis is now handled by adding the appropriate isFormat regex.\r\n\r\nThis should provide a more elegant solution to the problem of broken czech month-names than #6185 and #6063 as it fixes the root cause and does not simply swap month-names which then breaks other tests\n\nThe main change is swapping the numeral and the format strings but also modifying the tests to properly resemble local date and time formats.\n\nThe dot (.) is used  instead of th,nd, rd or th and is tuerefore added to the regex as equal to the `o`.\n\nThat makes sure that the `L`,variants get rendered correctly as they use `D.` in their format string which would otherwise not match for the monthname.\n\nAlso the date always comes before the month in czech. So it's `1. April` and not `April 1st`. Therefore I have changed the format in the test on line 53 to match that similar to the german locale file.\n\nThis should now make sure that all possible options are correctly spelled.",
    "head_branch": "fixCzeckMonths",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: heiglandreas / name: Andreas Heigl  (68d90c7c3bbc06603c83f8a81bebcc0ee255f677)</li></ul>",
      "Merged in f5dd67c2",
      "@ichernev Any idea when this will be available in a release?"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9ed48dfb6b84f2427a37",
    "number": 6187,
    "body": "Add Philippines 🇵🇭  Locale",
    "head_branch": "feat/ph-locale",
    "is_a_fork": true,
    "comments": [
      " <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/6187/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-missing-id.svg\" alt=\"CLA Missing ID\" align=\"left\" height=\"28\" width=\"328\"></a> <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/6187/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-not-signed.svg\" alt=\"CLA Not Signed\" align=\"left\" height=\"28\" width=\"328\"></a><br/><br /><ul><li>:white_check_mark: login: mowglimecha9 / name: Mowgli Mecha  (b09e596892a9524e45daf0da61343a8dd733b229)</li><li> :x: The email address for the commit (e5192500083b85ae7b5b8a1b73b10d888c1ceeb9, 1f332071d4442c91790090866cbac75360d72a59, df21b26da48f988874f6dccd15b403eb07170709) is not linked to the GitHub account, preventing the EasyCLA check. Consult <a href='https://confluence.linuxfoundation.org/pages/viewpage.action?pageId=86641302' target='_blank'>this Help Article</a> and <a href='https://help.github.com/en/github/committing-changes-to-your-project/why-are-my-commits-linked-to-the-wrong-user' target='_blank'>GitHub Help</a> to resolve. (To view the commit's email address, add .patch at the end of this PR page's URL.) For further assistance with EasyCLA, <a href='https://jira.linuxfoundation.org/servicedesk/customer/portal/4' target='_blank'>please submit a support request ticket</a>.</li></ul>",
      "You need to add it in `src/locale/ph.js` and also add tests. Also, you have to accept the CLA.",
      "Actually the correct locale code for Phillipines is `en-ph.js`."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9ed58dfb6b84f2427a38",
    "number": 6186,
    "body": "Add Locale for Philippines 🇵🇭 ",
    "head_branch": "feat/add-ph-locale",
    "is_a_fork": true,
    "comments": [
      " <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/6186/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-missing-id.svg\" alt=\"CLA Missing ID\" align=\"left\" height=\"28\" width=\"328\"></a> <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/6186/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-not-signed.svg\" alt=\"CLA Not Signed\" align=\"left\" height=\"28\" width=\"328\"></a><br/><br /><ul><li> :x: The email address for the commit (014c01687ed96608bf6e0bd6ca67a948ed2fb26d, 54b5e44c7dddb0e99f16b89ddd07794630393ce2) is not linked to the GitHub account, preventing the EasyCLA check. Consult <a href='https://confluence.linuxfoundation.org/pages/viewpage.action?pageId=86641302' target='_blank'>this Help Article</a> and <a href='https://help.github.com/en/github/committing-changes-to-your-project/why-are-my-commits-linked-to-the-wrong-user' target='_blank'>GitHub Help</a> to resolve. (To view the commit's email address, add .patch at the end of this PR page's URL.) For further assistance with EasyCLA, <a href='https://jira.linuxfoundation.org/servicedesk/customer/portal/4' target='_blank'>please submit a support request ticket</a>.</li></ul>"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9ed68dfb6b84f2427a39",
    "number": 6185,
    "body": "Signed-off-by: Martin Mayer martin.kelly.mayer@gmail.com\r\n\r\nFormat and standalone month names are swapped.\r\ne.g. 1.12.2023 should be \"1. prosince 2023\", not \"1. prosinec 2023\"\r\nand 12.2023 should be \"prosinec 2023\", not \"prosince 2023\"",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: mkmayer / name: Martin Mayer  (53cedd3669e03aeb77db36dd58ee8cb2270a8437)</li></ul>",
      "Merged via PR #6191 "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9ed78dfb6b84f2427a3a",
    "number": 6176,
    "body": "Update locale/vi.js to capitalize the first letter of months and weekdays",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: thanhminhmr / name: Mai Thanh Minh  (36d90908a5126dc24774e6a8c5483390d7777fba, 65b506ec6676de61ec96c068623d3179cf3c6f0f)</li></ul>",
      "According to CLDR data, the month names are lowercase in the `format` variant and uppercase in the `standalone` variant. You also need to modify `src/locale/vi.js`, (not `locale/vi.js` which is autogenerated). Get inspiration from here: https://github.com/moment/moment/blob/develop/src/locale/cs.js#L8",
      "@ichernev Thanks for the feedback. Should I rollback the changes on `locale/vi.js` before editing `src/locale/vi.js`?",
      "> @ichernev Thanks for the feedback. Should I rollback the changes on `locale/vi.js` before editing `src/locale/vi.js`?\r\n\r\nYes, only change files under src. The other ones are generated on release. Unfortunately the helpful bot that tells you that is out of order atm."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9ed88dfb6b84f2427a3b",
    "number": 6175,
    "body": "Moment.js locale odia(oriya) language",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: SiDD-sIngH / name: Siddhant Singh  (59dc89835a54d66a49991947a4fc9253f845c84e, 61e45c9b097210a86987e805199cfef70acfd81a)</li></ul>",
      "@SiDD-sIngH you need to add `src/local/XXX.js` and add tests.\r\n\r\n@rksp25 I see you want to help, at least check the right files (not autogen) are modified and there are tests present."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9ed98dfb6b84f2427a3c",
    "number": 6169,
    "body": "When timezone is setted, moment.date() may be different from  Date().getDate()",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: yulodl / name: Shell Yu  (4201d589549e738a8c5f4b2eed5ca13eae83b348)</li></ul>",
      "@yulodl I don't fully understand why this is needed, explain the issue you're fixing in more detail and provide tests.",
      "If you want to create timezone-specific instances, use `moment.tz(...)` constructor, which uses `moment.utc` internally and then adjusts for the specified timezone.\r\n\r\nFeel free to reopen (or open a new issue) if you think the recommended flow is broken."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9eda8dfb6b84f2427a3d",
    "number": 6168,
    "body": null,
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      " <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/6168/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-not-signed.svg\" alt=\"CLA Not Signed\" align=\"left\" height=\"28\" width=\"328\"></a><br/><br /><ul><li><a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/6168/#/?version=2' target='_blank'>:x:</a> - login: @divyjainjd . The commit (ea4534ea8ab2b3bf73e126ce8805d5c90456fb42, f1d66412bb5ba8d767f4646aad70a6f4120f935a) is not authorized under a signed CLA. <a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/6168/#/?version=2' target='_blank'>Please click here to be authorized</a>. For further assistance with EasyCLA, <a href='https://jira.linuxfoundation.org/servicedesk/customer/portal/4' target='_blank'>please submit a support request ticket</a>.</li></ul>"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9edb8dfb6b84f2427a3e",
    "number": 6166,
    "body": null,
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      "@Ajinkya-2607 I'm sorry, which country/locale is this?",
      "India\r\n\r\nOn Sun, 17 Dec, 2023, 2:51 am Iskren Ivov Chernev, ***@***.***>\r\nwrote:\r\n\r\n> @Ajinkya-2607 <https://github.com/Ajinkya-2607> I'm sorry, which\r\n> country/locale is this?\r\n>\r\n> —\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/moment/moment/pull/6166#issuecomment-1858932702>, or\r\n> unsubscribe\r\n> <https://github.com/notifications/unsubscribe-auth/ARDODELEBUUWDI7M2EIBYMTYJYGGJAVCNFSM6AAAAAA4F4HQWKVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTQNJYHEZTENZQGI>\r\n> .\r\n> You are receiving this because you were mentioned.Message ID:\r\n> ***@***.***>\r\n>\r\n",
      "It's odia language, isn't it? Language code `or`.\r\n\r\nhttps://en.wikipedia.org/wiki/Odia_language",
      "Yes, it is.\r\n\r\nOn Sun, 17 Dec, 2023, 4:03 pm Kristjan ESPERANTO, ***@***.***>\r\nwrote:\r\n\r\n> It's odia language, isn't it? Language code or.\r\n>\r\n> https://en.wikipedia.org/wiki/Odia_language\r\n>\r\n> —\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/moment/moment/pull/6166#issuecomment-1859132330>, or\r\n> unsubscribe\r\n> <https://github.com/notifications/unsubscribe-auth/ARDODEMO4F4EXRJY56IAKP3YJ3C67AVCNFSM6AAAAAA4F4HQWKVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTQNJZGEZTEMZTGA>\r\n> .\r\n> You are receiving this because you were mentioned.Message ID:\r\n> ***@***.***>\r\n>\r\n",
      "@Ajinkya-2607 Are #6175 and #6066 for the same language?",
      "Ah, tests fail on this one too. @Ajinkya-2607 can you have a look?",
      "I also created an up to date branch (there is a file with bad endlines which messes up git): https://github.com/moment/moment/tree/fixup-6166, feel free to work on top of it. ",
      "Ok, I'll check it out.\r\n\r\nOn Mon, 25 Dec, 2023, 10:45 pm Iskren Ivov Chernev, <\r\n***@***.***> wrote:\r\n\r\n> I also created an up to date branch (there is a file with bad endlines\r\n> which messes up git): https://github.com/moment/moment/tree/fixup-6166,\r\n> feel free to work on top of it.\r\n>\r\n> —\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/moment/moment/pull/6166#issuecomment-1869059294>, or\r\n> unsubscribe\r\n> <https://github.com/notifications/unsubscribe-auth/ARDODEMFHZHRWQ5EIT4FZD3YLGYDLAVCNFSM6AAAAAA4F4HQWKVHI2DSMVQWIX3LMV43OSLTON2WKQ3PNVWWK3TUHMYTQNRZGA2TSMRZGQ>\r\n> .\r\n> You are receiving this because you were mentioned.Message ID:\r\n> ***@***.***>\r\n>\r\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9edc8dfb6b84f2427a3f",
    "number": 6164,
    "body": null,
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: Ajinkya-2607  (b7d49a816e56f4e9048daa27bbc0f03d737f23b7)</li></ul>",
      "Add Odisa Language",
      "add Odisa language script",
      "Close in favor of #6166 "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9edd8dfb6b84f2427a40",
    "number": 6156,
    "body": "consider string number as milliseconds when create a Moment",
    "head_branch": "string-number-as-milliseconds",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: 0Ncoder0  (00fdf46343713e826082aecdb668e8880597be63)</li></ul>",
      "@0Ncoder0 I'm not 100% sure this is a good change. If you know this is a milliseconds string, why don't you convert to number before passing to moment? This input comes from a dev, not from a user (I hope) so the dev can handle a `+` sign...\r\n\r\nAlso it doesn't have tests."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9ede8dfb6b84f2427a41",
    "number": 6155,
    "body": "See https://nl.wikipedia.org/wiki/12-uursnotatie which states \r\n\r\n\"In het Nederlands spreekt men ook van voormiddag en namiddag (v.m. en n.m. of vm en nm).\"  which means \"In Dutch people also speak of morning (voormiddag)  and afternoon (namiddag) (v.m. and n.m. or vm and pm).\"",
    "head_branch": "reyostallenberg-patch-1",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: reyostallenberg / name: Reyo Stallenberg  (d2dc94017e7a149409b4ed6d764b5e181eda471d, 0f6a6d1554bf92c1c511c9ca3f845ab291d2336e)</li></ul>",
      "@reyostallenberg you need to change `src/locale/nl.js` and also add/fix some tests.\r\n\r\n@anandfresh @rksp25 for locale changes you should demand links / snippets to CLDR data, like this: https://github.com/unicode-org/cldr/blob/release-44-1/common/main/nl.xml#L5150\r\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9edf8dfb6b84f2427a42",
    "number": 6152,
    "body": "Hey there!\r\n\r\nI'm opening this PR to add `ckb` locale to the list of supported locales.\r\n\r\n**Why?**\r\nThe Kurdish language has a variety of dialects, leading to inconsistencies in many packages. The `ku` locale, for instance, might represent Central Kurdish translation in one package, but in another package, it could be Northern or Southern Kurdish. These dialect differences are significant and could result in unintentional selection of the locale.\r\n\r\nTherefore, this pull request proposes a consistent [CLDR](https://cldr.unicode.org/index) locale code by duplicating the existing `ku` locale, which represents Central Kurdish translation, into its own designated locale code.\r\n\r\nNote: I chose to not delete `ku` locale since some people might still use this in their projects. But in the future, people could reserve this locale for another Kurdish dialect translation.\r\n\r\nThank you!\r\n\r\n**References:**\r\n\r\n- [Picking the right language identifier by Unicode CLDR](https://cldr.unicode.org/index/cldr-spec/picking-the-right-language-code)\r\n- [CKB in Glottolog](https://glottolog.org/resource/languoid/id/cent1972)\r\n- [CKB in Ethnologue](https://www.ethnologue.com/language/ckb/)\r\n- [CKB in ISO 639-3](https://iso639-3.sil.org/code/ckb)",
    "head_branch": "add-ckb-locale",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: AlanD20 / name: AlanD20  (2ea4f2dffe4459f1e4d93c7a54f1657ff5021359)</li></ul>",
      "Sorry I wasn't aware of already opened PR regarding this issue.\r\n\r\nI'm going to close this PR in favor of merging #6010 to main branch.\r\n\r\nHope this bumps the existing PR to be merged.\r\n\r\nThank you!\r\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9ee08dfb6b84f2427a43",
    "number": 6151,
    "body": "Solving the issue number #6149 and fixing the same.\r\n",
    "head_branch": "develop1",
    "is_a_fork": true,
    "comments": [
      " <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/6151/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-not-signed.svg\" alt=\"CLA Not Signed\" align=\"left\" height=\"28\" width=\"328\"></a><br/><br /><ul><li><a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/6151/#/?version=2' target='_blank'>:x:</a> - login: @levinbaria / name: Levin Baria . The commit (45a980ffba785e2b1940790d68d124d36c2a051f) is not authorized under a signed CLA. <a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/6151/#/?version=2' target='_blank'>Please click here to be authorized</a>. For further assistance with EasyCLA, <a href='https://jira.linuxfoundation.org/servicedesk/customer/portal/4' target='_blank'>please submit a support request ticket</a>.</li></ul>",
      "@levinbaria you need to change the `src/locale/gu.js` file, not `locale/gu.js`. Also fix tests. Also I can't really see what the change is, you should provide some proof from [CLDR](https://github.com/unicode-org/cldr/blob/release-44-1/common/main) that the changes are warranted."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9ee18dfb6b84f2427a44",
    "number": 6129,
    "body": "### Changes\r\n* Updated name months locale Ukraine - uk.js. Capital letter months",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      " <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/6129/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-not-signed.svg\" alt=\"CLA Not Signed\" align=\"left\" height=\"28\" width=\"328\"></a><br/><br /><ul><li><a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/6129/#/?version=2' target='_blank'>:x:</a> - login: @martinjack / name: Evgen Kytonin . The commit (cc7c7643d1fcb0840356848ff7a33ca28b605426) is not authorized under a signed CLA. <a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/6129/#/?version=2' target='_blank'>Please click here to be authorized</a>. For further assistance with EasyCLA, <a href='https://jira.linuxfoundation.org/servicedesk/customer/portal/4' target='_blank'>please submit a support request ticket</a>.</li></ul>",
      "Accoring to CLDR the month names are lower case: https://github.com/unicode-org/cldr/blob/release-44-1/common/main/uk.xml#L1836\r\n\r\nIf you really believe they should be upper-case take the issue with them, and after they approve it and release it, I'll allow a change here."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9ee28dfb6b84f2427a45",
    "number": 6128,
    "body": "…ane function and ensure it returns a boolean",
    "head_branch": "fix/undefined-locale-name",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: Tobi-Adeneye / name: Oluwatobiloba A. Adeneye  (2cbd4ca998444754a8cac2a661f2310cb5256a32)</li></ul>",
      "Duplicate #5987.",
      "merged in bcaa0123"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9ee38dfb6b84f2427a46",
    "number": 6127,
    "body": null,
    "head_branch": "bugfix/support-get-month-name",
    "is_a_fork": true,
    "comments": [
      " <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/6127/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-missing-id.svg\" alt=\"CLA Missing ID\" align=\"left\" height=\"28\" width=\"328\"></a> <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/6127/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-not-signed.svg\" alt=\"CLA Not Signed\" align=\"left\" height=\"28\" width=\"328\"></a><br/><br /><ul><li> :x: The commit (094daa6f1eac6931f36f85cc703a7d8ac51cc400). This user is missing the User's ID, preventing the EasyCLA check. <a href='https://help.github.com/en/github/committing-changes-to-your-project/why-are-my-commits-linked-to-the-wrong-user' target='_blank'>Consult GitHub Help</a> to resolve.For further assistance with EasyCLA, <a href='https://jira.linuxfoundation.org/servicedesk/customer/portal/4' target='_blank'>please submit a support request ticket</a>.</li></ul>",
      "@suyundukov yeah, valid questions indeed.\r\n\r\nNot to mention hardcoding the english names...\r\n\r\n@Tobi-Adeneye if you need the english month name, just do `moment.localeData('en').months()[0]`"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9ee48dfb6b84f2427a47",
    "number": 6126,
    "body": "Add Karakalpak localization",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: zju1 / name: Azamat Jumabaev  (41d0e8ff9702e2914f0ab37a7a10cf90b9adc5a5)</li></ul>",
      "@zju1 you need to modify `src/locale/XXX.js` files, also you need tests. Also I'm not 100% sure the locale abbreviation is correct, can you provide some sources?"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9ee58dfb6b84f2427a48",
    "number": 6125,
    "body": "Other languages have days with capital letter, like Monday, Saturday etc.. in italian they were all lowercase.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: federicocappellotto97 / name: Federico Ottavio  (7ba5f07426ba83438aa4bc6c29d464dd7036767f)</li></ul>",
      "@federicocappellotto97 according to CLDR https://github.com/unicode-org/cldr/blob/release-44-1/common/main/it.xml#L1732 the month names are not uppercase.\r\n\r\n@suyundukov just demand CLDR proof next time there is a proposed locale change (or fish it out yourself and prove it's not needed (like 95% of the time))."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9ee68dfb6b84f2427a49",
    "number": 6123,
    "body": null,
    "head_branch": "gigwell",
    "is_a_fork": true,
    "comments": [
      " <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/6123/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-missing-id.svg\" alt=\"CLA Missing ID\" align=\"left\" height=\"28\" width=\"328\"></a> <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/6123/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-not-signed.svg\" alt=\"CLA Not Signed\" align=\"left\" height=\"28\" width=\"328\"></a><br/><br /><ul><li> :x: The commit (201decf94c7400e2af938b63719e909abaa1b3f9, 285390d6c37b006ea397b53d2a618ea352c1c247, 90ee7278fe6fb6904ab8d9e9030d02b3c6129869, ddf6bd57dbadaea83424e46cd9d897ed2c2487c2). This user is missing the User's ID, preventing the EasyCLA check. <a href='https://help.github.com/en/github/committing-changes-to-your-project/why-are-my-commits-linked-to-the-wrong-user' target='_blank'>Consult GitHub Help</a> to resolve.For further assistance with EasyCLA, <a href='https://jira.linuxfoundation.org/servicedesk/customer/portal/4' target='_blank'>please submit a support request ticket</a>.</li></ul>"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9ee78dfb6b84f2427a4a",
    "number": 6121,
    "body": "year_guess() is a function requested by a user to automatically go back to the last valid date when given an invalid date of the format 'ddd MMM DD...'. Based on issue #6106 ",
    "head_branch": "first-contribution",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: sanchej  (57a32740829b92773908cac341ab38b84cf36c44)</li></ul>",
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: sanchej  (57a32740829b92773908cac341ab38b84cf36c44, fa4a6a99951b7507c0a34320dde7e89b77d5ed71, 68666b17a633ffbd3e4267bb44faf85c9b1bd51c)</li></ul>",
      "This is a crazy new feature which would best live in a plugin. From my understanding you iterate back and find a year that matches the day-of-week? In any case the library is in strict maintenance-only state, so \"big\" (well medium) features like this are not ok."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9ee88dfb6b84f2427a4b",
    "number": 6110,
    "body": "We say Samedi 1er avril, but not Dimanche 2e avril.\r\nThe correct for should be Dimanche 2 avril.\r\n\r\nThis has been fixed in `fr.json` but not in `fr-ca.json`.\r\nFix #3375",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      " <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/6110/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-missing-id.svg\" alt=\"CLA Missing ID\" align=\"left\" height=\"28\" width=\"328\"></a> <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/6110/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-not-signed.svg\" alt=\"CLA Not Signed\" align=\"left\" height=\"28\" width=\"328\"></a><br/><br /><ul><li>:white_check_mark: login: mrleblanc101 / name: Sébastien LeBlanc  (bee7479046b093d6f9bea77d8f6783e5db4768ce)</li><li> :x: The email address for the commit (d164b56b2fb0e8a0f0d61fa69bb626e84f712283) is not linked to the GitHub account, preventing the EasyCLA check. Consult <a href='https://confluence.linuxfoundation.org/pages/viewpage.action?pageId=86641302' target='_blank'>this Help Article</a> and <a href='https://help.github.com/en/github/committing-changes-to-your-project/why-are-my-commits-linked-to-the-wrong-user' target='_blank'>GitHub Help</a> to resolve. (To view the commit's email address, add .patch at the end of this PR page's URL.) For further assistance with EasyCLA, <a href='https://jira.linuxfoundation.org/servicedesk/customer/portal/4' target='_blank'>please submit a support request ticket</a>.</li></ul>",
      "~~@mrleblanc101 I need some better proof about this (CLDR maybe). Also you need to change `src/locale/fr.js` and add tests~~\r\n\r\nOK, you're copying from `fr.js`. I guess that is fair. But you still need to modify the `src/locale/fr-ca.js` and fix tests.",
      "@ichernev Done",
      "Here are some issues I found while fixing the test :(\r\n\r\n1) The fix in `fr` that this PR copy in `fr-ca` might not even be entirely correct !\r\nIn french we say `1er février`, and `2 février` which this PR will fix.\r\nWe only use ordinals for the first day of the month, but there is an edge-case that the current moment.js API doesn't cover.\r\nSometime `Do` format should be `'er' or ''` and something it should be `'er' or 'e'`.\r\nHere is an exemple from the `test.js` file which is incorrect\r\n\r\nThe current output in `fr` (which would now be the behavior in `fr-ca`):\r\n```\r\n[\r\n    '[le] Do [jour du mois]', \r\n    'le 14 jour du mois'\r\n],\r\n```\r\nShould be in both `fr` and `fr-ca`:\r\n```\r\n[\r\n    '[le] Do [jour du mois]', \r\n    'le 14e jour du mois'\r\n],\r\n```\r\n\r\n2) This format is not correct, the day should come before the month in french.\r\nBut maybe it's intended so the test match between all locales ?\r\n\r\nThe current output:\r\n```\r\n[\r\n    'dddd, MMMM Do YYYY, h:mm:ss a',\r\n    'dimanche, février 14 2010, 3:25:50 pm',\r\n],\r\n```\r\nWhat the output should be:\r\n```\r\n[\r\n    'dddd, Do MMMM YYYY, h:mm:ss a',\r\n    'dimanche, 14 février 2010, 3:25:50 pm',\r\n],\r\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9ee98dfb6b84f2427a4c",
    "number": 6101,
    "body": "If the Date format is D. MMMM the wrong Case is used.\r\n\r\nI made the . (Dot) optional, so it will still match in both cases",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: idoodler / name: David  (831d53a9a1e1bcdf769f49827dde43ed4e617ccc)</li></ul>",
      "What is blocking here?",
      "Thanks for approving, I am doing such a structured merge request the first time. Do I need to do smth, or can I just wait?",
      "@anandfresh What is missing here?",
      "@idoodler @anandfresh @iconio what all of you is missing is that the auto-generated files should not be touched. The source is in `src/` (like `src/locale/pl.js`). Also you need to add tests."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9eea8dfb6b84f2427a4d",
    "number": 6097,
    "body": null,
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      " <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/6097/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-not-signed.svg\" alt=\"CLA Not Signed\" align=\"left\" height=\"28\" width=\"328\"></a><br/><br /><ul><li><a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/6097/#/?version=2' target='_blank'>:x:</a> - login: @zzztttkkk / name: ztk . The commit (6a822db03ed3225d5901c50c78ffc4482ad7728d) is not authorized under a signed CLA. <a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/6097/#/?version=2' target='_blank'>Please click here to be authorized</a>. For further assistance with EasyCLA, <a href='https://jira.linuxfoundation.org/servicedesk/customer/portal/4' target='_blank'>please submit a support request ticket</a>.</li></ul>"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9eeb8dfb6b84f2427a4e",
    "number": 6094,
    "body": "As a native speaker of this language, I am not pleased to read such a translation of the Uzbek language. Please accept my changes.",
    "head_branch": "locale/fix-uz-language",
    "is_a_fork": true,
    "comments": [
      "@ichernev ",
      "@Zukhrik first of all, you need to modify files in `src/locale/` folder. Then you need to fix/update tests. Lastly, I'd need a proof (from [CLDR](https://github.com/unicode-org/cldr/blob/release-44-1/common/main/)) that the changes make sense (I'm not a native speaker :))."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9eec8dfb6b84f2427a4f",
    "number": 6093,
    "body": null,
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: Zukhrik / name: Зухриддин Камильжанов  (e40cb8611d06df0c52a8946b6da34e501783b866)</li></ul>"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9eed8dfb6b84f2427a50",
    "number": 6086,
    "body": null,
    "head_branch": "contributing",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: anandfresh / name: Anandha Krishnan S  (7e09d94d4f5accc7971b7613227148f587b449b9)</li></ul>",
      "Eh, nobody reads anyway.\r\n\r\nMerged in 44f895bf "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9eee8dfb6b84f2427a51",
    "number": 6069,
    "body": "Minor change that should fix #4049 by returning a RFC 2822 compliant string",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: thomassth / name: Thomas Kam  (da2b7de017a5367de22851f357c1f327b1fdd3be)</li></ul>",
      "Thanks, but this was by design. The change would likely break more than it fixes, and should not be merged.\r\n\r\nSee https://github.com/moment/moment/issues/4049#issuecomment-1326816763"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9eef8dfb6b84f2427a52",
    "number": 6068,
    "body": null,
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "@CalbazaAlex you need to change `src/locale/ro.js` and update the tests."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9ef08dfb6b84f2427a53",
    "number": 6067,
    "body": "Note: I do not speak Dutch.\r\nPlease let someone who does review this. cc @middagj @jorisroling\r\n\r\nThe issue has been found using code checks (this triggers a CodeQL warning).\r\n\r\nThe problem is that `/^maart|mrt.?$/i,` matches `FOOBARmrtX`, which is likely unexpected.\r\n\r\nChanges introduced in this PR:\r\n * `mrt` now also must appear at the start of the string (consistent with `^jan`, `^feb` etc)\r\n * `maart` now must be a complete match, (`MAART` will match, `MAARTx` will not). \r\n    This is consistent with `/^jun[i.]?$/i` and `/^jul[i.]?$/i` below in the same array.\r\n    See note below.\r\n * '.?' (any char) replaced with `\\.` (dot), i.e. `mrtX` won't match, but `mrt.` will.\r\n    This is consistent with `/^jun[i.]?$/i` and `/^jul[i.]?$/i` below in the same array.\r\n\r\nI'm not certain if all of the above is correct, please recheck.\r\n\r\n---\r\n\r\nAlso, it's unclear why `monthsParse` seems to be inconsistent with `monthsRegex` and other regexes below re: `$` anchoring.\r\nE.g., `JULwhatever` will not match `monthsParse[6]` (as it's anchored at the end), but wll match `monthsRegex`\r\n\r\nAlso, in `monthsRegex`,\r\n```regex\r\n/^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december|jan\\.?|feb\\.?|mrt\\.?|apr\\.?|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i\r\n```\r\nis equivalent to\r\n```regex\r\n/^(maart|mei|jan|feb|mrt|apr|ju[nl]|aug|sep|okt|nov|dec)/i\r\n```\r\ne.g. `\\.?` are effectively noops as it's not anchored at the end.\r\nPerhaps it was meant to be anchored everywhere?\r\n\r\nThose issues are not covered in this PR.",
    "head_branch": "chalker/maart-regex",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: ChALkeR / name: Nikita Skovoroda  (607d84ec89690bfa8896be7620c9bd8283749803)</li></ul>",
      "As for the first issue, you are correct. It looks like we missed some backslashes and parenthesis.\r\n\r\nAs for the second, it has been a while since I touched this code, but if I look at it now, `monthsParse` and `monthsRegex` seems to serve a different purpose. `monthsRegex` is trying to search for a month in some text, so it needs to be more specific, whereas `monthsParse` you already know that your are dealing with a month. We had some improvements on the `.` when abbreviated, there seems to be some region differences were one is used to use the dot when abbreviated `11-nov.-2022` and the other isn't `11-nov-2022`. But you are right, that allowing the dot optional, means the regex isn't as specific anymore. I would propose this instead. \r\n\r\n```\r\n/^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december|(jan|feb|mrt|apr|ju[nl]|aug|sep|okt|nov|dec)([^A-Za-z]|$))/i\r\n```",
      "Merged in 386b57b1"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9ef18dfb6b84f2427a54",
    "number": 6066,
    "body": "`moment.js` does not support Odia (Oriya) - `or` locale.\r\nCloses [6050](https://github.com/moment/moment/issues/6050)\r\n\r\nAdditional context: Odia (Oriya) is spoken by nearly 50,000,000 people in the world.\r\nUsed Resources: https://scriptsource.org/cms/scripts/page.php?item_id=entry_detail&uid=e78ee6ssnm\r\n\r\nUnit Tests:\r\n\r\n\r\n<img width=\"598\" alt=\"moment_tests\" src=\"https://user-images.githubusercontent.com/1637551/201383981-84c1c2cd-de41-46b8-b97e-a7c0dd251445.png\">\r\n",
    "head_branch": "feat/locale_or",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: avireni  (4ac79f7cfcec4ee78fc6abee3d7f461b8e2398af, 6c93b45364657feb180a7675ea19a79c4d402bbd, 83626d4d43462862a11a2a24971b415e54b7c42e, 4c4072e79051b025fad0443f15f58e8dc7d8d22c)</li></ul>",
      "/easycla",
      "When can we expect this PR to get merged? We are looking to add this language to our product as well !\r\n\r\ncc @avireni ",
      "Hi Reviewing Team, Can this PR be reviewed and merged if it looks good. \r\nAdded support for `OR` locale and addressing requests for this locale's support.\r\n",
      "Is there anything blocking this PR from being merged?",
      "@anandfresh Can we please get this merged?",
      "@anandfresh Can we merge this PR. Its been pending for very long and @Kristin-at-Fountain wants to use this change.",
      "Can this PR be merged? Pending since almost a year now",
      "When I rebase and run the tests there are a bunch of issues. @avireni can you check.\r\n\r\n@Kristin-at-Fountain  @vpradhan-fountain moments is in maintenance mode. In good times I released once is 3 months. Now if you get it once per year you should be happy. In any case, adding a locale for your app/website is trivial -- just copy the code and load it after moment (you can even wrap a local moment import that imports the real moment and all external locales you like). This way you won't have to wait for random people on the internet to do something that they may or may not do (ever)."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9ef28dfb6b84f2427a55",
    "number": 6063,
    "body": "The problem was created in this [PR](https://github.com/moment/moment/pull/5749) and this PR fixes it.",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: indexxd  (daec4380866aef09ee7c18fb172950e5fcb41431)</li></ul>",
      "How can I help to merge this?",
      "Can someone fix this, how can I verify the checks?",
      "Whats the Status here?",
      "@indexxd  @idoodler already merged via https://github.com/moment/moment/pull/6191"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9ef38dfb6b84f2427a56",
    "number": 6061,
    "body": "Adds minimal translations for QLess' Kiosk Appointment Time selector.",
    "head_branch": "feature/QDEV-6334",
    "is_a_fork": true,
    "comments": [
      " <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/6061/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-not-signed.svg\" alt=\"CLA Not Signed\" align=\"left\" height=\"28\" width=\"328\"></a><br/><br /><ul><li><a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/6061/#/?version=2' target='_blank'>:x:</a> - login: @marioparris-qless / name: Mario Parris . The commit (12fd9520d228781a8fef9b1411ac8a2901738e11) is not authorized under a signed CLA. <a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/6061/#/?version=2' target='_blank'>Please click here to be authorized</a>. For further assistance with EasyCLA, <a href='https://jira.linuxfoundation.org/servicedesk/customer/portal/4' target='_blank'>please submit a support request ticket</a>.</li></ul>"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9ef48dfb6b84f2427a57",
    "number": 6057,
    "body": null,
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      " <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/6057/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-not-signed.svg\" alt=\"CLA Not Signed\" align=\"left\" height=\"28\" width=\"328\"></a><br/><br /><ul><li><a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/6057/#/?version=2' target='_blank'>:x:</a> - login: @richardk88 / name: Richard Kim . The commit (492250e9788363072a0b67812e26349b8d9b782d) is not authorized under a signed CLA. <a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/6057/#/?version=2' target='_blank'>Please click here to be authorized</a>. For further assistance with EasyCLA, <a href='https://jira.linuxfoundation.org/servicedesk/customer/portal/4' target='_blank'>please submit a support request ticket</a>.</li></ul>"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9ef58dfb6b84f2427a58",
    "number": 6055,
    "body": "My mission with this refactoring was to make it more readable and procedural. Not only it reduces 32 function calls, It's all in one place. All aliases in aliases.js file and all priorities in priorities.js file\r\n\r\n1. All the functions which were responsible for creating aliases from following files(comments are file names) have been moved to src/lib/units/aliases.js\r\n\r\n// src/lib/units/day-of-month.js\r\naddUnitAlias('date', 'D');\r\n// src/lib/units/day-of-week.js\r\naddUnitAlias('day', 'd');\r\naddUnitAlias('weekday', 'e');\r\naddUnitAlias('isoWeekday', 'E');\r\n// src/lib/units/day-of-year.js\r\naddUnitAlias('dayOfYear', 'DDD');\r\n// src/lib/units/hour.js\r\naddUnitAlias('hour', 'h');\r\n// src/lib/units/millisecond.js\r\naddUnitAlias('millisecond', 'ms');\r\n// src/lib/units/minute.js\r\naddUnitAlias('minute', 'm');\r\n// src/lib/units/month.js\r\naddUnitAlias('month', 'M');\r\n// src/lib/units/quarter.js\r\naddUnitAlias('quarter', 'Q');\r\n// src/lib/units/second.js\r\naddUnitAlias('second', 's');\r\n// src/lib/units/week-year.js\r\naddUnitAlias('weekYear', 'gg');\r\naddUnitAlias('isoWeekYear', 'GG');\r\n// src/lib/units/week.js\r\naddUnitAlias('week', 'w');\r\naddUnitAlias('isoWeek', 'W');\r\n// src/lib/units/year.js\r\naddUnitAlias('year', 'y');\r\n\r\n2. Ran all the functions and final result has been saved as \"aliases\" object in  src/lib/units/aliases.js.\r\n\r\n3. Commented out all the aliases creation functions in src/lib/units/aliases.js as we have final and known Object as a variable.\r\n\r\n4. All the functions which were responsible for creating priorities from following files(comments are file names) have been moved to src/lib/units/priorities.js\r\n\r\n// src/lib/units/day-of-month.js\r\naddUnitPriority('date', 9);\r\n// src/lib/units/day-of-week.js\r\naddUnitPriority('day', 11);\r\naddUnitPriority('weekday', 11);\r\naddUnitPriority('isoWeekday', 11);\r\n// src/lib/units/day-of-year.js\r\naddUnitPriority('dayOfYear', 4);\r\n// src/lib/units/hour.js\r\naddUnitPriority('hour', 13);\r\n// src/lib/units/millisecond.js\r\naddUnitPriority('millisecond', 16);\r\n// src/lib/units/minute.js\r\naddUnitPriority('minute', 14);\r\n// src/lib/units/month.js\r\naddUnitPriority('month', 8);\r\n// src/lib/units/quarter.js\r\naddUnitPriority('quarter', 7);\r\n// src/lib/units/second.js\r\naddUnitPriority('second', 15);\r\n// src/lib/units/week-year.js\r\naddUnitPriority('weekYear', 1);\r\naddUnitPriority('isoWeekYear', 1);\r\n// src/lib/units/week.js\r\naddUnitPriority('week', 5);\r\naddUnitPriority('isoWeek', 5);\r\n// src/lib/units/year.js\r\naddUnitPriority('year', 1);\r\n\r\n5. Ran all the functions and final result has been saved as \"priorities\" object in  src/lib/units/priorities.js.\r\n\r\n6. Commented out all the priorities creation functions in src/lib/units/aliases.js as we have final and known Object as a variable.",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: qzoke / name: Nirpendra Patel  (63c28d46b77dcae75f285d1f8f3c9bacad2dc9ef)</li></ul>",
      "@anandfresh Helllo sir,\r\nSorry for late reply. I didn't knew that you are a moderator. \r\n\r\n I removed comments as requested.. \r\n",
      "Merge in d6d5df7b"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9ef68dfb6b84f2427a59",
    "number": 6053,
    "body": "This pull request is to add a function to the moment object that allows quick formatting as APA / MLA date, to save time and remove a little bit of confusion in citing sources via code.",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: bdnswl  (3f20639071cb09d50e4ab1598c1972ef2210cb13)</li></ul>"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9ef78dfb6b84f2427a5a",
    "number": 6051,
    "body": "Adding `getMonthName()` method. Implemented as simple switch case and open to change requests and improvements of current code 🌻 \r\n**Issue**: https://github.com/moment/moment/issues/6044",
    "head_branch": "getMonthName_#6044",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: kruczyna / name: Victoria Kruczek  (be292a65315c6a76a48ec86702fe863871315a25)</li></ul>",
      "https://github.com/moment/moment/pull/6127#issuecomment-1858936598"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9ef88dfb6b84f2427a5b",
    "number": 6047,
    "body": "This PR improves translation in uzbek language.",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: asadullakkh / name: Asadbek Eshboev  (664038d94c101773ca0b1347448635c2506c9613, 547aa81cfa7682ef111c69b94686088105840f92)</li></ul>"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9ef98dfb6b84f2427a5c",
    "number": 6039,
    "body": "Submitting Issues\r\n=================\r\n\r\nIf you are submitting a bug, please create a [jsfiddle](http://jsfiddle.net/) demonstrating the issue.\r\n\r\nRead before submitting Pull Requests\r\n====================================\r\n\r\n * **Pull requests to the `master` branch will be closed.** Please submit all pull requests to the `develop` branch.\r\n * **You will be required to sign a JS Foundation CLA before your pull request can be merged.** [Sign it right now](https://cla.js.foundation/moment/moment).\r\n * **Locale translations will not be merged without unit tests.** See [the British English unit tests](https://github.com/moment/moment/blob/develop/src/test/locale/en-gb.js) for an example.\r\n * **Do not include the minified files in your pull request.** These are\r\n   `moment.js`, `locale/*.js`, `min/*.js`. Don't worry, we'll build them when\r\n   we cut a release.\r\n\r\nCode organization\r\n=================\r\n\r\nStarting from version 2.10.0 the code is placed under `src/`.\r\n`moment.js`, `locale/*.js`, `min/*.js` are generated only on release.\r\n\r\n**DO NOT** submit changes to the generated files. Instead only change\r\n`src/**/*.js` and run the tests.\r\n\r\n* `src/lib/**/*.js` moment core files\r\n* `src/locale/*.js` locale files\r\n* `src/test/moment/*.js` moment core tests\r\n* `src/test/locale/*.js` locale tests\r\n\r\nWe're using ES6 module system, but nothing else ES6, because of performance\r\nconsiderations (added code by the transpiler, less than optimal translation to\r\nES5). So please do not use that fancy new ES6 feature in your patch, it won't\r\nbe accepted.\r\n\r\nSetting up development environment\r\n==================================\r\n\r\nTo contribute, fork the library and install grunt and dependencies. You need\r\n[git](http://git-scm.com/) and\r\n[node](http://nodejs.org/); you might use\r\n[nvm](https://github.com/creationix/nvm) or\r\n[nenv](https://github.com/ryuone/nenv) to install node.\r\n\r\n```bash\r\ngit clone https://github.com/moment/moment.git\r\ncd moment\r\nnpm install -g grunt-cli\r\nnpm install\r\ngit checkout develop  # all patches against develop branch, please!\r\ngrunt                 # this runs tests, eslint and prettier-check\r\n```\r\n\r\nChanging locale files\r\n=====================\r\n\r\nIf you have any changes to existing locale files, `@mention` the original\r\nauthor in the pull request (check the top of the language file), and ask if\r\nhe/she approves of your changes. Because I don't know any languages I can't\r\njudge your locale changes, only the original author can :)\r\n\r\nIn order for your pull request to get merged it must have approval of original\r\nauthor, or at least one other native speaker has to approve of the change\r\n(happens rarely).\r\n\r\nGrunt tasks\r\n===========\r\n\r\nWe use Grunt for managing the build. Here are some useful Grunt tasks:\r\n\r\n  * `grunt` The default task lints the code and runs the tests. You should make sure you do this before submitting a PR.\r\n  * `grunt test` Run the tests.\r\n  * `grunt lint` Perform syntax and code style checks.\r\n  * `grunt release` Build everything, including minified files (do not include\r\n    those in Pull Requests)\r\n  * `grunt transpile:fr,ru` Build custom locale bundles `moment-with-locales.custom.js` and `locales.custom.js` inside `build/umd/min` containing just French and Russian.\r\n  * `grunt size` Print size statistics.\r\n\r\n**Note:** If the prompt message is `Code style issues found in the above file(s). Forgot to run Prettier?`, Please run `npm run prettier-fmt`. \r\n\r\nBecoming a moment team member\r\n=============================\r\n\r\nMoment's team members have extra powers and responsibilities. If you want to\r\nbecome one -- be active in our repositories by answering issues, reviewing PRs,\r\ndiscussing changes, submitting PRs for open bugs. Any help on\r\n[moment/moment](https://github.com/moment/moment),\r\n[moment/momentjs.com](https://github.com/moment/momentjs.com),\r\n[moment/moment-timezone](https://github.com/moment/moment-timezone) will be\r\nnoticed.\r\n\r\nOnce you've proven to be trustworthy, submit your request to the\r\n[gitter chat](https://gitter.im/moment/moment), and it will be reviewed by the\r\nexisting team.\r\n\r\nOnce you become a member:\r\n* you can tell your friends\r\n* you can close issues submitted by others\r\n\r\nBut also:\r\n* be active in the repositories\r\n* pick up work nobody else wants to\r\n* attend a monthly meeting\r\n* participate in the internal slack group",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      " <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/6039/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-not-signed.svg\" alt=\"CLA Not Signed\" align=\"left\" height=\"28\" width=\"328\"></a><br/><br /><ul><li><a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/6039/#/?version=2' target='_blank'>:x:</a> - login: @Watemlifts / name: Omony Denis . The commit (e3f9498bcc473e56cdce58214dc06f98e1ebb020) is not authorized under a signed CLA. <a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/6039/#/?version=2' target='_blank'>Please click here to be authorized</a>. For further assistance with EasyCLA, <a href='https://jira.linuxfoundation.org/servicedesk/customer/portal/4' target='_blank'>please submit a support request ticket</a>.</li></ul>",
      "If we are told about security issues, we release a new version. That's it. Contacting me is not complicated."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9efa8dfb6b84f2427a5d",
    "number": 6038,
    "body": "The automictic build fixes for any development moment",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      "This change is a bit big. I fixed the grunt pipeline, I see some other changes (changelog), you can submit those separately."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9efb8dfb6b84f2427a5e",
    "number": 6029,
    "body": "\r\nES6 modules cannot import js files without a suffix in the browser\r\n\r\n![截屏2022-07-22 16 12 05](https://user-images.githubusercontent.com/82657286/180395585-70cacd7c-a21b-4ebf-a216-db8ba6c2584a.png)\r\n\r\n<img width=\"767\" alt=\"截屏2022-07-22 16 15 23\" src=\"https://user-images.githubusercontent.com/82657286/180395396-eb86869a-6b3b-4ee5-b5ea-6e1d471e87f0.png\">\r\n\r\n<img width=\"405\" alt=\"截屏2022-07-22 16 15 59\" src=\"https://user-images.githubusercontent.com/82657286/180395461-6d8282cb-560e-416d-8226-458a39de69d1.png\">\r\n\r\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: Tansan-CC  (3b8f0a3a43f126948e7a9d196c6f5ad71a802014)</li></ul>",
      "I'm not sure about this. Can't you just import the locale and the core separately (and not depend on the locale to fetch the core). I haven't seen people import with .js just because of this."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9efc8dfb6b84f2427a5f",
    "number": 6023,
    "body": null,
    "head_branch": "pr/5930",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: TonyBogdanov / name: Tony Bogdanov  (dd7c2f20e943cc8227688b1187544fc81128784e)</li><li>:white_check_mark: login: yvettep321 / name: Yvette Patrick  (9179be7d0e1f356eb77cb62524cf7f17d342e953)</li></ul>",
      "There are 3 changes here:\r\n- short month names: won't accept (see here https://github.com/unicode-org/cldr/blob/main/common/main/bg.xml#L1539)\r\n- short weekday names: no CLDR entry there https://github.com/unicode-org/cldr/blob/main/common/main/bg.xml#L1646, then this is up to preference, so it's a no go\r\n- relative day offset (`дни`/`дена`) - https://kaksepishe.com/dni-dena/ both are correct, maybe `дни` is more popular\r\n\r\nSo I'm willing to merge the relative day offset, but you need to change the right files (under `src`) and also update the tests. Closing this for now, feel free to reopen if you address the issues.\r\n\r\nIn general, if you're not happy with moment locales, just customize them locally to your liking: https://momentjs.com/docs/#/customization/"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9efd8dfb6b84f2427a60",
    "number": 6018,
    "body": "Fixed for all german speaking countries.",
    "head_branch": "bug-fix",
    "is_a_fork": true,
    "comments": [
      " <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/6018/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-not-signed.svg\" alt=\"CLA Not Signed\" align=\"left\" height=\"28\" width=\"328\"></a><br/><br /><ul><li><a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/6018/#/?version=2' target='_blank'>:x:</a> - login: @OndrejHj04 / name: OndrejHj04 . The commit (5fabd26ee278b90a5eaab16aa15ac00234883cbe) is not authorized under a signed CLA. <a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/6018/#/?version=2' target='_blank'>Please click here to be authorized</a>. For further assistance with EasyCLA, <a href='https://jira.linuxfoundation.org/servicedesk/customer/portal/4' target='_blank'>please submit a support request ticket</a>.</li></ul>"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9efe8dfb6b84f2427a61",
    "number": 6015,
    "body": "Fixes: [#6012](https://github.com/moment/moment/issues/6012)\r\n\r\nUsing the \"look-ahead\" mechanism regex in `preprocessRFC2822()` to resolve the problem [Regular Expression Denial of Service (ReDoS)#6012](https://github.com/moment/moment/issues/6012)",
    "head_branch": "fix-redos-in-preprocessRFC2822",
    "is_a_fork": true,
    "comments": [
      "@vovikhangcdv can you explain a bit how this is being fixed?\r\n\r\nFrom the linked issue it looks like any open-close relationship that we have to track (not sure if there are more), has the same issue. Also is this compatible all the way back to Roman Empire JavaScript?",
      "Hi @ichernev,\r\nGreat to see your response. There are some things we need to clarify.\r\n\r\n----------\r\n\r\n> 1. How this is being fixed?\r\n\r\n**Firstly, look back to the original regex: `/\\([^)]*\\)|[\\n\\t]/g`.**\r\nThe hotspot is `\\([^)]*\\)`. The process would be, sequentially:\r\n\r\n![image](https://user-images.githubusercontent.com/45411113/173192511-2fc4d17b-db0f-4302-8fc3-3f8861adff6f.png)\r\n\r\n1. Try to match the `(` character.\r\n2. Try to match all those characters that are not `)`, **_as many times as possible (greedy)_**.\r\n3. Try to match the `)` character.\r\n\r\n\r\n\r\nThis process will be executed for the full input string and repeated with substring (remove the start character) until _match all the three steps_ **or** _all characters are checked_.\r\n\r\nConsider the evil payload format: `\"(\".repeat(X)` (the worst-case). This payload will exploit the greedy mechanism of step 2 and the backtracking mechanism of the failure matching process. \r\nFor each `(`, step 2 will check all the rest of the substring characters  (it costs `X - num_of_checked_substring` substeps) which certainly fails and the process has to backtrack and repeat for total X substrings. **This is a polynomial complexity problem.**\r\n\r\n\r\n**Now, look to the suggested fix: `/\\((?:(?!\\().)*\\)|[\\n\\t]/gs`.**\r\nThe hotspot (after remove a non-capture group `(?:)`) is:`\\(((?!\\().)*\\)`\r\n\r\n![image](https://user-images.githubusercontent.com/45411113/173192836-766784c4-be8b-4d2d-8b4b-e587855fbb56.png)\r\n\r\nThe matching process would be similar to the old regex, except that step 2 uses non-greedy searching but a \"look-ahead\" mechanism. It will immediately fail when it matches the second `(` characters (cost one step instead of `X - num_of_checked_substring` substeps like the above example). **It means the matching process only costs linear steps based on the length of the input string.**\r\n\r\n------------- \r\n\r\n> 2. There are a lot of regular expressions used in this project. Are there any similar issues in this project? How we can find and fix it?\r\n\r\nThe mission of `moment` is a third-party package that helps other projects and applications achieve their goals. I believe that eliminating all possible security vulnerabilities is crucial work for the community. Give a huge thank you and all the awesome contributors of this project. I see a lot of effort to reduce the risk of ReDos attack vector in the past (https://github.com/moment/moment/issues/2936, https://github.com/moment/moment/issues/4163, and other relative commits). After carefully looking at the codebase, this is the only ReDoS vulnerability left I could find. To prevent this kind of vulnerability in the future, we just need to carefully use efficient regexes. The [recheck](https://devina.io/redos-checker) (see [the online version](https://devina.io/redos-checker)) is a useful tool to check the complexity of regex, just make sure that only the safe or linear regexes should be used.\r\n\r\n---------------------------\r\n> 3. Is this compatible all the way back to Roman Empire JavaScript?\r\n \r\nI am not sure what you asking about. But if you are concerned about the compatibility of the fix, I have tested the fix and confirm that it passed _160,555_ test cases of unit tests. Or if I missing something, please let me know, and we will figure it out together.\r\n\r\n-----------------\r\nReferences: \r\n- [Regular expression Denial of Service - ReDoS (OWASP)](https://owasp.org/www-community/attacks/Regular_expression_Denial_of_Service_-_ReDoS)\r\n- [Protect Against Regex Denial Of Service - ReDoS](https://blog.logrocket.com/protect-against-regex-denial-of-service-redos-attacks/)\r\n- [Staicu, Cristian-Alexandru, and Michael Pradel. \"Freezing the Web: A Study of {ReDoS} Vulnerabilities in {JavaScript-based} Web Servers.\" 27th USENIX Security Symposium (USENIX Security 18). 2018.](https://www.usenix.org/conference/usenixsecurity18/presentation/staicu)",
      "Hi is there update to this fix? Thank you",
      "Hi @ichernev, could you review the PR?",
      "Hi @ichernev, any update for this PR? Thanks!",
      "Hey, sorry for the delay, I'll release a build in the coming days with the fix, I was a bit worried about the lookahead (if it was supported), but the current implementation uses whitelist, which is better.",
      "> Hey, sorry for the delay, I'll release a build in the coming days with the fix, I was a bit worried about the lookahead (if it was supported), but the current implementation uses whitelist, which is better.\r\n\r\nGood to see you back. If you can confirm the issue, could you validate my report on [Hunter](https://huntr.dev/bounties/f0952b67-f2ff-44a9-a9cd-99e0a87cb633/)?. It will help my work too. Thank you, @ichernev.",
      "How about we change `(/\\([^)]*\\)|[\\n\\t]/g` to `(/\\([^()]*\\)|[\\n\\t]/g`? As far as I get it you should avoid matching more open brackets, so we can just prevent that.",
      "@vovikhangcdv \r\n\r\nI can merge the fix with `[^()]`, I can give further attribution to you if necessary (i.e make a security advisory in github), for reporting it. I'll use your excellent description from a few comments above.",
      "Hey @ichernev,\r\nI can confirm your solution solves the security issue and work well. I have added a commit change from your suggestion.",
      "> @vovikhangcdv\r\n> \r\n> I can merge the fix with `[^()]`, I can give further attribution to you if necessary (i.e make a security advisory in github), for reporting it. I'll use your excellent description from a few comments above.\r\n\r\nAs a researcher, being credited on `moment` security advisory or assigned CVE is my pleasure. I would appreciate that. Thank you @ichernev.",
      "Reading through the specification of the date format, it looks like formally a comment (stuff in brackets) can have a nested comment inside:\r\n\r\n```\r\nFWS             =       ([*WSP CRLF] 1*WSP) /   ; Folding white space\r\n                        obs-FWS\r\n\r\nctext           =       NO-WS-CTL /     ; Non white space controls\r\n\r\n                        %d33-39 /       ; The rest of the US-ASCII\r\n                        %d42-91 /       ;  characters not including \"(\",\r\n                        %d93-126        ;  \")\", or \"\\\"\r\n\r\nccontent        =       ctext / quoted-pair / comment\r\n\r\ncomment         =       \"(\" *([FWS] ccontent) [FWS] \")\"\r\n\r\nCFWS            =       *([FWS] comment) (([FWS] comment) / FWS)\r\n```\r\n\r\nnote how `comment` includes `ccontent` which might include `comment`. Also note that CFWS is part of the `obs-` tokens, short for _obsolete_, so if this was obsolete in 2001 it might be safe to move on :)\r\n\r\nTo be fair, the Ruby standard library fails to parse dates with comments, so I'm not 100% sure we should deal with this crap. But if we do, there should be code to track open/closed parenthesis, if there is anything unbalanced the parsing should fail (because there are no brackets allowed in the actual string). This code is linear, so won't introduce bottlenecks.\r\n\r\nIf we keep the current comment approach (disallow open and close paren inside comment), it will \"capture\" (and remove) only the inner most comment, and the parsing will fail if there are nested comments (which, given the legacy-ness of all of this might be fine :)).",
      "Yeh, I had noticed about nested comment in RFC2822 when trying to fix the issue before and was quite struggling with it :)). But looking at the old version of what `moment` did, I thought that was intended ignoring and done the same way :).",
      "Advisory link: https://github.com/moment/moment/security/advisories/GHSA-wc69-rhjr-hc9g",
      "@ichernev - would it be possible to add the following [report URL](https://huntr.dev/bounties/f0952b67-f2ff-44a9-a9cd-99e0a87cb633/) to the advisory?"
    ],
    "commit_messages": [
      "[bugfix] Fix redos in preprocessRFC2822 regex (#6015)\n\n* fix ReDoS in preprocessRFC2822 regex\r\n\r\nFixes: [#2936](https://github.com/moment/moment/issues/6012)\r\n\r\nDisallow nested rfc2822 comments to prevent quadratic regex execution time (i.e each open bracket is considered at most twice)."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9eff8dfb6b84f2427a62",
    "number": 6013,
    "body": "Fixes: [#6012](https://github.com/moment/moment/issues/6012)\r\n\r\nDirectly match the comment tokens in preprocessRFC2822 regex to resolve the problem [Regular Expression Denial of Service (ReDoS)#6012](https://github.com/moment/moment/issues/6012)",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: vovikhangcdv / name: Khang Vo (doublevkay)  (dc0d180e90d8a84f7ff13572363330a22b3ea504, 2efdc324ce75c54ce927dd8be526f9d57252dc8e)</li></ul>",
      "This fix is not fully supported all characters in the comment token. See https://github.com/moment/moment/pull/6015 for a more efficient solution using local backtracking regex."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f008dfb6b84f2427a63",
    "number": 6011,
    "body": "Fixes issue https://github.com/moment/moment/issues/5854",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: marleneheinzle / name: Marlene Heinzle  (7171c37661ccab51d8b0125c7f7ea7c3ab851892)</li></ul>"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f018dfb6b84f2427a64",
    "number": 6010,
    "body": "- About the ckb rename: The reason for the rename is that the wrong code was picked for Central Kurdish when it was added first.\r\n\r\nRelated discussions: #5895, #5968\r\n\r\nThis is the successor of #6006, as it was closed unexpectedly. \r\n\r\nCo-Authored-By: CYAXXX <CYAXXX@users.noreply.github.com>\r\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f028dfb6b84f2427a65",
    "number": 6006,
    "body": "- About the ckb rename: The reason for the rename is that the wrong code was picked for Central Kurdish when it was added first.\r\n\r\nRelated discussions: #5895, #5968\r\n\r\nCo-Authored-By: CYAXXX <CYAXXX@users.noreply.github.com>",
    "head_branch": "ku",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: roj1512 / name: Roj  (5f9d1bf6a03d5755e10ec9de883cdb57ff966366, a6136ac0c87bf0f176387f91fb1b6d25f09b8164)</li></ul>"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f038dfb6b84f2427a66",
    "number": 6000,
    "body": "This pull request will add Pashto language locale to moment.js, which is spoken by around 30 millions people in Afghanistan",
    "head_branch": "add-pashto-afg",
    "is_a_fork": true,
    "comments": [
      " <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/6000/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-missing-id.svg\" alt=\"CLA Missing ID\" align=\"left\" height=\"28\" width=\"328\"></a> <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/6000/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-not-signed.svg\" alt=\"CLA Not Signed\" align=\"left\" height=\"28\" width=\"328\"></a><br/><br /><ul><li> :x: The commit (4a3128e120beb0cf92a1b4105220299100cae0fe). This user is missing the User's ID, preventing the EasyCLA check. <a href='https://help.github.com/en/github/committing-changes-to-your-project/why-are-my-commits-linked-to-the-wrong-user' target='_blank'>Consult GitHub Help</a> to resolve.For further assistance with EasyCLA, <a href='https://jira.linuxfoundation.org/servicedesk/customer/portal/4' target='_blank'>please submit a support request ticket</a>.</li></ul>"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f048dfb6b84f2427a67",
    "number": 5997,
    "body": "Move to oomphinc/composer-installers-extender",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      " <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/5997/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-not-signed.svg\" alt=\"CLA Not Signed\" align=\"left\" height=\"28\" width=\"328\"></a><br/><br /><ul><li><a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/5997/#/?version=2' target='_blank'>:x:</a> - login: @romaten1 / name: Roman . The commit (7ac01b98c421a06d4f908ffb0617e00defa8c15b) is not authorized under a signed CLA. <a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/5997/#/?version=2' target='_blank'>Please click here to be authorized</a>. For further assistance with EasyCLA, <a href='https://jira.linuxfoundation.org/servicedesk/customer/portal/4' target='_blank'>please submit a support request ticket</a>.</li></ul>"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f058dfb6b84f2427a68",
    "number": 5995,
    "body": "PR #5742 added `const` usage that is creating dist files containing ES6 syntax, possibly breaking some environments.\r\n\r\nFirst \"bugged\" version is 2.29.2. Last working version is 2.29.1.",
    "head_branch": "fix/remove-es6-const-usage",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: theboolean / name: Lorenzo Cesana  (0de00440a4d1d4f4f7557f9f2d9c48ac26bc1545)</li></ul>",
      "Thank you @theboolean I'll try to push out 2.29.3 this weekend!",
      "Was curious what caused this... Kindle! - Makes sense - thanks for fixing it. :)"
    ],
    "commit_messages": [
      "[bugfix] Remove const usage (#5995)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f068dfb6b84f2427a69",
    "number": 5993,
    "body": "This PR improves the weekdaysMin for brazilian portuguese.",
    "head_branch": "fixes-pt-br-weekdaysMin",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: jonashenrique90 / name: Jonas Rodrigues  (39a4d62fb74eb1081590a2179ab1ded6447d9f9b)</li></ul>",
      "That's not acceptable. You can not have the same letter for different weekdays. Also it doesn't aggree with CLDR: https://github.com/unicode-org/cldr/blob/main/common/main/pt.xml#L2073"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f078dfb6b84f2427a6a",
    "number": 5990,
    "body": null,
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: attritionorg / name: Jericho  (98b36c91490d204d3a330787277a68267db1bf9d)</li></ul>"
    ],
    "commit_messages": [
      "misc: fix advisory link (#5990)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f088dfb6b84f2427a6b",
    "number": 5987,
    "body": "There is an edge case  in isLocaleNameSane function.\r\nthis happens if you pass an undefined value as locale name to a function which uses loadLocale\r\nthe function throws an error\r\n\"cannot read property match of undefined\".\r\nAdded a validation of the locale name for this case.",
    "head_branch": "bugfix/undefined-locale-name",
    "is_a_fork": true,
    "comments": [
      " <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/5987/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-not-signed.svg\" alt=\"CLA Not Signed\" align=\"left\" height=\"28\" width=\"328\"></a><br/><br /><ul><li><a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/5987/#/?version=2' target='_blank'>:x:</a> - login: @EdenEdk / name: Eden Katabi . The commit (faeb01a52f83494ab5e9ecbe6307b96ae510c1f1) is not authorized under a signed CLA. <a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/5987/#/?version=2' target='_blank'>Please click here to be authorized</a>. For further assistance with EasyCLA, <a href='https://jira.linuxfoundation.org/servicedesk/customer/portal/4' target='_blank'>please submit a support request ticket</a>.</li></ul>",
      "@EdenEdk can you please sign the CLA?\r\n\r\nAlso what is the usecase of passing an undefined locale? What should (did) happen in this case?",
      "Merge in #6128"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f098dfb6b84f2427a6c",
    "number": 5972,
    "body": "There are occasionally a few “weird days” (e.g. in the beginning of 2022) where the week numbers in various methods don’t line up because `Moment.js` is internally working with ISO-8601 week numbers whereas the default locale is `EN_US`. This is intentional behaviour.\r\n\r\nISO-8601 defines that\r\n- the week starts on monday and\r\n- the first week of a year is the one with the first thursday\r\n\r\nThe `EN_US`-locale defines that\r\n- the week starts on sunday and\r\n- the first week of a year is the one with “January 1st”\r\n\r\nThis discrepancy between definitions means that developers using `Moment.js` are possibly unaware of the implementation differences. This commit adds a test which is expected to confirm developers’ knowledge regarding the API contract on this particular instance.\r\n",
    "head_branch": "wip/weird-weeks",
    "is_a_fork": true,
    "comments": [
      "It looks like this PR has been stuck in `Waiting for status to be reported` -state since January.\r\n\r\nSince I don't feel comfortable adding any unnecessary dummy-commits to retrigger the automation; any suggestions how to proceed?",
      "@DiscoNova thanks for the tests. Saying moment devs are not aware of different week handling, when every single locale has a specific start-of-week (dow) and first-week-of-year (doy) handling is misguided.\r\n\r\nWe just have ISO week (day, number of week) and locale-week (day, number of week) methods/formats. You should use the want that suits your needs.",
      "We have a ton of tests for that: `src/test/moment/weekday.js`. We check a lot of dow/doy combinations."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f0a8dfb6b84f2427a6d",
    "number": 5971,
    "body": "In the beginning of 2022, there are a few “weird days” where week numbers don’t line up because of `Moment.js` internally working with ISO-8601 week numbers whereas the default locale is `EN_US`.\r\n\r\nISO-8601 defines that\r\n- the week starts on monday and\r\n- the first week of a year is the one with the first thursday\r\n\r\nThe `EN_US`-locale defines that\r\n- the week starts on sunday and\r\n- the first week of a year is the one with “January 1st”\r\n\r\nThis discrepancy between definitions means that developers using `Moment.js` are possibly unaware of the implementation differences. This commit adds a test which is expected to confirm developers’ knowledge regarding the API contract on this particular instance.",
    "head_branch": "wip/weird-weeks",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/5971/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-not-signed.svg\" alt=\"CLA Not Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br /><ul><li> :x: The commit (6bb2733426b649de4cc60af2ccf8fdae68e9c868) is missing the User's ID, preventing the EasyCLA check. <a href='https://help.github.com/en/github/committing-changes-to-your-project/why-are-my-commits-linked-to-the-wrong-user' target='_blank'>Consult GitHub Help</a> to resolve.For further assistance with EasyCLA, <a href='https://jira.linuxfoundation.org/servicedesk/customer/portal/4' target='_blank'>please submit a support request ticket</a>.</li></ul>"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f0a8dfb6b84f2427a6e",
    "number": 5970,
    "body": "In the beginning of 2022, there are a few “weird days” where week numbers don’t line up because of `Moment.js` internally working with ISO-8601 week numbers whereas the default locale is `EN_US`.\r\n\r\nISO-8601 defines that\r\n- the week starts on monday and\r\n- the first week of a year is the one with the first thursday\r\n\r\nThe `EN_US`-locale defines that\r\n- the week starts on sunday and\r\n- the first week of a year it the one with “January 1st”\r\n\r\nThis discrepancy between definitions means that developers using `Moment.js` are possibly unaware of the implementation differences. This commit adds a test which is expected to confirm developers’ knowledge regarding the API contract on this particular instance.",
    "head_branch": "wip/weird-weeks",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/5970/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-not-signed.svg\" alt=\"CLA Not Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br /><ul><li> :x: The commit (36c4ac308a9e1a2d29341caae80532267d86870f) is missing the User's ID, preventing the EasyCLA check. <a href='https://help.github.com/en/github/committing-changes-to-your-project/why-are-my-commits-linked-to-the-wrong-user' target='_blank'>Consult GitHub Help</a> to resolve.For further assistance with EasyCLA, <a href='https://jira.linuxfoundation.org/servicedesk/customer/portal/4' target='_blank'>please submit a support request ticket</a>.</li></ul>",
      "\n[![Coverage Status](https://coveralls.io/builds/45877659/badge)](https://coveralls.io/builds/45877659)\n\nCoverage increased (+0.02%) to 88.458% when pulling **05f0bf5b77b2a964f22dd52b2ba8f135d7346656 on DiscoNova:wip/weird-weeks** into **e96809208c9d1b1bbe22d605e76985770024de42 on moment:develop**.\n",
      "<a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/5970/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-not-signed.svg\" alt=\"CLA Not Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br /><ul><li> :x: The commit (36c4ac308a9e1a2d29341caae80532267d86870f) is missing the User's ID, preventing the EasyCLA check. <a href='https://help.github.com/en/github/committing-changes-to-your-project/why-are-my-commits-linked-to-the-wrong-user' target='_blank'>Consult GitHub Help</a> to resolve.For further assistance with EasyCLA, <a href='https://jira.linuxfoundation.org/servicedesk/customer/portal/4' target='_blank'>please submit a support request ticket</a>.</li></ul>",
      "<a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/5970/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-not-signed.svg\" alt=\"CLA Not Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br /><ul><li> :x: The commit (3c26deee22134a9c4af9c4456302e905e6bf9d58) is missing the User's ID, preventing the EasyCLA check. <a href='https://help.github.com/en/github/committing-changes-to-your-project/why-are-my-commits-linked-to-the-wrong-user' target='_blank'>Consult GitHub Help</a> to resolve.For further assistance with EasyCLA, <a href='https://jira.linuxfoundation.org/servicedesk/customer/portal/4' target='_blank'>please submit a support request ticket</a>.</li></ul>",
      "<a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/5970/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-not-signed.svg\" alt=\"CLA Not Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br /><ul><li> :x: The commit (05f0bf5b77b2a964f22dd52b2ba8f135d7346656) is missing the User's ID, preventing the EasyCLA check. <a href='https://help.github.com/en/github/committing-changes-to-your-project/why-are-my-commits-linked-to-the-wrong-user' target='_blank'>Consult GitHub Help</a> to resolve.For further assistance with EasyCLA, <a href='https://jira.linuxfoundation.org/servicedesk/customer/portal/4' target='_blank'>please submit a support request ticket</a>.</li></ul>",
      "<a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/5970/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-not-signed.svg\" alt=\"CLA Not Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br /><ul><li> :x: The commit (f78c7e7be8a615fe3baea2ae4378cf4a7c48dcd5) is missing the User's ID, preventing the EasyCLA check. <a href='https://help.github.com/en/github/committing-changes-to-your-project/why-are-my-commits-linked-to-the-wrong-user' target='_blank'>Consult GitHub Help</a> to resolve.For further assistance with EasyCLA, <a href='https://jira.linuxfoundation.org/servicedesk/customer/portal/4' target='_blank'>please submit a support request ticket</a>.</li></ul>",
      "Umm... linux-foundation-easycla .. I've signed that multiple times and it still is reporting \"Missing CLA Authorization\"? Seriously! What gives?",
      "<a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/5970/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-not-signed.svg\" alt=\"CLA Not Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br /><ul><li> :x: The commit (f78c7e7be8a615fe3baea2ae4378cf4a7c48dcd5 ,6275c772f3af555a90019a70d4adf349d3d7ba46) is missing the User's ID, preventing the EasyCLA check. <a href='https://help.github.com/en/github/committing-changes-to-your-project/why-are-my-commits-linked-to-the-wrong-user' target='_blank'>Consult GitHub Help</a> to resolve.For further assistance with EasyCLA, <a href='https://jira.linuxfoundation.org/servicedesk/customer/portal/4' target='_blank'>please submit a support request ticket</a>.</li></ul>",
      "<a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/5970/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-not-signed.svg\" alt=\"CLA Not Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br /><ul><li> :x: The commit (f78c7e7be8a615fe3baea2ae4378cf4a7c48dcd5 ,e2646574bcefcfb810f4fed89cd68946ce5b738c) is missing the User's ID, preventing the EasyCLA check. <a href='https://help.github.com/en/github/committing-changes-to-your-project/why-are-my-commits-linked-to-the-wrong-user' target='_blank'>Consult GitHub Help</a> to resolve.For further assistance with EasyCLA, <a href='https://jira.linuxfoundation.org/servicedesk/customer/portal/4' target='_blank'>please submit a support request ticket</a>.</li></ul>",
      "<a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/5970/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-not-signed.svg\" alt=\"CLA Not Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br /><ul><li> :x: The commit (6bb2733426b649de4cc60af2ccf8fdae68e9c868) is missing the User's ID, preventing the EasyCLA check. <a href='https://help.github.com/en/github/committing-changes-to-your-project/why-are-my-commits-linked-to-the-wrong-user' target='_blank'>Consult GitHub Help</a> to resolve.For further assistance with EasyCLA, <a href='https://jira.linuxfoundation.org/servicedesk/customer/portal/4' target='_blank'>please submit a support request ticket</a>.</li></ul>",
      "> In the beginning of 2022, there are a few “weird days” where week numbers don’t line up because of `Moment.js` internally working with ISO-8601 week numbers whereas the default locale is `EN_US`.\n> \n> ISO-8601 defines that\n> - the week starts on monday and\n> - the first week of a year is the one with the first thursday\n> \n> The `EN_US`-locale defines that\n> - the week starts on sunday and\n> - the first week of a year it the one with “January 1st”\n> \n> This discrepancy between definitions means that developers using `Moment.js` are possibly unaware of the implementation differences. This commit adds a test which is expected to confirm developers’ knowledge regarding the API contract on this particular instance.\n\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f0b8dfb6b84f2427a6f",
    "number": 5968,
    "body": "Renaming the current file from ku.js to ckb.js allow us publish ku.js cause that one isn't for general kurdish language it's for sorani speakers, not for kurmanji speakers neither for other dialects",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: CYAXXX / name: Cx  (653e6a692c3f9c725de7cb9bae1edc027fa31019)</li></ul>",
      "\n[![Coverage Status](https://coveralls.io/builds/45814315/badge)](https://coveralls.io/builds/45814315)\n\nCoverage increased (+0.06%) to 88.499% when pulling **653e6a692c3f9c725de7cb9bae1edc027fa31019 on CYAXXX:patch-1** into **e96809208c9d1b1bbe22d605e76985770024de42 on moment:develop**.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f0c8dfb6b84f2427a70",
    "number": 5965,
    "body": "LT and LTS currently use colons to separate hours, minutes and seconds, but the correct way is to use periods instead.\r\n\r\nReference: Institute of the Estonian Language\r\nhttp://www.eki.ee/books/ekk09/index.php?id=74&p=2&p1=10\r\n\r\n@madhenry and @ragulka are tagged as the original authors of this file, can you confirm?",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers are authorized under a signed CLA.<ul><li>:white_check_mark:  Raimond Lume (ff6ec2a7f1c125d7e1e99c936aead275c292776e, 89779a709669cb927f6e2c4adc8fcb3217aa3e4d)</li></ul>",
      "\n[![Coverage Status](https://coveralls.io/builds/45564268/badge)](https://coveralls.io/builds/45564268)\n\nCoverage increased (+0.06%) to 88.499% when pulling **89779a709669cb927f6e2c4adc8fcb3217aa3e4d on raimondlume:patch-1** into **e96809208c9d1b1bbe22d605e76985770024de42 on moment:develop**.\n",
      "> LT and LTS currently use colons to separate hours, minutes and seconds, but the correct way is to use periods instead\r\n\r\nThis looks odd. I've never seen periods used as separators when writing time in Estonian (and I'm local!). However, EKI seems to confirm periods. However, they do point out that colons are used for international formats, although it's unclear what this means: are they referring to a specific international format, or are they saying that writing time in Estonian for an international audience requires the use of colon?\r\n\r\nIn any case, I would defer to the Unicode Locale Data Repository in this instance, which is used by native Internationalization APIs (for ex: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl). All of the time formats listed  for Estonian use colons: https://unicode-org.github.io/cldr-staging/charts/40/summary/et.html#1b89d7c2d516faca",
      "> This looks odd. I've never seen periods used as separators when writing time in Estonian (and I'm local!). However, EKI seems to confirm periods. However, they do point out that colons are used for international formats, although it's unclear what this means: are they referring to a specific international format, or are they saying that writing time in Estonian for an international audience requires the use of colon?\r\n\r\nFor me (also a local) the period-variant has always been the most common type, but this seems to be highly subjective. As with many things in Estonian - both ways are grammatically correct, use whichever you desire.\r\n\r\n> In any case, I would defer to the Unicode Locale Data Repository in this instance, which is used by native Internationalization APIs (for ex: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl). All of the time formats listed for Estonian use colons: https://unicode-org.github.io/cldr-staging/charts/40/summary/et.html#1b89d7c2d516faca\r\n\r\nI agree on this, defering from ULDR wouldn't be wise, didn't cross-reference before opening the PR."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f0d8dfb6b84f2427a71",
    "number": 5959,
    "body": "Hello, greetings from Luxembourg.\r\nI added a new locale in hope to use it in our calendar, which is using visjs/vis-timeline (only supports moment.js) and other projects.\r\n\r\nTests worked fine\r\n\r\nGlobal summary:\r\n┌───────┬───────┬────────────┬────────┬────────┬─────────┐\r\n│ Files │ Tests │ Assertions │ Failed │ Passed │ Runtime │\r\n├───────┼───────┼────────────┼────────┼────────┼─────────┤\r\n│ 1     │ 3842  │ 161735     │ 0      │ 161735 │ 7688    │\r\n└───────┴───────┴────────────┴────────┴────────┴─────────┘\r\n`",
    "head_branch": "locale/lu",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/19772872/1424470/5959/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-not-signed.svg\" alt=\"CLA Not Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br /><ul><li> :x: The commit (6085f693252864db66e5cca6f268fa8f417a9adf ,d4c450989f4a3b81c6fa91bd403d760f31588e5a) is missing the User's ID, preventing the EasyCLA check. <a href='https://help.github.com/en/github/committing-changes-to-your-project/why-are-my-commits-linked-to-the-wrong-user' target='_blank'>Consult GitHub Help</a> to resolve.For further assistance with EasyCLA, <a href='https://jira.linuxfoundation.org/servicedesk/customer/portal/4' target='_blank'>please submit a support request ticket</a>.</li></ul>",
      "\n[![Coverage Status](https://coveralls.io/builds/44996500/badge)](https://coveralls.io/builds/44996500)\n\nCoverage increased (+0.07%) to 88.503% when pulling **d1779452ae4f79f5e4ec073e1ed0fcdf70818f31 on TheMauricelux:locale/lu** into **e96809208c9d1b1bbe22d605e76985770024de42 on moment:develop**.\n",
      "I see there is already a luxemburgish in locale under LB"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f0e8dfb6b84f2427a72",
    "number": 5949,
    "body": "Hi. Added new locale. Executed tests. All tests passed.\r\n\r\n> Running \"qtest\" task\r\n> Deprecation warning: testing deprecation\r\n> Arguments:\r\n> Error\r\n>     at C:\\xampp\\htdocs\\moment2\\moment\\build\\umd\\test\\moment\\deprecate.js:175:25\r\n>     at Object.<anonymous> (C:\\xampp\\htdocs\\moment2\\moment\\build\\umd\\test\\moment\\deprecate.js:193:9)\r\n>     at runTest (C:\\xampp\\htdocs\\moment2\\moment\\node_modules\\node-qunit\\node_modules\\qunit\\qunit\\qunit.js:2411:35)\r\n>     at Test.run (C:\\xampp\\htdocs\\moment2\\moment\\node_modules\\node-qunit\\node_modules\\qunit\\qunit\\qunit.js:2394:9)\r\n>     at C:\\xampp\\htdocs\\moment2\\moment\\node_modules\\node-qunit\\node_modules\\qunit\\qunit\\qunit.js:2645:16\r\n>     at processTaskQueue (C:\\xampp\\htdocs\\moment2\\moment\\node_modules\\node-qunit\\node_modules\\qunit\\qunit\\qunit.js:1966:26)\r\n>     at C:\\xampp\\htdocs\\moment2\\moment\\node_modules\\node-qunit\\node_modules\\qunit\\qunit\\qunit.js:1970:13\r\n> \r\n> Global summary:\r\n> ┌───────┬───────┬────────────┬────────┬────────┬─────────┐\r\n> │ Files │ Tests │ Assertions │ Failed │ Passed │ Runtime │\r\n> ├───────┼───────┼────────────┼────────┼────────┼─────────┤\r\n> │ 1     │ 3845  │ 161817     │ 0      │ 161817 │ 18080   │\r\n> └───────┴───────┴────────────┴────────┴────────┴─────────┘\r\n> ",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers are authorized under a signed CLA.<ul><li>:white_check_mark:  MergeSoft (f6af28bbd5af2fcd6209cd3fe5504b49a5c0ca8a)</li></ul>",
      "\n[![Coverage Status](https://coveralls.io/builds/43826101/badge)](https://coveralls.io/builds/43826101)\n\nCoverage increased (+0.07%) to 88.508% when pulling **de22d8727946f9f95103b61c36c5dd32096b89cb on mergehez:develop** into **e96809208c9d1b1bbe22d605e76985770024de42 on moment:develop**.\n",
      "Merged in e9ad6e244072bd8166019cef8aaad311f5a51b66"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f0f8dfb6b84f2427a73",
    "number": 5943,
    "body": "Capitalized months (January, February, ...) and weekdays (Sunday, Monday, ...) the same way as in English would be much better. In Swedish locale, there is everything with small letters, so the output of Momentjs would need to be capitalized after, which is additional post-processing. I did not find some capitalize formatting option.\r\n\r\nPlease review @ulmus \r\nThank you",
    "head_branch": "locale/swedish-capitalize",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers are authorized under a signed CLA.<ul><li>:white_check_mark:  Martin Lučka (ec9b9d310728e8274b104730d456e86e7f9ca60a)</li></ul>",
      "In Swedish, weekdays and months are not capitalized like they are in English",
      "\n[![Coverage Status](https://coveralls.io/builds/43325064/badge)](https://coveralls.io/builds/43325064)\n\nCoverage increased (+0.06%) to 88.499% when pulling **6a99a861f7af481045f8fff1b07540afcf5b2645 on webinoo:locale/swedish-capitalize** into **e96809208c9d1b1bbe22d605e76985770024de42 on moment:develop**.\n",
      "> In Swedish, weekdays and months are not capitalized like they are in English\r\n\r\nOk, you're right, i was wrong. Thank you"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f108dfb6b84f2427a74",
    "number": 5934,
    "body": "bug Adding an OR condition when moment.weekdays receive a string value as parameters",
    "head_branch": "bugfix/weekdays-with-string",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/42938119/badge)](https://coveralls.io/builds/42938119)\n\nCoverage increased (+0.09%) to 88.526% when pulling **04a3b28256507997ee4cfe3130b04cb777a8e8ba on guimap:bugfix/weekdays-with-string** into **e96809208c9d1b1bbe22d605e76985770024de42 on moment:develop**.\n",
      "There's 200 changes because i had to run `linter-formatter` to fix all linter into localefolder for then travis accept my commit",
      "I could sign the CLA, how can i do that? Anyone can help me ? ",
      "/easycla",
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers are authorized under a signed CLA.<ul><li>:white_check_mark:  Guilherme Rodrigues (a88f83c621ff34b99946fa85a140b621c4813a64, b79db1a72a898830af1e9ca6c15139fd10a67d35, 3f8024be2335370c07af11ce0ec45f5d147548bb, c9c205987a4507730da5a1169f932a24cec0e71d, 04a3b28256507997ee4cfe3130b04cb777a8e8ba)</li></ul>",
      "/easycla",
      "@guimap can you provide an example where the bug manifests? Also I'd rather just merge the 2 lines that fix the bug, don't worry about Travis, I hate when you have to make code \"worse\" to make it \"better\".",
      "Hi @ichernev, sorry for the late \r\nI mentioned here in this issue an example \r\nhttps://github.com/moment/moment/issues/5933\r\n\r\nBasically, the value changes depending of type props\r\n![example](https://user-images.githubusercontent.com/6060537/133685341-db624c3b-992f-4412-af87-b1d72be8fff9.png)",
      "This is the typing spec of the function\r\n\r\n```\r\n  export function weekdays(): string[];\r\n  export function weekdays(index: number): string;\r\n  export function weekdays(format: string): string[];\r\n  export function weekdays(format: string, index: number): string;\r\n  export function weekdays(localeSorted: boolean): string[];\r\n  export function weekdays(localeSorted: boolean, index: number): string;\r\n  export function weekdays(localeSorted: boolean, format: string): string[];\r\n  export function weekdays(localeSorted: boolean, format: string, index: number): string;\r\n```\r\n\r\nYou're not supposed to pass a number as string (it treats it as format?).\r\n\r\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f118dfb6b84f2427a75",
    "number": 5932,
    "body": ":bug: Adding an OR condition when moment.weekdays receive a string value as parameters",
    "head_branch": "weekdays-with-string",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/42935364/badge)](https://coveralls.io/builds/42935364)\n\nCoverage increased (+0.09%) to 88.526% when pulling **a88f83c621ff34b99946fa85a140b621c4813a64 on guimap:weekdays-with-string** into **e96809208c9d1b1bbe22d605e76985770024de42 on moment:develop**.\n",
      "I Will open another PR ",
      "#5934 "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f128dfb6b84f2427a76",
    "number": 5930,
    "body": "- Both (`дена` / `дни`) forms are correct, but the `дни` one is more common, see: https://ibl.bas.bg/ezikovi_spravki/dva-dena-ili-dva-dni/\r\n- Officially day/month name abbreviations *cannot* end with a vowel and should commonly be suffixed with a period: https://ibl.bas.bg/ezikovi_spravki/ima-li-ofitsialno-pravilo-za-sakrateni-imena-na-mesetsite-na-balgarski/",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/42784342/badge)](https://coveralls.io/builds/42784342)\n\nCoverage increased (+0.06%) to 88.499% when pulling **dd7c2f20e943cc8227688b1187544fc81128784e on TonyBogdanov:patch-1** into **e96809208c9d1b1bbe22d605e76985770024de42 on moment:develop**.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f138dfb6b84f2427a77",
    "number": 5924,
    "body": "it's for northern kurdish",
    "head_branch": "patch-5",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/42275172/badge)](https://coveralls.io/builds/42275172)\n\nCoverage increased (+0.09%) to 88.525% when pulling **46eac40c2cf3a8baad8468d56272b3d086badcc8 on CYAXXX:patch-5** into **e96809208c9d1b1bbe22d605e76985770024de42 on moment:develop**.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f148dfb6b84f2427a78",
    "number": 5912,
    "body": "Oh. I think this is a fix that many people will like.\r\n\r\nNote: Case style based on en-gb locale",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/41414361/badge)](https://coveralls.io/builds/41414361)\n\nCoverage increased (+0.09%) to 88.525% when pulling **c1b2646de4632b94926e4e71098f14700444ca13 on NobiDev:develop** into **e96809208c9d1b1bbe22d605e76985770024de42 on moment:develop**.\n",
      "According to CLDR format/stand-alone formats use lower/uppercase. https://github.com/unicode-org/cldr/blob/main/common/main/vi.xml#L2649\r\n\r\nTo fix it properly, you can add standalone/format variants. Check `src/locale/ru.js` for inspiration."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f158dfb6b84f2427a79",
    "number": 5906,
    "body": "add better wording for past relative time",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/41503491/badge)](https://coveralls.io/builds/41503491)\n\nCoverage increased (+0.06%) to 88.499% when pulling **e1ec22a4fb8acd388390c52a99edc604d29efbe0 on weaseldotro:patch-1** into **e96809208c9d1b1bbe22d605e76985770024de42 on moment:develop**.\n",
      "According to CLDR it's different: https://github.com/unicode-org/cldr/blob/main/common/main/ro.xml#L3622C19-L3622C19\r\n\r\n@gurdiga @avaly @cepem any comments?",
      "@weaseldotro IMHO, tests give insufficient context to decide if the change is an improvement or not. Can you please give a few example sentences where the proposed formulation looks better the existing? 🤔 ",
      "@ichernev I may not be an authority on Romanian language (although it’s my native tongue and still using it daily), but I am surprised that CLDR does **not** mention the old, nor the new forms (in this PR)—«câteva secunde în urmă» and «în urmă cu câteva secunde», respectively.\r\n\r\nOr, maybe I’m just not able to properly navigate [that 12965-line XML file](https://github.com/unicode-org/cldr/blob/main/common/main/ro.xml). 🙃",
      "I do not care about this issue anymore, do what you want with it. Unsubscribing.",
      "> According to CLDR it's different: https://github.com/unicode-org/cldr/blob/main/common/main/ro.xml#L3622C19-L3622C19\r\n> \r\n> @gurdiga @avaly @cepem any comments?\r\n\r\nThe proposed change isn't better than the existing formulation. Arguably, it makes stuff sound even weirder; I believe this is a case of people having different preferences for formulating the same thing in different regions of the country. \r\n\r\nI also dislike the new change because the time value is not being shown as soon as possible, making users read even more text just to reach the actual time value.",
      "@gurdiga well, CLDR has detailed past / future data (I linked to the correct lines). Yes, it's not exactly the same as what moment has.\r\n\r\nIn any case [weaseldotro](https://github.com/weaseldotro) abandoned it, @cepem is against it... CLDR doesn't sway in any particular direction, so I'm not merging this.\r\n\r\nJust FYI, if you're unhappy with a locale, you can tweak it locally via: https://momentjs.com/docs/#/customization/.\r\n\r\nAlso, if you don't agree with CLDR you can try to upstream your changes there. It is used for all \"official\" translation (browsers, OSes, etc etc), so it has far better \"coverage\" than moment, and we'll be happy to merge your changes after it's CLDR approved."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f168dfb6b84f2427a7a",
    "number": 5899,
    "body": "this is for northern kurdish can we add it please?",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/40380733/badge)](https://coveralls.io/builds/40380733)\n\nCoverage increased (+0.06%) to 88.499% when pulling **dd6ed1c1d4e198171fa2b24dda2eb2a1f818b589 on CYAXXX:patch-3** into **e96809208c9d1b1bbe22d605e76985770024de42 on moment:develop**.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f178dfb6b84f2427a7b",
    "number": 5895,
    "body": "This is the for Kurmanji Kurdish, can we add it please?\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/40330369/badge)](https://coveralls.io/builds/40330369)\n\nCoverage increased (+0.0%) to 88.435% when pulling **c69d2bb0d2b95800076b8ade0c9cab5939230a24 on CYAXXX:patch-2** into **e96809208c9d1b1bbe22d605e76985770024de42 on moment:develop**.\n",
      "Hi all!\r\nActually, will be better to keep the language codes correctly in case of a file names. Thus, the new file for Kurdish Northern should be renamed to ku.js, but old one, that include Kurdish Central language, should be renamed to ckb.js.",
      "@Shpankov please see https://github.com/moment/moment/pull/6006.",
      "@roj1512 xwezî te ev ji devla central bikira sorani, dizanim nehatiye pejirandin, belkî qet neyê erêkirin jî lê herî kêm bila bê kêmasî be",
      "wan bi xwe dest ji projeyê berdane"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f188dfb6b84f2427a7c",
    "number": 5888,
    "body": "some numbers needed \"e\" char before \"ko\":\r\n\r\n...21eko\r\n...41eko\r\n...61eko\r\n...81eko",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/39618799/badge)](https://coveralls.io/builds/39618799)\n\nCoverage increased (+0.06%) to 88.499% when pulling **12e38ba524029aa5e69b58c24150855eeebca082 on ZiTAL:develop** into **e96809208c9d1b1bbe22d605e76985770024de42 on moment:develop**.\n",
      "I will fix it coding, closing the pull request, and i will create new one"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f198dfb6b84f2427a7d",
    "number": 5885,
    "body": "i would like to fix some mistakes in Central Tamazight (Latin):\r\n- fix 12 mounts names and abbreviations\r\n- add week\r\n- fix hour name\r\n- fix minute name\r\n- fix seconds name",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/39473546/badge)](https://coveralls.io/builds/39473546)\n\nCoverage increased (+0.06%) to 88.499% when pulling **9ea8f1989cc231486e05781fe7400a040ada25b7 on hakimzenata:develop** into **e96809208c9d1b1bbe22d605e76985770024de42 on moment:develop**.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f1a8dfb6b84f2427a7e",
    "number": 5877,
    "body": "**What's new in this PR?**\r\n- Fix 12 months names\r\n- Fix time name: minute",
    "head_branch": "si",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/39138605/badge)](https://coveralls.io/builds/39138605)\n\nCoverage increased (+0.06%) to 88.499% when pulling **2a9e87035abf351cb20c31056df0e2c624889ccc on Aikatsui:si** into **e96809208c9d1b1bbe22d605e76985770024de42 on moment:develop**.\n",
      "Change files under `src/locale/xx.js` and update tests under `src/test/locale/xx.js`.",
      "> Change files under `src/locale/xx.js` and update tests under `src/test/locale/xx.js`.\r\n\r\n@ichernev @anandfresh I have already updated them. Should we not touch `locale/si.js`?"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f1b8dfb6b84f2427a7f",
    "number": 5865,
    "body": "Capitalize the month and day names and its abbreviations.\r\n\r\nShoud also be applied to \"pt.js\"\r\n\r\n@mention Caio Ribeiro Pereira : https://github.com/caio-ribeiro-pereira",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Revising the new orthography rules I realized that I was wrong",
      "\n[![Coverage Status](https://coveralls.io/builds/38652773/badge)](https://coveralls.io/builds/38652773)\n\nCoverage increased (+0.09%) to 88.525% when pulling **3b3ff06c717a3eeed1f09079b672e0ae9bc852e7 on ludionisio:patch-1** into **e96809208c9d1b1bbe22d605e76985770024de42 on moment:develop**.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f1c8dfb6b84f2427a80",
    "number": 5849,
    "body": null,
    "head_branch": "selyan",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/37893042/badge)](https://coveralls.io/builds/37893042)\n\nCoverage increased (+0.06%) to 88.499% when pulling **1b03df9f08cff94f471d6fbf8e7f74716b19b1f8 on Imsidag:selyan** into **e96809208c9d1b1bbe22d605e76985770024de42 on moment:develop**.\n",
      "The License Agreement is signed.",
      "Hi all! Is there plans to fix this issue?",
      "You need to change files under `src/locale/XX.js` and add tests for new locales under `src/test/locale/XX.js`. Feel free to reopen if these are addressed."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f1d8dfb6b84f2427a81",
    "number": 5848,
    "body": "",
    "head_branch": "selyan",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f1e8dfb6b84f2427a82",
    "number": 5847,
    "body": "",
    "head_branch": "selyan",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f1f8dfb6b84f2427a83",
    "number": 5842,
    "body": "Fixes https://github.com/moment/moment/issues/5841\r\n\r\n`valueOf` already respects `utcOffset` https://github.com/moment/moment/blob/e96809208c9d1b1bbe22d605e76985770024de42/src/lib/moment/to-type.js#L2",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/37790425/badge)](https://coveralls.io/builds/37790425)\n\nCoverage increased (+0.06%) to 88.499% when pulling **8496402b34323c92a8fe3c48d30e5428afe1e7b0 on risentveber:develop** into **e96809208c9d1b1bbe22d605e76985770024de42 on moment:develop**.\n",
      "Could you please review it? CC @icambron @JSFOwner @maggiepint @marwahaha @mattjohnsonpint @timrwood",
      "Any updates?",
      "Bloody dead lib"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f208dfb6b84f2427a84",
    "number": 5840,
    "body": "The Belarusian (Taraskevica) locale",
    "head_branch": "be-tarask",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/37486188/badge)](https://coveralls.io/builds/37486188)\n\nCoverage increased (+0.08%) to 88.51% when pulling **ad35087230ac326095b0ba644b0750534762bc14 on ptaberg:be-tarask** into **e96809208c9d1b1bbe22d605e76985770024de42 on moment:develop**.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f218dfb6b84f2427a85",
    "number": 5836,
    "body": "",
    "head_branch": "dependabot",
    "is_a_fork": false,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/37301279/badge)](https://coveralls.io/builds/37301279)\n\nCoverage decreased (-0.09%) to 88.435% when pulling **7ddb3a3cb81757a1d3c2a242d5d8b8dbbd504b68 on dependabot** into **52019f1dda47c3e598aaeaa4ac89d5a574641604 on develop**.\n"
    ],
    "commit_messages": [
      "[misc] fix builds (#5836)\n\n* Update dependencies\r\n\r\n* Rerun prettier"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f228dfb6b84f2427a86",
    "number": 5828,
    "body": "The country's English name is [_Libya_](https://en.wikipedia.org/wiki/Libya), not _Lybia_.",
    "head_branch": "fix-ar-ly-locale-name",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/37042195/badge)](https://coveralls.io/builds/37042195)\n\nCoverage decreased (-0.006%) to 88.519% when pulling **5a9c2af09f32c873a581b5b65a41e2bdbd10f5cc on tniessen:fix-ar-ly-locale-name** into **52019f1dda47c3e598aaeaa4ac89d5a574641604 on moment:develop**.\n",
      "I'm not sure why Travis CI fails. Appears to be unrelated to this PR."
    ],
    "commit_messages": [
      "[locale] ar-ly: fix locale name (#5828)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f238dfb6b84f2427a87",
    "number": 5827,
    "body": "toISOString(keep Offset?: boolean) function return string or null.\r\nSo, please rewrite moment.d.ts .",
    "head_branch": "feature/fix_d.ts",
    "is_a_fork": true,
    "comments": [
      "Merged in 651dff4d0c8914c9a9f73503bcb1a52e78de8a36",
      "Sorry, I had to revert this. TS code breaks after the change: https://github.com/moment/moment/issues/6194",
      "> Sorry, I had to revert this. TS code breaks after the change: #6194\r\n\r\nBut this would be correct, right?\r\n\r\nThe Date.toISOString() spec says it either returns a `string` or throws a RangeError: https://tc39.es/ecma262/multipage/numbers-and-dates.html#sec-date.prototype.toisostring\r\n\r\nShould Moment.js do the same?"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f248dfb6b84f2427a88",
    "number": 5820,
    "body": "Added some conditions to check if it's this week (Copied and edited from [zh-cn.js](https://github.com/moment/moment/blob/develop/locale/zh-cn.js)).",
    "head_branch": "dev",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/36735656/badge)](https://coveralls.io/builds/36735656)\n\nCoverage decreased (-0.04%) to 88.488% when pulling **8024ea74694c2990d86f900b32b750a81b26619e on aniki0220:dev** into **52019f1dda47c3e598aaeaa4ac89d5a574641604 on moment:develop**.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f258dfb6b84f2427a89",
    "number": 5816,
    "body": "Arabic (Egypt) local file to support the Egyptian slang",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/36408895/badge)](https://coveralls.io/builds/36408895)\n\nCoverage decreased (-0.04%) to 88.488% when pulling **ee7aa01d497a3795e9b88df3cb2605dd6cb14bb2 on AhmadIbrahiim:patch-2** into **52019f1dda47c3e598aaeaa4ac89d5a574641604 on moment:develop**.\n",
      "is there anyone still working on this ?",
      "Tests are failing, feel free to reopen if you fix them."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f268dfb6b84f2427a8a",
    "number": 5815,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/36408702/badge)](https://coveralls.io/builds/36408702)\n\nCoverage decreased (-0.04%) to 88.488% when pulling **3d0867b4da1fe8c13d9294ced0c2820f06bba041 on AhmadIbrahiim:patch-1** into **52019f1dda47c3e598aaeaa4ac89d5a574641604 on moment:develop**.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f278dfb6b84f2427a8b",
    "number": 5810,
    "body": "Correct way of formating ordinals\r\nAdapted form here: https://github.com/briannesbitt/Carbon/blob/master/src/Carbon/Lang/oc.php",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/36331748/badge)](https://coveralls.io/builds/36331748)\n\nCoverage decreased (-0.006%) to 88.519% when pulling **9581dca3b780b5383709bcb816dabe09aba6fe5a on Mejans:patch-1** into **52019f1dda47c3e598aaeaa4ac89d5a574641604 on moment:develop**.\n",
      "Hello, I don't understand how to signe the licence.",
      "You need to change src/locale/XX.js and src/test/locale/XX.js. Also ideally link to source (CLDR): https://github.com/unicode-org/cldr/blob/main/common/main/oc.xml (line number etc). Feel free to reopen if you address those."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f288dfb6b84f2427a8c",
    "number": 5793,
    "body": "**Description**\r\nWhen using a relativeTimeThreshold for 'd' greater than 31 days, and calculating the duration between 2 dates, occasionally moment would return a value of days that was off by 0.5 or greater (I have a test case demonstrating it could be up to 2 days off when Febuary was involved). \r\n\r\nThis was due to the way duration was calculated in `positiveMomentsDifference`. It would first calculate the months, then the remaining milliseconds between 2 dates. The problem was when humanizing the duration, months would be converted back into days using the average days in a month (~30.4). \r\n\r\nWhen the `to` and `from` dates fell in months that were >= 2 apart, like October 19 and December 13 then October 19 - November 19 was calculated as 1 month and November 19 - December 13 was calculated precisely in milliseconds. When humanizing the duration, the 1 month was converted into days, it became 30.4 days + 24 days (the milliseconds between the Nov 19 and Dec 13) giving us a value of 54.4 days rounded down to 54 days. But 1 month between October 19 and November 19 is actually 31 days so our day value should be 55.\r\n\r\nThe patch is written in a way that preserves how durations were calculated before with default time thresholds. The added method of duration calculation only happens when the relative time threshold is raised and a potential incorrect day, hour, or second value could be returned.\r\n\r\n**Related Issue**\r\n[#5267](https://github.com/moment/moment/issues/5267)\r\n\r\n**Changes**\r\n- Calculate and return total millisecond difference between 2 dates in `positiveMomentsDifference` and return it with previously calculated values (months + milliseconds).\r\n- Store `_totalMilliseconds` in `Duration` object\r\n- Use `_totalMilliseconds` when calling `humanize(...)` or `as(...)` when returning days, hours, or seconds for more precise responses \r\n- Added tests to verify issues from [#5267](https://github.com/moment/moment/issues/5267) are fixed as well as some other cases",
    "head_branch": "issue-5267",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/35836318/badge)](https://coveralls.io/builds/35836318)\n\nCoverage decreased (-0.09%) to 88.434% when pulling **fbf934dec995c4c132d4d5acf643a9772a96f01f on lewisbd2020:issue-5267** into **52019f1dda47c3e598aaeaa4ac89d5a574641604 on moment:develop**.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f298dfb6b84f2427a8d",
    "number": 5790,
    "body": "Hi, Our Norwegian translator reported to us that there is a small typo in the Norwegian translations for relative times.\r\n`en` should be replaced with `én` in expressions like `en time`, `en dag`...\r\n\r\nThanks!",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/35864342/badge)](https://coveralls.io/builds/35864342)\n\nCoverage decreased (-0.05%) to 88.473% when pulling **910ffa9b64ea46232655b07083db0c7ff9c39996 on Youenn-Bouglouan:patch-1** into **52019f1dda47c3e598aaeaa4ac89d5a574641604 on moment:develop**.\n",
      "Hi @marwahaha , first of all my apologies if you are not the proper person to help me with this, I am not sure who this should be addressed to. I'd like to know what can I do to help get this PR merged.\r\n- what kind of evidence is needed here to support the changes made in the norwegian translations?\r\n- the travis build is failing for 2 versions of Node, but working for the other 2. This is likely not caused my the changes in this PR. Is there any way we can solve this?\r\n\r\nThank you in advance!",
      "Merged in 8d46db8068ad6e841500308c9236f64fe22f8e04"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f2a8dfb6b84f2427a8e",
    "number": 5788,
    "body": "Anyway here's a PR for #5786 ",
    "head_branch": "issue-5786",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/35434834/badge)](https://coveralls.io/builds/35434834)\n\nCoverage remained the same at 88.525% when pulling **1699ed78ef413ca50831ef7aba2a250edea5957a on uvizhe:issue-5786** into **52019f1dda47c3e598aaeaa4ac89d5a574641604 on moment:develop**.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f2a8dfb6b84f2427a8f",
    "number": 5787,
    "body": "Anyway here's a PR for #5786 ",
    "head_branch": "issue-5786",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f2b8dfb6b84f2427a90",
    "number": 5783,
    "body": "A proposition \"za\" is grammatically incorrect in the most of cases when talking about a future event.\r\n\r\nSlovak language has two propositions for such cases: \"za\" and \"o\" but they have slightly different meanings.\r\n\"za 5 minút\" - an event which is already happening is coming to its end in 5 minutes, e.g. \"It is done in 5 minutes.\"\r\n\"o 5 minút\" => an event is going to happen in 5 minutes, e.g. \"It is going to be released in 5 minutes.\"",
    "head_branch": "fix-locale-sk",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/35273498/badge)](https://coveralls.io/builds/35273498)\n\nCoverage decreased (-0.006%) to 88.519% when pulling **d1ed2286771615596f8b7288924592ecad646b85 on mirorac:fix-locale-sk** into **52019f1dda47c3e598aaeaa4ac89d5a574641604 on moment:develop**.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f2c8dfb6b84f2427a91",
    "number": 5781,
    "body": "The plural of ден must be дни according to Bulgarian language rules.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f2d8dfb6b84f2427a92",
    "number": 5780,
    "body": "The plural of ден must be дни according to Bulgarian language rules.",
    "head_branch": "develop",
    "is_a_fork": false,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/35128751/badge)](https://coveralls.io/builds/35128751)\n\nCoverage increased (+0.001%) to 88.499% when pulling **52019f1dda47c3e598aaeaa4ac89d5a574641604 on develop** into **b7ec8e2ec068e03de4f832f28362675bb9e02261 on master**.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f2e8dfb6b84f2427a93",
    "number": 5779,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f2f8dfb6b84f2427a94",
    "number": 5778,
    "body": "## Issue\r\n\r\nCurrently importing moment/min/moment-with-locales produces a type error.\r\n\r\n```typescript \r\nimport moment from 'moment/min/moment-with-locales';\r\n// Error(ts 7016): Could not find a declaration file for module 'moment/min/moment-with-locales'. \r\n``` \r\n\r\nIt is an issue because it is specifically told in the doc to use this import path \r\n\r\n> To save the step of loading individual locales (i.e. just load them all), import the moment/min/moment-with-locales module instead.\r\n\r\n## Resolution\r\n\r\nRedirect /min/moment-with-locales typings to ts3.1-typings/moment.d.ts",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/35123472/badge)](https://coveralls.io/builds/35123472)\n\nCoverage decreased (-0.03%) to 88.499% when pulling **b20ba9c84b63e8e7e6808e01730c5e288c312969 on alburkerk:develop** into **52019f1dda47c3e598aaeaa4ac89d5a574641604 on moment:develop**.\n",
      "Same problem here, thanks for the fix !",
      "What's the status of it? Would be great to have this issue finally fixed",
      "@ghost if you leave only the `package.json` change it can be easily merged.",
      "Merged in 231cb8af (`package.json` only)"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f308dfb6b84f2427a95",
    "number": 5772,
    "body": "FYI @marwahaha \r\nAdded myself as author for bosnian language",
    "head_branch": "add-locale-author",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/not_signed)](https://cla.js.foundation/moment/moment?pullRequest=5772) <br/>Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our [Contributor License Agreement](https://cla.js.foundation/moment/moment?pullRequest=5772) before we can accept your contribution.<br/><hr/>**Rasid Redzic** seems not to be a GitHub user. You need a GitHub account to be able to sign the CLA. If you have already a GitHub account, please [add the email address used for this commit to your account](https://help.github.com/articles/why-are-my-commits-linked-to-the-wrong-user/#commits-are-not-linked-to-any-user).",
      "\n[![Coverage Status](https://coveralls.io/builds/34795492/badge)](https://coveralls.io/builds/34795492)\n\nCoverage decreased (-0.09%) to 88.435% when pulling **3b2fbb4cd46199acce1a0bba2230f8e3240a6fab on rasidre:add-locale-author** into **52019f1dda47c3e598aaeaa4ac89d5a574641604 on moment:develop**.\n",
      "Merged in d753d96b16c80234375dda81186685cb0e577e4d"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f318dfb6b84f2427a96",
    "number": 5766,
    "body": "toArray will always return an array with seven numbers. This change is necessary to be able to do `new Date(...m.toArray())`. As just `number[]`, it complains with `Expected 0-7 arguments, but got 0 or more.`.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/34571320/badge)](https://coveralls.io/builds/34571320)\n\nCoverage increased (+0.03%) to 88.525% when pulling **31bee3fe2fce5b1d152156578c7359ee94a45497 on mongoose700:patch-1** into **0dcaaa689d02dde824029b09ab6aa64ff351ee2e on moment:develop**.\n",
      "Interesting.\r\n\r\nIs this TS 1.x compatible?\r\n\r\nOtherwise, you can update the ts3.1 typings.",
      "Tuples were added in 1.3, so not quite.",
      "@mongoose700 Thanks for the update. Could you also add a test https://github.com/moment/moment/blob/develop/ts3.1-typing-tests/moment-tests.ts and I'll merge it",
      "I wanted to add a test that invoked `new Date(...moment().toArray())`, but the spread syntax wasn't available, and `apply` isn't type-safe.",
      "Thanks!",
      "> toArray will always return an array with seven numbers. This change is necessary to be able to do `new Date(...m.toArray())`. As just `number[]`, it complains with `Expected 0-7 arguments, but got 0 or more.`.\r\n\r\n"
    ],
    "commit_messages": [
      "[misc] Specify length of toArray return type (#5766)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f328dfb6b84f2427a97",
    "number": 5765,
    "body": "[deleted]",
    "head_branch": "sv-locale",
    "is_a_fork": true,
    "comments": [
      "Thanks for this. You should also update the tests at `src/test/locale/sv.js`",
      "@ulmus what do you think?",
      "\n[![Coverage Status](https://coveralls.io/builds/34573100/badge)](https://coveralls.io/builds/34573100)\n\nCoverage increased (+0.01%) to 88.512% when pulling **b3484923a5070f678769f68b0053e29517496355 on Liggliluff:sv-locale** into **0dcaaa689d02dde824029b09ab6aa64ff351ee2e on moment:develop**.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f338dfb6b84f2427a98",
    "number": 5764,
    "body": "* Copying AM/PM code from af.js and changing it to be fm/em, always lowercase.\r\n* Removing unnecessary ordinal check for 3, since it's the same as default.\r\n\r\nI also need help changing BC/AD to f. Kr./e. Kr., since no other locale has changed these, I don't know how to.",
    "head_branch": "locale-sv",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/signed)](https://cla.js.foundation/moment/moment?pullRequest=5764) <br/>All committers have signed the CLA."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f348dfb6b84f2427a99",
    "number": 5762,
    "body": "`npm run prettier-fmt` didn't get run on a commit I merged recently.",
    "head_branch": "fmt-fix",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[misc] fix lint issues (#5762)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f358dfb6b84f2427a9a",
    "number": 5756,
    "body": "fixes #5753",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/signed)](https://cla.js.foundation/moment/moment?pullRequest=5756) <br/>All committers have signed the CLA.",
      "@BYK approval?",
      "Hey, could you mark the repository as hacktoberfest valid, or at least this PR, please? ",
      "@erhangundogan approval?"
    ],
    "commit_messages": [
      "[locale] tr: update translation of Monday and Saturday (#5756)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f368dfb6b84f2427a9b",
    "number": 5752,
    "body": "Fixes #4169\r\n\r\nThe same could also be done for `Duration` but with only 4 mutation methods, it's easier to keep track of when you're modifying.",
    "head_branch": "feat/readonly-typings",
    "is_a_fork": true,
    "comments": [
      "I don't use TypeScript often anymore; perhaps someone else can review this.\r\n",
      "\n[![Coverage Status](https://coveralls.io/builds/37599559/badge)](https://coveralls.io/builds/37599559)\n\nCoverage increased (+0.06%) to 88.499% when pulling **84c3e176720ac2a29d98cd0517db3f11630cc129 on forivall:feat/readonly-typings** into **e96809208c9d1b1bbe22d605e76985770024de42 on moment:develop**.\n",
      "the CI errors are from prettier on files i didn't modify? weird.",
      "@marwahaha this has 2 approving reviews; someone with merge permissions could probably merge? thank you!",
      "@forivall you also need to change `moment.d.ts` and do the `Duration` as well (otherwise it's inconsistent)."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f378dfb6b84f2427a9c",
    "number": 5749,
    "body": "fixes #5074 \r\nI've updated the \"cs\" locale by implementing standalone and formats, I was confused why these changes were needed because cs locale code was able to handle inflections like `leden - ledna`. `únor - února` `březen-března` etc without any problems. Then I realized adding format and standalone to 'cs' locale makes the code consistent with other locales like 'hi' and 'ru' .\r\nAfter making changes to the \"cs\" locale it's test needed to be updated because of moment expecting standalone values, I also added 'format month case test' for accusations and nominations.\r\n\r\nNow, for the most part, cs locale code is consistent with other locales, but if you feel something needs to be changed I can do that.\r\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/signed)](https://cla.js.foundation/moment/moment?pullRequest=5749) <br/>All committers have signed the CLA.",
      "\n[![Coverage Status](https://coveralls.io/builds/33962863/badge)](https://coveralls.io/builds/33962863)\n\nCoverage increased (+0.001%) to 88.499% when pulling **cbf3a3ba3e9d48c1fdc040d2968afecf8f2b86ac on Kartik18g:develop** into **b7ec8e2ec068e03de4f832f28362675bb9e02261 on moment:develop**.\n",
      "@petrbela could you take a look?",
      "@petrbela Thanks for providing correct inflections, i've updated them in the latest commit. All tests passed successfully everything looks good, ready to be merged .",
      "@petrbela  can you take a look at it?",
      "@petrbela as you said I've reverted \"monthsStrictRegex\" to its original value.",
      "@marwahaha the inflections here are wrong, i have created a [PR](https://github.com/moment/moment/pull/6063) to fix this \r\n\r\n@petrbela could you please take a look at this?"
    ],
    "commit_messages": [
      "[bugfix] add standalone and format to \"cs\" locale (#5749)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f388dfb6b84f2427a9d",
    "number": 5748,
    "body": "This PR is a possible fix for Issue #5512 \r\n\r\nFYI @frontyard @marwahaha\r\nIf this PR is fixing the issue, you can close PR #5713",
    "head_branch": "adjust-bs-locale",
    "is_a_fork": true,
    "comments": [
      "@frontyard your definition was almost right. It should be like this:\r\n\r\nsecond\r\npast: prije par sekundi <- correct\r\nfuture: za par sekundi <- correct\r\n\r\nminute:\r\npast: prije jedne minute <- correct\r\nfuture: za jedne minute <- NOT CORRECT, correct is \"za jednu minutu\"\r\n\r\nhour\r\npast: prije jednog sata <- NOT CORRECT, correct is \"prije jedan sat\"\r\nfuture: za jednog sata <- NOT CORRECT, correct is \"za jedan sat\"",
      "\n[![Coverage Status](https://coveralls.io/builds/34485804/badge)](https://coveralls.io/builds/34485804)\n\nCoverage increased (+0.01%) to 88.5% when pulling **dddcdbb4be6071f198b75fde0f275116e017bde6 on rasidre:adjust-bs-locale** into **f5233ee5d44ba20079cd4b389262719bb20e23bd on moment:develop**.\n",
      "@frontyard approval?",
      "@frontyard ?",
      "@marwahaha how long will we wait for a locale approvement?",
      "I'll give it a few more days. @frontyard  can you please approve this?\r\n\r\n@rasidre Would you like to be a reviewer? You can add your name to the `src/locale` file.",
      "> @rasidre Would you like to be a reviewer? You can add your name to the `src/locale` file.\r\n\r\nOf course 🙂  https://github.com/moment/moment/pull/5772\r\n\r\n",
      "Merged in 443d5de6116f9e3555d050b87612f873e44c6b6b"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f398dfb6b84f2427a9e",
    "number": 5744,
    "body": "This pull request will improve the performance as I am pre calculating the array length before the for loop execution\r\nFor example\r\n```\r\nlet i, arr = [1,2,3,4,5];\r\nfor(i = 0; i< arr.length; i++) {\r\n    console.log(i)\r\n}\r\n```\r\narr.length will execute in each iteration which slows our execution. For this I just pre calculate the length and use that variable in each iteration like\r\n```\r\nlet i, arr = [1,2,3,4,5], arrLen = arr.length;\r\nfor(i = 0; i< arrLen; i++) {\r\n    console.log(i)\r\n}\r\n```\r\n\r\nI am also attachig the test suite case run time which is decrease by 610ms after changes\r\n\r\nBefore\r\n<img width=\"442\" alt=\"Test_Case_Run_Time_Before_Code_Update\" src=\"https://user-images.githubusercontent.com/17783893/94944851-79b0df80-04f7-11eb-8061-2a98833d6208.png\">\r\n\r\nAfter\r\n<img width=\"426\" alt=\"Test_Case_Run_Time_After_Code_Update\" src=\"https://user-images.githubusercontent.com/17783893/94944862-7ddcfd00-04f7-11eb-8abf-2b6e5b3240fc.png\">\r\n\r\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/signed)](https://cla.js.foundation/moment/moment?pullRequest=5744) <br/>All committers have signed the CLA.",
      "\n[![Coverage Status](https://coveralls.io/builds/33994796/badge)](https://coveralls.io/builds/33994796)\n\nCoverage increased (+0.006%) to 88.499% when pulling **5d71a7b4c7a410189873c42136f5db2f48a949e8 on PulkitAgg:develop** into **116752cce864f9254111abacc7db25644596595f on moment:develop**.\n",
      "Thanks for this. How did you find these cases? Did you look manually? Is there a lint rule we can set up to avoid this in the future?",
      "@marwahaha I look manually for these cases. I don't have any idea about such rule but we can look for this rule.",
      "may be related - https://mrale.ph/blog/2014/12/24/array-length-caching.html"
    ],
    "commit_messages": [
      "[misc] optimize for loops (#5744)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f3a8dfb6b84f2427a9f",
    "number": 5742,
    "body": "This fixes some login and grammatical errors in Serbian locales (sr, sr-cyrl) and their tests.\r\n\r\nTwo major problems were logic for getting grammatical cases. It was flawed because it didn't consider special cases for multi-digit numbers, just for single digit special cases.\r\n\r\nAlong with this, some grammar fixes were made because of different writing of nouns in different tenses (past and future) alongside those without tense (without prefix). [Here](https://en.wikipedia.org/wiki/Serbian_language#Grammar) is some info about that on Wiki. If that's not enough, I'll try to find something that has specific rules about that but I think it's better that other locale contributors look over this.\r\n\r\nThe tests are adapted to check for new grammar and logic fixes.",
    "head_branch": "fix-serbian-locale",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/signed)](https://cla.js.foundation/moment/moment?pullRequest=5742) <br/>All committers have signed the CLA.",
      "approval @crnjakovic ?",
      "I'd have to take a look at this later, I'm at work atm. @marwahaha "
    ],
    "commit_messages": [
      "[locale] Fix Serbian locale (sr, sr-cyrl) (#5742)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f3b8dfb6b84f2427aa0",
    "number": 5741,
    "body": "",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/not_signed)](https://cla.js.foundation/moment/moment?pullRequest=5741) <br/>Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you all sign our [Contributor License Agreement](https://cla.js.foundation/moment/moment?pullRequest=5741) before we can accept your contribution.<br/>**1** out of **2** committers have signed the CLA.<br/><br/>:white_check_mark: marwahaha<br/>:x: guycatayew",
      "\n[![Coverage Status](https://coveralls.io/builds/34485023/badge)](https://coveralls.io/builds/34485023)\n\nCoverage increased (+0.006%) to 88.499% when pulling **d64c2c30e2e9280e2a63d9d81e265595a6bce9e6 on guycatayew:patch-2** into **116752cce864f9254111abacc7db25644596595f on moment:develop**.\n",
      "approval @atamyratabdy ?",
      "@guycatayew  please sign the CLA"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f3c8dfb6b84f2427aa1",
    "number": 5740,
    "body": "edited before/after translation into the Turkmen",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/not_signed)](https://cla.js.foundation/moment/moment?pullRequest=5740) <br/>Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our [Contributor License Agreement](https://cla.js.foundation/moment/moment?pullRequest=5740) before we can accept your contribution.<br/>",
      "\n[![Coverage Status](https://coveralls.io/builds/33885782/badge)](https://coveralls.io/builds/33885782)\n\nCoverage remained the same at 88.493% when pulling **cf62b7e53338f4e9850df8422696718eba9712bd on guycatayew:patch-2** into **116752cce864f9254111abacc7db25644596595f on moment:develop**.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f3d8dfb6b84f2427aa2",
    "number": 5738,
    "body": null,
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      "I can't merge this one, the tests are failing."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f3e8dfb6b84f2427aa3",
    "number": 5737,
    "body": "If moment is now in maintenance mode, there won't be a major release that removes support for Non RFC2822/ISO date formats.\r\n\r\nGiven that I've updated the deprecation message to be more accurate. (It may be worth considering not even having the message, given now this behavior will technically be supported by moment forever?)",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/signed)](https://cla.js.foundation/moment/moment?pullRequest=5737) <br/>All committers have signed the CLA.",
      "\n[![Coverage Status](https://coveralls.io/builds/33812040/badge)](https://coveralls.io/builds/33812040)\n\nCoverage remained the same at 88.493% when pulling **2a073e8652a08c3e8ae579446c128f324049a805 on ghiculescu:patch-1** into **adfaae8051588fcdb9347f0221e5ac1663f3a95c on moment:develop**.\n",
      "This is a good idea, thanks. I'd rather leave the message in.\r\n"
    ],
    "commit_messages": [
      "[misc] Update dep message to reflect project status (#5737)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f3f8dfb6b84f2427aa4",
    "number": 5734,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      "Thanks for this. You will need to add a src/test/locale/ar-bh.js "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f408dfb6b84f2427aa5",
    "number": 5733,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/signed)](https://cla.js.foundation/moment/moment?pullRequest=5733) <br/>All committers have signed the CLA.",
      "\n[![Coverage Status](https://coveralls.io/builds/33743398/badge)](https://coveralls.io/builds/33743398)\n\nCoverage decreased (-0.06%) to 88.428% when pulling **7d460f4025c4aa02b1b6bc93e3ba1426966fc3d1 on alinoaimi:patch-1** into **adfaae8051588fcdb9347f0221e5ac1663f3a95c on moment:develop**.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f418dfb6b84f2427aa6",
    "number": 5731,
    "body": "Slight grammar correction",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/signed)](https://cla.js.foundation/moment/moment?pullRequest=5731) <br/>All committers have signed the CLA.",
      "\n[![Coverage Status](https://coveralls.io/builds/33706209/badge)](https://coveralls.io/builds/33706209)\n\nCoverage increased (+0.03%) to 88.519% when pulling **69bc31ea8641a87c788cce37925a98fafc2ee680 on chriswmercer:patch-1** into **adfaae8051588fcdb9347f0221e5ac1663f3a95c on moment:develop**.\n",
      "No thanks, I think it works either way"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f428dfb6b84f2427aa7",
    "number": 5728,
    "body": "fixes #5692  \r\nfixes #5739 \r\n\r\nI found out that this is because of the inflections that exists in Hindi language. For example :  दिसंबर (what you wrote)can be written as दिसम्बर(what is written in code), \r\nसितंबर - सितम्बर,\r\nनवंबर - नवम्बर,\r\nफरवरी - फ़रवरी,\r\nSo, in order to resolve this issue I added format and standalone feature like in Russian language.  After modifying locale file of Hindi, I also modified the test/locale/hi.js in order to pass all the tests. \r\nI have created a pull request to fix this issue. Until, this pull request get accepted the work around is to use these months:  दिसम्बर, सितम्बर, नवम्बर, फ़रवरी.\r\n![testCasesPassed](https://user-images.githubusercontent.com/69837339/93898944-6b9dda80-fd11-11ea-9805-4d63c09af1fd.JPG)",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/signed)](https://cla.js.foundation/moment/moment?pullRequest=5728) <br/>All committers have signed the CLA.",
      "\n[![Coverage Status](https://coveralls.io/builds/33852619/badge)](https://coveralls.io/builds/33852619)\n\nCoverage increased (+0.03%) to 88.524% when pulling **d3785ad5daf6a76c838cfb883d737709b3eae135 on PriyaBihani:develop** into **adfaae8051588fcdb9347f0221e5ac1663f3a95c on moment:develop**.\n",
      "I would like to get one more Hindi speaker to approve.\r\n@mayanksinghal @altro3 can you confirm?",
      "Merging based on discussion in https://github.com/moment/moment/issues/5739"
    ],
    "commit_messages": [
      "[bugfix] add format and standalone in hi locale (#5728)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f438dfb6b84f2427aa8",
    "number": 5724,
    "body": "Added missing locale for relativeTime weeks which were added in moment 2.25\r\nNot all languages are covered but tried to add the most popular ones and mainly those that I can verify with high certainty. No base tests exist for any of the relativeTime format so no new tests have been created.\r\n\r\nAdded week support for :\r\npl, bg, es, fr, it, nb, nn, nl, pt, ro, ru, th, tr, vi, zh-cn \r\n\r\n- [x] pl - native, no need to confirm \r\n- [x] bg - @kraz\r\n- [x] es - @julionc\r\n- [x] fr - @jfroffice\r\n- [x] it - @aliem / @nostalgiaz / @Manfre98\r\n- [x] nb - @rexxars / @sigurdga / @stephenramthun\r\n- [x] nn - @sigurdga\r\n- [x] nl - @jorisroling / @middagj\r\n- [x] pt - @jalex79\r\n- [x] ro - @gurdiga / @avaly / @cepem\r\n- [x] ru - @Viktorminator / @Oire / @socketpair\r\n- [x] th - @sirn\r\n- [x] tr - @erhangundogan / @erhangundogan\r\n- [x] vi - @bangnk / @chienkira\r\n- [x] zh-cn - @suupic / @zenozeng / @uu109",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/33627857/badge)](https://coveralls.io/builds/33627857)\n\nCoverage decreased (-0.03%) to 88.493% when pulling **4f2593486fb7c1da122e51b836355c4ca410b73f on jguc:develop** into **e46086b96ea7aac75cc0cdbe942ce4a852fd7073 on moment:develop**.\n",
      "@jguc - Thanks a lot for this!\r\nIf you'd like, you can move all unapproved changes to a separate PR and I can merge the approved changes now.",
      "> @jguc - Thanks a lot for this!\r\n> If you'd like, you can move all unapproved changes to a separate PR and I can merge the approved changes now.\r\n\r\n@marwahaha don't mention, the pleasure is all mine.\r\nThat's what I thought initially, to split the PR with the remaining translations, just give me one more day to ask some more people for verification and see how that goes.",
      "Hi, @judikdavid / @bankyadam please verify the Hungarian version. ",
      "@marwahaha ready to merge, I've only removed HU due to lack of verification",
      "Thanks again!"
    ],
    "commit_messages": [
      "[locale] add relativeTime week translation for many languages (#5724)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f448dfb6b84f2427aa9",
    "number": 5722,
    "body": "",
    "head_branch": "sidebar",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/not_signed)](https://cla.js.foundation/moment/moment?pullRequest=5722) <br/>Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our [Contributor License Agreement](https://cla.js.foundation/moment/moment?pullRequest=5722) before we can accept your contribution.<br/>",
      "I'm not sure if this is the right thing for Moment.\r\nThanks!"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f458dfb6b84f2427aaa",
    "number": 5719,
    "body": "Cleaning up the readme, and highlighting the project status.",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/33481838/badge)](https://coveralls.io/builds/33481838)\n\nCoverage remained the same at 88.524% when pulling **06f350956f807728b7d3fd4075642f5e8417a7e7 on mj1856:develop** into **471d67fe197d34486af93045d14453df901dc74e on moment:develop**.\n"
    ],
    "commit_messages": [
      "Update README.md (#5719)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f468dfb6b84f2427aab",
    "number": 5718,
    "body": "Also done for `setMonth`.\r\nAlso simplified Leap Day logic.",
    "head_branch": "get-set-switch-case",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/33500880/badge)](https://coveralls.io/builds/33500880)\n\nCoverage increased (+0.002%) to 88.526% when pulling **c8cb2388f8667fe75e935d604b0a913b7cdbb0af on tomerle:get-set-switch-case** into **471d67fe197d34486af93045d14453df901dc74e on moment:develop**.\n",
      "@marwahaha, @ichernev,\r\nAny chance this is going in? Anything I can do to help?\r\n\r\nBTW, this is just the first step (step zero were the extra benchmarks), and I have more impactful improvements waiting. I'd love to see all these improvements go through, following that to define best practices for maintaining them.",
      "Merged in e64ced75551cb4f87bb545f3668989e13fd6daa7"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f478dfb6b84f2427aac",
    "number": 5717,
    "body": "Hi, \r\n\r\nI have added  a 'ww' key to the RelativeTimeSpec Interface & RelativeTimeKey to solve issue #5700. If there are any problems or there is anything else I need to do before this can be merged please let me know. Thanks!\r\n\r\nfixes #5700",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/33484832/badge)](https://coveralls.io/builds/33484832)\n\nCoverage remained the same at 88.524% when pulling **3c78fe4c2166300f13bcd772600f0d4ff789d188 on PatrickMackridge:develop** into **aca41841feababe6b0314abe30baf43bea58c5b5 on moment:develop**.\n",
      "Thanks @PatrickMackridge . You may also want to update the ts3.1 typings too:\r\nhttps://github.com/moment/moment/blob/develop/ts3.1-typings/moment.d.ts",
      "Hi @marwahaha, yes I do, just done that now (had to commit twice as I missed one of the w's the first time!) ",
      "Thanks! "
    ],
    "commit_messages": [
      "[misc] add 'ww' key to RelativeTimeSpec Interface (#5717)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f488dfb6b84f2427aad",
    "number": 5716,
    "body": "fixes https://github.com/moment/moment/issues/2754\r\n\r\nI changed the -ne 2 to a different number to ensure that it failed.",
    "head_branch": "months-parse-checker",
    "is_a_fork": false,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/33466965/badge)](https://coveralls.io/builds/33466965)\n\nCoverage remained the same at 88.524% when pulling **ecd516cd0a276b6c281ddf5a214044300775b5d2 on months-parse-checker** into **471d67fe197d34486af93045d14453df901dc74e on develop**.\n"
    ],
    "commit_messages": [
      "[misc] check monthsParse configs on lint (#5716)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f498dfb6b84f2427aae",
    "number": 5715,
    "body": "Context https://github.com/prettier/prettier/issues/9194#issuecomment-692422962",
    "head_branch": "prettier-2-1",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/signed)](https://cla.js.foundation/moment/moment?pullRequest=5715) <br/>All committers have signed the CLA.",
      "\n[![Coverage Status](https://coveralls.io/builds/33460432/badge)](https://coveralls.io/builds/33460432)\n\nCoverage remained the same at 88.517% when pulling **790d7ceb56dfdedee093aa46f7ee3ec3db4d20b5 on fisker:prettier-2-1** into **a364b34201c16563848d4ef1a4df7f7c58489480 on moment:develop**.\n",
      "Thanks!",
      "BTW, this [`.gitattributes`](https://github.com/moment/moment/blob/develop/.gitattributes) seems not right, on windows, I checked out the repo with `CRLF` in all files.\r\n\r\nI has `autocrlf = false` in my global `gitconfig`"
    ],
    "commit_messages": [
      "[misc] Bump `Prettier` to v2.1 (#5715)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f4a8dfb6b84f2427aaf",
    "number": 5713,
    "body": "fixes https://github.com/moment/moment/issues/5512\r\n\r\nA quick review from @rasidre would be appreciated because I dont speak bosnian and I pretty much just copy & pasted his solution.\r\n\r\n//Note:\r\nHad to force-push sometimes to fullfil all checks and had to fixup the commits 👍 \r\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/33426388/badge)](https://coveralls.io/builds/33426388)\n\nCoverage increased (+0.05%) to 88.492% when pulling **69ed6756ad7e03a82a9ff16b162d5e844eb3fdd5 on Leftwitch:develop** into **2e91315d5f3b9fc26982d80aed401bbe0445fd43 on moment:develop**.\n",
      "@Leftwitch Thank you for your contribution. I will have a look these days \n\n@frontyard can you also have a look at this fix?",
      "@frontyard please review",
      "@marwahaha no, this PR doesn't look right. Contributor has added prefix (\"prije\" and \"za\") into translation even though prefix is added in separately.\r\n\r\nThe only thing that could be debated is whether it's more grammatically correct to say \"za jedan sat\" or \"za jednog sata\". I've heard both and \"za jednog sata\" might be more leaning towards Croatian, but we are getting into local dialects now and none of us are linguists :D",
      "Oh Snap! I mean I could change that if you tell me to,\r\nbut  I'm not really sure if this is still needed because you said its a dialect and I honestly don't know whats correct here 😂 \r\n\r\nJust tell me if I should change something or this can be closed ^^\r\n\r\n",
      "@Leftwitch let me write a test and see what's going on there. We might very well have an issue with translation.",
      "@frontyard any updates?",
      "> The only thing that could be debated is whether it's more grammatically correct to say \"za jedan sat\" or \"za jednog sata\". I've heard both and \"za jednog sata\" might be more leaning towards Croatian, but we are getting into local dialects now and none of us are linguists :D\r\n\r\nI don't agree with you. I trust you that you've heard both but \"za jednog sata\" is definitely wrong if it's said by a bosnian speaker. That doesn't mean a bosnian speaker won't say it. I got nearly 25 bug reports for my app that reported this issue. My app is made especially for bosnian speakers 😄 \r\n\r\nI've seen another app facing the same issue and they fixed it in their app by modifying the locale settings. I don't want to use this way of fixing it.",
      "Ok, sounds good. Assuming @rasidre is correct here is what the current version of moment-with-locales returns when called with suffix:\r\n\r\nsecond\r\npast: prije par sekundi <- correct\r\nfuture: za par sekundi <- correct\r\n\r\nminute:\r\npast: prije jedne minute  <- correct\r\nfuture: za jedne minute  <- NOT CORRECT, correct is \"za jednu minutu\"\r\n\r\nhour\r\npast: prije jednog sata  <- correct\r\nfuture: za jednog sata <- NOT CORRECT, correct is \"za jedan sat\"\r\n\r\nMy concern is that in the PR I see prefix being added to those localized strings. And I see withoutSuffix var being used to decide if it's the past or the future. That doesn't sound right.",
      "I will take a closer look right now\r\n\r\nEDIT: see fix in #5748 "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f4b8dfb6b84f2427ab0",
    "number": 5712,
    "body": "fixes #5710 ",
    "head_branch": "fix-builds",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[pkg] fix builds (#5712)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f4c8dfb6b84f2427ab1",
    "number": 5711,
    "body": "this is just to test the build system",
    "head_branch": "test-branch",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f4c8dfb6b84f2427ab2",
    "number": 5696,
    "body": "This is based off of the default Spanish locale (`src/locale/es.js`) with the exception of first day of the week ([set to Sunday](https://github.com/unicode-cldr/cldr-core/blob/2c2d91fa0c581b7f3a35fc748a1ce88e070ac550/supplemental/weekData.json#L160)).",
    "head_branch": "add-es-mx-locale",
    "is_a_fork": true,
    "comments": [
      "Did a little digging and the failing test is related to the latest rollup versions. The last one that worked was 2.23.1. \r\n\r\ncc @marwahaha ",
      "@jcfranco  - it looks like your tests are failing",
      "Thanks for taking a look! I'll get the tests fixed, sorry about that. 😅",
      "\n[![Coverage Status](https://coveralls.io/builds/33462449/badge)](https://coveralls.io/builds/33462449)\n\nCoverage increased (+0.02%) to 88.524% when pulling **417a2d1891e5647f92d336b209fc35a8d5bb9f14 on jcfranco:add-es-mx-locale** into **2c0b063b3bf95a285f9b38c173e262b6416c2e7f on moment:develop**.\n",
      "@marwahaha Tests fixed! 🔨",
      "Great!"
    ],
    "commit_messages": [
      "[new locale] es-mx: add Spanish (Mexico) (#5696)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f4e8dfb6b84f2427ab3",
    "number": 5695,
    "body": "Adding the js extension to import statements would allow others to use es6 modules directly from /src in their projects (including files in /src/lib and /src/locale).\r\n\r\n`import moment from './js/libraries/moment/moment.js`\r\n\r\nAnd use the library\r\n\r\n`console.log(`today is ${moment()}`)`\r\n\r\n_Note that I have a commit to remove the js extension from the 'valid' import in /src/lib/duration/constructor.js because it was the only import to use an extension and I wanted my regular expression to get everything in a single go. _\r\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      "Thanks for this request. \r\nI don't think this is something we will support.\r\nIf you need this, you can create a fork of the project."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f4e8dfb6b84f2427ab4",
    "number": 5685,
    "body": "Fixes issues with rollup node-resolve plugin that looks at the \"module\" entry to resolve packages (instead of jsnext:main)\r\nhttps://github.com/rollup/plugins/blob/master/packages/node-resolve/src/util.js#L36\r\n\r\nMight also fix issues where Typescript compiler cannot resolve properly",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/signed)](https://cla.js.foundation/moment/moment?pullRequest=5685) <br/>All committers have signed the CLA.",
      "I don't know rollup or our dependencies well enough to know if this will break certain users of Moment.",
      "See https://momentjs.com/docs/#/-project-status/"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f4f8dfb6b84f2427ab5",
    "number": 5680,
    "body": "set months names to capital letters in locale/es.js because months in Spanish follow the same rules as names",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/not_signed)](https://cla.js.foundation/moment/moment?pullRequest=5680) <br/>Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our [Contributor License Agreement](https://cla.js.foundation/moment/moment?pullRequest=5680) before we can accept your contribution.<br/>",
      "ups 😅 i forgot to update the test"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f508dfb6b84f2427ab6",
    "number": 5676,
    "body": "Change dow to 0 for Konkani locales to be in line with other Indian locales like en-in and hi, while keeping doy in accordance with ISO 8601.",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/32684849/badge)](https://coveralls.io/builds/32684849)\n\nCoverage remained the same at 88.502% when pulling **2dc23df935d3d0978033288a795d0eb2169c05b9 on WikiDiscoverer:develop** into **2c0b063b3bf95a285f9b38c173e262b6416c2e7f on moment:develop**.\n"
    ],
    "commit_messages": [
      "[locale] Update dow for Konkani locales (#5676)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f518dfb6b84f2427ab7",
    "number": 5675,
    "body": "@topchiyev \r\n\r\nIn Azeri, the word 'bir neçə' should be written separately. Here are some references:\r\n\r\n// Wiktionary\r\nhttps://en.wiktionary.org/wiki/bir_ne%C3%A7%C9%99\r\n\r\n// Obastan\r\nhttps://obastan.com/bir%20ne%C3%A7%C9%99/1010367/?l=az\r\n\r\n// Azleks\r\nhttps://www.azleks.az/online-dictionary/bir+ne%C3%A7%C9%99?s=undefined",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/signed)](https://cla.js.foundation/moment/moment?pullRequest=5675) <br/>All committers have signed the CLA.",
      "\n[![Coverage Status](https://coveralls.io/builds/32624458/badge)](https://coveralls.io/builds/32624458)\n\nCoverage decreased (-0.07%) to 88.436% when pulling **2d353392fdcdf2c262ce0cd08fac75a2fa3cdf4f on emiraslan:develop** into **2c0b063b3bf95a285f9b38c173e262b6416c2e7f on moment:develop**.\n",
      "Good work emiraslan. I suggest to accept the merge request."
    ],
    "commit_messages": [
      "[locale] az: fix a word (#5675)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f528dfb6b84f2427ab8",
    "number": 5674,
    "body": "In Azeri, the word 'bir neçə' should be written separately. Here are some references:\r\n\r\n// Wiktionary\r\nhttps://en.wiktionary.org/wiki/bir_ne%C3%A7%C9%99\r\n\r\n// Obastan\r\nhttps://obastan.com/bir%20ne%C3%A7%C9%99/1010367/?l=az\r\n\r\n// Azleks\r\nhttps://www.azleks.az/online-dictionary/bir+ne%C3%A7%C9%99?s=undefined\r\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/not_signed)](https://cla.js.foundation/moment/moment?pullRequest=5674) <br/>Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our [Contributor License Agreement](https://cla.js.foundation/moment/moment?pullRequest=5674) before we can accept your contribution.<br/>",
      "\n[![Coverage Status](https://coveralls.io/builds/32623936/badge)](https://coveralls.io/builds/32623936)\n\nCoverage decreased (-0.07%) to 88.436% when pulling **dad81e19c7c12429123b358ee3c9e260fdb4c0b9 on emiraslan:develop** into **2c0b063b3bf95a285f9b38c173e262b6416c2e7f on moment:develop**.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f538dfb6b84f2427ab9",
    "number": 5673,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/32613773/badge)](https://coveralls.io/builds/32613773)\n\nCoverage increased (+0.01%) to 88.513% when pulling **d6d4c481c31b1b762afa34d19dcba8d61e36464d on ashwoolford:develop** into **2c0b063b3bf95a285f9b38c173e262b6416c2e7f on moment:develop**.\n",
      "@marwahaha Can you please review this PR?",
      "Looks great!"
    ],
    "commit_messages": [
      "[new locale] bn-bd: Bengali (Bangladesh) (#5673)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f548dfb6b84f2427aba",
    "number": 5672,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/not_signed)](https://cla.js.foundation/moment/moment?pullRequest=5672) <br/>Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our [Contributor License Agreement](https://cla.js.foundation/moment/moment?pullRequest=5672) before we can accept your contribution.<br/><hr/>**Ashraf Hossain** seems not to be a GitHub user. You need a GitHub account to be able to sign the CLA. If you have already a GitHub account, please [add the email address used for this commit to your account](https://help.github.com/articles/why-are-my-commits-linked-to-the-wrong-user/#commits-are-not-linked-to-any-user).",
      "\n[![Coverage Status](https://coveralls.io/builds/32612740/badge)](https://coveralls.io/builds/32612740)\n\nCoverage increased (+0.01%) to 88.513% when pulling **88211924dfed58696fb1621bc40940531cf880b5 on ashwoolford:develop** into **2c0b063b3bf95a285f9b38c173e262b6416c2e7f on moment:develop**.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f558dfb6b84f2427abb",
    "number": 5668,
    "body": "naming kurdish language **ku** only is a big issue we need to consider dialects for the language after a long discussion on ant design repo about invalid locale code this should be changed to **ckb-iq** and if we removed existing **ku** locale this would be a breaking change so we can make a duplicate copy of **ku** named **ckb-iq** in the future we would have **kmr-iq** which stands for kurdish kurmanji dialect for more info refer to this issue \r\n[https://github.com/ant-design/ant-design/issues/25778](https://github.com/ant-design/ant-design/issues/25778)",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/signed)](https://cla.js.foundation/moment/moment?pullRequest=5668) <br/>All committers have signed the CLA.",
      "\n[![Coverage Status](https://coveralls.io/builds/32554849/badge)](https://coveralls.io/builds/32554849)\n\nCoverage increased (+0.0004%) to 88.502% when pulling **3f309e9bcab1c5cde6ba505bb9805cca210e8d5f on AramRafeq:develop** into **2c0b063b3bf95a285f9b38c173e262b6416c2e7f on moment:develop**.\n",
      "I don't think this is a good idea in core moment. I don't want to have duplicate files in the same locale/ folder.\r\n\r\nIf there is another idea that makes sense, please re-open and let us know."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f568dfb6b84f2427abc",
    "number": 5666,
    "body": "- extend months with standalone and formatted options\r\n- fix long date formats according to local standards\r\n- update the word \"tomorrow\" with widely used synonym\r\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/33508122/badge)](https://coveralls.io/builds/33508122)\n\nCoverage remained the same at 88.524% when pulling **5c1484f272f2856875c2ef4f99d53c43ac58ca75 on orif-jr:develop** into **1781e21d4e54515c9533c5adf147f7a8b5e8d774 on moment:develop**.\n",
      "Great!"
    ],
    "commit_messages": [
      "[locale] tg-TJ: Improve months and date formats (#5666)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f578dfb6b84f2427abd",
    "number": 5661,
    "body": "Hi, I missed this config invalidDate: 'Data inválida' in .../locale/pt-br.js\r\nTks",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/signed)](https://cla.js.foundation/moment/moment?pullRequest=5661) <br/>All committers have signed the CLA.",
      "\n[![Coverage Status](https://coveralls.io/builds/33460496/badge)](https://coveralls.io/builds/33460496)\n\nCoverage increased (+0.01%) to 88.517% when pulling **15b8024a72e1221b34ab8df85b033c85c71d516c on juareznasato:patch-1** into **2c0b063b3bf95a285f9b38c173e262b6416c2e7f on moment:develop**.\n",
      "Why your website offers only black theme now? I am white and I am feeling discriminated. ",
      "@juareznasato - can you update `src/locale/pt-br.js` instead?\r\n\r\n@caio-ribeiro-pereira what do you think?",
      "@marwahaha it's okay!"
    ],
    "commit_messages": [
      "[locale] (pt-br) add invalid date translation (#5661)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f588dfb6b84f2427abe",
    "number": 5659,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/32224961/badge)](https://coveralls.io/builds/32224961)\n\nCoverage decreased (-0.04%) to 88.467% when pulling **878f4d59d5cb5e0d0d18bd70fca9bec23be1ac60 on mullinsmikey:develop** into **9d560507e54612cf2fdd84cbaa117337568a384c on moment:develop**.\n",
      "@mullinsmikey Thanks very much for the contribution.\r\n\r\nI worry that this feature will confuse more than help. Does \"today\" refer to my local offset or the moment object's offset? (Or UTC?)\r\n\r\nYou might prefer making a simple plugin with this feature: https://momentjs.com/docs/#/plugins/\r\n\r\nOverall, I am not sure if we should include it in Moment, especially in light of https://momentjs.com/docs/#/-project-status/"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f598dfb6b84f2427abf",
    "number": 5654,
    "body": "Creation of two new localized formats: LLD and lld, to address issue https://github.com/moment/moment/issues/2505. This involves changes to every locale file and locale test file in the entire repo. The contribution guidelines say that the original creators of the locale files should be tagged when making changes, but I will wait to get some feedback before I tag 100+ people.\r\n\r\nAll changes have passed `grunt`.",
    "head_branch": "add-LLD-locale",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/32107873/badge)](https://coveralls.io/builds/32107873)\n\nCoverage increased (+0.03%) to 88.529% when pulling **a81c6c08c82d68d002cc6752053db5b06832f9b7 on gelbartj:add-LLD-locale** into **9d560507e54612cf2fdd84cbaa117337568a384c on moment:develop**.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f5a8dfb6b84f2427ac0",
    "number": 5647,
    "body": "Fix for issue #5640 ",
    "head_branch": "issue-5640",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/31998370/badge)](https://coveralls.io/builds/31998370)\n\nCoverage increased (+0.002%) to 88.504% when pulling **1fe9129b2300414c0c2fd2feff1fd47e222b3525 on IronGeek:issue-5640** into **9d560507e54612cf2fdd84cbaa117337568a384c on moment:develop**.\n",
      "Thanks for this."
    ],
    "commit_messages": [
      "[bugfix] allow calendar with falsy input (#5647)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f5b8dfb6b84f2427ac1",
    "number": 5641,
    "body": "@julionc\r\nAll tests passed",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/31922973/badge)](https://coveralls.io/builds/31922973)\n\nCoverage remained the same at 88.502% when pulling **256d43e664fd2fd9c6593a97f7c55c5d142b4624 on drtobal:develop** into **1811de9d3e2040cc64882b50eaf9e05b4025b465 on moment:develop**.\n",
      "Good catch, totally forgot that. 👍 \r\n\r\ncc @marwahaha \r\n\r\n\r\n"
    ],
    "commit_messages": [
      "[locale] es: fix accent mark (#5641)\n\n@julionc\r\nAll tests passed"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f5c8dfb6b84f2427ac2",
    "number": 5638,
    "body": "Hello everyone,\r\nThis is a new feature can be adding to  moment duration\r\nnow we can create duration just from a string like  \"1 day 57 minutes 34 seconds\" will be  parse into normal object and create duration object\r\nhow work??\r\n```js\r\nimport moment from 'moment ';\r\nconsole.log(moment.duration().fromString(\"1 day 57 minutes 34 seconds\" )) // duration object\r\n```\r\ni hope that can be useful  \r\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/signed)](https://cla.js.foundation/moment/moment?pullRequest=5638) <br/>All committers have signed the CLA.",
      "\n[![Coverage Status](https://coveralls.io/builds/31811839/badge)](https://coveralls.io/builds/31811839)\n\nCoverage decreased (-0.008%) to 88.494% when pulling **d2fa80fad3793184e6765fb02816cbe29b54870d on jamalroger:develop** into **1811de9d3e2040cc64882b50eaf9e05b4025b465 on moment:develop**.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f5d8dfb6b84f2427ac3",
    "number": 5637,
    "body": "## Changes\r\n\r\n*  Fix for issue #5629 .",
    "head_branch": "issue_5629",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/31791285/badge)](https://coveralls.io/builds/31791285)\n\nCoverage remained the same at 88.502% when pulling **aac1f2e7393580c956dd7c8e7d6a194154773255 on Alanscut:issue_5629** into **1811de9d3e2040cc64882b50eaf9e05b4025b465 on moment:develop**.\n",
      "Thanks!"
    ],
    "commit_messages": [
      "[bugfix] expose deprecation handler in typings (#5637)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f5e8dfb6b84f2427ac4",
    "number": 5634,
    "body": "Make the comments consistent with the other locale files\r\n\r\nfixes https://github.com/moment/moment/issues/5633",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/31788580/badge)](https://coveralls.io/builds/31788580)\n\nCoverage remained the same at 88.502% when pulling **5e230e6cbf605a70854eabd4be9e5e89610c6a82 on CJDennis:patch-2** into **1811de9d3e2040cc64882b50eaf9e05b4025b465 on moment:develop**.\n",
      "Thanks!"
    ],
    "commit_messages": [
      "[misc] Update comment in ug-cn.js (#5634)\n\nMake the comments consistent with the other locale files"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f5f8dfb6b84f2427ac5",
    "number": 5632,
    "body": "Make the comments consistent with the other locale files",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/signed)](https://cla.js.foundation/moment/moment?pullRequest=5632) <br/>All committers have signed the CLA.",
      "\n[![Coverage Status](https://coveralls.io/builds/31788329/badge)](https://coveralls.io/builds/31788329)\n\nCoverage remained the same at 88.502% when pulling **b3c5dee2dc2a843749fa4d7bcda47ded594519f7 on CJDennis:patch-1** into **1811de9d3e2040cc64882b50eaf9e05b4025b465 on moment:develop**.\n",
      "@CJDennis Please see [CONTRIBUTING.md](https://github.com/moment/moment/blob/develop/CONTRIBUTING.md), you should modify `src/locale/ug-cn.js`."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f5f8dfb6b84f2427ac6",
    "number": 5628,
    "body": "## Changes\r\n\r\n* Fix typescript warnings and add test cases",
    "head_branch": "ts_check",
    "is_a_fork": true,
    "comments": [
      "@Alanscut is this related to an existing issue?",
      "> @Alanscut is this related to an existing issue?\r\n\r\nno. there are 2 `moment.d.ts` files,  I compared and validated locally, this PR could fix this warning.",
      "What warning are you talking about?",
      "@Alanscut any updates?\r\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f608dfb6b84f2427ac7",
    "number": 5627,
    "body": "This pull request has updated src/test/locale/ta.js with the latest Tamil numerals. Ref: #5616 --> updated numerals for src/locale/ta.js.",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [
      "I merged this with https://github.com/moment/moment/pull/5616"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f618dfb6b84f2427ac8",
    "number": 5626,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f628dfb6b84f2427ac9",
    "number": 5624,
    "body": "Set the type to \"module\" for the files in `/dist` so that this works in Node in a module *.mjs file:\r\n`import moment from \"moment/dist/moment.js\";`\r\n\r\nReference: https://nodejs.org/api/esm.html#esm_package_json_type_field\r\n\r\n~~This PR does not fix `import \"moment/dist/locale/es.js\"` though. This doesn't work since the locale files have a relative import, but are missing the `.js` extension: `import moment from '../moment';`~~",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/signed)](https://cla.js.foundation/moment/moment?pullRequest=5624) <br/>All committers have signed the CLA.",
      "\n[![Coverage Status](https://coveralls.io/builds/31719102/badge)](https://coveralls.io/builds/31719102)\n\nCoverage decreased (-0.07%) to 88.436% when pulling **ac9fd9c2da01c7074976e7867bfcbcbae4685590 on dasa:patch-1** into **1811de9d3e2040cc64882b50eaf9e05b4025b465 on moment:develop**.\n",
      "> This PR does not fix `import \"moment/dist/locale/es.js\"` though.\r\n\r\nI've updated this PR to fix this as well.",
      "See https://momentjs.com/docs/#/-project-status/\r\n\r\nIf this makes sense for you, it might be best as a fork of the project."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f638dfb6b84f2427aca",
    "number": 5616,
    "body": "Updated tamil archaic numerals to the one currently used. Ref: #5557 ",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [
      "@NotMoni  Valid question. But the start of the tamil months in a year is calculated by astrological concepts. It has to be done every year. And every year those dates will change. So tamil people use english months for everything related to tech, government, business, etc... except for calculating dates to fix cultural events.",
      "Since those astrological events cannot be calculated in moment.js, it can be left as it is.",
      "Awesome! 🦄 ",
      "As someone who speaks Tamil. I approve.",
      "@naveen-bharathi Thank you.\r\nPlease also update `src/test/locale/ta.js`  so the tests pass.",
      "@yg நன்றி நண்பா 👍🏻",
      "@marwahaha. updated the tests for locale - Tamil in src/test/locale/ta.js  Ref: #5627 ",
      "The build is failing, so I will close and re-open the PR.",
      "\n[![Coverage Status](https://coveralls.io/builds/33465212/badge)](https://coveralls.io/builds/33465212)\n\nCoverage remained the same at 88.524% when pulling **13ed29b8a7dbc32b05a054135f69ea2b1f160963 on naveen-bharathi:patch-2** into **471d67fe197d34486af93045d14453df901dc74e on moment:develop**.\n",
      "@naveen-bharathi @tk120404 @NotMoni  are there sources like CLDR or official government pages that show which numerals are correct?",
      "yes",
      "@NotMoni please provide some sources",
      "I can't merge this, I couldn't fix the conflicts :( "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f648dfb6b84f2427acb",
    "number": 5615,
    "body": "## Changes\r\n\r\n* Rewrite `checkWeekday` API, Replace the vanilla JS Date object with an independent day-of-week check",
    "head_branch": "todo",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/31620082/badge)](https://coveralls.io/builds/31620082)\n\nCoverage decreased (-0.02%) to 88.509% when pulling **fa813eb18d02098d0941c60bb419850c6c353aae on Alanscut:todo** into **3e1a95b5ef0a505fec567c5b2290fd80e1da18f9 on moment:develop**.\n",
      "Hi @Alanscut  thank you for all of your contributions.\r\n\r\nMoment will not be taking many more substantial changes. Please see\r\nhttps://momentjs.com/docs/#/-project-status/\r\n\r\nSo I think this is probably not worth implementing.\r\nThanks for all that you do."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f658dfb6b84f2427acc",
    "number": 5614,
    "body": "I'm looking to begin contributing tests and small bug fixes to your code base as a way to get more involved with Open Source.\r\n\r\nI read through the CONTRIBUTING.md, but please let me know if there's anything I need to change.\r\n\r\nI also thought about backwards compatibility here. For example, even though negative numbers or strings seem invalid to me based on the code I've seen in the codebase, I continued to return the values they would have returned previously.",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/33560332/badge)](https://coveralls.io/builds/33560332)\n\nCoverage decreased (-0.03%) to 88.494% when pulling **675daafcbd75616bd3a8bda127223b5f68c68c0a on abeaton:develop** into **3e1a95b5ef0a505fec567c5b2290fd80e1da18f9 on moment:develop**.\n",
      "Thanks for contributing!"
    ],
    "commit_messages": [
      "[tests] add tests for isLeapYear and daysInMonth (#5614)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f668dfb6b84f2427acd",
    "number": 5611,
    "body": "this bug report template is very generic and I would like to more changes to it, such as remove the smartphone section and add more fields that are moment specific.\r\n\r\nI'm gonna make this a draft for now. Once I get the \"go ahead\" I will proceed to make it a better bug report template",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/signed)](https://cla.js.foundation/moment/moment?pullRequest=5611) <br/>All committers have signed the CLA.",
      "\n[![Coverage Status](https://coveralls.io/builds/33465002/badge)](https://coveralls.io/builds/33465002)\n\nCoverage decreased (-0.004%) to 88.524% when pulling **4cfe4ccc9a2b673f202e72cdc02c11c1572b309b on NotMoni:patch-1** into **3e1a95b5ef0a505fec567c5b2290fd80e1da18f9 on moment:develop**.\n",
      "Sure.\r\n\r\nNot every user has a Node version, and I'm not sure it always helps us when debugging.",
      "@NotMoni you have a \"go ahead\". Would you like me to merge it as is or do you plan to make more changes?",
      "@marwahaha merge it. I would also like to join the moment team. :D "
    ],
    "commit_messages": [
      "[misc] update bug report template (#5611)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f678dfb6b84f2427ace",
    "number": 5610,
    "body": "",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/31568224/badge)](https://coveralls.io/builds/31568224)\n\nCoverage decreased (-0.03%) to 88.502% when pulling **313b798f187bc5910de9329eff2a49ff7c294967 on Kafiil:patch-3** into **3e1a95b5ef0a505fec567c5b2290fd80e1da18f9 on moment:develop**.\n",
      "@abdelsaid thoughts?",
      "This will go in the same PR as https://github.com/moment/moment/pull/5609"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f688dfb6b84f2427acf",
    "number": 5609,
    "body": "",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/33579369/badge)](https://coveralls.io/builds/33579369)\n\nCoverage decreased (-0.1%) to 88.43% when pulling **39b98c298b710d17916d90ce6f0b6d658472e75e on kafiln:patch-2** into **3e1a95b5ef0a505fec567c5b2290fd80e1da18f9 on moment:develop**.\n",
      "approval @ElFadiliY ?",
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/signed)](https://cla.js.foundation/moment/moment?pullRequest=5609) <br/>All committers have signed the CLA.",
      "@ElFadiliY - Thank you. Can you now review the code change?\r\n\r\n@kafiln can you sign the CLA?",
      "@marwahaha done ",
      "@kafiln  - you also post that the first week is the week that contains jan 4. do you have a source for this?",
      "I did not find an official source for this but I live in Morocco and this is what I see.\r\nAlso, we mainly follow countries like France in this kind on situations, I guess this file was based on another Arabic locale, but we are very different from other Arabic countries. Finally, I never found a source where the 12th of January indicates the first week.\r\nCheers",
      "Thanks for your comment. \r\n\r\nThe code comment was in fact wrong, it should say the first week must include Jan 1.\r\nhttps://momentjs.com/docs/#/customization/dow-doy/\r\n\r\n@ElFadiliY - do you know whether the first week should include Jan 1 or Jan 4?",
      "@ElFadiliY - does the first week include Jan 1 (could start in december) or Jan 4 (could start after jan 1)?",
      "Thanks @kafiln "
    ],
    "commit_messages": [
      "[locale] (ar-ma) adjust dow, doy to match fr (#5609)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f698dfb6b84f2427ad0",
    "number": 5607,
    "body": "## Changes\r\n* This `valueOf` and `asMilliseconds` should have the same function.\r\n* Fix for issue #5603 .",
    "head_branch": "issue_5603",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/31552027/badge)](https://coveralls.io/builds/31552027)\n\nCoverage decreased (-0.03%) to 88.502% when pulling **84840450426b12b89995fd6daedf5c055d2f1c8c on Alanscut:issue_5603** into **3e1a95b5ef0a505fec567c5b2290fd80e1da18f9 on moment:develop**.\n",
      "I am not sure whether to merge this, in case of breaking change.\r\n\r\ncc @ichernev ",
      "Merged in 8dd12f64e0fdbb181a5663d09f87a3a21616777d"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f6a8dfb6b84f2427ad1",
    "number": 5606,
    "body": "This affects the builds for `grunt update-locale` in https://github.com/moment/momentjs.com/",
    "head_branch": "tk-patch",
    "is_a_fork": false,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/31623840/badge)](https://coveralls.io/builds/31623840)\n\nCoverage decreased (-0.03%) to 88.502% when pulling **06ea51b390100a46c2ad397db17563193b8f923d on tk-patch** into **3e1a95b5ef0a505fec567c5b2290fd80e1da18f9 on develop**.\n"
    ],
    "commit_messages": [
      "[locale] tk: fix country code (#5606)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f6b8dfb6b84f2427ad2",
    "number": 5604,
    "body": "I received a \"Security alert\" so I deleted my node modules and re-ran `npm install`.",
    "head_branch": "security",
    "is_a_fork": false,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/31526820/badge)](https://coveralls.io/builds/31526820)\n\nCoverage remained the same at 88.528% when pulling **3734890980a3eb61f14764ac5c64b471cd54b324 on security** into **194e64daff528b1661ba3eb4ac723fa01ae7674b on develop**.\n"
    ],
    "commit_messages": [
      "[pkg] update package-lock (#5604)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f6c8dfb6b84f2427ad3",
    "number": 5601,
    "body": "Fixes https://github.com/moment/moment/issues/5369\r\n\r\nI've replaced hack with a bit nicer hack :)",
    "head_branch": "months-pl-locale",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/33599200/badge)](https://coveralls.io/builds/33599200)\n\nCoverage decreased (-0.01%) to 88.484% when pulling **72f94612070e784c1743a55e9b023fb491b93a5e on szwacz:months-pl-locale** into **e1a969c8adadcb28ddec2fe382b4103fa5cf7abe on moment:develop**.\n",
      "Just so everyone is aware.\r\n\r\nActually this bugfix changes behaviour of public API, so this might be breaking change for some projects.\r\n\r\nBefore fix `moment.monts()` returned `[\"(stycznia|styczeń)\", \"(lutego|luty)\", \"(marca|marzec)\", \"(kwietnia|kwiecień)\", \"(maja|maj)\", \"(czerwca|czerwiec)\", \"(lipca|lipiec)\", \"(sierpnia|sierpień)\", \"(września|wrzesień)\", \"(października|październik)\", \"(listopada|listopad)\", \"(grudnia|grudzień)\"]` if someone to mitigate the bug was processing each string and extracting from it only one word, code of that person has high possibility of failing after the bugfix was applied to moment.js.\r\n\r\n",
      "@szwacz i think you can remove the hack.\r\n\r\nIf you add a variable\r\n```\r\n    monthsParse = [\r\n        /^sty/i,\r\n        /^lut/i,\r\n        /^mar/i,\r\n        /^kwi/i,\r\n        /^maj/i,\r\n        /^cze/i,\r\n        /^lip/i,\r\n        /^sie/i,\r\n        /^wrz/i,\r\n        /^paź/i,\r\n        /^lis/i,\r\n        /^gru/i,\r\n    ];\r\n```\r\n\r\nand add monthsParse:, longMonthsParse:, shortMonthsParse: , then removing the hack in src/locale/pl.js passes the test!\r\nYou can see cs.js as an example.\r\n\r\n\r\nPerhaps that wasn't available in 2015 when you made your previous hack.\r\n",
      "Thak you @marwahaha for pointing me into that direction. PR has been updated.",
      "Thanks!",
      "@szwacz hello! How can I get subjective all months in array (eg. ['stycznia', 'lutego', ...])?",
      "@dtokarczyk I'm afraid my changes in this PR didn't make it possible. I'm not aware if there is an API in moment that allows for implementing feature you're mentioning."
    ],
    "commit_messages": [
      "[bugfix] fix moment.months() for PL locale (#5601)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f6d8dfb6b84f2427ad4",
    "number": 5599,
    "body": "## Changes\r\n* Add exception handling function `createError`.\r\n* This `hooks.suppressCreateError` is used to specify whether it is forbidden to throw exception information, the default value is `true`.\r\n* Fix for issue #4985.\r\n* Any suggestions for the pull request will help me, thanks.\r\n",
    "head_branch": "issue_4985",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/31478297/badge)](https://coveralls.io/builds/31478297)\n\nCoverage decreased (-0.02%) to 88.502% when pulling **e57bff0c0efe83425cf0a5a20928b76bf5838bfd on Alanscut:issue_4985** into **528ac2b6c4df4438c83d57fb73f06e3666ce2767 on moment:develop**.\n",
      "Merged in c8785e7d6acc94464b3d54c866b3f5a08d3df74e",
      "Reverted in 0f0195f5049744d4b74bd0840501cb24b2cba949.\r\n\r\nI looked carefully at all the places the new `createError` calls, and most of them didn't make any sense. I'm guessing the function that returns an invalid moment should be wrapped in this method. Then it can be made to either print, or throw, or do nothing (the default)."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f6d8dfb6b84f2427ad5",
    "number": 5598,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/signed)](https://cla.js.foundation/moment/moment?pullRequest=5598) <br/>All committers have signed the CLA.",
      "\n[![Coverage Status](https://coveralls.io/builds/31455404/badge)](https://coveralls.io/builds/31455404)\n\nCoverage decreased (-0.04%) to 88.486% when pulling **efd6f67c6bd500b049ef31b79d75ca503e96ba10 on Abdifatahz:patch-1** into **528ac2b6c4df4438c83d57fb73f06e3666ce2767 on moment:develop**.\n",
      "@Abdifatahz You shoult not add this files in the `locale` directory, please see https://github.com/moment/moment/blob/develop/CONTRIBUTING.md#code-organization\r\n\r\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f6e8dfb6b84f2427ad6",
    "number": 5597,
    "body": "## Changes:\r\n- Use floating number calculation converter to process the multiply in duration.\r\n- Fix issue #5596.\r\n- Any suggestions for the pull request will help me, thanks.",
    "head_branch": "issue-5596",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/31442367/badge)](https://coveralls.io/builds/31442367)\n\nCoverage decreased (-0.09%) to 88.437% when pulling **d48376e540acc43dbb2d0bd0e2ba8edfc1bfe24b on Alanscut:issue-5596** into **528ac2b6c4df4438c83d57fb73f06e3666ce2767 on moment:develop**.\n",
      "Merged in b4e0676927f8acae8a3e8fea45fe47a8f1ddc62f",
      "I tweaked the original comment a bit. This `multiply` code basically makes the multiply a tad less wrong, if that.",
      "Reverted in 15b82f532c41c86f0cfa7462d0057d1d95e67821\r\n\r\nThe floating point issues have been notice a while ago, and all this does is revert to the old code (36e5 instead of 1000 * 60 * 60). There is common knowledge that while floating point ops are not perfect, a single op (A * B in this case) is as accurate as possible. This code tries to \"improve\" the accuracy of simple multiplication (via the newly added multiply fn). However, this is just not possible.\r\n\r\nIn general the way to \"solve\" such issues is to compute a complex expression in different order (i.e reorder computations). However there isn't much that can be done in this case.\r\n\r\nRead more about it here: https://github.com/moment/moment/issues/2978\r\n\r\nIf you just want to convert hours to milliseconds, the formula is `hours * 36e5 == ms`, and you can round that however way you like (i.e `Math.round`), chances are that fractional milliseconds are not that useful. But moment can't really make such decisions."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f6f8dfb6b84f2427ad7",
    "number": 5595,
    "body": "@bleadof\r\n\r\nThe fix can probably be understood without understanding the language but mentioning author as per the CONTRIBUTING.md",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/31508526/badge)](https://coveralls.io/builds/31508526)\n\nCoverage decreased (-0.02%) to 88.502% when pulling **ee00e330f262aeca9e18f6aec9bc5376922b040f on Hietamaki:patch-1** into **528ac2b6c4df4438c83d57fb73f06e3666ce2767 on moment:develop**.\n",
      "@Hietamaki thank you. could you add a test that documents this change? (For example, write a test that fails with the current moment code but passes with this change.)",
      "I now added the unit test, but I noticed inconsistency in the ss threshold behavior compared to other thresholds. The documentation says \"least number of seconds to be considered seconds\" but the actual behavior is \"least number of seconds + 1 to be considered seconds\". So I made the test to accommodate the current behavior but either the ss threshold needs to be fixed to stay consistent with the behavior of other thresholds or the documentation needs to be changed: https://momentjs.com/docs/#/customization/relative-time-threshold/",
      "Thanks, I'll update the documentation."
    ],
    "commit_messages": [
      "[locale] fi: fix ss not returning the number of seconds (#5595)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f708dfb6b84f2427ad8",
    "number": 5592,
    "body": "## Changes\r\n* Fix the issue of  `isValid()` in strict mode.\r\n* Fix issue #5314.\r\n* Any suggestions for the pull request will help me, thanks.",
    "head_branch": "issue_5314",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/31382993/badge)](https://coveralls.io/builds/31382993)\n\nCoverage increased (+0.005%) to 88.528% when pulling **aa19bbcee73af1679c7db0c767caf73c72ec8ed8 on Alanscut:issue_5314** into **528ac2b6c4df4438c83d57fb73f06e3666ce2767 on moment:develop**.\n",
      "Merged in cbcd0c5116e43ebd569e050934aeaef622ba7b64",
      "@ichernev while I agree that this is a correct change and makes the stricter parsing more correct, it might have been nice to make it clearer in release notes. This might break many applications that have previously parsed 01.01.2000 and 1.1.2000 by just using DD.MM.YYYY",
      "`strict` mode offers other functionality too that is very useful. I think it would be beneficial to have an option to accept both versions together with strict mode.\r\n\r\nI think this change complicates the required application logic - We are letting users input dates as text and validate that it is valid. It is up-to user preference if they type dates with zeros or not.\r\n\r\n### Previously\r\n`return moment(userValue, 'D.M.YYYY', true).isValid()`\r\n\r\n### After\r\n```\r\nfor (const format in ['D.M.YYYY', 'DD.MM.YYYY', 'D.MM.YYYY', 'DD.M.YYYY']) {\r\n  if (moment(userVaue, format, true).isValid() {\r\n    return true\r\n  }\r\n}\r\nreturn false\r\n```\r\n\r\nEDITED: Added missing cases so someone who finds this does not make same mistake",
      "@lehmat there is also the case of \"1.02.2020\" or \"01.2.2020\" which someone might input. Those can be caught with `'D.MM.YYYY', 'DD.M.YYYY'`"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f718dfb6b84f2427ad9",
    "number": 5581,
    "body": "## summary\r\n Optimize `computeErasParse` and `computeMonthsParse` , reduce unnecessary regular escaping  and loop traversal.",
    "head_branch": "optimizeCode",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/31228353/badge)](https://coveralls.io/builds/31228353)\n\nCoverage increased (+0.03%) to 88.524% when pulling **3afc8d5cef3834dce122e80e935344939fd09de0 on Alanscut:optimizeCode** into **e3c67905f9d714d43a28dc627ee8efdab06dbce3 on moment:develop**.\n",
      "Merged in a3babc50afba073cb377ef7ce4b77803e928078c",
      "I tweaked a bit the eras code, was double-escaping the regex for the mixed case."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f728dfb6b84f2427ada",
    "number": 5580,
    "body": "Fixes #5571 ",
    "head_branch": "cam/fix-format-modify-original-date",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/signed)](https://cla.js.foundation/moment/moment?pullRequest=5580) <br/>All committers have signed the CLA.",
      "\n[![Coverage Status](https://coveralls.io/builds/33420513/badge)](https://coveralls.io/builds/33420513)\n\nCoverage decreased (-0.06%) to 88.438% when pulling **4db6b797ee3e397573907dcd25df96e837ebf6d9 on camgraff:cam/fix-format-modify-original-date** into **2c0b063b3bf95a285f9b38c173e262b6416c2e7f on moment:develop**.\n",
      "@marwahaha Can we get this merged?",
      "@camgraff can you add tests that document this behavior?",
      "@marwahaha I added tests, but now the build is failing and I'm not sure why.  `grunt lint` passes locally, but in Travis it says there are problems with files that I haven't touched. ",
      "Thanks a ton!"
    ],
    "commit_messages": [
      "[bugfix] Fix bug where .format() modifies original moment instance (#5580)\n\n* Made era functions clone moment instance before calling startOf()\r\n\r\n* Add regression tests\r\n\r\n* Run prettier-fmt"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f738dfb6b84f2427adb",
    "number": 5579,
    "body": "",
    "head_branch": "codeStyles",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/31204684/badge)](https://coveralls.io/builds/31204684)\n\nCoverage remained the same at 88.497% when pulling **5f1fa5d7fb58f8a83e22581134c2b74eabe2c85f on Alanscut:codeStyles** into **e3c67905f9d714d43a28dc627ee8efdab06dbce3 on moment:develop**.\n"
    ],
    "commit_messages": [
      "[misc] Update CONTRIBUTING.md (#5579)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f748dfb6b84f2427adc",
    "number": 5575,
    "body": "Addresses #5410 \r\n\r\nThe issue mentions updateLocale but uses defineLocale in the example - it seems that consistent logic between the two would be desirable so I modified both.",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/not_signed)](https://cla.js.foundation/moment/moment?pullRequest=5575) <br/>Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our [Contributor License Agreement](https://cla.js.foundation/moment/moment?pullRequest=5575) before we can accept your contribution.<br/><hr/>**** seems not to be a GitHub user. You need a GitHub account to be able to sign the CLA. If you have already a GitHub account, please [add the email address used for this commit to your account](https://help.github.com/articles/why-are-my-commits-linked-to-the-wrong-user/#commits-are-not-linked-to-any-user).",
      "\n[![Coverage Status](https://coveralls.io/builds/31151666/badge)](https://coveralls.io/builds/31151666)\n\nCoverage decreased (-0.007%) to 88.491% when pulling **c73052e1d88ec3c0b017c04c407b19f9653dd488 on DakCrowder:develop** into **e3c67905f9d714d43a28dc627ee8efdab06dbce3 on moment:develop**.\n",
      "@DakCrowder could you sign the CLA?",
      "Is there any chance this PR will be merged?"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f758dfb6b84f2427add",
    "number": 5574,
    "body": "see #4611",
    "head_branch": "strict-parse-ts31",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/31146397/badge)](https://coveralls.io/builds/31146397)\n\nCoverage decreased (-0.07%) to 88.432% when pulling **d83f38505bafbb2df66a452fb600f9c2301cb66c on thorn0:strict-parse-ts31** into **e3c67905f9d714d43a28dc627ee8efdab06dbce3 on moment:develop**.\n",
      "@Alanscut what do you think?"
    ],
    "commit_messages": [
      "[bugfix] More complete type definitions for strict formatless parsing #4611 (#5574)\n\n* Reflect changes from #4611 in ts3.1-typings\r\n\r\n* Add types for `moment.utc(..., true)`"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f768dfb6b84f2427ade",
    "number": 5573,
    "body": "@socketpair can you check it?",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/31142612/badge)](https://coveralls.io/builds/31142612)\n\nCoverage decreased (-0.07%) to 88.432% when pulling **285f0de06bb331e9743ca33f57b045b73830a339 on Eugeno:develop** into **e3c67905f9d714d43a28dc627ee8efdab06dbce3 on moment:develop**.\n",
      "I consider this change wrong.\r\n\r\nWhat was the case ? What's not working as expected right now ?\r\n\r\nА что за причина ? Какой кейс не работает ?",
      "Всё работает, но варианты с точкой кажутся избыточными, т. к. мы не используем «июн.» и «июл.», следовательно привёл к тому же виду, в котором находится май.",
      "Спасибо за разъяснения, похоже я непродуманно смешал форматы и регулярки"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f778dfb6b84f2427adf",
    "number": 5570,
    "body": "There are two Kazakh scripts in the world. Currently, there are Kazakh language packs in Kazakhstan. This time, the Chinese Kazakh language pack is added.",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/signed)](https://cla.js.foundation/moment/moment?pullRequest=5570) <br/>All committers have signed the CLA.",
      "\n[![Coverage Status](https://coveralls.io/builds/31112332/badge)](https://coveralls.io/builds/31112332)\n\nCoverage remained the same at 88.496% when pulling **6e30e954db0c498fb551b112964ee1cf4db044fa on Musa920:develop** into **82d6c1ac43125ec6cf5640a440d72c8b83e09f6b on moment:develop**.\n",
      "Hi @Musa920 thanks for the contribution. Please edit `src/locale/kz.js`. Please do not edit `locale/kz.js`.\r\n\r\nThanks again.",
      "@Musa920 please don't use `kz.js` as language, use `kk-ch.js` (chinese kazakh)",
      "@Musa920 any updates?",
      "Closing this for inactivity. Re-open if you add the code to the right place (under `src/`)."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f788dfb6b84f2427ae0",
    "number": 5568,
    "body": "fixes #3944\r\n\r\n## Changes\r\n* Fix the bug of repeatedly setting `weekYear (number)`, Keep the purity of `this._d` when repeating settings.\r\n* Fix for issue #3944 .\r\n\r\n## Test plan\r\n` src/test/moment/week_year.js`",
    "head_branch": "issue_3944",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/31083689/badge)](https://coveralls.io/builds/31083689)\n\nCoverage increased (+0.03%) to 88.525% when pulling **e24a899f9514336b2ce12b8552927be52892d561 on Alanscut:issue_3944** into **82d6c1ac43125ec6cf5640a440d72c8b83e09f6b on moment:develop**.\n",
      "Fixed in #6193. I didn't understand this fix, and it's a bit scary..."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f798dfb6b84f2427ae1",
    "number": 5566,
    "body": "fixes #5562 ",
    "head_branch": "tsIssue",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/31024766/badge)](https://coveralls.io/builds/31024766)\n\nCoverage remained the same at 88.496% when pulling **56b64357c344bef23ba549ab6e4c0cba488ffdec on Alanscut:tsIssue** into **82d6c1ac43125ec6cf5640a440d72c8b83e09f6b on moment:develop**.\n"
    ],
    "commit_messages": [
      "[bugfix] update moment.d.ts for calendar (#5566)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f7a8dfb6b84f2427ae2",
    "number": 5561,
    "body": "Reverting format to the default behaviour as of https://github.com/moment/moment/issues/5366 , using All Caps for AM & PM",
    "head_branch": "patch-5",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/30931092/badge)](https://coveralls.io/builds/30931092)\n\nCoverage remained the same at 88.496% when pulling **9f42c774222fe89dfdff0ec939e8682d33351dba on fadsel:patch-5** into **94ae93570322d6852f2963c2fd6facfb33eb95b3 on moment:develop**.\n",
      "Great!"
    ],
    "commit_messages": [
      "[locale] (sw) Changed LT to include meridiem (#5561)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f7b8dfb6b84f2427ae3",
    "number": 5557,
    "body": "@ichernev @marwahaha @icambron \r\n\r\nThe symbol map used for Tamil language are archaic numerals and are currently not used by the Tamil speaking people. 99.99% of the Tamil speaking people don't even know what these symbols mean. I am a Tamil speaking person and I could help moment in the Tamil locale. English numerals have been adapted for all kind of uses by the Government of Tamil Nadu and the Tamil people for all their purposes. Only English numerals are been used for almost 60 years now. The symbol map data from wikipedia will not help in this case.\r\n\r\nI have updated the archaic Tamil numerals used for Tamil language to English numerals.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/30918863/badge)](https://coveralls.io/builds/30918863)\n\nCoverage remained the same at 88.49% when pulling **ee5a12b89d931164b966cba0736182cf561c270d on naveen-bharathi:patch-1** into **3683efa8942cd68b03fd699b1dceb9c3af628dac on moment:develop**.\n",
      "@coveralls I think you are talking about some other locale",
      "Thanks for this request.\r\n\r\n* please do not edit `locale/ta.js`, it is generated\r\n* please edit `src/locale/ta.js`\r\n* please update tests at `src/test/locale/ta.js`\r\n\r\nSince the locale author disagrees, can you find some sources online that support your change?\r\n\r\n",
      "https://en.wikipedia.org/wiki/Tamil_numerals ![image](https://user-images.githubusercontent.com/32498535/82542989-89471180-9b70-11ea-9b50-d448805cc0e2.jpeg)\n\nFrom this wikipedia page, it can be easily understood that these numerals are out of date and unused.",
      "@naveen-bharathi please edit `src/locale/ta.js`",
      "@marwahaha updated src/locale/ta.js and created a pull request. Ref: #5616 ",
      "@marwahaha  Since this pull request was created for the edit that was wrongly made in locale/ta.js, this pull request can be closed."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f7c8dfb6b84f2427ae4",
    "number": 5556,
    "body": "Closes: #5391",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/30916783/badge)](https://coveralls.io/builds/30916783)\n\nCoverage remained the same at 88.49% when pulling **8bb6782396628529096e7dfaa50a45732b442486 on vietduc01100001:develop** into **3683efa8942cd68b03fd699b1dceb9c3af628dac on moment:develop**.\n",
      "Thanks for this."
    ],
    "commit_messages": [
      "[pkg] Switch to composer-installers-extender (#5556)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f7d8dfb6b84f2427ae5",
    "number": 5555,
    "body": "fixes https://github.com/moment/moment/issues/4600",
    "head_branch": "fr-no-dot",
    "is_a_fork": false,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/30912105/badge)](https://coveralls.io/builds/30912105)\n\nCoverage increased (+0.005%) to 88.49% when pulling **4c7dd2be733ee6ea4b52533f7ee23d42115fad02 on fr-no-dot** into **a0f3c74374b638b769d9ab1ae54ba5266ef0976f on develop**.\n"
    ],
    "commit_messages": [
      "[locale] fr: make dot optional when parsing months (#5555)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f7d8dfb6b84f2427ae6",
    "number": 5554,
    "body": "fixes issue #5075 \r\n## Summary\r\n\r\n`Add` and `substract` can change the original `moment`, `moment._ Isvalid` should change synchronously.\r\n\r\n## Test plan\r\n\r\n` src/test/moment/is_valid.js `",
    "head_branch": "issue_5075",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/30911694/badge)](https://coveralls.io/builds/30911694)\n\nCoverage increased (+0.004%) to 88.489% when pulling **9ab2dc28f3eea3e32a5b5f0a59842ac97c53e839 on Alanscut:issue_5075** into **a0f3c74374b638b769d9ab1ae54ba5266ef0976f on moment:develop**.\n",
      "Merged in 5718d975f6839456846354c8baa8141d7a161772"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f7e8dfb6b84f2427ae7",
    "number": 5553,
    "body": "Only `[ \\ ^ $ . | ? * + ( )` need to be escaped, so remove redundant `\\` before `]`.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/signed)](https://cla.js.foundation/moment/moment?pullRequest=5553) <br/>All committers have signed the CLA.",
      "\n[![Coverage Status](https://coveralls.io/builds/30909426/badge)](https://coveralls.io/builds/30909426)\n\nCoverage remained the same at 88.481% when pulling **ed74ada64c68ee13058762aea2ba2822304e13f1 on Eugeno:patch-1** into **315abe846d9333cc4cea2d7781365d12ca3da347 on moment:develop**.\n",
      "Ok, thanks!"
    ],
    "commit_messages": [
      "[locale] ru: simplify regex \n\nOnly `[ \\ ^ $ . | ? * + ( )` need to be escaped, so remove redundant `\\` before `]`."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f7f8dfb6b84f2427ae8",
    "number": 5551,
    "body": "Fixes #5370\r\n\r\nSunday changed to first day of week for Indonesia locale.\r\n\r\nFixes done assuming that doy should be changed to 06, as that is the case for most locales where dow is 0.",
    "head_branch": "indonesia-sunday",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/30877145/badge)](https://coveralls.io/builds/30877145)\n\nCoverage remained the same at 88.48% when pulling **4d00676a175f8444eda99af49be7c5feb27d2549 on mantinone:indonesia-sunday** into **2259e43cfefe3a4a306ef25f4db37e0824d32d43 on moment:develop**.\n",
      "Thanks!"
    ],
    "commit_messages": [
      "[locale] id: Sunday changed to first day of week (#5551)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f808dfb6b84f2427ae9",
    "number": 5548,
    "body": "## Summary\r\n<img width=\"435\" alt=\"ts_bug\" src=\"https://user-images.githubusercontent.com/21104054/82196690-98d61880-992c-11ea-8b7a-ad5de82f8be9.png\">\r\n\r\n## Test plan\r\n`ts3.1-typing-tests/moment-tests.ts` and `typing-tests/moment-tests.ts`\r\n",
    "head_branch": "ts_bug",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/30854811/badge)](https://coveralls.io/builds/30854811)\n\nCoverage remained the same at 88.48% when pulling **8309115180bf941a7176de2299f2763a2001cf52 on Alanscut:ts_bug** into **2259e43cfefe3a4a306ef25f4db37e0824d32d43 on moment:develop**.\n"
    ],
    "commit_messages": [
      "[bugfix] isoWeeksInISOWeekYear in moment.d.ts (#5548)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f818dfb6b84f2427aea",
    "number": 5547,
    "body": "This is so that the Travis CI builds successfully with this Pull Request https://github.com/moment/moment/pull/5546",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [
      "Please do this in one PR."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f828dfb6b84f2427aeb",
    "number": 5546,
    "body": "It appears that \"masiku\" does not usually have a plural , going back to \"siku\" ,\r\nOther prepositions from https://github.com/moment/moment/pull/5544 sounds a bit nice and native,\r\n\r\n But, sadly we cannot have them since they are likely to change on future Relative Time , so it is better if they stay that way\r\n\r\nfixes https://github.com/moment/moment/issues/5182",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/30850062/badge)](https://coveralls.io/builds/30850062)\n\nCoverage increased (+0.05%) to 88.48% when pulling **415a18238aee8cc09c6ff4b6dabba633ed07d1f2 on fadsel:patch-3** into **de98cc4f23fd68b92465a494ed456a1d64c5dc52 on moment:develop**.\n"
    ],
    "commit_messages": [
      "[locale] (sw) Improve Translation (#5546)\n\n* [locale] (sw) Improve Translation\r\n\r\nIt appears that \"masiku\" does not usually have a plural , going back to \"siku\" ,\r\nOther propositions from https://github.com/moment/moment/pull/5544 sounds a bit nice and native,\r\n\r\n But, sadly we cannot have them since they are likely to change on future Relative Time , so it is better if they stay that way\r\n\r\n* [locale] (sw) Improve Translation In Tests \r\n\r\nThis is so that the Travis CI builds https://github.com/moment/moment/pull/5546/commits"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f838dfb6b84f2427aec",
    "number": 5545,
    "body": "It is better to sound siku instead of masiku although masiku is also correct",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/30842688/badge)](https://coveralls.io/builds/30842688)\n\nCoverage remained the same at 88.425% when pulling **9872dfb87d0e1bae602186f07555255f8aa1cf68 on fadsel:patch-2** into **de98cc4f23fd68b92465a494ed456a1d64c5dc52 on moment:develop**.\n",
      "Yikes, I was changing the generated files :man_dancing:  , let me close this real quick :clock10: "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f848dfb6b84f2427aed",
    "number": 5544,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/signed)](https://cla.js.foundation/moment/moment?pullRequest=5544) <br/>All committers have signed the CLA.",
      "\n[![Coverage Status](https://coveralls.io/builds/30842537/badge)](https://coveralls.io/builds/30842537)\n\nCoverage remained the same at 88.425% when pulling **a8cefcd946fe4149b7c0bf165d81aff7c1e6bbea on fadsel:patch-1** into **de98cc4f23fd68b92465a494ed456a1d64c5dc52 on moment:develop**.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f858dfb6b84f2427aee",
    "number": 5543,
    "body": "fixes #5531",
    "head_branch": "fix-travis",
    "is_a_fork": false,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/30841437/badge)](https://coveralls.io/builds/30841437)\n\nCoverage decreased (-0.05%) to 88.425% when pulling **c246299f5ce8ac72302a4b0717787955ceac94a9 on fix-travis** into **1872bb22ff6cd19c56e7dc30c5765489d48e65f1 on develop**.\n"
    ],
    "commit_messages": [
      "[tests] Use eslint 6.x to fix travis builds (#5543)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f868dfb6b84f2427aef",
    "number": 5540,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/not_signed)](https://cla.js.foundation/moment/moment?pullRequest=5540) <br/>Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our [Contributor License Agreement](https://cla.js.foundation/moment/moment?pullRequest=5540) before we can accept your contribution.<br/>"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f878dfb6b84f2427af0",
    "number": 5539,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/not_signed)](https://cla.js.foundation/moment/moment?pullRequest=5539) <br/>Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our [Contributor License Agreement](https://cla.js.foundation/moment/moment?pullRequest=5539) before we can accept your contribution.<br/>",
      "\n[![Coverage Status](https://coveralls.io/builds/30783867/badge)](https://coveralls.io/builds/30783867)\n\nCoverage increased (+0.02%) to 88.495% when pulling **e8d90e9d3dd9742bc645d9d27e8316932383af7b on alabenkhlifa:develop** into **1872bb22ff6cd19c56e7dc30c5765489d48e65f1 on moment:develop**.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f888dfb6b84f2427af1",
    "number": 5536,
    "body": "fixes https://github.com/moment/moment/issues/4839",
    "head_branch": "ka-tests",
    "is_a_fork": false,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/30841586/badge)](https://coveralls.io/builds/30841586)\n\nCoverage decreased (-0.08%) to 88.347% when pulling **4cfd4019ed550689b854b3e406ec6bd38b8579fb on ka-tests** into **de98cc4f23fd68b92465a494ed456a1d64c5dc52 on develop**.\n",
      "Based on https://github.com/nodejs/node/issues/22518 we cannot merge this until we drop Node 10 support.",
      "We will not drop Node 10 support, so I will close this.\r\nSee https://momentjs.com/docs/#/-project-status/"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f898dfb6b84f2427af2",
    "number": 5535,
    "body": "## Changes\r\n* Fix the issue of `isValid ()` validation error in strict mode.\r\n* Fix issue #5314 and #5464 .",
    "head_branch": "issue_5464",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f8a8dfb6b84f2427af3",
    "number": 5530,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f8b8dfb6b84f2427af4",
    "number": 5529,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f8c8dfb6b84f2427af5",
    "number": 5526,
    "body": "Update moment.d.ts to include 'w' in supported time units.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/30885064/badge)](https://coveralls.io/builds/30885064)\n\nCoverage remained the same at 88.48% when pulling **e5c9bc68441e64045ac4c83f6f4a152c7ff02d2e on tetranoir:patch-1** into **d2c3164190e73bd4b276fab965e491e250af0e75 on moment:develop**.\n",
      "Thanks for this!",
      "Update `ts3.1-typings/moment.d.ts` and add test cases synchronously, what do you think @tetranoir @marwahaha 😄 ?"
    ],
    "commit_messages": [
      " [bugfix] Add 'w' to supported time units (#5526)\n\nAdd 'w' to supported time unit"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f8d8dfb6b84f2427af6",
    "number": 5525,
    "body": "## Changes\r\n* This `humanize()` API has added new functions, so it is necessary to update the type definition of `humanize()` synchronously. Fix the compilation and error reporting.\r\n* Fix issue #5524.\r\n<img width=\"571\" alt=\"humanize_ts_bug\" src=\"https://user-images.githubusercontent.com/21104054/81530382-555f3580-9393-11ea-929e-0884eb05af5c.png\">\r\n",
    "head_branch": "humanize_ts",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/30850212/badge)](https://coveralls.io/builds/30850212)\n\nCoverage increased (+0.05%) to 88.48% when pulling **dcaf06632a4ac1338f6b55e6e8f20aac205b1612 on Alanscut:humanize_ts** into **de98cc4f23fd68b92465a494ed456a1d64c5dc52 on moment:develop**.\n"
    ],
    "commit_messages": [
      "[bugfix] Update the type definition of the humanize() API, fix compilation error (#5525)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f8d8dfb6b84f2427af7",
    "number": 5523,
    "body": "Hello,\r\nThis a more accurate localization for ar-dz (Algeria), based on the general Arabic localization (ar).\r\nHop the original author @nlouahedj approve this :)",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/30885257/badge)](https://coveralls.io/builds/30885257)\n\nCoverage increased (+0.006%) to 88.486% when pulling **996d3ad018756ed3a2179a988ab5bbdc5d9971f3 on Amine27:develop** into **c3f28286ba7614f7d7be676531d2997409c2fb77 on moment:develop**.\n",
      "@Amine27 Looks interesting good job :+1:",
      "Thanks!\r\n"
    ],
    "commit_messages": [
      "[locale] (ar-dz) improve translation (#5523)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f8e8dfb6b84f2427af8",
    "number": 5522,
    "body": "",
    "head_branch": "dev",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/signed)](https://cla.js.foundation/moment/moment?pullRequest=5522) <br/>All committers have signed the CLA.",
      "\n[![Coverage Status](https://coveralls.io/builds/31126283/badge)](https://coveralls.io/builds/31126283)\n\nCoverage increased (+0.02%) to 88.497% when pulling **ff56e694cdc7b9c76e55fd6d55a960561f7bd7a2 on atamyratabdy:dev** into **78fa472e740be602609eb5b2ec47e7e61d684258 on moment:develop**.\n",
      "Hi @icambron . I would like to add Turkmen language on moment.\r\nCan you merge my pull request, please ? ",
      "I don't merge these. That would be @marwahaha or @ichernev ",
      "Hi @atamyratabdy , nice work!\r\n\r\nPlease add a file `src/test/locale/tk.js` which tests the changes you wrote. \r\nYou can copy from `src/test/locale/en-gb.js` or similar.\r\n\r\n",
      "Hi @marwahaha, thanks for confirmation.\r\n\r\nI have added tests for my locale. However, there is a mismatch on versions, can you please update and merge my pull request, please. Thanks 🙋🙏. ",
      "Hi @atamyratabdy , unfortunately some tests that you added are failing. \r\nCould you investigate and adjust the files so the tests pass?",
      "Hi @marwahaha, I have fixed failing tests and committed the fix.\r\n\r\nCan you try to merge again and inform me if there needs any more adjustments.\r\nThanks 🙋🙏.",
      "Great work @atamyratabdy ",
      "Thank you @marwahaha ✌."
    ],
    "commit_messages": [
      "[new locale] tk: Add Turkmen (#5522)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f8f8dfb6b84f2427af9",
    "number": 5521,
    "body": "",
    "head_branch": "dev",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/not_signed)](https://cla.js.foundation/moment/moment?pullRequest=5521) <br/>Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our [Contributor License Agreement](https://cla.js.foundation/moment/moment?pullRequest=5521) before we can accept your contribution.<br/>"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f908dfb6b84f2427afa",
    "number": 5520,
    "body": "Issue: when adjusting thresholds for humanize, Moment.js displays english version for 'week' only\r\n\r\nFor example:\r\n```\r\nmoment.locale('de');\r\nmoment.duration(604800000).humanize({ h: 24, d: 7, w: 4 });  // 604800000 = 7 days \r\n```\r\nresults to:\r\n```\r\n'a week'\r\n```\r\ninstead of\r\n```\r\n'eine Woche'\r\n```\r\nThis works for days, hours, etc. but not for weeks.\r\nThis PR adds translation for 'week' in german locales for relative time formats to address this issue.\r\n\r\nOriginal author of languages: @lluchs ",
    "head_branch": "add-german-week-translation",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/30920985/badge)](https://coveralls.io/builds/30920985)\n\nCoverage increased (+0.02%) to 88.496% when pulling **5b13c15b778158e89e7b1b489abda5c7a58d66b4 on carlmrichter:add-german-week-translation** into **78fa472e740be602609eb5b2ec47e7e61d684258 on moment:develop**.\n",
      "@carlmrichter  - thank you for this PR. Could you also add some tests?\r\n\r\n@Oire can you review this?",
      "or @sschueller can you review?",
      "> @carlmrichter - thank you for this PR. Could you also add some tests?\r\n\r\n@marwahaha I hope the last commit is what you're looking for. I found no tests for duration.humanize's thresholds at all, even in `en` locale ...\r\n",
      "This is great!"
    ],
    "commit_messages": [
      "[locale] de, de-at, de-ch: add german translation for week (#5520)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f918dfb6b84f2427afb",
    "number": 5519,
    "body": "## Changes\r\n* Import `cross env`,  Fix errors reported by `ts3.1-typescript-test` and `typescript test`  running on windows\r\n* Working well on windows and Mac.\r\n\r\n<img width=\"561\" alt=\"command_bug\" src=\"https://user-images.githubusercontent.com/21104054/81362456-829db080-9113-11ea-9e52-7925599fb337.png\">\r\n\r\n\r\n\r\n",
    "head_branch": "issue_command",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/30910061/badge)](https://coveralls.io/builds/30910061)\n\nCoverage remained the same at 88.485% when pulling **93e49c5aa3e475e79f44d0e3c378763a28f12c8c on Alanscut:issue_command** into **4d0f390ffca3e558bf47a65942f2ca937f2c9b64 on moment:develop**.\n",
      "@Alanscut Why do the typing tests fail on Windows?\r\nI would prefer not to add an additional library, even as a devDep, but I also notice you are really contributing to this library. Thank you for that! If this is something you need for you to be a developer, let's add it.",
      "@marwahaha As far as windows developer are concerned, it is necessary, otherwise executing `npm run test` will give an error.\r\n\r\n### Error information \r\n`node_modules\\typescript\\bin\\tsc\" is not recognized as an internal or external command, operable program or batch file\r\n`\r\nhttps://stackoverflow.com/questions/43430760/unable-to-compile-typescript#\r\nhttps://stackoverflow.com/questions/37585966/node-modules-bin-package-cmd-file-in-node-js/44468968#44468968\r\n\r\n### New solutions\r\nAdd `nyc` to the command line, but I have not verified it on` mac`, what do you think?\r\n```\r\n\"ts3.1-typescript-test\": \"nyc --reporter=none node_modules/typescript3/bin/tsc --project ts3.1-typing-tests\",\r\n\"typescript-test\": \"nyc --reporter=none node_modules/typescript/bin/tsc --project typing-tests\",\r\n```\r\n",
      "I'm ok with cross-env !\r\nPlease resolve the conflicts and we can include this.",
      "@marwahaha  Conflict resolved, thanks 😄 ."
    ],
    "commit_messages": [
      "[tests] Get TS tests working on Windows with cross-env (#5519)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f928dfb6b84f2427afc",
    "number": 5503,
    "body": "seems root of issue was introduced here: https://github.com/moment/moment/commit/9ce89e7fea881b39be23b8c0646f7ef7817985d9\r\n\r\nSo, this PR reverts it and fixes the following issues:\r\n#4505, #5472, #5497, #5501, #5500, #5378, #5495, #5506, #5508",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/signed)](https://cla.js.foundation/moment/moment?pullRequest=5503) <br/>All committers have signed the CLA.",
      "\n[![Coverage Status](https://coveralls.io/builds/30522490/badge)](https://coveralls.io/builds/30522490)\n\nCoverage decreased (-0.04%) to 88.425% when pulling **7df7e6b6a38d6974ba49ae24004e2a54b14f7b6b on ApacheEx:patch-1** into **475a1e0603aff05329181e1803d0fb85b0a12bf3 on moment:develop**.\n",
      "also, as possible fix:\r\n\r\nreplace `\"module\": \"./src/moment.js\"` to `\"module\": \"./moment.js\"`\r\nbut don't know exactly if this `\"module\"` is really needed at all and what was the reason to introduce it.",
      "> also, as possible fix:\r\n> \r\n> replace `\"module\": \"./src/moment.js\"` to `\"module\": \"./moment.js\"`\r\n> but don't know exactly if this `\"module\"` is really needed at all and what was the reason to introduce it.\r\n\r\nCan confirm this fixes #5495 the issue and you are the MVP here.  \r\n\r\nAlso commit description is not clear  in 9ce89e7",
      "FYI \"module\" is supposed to be an ecmascript module and \"./moment.js\" is a commonjs module. (https://webpack.js.org/guides/author-libraries/#final-steps)",
      "> also, as possible fix:\r\n> \r\n> replace `\"module\": \"./src/moment.js\"` to `\"module\": \"./moment.js\"`\r\n> but don't know exactly if this `\"module\"` is really needed at all and what was the reason to introduce it.\r\n\r\nthanks sir, you save my day 👍 ",
      "Can confirm that this resolves it for us. Can this be merged and released on NPM soon?",
      "ok guys, I see it's fixed in 2.25.2. \r\n\r\nSo, I'm closing this.",
      "\"module\" property was removed in 2.25.3 (https://github.com/moment/moment/commit/0c709ba7e463c12c68d7bf217fbdff4ed3b46f2c) \r\n\r\nSo, it was the right solution."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f938dfb6b84f2427afd",
    "number": 5502,
    "body": "@ichernev - following the directions in [previous PR](https://github.com/moment/moment/pull/4626#issuecomment-619652118), I'm updating the en-in locale.\r\n\r\nThe Indian week starts on a Sunday, and 1st January is the first day of the week. This is the most official source I could find:\r\nhttps://unicode-org.github.io/cldr-staging/charts/37/supplemental/territory_information.html#IN\r\n\r\n![image](https://user-images.githubusercontent.com/760112/80911423-de52ed00-8d53-11ea-889c-b71ab6e2b950.png)\r\n\r\nIf I understand the \"Days in week (min)\" column, the value of 1 would also mean that the first week would start on 1st Jan, even if it's a Saturday. Am I correct?",
    "head_branch": "fix/en-in_weeks",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/30519106/badge)](https://coveralls.io/builds/30519106)\n\nCoverage decreased (-0.04%) to 88.425% when pulling **1b1aa074819f7244c14d4c91443225cc937137a0 on kumarharsh:fix/en-in_weeks** into **475a1e0603aff05329181e1803d0fb85b0a12bf3 on moment:develop**.\n",
      "I'm not an expert with the CLDR standard, but I think that makes sense.\r\n\r\nThank you @kumarharsh for your repeated contributions to this library. "
    ],
    "commit_messages": [
      "[locale] Fix Indian week start date and week number (#5502)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f948dfb6b84f2427afe",
    "number": 5490,
    "body": "Fixes issue #5489 by changing [these lines](https://github.com/moment/moment/blob/36a817d94eab0f070bbcc7d8431631ee71400b89/src/lib/locale/locales.js#L78) from:\r\n````javascript\r\n aliasedRequire(\r\n                (typeof __dirname !== undefined ? __dirname : '.') +\r\n                    '/locale/' +\r\n                    name\r\n            );\r\n````\r\n\r\nTo:\r\n\r\n````javascript\r\naliasedRequire(\r\n                `${typeof __dirname !== undefined ? __dirname : '..'}/locale/${name}`\r\n            );\r\n````",
    "head_branch": "fix-for-5489",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/30490774/badge)](https://coveralls.io/builds/30490774)\n\nCoverage remained the same at 88.468% when pulling **f4cbef6f0d0bd6861dc39ea23b4ebfdf21ebfe9d on dwsmart:fix-for-5489** into **36a817d94eab0f070bbcc7d8431631ee71400b89 on moment:develop**.\n",
      "@dwsmart can you try latest develop, I merged something to fix the typeof. Also, in 2.24.0 the code was just `'./locale' + name`, so I'm not just changing it to `'../locale' + name`.",
      "@ichernev, yes latest develop version seems to have addresses the issue, not sure why it had to be `'../locale'` instead of `./locale'` but that was required to fix. Probably my misunderstanding of something. I'll close the pull request.\r\nThanks!"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f958dfb6b84f2427aff",
    "number": 5487,
    "body": "Fixes missing TypeScript 3.1 typings in the npm package for moment. Fixes #5486.\r\n\r\nSince 2.25.0, package.json specifies:\r\n\r\n```json\r\n    \"typesVersions\": {\r\n        \">=3.1\": {\r\n            \"*\": [\r\n                \"ts3.1-typings/*\"\r\n            ]\r\n        }\r\n    },\r\n```\r\n\r\nbut the `ts3.1-typings` folder was not included in the npm package.\r\n",
    "head_branch": "ts3.1-missing",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/signed)](https://cla.js.foundation/moment/moment?pullRequest=5487) <br/>All committers have signed the CLA.",
      "\n[![Coverage Status](https://coveralls.io/builds/30485841/badge)](https://coveralls.io/builds/30485841)\n\nCoverage remained the same at 88.468% when pulling **8c627d4282d917fe386ca6b1da5af9e6df450ba1 on djcsdy:ts3.1-missing** into **36a817d94eab0f070bbcc7d8431631ee71400b89 on moment:develop**.\n",
      "I believe the title needs to begin with `[bugfix]` (including the brackets)",
      "Ah - fixed in https://github.com/moment/moment/commit/6e324334a50c262b5836618c3baf229081e1ec8e\r\n\r\nSo I believe the fix is already in, we just need a new release of 2.25",
      "@alexturek yes, I made the change myself. Thanks @djcsdy!"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f968dfb6b84f2427b00",
    "number": 5485,
    "body": "I'm also facing build issues as described in [issue 5480](https://github.com/moment/moment/issues/5480) because the `locale` folder has both `en-SG.js` and `en-sg.js`. [`2.25.0`](https://github.com/moment/moment/commit/36a817d94eab0f070bbcc7d8431631ee71400b89) added `en-sg.js` without removing `en-SG.js`.\r\n\r\nThis PR removes `en-SG.js`.",
    "head_branch": "vor89/remove-en-SG",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/signed)](https://cla.js.foundation/moment/moment?pullRequest=5485) <br/>All committers have signed the CLA.",
      "\n[![Coverage Status](https://coveralls.io/builds/30485792/badge)](https://coveralls.io/builds/30485792)\n\nCoverage remained the same at 88.468% when pulling **700948b0fb1db156dd77f8eddbbd3e33f38c9a62 on vor89:vor89/remove-en-SG** into **36a817d94eab0f070bbcc7d8431631ee71400b89 on moment:develop**.\n",
      "This was fixed in 728cc23e87ca29318c7492d653168c4481500358"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f978dfb6b84f2427b01",
    "number": 5482,
    "body": "fix #5481",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/signed)](https://cla.js.foundation/moment/moment?pullRequest=5482) <br/>All committers have signed the CLA.",
      "\n[![Coverage Status](https://coveralls.io/builds/30481905/badge)](https://coveralls.io/builds/30481905)\n\nCoverage remained the same at 88.468% when pulling **177ab52ae66477241bf47fb6b71de27ebea06ea6 on nicolashenry:patch-1** into **36a817d94eab0f070bbcc7d8431631ee71400b89 on moment:develop**.\n",
      "This was fixed in 6e324334a50c262b5836618c3baf229081e1ec8e"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f988dfb6b84f2427b02",
    "number": 5477,
    "body": "Humanize API was changed in PR [4296](https://github.com/moment/moment/pull/4296) to support an options argument which\r\ncontained both suffix and thresholds. No other moment API contains such\r\nan options object. So this change just splits suffix and thresholds into\r\ntwo different arguments, allowing for arbitrary order.",
    "head_branch": "fix-humanize-args",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[bugfix] Fix humanize api (#5477)\n\nHumanize API was changed in PR 4296 to support an options argument which\r\ncontained both suffix and thresholds. No other moment API contains such\r\nan options object. So this change just splits suffix and thresholds into\r\ntwo different arguments, allowing for arbitrary order."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f998dfb6b84f2427b03",
    "number": 5476,
    "body": "### Abstract\r\nAs @ichernev is mentioned in PR#5471, the until definition is missing.\r\nSo, I wrote this PR to fix this.\r\n\r\nThis patch just define the last day of 'Heisei' Era in Japanese locale.\r\nThough the result itself is not changed.",
    "head_branch": "feature/define_the_last_day_of_Heisei_Era",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/30458021/badge)](https://coveralls.io/builds/30458021)\n\nCoverage increased (+0.03%) to 88.495% when pulling **bc91bc84b7e6c65a36761129773b21d434577bb0 on eternalharvest:feature/define_the_last_day_of_Heisei_Era** into **d8e613ba0422be09d7fc4a25432a6e77e3a5f601 on moment:develop**.\n"
    ],
    "commit_messages": [
      "[locale] ja: Define the last day of 'Heisei' Era (#5476)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f9a8dfb6b84f2427b04",
    "number": 5475,
    "body": "This redoes #4410 properly.\r\n\r\nThe problem described in #3942, is that when you query about the number of weeks in a given year (specified by a moment object), there are 2 ways to interpret the query:\r\n1. given the current year, how many weeks are in it\r\n2. given the current week year, how many weeks are in it\r\n\r\n`year` vs `week year` can differ, especially around new year. Neither one of those interpretations is more correct. If you do extensive week-calendar computations, the second interpretation makes more sense, because each moment is interpreted with it's week-year, week, weekday properties. If you just want to know how many weeks does a given year have, you might just write `moment([2016]).weeksInYear()` and expect that you'll get the number of weeks in 2016 (interpretation 1), but (according to interpretation 2) that might not be the case if `2016.01.01` is in week-year 2015, and you'll get the number of weeks in 2015 instead.\r\n\r\nThat is why in addition to `weeksInYear` and `isoWeeksInYear` (which use interpretation 1), we now have `weeksInWeekYear` and `isoWeeksInISOWeekYear` that follow interpretation 2.\r\n\r\nSo this was implemented partially in #4410 (switching from interpretation 1 to 2, which is bad), #4746, and finally patched in here.",
    "head_branch": "fix-iso-weeks",
    "is_a_fork": false,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/30446517/badge)](https://coveralls.io/builds/30446517)\n\nCoverage increased (+0.002%) to 88.468% when pulling **b617cffcb33fd61fc65eda5dc17f257ebe6bc8a1 on fix-iso-weeks** into **64a46b327ab680c9bb6c0eeb63e94b7e9101c791 on develop**.\n"
    ],
    "commit_messages": [
      "[feature] Add isoWeeksInISOWeekYear (#5475)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f9b8dfb6b84f2427b05",
    "number": 5474,
    "body": "I noticed that isoWeeksInYear was silently modifying the object it is called on, which is pretty bad.",
    "head_branch": "fix-iso-week-getter",
    "is_a_fork": false,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/30433999/badge)](https://coveralls.io/builds/30433999)\n\nCoverage increased (+0.0004%) to 88.466% when pulling **ac1b3832165acf166a47235f62342499a2b8bfe1 on fix-iso-week-getter** into **86fa3519f2d8d57d121eebc554569795a780c198 on develop**.\n"
    ],
    "commit_messages": [
      "[bugfix] isoWeeksInYear was modifying the source object (#5474)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f9c8dfb6b84f2427b06",
    "number": 5473,
    "body": "## Changes\r\n* Fix the escape problem of analytic regex.\r\n* Fix for issue #4631 ",
    "head_branch": "issue_4631",
    "is_a_fork": true,
    "comments": [
      "Merged in 64a46b32"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f9d8dfb6b84f2427b07",
    "number": 5471,
    "body": "@caged ichernev\r\n\r\nThank u for merging my PR.\r\nBut, since my original PR was written bit long ago, In Japan the era has changed to new 'Reiwa' Era.\r\nSo, I need to add new Era definitions for Japanese locale.\r\nThis patch fix this issue, and rewrite test cases for this.\r\n\r\nI would appreciate if this patch will be merged until next release.\r\nBest, Regards.\r\n\r\n#### Reference (Original PR)\r\n#4599 [feature] Add era support for en,ja",
    "head_branch": "feature/add_new_japanese_reiwa_era",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/30395504/badge)](https://coveralls.io/builds/30395504)\n\nCoverage increased (+0.0004%) to 88.471% when pulling **eb4c3950202a0fb60ee9b38fea2ef95916d5464b on eternalharvest:feature/add_new_japanese_reiwa_era** into **1021c019839cd3ac0abd04a7076fa513fa03567c on moment:develop**.\n",
      "sorry, this patch contains some issue related to coding style.\r\ni'll fix this as soon as possible.",
      "I fixed the issue related to the coding style.\r\nNow, It's ready to merge!",
      "@eternalharvest the most recent 2 eras lack since/until (they only have since), is that on purpose?",
      "@ichernev\r\n\r\nSorry for my late reply.\r\nThe reason why the most recent 2 eras lacking until definitions is just totally slipped my mind.\r\nBut the result it self is same even if the until definition is set.\r\nBecause when the until definition is not defined, the day until is considered as +Infinity and when the period of Eras is overlapped the most recent era is choosed."
    ],
    "commit_messages": [
      "[locale] ja: Add new 'Reiwa' Era (#5471)\n\n* [locale] ja: Add new 'Reiwa' Era\r\n\r\n* Apply coding convention"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f9e8dfb6b84f2427b08",
    "number": 5470,
    "body": "Fixes #5043\r\n\r\nThere is another PR for the same issue: https://github.com/moment/moment/pull/5044\r\n\r\nThe problem is the way it is handled. updateLocale was always implemented with the idea that it will handle non-existing locales. It picks the default (base) locale and updates that. The problem was that a name was not set, so after such an update the `locale()` function returned `undefined`.\r\n\r\nSo the proper fix is to simply set the locale name.",
    "head_branch": "pr_5044",
    "is_a_fork": false,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/30376903/badge)](https://coveralls.io/builds/30376903)\n\nCoverage increased (+0.002%) to 88.471% when pulling **c530f8108999d880e58bca0667e3b1a0116357bf on pr_5044** into **b162aeedabe09110d4c3ee9f10b0c7bb2fdbd985 on develop**.\n"
    ],
    "commit_messages": [
      "[bugfix] Set name when updating non-existent locale (#5470)\n\nFixes #5043"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9f9f8dfb6b84f2427b09",
    "number": 5467,
    "body": "## Changes\r\n* Fix errors in `npm run prettier-check` and` npm run prettier-check`\r\n* Fix issue for #5466",
    "head_branch": "eslint_bug",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/30356847/badge)](https://coveralls.io/builds/30356847)\n\nCoverage remained the same at 88.281% when pulling **d1117613937f8b18ab583dc52d5617c31b7749bb on Alanscut:eslint_bug** into **c5225f813f475547dfa0fa0776a94994f9cdc281 on moment:develop**.\n",
      "These are not errors, these are features. I added those quotes for a reason. Is it not working for you? The docs says that it accepts globs, and this is just that, a glob handled by prettier. Otherwise you depend on your shell, which might be fancy (and handle them) or might not be fancy (CI) and not handle it ...",
      "@ichernev  Yes, When I run `npm run lint`, `npm run prettier-check` and `npm run prettier-fmt` in `cmd`, an error is reported.\r\n\r\n![moment_prettierfmt_bug](https://user-images.githubusercontent.com/21104054/80331341-6c256880-887a-11ea-94df-04db9f5fce71.PNG)\r\n\r\n![moment_eslint_bug](https://user-images.githubusercontent.com/21104054/80331357-747da380-887a-11ea-8d1a-f7950cc29f8f.PNG)\r\n\r\n",
      "@Alanscut works for me and works for the CI... what is your environment? OS, shell, version of prettier? ",
      "@ichernev My environment is as follows.\r\n - OS: Windows Server 2008 R2 Standard\r\n - editor: Visual  Studio Code 1.43.2\r\n - prettier: @latest",
      "@Alanscut check latest develop: f9e42d2cf88b41087d8bf9e6cebc43f48a2ed7f8"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fa08dfb6b84f2427b0a",
    "number": 5463,
    "body": "## Changes\r\n* Add `husky` and` lint`, execute `pre-commit` to check the code specification.",
    "head_branch": "precommit",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/30361002/badge)](https://coveralls.io/builds/30361002)\n\nCoverage remained the same at 88.281% when pulling **2cb7de0ef325dd2860adad524a7c2916195fed1d on Alanscut:precommit** into **c5225f813f475547dfa0fa0776a94994f9cdc281 on moment:develop**.\n",
      "I'm pretty confused. `Husky` is for git hooks, so adding it instructs to run `lint-staged` before commit, but lint-staged is supposed to run on files when they are added (staged), not when they are commited. Also it just runs grunt lint, which runs for all files, not just the staged ones. And it has `git add` as last command, which seems pretty superfluous. Does lint-staged auto add the files that are staged to the end of the commands being passed?\r\n\r\nAlso I'm not a big fan of commit hooks. In a corporate environment I might agree, but I hate magic happening behind the scenes. And this goes more to other contributors, who might not know what is going on, how to disable this crap, etc.",
      "@ichernev I found that you introduced `prettier` and `eslint` in PR #5462, and I modified the code again, This `lint-staged` command verifies and repairs the' .js' files in the staging area.\r\nhttps://prettier.io/docs/en/precommit.html\r\n\r\n## Command Line\r\n> \"prettier --write\": This rewrites all processed files in place. This is comparable to the eslint --fix workflow.\r\n> \"eslint\": Run eslint again to check whether the code is in conformity with the specification.\r\n> \"git add\": Re add to staging area if file repair is successful.\r\n\r\nNote:If all the above commands are executed successfully, 'git commit' will be run to add the local warehouse.\r\n\r\n## Process\r\n1.  Add the code to be submitted `git add` to the staging area and execute `git commit`.\r\n2. This `husky` hook function registered in `git pre-commit`  is called and execute `lint-staged`.\r\n3. This `lint-staged` gets all the submitted files and executes the written task in turn.\r\n4. If there is an error, stop the task, print the error information at the same time, wait for the repair, and then execute the commit. If the commit succeeds, you can push it to the remote.",
      "@ichernev  is a major contributor to this library. If he does not prefer lint hooks I think we should not turn them on by default.\r\n\r\n@Alanscut if you think this is helpful, perhaps you can add instructions on how to install these tools for your machine and we can add them to a blog post or to this Readme. Or we can add a simple reminder \"make sure to grunt lint first!\"",
      "Although 'husky' and 'lint staged' are not necessary, they can regulate the code style of the library. But i will close this PR first."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fa18dfb6b84f2427b0b",
    "number": 5462,
    "body": "OK, this is a redo of #4546\r\n\r\nI wanted to play with the options a bit, also this separates the eslint and prettier fixes.",
    "head_branch": "eslint-prettier",
    "is_a_fork": false,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/30342930/badge)](https://coveralls.io/builds/30342930)\n\nCoverage decreased (-0.2%) to 88.204% when pulling **2d103d4f66e044dc1d9ac2421e1bf19793cc401c on eslint-prettier** into **94edb2e8089ae73b68b266b8a2ac0c63f54fe799 on develop**.\n",
      "\n[![Coverage Status](https://coveralls.io/builds/30354781/badge)](https://coveralls.io/builds/30354781)\n\nCoverage decreased (-0.2%) to 88.19% when pulling **a9bdd421cfdc73a0849c8eaa8a677ea92d9d7bc7 on eslint-prettier** into **94edb2e8089ae73b68b266b8a2ac0c63f54fe799 on develop**.\n",
      "@ichernev Personally, we should also add `husky` and` lint-staged`. See PR #5463 ."
    ],
    "commit_messages": [
      "Merge branch 'eslint-prettier' into develop (#5462)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fa28dfb6b84f2427b0c",
    "number": 5461,
    "body": "This patch adds support for relative time in the form '%d weeks'. It is by default disabled. To enable it set relativeTimeThreshold for 'w' to a number (like 4), and optionally lower the 'd' threshold (like 7), so\r\nanything >= 7 days is considered a week, and 4 weeks are considered a month.\r\n\r\nRelated #4910",
    "head_branch": "support-relative-week",
    "is_a_fork": false,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/30341797/badge)](https://coveralls.io/builds/30341797)\n\nCoverage increased (+0.004%) to 88.385% when pulling **567743aa503e71e75d19c8f921d9cbfaa46d9172 on support-relative-week** into **8058876de269cafb63dc6fb18566a13fcaeeb6b8 on develop**.\n"
    ],
    "commit_messages": [
      "[feature] Support relative weeks (#5461)\n\nThis patch adds support for relative time in the form '%d weeks'. It is\r\nby default disabled. To enable it set relativeTimeThreshold for 'w' to\r\na number (like 4), and optionally lower the 'd' threshold (like 7), so\r\nanything >= 7 days is considered a week, and 4 weeks are considered\r\na month."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fa38dfb6b84f2427b0d",
    "number": 5460,
    "body": "This patch adds support for relative time in the form '%d weeks'. It is by default disabled. To enable it set relativeTimeThreshold for 'w' to a number (like 4), and optionally lower the 'd' threshold (like 7), so\r\nanything >= 7 days is considered a week, and 4 weeks are considered a month.\r\n\r\n\r\nRelated #4910\r\n",
    "head_branch": "support-relative-week",
    "is_a_fork": false,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/30341763/badge)](https://coveralls.io/builds/30341763)\n\nCoverage decreased (-0.0005%) to 88.385% when pulling **79fd6f50bdf21c41fcdfd2fac31ec3e7602cf695 on support-relative-week** into **831cfd6183fdcaa446f82ef4bf9e42b0078bb283 on develop**.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fa48dfb6b84f2427b0e",
    "number": 5459,
    "body": "It looks like the existing implementation of this feature was pretty\r\nwell thought out and correct, the problem was that a compareArray\r\nfunction was used which was comparing arrays in a rather bizzare\r\nfashion that was not in line with what a \"normal person\" would expect.\r\nSo now the array comparator is correct, and the logic works properly.\r\n\r\nThe logic works as follows -- the next locale is picked and tried as-is.\r\nIf that fails, the code normally tries to chop the last bit (normally\r\nthe country designation) and try again. However, if the next array\r\nelement has the same or longer prefix as the one to be tried, the\r\niteration continues. So for example if the array has the sequence\r\n\r\n    \"AA-BB\", \"AA-CC\", \"XX-YY\"\r\n\r\nthen first \"AA-BB\" is tried, then a naive solution would try \"AA\", but\r\nthis one instead checks to see that \"AA-CC\" is actually more concrete\r\nthan \"AA\", so it tries \"AA-CC\" next, and only after it fails (if it\r\nfails) it tries \"AA\", because \"XX-YY\" does not have \"AA\" as prefix. So\r\nin the end the following locales are tried in this order (assuming all\r\nfail so the next one is tried):\r\n\r\n    \"AA-BB\", \"AA-CC\", \"AA\", \"XX-YY\", \"XX\"\r\n\r\nFixes #4780\r\nCloses #3786",
    "head_branch": "better-array-locale-pick",
    "is_a_fork": false,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/30341149/badge)](https://coveralls.io/builds/30341149)\n\nCoverage decreased (-0.01%) to 88.386% when pulling **c78921c50c0edf6753e51b7a94d2e275803cf93e on better-array-locale-pick** into **8eb71ae271c23c36a5223459dfd4e779f4bedfa7 on develop**.\n"
    ],
    "commit_messages": [
      "[bugfix] Properly fallback to base locales in array getter (#5459)\n\nIt looks like the existing implementation of this feature was pretty\r\nwell thought out and correct, the problem was that a compareArray\r\nfunction was used which was comparing arrays in a rather bizzare\r\nfashion that was not in line with what a \"normal person\" would expect.\r\nSo now the array comparator is correct, and the logic works properly.\r\n\r\nThe logic works as follows -- the next locale is picked and tried as-is.\r\nIf that fails, the code normally tries to chop the last bit (normally\r\nthe country designation) and try again. However, if the next array\r\nelement has the same or longer prefix as the one to be tried, the\r\niteration continues. So for example if the array has the sequence\r\n\r\n    \"AA-BB\", \"AA-CC\", \"XX-YY\"\r\n\r\nthen first \"AA-BB\" is tried, then a naive solution would try \"AA\", but\r\nthis one instead checks to see that \"AA-CC\" is actually more concrete\r\nthan \"AA\", so it tries \"AA-CC\" next, and only after it fails (if it\r\nfails) it tries \"AA\", because \"XX-YY\" does not have \"AA\" as prefix. So\r\nin the end the following locales are tried in this order (assuming all\r\nfail so the next one is tried):\r\n\r\n    \"AA-BB\", \"AA-CC\", \"AA\", \"XX-YY\", \"XX\"\r\n\r\nFixes #4780"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fa48dfb6b84f2427b0f",
    "number": 5458,
    "body": "Fixes https://github.com/moment/moment/issues/3918 in it's entirety (support for YYYYMM).\r\n\r\nSupport for YYYY was added in #4470.",
    "head_branch": "support-YYYYMM",
    "is_a_fork": false,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/30340844/badge)](https://coveralls.io/builds/30340844)\n\nCoverage increased (+0.0007%) to 88.386% when pulling **e1c486cf32cef12bdefd022c30b0fc03a5456659 on support-YYYYMM** into **541336f667e2e4bcc03dcaec34b0308ed99e317f on develop**.\n"
    ],
    "commit_messages": [
      "[bugfix] Support ISO 8601 YYYYMM format (#5458)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fa58dfb6b84f2427b10",
    "number": 5457,
    "body": "Unified Esperanto updates. \r\n\r\nDankon, @Vivakvo!\r\n\r\nCloses #5343\r\nCloses #5455 \r\nCloses #5456 ",
    "head_branch": "locale-eo-corrections",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/signed)](https://cla.js.foundation/moment/moment?pullRequest=5457) <br/>All committers have signed the CLA.",
      "Dankon @colindean \r\n\r\nI received this message from github:\r\nThank you for your submission, we really appreciate it. Like many open source projects, we ask that you all sign our Contributor License Agreement before we can accept your contribution.\r\n1 out of 2 committers have signed the CLA.\r\n\r\n✅ Vivakvo\r\n❌ colindean\r\n\r\nAre you OK about that?",
      "> Are you OK about that?\r\n\r\nYes. This repository features an automation system that checks CLA signers and then updates the comment once everyone has signed. Editing comments doesn't generate an email. You can see the edited comment [here](https://github.com/moment/moment/pull/5457#issuecomment-618759413).",
      "@colindean \r\nThere is still an unsuccessful check (continuous-integration/travis-ci/pr but I don't understand what it is about. Is it going to stop the process?",
      "Hold off on merging. I need to correct (remove) the accusative on the short day name per [@Vivakvo's comment](https://github.com/moment/moment/pull/5343#issuecomment-618865879).",
      "> Is it going to stop the process?\r\n\r\nYes. I'm not sure what that build failure is about but one of the maintainers will be able to tell us. The tests regarding the locale seem to pass…",
      "This is ready now: passing all tests.\r\n\r\n@Vivakvo, please indicate your approval by navigating to https://github.com/moment/moment/pull/5457/files and indicating your approval using the **Review Changes** feature at the green button in the upper right corner?",
      "@colindean thank you for the expedited work!\r\n\r\nI noticed you talked about nominative/accusative. If Esperanto has both cases, then you should use standalone/format versions, like here: https://github.com/moment/moment/blob/develop/src/locale/ru.js#L36\r\n\r\nLet me know if this is ready to merge regarding ^^",
      "@ichernev It's probably sufficient to merge now. I'll look at the 🇷🇺 locale and find some others that have accusative for inspiration on an improvement.",
      "> @Vivakvo, please indicate your approval by navigating to https://github.com/moment/moment/pull/5457/files and indicating your approval using the **Review Changes** feature at the green button in the upper right corner?\r\n@colindean I put my approval using this button \"Review changes\". I hope it's OK.\r\nThank you very much for your help.\r\nHow will I know when it will be operational?\r\n",
      "I don't know when Moment's next release will be. That will be the next release that has these changes. \n\nIf you made this change because you noticed a problem in software that you were using, then it may be a while before that changes effective. Moment won't have control of when that software gets the newer version.\n\nThanks for helping out! I learned a bit, too!",
      "Yes, I made this change because effectively there are some little problems about dates in the program I use in its Eo-version (I have translated it from french). \r\nThis program is named Cesium and deals with the free money Ğ1. Have you heard about it? Ekzistas mallonga artikolo en Esperanto, kiu iom klarigas la aferon: [https://komun.org/eo/g1-libera-mono](https://komun.org/eo/g1-libera-mono). This free money is born in France 3 years ago, but it could become international.\r\n\r\nI well know the developer of that program (also usable [here](https://g1.duniter.fr/#/app/home)) and I will tell him to use the new moment.js when it will be ready.\r\n\r\nBye!",
      "The Cesium project appears to use the [latest version of Moment](https://git.duniter.org/clients/cesium-grp/cesium/-/blob/master/package.json#L70) so I speculate that they will keep up and get the new changes shortly after release.\r\n\r\nI've not heard about Cesium but I am very interested in cryptocurrency. Thanks for the links. I'll look into it!\r\n\r\nGxis la!"
    ],
    "commit_messages": [
      "[locale] eo: Multiple corrections (#5457)\n\n* [locale] eo: Fixes some expressions\r\n\r\nLine 12: adding the letter \"t\" for the months \"marto\" and \"septembro\" to distinguish them from \"mardo\" (=tuesday) and \"sep\" (=seven)\r\nLines 20, 21, 22, 38 and 40: correction of some date expressions in which accusative is needed.\r\nLine 46: adding the word \"kelkaj\" (=some), because \"post sekundoj\" and \"antaŭ sekundoj\" don't really make sense.\r\nLines 48, 50, 52, 54 and 56: adding the word \"unu\" (=one) because it's about the quantity \"1\", and not about an indefinite thing.\r\n\r\n* [locale] eo: Fixes tests to match new expressions\r\n\r\nAdding the letter \"t\" for the months \"marto\" and \"septembro\" to distinguish them from \"mardo\" (=tuesday) and \"sep\" (=seven)\r\nCorrection of some expressions in which accusative is needed.\r\nAdding the word \"kelkaj\" (=some), because \"post sekundoj\" and \"antaŭ sekundoj\" don't really make sense.\r\nAdding the word \"unu\" (=one) because it's about the quantity \"1\", and not about an indefinite thing introduced by the article a/an.\r\n\r\n* [locale] eo: Fixes some typos in tests\r\n\r\n* [locale] eo: Drops accusative -n from short day name in llll format\r\n\r\nCo-authored-by: Vivakvo <ybachimont@esperanto.org>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fa68dfb6b84f2427b11",
    "number": 5456,
    "body": "Line 12: adding the letter \"t\" for the months \"marto\" and \"septembro\" to distinguish them from \"mardo\" (=tuesday) and \"sep\" (=seven)\r\nLines 20, 21, 22, 38 and 40: correction of some date expressions in which accusative is needed.\r\nLine 46: adding the word \"kelkaj\" (=some), because \"post sekundoj\" and \"antaŭ sekundoj\" don't really make sense.\r\nLines 48, 50, 52, 54 and 56: adding the word \"unu\" (=one) because it's about the quantity \"1\", and not about an indefinite thing.",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [
      "How can I change the title ? It has to begin with [locale]"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fa78dfb6b84f2427b12",
    "number": 5455,
    "body": "Adding the letter \"t\" for the months \"marto\" and \"septembro\" to distinguish them from \"mardo\" (=tuesday) and \"sep\" (=seven)\r\nCorrection of some expressions in which accusative is needed.\r\nAdding the word \"kelkaj\" (=some), because \"post sekundoj\" and \"antaŭ sekundoj\" don't really make sense.\r\nAdding the word \"unu\" (=one) because it's about the quantity \"1\", and not about an indefinite thing.",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fa88dfb6b84f2427b13",
    "number": 5453,
    "body": "Should have the same short month format as nn.js",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/signed)](https://cla.js.foundation/moment/moment?pullRequest=5453) <br/>All committers have signed the CLA.",
      "\n[![Coverage Status](https://coveralls.io/builds/30280376/badge)](https://coveralls.io/builds/30280376)\n\nCoverage increased (+0.02%) to 88.426% when pulling **56c5048018635032266aea099e2dd55723bcb20e on Petter-Byggmann:patch-1** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "@Petter-Byggmann you should change the source files located under `src/locale/nb.js` and not touch `locale/*.js` files.\r\n\r\nDo you have any proof from official (likely government) documents that the correct way to write short months is what you're proposing?\r\n\r\n@rexxars @sigurdga can you comment on this?",
      "Last time I checked (probably when the nn translation was updated), I could not find the document at \"Språkrådet\" that described this, but the original document said that the months april, mai, juni and juli was not supposed to be abbreviated, as the names are short already. Also they are officially having a dot as part of the abbreviation.\r\n\r\nThe official list of [abbreviations](https://www.sprakradet.no/sprakhjelp/Skriveregler/Forkortinger/) actually has \"apr.\" for april, but not \"jun.\" for \"juni\" or \"jul.\" for juli. The official dictionary does not have [\"apr.\"](https://ordbok.uib.no/perl/ordbok.cgi?OPP=apr&ant_bokmaal=5&ant_nynorsk=5&begge=+&ordbok=begge), but other months have abbreviation mentions (like how september is [\"sep\"](https://ordbok.uib.no/perl/ordbok.cgi?OPP=sep&ant_bokmaal=5&ant_nynorsk=5&begge=+&ordbok=begge)).\r\n\r\nWhen listing months, these things seems strange, but when having an actual date, it makes more sense. Even the dot.\r\n\r\nThis sums of the official version. And personally I like this. Seeing that this is coming up from time to time, maybe we should allow being \"wrong\"? Or we could fix nn, if the confusion comes from the differences.",
      "@sigurdga there is standalone/format versions available (nominative/accusative in some languages). You can have a look at the `ru` translation.",
      "@ichernev after a quick look, I don't think the nominative/accusative versions will cover the \"I want three letters (in column headers)\". And after you merged the updated \"nn\" in #5165, the \"nb\" and \"nn\" are now in sync (and according to the official writing rules).\r\n\r\nThanks for the merge, I hope it will lead to less confusion. And if you know of any internal or official info that can help the people wanting three letters, please let me know, it is a while since I looked into the details.",
      "locale author rejected this change.\r\n\r\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fa98dfb6b84f2427b14",
    "number": 5452,
    "body": "## Changes\r\n* This document is a work in progress and it is used to collect common questions.\r\n* I believe this document can help developers quickly locate and solve some common problems.",
    "head_branch": "FAQ",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/30279176/badge)](https://coveralls.io/builds/30279176)\n\nCoverage increased (+0.02%) to 88.426% when pulling **397d3cb4f4e5a919820224ec44baea52681d2cf8 on Alanscut:FAQ** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "\n[![Coverage Status](https://coveralls.io/builds/30279176/badge)](https://coveralls.io/builds/30279176)\n\nCoverage increased (+0.02%) to 88.426% when pulling **397d3cb4f4e5a919820224ec44baea52681d2cf8 on Alanscut:FAQ** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n"
    ],
    "commit_messages": [
      "[misc] add FAQ.md (#5452)\n\nAdd FAQ addressing some typescript related problems. More to be added in the future."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9faa8dfb6b84f2427b15",
    "number": 5447,
    "body": "This error was introduced by https://github.com/moment/moment/commit/f38d69c3675914442c541c876e116370a731fd40\r\n\r\nThis PR mostly restore the calendar output to the most common formats, which is almost quite same with what it was before above commit.\r\n\r\nThis PR passed the test and will fix:\r\nhttps://github.com/moment/moment/issues/4097\r\nhttps://github.com/moment/moment/issues/4149\r\nhttps://github.com/moment/moment/issues/4354\r\nhttps://github.com/moment/moment/issues/5414 \r\n\r\nAnd you can close other invalid PR like: https://github.com/moment/moment/pull/5357",
    "head_branch": "feature/locale_calendar_zhcn_fix",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/signed)](https://cla.js.foundation/moment/moment?pullRequest=5447) <br/>All committers have signed the CLA.",
      "\n[![Coverage Status](https://coveralls.io/builds/30173638/badge)](https://coveralls.io/builds/30173638)\n\nCoverage decreased (-0.08%) to 88.333% when pulling **2af84df48ec6338d4695d92caa37deb0d48cded0 on ulion:feature/locale_calendar_zhcn_fix** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "\n[![Coverage Status](https://coveralls.io/builds/30909741/badge)](https://coveralls.io/builds/30909741)\n\nCoverage decreased (-0.0005%) to 88.485% when pulling **915aa667dc007e080de4e4738f27f8aeb4e26f07 on ulion:feature/locale_calendar_zhcn_fix** into **e3baef9ea95a46a2affe03e8fa607fffa921448a on moment:develop**.\n",
      "@ulion Do you need to fix `zh-hk.js` and` zh-tw.js` simultaneously?  This should be a general problem for other locales.",
      "Probably we need ask some contributors who are actually in those areas,\nsince the usage maybe different due to different culture.\n\nAlan Wang <notifications@github.com> 于2020年4月20日周一 上午10:56写道：\n\n> @ulion <https://github.com/ulion> Do you need to fix zh-hk.js and zh-tw.js\n> simultaneously?\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/moment/moment/pull/5447#issuecomment-616281399>, or\n> unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AABKYHNXS5PAACRGUB6EDSTRNO2V5ANCNFSM4MLWX5TQ>\n> .\n>\n\n\n-- \nUlion\n",
      "@ben-lin @hehachris @skfd ",
      "@zenozeng can you comment on that please.",
      "> @ulion Do you need to fix `zh-hk.js` and` zh-tw.js` simultaneously? This should be a general problem for other locales.\r\n\r\nAgree with @Alanscut ",
      "> > @ulion Do you need to fix `zh-hk.js` and` zh-tw.js` simultaneously? This should be a general problem for other locales.\r\n> \r\n> Agree with @Alanscut\r\n\r\nI already mentioned @ben-lin @hehachris @skfd who authored that two locale. I'm not sure the culture of that two region indeed, so can not decide for them. let them help themselves would be best.",
      "@ulion Could you update your PR with the latest code?\r\nI am not sure what the status of this is. Did @zenozeng  or @suupic approve?",
      "@marwahaha updated.",
      "@ulion You may need to run eslint fix and prettier\r\n```\r\n./node_modules/eslint/bin/eslint.js Gruntfile.js tasks src --fix\r\nnpm run prettier-fmt\r\n```",
      "Done.\n\nKunal Marwaha <notifications@github.com> 于2020年5月19日周二 下午9:20写道：\n\n> @ulion <https://github.com/ulion> You may need to run eslint fix and\n> prettier\n>\n> ./node_modules/eslint/bin/eslint.js Gruntfile.js tasks src --fix\n> npm run prettier-fmt\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/moment/moment/pull/5447#issuecomment-630812520>, or\n> unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AABKYHL6NA3FMGUGR4QBL33RSKBQFANCNFSM4MLWX5TQ>\n> .\n>\n\n\n-- \nUlion\n",
      "@ulion I am not sure we will get the original locale authors to approve. If you like, please add yourself as a locale author for zh-cn.",
      "This does basically go back to old 'correct' version, which basically came from https://github.com/moment/moment/commit/f4d4efd78403cd22a643635795312821883ba46a and the author is still list in the file, just no activity on github these two years.\r\nSince no new things added here, I'm fine to be not listed.\r\nr u there? @zenozeng though probably not I guess.",
      "Ok.\r\nWould any of you like to be locale authors?\r\nI would prefer to add one more who has been on GitHub recently.\r\n@tokinonagare \r\n@awmleer \r\n@willin  \r\n@huiop368 \r\n@uu109 ",
      "Thank you for asking, I would love to be a locale author of 'zh-cn' language, hope to help you."
    ],
    "commit_messages": [
      "[locale] zh-cn: Improve next/prev week (#5447)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fab8dfb6b84f2427b16",
    "number": 5445,
    "body": "Moment is currently formatting Swedish ordinals incorrectly. Added colon between number and ordinal character.\r\n\r\nPing @ulmus as original author.\r\n\r\nSources:\r\n* https://learningswedish.se/courses/1/pages/ordinal-numbers\r\n* http://swedishbitz.com/ordinal-numbers/",
    "head_branch": "correct-swedish-ordinals",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/30116967/badge)](https://coveralls.io/builds/30116967)\n\nCoverage increased (+0.02%) to 88.426% when pulling **cc9a7ae01641aee10a517b06c8bb9cd2a454a014 on perenstrom:correct-swedish-ordinals** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "I can't really decipher the travis error, but it doesn't seem to be related to my PR?",
      "Would someone please reply about what's going on with Travis errors, there's dozens of PRs waiting due to obscure Travis CI errors, including mine\r\n\r\n@marwahaha @ichernev ",
      "Don't worry about the travis issue for now.\r\n\r\n@perenstrom Can you point to some official documents describing the datetime rules for this locale? Also, if the existing format is also used in practice it makes sense to at least let parsing work for both the old and new format.",
      "@ichernev \r\nI have attached some screenshots from \"Svenska Skrivregler\" (Swedish Rules for Writing) published by \"Institutet för språk och folkminnen\" (Institute for Language and Folklore). They are \"a Swedish government agency with a focus on dialects, language policy, language planning,  names and folklore.\"\r\n\r\nhttps://www.isof.se/om-oss/verksamhet/about-the-institute.html\r\nThe book: https://www.isof.se/om-oss/publikationer/institutets-publikationer/sprakvard/2017-07-06-svenska-skrivregler-2017.html\r\n\r\n## Ordinals\r\nThe screenshots says:\r\n> Ordinals.\r\n> Ordinals are written with numbers followed by a colon and the ordinal's last letter.\r\n\r\n![Screenshot 2020-04-24 09 37 17](https://user-images.githubusercontent.com/765759/80186998-329cf500-860f-11ea-9b0c-17841ace3754.png)\r\n\r\n## Ordinals and date\r\nThe sreenshot says: \r\n>In dates with day followed by month, the day is always written with only numbers (>11.6.2). This also applies to regency numbers, which are always expressed with roman numerals (>11.12).\r\n>Ludvika the 6th of June, Carl XVI Gustaf\r\n\r\n![Screenshot 2020-04-24 09 42 37](https://user-images.githubusercontent.com/765759/80187500-07ff6c00-8610-11ea-8079-09d089f5381e.png)\r\n\r\n## Dates\r\nThe screenshot says:\r\n> Dates\r\n> a) dates with names of month\r\n> Dates kan be written multiple ways. The most clear and suitable way is to write the month's name with letters. This way of dating can always be used in body text as well as in numerous other contexts.\r\n>\r\n> _(den) 20 maj 2009_ (the 20th of May 2009)\r\n>\r\n> The word _den_ (the) is usually written, but can be left out, especially when the date is not in body text. When the month is not given, _den_ (the) has to be written for clarity. Ordinals are normally not marked with colon and ending letter in dates.\r\n>\r\n> _Payment is made den 15 (the 15th) of each month._\r\n>\r\n> If it isn't clear that the text is regarding a date you can for clarity use colon and ending letter.\r\n>\r\n> _It was something mystical with den 15:e (the 15th)_\r\n\r\n![Screenshot 2020-04-24 09 54 03](https://user-images.githubusercontent.com/765759/80188484-88729c80-8611-11ea-8ff6-eb03ebf41fad.png)\r\n"
    ],
    "commit_messages": [
      "[locale] sv: Improve ordinals (#5445)\n\n* [locale] Correct Swedish ordinals\r\n\r\nMoment is currently formatting Swedish ordinals incorrectly. Added colon between number and ordinal character.\r\n\r\nSources:\r\n* https://learningswedish.se/courses/1/pages/ordinal-numbers\r\n* http://swedishbitz.com/ordinal-numbers/\r\n\r\n* Update Swedish ordinal tests\r\n\r\n* Revert \"[locale] Correct Swedish ordinals\"\r\n\r\nThis reverts commit f5aa499d75effd5153b571fd616633f7a9e715cd.\r\n\r\n* Update swedish ordinals, in correct file"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fac8dfb6b84f2427b17",
    "number": 5433,
    "body": "eur e brezhoneg Lizherennañ\r\n\r\nMat eo g.m. evit PM (goude merenn) ha a.m. evit AM (a-raok merenn).\r\n\r\n--\r\nShould be g.m. for PM, stand for goude merenn and a.m. for AM stand for a-raok Merenn\r\n\r\nHere some sources :\r\nhttp://www.brezhoneg.bzh/177-divizou-hag-erbedadennou-ar-chuzul-skiantel.htm\r\nhttps://www.unicode.org/cldr/charts/latest/summary/br.html",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/30903482/badge)](https://coveralls.io/builds/30903482)\n\nCoverage increased (+0.007%) to 88.492% when pulling **7373dbff74a678360e04faac3fe30e30311ce6de on o-Chamie-o:patch-2** into **04b275c44e5ffd6b6936b82b59601f515b21b952 on moment:develop**.\n",
      "@jbleduigou can you comment on this please.\r\n\r\n@o-Chamie-o it would help if you speak english :)",
      "Hi,\r\n\r\nThanks for contributing!\r\n\r\nWe actually moved away from the 12 hour notation.\r\nSee this PR: https://github.com/moment/moment/pull/4975\r\n\r\nI don't know if it has been actually released?",
      "> it would help if you speak english :)\r\n\r\nAll translated on my comment. :) @ichernev \r\n\r\nHum strange choice, @jbleduigou as I mentioned, the Unicode recommandation and the one from the OPAB are 12 based.\r\n\r\nI can double check this maybe ? :thinking: ",
      "> Hum strange choice, @jbleduigou as I mentioned, the Unicode recommandation and the one from the OPAB are 12 based.\r\n> \r\n> I can double check this maybe ? 🤔\r\n\r\nI actually don't have strong opinions on this one.\r\nIt might make more sense to use 12 hours.",
      "@o-Chamie-o about the other changes -- they mostly revolve around this quote. Do people use these special characters when they type? If not then parsing will be completely broken (for reading in dates from user input).",
      "I true that, the parsing will be broken. :( As on the keyboard the single quote is used instead of the apostrophe.\r\n\r\nCan we add option in the parser ? For both single quote and apostrophe maybe ?\r\n\r\nIn order to display it right. :)",
      "This should do the trick right ? @ichernev \r\n```\r\nvar monthsParse = [/^genver/i, /^c[ʼ\\']hwevrer/i, /^meurzh/i, /^ebrel/i, /^mae/i, /^mezheven\\/i, /^gouere/i, /^eost/i, /^gwengolo/i, /^here/i, /^du/i, /^kerzu/i];\r\nvar monthsShortParse = [/^gen/i, /^c[ʼ\\']hwe/i, /^meu/i, /^ebr/i, /^mae/i, /^eve\\/i, /^gou/i, /^eos/i, /^gwe/i, /^her/i, /^du/i, /^ker/i];\r\nvar weekdaysParse = [/^sul/i, /^lun/i, /^meurzh/i, /^merc[ʼ\\']her/i, /^yaou/i, /^gwener\\/i, /^sadorn/i,];\r\n...\r\nmonthsParse : monthsParse,\r\nmonthsShortParse : monthsShortParse,\r\nweekdaysParse  : weekdaysParse ,\r\n\r\n```\r\nOther advantage, we now support case incensitive case. ;)",
      "@o-Chamie-o well, yes. If we don't want to break existing code the parsing regexes should be more lenient.\r\n\r\nAlso make sure to add tests for parsing with different quote. Esp important if any names contain spaces (I think this is not the case for this locale, but still).",
      "Hi,\r\nSorry for the delay, I have been fairly busy lately and didn't get a chance to review this PR.\r\nI went through the links you provided.\r\n\r\nUsing a.m. and p.m. was definitely wrong.\r\nSwitching to 24 hours notation was an okay workaround.\r\nBut ultimately I believe that your suggestion with a.m and g.m. is better.\r\n\r\nThanks for contributing!",
      "No worries @jbleduigou :)\r\n\r\nThanks to you for the BR locale support in the first place. :)",
      "@o-Chamie-o glad to hear you have approval from the locale author.\r\nCould you please update with the latest code on `develop` branch and resolve conflicts?\r\nIf you need help with this let me know.\r\nThen we can merge it!",
      "Arf some issues with the month parsing. :( ",
      "Oh no :( hope you can get it fixed!",
      ":pray: Thanks a bunch @marwahaha \r\nMersi bras dit. :)"
    ],
    "commit_messages": [
      "[locale] br: Add meridiem translation and correct quotemark (#5433)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fad8dfb6b84f2427b18",
    "number": 5432,
    "body": "eur e brezhoneg Lizherennañ\r\n\r\nMat eo g.m. evit PM (goude merenn) ha a.m. evit AM (a-raok merenn).\r\n\r\n-- \r\nShould be g.m. for PM, stand for goude merenn and a.m. for AM stand for a-raok Merenn\r\n\r\nHere some sources : \r\nhttp://www.brezhoneg.bzh/177-divizou-hag-erbedadennou-ar-chuzul-skiantel.htm\r\nhttps://www.unicode.org/cldr/charts/latest/summary/br.html",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/signed)](https://cla.js.foundation/moment/moment?pullRequest=5432) <br/>All committers have signed the CLA.",
      "\n[![Coverage Status](https://coveralls.io/builds/29792824/badge)](https://coveralls.io/builds/29792824)\n\nCoverage increased (+0.02%) to 88.426% when pulling **5b036029797f94705d49508cc93648b901e299e9 on o-Chamie-o:patch-1** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "Sorry wrong folder \r\ncf https://github.com/moment/moment/pull/5433"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fae8dfb6b84f2427b19",
    "number": 5427,
    "body": "There is a missing point in the arabic name for \"Monday\"\r\nI didn't check the other arabic locales, but they should be written in the same way.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/29698825/badge)](https://coveralls.io/builds/29698825)\n\nCoverage remained the same at 88.41% when pulling **e05454bdf03f7cad9eccd3e4be4997c89ba84442 on Kafiil:patch-1** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "@Kafiil can you provide some proof that the change you're suggesting is indeed correct?\r\n\r\n@ElFadiliY @abdelsaid can you comment on this please?",
      "![Untitled](https://user-images.githubusercontent.com/15774583/80108444-d3d26f80-856b-11ea-81f0-699a9b8214a4.png)\r\n",
      "This is not specific to a locale. I just noticed it because I used ar-ma locale.\r\n\r\nIt's an Arabic word that is written wrong.",
      "Great work ! ",
      "Yes, It should be \"الإثنين\" instead of \"الإتنين\"\r\n\r\n**Three dots** in the **4th letter** instead of **2 dots**."
    ],
    "commit_messages": [
      "[locale] ar-ma: Fix a typo in monday (#5427)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9faf8dfb6b84f2427b1a",
    "number": 5426,
    "body": "There is a missing point in the arabic name from \"Monday\"\r\nI didn't check the other ar locales, but they should be written in the same way.",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/signed)](https://cla.js.foundation/moment/moment?pullRequest=5426) <br/>All committers have signed the CLA.",
      "\n[![Coverage Status](https://coveralls.io/builds/29698385/badge)](https://coveralls.io/builds/29698385)\n\nCoverage remained the same at 88.41% when pulling **7b6357cd8aba9497a825bcfb44b84cfd0b114271 on Kafiil:develop** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fb08dfb6b84f2427b1b",
    "number": 5418,
    "body": "Stricter typing outlining that obviously moment won't mutate the params passed to the creator. (I hope!)\r\n\r\nMaybe a few more Readonly could be added here and there but I'm not an expert. Feel free to edit this PR.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "@Offirmo fixing typescript definitions line by line is a (maintenance) disaster. If you want this merged -- look through the API and add it in all necessary places. If you're unsure if the input is changed (most of the time it shouldn't be) look in the code.",
      "@ichernev I'm not sure I understand, sorry. \"look through the API and add it in all necessary places\" Do you mean there is another file to modify which generates the typings?",
      "So you're saying in the whole of moment, the only 3 things that are read-only arguments are these? Also is this TS1.x compliant?",
      "Ok I got it. No worries mate!"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fb18dfb6b84f2427b1c",
    "number": 5411,
    "body": "This PR fixes some spelling mistakes in the Irish language/Gaeilge (GA) locale file.\r\n\r\nFor example, the correct spelling for October is 'Deireadh Fómhair' (rather than 'Deaireadh Fómhair' previously) (see an authoritative source [here](https://www.tearma.ie/q/October/)).\r\n\r\nThere may other improvements to be made in terms of how the locale handles ordinal numbers, and I hope to look at this when I have a chance, but this PR addresses the most glaring issues.\r\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/signed)](https://cla.js.foundation/moment/moment?pullRequest=5411) <br/>All committers have signed the CLA.",
      "\n[![Coverage Status](https://coveralls.io/builds/29383248/badge)](https://coveralls.io/builds/29383248)\n\nCoverage remained the same at 88.41% when pulling **343b05cf47945c2c449647c7743c7439eac0640d on rodoch:develop** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "@askpt any notes?",
      "> @askpt any notes?\r\n\r\n@rodoch is right per the official website he sent. Thank you for the fixes!",
      "Merged in 8dac92cb60a8f71b16f672f79731744616a3a689",
      "I had to fix the tests myself ... boy this is not fun."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fb28dfb6b84f2427b1d",
    "number": 5409,
    "body": "- Replace `za` preposition with `o` in `src/locale/sk.js` and `src/test/locale/sk.js`.",
    "head_branch": "fix_sk.js",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/signed)](https://cla.js.foundation/moment/moment?pullRequest=5409) <br/>All committers have signed the CLA.",
      "I have already signed the CLA, but the `licence/cla` does not recognise it for some reason.",
      "\n[![Coverage Status](https://coveralls.io/builds/29325690/badge)](https://coveralls.io/builds/29325690)\n\nCoverage decreased (-0.02%) to 88.394% when pulling **2d765f9e776f3c23b1518e155d74c6cde25e8c2e on tukusejssirs:fix_sk.js** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "The first four of six Travis build tests pass.\r\n\r\nThe [4700.5](https://travis-ci.org/github/moment/moment/jobs/661629839?utm_medium=notification&utm_source=github_status) test fails in `npm install`.\r\n\r\nThe [4700.6](https://travis-ci.org/github/moment/moment/jobs/661629840?utm_medium=notification&utm_source=github_status) test fails in `grunt build:travis`.\r\n\r\nI cannot fix neither of the above issues.\r\n\r\nWhen this PR is merged, the iamkun/dayjs#833 could be merged, and consequently romcal/romcal#186 will be fixed.",
      "@k2s @petrbela any comments on this?\r\n@tukusejssirs can you provide some proof that this change is indeed correct?",
      "@ichernev It depends, but this pull request is breaking change.\r\n\r\nBooth is correct:\r\n* I will write this answer in 5 minutes = o 5 minút\r\n* I wrote it in 5 minutes = za 5 minút\r\n\r\nIf it is possible in `moment` to provide context, then the translation should support booth prepositions, otherwise `za` needs to be replaced in the result with `o` by programmer. Existing code will break code that already does this.\r\n\r\nauthoritative reference for Slovak language that booth is correct based on context:\r\n\r\n* https://jazykovaporadna.sme.sk/q/1183/\r\n* https://jazykovaporadna.sme.sk/q/9030/\r\n",
      "@k2s is right, I’ve missed the _done in n minutes_ case.\r\n\r\nJust in case someone who does not understand/speak Slovak reads this, [this link](https://jazykovaporadna.sme.sk/q/1183/) (first link from the [comment](https://github.com/moment/moment/pull/5409#issuecomment-618482801) by @k2s) says that:\r\n- `za` is used when we talk about a _period_ during which something is done (like _He cooked it in an hour._);\r\n- `o` is used when we talk about a _point in time_ (like _She’s back in a minute._).",
      "@tukusejssirs just do updateLocale in your own project, and you should be good to go: https://momentjs.com/docs/#/customization/relative-time/\r\n\r\n@k2s thank you!",
      "Any way to solve this if I wish to use `o` in reference to future time? Call me a nazi, though it simply is incorrect and I wish to display a correct string.",
      "> Any way to solve this if I wish to use `o` in reference to future time? Call me a nazi, though it simply is incorrect and I wish to display a correct string.\r\n\r\n`.replace('za', 'o')`\r\nI am not aware about any exception where this would not work.",
      "Buy a red car then have it painted blue.  🙄"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fb38dfb6b84f2427b1e",
    "number": 5404,
    "body": "This fix #3988\r\n\r\nBut I need help on 2 test that don't pass, \r\n\r\nErrors:\r\n\r\nModule: locale:pt-br Test: date format correctness\r\nDied on test #5     at global.test.QUnit.test (/home/luizcorreia/repos/moment/node_modules/node-qunit/lib/child.js:133:21)\r\n    at defineCommonLocaleTests (/home/luizcorreia/repos/moment/build/umd/test/locale/pt-br.js:141:9)\r\n    at localeModule (/home/luizcorreia/repos/moment/build/umd/test/locale/pt-br.js:286:9)\r\n    at /home/luizcorreia/repos/moment/build/umd/test/locale/pt-br.js:289:5\r\n    at /home/luizcorreia/repos/moment/build/umd/test/locale/pt-br.js:4:43\r\n    at Object.<anonymous> (/home/luizcorreia/repos/moment/build/umd/test/locale/pt-br.js:7:2)\r\n    at Module._compile (internal/modules/cjs/loader.js:955:30): localeData[baseToken].replace is not a function\r\nTypeError: localeData[baseToken].replace is not a function\r\n    at /home/luizcorreia/repos/moment/build/umd/test/locale/pt-br.js:151:56\r\n    at each (/home/luizcorreia/repos/moment/build/umd/test/locale/pt-br.js:12:13)\r\n    at /home/luizcorreia/repos/moment/build/umd/test/locale/pt-br.js:148:17\r\n    at each (/home/luizcorreia/repos/moment/build/umd/test/locale/pt-br.js:12:13)\r\n    at Object.<anonymous> (/home/luizcorreia/repos/moment/build/umd/test/locale/pt-br.js:145:13)\r\n\r\nModule: locale:pt-br Test: format\r\nDied on test #18     at global.test.QUnit.test (/home/luizcorreia/repos/moment/node_modules/node-qunit/lib/child.js:133:21)\r\n    at /home/luizcorreia/repos/moment/build/umd/test/locale/pt-br.js:311:5\r\n    at /home/luizcorreia/repos/moment/build/umd/test/locale/pt-br.js:4:43\r\n    at Object.<anonymous> (/home/luizcorreia/repos/moment/build/umd/test/locale/pt-br.js:7:2)\r\n    at Module._compile (internal/modules/cjs/loader.js:955:30)\r\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:991:10)\r\n    at Module.load (internal/modules/cjs/loader.js:811:32): Cannot read property 'hours' of undefined\r\nTypeError: Cannot read property 'hours' of undefined\r\n    at LLL (/home/luizcorreia/repos/moment/build/umd/locale/pt-br.js:23:72)\r\n    at Locale.longDateFormat (/home/luizcorreia/repos/moment/build/umd/moment.js:442:48)\r\n    at replaceLongDateFormatTokens (/home/luizcorreia/repos/moment/build/umd/moment.js:624:27)\r\n    at String.replace (<anonymous>)\r\n    at expandFormat (/home/luizcorreia/repos/moment/build/umd/moment.js:629:29)\r\n    at formatMoment (/home/luizcorreia/repos/moment/build/umd/moment.js:614:18)\r\n    at Moment.format (/home/luizcorreia/repos/moment/build/umd/moment.js:3379:22)\r\n    at Object.<anonymous> (/home/luizcorreia/repos/moment/build/umd/test/locale/pt-br.js:340:28)\r\n",
    "head_branch": "hotfix/wrong-plural-pt-br",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/signed)](https://cla.js.foundation/moment/moment?pullRequest=5404) <br/>All committers have signed the CLA.",
      "@caio-ribeiro-pereira can you comment on this?\r\n@luizcorreia you should only change files under `src/**` not `locale/*` or `package-lock.js`.",
      "Note to self: I believe the dynamic long date format tokens are an issue, because they are evaluated once, so whichever format \"clicks\" the first time, it will be used forever.",
      "You can try to rebase, and drop the changes outside of `src`.",
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: luizcorreia / name: Luiz Correia  (6fb5372f6085709b04a54797770063330b0a35aa)</li></ul>",
      "> You can try to rebase, and drop the changes outside of `src`.\r\n\r\nPlease review now."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fb48dfb6b84f2427b1f",
    "number": 5400,
    "body": "`7200000`milliseconds is not `2minutes` but `2hours`.\r\nIn the test for `duration`, I fixed a wrong message for the test result about it.",
    "head_branch": "fix-message",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/29046839/badge)](https://coveralls.io/builds/29046839)\n\nCoverage decreased (-0.07%) to 88.336% when pulling **e687e03bf202a947f0b4abbb7bb21b49d59c8a26 on HyunSangHan:fix-message** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "\n[![Coverage Status](https://coveralls.io/builds/29046839/badge)](https://coveralls.io/builds/29046839)\n\nCoverage decreased (-0.07%) to 88.336% when pulling **e687e03bf202a947f0b4abbb7bb21b49d59c8a26 on HyunSangHan:fix-message** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "I just change the message of `assert` which already exists... I don't know why the coverage is decreased. 🤔"
    ],
    "commit_messages": [
      "[tests] Fix the humanize test message (#5400)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fb58dfb6b84f2427b20",
    "number": 5399,
    "body": "In `src/locale/en-li.js`, `ss` is not under `relativeTime`.\r\nSo `'%d seconds'` has not been supported yet.",
    "head_branch": "en-li/ss",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/29046759/badge)](https://coveralls.io/builds/29046759)\n\nCoverage decreased (-0.07%) to 88.336% when pulling **9efacdf762da65eb658d59eeb72754d7277b02a2 on HyunSangHan:en-li/ss** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "\n[![Coverage Status](https://coveralls.io/builds/29046759/badge)](https://coveralls.io/builds/29046759)\n\nCoverage decreased (-0.07%) to 88.336% when pulling **9efacdf762da65eb658d59eeb72754d7277b02a2 on HyunSangHan:en-li/ss** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "I could not help decreasing the coverage, because the thresholds of `s` and `ss` are below:\r\n```js\r\nvar thresholds = {\r\n    ss: 44,         // a few seconds to seconds\r\n    s : 45,         // seconds to minute\r\n    m : 45,         // minutes to hour\r\n    h : 22,         // hours to day\r\n    d : 26,         // days to month\r\n    M : 11          // months to year\r\n};\r\n```"
    ],
    "commit_messages": [
      "[locale] (en-li) Support ss (#5399)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fb68dfb6b84f2427b21",
    "number": 5390,
    "body": null,
    "head_branch": "moment-added-igbo",
    "is_a_fork": true,
    "comments": [
      "@bukkysos you should add you file under `src/locale/xx.js`, don't modify `locale/**`. Also use the correct locale designation (2 letters + 2 letter country in most cases).",
      "The correct code is `ig` https://en.wikipedia.org/wiki/Igbo_language ISO 639-1",
      "I just noticed you haven't added a test file. All locales have one -- have a look under `src/test/locale/*.js`",
      "@bukkysos any update?",
      "You need to name the locale file `ig.js` and place it under `src/locale/ig.js`. Also tests go under `src/test/locale/ig.js`. You have copied the locale code for the test file... this is not how it works. Examine another locale test file for inspiration.\r\n\r\nClosing for now, feel free to re-open if you fix the above"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fb78dfb6b84f2427b22",
    "number": 5387,
    "body": "I fixed the abbreviation for the February month in Romanian so that it follows Romanian grammar rules.\r\n\r\nResources where this abbreviation is appearing:\r\n- https://web.library.yale.edu/cataloging/months\r\n- http://abrevierile.ro/colectii/lunile-anului\r\n- https://www.baylor.edu/lib/librarystaff/index.php?id=62713\r\n\r\n",
    "head_branch": "cepem/fixRomanianMonthAbbreviation",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/signed)](https://cla.js.foundation/moment/moment?pullRequest=5387) <br/>All committers have signed the CLA.",
      "\n[![Coverage Status](https://coveralls.io/builds/28781343/badge)](https://coveralls.io/builds/28781343)\n\nCoverage remained the same at 88.41% when pulling **c74a610fef123960f61aa16eb273f787bd7867f0 on cepem:cepem/fixRomanianMonthAbbreviation** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "@gurdiga @avaly any comment on this?"
    ],
    "commit_messages": [
      "[locale] ro: Improve Feb translation (#5387)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fb78dfb6b84f2427b23",
    "number": 5384,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/28776135/badge)](https://coveralls.io/builds/28776135)\n\nCoverage remained the same at 88.41% when pulling **24e10f6cade2b69b208cbce4c03335a217eea774 on bkyceh:patch-1** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "\n[![Coverage Status](https://coveralls.io/builds/30287614/badge)](https://coveralls.io/builds/30287614)\n\nCoverage increased (+0.02%) to 88.426% when pulling **24e10f6cade2b69b208cbce4c03335a217eea774 on bkyceh:patch-1** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "@B0k0 @bkyceh any comments on this?",
      "@ichernev \r\nIt's good."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fb88dfb6b84f2427b24",
    "number": 5357,
    "body": "This PR should fix #4097\r\n\r\nHowever, it seems that a lot of tests are written according to the incorrect implementtaion, this PR breaks a lot of tests.",
    "head_branch": "issue-4097",
    "is_a_fork": true,
    "comments": [
      "@le0tan as all time-related problems this is more of a feature than a bug. Some locales treat this one way, some another.\r\n\r\nChanging the core moment like you're suggesting is going to break the experience for everybody (and the tests will fail, of course).\r\n\r\nThere is only one sane way to implement this: specify next/previous week/day handling logic (there will be multiple specifications), and then have each locale choose which way it wants to treat previous/next weeks/days. Of course the existing logic needs to be the default.\r\n\r\nThe fact that this \"bug\" has stayed for so long is (most probably) because most other users don't consider it to be a bug (for their use case/locale), so you can't just break it because you *think* your way is the right way.",
      "closing in favor of #5447"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fb98dfb6b84f2427b25",
    "number": 5356,
    "body": "This PR is related to #4949, and fixes an error in un-merged PR #4971 ",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/28194458/badge)](https://coveralls.io/builds/28194458)\n\nCoverage decreased (-0.06%) to 88.354% when pulling **1155dfb923799a7c24e50c224f1e9c796a26d2a5 on le0tan:develop** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "\n[![Coverage Status](https://coveralls.io/builds/30288258/badge)](https://coveralls.io/builds/30288258)\n\nCoverage increased (+0.02%) to 88.427% when pulling **dd5661b14d384d12d354ceb69394a9b19e9eddff on le0tan:develop** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n"
    ],
    "commit_messages": [
      "[new locale] zh-mo: Chinese (Macau) (#5356)\n\n* Add locale support for zh-mo\r\n* Update zh-mo.js"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fba8dfb6b84f2427b26",
    "number": 5352,
    "body": "@torniker Please have a look at it\r\n\r\n\"აგვისტს\" is incorrect, suppose to be \"აგვისტოს\"",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/28153844/badge)](https://coveralls.io/builds/28153844)\n\nCoverage increased (+0.02%) to 88.426% when pulling **5244c579e9dc0723168e4e9de56ddd87e9b7cf06 on bichiko:patch-2** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "@bichiko check this out: https://github.com/moment/moment/pull/5279",
      "Close in favor of #5279"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fbb8dfb6b84f2427b27",
    "number": 5351,
    "body": "@marwahaha Please have a look at it.\r\n\"აგვისტს\" is incorrect, suppose to be \"აგვისტოს\"\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/not_signed)](https://cla.js.foundation/moment/moment?pullRequest=5351) <br/>Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our [Contributor License Agreement](https://cla.js.foundation/moment/moment?pullRequest=5351) before we can accept your contribution.<br/>",
      "\n[![Coverage Status](https://coveralls.io/builds/28153619/badge)](https://coveralls.io/builds/28153619)\n\nCoverage increased (+0.02%) to 88.426% when pulling **d1f1f8194cc434719edce0b3c02cf8d0e5a049cd on bichiko:patch-1** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "\n[![Coverage Status](https://coveralls.io/builds/28153619/badge)](https://coveralls.io/builds/28153619)\n\nCoverage increased (+0.02%) to 88.426% when pulling **d1f1f8194cc434719edce0b3c02cf8d0e5a049cd on bichiko:patch-1** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fbc8dfb6b84f2427b28",
    "number": 5343,
    "body": "Aldono de la litero \"t\" por marto kaj septembro por distingi ilin de mardo kaj sep=7 (linio 13).\r\nKorekto de kelkaj esprimoj, en kiuj mankis akuzativo (linioj 23, 39 kaj 41).\r\nAldono de \"kelkaj\" por \"s\" (linio 47). Aldono de \"unu\" por \"m\", \"h\", \"d\", \"M\" kaj \"y\" (linioj 49 51 53 55 kaj 57), ĉar temas pri la kvanto \"1\", male al nedifinita afero.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/signed)](https://cla.js.foundation/moment/moment?pullRequest=5343) <br/>All committers have signed the CLA.",
      "\n[![Coverage Status](https://coveralls.io/builds/27968731/badge)](https://coveralls.io/builds/27968731)\n\nCoverage decreased (-0.004%) to 88.406% when pulling **406a59d0d254c3b4a2d0cde735a369343b742c4d on Vivakvo:patch-1** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "@Vivakvo you need to change files under `src/locale/eo.js` and `src/test/locale/eo.js`, not `locale/*.js`.\r\n@Vivakvo you also need to provide some proof that your changes are correct (official sources).\r\nAlso you can try to speak English.\r\n\r\n@colindean @miestasmia what do you think?",
      "Mi aprobas kun la suggesto de @ichernev kompletiĝonta! \r\n\r\nI approve with @ichernev's suggestion about to be completed!",
      "Thank you for your comments. I'm pleased to see some humans here.  \r\nThank you for your help, I don't know this github very well and I am going to put the file at the right place.  \r\nAbout proof, first I can say that I'm speaking Esperanto for 30 years, and I teach it for about 20 years. I can try to explain in english the reasons of the changes I propose, but are there some Esperanto speakers here to understand and approve them ?",
      "I yield to @Vivakvo's experience. All of the suggestions are sensible.\r\n\r\n@Vivakvo, can you make the appropriate changes two these two files?\r\n\r\n1. https://github.com/Vivakvo/moment/blob/patch-1/src/locale/eo.js\r\n2. https://github.com/Vivakvo/moment/blob/patch-1/src/test/locale/eo.js\r\n\r\nI've already linked directly to the branch on your personal fork of `moment`, so you, in theory, need only hit _edit_ to make the changes.\r\n\r\nDankon!",
      "Hello @colindean !  \r\nI have made the changes by the pull requests [5455](https://github.com/moment/moment/pull/5455) and [5456](https://github.com/moment/moment/pull/5456).\r\nIs it suitable? Ĉu tio taŭgas kaj sufiĉas? Or must I make the changes again using the url you gave?\r\nAmike,\r\nYves",
      "Combined, they are correct but they must be submitted together in order to pass tests! Don't worry,  I'll handle that. However, there are some edge cases that your modifications don't handle:\r\n\r\nKombinita, ili estas korekta, sed vi devas prezentiĝi ilin kune por pasi testojn. Via sxangxoj estas nekompleta, kvankam: kelkaj testoj ne pasas. Mi helpos!\r\n\r\n```\r\nErrors:\r\n\r\nModule: locale:eo Test: format\r\nllll ---> dim, la 14-an de feb, 2010 15:25\r\n    at Object.<anonymous> (/Users/colin/Source/moment/build/umd/test/locale/eo.js:334:20)\r\nActual value:\r\ndimn, la 14-an de feb, 2010 15:25\r\nExpected value:\r\ndim, la 14-an de feb, 2010 15:25\r\n\r\nModule: locale:eo Test: fromNow\r\npost kelkaj sekundoj\r\n    at Object.<anonymous> (/Users/colin/Source/moment/build/umd/test/locale/eo.js:431:16)\r\nActual value:\r\npost kelkaj sekundoj\r\nExpected value:\r\npost kelakj sekundoj\r\n\r\nModule: locale:eo Test: calendar next week\r\nToday + 2 days current time\r\n    at Object.<anonymous> (/Users/colin/Source/moment/build/umd/test/locale/eo.js:451:20)\r\nActual value:\r\nsabaton je 21:19\r\nExpected value:\r\nsabato je 21:19\r\n\r\nModule: locale:eo Test: calendar next week\r\nToday + 2 days beginning of day\r\n    at Object.<anonymous> (/Users/colin/Source/moment/build/umd/test/locale/eo.js:453:20)\r\nActual value:\r\nsabaton je 00:00\r\nExpected value:\r\nsabato je 00:00\r\n\r\nModule: locale:eo Test: calendar next week\r\nToday + 2 days end of day\r\n    at Object.<anonymous> (/Users/colin/Source/moment/build/umd/test/locale/eo.js:455:20)\r\nActual value:\r\nsabaton je 23:59\r\nExpected value:\r\nsabato je 23:59\r\n\r\nModule: locale:eo Test: calendar next week\r\nToday + 3 days current time\r\n    at Object.<anonymous> (/Users/colin/Source/moment/build/umd/test/locale/eo.js:451:20)\r\nActual value:\r\ndimanĉon je 21:19\r\nExpected value:\r\ndimanĉo je 21:19\r\n\r\nModule: locale:eo Test: calendar next week\r\nToday + 3 days beginning of day\r\n    at Object.<anonymous> (/Users/colin/Source/moment/build/umd/test/locale/eo.js:453:20)\r\nActual value:\r\ndimanĉon je 00:00\r\nExpected value:\r\ndimanĉo je 00:00\r\n\r\nModule: locale:eo Test: calendar next week\r\nToday + 3 days end of day\r\n    at Object.<anonymous> (/Users/colin/Source/moment/build/umd/test/locale/eo.js:455:20)\r\nActual value:\r\ndimanĉon je 23:59\r\nExpected value:\r\ndimanĉo je 23:59\r\n\r\nModule: locale:eo Test: calendar next week\r\nToday + 4 days current time\r\n    at Object.<anonymous> (/Users/colin/Source/moment/build/umd/test/locale/eo.js:451:20)\r\nActual value:\r\nlundon je 21:19\r\nExpected value:\r\nlundo je 21:19\r\n\r\nModule: locale:eo Test: calendar next week\r\nToday + 4 days beginning of day\r\n    at Object.<anonymous> (/Users/colin/Source/moment/build/umd/test/locale/eo.js:453:20)\r\nActual value:\r\nlundon je 00:00\r\nExpected value:\r\nlundo je 00:00\r\n\r\nModule: locale:eo Test: calendar next week\r\nToday + 4 days end of day\r\n    at Object.<anonymous> (/Users/colin/Source/moment/build/umd/test/locale/eo.js:455:20)\r\nActual value:\r\nlundon je 23:59\r\nExpected value:\r\nlundo je 23:59\r\n\r\nModule: locale:eo Test: calendar next week\r\nToday + 5 days current time\r\n    at Object.<anonymous> (/Users/colin/Source/moment/build/umd/test/locale/eo.js:451:20)\r\nActual value:\r\nmardon je 21:19\r\nExpected value:\r\nmardo je 21:19\r\n\r\nModule: locale:eo Test: calendar next week\r\nToday + 5 days beginning of day\r\n    at Object.<anonymous> (/Users/colin/Source/moment/build/umd/test/locale/eo.js:453:20)\r\nActual value:\r\nmardon je 00:00\r\nExpected value:\r\nmardo je 00:00\r\n\r\nModule: locale:eo Test: calendar next week\r\nToday + 5 days end of day\r\n    at Object.<anonymous> (/Users/colin/Source/moment/build/umd/test/locale/eo.js:455:20)\r\nActual value:\r\nmardon je 23:59\r\nExpected value:\r\nmardo je 23:59\r\n\r\nModule: locale:eo Test: calendar next week\r\nToday + 6 days current time\r\n    at Object.<anonymous> (/Users/colin/Source/moment/build/umd/test/locale/eo.js:451:20)\r\nActual value:\r\nmerkredon je 21:19\r\nExpected value:\r\nmerkredo je 21:19\r\n\r\nModule: locale:eo Test: calendar next week\r\nToday + 6 days beginning of day\r\n    at Object.<anonymous> (/Users/colin/Source/moment/build/umd/test/locale/eo.js:453:20)\r\nActual value:\r\nmerkredon je 00:00\r\nExpected value:\r\nmerkredo je 00:00\r\n\r\nModule: locale:eo Test: calendar next week\r\nToday + 6 days end of day\r\n    at Object.<anonymous> (/Users/colin/Source/moment/build/umd/test/locale/eo.js:455:20)\r\nActual value:\r\nmerkredon je 23:59\r\nExpected value:\r\nmerkredo je 23:59\r\n```\r\n\r\nI'm going to submit a clean PR with your #5455 and #5456 on the same branch, plus some commits that fix the problems I see.",
      "@Vivakvo Which is correct, 1 or 2? Kiuj estas korekta?\r\n\r\n1, your changes / viaj ŝanĝoj:\r\n\r\n    dimn, la 14-an de feb, 2010 15:25\r\n\r\n2: original / originalo:\r\n\r\n    dim, la 14-an de feb, 2010 15:25\r\n\r\nMi ne memoras vidantan la tempmarkon kiel 1.\r\n\r\n(Pardonu min, mia Esperanto estas sen ĵusa kutimo!)",
      "@colindean Dankon pro viaj rimarkoj kaj helpoj. Thank you for your help and comments.\r\nMi regas Esperanton sed ne tute programadon.\r\nBetween 1 and 2, of course only the original 2 is correct (no accusative to the short days). The accusative is put only to the long days (dimanĉon, la 14-an de feb...).\r\nCould you correct this, because I don't know exactly where I should modify this (I saw LLLL but not llll in the file)?",
      "@colindean \r\nI didn't reply all the incorrect tests you have mentioned yesterday, but I suppose you didn't ask me because you knew the right response. \r\nIn particular, one must write \"post kelkaj sekundoj\" and not \"post kelakj sekundoj\" (tio estas tajperaro).\r\nFor the other dates, the right writing is with the accusative: dimanĉon, lundon, mardon, ktp."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fbd8dfb6b84f2427b29",
    "number": 5340,
    "body": "maybe wee don't need jsnext:main any more\r\nsee [discussion](https://www.reddit.com/r/javascript/comments/5jwg9c/confused_about_fields_module_and_jsnextmain_in/)\r\n",
    "head_branch": "fix-packageJSNext",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/signed)](https://cla.js.foundation/moment/moment?pullRequest=5340) <br/>All committers have signed the CLA.",
      "\n[![Coverage Status](https://coveralls.io/builds/27923835/badge)](https://coveralls.io/builds/27923835)\n\nCoverage decreased (-0.06%) to 88.352% when pulling **40757686627daa946f1e0a401c3ea80ccb0db1fc on howel52:fix-packageJSNext** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "cc @marwahaha ",
      "@howel52 just don't touch the changelog. You cant retroactively change an old changelog ... it is generated on release.",
      "Merged in 0d0eabd9a50c2ccb3e0818798abcab3ae86339e9",
      "I didn't remove the jsnext:main property. It will certainly break somebody's workflow."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fbe8dfb6b84f2427b2a",
    "number": 5336,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fbf8dfb6b84f2427b2b",
    "number": 5335,
    "body": "Minor repairs",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fc08dfb6b84f2427b2c",
    "number": 5331,
    "body": "Environment: nodejs\r\nIssue: whenever DateTime formatting is used for en-US, it keeps trying to load en-US, en-us before falling back to en locale taking 100% CPU for every formatting call. \r\nExpected: whenever a missing locale is found, it should not attempt to load/require it again and proceed to fallback locale.",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/signed)](https://cla.js.foundation/moment/moment?pullRequest=5331) <br/>All committers have signed the CLA.",
      "Note: the dev branch had been failing (15 test failures) before this PR",
      "when I go to CLA, it says I have signed, but it shows as unsigned here",
      "@dimichgh ok I see what you did here, but I don't like the test, it will definitely blow up at some point. You can move it to benchmark, but generally you can't rely that something will happen in a short amount of time.",
      "Merged in fc8885cf5205d08bd677a079312640ddcfd32c8e",
      "I added a benchmark, and there was a slight difference on my machine, but overall (on node 14.0.0 on linux) this change didn't introduce any speedups. In any case it is merged."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fc18dfb6b84f2427b2d",
    "number": 5330,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/signed)](https://cla.js.foundation/moment/moment?pullRequest=5330) <br/>All committers have signed the CLA.",
      "@ahmadmayahi you have to change `src/locale/ar.js` and `src/test/locale/ar.js` instead of `locale/ar.js`.\r\nAlso can you provide some proof that this change is indeed correct?\r\n\r\n@abdelsaid @forabi what do you think?",
      "It's not a typo. Different Arabic \"school of thoughts\" put the terminal diacritic for the accusative case and adverbs (i.e. tanween an-nasb) in different positions: it can either be placed on the last letter of the word or the one before it. Both are accepted forms. I don't like that this was presented as a \"typo\".",
      "@ahmadmayahi ok, I'm not merging this. But for your project you can simply do moment.updateLocale with a few minor tweaks so everyone is happy: https://momentjs.com/docs/#/customization/calendar/"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fc28dfb6b84f2427b2e",
    "number": 5329,
    "body": "Fix the issue moment#5327.",
    "head_branch": "fix/wrong-next-week-in-ja-locale",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/30197417/badge)](https://coveralls.io/builds/30197417)\n\nCoverage remained the same at 88.41% when pulling **58b5fe535e91b44450e0a775dfd2cb91d549ac56 on terrencew97:fix/wrong-next-week-in-ja-locale** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "should the other similar place in the code be fixed?",
      "> should the other similar place in the code be fixed?\r\n\r\nI did a global search before and seems only ja has this problem. ",
      "I mean, in the ja locale file, there is the other similar place need to do\nthis fix.\n\nTerrence Wong <notifications@github.com> 于2020年4月20日周一 下午9:22写道：\n\n> should the other similar place in the code be fixed?\n>\n> I did a global search before and seems only ja has this problem.\n>\n> —\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/moment/moment/pull/5329#issuecomment-616549558>, or\n> unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AABKYHO2T3ZLTFXQOFTP5NLRNRECNANCNFSM4KAIOMWQ>\n> .\n>\n\n\n-- \nUlion\n",
      "> I mean, in the ja locale file, there is the other similar place need to do this fix. Terrence Wong <notifications@github.com> 于2020年4月20日周一 下午9:22写道：\r\n> […](#)\r\n> should the other similar place in the code be fixed? I did a global search before and seems only ja has this problem. — You are receiving this because you commented. Reply to this email directly, view it on GitHub <[#5329 (comment)](https://github.com/moment/moment/pull/5329#issuecomment-616549558)>, or unsubscribe <https://github.com/notifications/unsubscribe-auth/AABKYHO2T3ZLTFXQOFTP5NLRNRECNANCNFSM4KAIOMWQ> .\r\n> -- Ulion\r\n\r\nyou are right, I have added it in the new commit."
    ],
    "commit_messages": [
      "[bugfix] moment#5327 output wrong next week in ja locale (#5329)\n\n* Fix moment#5327 output wrong next week string when in last week of the year in ja locale\r\n\r\n* Fix moment#5327 output wrong next week string when in next week of the year in ja locale"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fc38dfb6b84f2427b2f",
    "number": 5310,
    "body": "Fixed cardinal noun. Sigh…",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/signed)](https://cla.js.foundation/moment/moment?pullRequest=5310) <br/>All committers have signed the CLA.",
      "@ichernev, will you take a look at this change please?",
      "\n[![Coverage Status](https://coveralls.io/builds/27419055/badge)](https://coveralls.io/builds/27419055)\n\nCoverage decreased (-0.01%) to 88.398% when pulling **76a3f31ed3d344fa75491e478b12ebf25610b32d on StoyanDimitrov:patch-1** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "Well, I managed to make pretty nice little mess here. @kraz, can you fix some of it for me please?",
      "Looks good, just remove the `locale/bg.js` from this change (it is autogenerated).",
      "Merged in 01e59f213b1c82d274f40ba10cb01274795d6183"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fc48dfb6b84f2427b30",
    "number": 5303,
    "body": "Adds tests for fix from https://github.com/moment/moment/pull/5261.\r\nPlease do not merge before the bugfix is merged.",
    "head_branch": "fix/add-tests-for-2020-leap-year-bug",
    "is_a_fork": true,
    "comments": [
      "Check my issue for leapyear !! \r\nhttps://github.com/moment/moment/issues/5337",
      "Merged in 790bb779c9326daf9e9047acd706ea36ddfc4822"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fc58dfb6b84f2427b31",
    "number": 5301,
    "body": "fixes #5287 ",
    "head_branch": "localeIT_fix",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/27292007/badge)](https://coveralls.io/builds/27292007)\n\nCoverage increased (+0.06%) to 88.467% when pulling **b93a2d167ef11c9124a3d3932f1922a0d1a15834 on ODAVING:localeIT_fix** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "@aliem @nostalgiaz what do you think?\r\n@ODAVING you need to fix the failing tests for the changes you made. Also can you provide some proof that your locale fixes are correct?",
      "@ODAVING I recently merged [this](https://github.com/moment/moment/pull/4825) for the italian locale, you can just submit a patch with the same code for it-ch if you think it will be a benefit. Otherwise I'm closing this."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fc68dfb6b84f2427b32",
    "number": 5298,
    "body": "fixes #5292 \r\n\r\nFor some reason NaN wasn't being identified as invalid. This little fix will get rid of NaN as a valid year, month, day format",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/signed)](https://cla.js.foundation/moment/moment?pullRequest=5298) <br/>All committers have signed the CLA.",
      "@ODAVING I don't think this is the correct way to fix this issue. Moreover you need to add tests for the thing you're fixing.\r\n\r\nThe isValid logic is supposed to mostly work on brand new moments (if you just parsed it). So I'm more inclined to just ignore NaN values passed to setters. Try `m.day('aaa')` and you'll see nothing happens. \r\n\r\nNow if you want to argue that silently dropping bad input is bad ... this is another topic for another time. But this is how it is at the moment.",
      "closing as this is a breaking change, and not something we will take for moment 2.x"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fc78dfb6b84f2427b33",
    "number": 5296,
    "body": "Fixes (#5295) ",
    "head_branch": "MomentInputObject-type-outdated",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/signed)](https://cla.js.foundation/moment/moment?pullRequest=5296) <br/>All committers have signed the CLA.",
      "\n[![Coverage Status](https://coveralls.io/builds/27084839/badge)](https://coveralls.io/builds/27084839)\n\nCoverage increased (+0.04%) to 88.449% when pulling **8882dc7ef1c0c0abbfa08b288616adbafbb09ed6 on TheMattBarnfield:MomentInputObject-type-outdated** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "\n[![Coverage Status](https://coveralls.io/builds/27084839/badge)](https://coveralls.io/builds/27084839)\n\nCoverage increased (+0.2%) to 88.583% when pulling **8882dc7ef1c0c0abbfa08b288616adbafbb09ed6 on TheMattBarnfield:MomentInputObject-type-outdated** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "@TheMattBarnfield can you also check the status of all single-unit setters. They should (possibly) also accept strings, and it should also be marked in the typescript definitions. If tests are missing, it's a good time to add them now.\r\n\r\nThanks!",
      "This is done in https://github.com/moment/moment/commit/535a72572cbdb3a1473914931e9352adc6a5ad24"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fc88dfb6b84f2427b34",
    "number": 5294,
    "body": "[pkg] enable `sourceMap` option on `Gruntfile.js` to enable debugging minified file in production enviromnent.\r\n\r\nfixes #4186 ",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/27029209/badge)](https://coveralls.io/builds/27029209)\n\nCoverage decreased (-0.07%) to 88.336% when pulling **20d5473fe1a3136b51ef6fdb5ae54d12d7a45176 on harkue:develop** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "\n[![Coverage Status](https://coveralls.io/builds/27029209/badge)](https://coveralls.io/builds/27029209)\n\nCoverage decreased (-0.07%) to 88.336% when pulling **20d5473fe1a3136b51ef6fdb5ae54d12d7a45176 on harkue:develop** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "You also need to update `Moment.js.nuspec`",
      "Merged in 01e9feb818843872cea53406c3d011420ed8eb18"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fc98dfb6b84f2427b35",
    "number": 5293,
    "body": "use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/not_signed)](https://cla.js.foundation/moment/moment?pullRequest=5293) <br/>Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our [Contributor License Agreement](https://cla.js.foundation/moment/moment?pullRequest=5293) before we can accept your contribution.<br/>"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fca8dfb6b84f2427b36",
    "number": 5279,
    "body": "Hi, I'm the original contributor of the Georgian (KA) locale. I found out about these 2 issues recently and addressed in this PR:\r\n\r\n* Removed `AM` and `PM` from longDateFormats. Georgian time does not have them.\r\n  ```\r\n    moment('08/18/2019 13:25:13').locale('ka').format('LT')\r\n\r\n    before:\r\n      => 1:25 PM\r\n    after:\r\n      => 13:25\r\n  ```\r\n\r\n* Fixed formatting for months.\r\n  ```\r\n    moment('09/21/2019 13:25:13').locale('ka').format('LLL')\r\n\r\n    before:\r\n      => 21 სექტემბერს 2019 1:25 PM\r\n    after:\r\n      => 21 სექტემბერი 2019 13:25\r\n  ```",
    "head_branch": "georgian-locale-fix",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/26733455/badge)](https://coveralls.io/builds/26733455)\n\nCoverage decreased (-0.06%) to 88.352% when pulling **e44cae6c82903ec534488c9827a4d85b46446480 on iJaniashvili:georgian-locale-fix** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "\n[![Coverage Status](https://coveralls.io/builds/29310915/badge)](https://coveralls.io/builds/29310915)\n\nCoverage increased (+0.02%) to 88.426% when pulling **031f343545758d908a04c4da9fbe178c651ca369 on IrakliJani:georgian-locale-fix** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "LGTM"
    ],
    "commit_messages": [
      "[locale] ka: Standalone/format/longformat improvements (#5279)\n\n* Fixed typo in the Georgian locale\r\n\r\n* fixed month formatting\r\n\r\n* removed am/pm from longDateFormat\r\n\r\n* fix ka locale tests\r\n\r\n* updated author username"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fcb8dfb6b84f2427b37",
    "number": 5277,
    "body": "Looks like someone was thinking of parseInt which takes a `radix` param.\r\nIn parseFloat there should be one argument only.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/26713179/badge)](https://coveralls.io/builds/26713179)\n\nCoverage decreased (-0.02%) to 88.394% when pulling **31cb11a35d32533a6a10b8106db04fe6a9021330 on camjc:patch-1** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "\n[![Coverage Status](https://coveralls.io/builds/26713179/badge)](https://coveralls.io/builds/26713179)\n\nCoverage increased (+0.3%) to 88.668% when pulling **31cb11a35d32533a6a10b8106db04fe6a9021330 on camjc:patch-1** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "\n[![Coverage Status](https://coveralls.io/builds/26713179/badge)](https://coveralls.io/builds/26713179)\n\nCoverage increased (+0.3%) to 88.668% when pulling **31cb11a35d32533a6a10b8106db04fe6a9021330 on camjc:patch-1** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n"
    ],
    "commit_messages": [
      "[misc] Remove stray second arg from `parseFloat` (#5277)\n\nLooks like someone was thinking of parseInt which takes a `radix` param.\r\nIn parseFloat there should be one argument only."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fcc8dfb6b84f2427b38",
    "number": 5274,
    "body": "",
    "head_branch": "MyContribution",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/not_signed)](https://cla.js.foundation/moment/moment?pullRequest=5274) <br/>Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our [Contributor License Agreement](https://cla.js.foundation/moment/moment?pullRequest=5274) before we can accept your contribution.<br/>",
      "\n[![Coverage Status](https://coveralls.io/builds/26666729/badge)](https://coveralls.io/builds/26666729)\n\nCoverage increased (+0.02%) to 88.426% when pulling **c7c3875f4b225299c2c3fe0c7e161f44641fdd36 on database007:MyContribution** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "\n[![Coverage Status](https://coveralls.io/builds/26666729/badge)](https://coveralls.io/builds/26666729)\n\nCoverage increased (+0.02%) to 88.426% when pulling **c7c3875f4b225299c2c3fe0c7e161f44641fdd36 on database007:MyContribution** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fcd8dfb6b84f2427b39",
    "number": 5271,
    "body": "",
    "head_branch": "new",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/signed)](https://cla.js.foundation/moment/moment?pullRequest=5271) <br/>All committers have signed the CLA.",
      "\n[![Coverage Status](https://coveralls.io/builds/26627866/badge)](https://coveralls.io/builds/26627866)\n\nCoverage increased (+0.0004%) to 88.41% when pulling **1356173e87ac0a114968957fb99b6ad1c2661ee0 on jatinag22:new** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "\n[![Coverage Status](https://coveralls.io/builds/26627866/badge)](https://coveralls.io/builds/26627866)\n\nCoverage increased (+0.0004%) to 88.41% when pulling **1356173e87ac0a114968957fb99b6ad1c2661ee0 on jatinag22:new** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "@jatinag22  just leave the src/locale and src/test/locale changes.\r\n\r\nThe rest looks good.",
      "Merged in d9913b2640a0c2b34b191640aeaa9d40ea379cc3"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fce8dfb6b84f2427b3a",
    "number": 5269,
    "body": "Using core `path` module to resolve absolute path to locale files as the current implementation was causing a crash in a release build of an Android app built in react-native (v0.60.4) with Hermes enabled.\r\n\r\nThis should fix both https://github.com/moment/moment/issues/5252 and https://github.com/moment/moment/issues/5214",
    "head_branch": "fix/locale-require",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/signed)](https://cla.js.foundation/moment/moment?pullRequest=5269) <br/>All committers have signed the CLA.",
      "\n[![Coverage Status](https://coveralls.io/builds/27118810/badge)](https://coveralls.io/builds/27118810)\n\nCoverage increased (+0.2%) to 88.646% when pulling **e140f47778c7c93764a1c54dcda91c548826bfb0 on vdmtrv:fix/locale-require** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "\n[![Coverage Status](https://coveralls.io/builds/26553781/badge)](https://coveralls.io/builds/26553781)\n\nCoverage decreased (-0.01%) to 88.4% when pulling **dce59be438aa5c42574c0b9729e56e04e5d02978 on vdmtrv:fix/locale-require** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "@vdmtrv can you detect react-native and only apply the `__dirname` in that case? I'm afraid this might break another obscure environment.",
      "Merged in a207d788512f7cff62d9035c63638221eb6d644b"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fcf8dfb6b84f2427b3b",
    "number": 5265,
    "body": "Signed-off-by: Hitesh <hitgo17@gmail.com>",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/signed)](https://cla.js.foundation/moment/moment?pullRequest=5265) <br/>All committers have signed the CLA.",
      "\n[![Coverage Status](https://coveralls.io/builds/26424461/badge)](https://coveralls.io/builds/26424461)\n\nCoverage decreased (-0.06%) to 88.352% when pulling **dbaedc8f6d400b1d5b3d466490af6729366fbc08 on hitgo00:develop** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "moment.js is autogenerated, change files under `src/*`."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fd08dfb6b84f2427b3c",
    "number": 5264,
    "body": "[bugfix]-locale en-au: Sunday is changed as  first day of week Issue #4349",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/30886871/badge)](https://coveralls.io/builds/30886871)\n\nCoverage remained the same at 88.486% when pulling **1945f5b749c6334bce4d1ea4173f9977a967fc80 on vigneshwar33:develop** into **04b275c44e5ffd6b6936b82b59601f515b21b952 on moment:develop**.\n",
      "\n[![Coverage Status](https://coveralls.io/builds/26415415/badge)](https://coveralls.io/builds/26415415)\n\nCoverage decreased (-0.07%) to 88.336% when pulling **0b77cb60714c52b9fb5025d313274653b4586645 on vigneshwar33:develop** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "@jarcoal what do you think?\r\n@vigneshwar33  can you proof that this change is indeed correct (official source of first-day-of-week)?",
      "See https://github.com/moment/moment/issues/4349",
      "https://github.com/unicode-cldr/cldr-core/blob/36.0.0/supplemental/weekData.json#L72",
      "As an Aussie, this change completely threw me (and the system relying on this package). I am not aware of any business which considers Sunday to be the start of the week down here.",
      "Also, I believe \"AS ISO 8601-2007\" specifies that Monday is officially the start of the week down here. See e.g. https://www.standards.org.au/standards-catalogue/sa-snz/communication/it-027/as--iso--8601-2007"
    ],
    "commit_messages": [
      "[locale] en-au: Sunday is first day of week (#5264)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fd18dfb6b84f2427b3d",
    "number": 5263,
    "body": "Changed Sunday as [locale] en-au:  first day of week #4349",
    "head_branch": "FirstDayofWeekFix",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/signed)](https://cla.js.foundation/moment/moment?pullRequest=5263) <br/>All committers have signed the CLA."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fd18dfb6b84f2427b3e",
    "number": 5261,
    "body": "Fixes #5245",
    "head_branch": "2020-leap-year-fix",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/signed)](https://cla.js.foundation/moment/moment?pullRequest=5261) <br/>All committers have signed the CLA.",
      "\n[![Coverage Status](https://coveralls.io/builds/26387927/badge)](https://coveralls.io/builds/26387927)\n\nCoverage decreased (-0.02%) to 88.394% when pulling **6e452cd441ee90b1eb6cbc01bfac319b874e65c4 on eliedrian:2020-leap-year-fix** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "LGTM! It's better to rebase and merge two commits as one.",
      "@eliedrian just add tests (someone else submitted a PR -- fetch them from there), and it's good to go.",
      "Manually merged in 15f1628be4436b1d08922f1ae131ecd2ce454313"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fd38dfb6b84f2427b3f",
    "number": 5260,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/signed)](https://cla.js.foundation/moment/moment?pullRequest=5260) <br/>All committers have signed the CLA.",
      "\n[![Coverage Status](https://coveralls.io/builds/26349856/badge)](https://coveralls.io/builds/26349856)\n\nCoverage increased (+0.3%) to 88.734% when pulling **23f6aa2f5f8ff97920a8e75990e2bf6ae2954e4e on pedroprado010:develop** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "\n[![Coverage Status](https://coveralls.io/builds/26349856/badge)](https://coveralls.io/builds/26349856)\n\nCoverage decreased (-0.01%) to 88.398% when pulling **23f6aa2f5f8ff97920a8e75990e2bf6ae2954e4e on pedroprado010:develop** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n"
    ],
    "commit_messages": [
      "[misc] Remove unused imports (#5260)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fd38dfb6b84f2427b40",
    "number": 5257,
    "body": "Bugfix for issue [5001](https://github.com/moment/moment/issues/5001)",
    "head_branch": "issue-5001",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/signed)](https://cla.js.foundation/moment/moment?pullRequest=5257) <br/>All committers have signed the CLA.",
      "\n[![Coverage Status](https://coveralls.io/builds/26348643/badge)](https://coveralls.io/builds/26348643)\n\nCoverage decreased (-0.01%) to 88.398% when pulling **66ff01b420147914fe7214e2f05d844d9a91fb6a on rafamsilva:issue-5001** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "\n[![Coverage Status](https://coveralls.io/builds/26331276/badge)](https://coveralls.io/builds/26331276)\n\nCoverage decreased (-0.004%) to 88.406% when pulling **3b049a2612919f81ea15815983ae79222fa155b3 on rafamsilva:issue-5001** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n"
    ],
    "commit_messages": [
      "[locale] tet: Fix seconds translation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fd48dfb6b84f2427b41",
    "number": 5251,
    "body": "Added kongo locale kg.js files in locale and test folders per issue #4949 .",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/signed)](https://cla.js.foundation/moment/moment?pullRequest=5251) <br/>All committers have signed the CLA.",
      "Thanks @rsuttles58 .\r\nI think to create the Kongo translation, you will have to change the files using words about time into Kongo language.\r\nYour files refer to fr-ch, or French spoken in Switzerland.\r\nWe will look at a new PR if you translate the words to Kongo.\r\nBest of luck. Please let us know how we can help."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fd58dfb6b84f2427b42",
    "number": 5250,
    "body": "fix of [issue](https://github.com/moment/moment/issues/5057)",
    "head_branch": "bugfix/header-comments",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/26214703/badge)](https://coveralls.io/builds/26214703)\n\nCoverage decreased (-0.01%) to 88.398% when pulling **57e2e00dd76990ddd886d46de8b833d25a6cadb8 on manjeet-thadani:bugfix/header-comments** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "\n[![Coverage Status](https://coveralls.io/builds/26214703/badge)](https://coveralls.io/builds/26214703)\n\nCoverage increased (+0.2%) to 88.572% when pulling **57e2e00dd76990ddd886d46de8b833d25a6cadb8 on manjeet-thadani:bugfix/header-comments** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "\n[![Coverage Status](https://coveralls.io/builds/26214703/badge)](https://coveralls.io/builds/26214703)\n\nCoverage increased (+0.2%) to 88.572% when pulling **57e2e00dd76990ddd886d46de8b833d25a6cadb8 on manjeet-thadani:bugfix/header-comments** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "An attempt, not a fix: https://github.com/moment/moment/issues/5057#issuecomment-618592588"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fd68dfb6b84f2427b43",
    "number": 5249,
    "body": "fix of [issue](https://github.com/moment/moment/issues/4877)",
    "head_branch": "bugfix/export-moment-interface",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/signed)](https://cla.js.foundation/moment/moment?pullRequest=5249) <br/>All committers have signed the CLA.",
      "\n[![Coverage Status](https://coveralls.io/builds/26214359/badge)](https://coveralls.io/builds/26214359)\n\nCoverage increased (+0.1%) to 88.546% when pulling **1d748d1cc614c6a1050b9d0d3d10884d354f5fd6 on manjeet-thadani:bugfix/export-moment-interface** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "Moment supports typescript 1.x, not 2 or 3 or 3000. That might change with a next major version."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fd78dfb6b84f2427b44",
    "number": 5248,
    "body": "FIX of the [issue](https://github.com/moment/moment/issues/4877)",
    "head_branch": "bugfix/export-moment-interface",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/not_signed)](https://cla.js.foundation/moment/moment?pullRequest=5248) <br/>Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our [Contributor License Agreement](https://cla.js.foundation/moment/moment?pullRequest=5248) before we can accept your contribution.<br/>",
      "\n[![Coverage Status](https://coveralls.io/builds/26214212/badge)](https://coveralls.io/builds/26214212)\n\nCoverage increased (+0.3%) to 88.697% when pulling **4feda9da2aba57b1b603adee4db1b3d1d33eefb3 on manjeet-thadani:bugfix/export-moment-interface** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fd88dfb6b84f2427b45",
    "number": 5247,
    "body": "FIX of the [issue](https://github.com/moment/moment/issues/4877)",
    "head_branch": "fix/export-moment-interface",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/not_signed)](https://cla.js.foundation/moment/moment?pullRequest=5247) <br/>Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our [Contributor License Agreement](https://cla.js.foundation/moment/moment?pullRequest=5247) before we can accept your contribution.<br/>"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fd98dfb6b84f2427b46",
    "number": 5243,
    "body": "",
    "head_branch": "bug-fix/version-issue",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/not_signed)](https://cla.js.foundation/moment/moment?pullRequest=5243) <br/>Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our [Contributor License Agreement](https://cla.js.foundation/moment/moment?pullRequest=5243) before we can accept your contribution.<br/>",
      "\n[![Coverage Status](https://coveralls.io/builds/26135216/badge)](https://coveralls.io/builds/26135216)\n\nCoverage decreased (-0.07%) to 88.336% when pulling **fdd82b2b1e87a943fd78e7c5a415d538731743ed on KaushikDev:bug-fix/version-issue** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "\n[![Coverage Status](https://coveralls.io/builds/26135216/badge)](https://coveralls.io/builds/26135216)\n\nCoverage decreased (-0.07%) to 88.336% when pulling **fdd82b2b1e87a943fd78e7c5a415d538731743ed on KaushikDev:bug-fix/version-issue** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "Take a look: https://github.com/moment/moment/issues/5057#issuecomment-618592588"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fda8dfb6b84f2427b47",
    "number": 5237,
    "body": "Remove unnecessary code that rounded off timezone offsets to 15 minute intervals.\r\n\r\nThis will improve the accuracy of the displayed timezone offset for various dates before countries synchronised clocks properly.\r\n\r\nFixes #5236 ",
    "head_branch": "fix/5236",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/25978163/badge)](https://coveralls.io/builds/25978163)\n\nCoverage decreased (-0.02%) to 88.394% when pulling **bc3c1a79fac3225ff41916a147f36b4101d38890 on ashsearle:fix/5236** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "\n[![Coverage Status](https://coveralls.io/builds/25978163/badge)](https://coveralls.io/builds/25978163)\n\nCoverage increased (+0.2%) to 88.575% when pulling **bc3c1a79fac3225ff41916a147f36b4101d38890 on ashsearle:fix/5236** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "Bump. Running into this issue as well. Any reason we can't merge this?"
    ],
    "commit_messages": [
      "[bugfix] Support unusual historic timezone offsets (fixes #5236) (#5237)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fdb8dfb6b84f2427b48",
    "number": 5234,
    "body": "…omehow causes the application to crash when the user's locale is set to Japanese or Chinese (traditional or simplified)",
    "head_branch": "bugfix/hebrew-internationalization",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/not_signed)](https://cla.js.foundation/moment/moment?pullRequest=5234) <br/>Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our [Contributor License Agreement](https://cla.js.foundation/moment/moment?pullRequest=5234) before we can accept your contribution.<br/><hr/>**Austin Benesh** seems not to be a GitHub user. You need a GitHub account to be able to sign the CLA. If you have already a GitHub account, please [add the email address used for this commit to your account](https://help.github.com/articles/why-are-my-commits-linked-to-the-wrong-user/#commits-are-not-linked-to-any-user).",
      "sorry, this was a mistake please ignore."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fdc8dfb6b84f2427b49",
    "number": 5233,
    "body": "Add translate for relative time.",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/not_signed)](https://cla.js.foundation/moment/moment?pullRequest=5233) <br/>Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our [Contributor License Agreement](https://cla.js.foundation/moment/moment?pullRequest=5233) before we can accept your contribution.<br/>",
      "\n[![Coverage Status](https://coveralls.io/builds/25792625/badge)](https://coveralls.io/builds/25792625)\n\nCoverage increased (+0.06%) to 88.465% when pulling **5db7eabc58733be3bb3f04795a170d4d05ad8302 on neercsys:develop** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "@neercsys you need to change `src/**` files not autogenerated files. Also your fix is going against the translate function with handles much more complicated scenarios. You need to provide proof that your locale suggestion is actually accurate (from official sources).\r\n\r\n@frontyard any comments on this?",
      "@ichernev no, this doesn't look right. Bosnian (like Croatian and Serbian) has different plural if number ends in 2, 3 and 4 for some nouns (not all). Ie \r\n1mm -> minuta\r\n2mm -> minute\r\n5mm -> minuta\r\n24mm -> minute",
      "@frontyard  yeah, this change basically removes all the complicated logic that was there for a reason.\r\n@neercsys you can also use moment.updateLocale to meet your current needs: https://momentjs.com/docs/#/customization/relative-time/"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fdd8dfb6b84f2427b4a",
    "number": 5228,
    "body": "maybe this will work.I am a newbie at this. Haven't collaborated with anyone for a long time.Maybe I made a mistake\r\nissue-#5057",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/not_signed)](https://cla.js.foundation/moment/moment?pullRequest=5228) <br/>Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our [Contributor License Agreement](https://cla.js.foundation/moment/moment?pullRequest=5228) before we can accept your contribution.<br/>",
      "\n[![Coverage Status](https://coveralls.io/builds/25714244/badge)](https://coveralls.io/builds/25714244)\n\nCoverage decreased (-0.07%) to 88.336% when pulling **57413fe16d4d2f8dbf5691a5c4cb7c11fd671af2 on generationXcode:develop** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "Hi @generationXcode, \r\n\r\nI think current version is 2.24.0 as found here in `moment.js` : https://github.com/moment/moment/blob/develop/moment.js#L4555\r\nor in the package.json : https://github.com/moment/moment/blob/develop/package.json \r\n\r\nAlso, due to the `hooks.version` needing to be updated, I feel that probably we could use post-hook (https://githooks.com/) to perform that task automatically ? \r\n\r\n(Just dropping some suggestions, not owner/maintainer on this repo)",
      "Take a look here: https://github.com/moment/moment/issues/5057#issuecomment-618592588"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fde8dfb6b84f2427b4b",
    "number": 5225,
    "body": "A period was missing from the Romanian month locale",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/not_signed)](https://cla.js.foundation/moment/moment?pullRequest=5225) <br/>Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our [Contributor License Agreement](https://cla.js.foundation/moment/moment?pullRequest=5225) before we can accept your contribution.<br/>"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fdf8dfb6b84f2427b4c",
    "number": 5223,
    "body": "Phantomjs is an unmaintained project. Removed spacejam from dev-dependencies as it uses phantomjs internally.",
    "head_branch": "moment_aarch64",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/30397946/badge)](https://coveralls.io/builds/30397946)\n\nCoverage remained the same at 88.471% when pulling **e9477741966ef8da8bc8cfc5ad6e8bd3d1727b27 on ossdev07:moment_aarch64** into **1021c019839cd3ac0abd04a7076fa513fa03567c on moment:develop**.\n",
      "\n[![Coverage Status](https://coveralls.io/builds/25599369/badge)](https://coveralls.io/builds/25599369)\n\nCoverage remained the same at 88.41% when pulling **93c5b7dc07965c3af3fa4f37ef9cbd6720e3c348 on ossdev07:moment_aarch64** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "Ping @marwahaha Please can you have a look at this PR.",
      "@mgorabbani , @marwahaha : I would like to see PhantomJS removed. As well as being unmaintained, it is not available for AArch64.",
      "Ping @ashsearle could you please have a look at this PR and share your opinion.",
      "@ossdev07 Looks fine to me, but I'm not a maintainer: I don't know what tools are needed for building a release, and whether spacejam needs to be replaced with a suitable alternative.",
      "Thanks for the quick response @ashsearle, if you are aware, could you please let me know who are the maintainers so that I can ping them.",
      "Based on [commit history](/moment/moment/commits/develop), the most active maintainer is marwahaha.",
      "@marwahaha, @mgorabbani I would like to see PhantomJS removed. Please, could you consider this PR for the merge?",
      "Hi @marwahaha , @mgorabbani , \r\nCan you please have a look at above PR. \r\nThanks. ",
      "If you want to remove `spacejam` you should also remove all code that depends on it: `Gruntfile.js`.",
      "Hi @ichernev , Done the changes suggested.\r\nPlease have a look at above changes.\r\nThanks\r\n",
      "Removing the dependency was done in afa66633e7f1584919657962269dab68c91b2d76"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fe08dfb6b84f2427b4d",
    "number": 5219,
    "body": "based on documentation\r\n\r\nLT should contain AM/PM\r\nso also in localized version AM/PM should be included in LT and LTS",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/signed)](https://cla.js.foundation/moment/moment?pullRequest=5219) <br/>All committers have signed the CLA.",
      "\n[![Coverage Status](https://coveralls.io/builds/25542673/badge)](https://coveralls.io/builds/25542673)\n\nCoverage increased (+0.02%) to 88.426% when pulling **1329b37b2893b460f63c89c2233a4150344b3ca6 on ahmelessawy:patch-1** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "`HH` implies 24-based hours a implies 12-based hours `hh`. Do you have proof that this change is indeed correct (official sources).\r\n\r\nAlso you need to change files under `src/locale/*` and fix the relevant tests under `src/test/locale/*`\r\n\r\n@xsoh any comments on this?",
      "Thanks for suggesting.\r\nWithout sources nor locale approval, we will not take this change."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fe18dfb6b84f2427b4e",
    "number": 5218,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/not_signed)](https://cla.js.foundation/moment/moment?pullRequest=5218) <br/>Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our [Contributor License Agreement](https://cla.js.foundation/moment/moment?pullRequest=5218) before we can accept your contribution.<br/>",
      "\n[![Coverage Status](https://coveralls.io/builds/25531491/badge)](https://coveralls.io/builds/25531491)\n\nCoverage decreased (-1.07%) to 87.335% when pulling **62288a4e3f8dbba3cd3d04752bbbbfd3a55d949f on despegar:develop** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fe28dfb6b84f2427b4f",
    "number": 5216,
    "body": "## Overview\r\n\r\nIf you use `isoWeek` within the add or subtract functions you get the following type error reported: \r\n\r\n```\r\nArgument of type 'number' is not assignable to parameter of type 'DurationConstructor'.\r\n```\r\n\r\nAdding `_isoWeek` as valid type for `DurationConstructor` type to fix this problem. This was original raised within #5007.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/25516602/badge)](https://coveralls.io/builds/25516602)\n\nCoverage decreased (-0.01%) to 88.398% when pulling **6ba05fe751c032feb9443f1f06efa16165e363df on jonathanchrisp:patch-1** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "This is a valid bug. Why did you close it?",
      "Hey @jtomek, there was no feedback on the PR so rather having this floating around closed it out.",
      "Hey @jwarykowski, fair enough. How can I support this PR?",
      "Hey @jtomek, I'll reopen and see if we get any feedback.",
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/signed)](https://cla.js.foundation/moment/moment?pullRequest=5216) <br/>All committers have signed the CLA.",
      "Hey @jtomek, this issue has been fixed in another PR so closing. You can find the change in the latest release (if published).",
      "Thank you. I will check it."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fe38dfb6b84f2427b50",
    "number": 5210,
    "body": "`isDurationValid` returns false negatives when `Object.prototype` is extended with additional properties. JSFiddle: https://jsfiddle.net/pcsn3vhL/\r\n\r\nThe proposed fix is to only enumerate an object's direct properties using `Object.getOwnPropertyNames`.",
    "head_branch": "bugfix/isDurationValid",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/signed)](https://cla.js.foundation/moment/moment?pullRequest=5210) <br/>All committers have signed the CLA.",
      "\n[![Coverage Status](https://coveralls.io/builds/25373625/badge)](https://coveralls.io/builds/25373625)\n\nCoverage decreased (-0.003%) to 88.407% when pulling **26de848845f637aeb8386f5ccd0228ed6ebda8ac on anthonygood:bugfix/isDurationValid** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "@anthonygood I'd use `hasOwnProperty` in the loop, because it is more portable.",
      "Looks like this is fixed by: https://github.com/moment/moment/pull/4953"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fe48dfb6b84f2427b51",
    "number": 5206,
    "body": "\"Za\" is commonly (and _**incorrectly**_) used to relatively refer to a moment in the future. This error is mainly influenced by Czech language, which is very similar and most Slovaks will understand it, many times domesticating phrases from Czech language. In Czech, \"za\" is used, though in Slovak, \"o\" must be used.\r\n\r\nHere are references to both \"za\" and \"o\" in the official dictionary of Slovak language (_KSSJ_):\r\nhttps://slovnik.juls.savba.sk/?w=o&s=exact&d=kssj4\r\nhttps://slovnik.juls.savba.sk/?w=za&s=exact&d=kssj4\r\nAnd here is a more readable unofficial explanation: https://www.pravopisne.sk/o-hodinu-x-za-hodinu/\r\n\r\n...\r\nOkay, so I read the contribution guide that asks to mention the authors of the locale, it appears to me that no one is actualy a Slovak... Anyway... @ichernev, @marwahaha, @mattgrande, @icambron ",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/25476960/badge)](https://coveralls.io/builds/25476960)\n\nCoverage remained the same at 88.41% when pulling **07e8f44d4baa8d8ab9a17311e4227c60b67a6d1e on dakujem:patch-1** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "I fixed the failing tests. The PR is now ready to be merged.",
      "Any reaction, guys?  @ichernev, @marwahaha, @mattgrande, @icambron, anyone?",
      "Any suggestions on how to solve this problem? Since no one of you can read Slovak, it is hard to read the resources I provided above and hard to verify, I am sure. Let me try though...\r\n\r\n\"KSSJ\" is an official Slovak language dictionary, [\"Krátky slovník slovenského jazyka\"](https://sk.wikipedia.org/wiki/Kr%C3%A1tky_slovn%C3%ADk_slovensk%C3%A9ho_jazyka) (translated as \"Short dictionary of Slovak language\").\r\n\r\nThis [section in KSSJ about preposition `o`](https://slovnik.juls.savba.sk/?w=o&s=exact&d=kssj4) states, in the point `A 5.`, \"časový úsek, po kt. nastáva dej\", which means, \"a section of time after which an action happens\".\r\n> An example with translation to English would be \"Urobím to o 5 minút.\" / \"I'll do this in 5 minutes (I will accomplish this /or start working on it/ in 5 minutes from now).\"\r\n\r\nOn the contrary, the only reference to time-related meaning of `za` this [section in KSSJ about preposition `za`](https://slovnik.juls.savba.sk/?w=za&s=exact&d=kssj4) mentions is in point `B 7.`, where it says \"časový rozsah\", translated as \"time span\". \r\n> An example with translation to English would be \"Urobím to za 5 minút.\" / \"I'll do this in 5 minutes (it will take me 5 minutes to do it).\"\r\n\r\nAs you can see, `za` can also be used in the same sentence, with a subtly different meaning. Though using `za` to refer to a point in the future, as in \"This will happen in 5 minutes\" is simply incorrect.",
      "any progress on this, guys?",
      "It has been a while. Can anyone give a hint on how to progress with this issue and possibly merge?",
      "@dakujem the authors of the locale are on the top of the locale file. You have referenced the authors of moment, which do not speak slovak. That is why you have to reference the locale authors :)\r\n\r\n@k2s @petrbela any comments on this?",
      "I'm actually Czech and although this PR change does make it sound more Slovak, I'd defer to @k2s for final approval.",
      "OK, I reverted this based on : https://github.com/moment/moment/pull/5409#issuecomment-618482801\r\n\r\nI do feel that moment is a ground for grammar nazis to play chess. In any case no solution will satisfy everyone, and changes mostly annoy people."
    ],
    "commit_messages": [
      "[locale] sk: Improve future tense (#5206)\n\n\"Za\" is commonly (and _incorrectly_) used to relatively refer to a moment in the future. This error is mainly influenced by Czech language, which is very similar and most Slovaks will understand it, many times domesticating phrases from Czech language. In Czech, \"za\" is used, though in Slovak, \"o\" must be used.\r\n\r\nHere are references to both \"za\" and \"o\" in the official dictionary of Slovak language:\r\nhttps://slovnik.juls.savba.sk/?w=o&s=exact&d=kssj4\r\nhttps://slovnik.juls.savba.sk/?w=za&s=exact&d=kssj4\r\nAnd here is a more readable unofficial explanation: https://www.pravopisne.sk/o-hodinu-x-za-hodinu/"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fe58dfb6b84f2427b52",
    "number": 5204,
    "body": "URL is viewable when running `yarn outdated`",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/signed)](https://cla.js.foundation/moment/moment?pullRequest=5204) <br/>All committers have signed the CLA.",
      "\n[![Coverage Status](https://coveralls.io/builds/25239576/badge)](https://coveralls.io/builds/25239576)\n\nCoverage decreased (-0.004%) to 88.406% when pulling **d073f1ca81f856c86dc7d3e5613f3380e6eb33dc on votemike:patch-1** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "\n[![Coverage Status](https://coveralls.io/builds/25239576/badge)](https://coveralls.io/builds/25239576)\n\nCoverage decreased (-0.004%) to 88.406% when pulling **d073f1ca81f856c86dc7d3e5613f3380e6eb33dc on votemike:patch-1** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "I have signed the CLA, I don't know why it appears as pending.",
      "Retry"
    ],
    "commit_messages": [
      "[misc] Update moment URL to https (#5204)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fe68dfb6b84f2427b53",
    "number": 5203,
    "body": "Fixes #4995 ",
    "head_branch": "fix/4995",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/25209345/badge)](https://coveralls.io/builds/25209345)\n\nCoverage remained the same at 88.41% when pulling **15c6accb2d70db2fbbd50040efe4d2c0b057e6a4 on ashsearle:fix/4995** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n"
    ],
    "commit_messages": [
      "Fix #4995: typo in Bulgarian abbreviation for January (#5203)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fe68dfb6b84f2427b54",
    "number": 5196,
    "body": "Signed-off-by: Rachael Njeri <rachael.njeri@andela.com>",
    "head_branch": "pashto-locale",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/not_signed)](https://cla.js.foundation/moment/moment?pullRequest=5196) <br/>Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our [Contributor License Agreement](https://cla.js.foundation/moment/moment?pullRequest=5196) before we can accept your contribution.<br/>"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fe78dfb6b84f2427b55",
    "number": 5193,
    "body": "",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/signed)](https://cla.js.foundation/moment/moment?pullRequest=5193) <br/>All committers have signed the CLA.",
      "\n[![Coverage Status](https://coveralls.io/builds/25063439/badge)](https://coveralls.io/builds/25063439)\n\nCoverage increased (+0.02%) to 88.426% when pulling **02b5368e0a5eb6df558aa2c3ebe843b1b60e3808 on scientist1642:patch-2** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "It's just 1 letter typo. -- Anyone? 😞 ",
      "Hello @scientist1642 !\r\n\r\nWhen making changes to a locale file, you'll want to tag the creator of the file so they can check your work.  You'll see their user name in the comments at the top of the file.\r\n\r\nIf you're correcting the name of a month, you'll also want to make sure it stays consistent with the tests.  Run the tests with `grunt test` and make sure everything is still passing.  If the month you changed is used in any of the tests, you'll need to change the word in the test file, too.",
      "@scientist1642 you have to update the tests.\r\n\r\n@irakli-janiashvili any comments on this?\r\n",
      "@scientist1642 it looks like the original author is no longer on github. Can you provide some proof about the fix, some authority that agrees with you?",
      "@ichernev native language. Also, some proof below :) \r\n\r\nJust took a look, tests for formatted month names doesn't seem to be there for Georgian locale. standalone month names are correct.\r\n\r\n[misspelled word, missing 1 char](https://www.google.ge/search?sxsrf=ALeKk00UT7p6acHrsxY0mgcVt_VMJMC43A%3A1587671704948&ei=mPKhXvCrOca6aeCOs5gJ&q=%22%E1%83%90%E1%83%92%E1%83%95%E1%83%98%E1%83%A1%E1%83%A2%E1%83%A1%22&oq=%22%E1%83%90%E1%83%92%E1%83%95%E1%83%98%E1%83%A1%E1%83%A2%E1%83%A1%22&gs_lcp=CgZwc3ktYWIQAzoECAAQR1DymwFY8psBYNGdAWgAcAJ4AIABc4gBc5IBAzAuMZgBAKABAaoBB2d3cy13aXo&sclient=psy-ab&ved=0ahUKEwjw1_j_qf_oAhVGXRoKHWDHDJMQ4dUDCAw&uact=5) 555 results\r\n[edited word](https://www.google.ge/search?sxsrf=ALeKk03axD3yVtPJrQFc8D922-CtKUKo3g%3A1587671701791&source=hp&ei=lfKhXq-WLcudlwSt2JaoDQ&q=%22%E1%83%90%E1%83%92%E1%83%95%E1%83%98%E1%83%A1%E1%83%A2%E1%83%9D%E1%83%A1%22&oq=%22%E1%83%90%E1%83%92%E1%83%95%E1%83%98%E1%83%A1%E1%83%A2%E1%83%9D%E1%83%A1%22&gs_lcp=CgZwc3ktYWIQAzIECAAQHjIECAAQHjIECAAQHjIECAAQHjoECCMQJzoCCAA6BggAEAUQHjoCCCZQ_ARYuRBguRJoAXAAeACAAbcBiAGcCpIBBDAuMTCYAQCgAQGqAQdnd3Mtd2l6&sclient=psy-ab&ved=0ahUKEwjvtLX-qf_oAhXLzoUKHS2sBdUQ4dUDCAc&uact=5) 2 940 000 results\r\n\r\n",
      "The months were already changed in 48b5ef705ab3b679b424d29762179552f336e6be\r\nIf you're not happy you can open a new PR on top (I hope not :))."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fe88dfb6b84f2427b56",
    "number": 5192,
    "body": "",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/not_signed)](https://cla.js.foundation/moment/moment?pullRequest=5192) <br/>Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our [Contributor License Agreement](https://cla.js.foundation/moment/moment?pullRequest=5192) before we can accept your contribution.<br/>"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fe98dfb6b84f2427b57",
    "number": 5191,
    "body": "",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/not_signed)](https://cla.js.foundation/moment/moment?pullRequest=5191) <br/>Thank you for your submission, we really appreciate it. Like many open source projects, we ask that you sign our [Contributor License Agreement](https://cla.js.foundation/moment/moment?pullRequest=5191) before we can accept your contribution.<br/>",
      "\n[![Coverage Status](https://coveralls.io/builds/25063334/badge)](https://coveralls.io/builds/25063334)\n\nCoverage increased (+0.02%) to 88.425% when pulling **86feae4bbd4b7dc2e2b186dac609ec9279ddea68 on scientist1642:patch-2** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fea8dfb6b84f2427b58",
    "number": 5190,
    "body": "Hello - Just adding a new local that has Syriac month names, used in Palestine, Lebanon, Syria, Jordan, and Iraq ([see](https://en.wikipedia.org/wiki/Assyrian_calendar)).",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/signed)](https://cla.js.foundation/moment/moment?pullRequest=5190) <br/>All committers have signed the CLA.",
      "\n[![Coverage Status](https://coveralls.io/builds/31507149/badge)](https://coveralls.io/builds/31507149)\n\nCoverage increased (+0.005%) to 88.501% when pulling **115fe46fca9fa1fd4224a36934d63b0c910aeea9 on majdal:develop** into **94ae93570322d6852f2963c2fd6facfb33eb95b3 on moment:develop**.\n",
      "@majdal  when adding a new locale you need to put it under `src/locale/xx.js` and add tests to `src/test/locale/xx.js`. Files under `locale/*` are autogenerated and not touched by hand.",
      "Looks like the prettier check failed. I think you can fix it with `npm run prettier-fmt`",
      "Unfortunately, the months are not parsing correctly! This is why the tests are failing.",
      "I'll need to change the tests too: we should be using Arabic numerals (1, 2, 3...) instead of the currently defined Indian numerals (١، ٢، ٣...).  ",
      "Ok @majdal . Let me know how I can assist!",
      "@majdal any updates?",
      "Merged in 794938ae326b7b38ea9921a7b5c84e773794a6ed"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9feb8dfb6b84f2427b59",
    "number": 5181,
    "body": "It is now possible to use the `moment` global from a .js file and have TypeScript typecheck that .js file without complaining.\r\n\r\nTest case:\r\n\r\n```\r\n# (npm install developer version of \"moment\" with this change)\r\n$ npm install typescript\r\n$ echo 'document.querySelector(\"body\").textContent = moment().toString();' > index.js\r\n$ node_modules/.bin/tsc --allowJs --checkJs --noEmit index.js\r\n# (no errors)\r\n```\r\n\r\nWithout this change, you would receive the errors:\r\n\r\n```\r\nindex.js:1:46 - error TS2304: Cannot find name 'moment'.\r\n\r\n1 document.querySelector(\"body\").textContent = moment().toString();\r\n                                               ~~~~~~\r\nFound 1 error.\r\n```",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "I revised the commit title to conform to the Title check that you have, although GitHub still tells me the Title check is failing.",
      "This patch still needs some work: One of the unit tests is failing:\r\n\r\n```\r\n$ node_modules/.bin/tsc --project typing-tests\r\nnode_modules/@types/node/index.d.ts(214,41): error TS2304: Cannot find name 'Promise'.\r\n# (many similar errors)\r\n```\r\n\r\nI did not upgrade the version of `@types/node` and tsc wasn't giving this failure before, so perhaps the new version of tsc is being more strict with its checks.",
      "\n[![Coverage Status](https://coveralls.io/builds/25255571/badge)](https://coveralls.io/builds/25255571)\n\nCoverage decreased (-0.01%) to 88.398% when pulling **b1522c65569d8f98ad1666253284d77a5ddcc231 on davidfstr:patch-1** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "Everything passes now except the title check. Know how to fix it?\r\n\r\nI last attempted to amend and rebase the offending commit but that didn't seem to make the title check happy.",
      "Apparently the title check was referring to the PR and not the commit. Recommend adjusting the check's message to be more clear about that.",
      "Any reviewers familar with TypeScript available to take a look at this PR?",
      "@marwahaha You appear to be the only active committer on the Moment project since 1/1/2019.\r\n\r\nIs there anything I can help you with in getting this PR merged? Perhaps an unresolved concern. Perhaps a squash of all changes to one commit.",
      "While waiting for this PR to be merged, I've documented a workaround in the following StackOverflow answer: https://stackoverflow.com/a/57263931/604063",
      "@simonhaenisch you are marked as the reviewer of this issue, but have taken no activity within the last month. If you do not have bandwidth, could you unassign yourself?\r\n\r\nI'm guessing setting a blank reviewer will put this back into a to-be-reviewed pool. However I am unable to locate documentation for how the Moment project's maintenance process works, so I am not 100% sure. Regardless I care about this ticket moving forward and so I will do my best to follow my best guess of the process.",
      "I’m not a maintainer, nor assigned to the PR... I just left a code review comment, because I also care about this going forward.",
      "Aye, and thank you for the comments @simonhaenisch.\r\n\r\nI suppose I'll just leave this ticket around then. Nothing obvious I can do currently to move it forward myself.",
      "@davidfstr the current version of moment supports typescript 1.x. Maybe in next major we can bump this.",
      "Is the ask that I check back later, perhaps in a year, to ask whether Moment has upgraded its TypeScript support, and then reopen this issue, if it’s not resolved by the upgrade?"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fec8dfb6b84f2427b5a",
    "number": 5180,
    "body": "In the Slovene language the word for month `may` is `maj` and does not need to be abbreviated with a period like other months.\r\n\r\nMentioning original author for approval as per contributing instructions:\r\n@sedovsek ",
    "head_branch": "fix_sl_short_month_may",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/signed)](https://cla.js.foundation/moment/moment?pullRequest=5180) <br/>All committers have signed the CLA.",
      "\n[![Coverage Status](https://coveralls.io/builds/24836775/badge)](https://coveralls.io/builds/24836775)\n\nCoverage decreased (-0.06%) to 88.352% when pulling **d5de50f35799545ec9bdf32beeae12f663019cc5 on janezkranjc:fix_sl_short_month_may** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "\n[![Coverage Status](https://coveralls.io/builds/24836775/badge)](https://coveralls.io/builds/24836775)\n\nCoverage decreased (-0.06%) to 88.352% when pulling **d5de50f35799545ec9bdf32beeae12f663019cc5 on janezkranjc:fix_sl_short_month_may** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "\n[![Coverage Status](https://coveralls.io/builds/24836775/badge)](https://coveralls.io/builds/24836775)\n\nCoverage decreased (-0.06%) to 88.352% when pulling **d5de50f35799545ec9bdf32beeae12f663019cc5 on janezkranjc:fix_sl_short_month_may** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "I am a native speaker and this is also easily verifiable in any dictionary. Can this get merged?",
      "Dear all,\r\n\r\nYes – these changes make sense. Thanks!\r\n\r\nBest,\r\nRobert.",
      "So I've been doing a bit of research and apparently the abbreviation is ok because when a calendar date is abbreviated in such a way the month is in the second declination which would make the word: `maja` and gets abbreviated to `maj.`\r\n\r\nSo, maybe it's best to just close this and not merge it.\r\n\r\nHere's a source (in slovenian)\r\nhttps://www.lektorsko-drustvo.si/jezikovni-pogovori/pisanje-datumov-v-slovenscini"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fed8dfb6b84f2427b5b",
    "number": 5174,
    "body": "### Issue being fixed or implemented  \r\nIn some specific context (running js in protected area, in eval conditions), Function might not be available (see / run pastebin here : https://pastebin.com/dPjgkbs9). Therefore, trying to convert unix to isoString will fail with a `TypeError: Right-hand side of 'instanceof' is not an object`.\r\nThis PR tries to fix that.\r\n\r\n### What was done  \r\n- Added simple Function existance verification in isFunction\r\n\r\n### Notes  \r\n\r\nFixes https://github.com/moment/moment/issues/5173.\r\n\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/signed)](https://cla.js.foundation/moment/moment?pullRequest=5174) <br/>All committers have signed the CLA.",
      "Test passing. Please tell me if any more is needed. \r\nI did not put the test case myself (the one in the pastebin) as I'm not sure you guys want to included these kinds of test in it. \r\nBut please provide guidance on naming and positioning if you wish me to do so, might be able to create a very basic test suite that would focus on this kind of specific environment context (where we basically limit Node to minimum to try to avoid any eval injection).",
      "\n[![Coverage Status](https://coveralls.io/builds/24913487/badge)](https://coveralls.io/builds/24913487)\n\nCoverage decreased (-0.01%) to 88.398% when pulling **7f328054686041e28388582d5874741bcb427991 on Alex-Werner:patch-1** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "The tests aren't running in a protected environment, so don't pick up this error:\r\n\r\n`Function !== undefined` will lead to `Uncaught ReferenceError: Function is not defined`.\r\n\r\nIt'd need to be `typeof Function !== 'undefined'` instead.\r\n\r\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined#Typeof_operator_and_undefined",
      "@ashsearle Interesting, I actually did run it with no issue, but updating now in a new commit, thanks for review :)",
      "@marwahaha Anything more required from me for this one ? "
    ],
    "commit_messages": [
      "[bugfix] Fixing isFunction when Function is undefined (#5174)\n\nPreventing any `Uncaught ReferenceError: Function is not defined` error as per suggested in PR thread."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fee8dfb6b84f2427b5c",
    "number": 5172,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/signed)](https://cla.js.foundation/moment/moment?pullRequest=5172) <br/>All committers have signed the CLA.",
      "\n[![Coverage Status](https://coveralls.io/builds/24689161/badge)](https://coveralls.io/builds/24689161)\n\nCoverage decreased (-0.07%) to 88.336% when pulling **b57cd99ff42cf6b8c41ac09506f2edf4ca788b52 on inpovin:develop** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "\n[![Coverage Status](https://coveralls.io/builds/24689161/badge)](https://coveralls.io/builds/24689161)\n\nCoverage decreased (-0.07%) to 88.336% when pulling **b57cd99ff42cf6b8c41ac09506f2edf4ca788b52 on inpovin:develop** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "\n[![Coverage Status](https://coveralls.io/builds/24689161/badge)](https://coveralls.io/builds/24689161)\n\nCoverage decreased (-0.07%) to 88.336% when pulling **b57cd99ff42cf6b8c41ac09506f2edf4ca788b52 on inpovin:develop** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "@inpovin your code needs to be put under `src/locale/*` and tests under `src/test/locale/*`."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fef8dfb6b84f2427b5d",
    "number": 5171,
    "body": "Copied code from zh-cn and did a name change to create this new zh-mo file.",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/signed)](https://cla.js.foundation/moment/moment?pullRequest=5171) <br/>All committers have signed the CLA.",
      "\n[![Coverage Status](https://coveralls.io/builds/24689110/badge)](https://coveralls.io/builds/24689110)\n\nCoverage decreased (-0.07%) to 88.336% when pulling **c92c9b730f3d081bcc4a9791e26a73d8c8f9e6f1 on inpovin:patch-2** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "\n[![Coverage Status](https://coveralls.io/builds/24689110/badge)](https://coveralls.io/builds/24689110)\n\nCoverage decreased (-0.07%) to 88.336% when pulling **c92c9b730f3d081bcc4a9791e26a73d8c8f9e6f1 on inpovin:patch-2** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "\n[![Coverage Status](https://coveralls.io/builds/24689110/badge)](https://coveralls.io/builds/24689110)\n\nCoverage decreased (-0.07%) to 88.336% when pulling **c92c9b730f3d081bcc4a9791e26a73d8c8f9e6f1 on inpovin:patch-2** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "\n[![Coverage Status](https://coveralls.io/builds/24689110/badge)](https://coveralls.io/builds/24689110)\n\nCoverage decreased (-0.07%) to 88.336% when pulling **c92c9b730f3d081bcc4a9791e26a73d8c8f9e6f1 on inpovin:patch-2** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "\n[![Coverage Status](https://coveralls.io/builds/24689110/badge)](https://coveralls.io/builds/24689110)\n\nCoverage decreased (-0.07%) to 88.336% when pulling **c92c9b730f3d081bcc4a9791e26a73d8c8f9e6f1 on inpovin:patch-2** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "Closeing this in favor of #5172\r\n\r\nYou need to put both tests and code in one PR."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9ff08dfb6b84f2427b5e",
    "number": 5165,
    "body": "The Language Council of Norway has [a list of officially recognized abbreviations](https://www.sprakradet.no/sprakhjelp/Skriveregler/Forkortinger/) for dates, months and weekdays (among other things).\r\n\r\nThe abbreviations used in momentjs for locales `nn` and `nb` were wrong based on this list, so I took the liberty to update them.\r\n\r\n@sigurdga ",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/24590819/badge)](https://coveralls.io/builds/24590819)\n\nCoverage decreased (-0.004%) to 88.406% when pulling **33bec816185ba050e282e0e0c76fe0bdebe94130 on stephenramthun:develop** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "\n[![Coverage Status](https://coveralls.io/builds/24590819/badge)](https://coveralls.io/builds/24590819)\n\nCoverage decreased (-0.004%) to 88.406% when pulling **33bec816185ba050e282e0e0c76fe0bdebe94130 on stephenramthun:develop** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n"
    ],
    "commit_messages": [
      "[locale] nb,nn: use correct abbreviations for months and weekdays (#5165)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9ff18dfb6b84f2427b5f",
    "number": 5160,
    "body": "In Hong Kong, `中午` is exactly 1200\r\n\r\nReferences\r\n* `第二節 (上午11時30分至下午1時)` 1130 `上午` https://www.legco.gov.hk/yr18-19/chinese/bc/bc54/agenda/bc5420190427.htm\r\n* `上午11時30分至中午12時` 1200 `中午`  https://www.gov.hk/tc/theme/bf/consultation/10104.htm\r\n* `上 午 9 時 至 下 午 12 時 30 分` 1230 `下午` https://www.immd.gov.hk/hkt/services/travel_document/immigrationoffices.html",
    "head_branch": "anthony/fix-locale-zh-hk-meridiem",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/24438851/badge)](https://coveralls.io/builds/24438851)\n\nCoverage remained the same at 88.41% when pulling **bc7aba859d2351aecad3079291c89e96a63c7962 on anthonylau:anthony/fix-locale-zh-hk-meridiem** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "\n[![Coverage Status](https://coveralls.io/builds/24438851/badge)](https://coveralls.io/builds/24438851)\n\nCoverage remained the same at 88.41% when pulling **bc7aba859d2351aecad3079291c89e96a63c7962 on anthonylau:anthony/fix-locale-zh-hk-meridiem** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "\n[![Coverage Status](https://coveralls.io/builds/24467471/badge)](https://coveralls.io/builds/24467471)\n\nCoverage decreased (-0.01%) to 88.398% when pulling **f5fdcb211332808e083e74a192949f30f864c9ce on anthonylau:anthony/fix-locale-zh-hk-meridiem** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "@hehachris @skfd @ben-lin ",
      "LGTM :+1:"
    ],
    "commit_messages": [
      "[locale] zh-hk: Update meridiem hour range (#5160)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9ff28dfb6b84f2427b60",
    "number": 5158,
    "body": "This PR closes #5109.\r\n\r\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/24398128/badge)](https://coveralls.io/builds/24398128)\n\nCoverage decreased (-0.02%) to 88.394% when pulling **111f716c6bf149cb670b64bffe5070bd09ee0585 on CaioSR:develop** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "\n[![Coverage Status](https://coveralls.io/builds/24398128/badge)](https://coveralls.io/builds/24398128)\n\nCoverage decreased (-0.02%) to 88.394% when pulling **111f716c6bf149cb670b64bffe5070bd09ee0585 on CaioSR:develop** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "\n[![Coverage Status](https://coveralls.io/builds/24398128/badge)](https://coveralls.io/builds/24398128)\n\nCoverage decreased (-0.02%) to 88.394% when pulling **111f716c6bf149cb670b64bffe5070bd09ee0585 on CaioSR:develop** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "\n[![Coverage Status](https://coveralls.io/builds/24398128/badge)](https://coveralls.io/builds/24398128)\n\nCoverage decreased (-0.02%) to 88.394% when pulling **111f716c6bf149cb670b64bffe5070bd09ee0585 on CaioSR:develop** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n"
    ],
    "commit_messages": [
      "[locale] pt,pt-br: Uncapitalization of month names (#5158)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9ff38dfb6b84f2427b61",
    "number": 5153,
    "body": "Closes #5057",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "[![CLA assistant check](https://cla.js.foundation/pull/badge/signed)](https://cla.js.foundation/moment/moment?pullRequest=5153) <br/>All committers have signed the CLA.",
      "\n[![Coverage Status](https://coveralls.io/builds/24229257/badge)](https://coveralls.io/builds/24229257)\n\nCoverage decreased (-0.01%) to 88.398% when pulling **d6c745e7075b67ec2fab4a13bc994429c315ede5 on CaioSR:patch-1** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "Take a look at https://github.com/moment/moment/issues/5057#issuecomment-618592588"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9ff38dfb6b84f2427b62",
    "number": 5152,
    "body": "Months should be in the accusative case in these formats, but they are\r\nreturned in the nominative case. This is because these formats hard-code\r\nthe dot after the day (\"D.\") rather than using ordinal notation (\"Do\").\r\nThe regex for detecting accusative case matches \"Do\" but not \"D.\".\r\n\r\nMany other locales have the same problem, with L* formats using \"D.\"\r\nwhere \"Do\" should be used instead, but none of them have different\r\ngrammatical forms for months, so nothing breaks for them. Croatian is\r\nthe only one where \"D.\" causes this bug.\r\n\r\nDownstream bug report from Wikipedia: https://phabricator.wikimedia.org/T223988",
    "head_branch": "croatian-months",
    "is_a_fork": true,
    "comments": [
      "\n[![Coverage Status](https://coveralls.io/builds/24182919/badge)](https://coveralls.io/builds/24182919)\n\nCoverage decreased (-0.004%) to 88.406% when pulling **2716a68667406d2bbb5f02c84c866102ad552121 on catrope:croatian-months** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n"
    ],
    "commit_messages": [
      "[locale] hr: Fix month declension in Croation LL, LLL, LLLL formats (#5152)\n\nMonths should be in the accusative case in these formats, but they are\r\nreturned in the nominative case. This is because these formats hard-code\r\nthe dot after the day (\"D.\") rather than using ordinal notation (\"Do\").\r\nThe regex for detecting accusative case matches \"Do\" but not \"D.\".\r\n\r\nMany other locales have the same problem, with L* formats using \"D.\"\r\nwhere \"Do\" should be used instead, but none of them have different\r\ngrammatical forms for months, so nothing breaks for them. Croatian is\r\nthe only one where \"D.\" causes this bug.\r\n\r\nDownstream bug report from Wikipedia: https://phabricator.wikimedia.org/T223988"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9ff48dfb6b84f2427b63",
    "number": 5151,
    "body": "This is an attempt to make use of typescript 3.1 feature `typesVersions` https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-1.html#version-selection-with-typesversions so people with newer versions of typescript can use correct types for moment i.e. with `null | undefined`.\r\nThis should not break types for <2.0 user, nothing changes for >=2.0 <3.1 users as well, this only should affect people with >=3.1 typescript version.\r\n\r\nRelated: https://github.com/moment/moment/issues/3617 https://github.com/moment/moment/pull/3591 https://github.com/moment/moment/pull/3688 https://github.com/moment/moment/issues/4073",
    "head_branch": "introduce-typescript-typesversions",
    "is_a_fork": true,
    "comments": [
      "tested it with 1.8 and with latest (3.5.2) on windows 10, so far works as expected",
      "\n[![Coverage Status](https://coveralls.io/builds/24154556/badge)](https://coveralls.io/builds/24154556)\n\nCoverage decreased (-0.06%) to 88.352% when pulling **e8e0a9cd0f48da16a753b43140b86a1e648b461b on MhMadHamster:introduce-typescript-typesversions** into **13a61b285c095bda7ea8e33156090ea5ccfeaef1 on moment:develop**.\n",
      "I manually merged this, thanks!\r\n\r\nFinally some sanity from the TS community with respect to backwards compatibility.",
      "@MhMadHamster, hey I have this errors on latest master, can you investigate? I had to disable the testing of ts3 for now, I'll reenable it when it works :)\r\n\r\n```\r\n>> npx: installed 1 in 2.635s\r\nnode_modules/@types/node/globals.d.ts(247,65): error TS2339: Property 'toPrimitive' does not exist on type 'SymbolConstructor'.\r\nnode_modules/@types/node/globals.d.ts(872,38): error TS2304: Cannot find name 'ReadonlySet'.\r\nnode_modules/@types/node/globals.d.ts(1000,14): error TS2304: Cannot find name 'MapConstructor'.\r\nnode_modules/@types/node/globals.d.ts(1005,25): error TS2585: 'Promise' only refers to a type, but is being used as a value here. Do you need to change your target library? Try changing the `lib` compiler option to es2015 or later.\r\nnode_modules/@types/node/globals.d.ts(1009,14): error TS2304: Cannot find name 'SetConstructor'.\r\nnode_modules/@types/node/globals.d.ts(1019,18): error TS2304: Cannot find name 'WeakMapConstructor'.\r\nnode_modules/@types/node/globals.d.ts(1020,18): error TS2304: Cannot find name 'WeakSetConstructor'.\r\nnode_modules/@types/node/perf_hooks.d.ts(292,31): error TS2583: Cannot find name 'Map'. Do you need to change your target library? Try changing the `lib` compiler option to es2015 or later.\r\nnode_modules/@types/node/stream.d.ts(26,35): error TS2304: Cannot find name 'Iterable'.\r\nnode_modules/@types/node/url.d.ts(94,38): error TS2304: Cannot find name 'Iterable'.\r\nnode_modules/@types/node/url.d.ts(95,88): error TS2304: Cannot find name 'Iterable'.\r\nnode_modules/@types/node/url.d.ts(108,17): error TS2339: Property 'iterator' does not exist on type 'SymbolConstructor'.\r\n>> npm\r\n>> ERR! code ELIFECYCLE\r\n>> npm ERR!\r\n>> errno 1\r\n>> npm\r\n>> ERR! moment@2.24.0 ts3.1-typescript-test: `npx typescript@3.1 --project ts3.1-typing-tests`\r\n>> npm ERR! Exit status 1\r\n>> npm ERR! \r\n>> npm\r\n>> ERR! Failed at the moment@2.24.0 ts3.1-typescript-test script.\r\n>> npm ERR! This is probably not a problem with npm. There is likely additional logging output above.\r\n>> \r\n>> npm ERR! A complete log of this run can be found in:\r\n>> npm ERR!     /home/iskren/.npm/_logs/2020-04-24T11_23_51_008Z-debug.log\r\n>> Exited with code: 1.\r\n>> Error executing child process: Error: Process exited with code 1.\r\n```",
      "@ichernev sure, will take a look this week.",
      "@ichernev take a look pls, im not sure if i can somehow trigger CI build for the changes",
      "c2aa0b05be2305ded8db2e604087493930e8b080 Fixed in here, all good! Thank you @MhMadHamster",
      "Cannot find module 'moment' on TypeScript 3.8.3.\r\nAll is ok if I'll remove:\r\n```\r\n  \"typesVersions\": {\r\n        \">=3.1\": {\r\n            \"*\": [\r\n                \"ts3.1-typings/*\"\r\n            ]\r\n        }\r\n    },\r\n```",
      "` ts3.1-typings` folder not exist in `node_modules/moment`.",
      "I'm assuming that's because it got published not with npm but with something else instead, is it `jspm` ? It seems i need to add the directory to some sort of config so it will get published as well, but i'm not sure where exactly /cc @ichernev ",
      "Maybe because of\r\nhttps://github.com/moment/moment/blob/226799e1f8767a8ab2849ea04f595dc82ce83747/package.json#L81-L86\r\n?\r\n\r\n**Edit:** never mind I don't think that's actually related, because the package contains other files that are not mentioned here (see https://unpkg.com/browse/moment@2.25.0/).\r\n\r\nMaybe @ichernev just deployed from his machine and the `ts3.1-typings` folder was missing there?"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9ff58dfb6b84f2427b64",
    "number": 5150,
    "body": "The conditional logic was put in the ternary\r\nso that it would not slowdown the performance of the 'days' diff conditions.\r\n\r\nAn example where this is helpful:\r\n```javascript\r\n    return moment(normalizeTimestamp(timestamp)).calendar(null, {\r\n      sameDay: '[Today]',\r\n      nextDay: '[Tomorrow]',\r\n      nextWeek: 'dddd',\r\n      lastDay: '[Yesterday]',\r\n      lastWeek: '[Last] dddd',\r\n      sameElse: 'MM/DD/YYYY'\r\n    });\r\n```\r\n\r\nIf a meeting is scheduled for a month in the future but still within the same year.\r\nA more appealing format would be 'MM/DD'\r\n\r\nCurrently I check the year formatting outside of the calendar function to change the format accordingly.\r\nHowever, I thought that this change would be helpful for others.\r\n\r\nHappy to update the documentation for calendar to accommodate the change.\r\n\r\nResult after the change\r\n```javascript\r\n    return moment(normalizeTimestamp(timestamp)).calendar(null, {\r\n      sameDay: '[Today]',\r\n      nextDay: '[Tomorrow]',\r\n      nextWeek: 'dddd',\r\n      lastDay: '[Yesterday]',\r\n      lastWeek: '[Last] dddd',\r\n\t  sameYear: 'MM/DD',\r\n      sameElse: 'MM/DD/YYYY'\r\n    });\r\n```",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9ff68dfb6b84f2427b65",
    "number": 5147,
    "body": "For [#5134](https://github.com/moment/moment/issues/5134)",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9ff78dfb6b84f2427b66",
    "number": 5145,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9ff88dfb6b84f2427b67",
    "number": 5141,
    "body": "http://momentjs.com/guides/#/warnings/define-locale/",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9ff98dfb6b84f2427b68",
    "number": 5139,
    "body": "Other locales have capitalized week days (like 'en-gb')",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9ffa8dfb6b84f2427b69",
    "number": 5138,
    "body": "`jsnext:main` is deprecated in favor of `module`. This change is [backed by webpack authors](https://twitter.com/TheLarkInn/status/1138558140272668672)",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9ffb8dfb6b84f2427b6a",
    "number": 5133,
    "body": "[locale] corrected to official Slovenian date format for short dates",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9ffc8dfb6b84f2427b6b",
    "number": 5127,
    "body": "Fixed some typos in the Irish locale regarding months.",
    "head_branch": "bugfix/irish-fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[locale] typos in Irish locale for months (#5127)\n\nFixed some typos in the Irish locale regarding months."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9ffd8dfb6b84f2427b6c",
    "number": 5125,
    "body": "Some changes to the short formats (without punctuation), as well as a faultyshort version of Saturday for nynorsk.",
    "head_branch": "udate-nb-nn",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9ffe8dfb6b84f2427b6d",
    "number": 5124,
    "body": "Some changes to the short formats (without punctuation), as well as a faultyshort version of Saturday for nynorsk.",
    "head_branch": "udate-nb-nn",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661f9fff8dfb6b84f2427b6e",
    "number": 5123,
    "body": "Fixed weird concatenation for the shorter forms of days and months.",
    "head_branch": "update-nb",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0008dfb6b84f2427b6f",
    "number": 5121,
    "body": "Modern Belarusian grammar uses \"май\" as the fifth month of the year, not \"травень\".",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0018dfb6b84f2427b70",
    "number": 5120,
    "body": "week days are lower case, as per the Portuguese grammar rules",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0028dfb6b84f2427b71",
    "number": 5119,
    "body": "This PR separates the moment.defineLocale() calls from the actual locale data making it easier to asynchronously load locale data within a modern build process (webpack, rollup). Now users can simply import the locale data within an es6 package and do whatever they want with it, not having to have a `moment` instance available within that context.\r\n\r\nSee issue here: #3623\r\n\r\nNote: this PR doesn't update the documentation. I wanted to confirm the team is okay with this before tweaking the doc. Thanks!",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0038dfb6b84f2427b72",
    "number": 5113,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0048dfb6b84f2427b73",
    "number": 5111,
    "body": "I updated `Duration.milliseconds()` to floor and return an integer to fix issue #4649.",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0058dfb6b84f2427b74",
    "number": 5105,
    "body": "Pashto [ps]",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0068dfb6b84f2427b75",
    "number": 5104,
    "body": "Hi! I'm part of the Azure DevOps team at Microsoft. Wondering if there's any interest in trying out Azure Pipelines. If so I've already done most of the work for you. Some reasons you might be interested:\r\n\r\n- Generous free allowance for open source projects - 10 jobs in parallel, unlimited build minutes\r\n- All 3 major platforms supported - Linux, Windows, macOS - hosted by us in Azure\r\n- Great build/test analytics, giving you insights into trends over time\r\n\r\nYou can preview the results in the [demo pipeline I setup](https://dev.azure.com/dylansmith/Moment/_build?definitionId=35).\r\n\r\nHere's some more details on what I've done here:\r\n\r\n1. Recreated what the Travis build does today - builds against 6 versions of Node on Linux and publishes to coveralls\r\n2. Added 4 more jobs to build against some Node versions on Windows (it's easy to add more, I deliberately kept it to 10 jobs for perf reasons)\r\n3. Tweaked some things so it only does code coverage on one out of the 10 jobs (for a bit of perf)\r\n4. Publish the code coverage to Azure Pipelines (in addition to coveralls) - because why not?!\r\n5. The whole thing runs in about 3 mins (vs 8-10 for the recent Travis builds)\r\n\r\n![image](https://user-images.githubusercontent.com/1508559/57563568-f3758580-7364-11e9-8cd1-be012087aeb9.png)\r\n\r\n![image](https://user-images.githubusercontent.com/1508559/57563734-ccb84e80-7366-11e9-8827-e80341004ba7.png)",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0078dfb6b84f2427b76",
    "number": 5103,
    "body": "locale : Pashto [ps]",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0088dfb6b84f2427b77",
    "number": 5098,
    "body": "As explained in issue #5097  this fixes a bug where `moment({day: 0})` was acting differently from `day: '0'`, `date: 0` or `date: '0'`. This is ultimately due to the use of `i.day || i.date`. When `i.day` is 0, it is still falsey so it returns `i.date` which is undefined. \r\n\r\nThis PR makes the behaviour consistent by explicitly checking whether the key is undefined rather than just falsey. ",
    "head_branch": "bugfix/5097-inconsistent-moment-obj-behaviour-date-day",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[bugfix] Uniform handling of day/date when 0 is used (#5098)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0098dfb6b84f2427b78",
    "number": 5095,
    "body": "…e #5043",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0098dfb6b84f2427b79",
    "number": 5094,
    "body": "…e #5043",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa00a8dfb6b84f2427b7a",
    "number": 5092,
    "body": "//! moment.js locale configuration\r\n//! locale : Pashto [ps]\r\n//! author : Nassim Nasibullah : https://github.com/spinzar\r\n\r\n;(function (global, factory) {\r\n    typeof exports === 'object' && typeof module !== 'undefined'\r\n        && typeof require === 'function' ? factory(require('../moment')) :\r\n    typeof define === 'function' && define.amd ? define(['../moment'], factory) :\r\n    factory(global.moment)\r\n }(this, (function (moment) { 'use strict';\r\n\r\n\r\n  var symbolMap = {\r\n     '1': '۱',\r\n     '2': '۲',\r\n     '3': '۳',\r\n     '4': '٤',\r\n     '5': '۵',\r\n     '6': '۶',\r\n     '7': '۷',\r\n     '8': '۸',\r\n     '9': '۹',\r\n     '0': '۰'\r\n };\r\n var numberMap = {\r\n     '۱': '1',\r\n     '۲': '2',\r\n     '۳': '3',\r\n     '٤': '4',\r\n     '۵': '5',\r\n     '۶': '6',\r\n     '۷': '7',\r\n     '۸': '8',\r\n     '۹': '9',\r\n     '۰': '0'\r\n };\r\n\r\n  var ps = moment.defineLocale('ps', {\r\n     months : 'سلواغه_كب_وری_غويی_غبرګولی_چنګاښ_زمری_وږی_تله_لړم_ليندۍ_مرغومی'.split('_'),\r\n     monthsShort : 'سلواغه_كب_وری_غويی_غبرګولی_چنګاښ_زمری_وږی_تله_لړم_ليندۍ_مرغومی'.split('_'),\r\n     weekdays : 'اتوار_ ګول_نهه_شورو_زیارت_جمعه_خالي ورځ'.split('_'),\r\n     weekdaysShort : 'اتوار_ ګول_نهه_شورو_زیارت_جمعه_خالي ورځ'.split('_'),\r\n     weekdaysMin : 'ا_ګ_ن_ش_ز_ج_خ'.split('_'),\r\n     weekdaysParseExact : true,\r\n     longDateFormat : {\r\n        LT : 'HH:mm',\r\n        LTS : 'HH:mm:ss',\r\n        L : 'YYYY/MM/DD',\r\n        LL : 'YYYYکالMمیاشتDورځ',\r\n        LLL : 'YYYYکالMمیاشتDورځ HH:mm',\r\n        LLLL : 'YYYYکالMمیاشتDورځ HH:mm dddd',\r\n        l : 'YYYY/MM/DD',\r\n        ll : 'YYYYکالMمیاشتDورځ',\r\n        lll : 'YYYYکالMمیاشتDورځ HH:mm',\r\n        llll : 'YYYYکالMمیاشتDورځ HH:mm dddd'\r\n     },\r\n     meridiemParse: /د غرمې دمخه|ماسپښین/,\r\n     isPM: function (input) {\r\n         return /ماسپښین/.test(input);\r\n     },\r\n     meridiem : function (hour, minute, isLower) {\r\n         if (hour < 12) {\r\n             return 'د غرمې دمخه';\r\n         } else {\r\n             return 'ماسپښین';\r\n         }\r\n     },\r\n     calendar : {\r\n         sameDay : '[نن ورځ] LT',\r\n         nextDay : '[سبا] LT',\r\n         nextWeek : 'dddd [بله اونۍ] LT',\r\n         lastDay : '[پرون] LT',\r\n         lastWeek : '[تیره اونۍ]dddd LT',\r\n         sameElse : 'L'\r\n     },\r\n     relativeTime : {\r\n         future : 'وروسته %s',\r\n         past : '%s مخکې',\r\n         s : 'څو ثاني',\r\n         m : 'يوه دقيقه',\r\n         mm : '%d دقیقه',\r\n         h : 'یو ساعت',\r\n         hh : '%d ساعت',\r\n         d : 'یوه ورځ',\r\n         dd : '%d ورځ',\r\n         M : 'يوه مياشت',\r\n         MM : '%d مياشت',\r\n         y : 'یو کال',\r\n         yy : '%d کال'\r\n     },\r\n     preparse: function (string) {\r\n         return string.replace(/[۰-۹]/g, function (match) {\r\n             return numberMap[match];\r\n         }).replace(/،/g, ',');\r\n     },\r\n     postformat: function (string) {\r\n         return string.replace(/\\d/g, function (match) {\r\n             return symbolMap[match];\r\n         }).replace(/,/g, '،');\r\n     },\r\n     dayOfMonthOrdinalParse: /\\d{1,2}\\./,\r\n     ordinal : '%d',\r\n     week : {\r\n         dow : 6, // Saturday is the first day of the week.\r\n         doy : 12 // The week that contains Jan 1st is the first week of the year.\r\n     }\r\n });\r\n\r\n  return ps;\r\n\r\n  })));",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa00b8dfb6b84f2427b7b",
    "number": 5091,
    "body": "پښتو  contribution for Pashto language support",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa00c8dfb6b84f2427b7c",
    "number": 5090,
    "body": "I reverted the capitalisation thing for pt-br since Brazilian Portuguese mostly does not capitalise like English, you should know that. In my mind there's no need to keep months and days uppercased because it's not much of a technical context that demands any additional stylistic feature, especially one inherited from the source language.",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa00d8dfb6b84f2427b7d",
    "number": 5086,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa00e8dfb6b84f2427b7e",
    "number": 5080,
    "body": "Fixes issue in open issue 4435. Test case is based on the example provided there.\r\n\r\nhttps://github.com/moment/moment/issues/4435",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[bugfix] Invalid parse against array still picks best format (fixes #4435) (#5080)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa00f8dfb6b84f2427b7f",
    "number": 5076,
    "body": "Add source and test files for a new locale gom-deva",
    "head_branch": "createGomDeva",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0108dfb6b84f2427b80",
    "number": 5069,
    "body": "Corrected an error in the function processRelativeTime for the locale gom-latn and updated tests",
    "head_branch": "gomLatnRelativeTime",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[locale] gom-latn: Improve processRelativeTime (#5069)\n\n* Correct processRelativeTime\r\n\r\nThe function processRelativeTime should check whether the time is in the future, and not whether there is a suffix\r\n\r\n* Correct processRelativeTime\r\n\r\nUpdated tests based on the change in the function processRelativeTime"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0118dfb6b84f2427b81",
    "number": 5064,
    "body": "The long date format inheritance for lowercase localized formats (l,ll,lll,llll) is interpolating characters inside square brackets",
    "head_branch": "fixLocaleInheritance",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0128dfb6b84f2427b82",
    "number": 5061,
    "body": "Changed the first letter to be uppercased of week days for the french locale\r\n@jfroffice",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0138dfb6b84f2427b83",
    "number": 5055,
    "body": "According to \"Bangla Academy\", the change are applied. I am working a govt project for Bangladesh where I need to use the locale data and I noticed these. Recently \"Bangla Academy\" declare of how we should use these English month names when we write it in Bengali letters. \r\n\r\nreference: \r\n1. https://github.com/date-fns/date-fns/blob/v2.0.0-alpha.27/src/locale/bn/_lib/localize/index.js\r\n2. https://www.prothomalo.com [Bengali renowned Newspaper]",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[locale] bn: Improve translation as per Bangla Academy (#5055)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0148dfb6b84f2427b84",
    "number": 5052,
    "body": "",
    "head_branch": "babel",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0158dfb6b84f2427b85",
    "number": 5049,
    "body": "More accurate way of saying last week in Romanian.\r\nSource: romanian friend",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0168dfb6b84f2427b86",
    "number": 5048,
    "body": "More accurate way of saying last week.\r\nSource: romanian friend",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0178dfb6b84f2427b87",
    "number": 5044,
    "body": "Fixes #5043 ",
    "head_branch": "fix-5043",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0188dfb6b84f2427b88",
    "number": 5030,
    "body": "add dow and doy for **zh-tw, zh-hk** base on [customization/dow-doy ](https://momentjs.com/docs/#/customization/dow-doy/) and follow [locale/zh-cn](https://github.com/moment/moment/blob/develop/src/locale/zh-cn.js) as example.",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0188dfb6b84f2427b89",
    "number": 5029,
    "body": "i don't know why this not add into moment since node.js change it\r\n\r\n## issue\r\n\r\n- https://github.com/moment/moment/issues/4639",
    "head_branch": "pr/002",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0198dfb6b84f2427b8a",
    "number": 5028,
    "body": "i don'y know why this not add into moment since node.js change it",
    "head_branch": "pr/001",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa01a8dfb6b84f2427b8b",
    "number": 5025,
    "body": "@TechDimension added the locale `en-SG` (#4951). However, it uses a different capitalization from all other locales.\r\n\r\nThis PR simply renames `en-SG` to `en-sg`. It does not change the actual locale content.\r\n\r\nSee #5024 ",
    "head_branch": "fix-en-sg-capitalization",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[locale] (en-sg) Rename locale en-SG to en-sg (#5025)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa01b8dfb6b84f2427b8c",
    "number": 5023,
    "body": "Resolves #5022",
    "head_branch": "duration-comparison-operators",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa01c8dfb6b84f2427b8d",
    "number": 5020,
    "body": "the require of 'locale' module is requesting the wrong directory",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa01d8dfb6b84f2427b8e",
    "number": 5013,
    "body": "Fixed https://github.com/moment/moment/pull/5005\r\n\r\n> %d is correct, not d%",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[locale] fa: Fix typo (#5013)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa01e8dfb6b84f2427b8f",
    "number": 5010,
    "body": "Changed two letter abbreviation for Saturday from 'lø' to 'la'",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa01f8dfb6b84f2427b90",
    "number": 5008,
    "body": "Closes https://github.com/moment/moment/issues/5007",
    "head_branch": "fix-5007",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[bugfix] ts: Add isoWeek option for duration constructor (fix #5007) (#5008)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0208dfb6b84f2427b91",
    "number": 5006,
    "body": "The current translation adds a very specific and mostly unnecessary 'at' in the beginning. It just looks/sounds wrong. Maybe there are cases when this might be correct but surely not most of the time. [insert 'change my mind' meme]",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[locale] Tweak bg translation for last week (#5006)\n\n* Tweak bg translation for last week\r\n\r\nThe current translation adds a very specific and mostly unnecessary 'at' in the beginning. It just looks/sounds wrong. Maybe there are cases when this might be correct but surely not most of the time. [insert 'change my mind' meme]\r\n\r\n* move bg changes to proper files"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0218dfb6b84f2427b92",
    "number": 5005,
    "body": "%d is correct, not d%",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0238dfb6b84f2427b93",
    "number": 4999,
    "body": "Change two letter abbreviation from 'lø' to 'la'",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0248dfb6b84f2427b94",
    "number": 4991,
    "body": "This reverts commit cf30706573f537b904fd7ee8bf78f8576a45a87e.\r\n\r\n@baryon @eternalharvest, [CLDR says](http://cldr.unicode.org/translation/date-time-patterns):\r\n\r\n> For some languages, long months are not used; for example, in Japanese the numeric month is used in patterns, in front of the character 月.\r\n\r\nFixes #4965.",
    "head_branch": "revert-4590-hotfix/japanese_months",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Revert \"[locale] ja: fix long month names (#4590)\" (#4991)\n\nThis reverts commit cf30706573f537b904fd7ee8bf78f8576a45a87e."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0258dfb6b84f2427b95",
    "number": 4990,
    "body": "We Marathi people follow standards mentioned below, to label timespans.\r\n\r\nLabel | Time Span \r\n------------ | -------------\r\nपहाटे (post midnight, pre-sunrise) |    >= 12am to < 6am \r\nसकाळी (post sunrise, pre-noon) |    >= 6am to < 12pm\r\nदुपारी (afternoon) |    >= 12pm to < 5pm\r\nसायंकाळी (evening) |    >= 5pm to < 8pm\r\nरात्री (night) |    >= 8pm to < 12am\r\n\r\nActually, 12am is confusing in Marathi tradition. In modern clock system, Moment 12am is considered in arriving date as 0am. And in Marathi tradition it is referred to as final moment of the previous date (Sort of, 0:01 is starting minute of the arriving date) . To comply with modern clock system, I propose to refer to 0am as पहाटे , so that it is considered as moment in the arriving date. Hope this discription itself is not confusing :)\r\n\r\nAnother point is about range of पहाटे, ie. >= 0am to < 6am. Though conventionally, upto 2 am, we refer to the time as रात्री or पहाटे, both alternatively, I want to specifically call पहाटे for early times in the arriving date and रात्री for late times in the departing date, to make it more specific and well-defined, avoiding confusion about date of the time.",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[locale] mr (Marathi) (#4990)\n\n* tests according to changes in mr.js\r\n\r\n* [locale] mr (Marathi)\r\n\r\nWe Marathi people follow standards mentioned below, to label timespans.\r\n\r\nLabel | Time Span \r\n------------ | -------------\r\nपहाटे (post midnight, pre-sunrise) |    >= 12am to < 6am \r\nसकाळी (post sunrise, pre-noon) |    >= 6am to < 12pm\r\nदुपारी (afternoon) |    >= 12pm to < 5pm\r\nसायंकाळी (evening) |    >= 5pm to < 8pm\r\nरात्री (night) |    >= 8pm to < 12am\r\n\r\nActually, 12am is confusing in Marathi tradition. In modern clock system, Moment 12am is considered in arriving date as 0am. And in Marathi tradition it is referred to as final moment of the previous date (Sort of, 0:01 is starting minute of the arriving date) . To comply with modern clock system, I propose to refer to 0am as पहाटे , so that it is considered as moment in the arriving date. Hope this discription itself is not confusing :)\r\n\r\nAnother point is about range of पहाटे, ie. >= 0am to < 6am. Though conventionally, upto 2 am, we refer to the time as रात्री or पहाटे, both alternatively, I want to specifically call पहाटे for early times in the arriving date and रात्री for late times in the departing date, to make it more specific and well-defined, avoiding confusion about date of the time."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0258dfb6b84f2427b96",
    "number": 4989,
    "body": "We Marathi people follow standards mentioned below, to label timespans.\r\n\r\nLabel | Time Span \r\n------------ | -------------\r\nपहाटे (post midnight, pre-sunrise) |    >= 12am to < 6am \r\nसकाळी (post sunrise, pre-noon) |    >= 6am to < 12pm\r\nदुपारी (afternoon) |    >= 12pm to < 5pm\r\nसायंकाळी (evening) |    >= 5pm to < 8pm\r\nरात्री (night) |    >= 8pm to < 12am\r\n\r\nActually, 12am is confusing in Marathi tradition. In modern clock system, Moment 12am is considered in arriving date as 0am. And in Marathi tradition it is referred to as final moment of the previous date (Sort of, 0:01 is starting minute of the arriving date) . To comply with modern clock system, I propose to refer to 0am as पहाटे , so that it is considered as moment in the arriving date. Hope this discription itself is not confusing :)\r\n\r\nAnother point is about range of पहाटे, ie. >= 0am to < 6am. Though conventionally, upto 2 am, we refer to the time as रात्री or पहाटे, both alternatively, I want to specifically call पहाटे for early times in the arriving date and रात्री for late times in the departing date, to make it more specific and well-defined, avoiding confusion about date of the time.",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0268dfb6b84f2427b97",
    "number": 4988,
    "body": "We Marathi people follow standards mentioned below, to label timespans.\r\n\r\n| पहाटे (post midnight, pre-sunrise) |    >= 12am to < 6am |\r\n| सकाळी (post sunrise, pre-noon) |    >= 6am to < 12pm |\r\n| दुपारी (afternoon) |    >= 12pm to < 5pm |\r\n| सायंकाळी (evening) |    >= 5pm to < 8pm |\r\n| रात्री (night) |    >= 8pm to < 12am |\r\n\r\nActually, 12am is confusing in Marathi tradition. In modern clock system, Moment 12am is considered in arriving date as 0am. And in Marathi tradition it is referred to as final moment of the previous date (Sort of, 0:01 is starting minute of the arriving date) . To comply with modern clock system, I propose to refer to 0am as पहाटे , so that it is considered as moment in the arriving date. Hope this discription itself is not confusing :)\r\n\r\nAnother point is about range of पहाटे, ie. >= 0am to < 6am. Though conventionally, upto 2 am, we refer to the time as रात्री or पहाटे, both alternatively, I want to specifically call पहाटे for early times in the arriving date and रात्री for late times in the departing date, to make it more specific and well-defined, avoiding confusion about date of the time.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0288dfb6b84f2427b98",
    "number": 4986,
    "body": "\r\n\r\nsrc/locale/ar.js\r\n\r\nexport default moment.defineLocale(\"ar\", {\r\n    months: months,\r\n    // monthsShort : months,\r\n    monthsShort: \"يناير_فبراي_ديسمب\".split(\"_\"), //specified month names separated by _ to maintain code convention\r\n    weekdays: \"الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت\".split(\"_\"),\r\n    weekdaysShort: \"أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت\".split(\"_\"),\r\n    weekdaysMin: \"ح_ن_ث_ر_خ_ج_س\".split(\"_\"),\r\n    weekdaysParseExact: true,\r\n    longDateFormat: {\r\n        LT: \"HH:mm\",\r\n        LTS: \"HH:mm:ss\",\r\n        L: \"D/\\u200FM/\\u200FYYYY\",\r\n        LL: \"D MMMM YYYY\",\r\n        LLL: \"D MMMM YYYY HH:mm\",\r\n        LLLL: \"dddd D MMMM YYYY HH:mm\"\r\n    },\r\n    meridiemParse: /ص|م/,\r\n    isPM: function(input) {\r\n        return \"م\" === input;\r\n    },\r\n    meridiem: function(hour, minute, isLower) {\r\n        if (hour < 12) {\r\n            return \"ص\";\r\n        } else {\r\n            return \"م\";\r\n        }\r\n    },\r\n    calendar: {\r\n        sameDay: \"[اليوم عند الساعة] LT\",\r\n        nextDay: \"[غدًا عند الساعة] LT\",\r\n        nextWeek: \"dddd [عند الساعة] LT\",\r\n        lastDay: \"[أمس عند الساعة] LT\",\r\n        lastWeek: \"dddd [عند الساعة] LT\",\r\n        sameElse: \"L\"\r\n    },\r\n    relativeTime: {\r\n        future: \"بعد %s\",\r\n        past: \"منذ %s\",\r\n        s: pluralize(\"s\"),\r\n        ss: pluralize(\"s\"),\r\n        m: pluralize(\"m\"),\r\n        mm: pluralize(\"m\"),\r\n        h: pluralize(\"h\"),\r\n        hh: pluralize(\"h\"),\r\n        d: pluralize(\"d\"),\r\n        dd: pluralize(\"d\"),\r\n        M: pluralize(\"M\"),\r\n        MM: pluralize(\"M\"),\r\n        y: pluralize(\"y\"),\r\n        yy: pluralize(\"y\")\r\n    },\r\n    preparse: function(string) {\r\n        return string\r\n            .replace(/[١٢٣٤٥٦٧٨٩٠]/g, function(match) {\r\n                return numberMap[match];\r\n            })\r\n            .replace(/،/g, \",\");\r\n    },\r\n    postformat: function(string) {\r\n        return string\r\n            .replace(/\\d/g, function(match) {\r\n                return symbolMap[match];\r\n            })\r\n            .replace(/,/g, \"،\");\r\n    },\r\n    week: {\r\n        dow: 6, // Saturday is the first day of the week.\r\n        doy: 12 // The week that contains Jan 12th is the first week of the year.\r\n    }\r\n});\r\n\r\nchanging the arabic months short names array",
    "head_branch": "develop",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0288dfb6b84f2427b99",
    "number": 4984,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0298dfb6b84f2427b9a",
    "number": 4976,
    "body": "that I noticed mostly in tests.",
    "head_branch": "text-typos-20190130",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[tests] Fix various text typos (#4976)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa02a8dfb6b84f2427b9b",
    "number": 4975,
    "body": "Implementing https://github.com/moment/moment/issues/4974",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[locale] (br) Breton move from 12-hour to 24-hour notation (#4975)\n\n* Breton : move from 12-hour to 24-hour notation #4974 https://github.com/moment/moment/issues/4974\r\n\r\n* Replace [e] by :"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa02b8dfb6b84f2427b9c",
    "number": 4971,
    "body": "As both zh-mo and zh-tw use traditional chinese, I used the zh-tw file and credited its authors.\r\n\r\nShould resolve #4949 ",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa02c8dfb6b84f2427b9d",
    "number": 4966,
    "body": "`updateLocale(abbr, null)` correctly resets a locale to its previous definition; but didn't check if it needed to reset the 'current' locale'.\r\n\r\nThis PR fixes that so that resetting the current locale takes immediate effect, without having to manually called `moment.locale(moment.locale())`\r\n\r\nFixes #4962 \r\n",
    "head_branch": "fix/4962",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[bugfix] Fix #4962 updateLocale with null to reset (#4966)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa02d8dfb6b84f2427b9e",
    "number": 4963,
    "body": "Add grunt benchmark sub tasks: get, set, endOf, startOf, compare\r\nAdd grunt benchmark sub task for running all: all",
    "head_branch": "bench-get-set-compare",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[misc] Add general benchmarks: get, set, compare (#2659) (#4963)\n\nAdd grunt benchmark sub tasks: get, set, endOf, startOf, compare\r\nAdd grunt benchmark sub task for running all: all"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa02e8dfb6b84f2427b9f",
    "number": 4961,
    "body": "",
    "head_branch": "build-2.24.0-issues",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[misc] release process fixes (#4961)\n\n* Fix locale abbreviation in comment\r\n\r\n* Update package-lock.json"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa02f8dfb6b84f2427ba0",
    "number": 4959,
    "body": "The default values of the initialized fields are overwritten in the following lines. This means that the code never relies on the variable defaults.\r\nRemoving the unused defaults makes the code easier to read.",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[misc] Remove unused variable defaults (#4959)\n\nThe default values of the initialized fields are overwritten in the following lines. This means that the code never relies on the variable defaults.\r\nRemoving the unused defaults makes the code easier to read."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0308dfb6b84f2427ba1",
    "number": 4958,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[locale] improve mk translation (#4958)\n\n* Update mk.js\r\n\r\n* Update mk.js\r\n\r\n* Update mk.js\r\n\r\n* Update mk.js\r\n\r\n* [locale] improve mk translation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0318dfb6b84f2427ba2",
    "number": 4957,
    "body": "@Quenty31 can you review this? I made some changes because the test and source files did not match.",
    "head_branch": "occitan",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[new locale] (oc-lnc) Occitan (#4957)\n\n* Add oc-lnc files\r\n\r\n* Fix calendar test\r\n\r\n* Fix the rest of tests\r\n\r\n* Add locale author\r\n\r\n* Dont make changes to package-lock\r\n\r\n* Add newline at end of file"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0328dfb6b84f2427ba3",
    "number": 4956,
    "body": "Comparing last week of year N and first week of year N+1 produced wrong result.\r\n\r\nFix #4719",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0338dfb6b84f2427ba4",
    "number": 4954,
    "body": "fixes https://github.com/moment/moment/issues/4415\r\n\r\n@chrisrodz @mmarvick does this look good?",
    "head_branch": "issue-4415",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[locale] (es-us) long date is D [de] MMMM [de] YYYY (#4954)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0348dfb6b84f2427ba5",
    "number": 4953,
    "body": "Several moment methods break if the `Object.prototype` has any additional _enumerable_ properties.\r\n\r\n```js\r\nmoment().fromNow(); // \"a few seconds ago\"\r\nObject.prototype.breakIt = true;\r\nmoment().fromNow(); // \"Invalid date\"\r\n```\r\n\r\nThis is fixed by patching a few `for (prop in object)` loops so they only act on the object's own properties (using `hasOwnProperty`.)\r\n\r\nFixes #4802 ",
    "head_branch": "fix/4802",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[bugfix] Ignore enumerable Object.prototype extensions (#4953)\n\n* [bugfix] Ignore enumerable Object.prototype extensions\r\n\r\n* Waste time with jshint\r\n\r\n* Waste time with jscs\r\n\r\nCo-authored-by: Iskren Ivov Chernev <iskren.chernev@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0358dfb6b84f2427ba6",
    "number": 4951,
    "body": "One of my first pull requests!\r\n\r\nGrunt tests successfully pass\r\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[new locale] Added support for en-SG (Singapore) (#4951)\n\n* en-SG locale. English (Singapore) language supported\r\n\r\n* grunt tests pass for new en-SG locale"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0368dfb6b84f2427ba7",
    "number": 4944,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0378dfb6b84f2427ba8",
    "number": 4936,
    "body": "",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[locale] Update hour to standard dialect for gom-latn (#4936)\n\n* Update hour to standard dialect\r\n\r\n* Update gom-latn.js"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0388dfb6b84f2427ba9",
    "number": 4930,
    "body": "This PR is to add Irish language to the locale files of moment.",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[new locale] Adding Irish language (ga) (#4930)\n\n* Added Irish locale\r\n\r\n* Added the unit testing for ga locale.\r\n\r\n* Added some more tests to ga locale.\r\n\r\n* Finished the unit tests for ga locale.\r\n\r\n* Added the header in the locale file\r\n\r\n* Removed locale from forbidden folder. Sorry\r\n\r\n:q!"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0398dfb6b84f2427baa",
    "number": 4925,
    "body": "I would mention the author, but looks like his profile is deleted(@adambrunner)",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[locale] hu: add dot after short months (#4925)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0398dfb6b84f2427bab",
    "number": 4922,
    "body": "I think something is wrong with the japanese locale tests, see #4920 ",
    "head_branch": "fix-tests-again",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa03a8dfb6b84f2427bac",
    "number": 4921,
    "body": "https://github.com/moment/moment/pull/4650#issuecomment-450074909",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa03b8dfb6b84f2427bad",
    "number": 4917,
    "body": "#4203 ",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa03c8dfb6b84f2427bae",
    "number": 4916,
    "body": "#4203 ",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa03d8dfb6b84f2427baf",
    "number": 4913,
    "body": "Added breaking test for multiple relative time thresholds\r\n\r\nhttps://github.com/moment/moment/issues/4909",
    "head_branch": "relative-time-thresholds-multiple",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[tests] relative time threshold doesn't work for multiple  (#4913)\n\n* [bugfix] relative time threshold doesn't work for multiple\r\n\r\n* return humanize to normal"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa03e8dfb6b84f2427bb0",
    "number": 4912,
    "body": "rollup v0.68 breaks the grunt default task",
    "head_branch": "fix-pipeline",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[bugfix] pipeline breaks with rollup v0.68 (#4912)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa03f8dfb6b84f2427bb1",
    "number": 4911,
    "body": "",
    "head_branch": "test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0408dfb6b84f2427bb2",
    "number": 4910,
    "body": "Also rollup v0.68.0 breaks the build so avoided it in the package.json\r\n\r\ncheck PR test for more details.\r\n\r\nTo replicate: \r\n1. remove node_modules.\r\n2. do npm install on develop branch.\r\n3. watch test fail",
    "head_branch": "add-weeks-to-relative",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0418dfb6b84f2427bb3",
    "number": 4908,
    "body": "@caio-ribeiro-pereira ",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0428dfb6b84f2427bb4",
    "number": 4907,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0438dfb6b84f2427bb5",
    "number": 4906,
    "body": "This fix improves upon #4763 by splitting out `isLeapYear` into a separate module so that it can be shared across `year.js` and `get-set.js` removing the circular dependency.\r\n\r\nfixes #4756 ",
    "head_branch": "fix-circular-dependency",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[bugfix] Fix circular dependency issue (#4906)\n\n* split out isLeapYear into separate util\r\n\r\n* update month to use isLeapYear util for consistency"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0448dfb6b84f2427bb6",
    "number": 4903,
    "body": "",
    "head_branch": "audit-fixes-2",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[misc] run `npm audit fix` (#4903)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0458dfb6b84f2427bb7",
    "number": 4899,
    "body": "Fix issue https://github.com/moment/moment/issues/4842",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0468dfb6b84f2427bb8",
    "number": 4894,
    "body": "@ichernev @marwahaha \r\n\r\nFixed small spelling errors in Kyrgyz locale.\r\n\r\n[This](https://translate.google.com/#view=home&op=translate&sl=en&tl=ky&text=Yesterday%20morning) and [this](https://translate.google.com/#view=home&op=translate&sl=en&tl=ky&text=Last%20month) are the references from Google Translate for proof :)",
    "head_branch": "fix-ky-spelling",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[locale] ky: Fix spelling typos (#4894)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0478dfb6b84f2427bb9",
    "number": 4891,
    "body": "Added Arabic short months to resolve #4890 ",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0488dfb6b84f2427bba",
    "number": 4887,
    "body": "fixes #4886 \r\n\r\nExample:\r\n```javascript\r\nmoment.duration(6, 'M').as('Q');      // 2\r\nmoment.suration(9, 'M').asQuarter();  // 3\r\n```",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[bugfix] Make Duration#as work with quarters (#4887)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0498dfb6b84f2427bbb",
    "number": 4883,
    "body": "Fix of [Issue 4323](https://github.com/moment/moment/issues/4323).\r\n\r\nI first wrote a test that failed as recommended by @marwahaha. Then, I made changes that make all tests, including the new one, pass. ",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa04a8dfb6b84f2427bbc",
    "number": 4875,
    "body": "Hi\r\n\r\nSimilar to #2562, the date format of Swiss Italian should use dots instead of slashes: 14.2.2014 vs 14/2/2014.\r\n\r\nThe language file is based on the original Italian version.",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[new locale] Adding Italian (Swiss) it-ch (#4875)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa04b8dfb6b84f2427bbd",
    "number": 4874,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[locale] correct translation of locale for Vietnam (#4874)\n\n* correct translation of locale for Vietnam\r\n\r\n* correct translation of locale for Vietnam (edit proper src files)\r\n\r\n* Update author comment line"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa04c8dfb6b84f2427bbe",
    "number": 4873,
    "body": "corrects hr translation for last Sunday",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa04d8dfb6b84f2427bbf",
    "number": 4870,
    "body": "this change fixes errors in IE 11 that properties are not allowed to be declared multiple times in strict mode",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa04e8dfb6b84f2427bc0",
    "number": 4863,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[new locale] added Kurdish language (ku) (#4863)\n\n* add Kurdish language locale (ku)\r\n\r\n* clean up and fixed some linte error\r\n\r\n* Revert changes to package-lock.json"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa04f8dfb6b84f2427bc1",
    "number": 4852,
    "body": "Added phonetic Japanese spellings of the weeks and months to a new file. Not a native speaker, unsure what to put for shorthand spellings of each month and day of week.",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa04f8dfb6b84f2427bc2",
    "number": 4849,
    "body": "Correct to en-IE date locale to match the ICU definition: http://www.localeplanet.com/icu/en-IE/index.html\r\n\r\nICU defines the en-IE date format to be 06/11/2018 rather than 06-11-2018.\r\n\r\nfixes https://github.com/moment/moment/issues/4857",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[bugfix] locale/en-ie.js date format (#4849)\n\n* Update locale/en-ie.js\r\n\r\nCorrect to en-IE date locale to match the ICU definition: http://www.localeplanet.com/icu/en-IE/index.html\r\n\r\n* Revert to orgininal\r\n\r\n* Update unit test"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0518dfb6b84f2427bc3",
    "number": 4845,
    "body": "* changed future preposition to 'o' instead of nonliterary 'za'",
    "head_branch": "szentivanyi-patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0518dfb6b84f2427bc4",
    "number": 4843,
    "body": "Phantomjs is an unmaintained project. Removed spacejam from dev-dependencies as it uses phantomjs internally.\r\nDowngraded grunt-contrib-jshint version as latest version of grunt-contrib-jshint uses phantomjs.\r\nPackage-lock.json file gets updated when we run npm install test.\r\n\r\nSigned-off-by: ossdev <ossdev@puresoftware.com>",
    "head_branch": "moment",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0528dfb6b84f2427bc5",
    "number": 4841,
    "body": "Small changes but that leaves Moment.js much more pleasant and consistent with the one used in that country",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0538dfb6b84f2427bc6",
    "number": 4837,
    "body": "Fix of Issue 4323.\r\nThe main concern that I've considered that duration created with `null` value (e.g. m.duration({d: null}) will make duration invalid - before it was valid).\r\nBut it fixes [issue](https://github.com/moment/moment/issues/4323) for now.",
    "head_branch": "bugfix-4323",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0548dfb6b84f2427bc7",
    "number": 4836,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0558dfb6b84f2427bc8",
    "number": 4834,
    "body": "This might be the intended typing, but it's not accurate. No error is thrown by passing anything other than a `MomentInput` and the function still returns a `number` type as `NaN` is categorised as a `number`. Either the implementation needs to change such that this throws without a `MomentInput` or this typing needs to change, as `Nan` is a valid return value.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0568dfb6b84f2427bc9",
    "number": 4832,
    "body": "Have added strict parsing tests to all locales test files. Most are running ok, but the following are failing:\r\n\r\n- ar (all strict parsing tests fail)\r\n- ar-ly (all strict parsing tests fail)\r\n- bo (only 'MMM', only month 1 (jan))\r\n- fy (only 'MMM', only month 5 (may))\r\n- gu (only 'MMM', only month 12 (dec))\r\n- ka (all tests fail. Reason given in #4762)\r\n- kn (only month 9 (sep))\r\n- nl (only 'MMM', only month 5 (may))\r\n- nl-be (only 'MMM', only month 5 (may))\r\n- pl (only 'MMM', all months)\r\n- sk (only 'MMM', all months)\r\n- sl (only 'MMM', only month 5 (may))\r\n- tr (only 'MMMM' uppercase, only months 5, 11 and 12)\r\n\r\nThese tests are commented out (also removing some tests that will run fine). I suggest that we create separate issues for the failing tests and enlist help from people with knowledge of the different locales to fix these once and for all. It is hard for me to tell whether they fail because of parsing logic in moment, changes in unicode parsing or wrong test definition (or something else that I have not thought about).\r\n\r\nAt least this brings us a bit further in checking that strict parsing works for all locales.\r\n",
    "head_branch": "fix-2754-handle-strict-parse",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0578dfb6b84f2427bca",
    "number": 4829,
    "body": "Hey guys,\r\nI think that DurationInput1 doesn't works well with string.\r\n\r\nAs a proof. I tried to run the following two scrits on https://npm.runkit.com/moment\r\n\r\n```javascript\r\nvar moment = require(\"moment\")\r\n\r\n// format the current date\r\nmoment.duration(\"5\", \"seconds\").as(\"milliseconds\")\r\n```\r\n\r\nand this\r\n\r\n```javascript\r\nvar moment = require(\"moment\")\r\n\r\n// format the current date\r\nmoment.duration(5, \"seconds\").as(\"milliseconds\")\r\n```\r\n\r\nWith number we got the correct result. But with string got 0\r\n\r\n* Notice that one is `\"5\"`, and the other is `5`",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0588dfb6b84f2427bcb",
    "number": 4828,
    "body": "This fixes builds and upgrades to mitigate some vulnerabilities.\r\n\r\nfixes #4776\r\n\r\nNotes:\r\n1. Node 10 has a current issue with the Georgian locale, documented here: \r\nhttps://github.com/nodejs/node/issues/22518\r\n2. Grunt should be upgraded to 1.0 to solve some security vulnerabilities, but we have to get off some old plugins in order to do that.\r\n\r\n",
    "head_branch": "km/vulnerabilities",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[misc] Upgrade some devDeps to fix vulnerabilities  (#4828)\n\n* Upgrade some devDeps to fix vulnerabilities\r\n\r\n* Bump coveralls version\r\n\r\n* Bump nyc version\r\n\r\n* Bump down nyc version to pass tests on node 5\r\n\r\n* Force npm 3 if Travis installs npm 2\r\n\r\n* Change equalTest output to roman characters\r\n\r\n* Update package-lock\r\n\r\n* Comment out broken tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0598dfb6b84f2427bcc",
    "number": 4826,
    "body": "https://en.wikipedia.org/wiki/Iranian_calendars",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa05a8dfb6b84f2427bcd",
    "number": 4825,
    "body": "Source (in Italian): http://www.accademiadellacrusca.it/it/lingua-italiana/consulenza-linguistica/domande-risposte/larticolo-date-cifre\r\nExamples:\r\n«Today at 00:30 AM», before changes «Oggi alle 00:30», after changes «Oggi a 00:30».\r\n«Today at 01:30 AM», before changes «Oggi alle 01:30», after changes «Oggi all'01:30».\r\n«Today at 02:30 AM», before changes «Oggi alle 02:30», after changes «Oggi alle 02:30».\r\n\r\nThe hour that starts with 1 needs to have «all'{time}» instead of «alle {time}», the hour that starts with 0 needs to have «a {time}» instead of «alle {time}», all the other numbers needs to have «alle {time}».",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa05b8dfb6b84f2427bce",
    "number": 4824,
    "body": "The weekdays were in capital letters (which is grammatically incorrect).\r\n\r\nSources: (In Portuguese)\r\nhttps://www.soportugues.com.br/secoes/fono/fono24.php\r\nhttps://www.recantodasletras.com.br/gramatica/2687620 \r\nhttp://acordo-ortografico.blogspot.com/2012/10/em-portugues-atual-domingo-ou-domingo.html\r\nhttps://www.flip.pt/Duvidas-Linguisticas/Duvida-Linguistica/DID/4800\r\nhttps://www.normaculta.com.br/maiuscula/",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa05c8dfb6b84f2427bcf",
    "number": 4819,
    "body": "Fixes the setting of the wrong weekday under some locales when setting\r\nthe weekday due to converting it to the local weekday twice.\r\n\r\nFixes #3944\r\n\r\nSigned-off-by: Nikos Filippakis <aesmade@gmail.com>",
    "head_branch": "iss3944",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa05d8dfb6b84f2427bd0",
    "number": 4817,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[misc] minor typo in comments (#4817)\n\n* minor typo in comments\r\n\r\n* only update file in src/\r\n\r\n* only update file in src/"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa05e8dfb6b84f2427bd1",
    "number": 4816,
    "body": "To add source maps on the minified version of moment.js to enable debugging on production environment. \r\nReferring to issue #4186.",
    "head_branch": "fix-4186",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa05f8dfb6b84f2427bd2",
    "number": 4810,
    "body": "**Type**\r\nBug\r\n\r\n**Where?**\r\nLocale nl.js and nl-be.js\r\n\r\n**What?**\r\nThe month _april_ (April) was two times declared; before and after the month of _mei_ (May) inside monthsRegex regular expression. Next up, inside monthsStrictRegex, the order of months was wrong: april (April) comes after _maart_ (March) and not just before _augustus_ (August).\r\n",
    "head_branch": "bugfix/fix-months-locale-nl",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[locale] (nl) order months correctly in regex (#4810)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0608dfb6b84f2427bd3",
    "number": 4809,
    "body": "This allows developers to annotate variables as units of time.\r\n\r\nExample:\r\n\r\n```typescript\r\nlet unitOfTime: moment.unitOfTime.DurationConstructor = 'd';\r\n\r\n// Here some code that might change unitOfTime\r\n// ...\r\n\r\n// TypeScript can make sure `unitOfTime` will have a valid value.\r\nmoment().add(x, unitOfTime);\r\n```\r\n\r\nThe state of the TS definitions could be improved, but I wanted to keep this MR focused. There's also #3419 (locked for outsiders ATM).",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0608dfb6b84f2427bd4",
    "number": 4806,
    "body": "Fixes #4756 and retry the pull request #4763",
    "head_branch": "fix/circularDependency",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0618dfb6b84f2427bd5",
    "number": 4804,
    "body": "I discovered that the order of the computation of the end of day is resulting in:\r\n\r\n```\r\nmoment('2018-11-04T09:00:00-02:00').endOf('day').toString();\r\n// Mon Nov 05 2018 00:59:59 GMT-0200\r\n```\r\n\r\nAnd this simple change in the order of the operations results in:\r\n\r\n```\r\nmoment('2018-11-04T09:00:00-02:00').endOf('day').toString();\r\n// Sun Nov 04 2018 23:59:59 GMT-0200\r\n```\r\n\r\nIs this a good enough solution?",
    "head_branch": "fix-dst-endof",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0628dfb6b84f2427bd6",
    "number": 4801,
    "body": "Source (in Italian): http://www.accademiadellacrusca.it/it/lingua-italiana/consulenza-linguistica/domande-risposte/larticolo-date-cifre\r\nExamples:\r\n«Today at 01:30 AM», before changes «Oggi alle 01:30», after changes «Oggi all'01:30».\r\n«Today at 02:30 AM», before changes «Oggi alle 02:30», after changes «Oggi alle 02:30».\r\nThe hour that starts with 1 needs to have «all'{time}» instead of «alle {time}», all the other numbers needs to have «alle {time}».",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0638dfb6b84f2427bd7",
    "number": 4797,
    "body": "Reference to #3667",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0648dfb6b84f2427bd8",
    "number": 4793,
    "body": "It is as awesome as it sounds",
    "head_branch": "myawesomefeature",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0658dfb6b84f2427bd9",
    "number": 4787,
    "body": "I updated duration.milliseconds() to truncate partial milliseconds and return an integer to fix issue https://github.com/moment/moment/issues/4649 while allowing duration.asMilliseconds() to still return a non-integer number.\r\n\r\nAs I was adding test cases for it, I noticed that some of the calculations were incorrect due to javascript floating point math problems. See: https://github.com/moment/moment/issues/2978 and https://github.com/moment/moment/issues/1867\r\n\r\nI added a function (fpMath) to correctly perform floating point calculations, and added test cases around that to make sure everything is behaving as expected. I did not have to modify any existing test cases, so this should not negatively affect any existing functionality.\r\n\r\nI only modified files in /src/ and all the tests are passing, but I wasn't sure if I need to also make the changes to /moment.js also or if that file gets built from src somehow.",
    "head_branch": "partialMillis",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0668dfb6b84f2427bda",
    "number": 4786,
    "body": "Hi, I debug and solved the issue #4783. Now it is possible to do \r\n`var deLocaleData = moment();` \r\n`deLocaleData.locale('de');`\r\n`deLocaleData.localeData().weekdays(true) // --> ['Montag', 'Dienstag', 'Mittwoch', 'Donnerstag', 'Freitag', 'Samstag', 'Sonntag']`\r\n`deLocaleData.localeData().weekdays() // --> ['Sonntag', 'Montag', 'Dienstag', 'Mittwoch', 'Donnerstag', 'Freitag', 'Samstag']`\r\n\r\nHopes this helps out! Bye ",
    "head_branch": "issue-#4783",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0678dfb6b84f2427bdb",
    "number": 4771,
    "body": "In Czech, it is possible to use also declined form of the month name instead of the nominative case.\r\nThis commit adds those declined names of the months.\r\n\r\n@radekdostal @marxsk @petrbela - please verify this patch as locales have to be verified by native speakers.\r\n\r\nThis PR is meant to replace solution suggested in https://github.com/moment/moment/pull/4765 (and agreed with @marxsk in https://github.com/moment/moment/pull/4765#issuecomment-419863315)\r\n\r\n*Discussion:*\r\nPro of this solution is that is it easier to understand because plain regexes or their arrays are used instead of anonymous function.\r\nCon is that \"červenec\" must precede \"červen\" in the `monthsRegex` and `monthsStrictRegex` to match properly.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[locale] Extend cs locale with name of the months in genitive (#4771)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0688dfb6b84f2427bdc",
    "number": 4768,
    "body": "",
    "head_branch": "typos",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[misc] Fix typo in pa-in locale (#4768)\n\n* Fix typos.\r\n\r\n* Only touch src/ file"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0698dfb6b84f2427bdd",
    "number": 4766,
    "body": "Short version for month is THG\r\n\r\n@bangnk ",
    "head_branch": "srb/fix-locale-vi",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[locale] vi: Improve short months (#4766)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa06a8dfb6b84f2427bde",
    "number": 4765,
    "body": "In Czech, it is possible to use also declined form of the month name instead of the nominative case.\r\nThis commit adds those declined names of the months.\r\n\r\n@radekdostal @saxicek - please verify this patch as locales have to be verified by native speakers.",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa06b8dfb6b84f2427bdf",
    "number": 4763,
    "body": "To prevent circular dependency issue in some situations, this returns a new function instead of the referenced function from `get-set.js`\r\n\r\nFixes #4756 ",
    "head_branch": "fix-es-module-circular-dep-issue",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa06c8dfb6b84f2427be0",
    "number": 4760,
    "body": "Google Chrome is marking http websites as insecure starting from July 2018\r\n\r\nhttps://momentjs.com as well as https://codeofmatt.com support https, so I don't see any reasons not to switch :)",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa06c8dfb6b84f2427be1",
    "number": 4746,
    "body": "Added weeksInWeekYear to return the number of week in a given year. This uses the weekYear() and not year().\r\n[Issue Reference](https://github.com/moment/moment/issues/3942)",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa06d8dfb6b84f2427be2",
    "number": 4745,
    "body": "'hasOwnProp' imported,but it wasn't used;",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa06e8dfb6b84f2427be3",
    "number": 4742,
    "body": "Fixes incorrect date format explained in #4740\r\n\r\nfixes #4740",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[locale] sr-cyrl: Improve L* formats (#4742)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa06f8dfb6b84f2427be4",
    "number": 4741,
    "body": "Fixes incorrect date format explained in #4740",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0708dfb6b84f2427be5",
    "number": 4736,
    "body": "Based on mentioned supported methods in docs example here: \r\n\r\n<img width=\"769\" alt=\"screen shot 2018-08-17 at 13 13 47\" src=\"https://user-images.githubusercontent.com/4658636/44263475-6bbc7980-a21f-11e8-8670-78d6c9222419.png\">\r\n\r\nhttps://momentjs.com/docs/#/query/is-between/ .  **isBettween** can contains **granularity** value **null**. But this is not mentioned in d.ts file so after adding null as possible value below example will work in typescript as it is. \r\n\r\n`moment('2016-10-30').isBetween('2016-10-30', '2016-12-30', null, '()'); //false\r\n`\r\n\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0718dfb6b84f2427be6",
    "number": 4719,
    "body": "Comparing last week of year N and first week of year N+1 produced wrong result",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0728dfb6b84f2427be7",
    "number": 4718,
    "body": "isValid => null already done in https://github.com/moment/moment/blob/master/src/lib/moment/format.js#L13",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0738dfb6b84f2427be8",
    "number": 4717,
    "body": "this resolves both #3980 & #3029 covering all end of month diff edge cases\r\nhere is [codepen](https://codepen.io/asenousy/pen/NBgoOz) for bugs fixed\r\n\r\nthis is my first ever pull request :) so please let me know if I need to adjust anything, thanks",
    "head_branch": "end-of-month-diff-bugs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0748dfb6b84f2427be9",
    "number": 4701,
    "body": "Meridem is not transalted to turkish.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[locale] tr: Add meridiem support (#4701)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0758dfb6b84f2427bea",
    "number": 4700,
    "body": "Use the ISO WeekYear `GGGG` in HTML5_FMT.WEEK constant.\r\n\r\nUpdated test cases for the formatting constants to use a date/time that fails with the old `YYYY` format, to prevent regressions.\r\n\r\nFixes #4698 \r\nFixes #4833 ",
    "head_branch": "fix/4698",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[bugfix] Fix #4698: Use ISO WeekYear for HTML5_FMT.WEEK (#4700)\n\n* [bugfix] Fix #4698: Use ISO WeekYear for HTML5_FMT.WEEK\r\n\r\n* [bugfix] Fix #4698: Added regression tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0768dfb6b84f2427beb",
    "number": 4697,
    "body": "પેહલા-> પહેલા.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[locale] gu: Improve past relativeTime (#4697)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0778dfb6b84f2427bec",
    "number": 4695,
    "body": "see `future-other` section of https://www.unicode.org/cldr/charts/33/by_type/date_&_time.fields.html",
    "head_branch": "locale-zh-cn-relative-time-future",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0788dfb6b84f2427bed",
    "number": 4688,
    "body": "create /src/locale/kab.js",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0798dfb6b84f2427bee",
    "number": 4682,
    "body": "Fixed relativeTimes issues described in issue #4609.",
    "head_branch": "FO-RELATIVE-TIME-FIX-4609",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[locale] fo: Fixed relativeTimes for m and M (#4609) (#4682)\n\n* [locale] fo: Fixed relativeTimes for m and M (#4609)\r\n\r\n* Add new Faroese locale author\r\n\r\n* Revert locale/* edit from commit b51d421."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa07a8dfb6b84f2427bef",
    "number": 4681,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[misc] add typings for duration.isValid() (#4681)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa07b8dfb6b84f2427bf0",
    "number": 4677,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa07c8dfb6b84f2427bf1",
    "number": 4674,
    "body": "Would you be up for adding a badge that shows how SemVer compliant / bug free new releases are? I was looking through the data we gather at Dependabot and realised we could put one together, so threw together the below. We've done a lot of moment.js upgrades already!\r\n\r\n[![SemVer Compatibility](https://api.dependabot.com/badges/compatibility_score?dependency-name=moment&package-manager=npm_and_yarn&version-scheme=semver)](https://dependabot.com/compatibility-score.html?dependency-name=moment&package-manager=npm_and_yarn&version-scheme=semver)\r\n\r\nIf you click through then there's a description of how it's calculated - basically it takes all of the relevant updates Dependabot has done for projects that use moment and checks what percentage of the time specs pass on the upgrade PR.\r\n\r\nThe score is slightly lower than 100% because some projects have flaky specs, but I'm working on filtering them out from the data, too :octocat:.",
    "head_branch": "add-semver-badge",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[misc] Add SemVer compatibility badge to README (#4674)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa07d8dfb6b84f2427bf2",
    "number": 4671,
    "body": "Hi, I'm not absolutely certain about this change, but based on what I've read, I think I'm right...\r\n\r\nThe docs show:\r\nhttp://momentjs.com/docs/#/i18n/\r\n```js\r\n    week : {\r\n        dow : 1, // Monday is the first day of the week.\r\n        doy : 4  // The week that contains Jan 4th is the first week of the year.\r\n    }\r\n```\r\n\r\nwhich, afaict means that the `4` as value for `doy` should correspond to the commented `Jan 4th`.\r\n\r\nA significant portion of the locales get this right.\r\nSadly, the file that feels like a template doesn't match the documentation and a handful of locales kept that.\r\n\r\nIf you agree that the template like file is incorrect, I'm happy to `@ mention` the locale owners to get confirmation about fixing their comments. OTOH, if I'm absolutely wrong about what the comment means, I'd sooner not disturb your localizers.",
    "head_branch": "doy-fix-comment",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[locale] fix comment about \"doy\" (#4671)\n\n* fix date of year comments\r\n\r\n* [locale] fix date of year comments"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa07e8dfb6b84f2427bf3",
    "number": 4666,
    "body": "Relates #3029\r\nedit the diff function to use the Ceil instead of the floor so that the difference between months return the correct value. ",
    "head_branch": "monthDifference",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa07f8dfb6b84f2427bf4",
    "number": 4665,
    "body": "Fixes #4664",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0808dfb6b84f2427bf5",
    "number": 4663,
    "body": "Fixes #4659 ",
    "head_branch": "fix/4659",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[misc] Remove unnecessary ternary spotted by Coverity (#4663)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0818dfb6b84f2427bf6",
    "number": 4661,
    "body": "",
    "head_branch": "marwahaha-issue-templates",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[misc] Update issue templates (#4661)\n\n* Update issue templates\r\n\r\n* Remove old issue template"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0818dfb6b84f2427bf7",
    "number": 4650,
    "body": "Improve mk translation",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0828dfb6b84f2427bf8",
    "number": 4648,
    "body": "This will fix the builds.",
    "head_branch": "fix-load-grunt-tasks",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[misc] Fix grunt devDep to 3.5.2 (#4648)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0838dfb6b84f2427bf9",
    "number": 4646,
    "body": "- adds tests for module:none in typing-tests\r\n- move existing typing-tests to typing-tests/commonjs",
    "head_branch": "fix-typings-for-no-module",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0848dfb6b84f2427bfa",
    "number": 4640,
    "body": "improve mk translation",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0858dfb6b84f2427bfb",
    "number": 4636,
    "body": "#3263 ",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0868dfb6b84f2427bfc",
    "number": 4634,
    "body": "You can set `dow` without setting `doy`, so the type should reflect that",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[misc] Fix type of WeekSpec (#4634)\n\n* Fix \"the the\" typo in test (#4578)\r\n\r\n* [locale] Fix #4568: Insert punjabi for \"next\" (#4583)\r\n\r\n* Fix type of WeekSpec\r\n\r\nYou can set `dow` without setting `doy`, so the type should reflect that"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0878dfb6b84f2427bfd",
    "number": 4626,
    "body": "Closes #4012",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0888dfb6b84f2427bfe",
    "number": 4624,
    "body": "This is a pull request to add the Occitan language in its Standard/General form.\r\nMainly based on the Lengadocian dialect.",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0898dfb6b84f2427bff",
    "number": 4622,
    "body": "In germany the week starts on monday instead of sunday!\r\nIf you would ask anyone on the street ;)",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa08a8dfb6b84f2427c00",
    "number": 4620,
    "body": "Current translation is never used in Norwegian, making it relevant/useful to use \"weekdaysShort\".",
    "head_branch": "nb-locale",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa08b8dfb6b84f2427c01",
    "number": 4617,
    "body": "I don't know Italian, but this is what my colleague said:\r\n\r\n> In Italian, \"in\" followed by a time expression is translated with \"tra\", not with \"in\". \r\n> There's no difference between \"in a day\" and \"in 1 day\" if they are both referred to future plans, they should both be translated with \"tra\" in Italian.\r\n> \"In\" in Italian refers to locations. It can also refer to time expressions, but not in the future.\r\n> \r\n> The current translation is indeed a mistake and it should be changed to\r\n> \r\n> tra un giorno\r\n> \r\n> See more info about the use of \"in\" and \"tra\" in Italian here (not a complete grammar, of course, but it can give you the idea):\r\n> http://www.italianlanguageguide.com/grammar/prepositions/",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[locale] it: Improve future relative time (#4617)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa08c8dfb6b84f2427c02",
    "number": 4616,
    "body": "It's seems (cf https://momentjs.com/docs/#/query/is-between/) that the third argument of isBetween() can be **null** but it's was not specified in the type definition.\r\n\r\nThis pull request allow StartOf to be nullable.",
    "head_branch": "typescript-startof",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa08d8dfb6b84f2427c03",
    "number": 4615,
    "body": "This allows to add/remove centuries.",
    "head_branch": "feat/centuries",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa08e8dfb6b84f2427c04",
    "number": 4613,
    "body": "Added `century` unit for use in add/subtract operations.\r\nSimilar to the quarter unit but there is no support yet for get/set.",
    "head_branch": "features/century",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa08f8dfb6b84f2427c05",
    "number": 4612,
    "body": "- вчора -> учора (both mean \"yesterday\" and are orthographic variants of the same word; \"вчора\" is used only in the middle of a sentence if the preceding word ends in a vowel)\r\n- fix parsing dates in general and ordinal days of month in particular\r\n- standard month abbreviations (\"берез.\", \"листоп.\", etc.)",
    "head_branch": "ukrainian-locale",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0908dfb6b84f2427c06",
    "number": 4611,
    "body": "Closes #2469",
    "head_branch": "parse-without-fallback-2469",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0918dfb6b84f2427c07",
    "number": 4610,
    "body": "All tests using Feb 29th are labelled as Feb 28th.",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[misc] Typo in test (#4610)\n\nAll tests using Feb 29th are labelled as Feb 28th."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0928dfb6b84f2427c08",
    "number": 4608,
    "body": "\"module\" is the new field name for specifying an ESM entry\r\npoint that the various bundlers have coordinated around",
    "head_branch": "side-effects",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0938dfb6b84f2427c09",
    "number": 4602,
    "body": "#4440 \r\nFeature Request: More ways to format timezone display",
    "head_branch": "4440",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0948dfb6b84f2427c0a",
    "number": 4601,
    "body": "pull request with complete feature",
    "head_branch": "4440",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0958dfb6b84f2427c0b",
    "number": 4599,
    "body": "## Description\r\n### Abstract\r\nThis PR implements new feature which is proposed in #4591.\r\nI intended to implement this feature to format or parse Japanese date with era name, but this feature is carefully designed so that can be used in any other country.\r\n\r\nHistorically, there are more than 200 eras in Japan.\r\nBut before 6th Meiji era, our ancestors had been using Chinese lunar calendar.\r\nAnd I think it is inappropriate to represent these historical dates in Gregorian solar calendar dates.\r\nSo I define only 4 eras and 2 Christian eras in Japanese locale.\r\n\r\n**Note:** Japanese Meiji government had decided to use Gregorian solar calendar system since Jan 1st, Meiji 6 (Jan 1st 1873).\r\n\r\nCurrently there is only few country which is using era names, but I think this feature also can be used in Taiwan or some Buddhism country which is using Gregorian calendar.\r\n\r\nThanks and regards.\r\n\r\n### Related Issue\r\n* #3553 How to convert Gregorian year to the Japanese calendar year ?\r\n* #2586 To support the Taiwan year format\r\n* #3262 Add BE Year (BB, BBBB)\r\n* #874 Buddist Calendar / Thai solar Calendar support with format code BB, BBBB\r\n\r\n### Format\r\n|                           | Abbr\t       | Era Name  | Narrow Name | Ordinal Year  | Year of Era              |\r\n|---------------------------|--------------|-----------|-------------|---------------|--------------------------|\r\n| **MOMENT**                | N, NN, NNN   | NNNN      | NNNNN       | yo            | y, yy, yyy, yyyy         |\r\n| LDML                      | G, GG, GGG   | GGGG      | GGGGG       | ?             | y, yy, yyy, yyyy         |\r\n| Single Unix Specification\t| n/a          | %EC       | n/a         | %EY           | %Ey, %02Ey, %03Ey, %04Ey |\r\n| Java                      | G, GG, GGG   | GGGG      | GGGGG       | yyyy          | y, yy, yyy               |\r\n| Excel                     | g            | ggg, gggg | gg          | n/a           | e, ee                    |\r\n| LibreOffice               | G            | GGG       | GG          | n/a           | e, ee                    |\r\n\r\n### Example\r\n#### Locale (en)\r\n```javascript\r\n> var moment = require('moment');\r\n> \r\n> moment.loale('en');\r\n> moment('1989-01-08').format('y N');\r\n'1989 AC'\r\n> moment([-468, 1, 1]).format('y N');\r\n'469 BC'\r\n```\r\n\r\n#### Locale (ja)\r\n```javascript\r\n> var moment = require('moment');\r\n> \r\n> moment.loale('ja');\r\n> moment('1989-01-07').format('NNNNyoM月D日');\r\n'昭和64年1月7日'\r\n> moment('1989-01-08').format('NNNNyoM月D日');\r\n'平成元年1月8日'\r\n> moment('1989-01-07').format('Nyy.MM.DD');\r\n'S64.01.07'\r\n> moment('1989-01-08').format('Nyy.MM.DD');\r\n'H01.01.08'\r\n```",
    "head_branch": "feature/era_names",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0968dfb6b84f2427c0c",
    "number": 4597,
    "body": "Feature Request: More ways to format timezone display #4440",
    "head_branch": "4440",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0968dfb6b84f2427c0d",
    "number": 4590,
    "body": "@baryon \r\n\r\nI just fixed month names.\r\n\r\n### Related Information\r\nhttp://cldr.unicode.org/translation/date-time-patterns",
    "head_branch": "hotfix/japanese_months",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[locale] ja: fix long month names (#4590)\n\n* Fix \"the the\" typo in test (#4578)\r\n\r\n* [locale] ja: fix long month names"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0978dfb6b84f2427c0e",
    "number": 4589,
    "body": "@iJaniashvili @torniker ",
    "head_branch": "fix-ka-relativeTime",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0988dfb6b84f2427c0f",
    "number": 4588,
    "body": "Fixes this issue: https://github.com/moment/moment/issues/4585\r\n\r\nJust moved a variable declaration down to avoid reference error after serialization/deserialization of locale object. No native speaker checks needed.",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0998dfb6b84f2427c10",
    "number": 4583,
    "body": "Fixes #4568 ",
    "head_branch": "fix/4568",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[locale] Fix #4568: Insert punjabi for \"next\" (#4583)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa09a8dfb6b84f2427c11",
    "number": 4578,
    "body": "Correct a small typo 😄 ",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix \"the the\" typo in test (#4578)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa09b8dfb6b84f2427c12",
    "number": 4577,
    "body": "Set all properties of the duration to NaN when NaN is passed, otherwise it will set everything to 0, make it invalid, but if you clone this it will make it a valid duration which is incorrect.",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa09c8dfb6b84f2427c13",
    "number": 4576,
    "body": "NaN passes the isNumber check which then uses this to set valid and makes it false, but milliseconds gets set to 0 so when cloned it becomes valid. This will make NaN fail the number check which makes it a valid duration just like it does when undefined or null is passed in.",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa09d8dfb6b84f2427c14",
    "number": 4575,
    "body": "NaN passes the isNumber check which then uses this to set valid and makes it false, but milliseconds gets set to 0 so when cloned it becomes valid. This will make NaN fail the number check which makes it a valid duration just like it does when undefined or null is passed in. ",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa09e8dfb6b84f2427c15",
    "number": 4570,
    "body": "Added the following re: issue #4514 :\r\n\r\n- Weeks as a threshold option\r\n- Default thresholds: d = 6, w = 4\r\n- Changed thresholds from days to months, to days to weeks\r\n- Added threshold from weeks to months\r\n- Updated tests to reflect these additions \r\n- Updates to documentation in a [separate pull request](https://github.com/moment/momentjs.com/pull/507).",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa09f8dfb6b84f2427c16",
    "number": 4567,
    "body": "Corrected Punjabi mistakes.\r\n\r\n_Avoid mis-typed commit name._ :sweat_smile: \r\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0a08dfb6b84f2427c17",
    "number": 4566,
    "body": "This commit includes the Punjabi language corrections.\r\n\r\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0a18dfb6b84f2427c18",
    "number": 4564,
    "body": "Fixes #4547 - trim() isn't available in old IE / compatibility modes, and moment docs still claim support for IE 8.",
    "head_branch": "fix/4547",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[bugfix] Avoid using trim() (#4564)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0a28dfb6b84f2427c19",
    "number": 4563,
    "body": "Fixes #4518 ",
    "head_branch": "fix/4518",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[feature] Fix #4518: Add support to add/subtract ISO weeks (#4563)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0a38dfb6b84f2427c1a",
    "number": 4561,
    "body": "Fixed #4476 ",
    "head_branch": "fix/4476",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0a48dfb6b84f2427c1b",
    "number": 4560,
    "body": "see #2940 ",
    "head_branch": "km/es-invalid",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[locale] es: Add es translation for invalidDate (#4560)\n\n* Add es translation for invalidDate\r\n\r\n* Fix lint"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0a58dfb6b84f2427c1c",
    "number": 4558,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[locale] Capitalization pt-br month names and tests (#4558)\n\n* Updated capitalization of months\r\n\r\n* Updated capitalization of month names"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0a68dfb6b84f2427c1d",
    "number": 4557,
    "body": "",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[locale] Capitalization of pt month names (#4557)\n\n* Updated pt-br tests\r\n\r\n* Update pt-br.js\r\n\r\n* Update pt-br.js\r\n\r\n* Updated PT tests\r\n\r\n* Updated pt-js month names capitalization"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0a78dfb6b84f2427c1e",
    "number": 4556,
    "body": "",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0a88dfb6b84f2427c1f",
    "number": 4555,
    "body": "Updated capitalization of month names and short names.",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0a88dfb6b84f2427c20",
    "number": 4554,
    "body": "Updated capitalization of the month names, and month short names",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0a98dfb6b84f2427c21",
    "number": 4553,
    "body": "fixes https://github.com/moment/moment/issues/4066\r\n\r\nThis adds `Locale#weekdays(true)` to sort weekdays by locale (as `moment.weekdays(true)` does if it is the current locale). Same for `#weekdaysShort`, `#weekdaysMin`. \r\n\r\nI added some tests for all locales, and a concrete one for `en-au`.\r\nExample:\r\n```\r\nmoment.localeData('en-gb').weekdays(true) \r\n```",
    "head_branch": "km/locale-sort-weekdays",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[feature] Add localeSort param to Locale weekday methods (#4553)\n\n* Add localeSort param to Locale weekday methods\r\n\r\n* Add concrete test case"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0aa8dfb6b84f2427c22",
    "number": 4551,
    "body": "change PRIOROITY to PRIORITY",
    "head_branch": "fix-typo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[misc] fix typo in comment for day-of-month.js (#4551)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0ab8dfb6b84f2427c23",
    "number": 4548,
    "body": "Hi!\r\nI just re-corrected the pa(Punjabi) file, located in **locale**.\r\n\r\n> Feel free to ask anything esp. about Punjabi.\r\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0ac8dfb6b84f2427c24",
    "number": 4546,
    "body": "Supersedes #4475.\r\n\r\nReplaces JSHint and JSCS with ESLint and Prettier for code linting and code formatting respectively.",
    "head_branch": "eslint-prettier",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0ad8dfb6b84f2427c25",
    "number": 4544,
    "body": "@kcthota does it look ok?",
    "head_branch": "km/te-typo",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[locale] te: Fix typo in july (#4544)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0ae8dfb6b84f2427c26",
    "number": 4539,
    "body": "Added automatic generation of immutable methods on proto so e.g. in addition to startOf() there is startOfImmu(), isoWeek() has corresponding isoWeekImmu() etc. Each clones the original object then runs original method on it. This way user has a choice to use mutable method as in original code, or use immutable version that clones and modifies new object.\r\n\r\n`const aaa=moment('2016-01-01T00:00:00+02:00');`\r\n`const bbb=aaa.startOf('day');`\r\n`console.log(aaa===bbb); // true`\r\n`console.log(aaa.format('DD/MM/YY HH:mma')); // 01/01/16 00:00am`\r\n`console.log(bbb.format('DD/MM/YY HH:mma')); // 01/01/16 00:00am`\r\n\r\n`const ccc=moment('2016-01-01T00:00:00+02:00');`\r\n`const ddd=ccc.startOfImmu('day');`\r\n`console.log(ccc===ddd); // false`\r\n`console.log(ccc.format('DD/MM/YY HH:mma')); // 01/01/16 09:00am`\r\n`console.log(ddd.format('DD/MM/YY HH:mma')); // 01/01/16 00:00am`",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0af8dfb6b84f2427c27",
    "number": 4538,
    "body": "[feature] Added automatic generation of immutable methods on proto so e.g. in addition to startOf() there is startOfImmu(), isoWeek() has corresponding isoWeekImmu() etc. Each clones the original object then runs original method on it. This way user has a choice to use mutable method as in original code, or use immutable version that clones and modifies new object.",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0b08dfb6b84f2427c28",
    "number": 4537,
    "body": "Added automatic generation of immutable methods on proto so e.g. in addition to startOf() there is startOfImmu(), isoWeek() has corresponding isoWeekImmu() etc. Each  clones the original object then runs original method on it. This way user has a choice to use mutable method as in original code, or use immutable version that clones and modifies new object.",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0b18dfb6b84f2427c29",
    "number": 4534,
    "body": "EDIT: I see now that after properly going through, this \"fix\" in fact breaks several other dependencies.  This pull request should either be closed or modified to fix that persisting issue in some way.  Totally my bad, and I apologize for wasting anyone's time.\r\n\r\nThis should fix the issue addressed in #4505 to fix the relative path to the locale folder, which was previously incorrectly referenced as \"./locale\" rather than being the parent folder of locales.js, \"../locale\".\r\n\r\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0b28dfb6b84f2427c2a",
    "number": 4533,
    "body": "This should resolve issue #4203.\r\n\r\nI used the search and replace tool of vscode to do this, with these two regexes:\r\n```regex\r\nimport (.*?) ('|\")(.*?)(\\.js)('|\")\r\n\r\nimport $1 $2$3$5\r\n```\r\n\r\n```regex\r\nimport (.*?) ('|\")(.*?)('|\")\r\n\r\nimport $1 $2$3.js$4\r\n```",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0b38dfb6b84f2427c2b",
    "number": 4528,
    "body": "fixes https://github.com/moment/moment/issues/4502\r\n@demidov91, there was wrong regexp (I assume `be` localisation was copied from `ru` and `Вв` was not changed by `Уу`) and that caused wrong output of calendar() function (Неправильно брались падежи)",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[locale] Fix wrong calendar() output in 'be' localisation (#4528)\n\n* Fix wrong calendar() output in 'be' localisation\r\n\r\n* Add one specific belarusian letter\r\n\r\n* Add a test\r\n\r\n* Fix linter errors"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0b48dfb6b84f2427c2c",
    "number": 4527,
    "body": "in place of #4520 and #4521 and #4029\r\n\r\n@javid-yagubali thanks for the contribution!\r\n\r\n@topchiyev - what do you think of these changes ? ",
    "head_branch": "km/javid-fixes",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[locale] az: Fix typo in seconds (#4527)\n\n* [locale] az: Improve relative time for seconds\r\n\r\n in src/test/locale/az.js\r\n\r\n* [locale] az: Improve relative time for seconds\r\n\r\nI hope this time I'm doing it right"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0b58dfb6b84f2427c2d",
    "number": 4525,
    "body": "This should fix build errors in Node 4.\r\n* qunit now is node-qunit\r\n* removes a circular dependency by moving a function from qunit.js to qunit-locale.js\r\n* expect -> assert.expect\r\n* update syntax for qunit\r\n* check in package-lock.json",
    "head_branch": "km/update-qunit",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[misc] upgrade qunit to latest (#4525)\n\n* Reduce number of changes\r\n\r\n* Remove QUnit as global"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0b68dfb6b84f2427c2e",
    "number": 4521,
    "body": "in src/locale/az.js\r\n\r\nP.S. I hope this time I'm doing it right ",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0b78dfb6b84f2427c2f",
    "number": 4520,
    "body": " in src/test/locale/az.js",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0b88dfb6b84f2427c30",
    "number": 4515,
    "body": "when date is invalid the method inBetween with inclusivity != '()' returns always true.",
    "head_branch": "lucenera75/fix-invalid-date-inclusive-between",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0b98dfb6b84f2427c31",
    "number": 4509,
    "body": "Handled undefined casses and warning messages.",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0ba8dfb6b84f2427c32",
    "number": 4495,
    "body": "Resolved issue #4494 ",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[bugfix] Added HTML5_FMT to moment.d.ts (#4495)\n\n* Added HTML5_FMT to moment.d.ts\r\n\r\n* Update Moment.d.ts styling for HTML5_FMT"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0bb8dfb6b84f2427c33",
    "number": 4492,
    "body": "Fixed mistakes in punctuation",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[locale] ru: added a comma to the calendar displays time (#4492)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0bb8dfb6b84f2427c34",
    "number": 4491,
    "body": "Added a comma to the nextWeek and lastWeek calendar displays time.",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0bc8dfb6b84f2427c35",
    "number": 4478,
    "body": "@ichernev - will this cause any issues?\r\n\r\nI changed it so `grunt update-locales` will work in the [momentjs.com repo](https://github.com/moment/momentjs.com) .",
    "head_branch": "km/ug-cn-abbr",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[locale] ug-cn: put abbr in lowercase (#4478)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0bd8dfb6b84f2427c36",
    "number": 4475,
    "body": "I understood from [#3943](https://github.com/moment/moment/pull/3943#issuecomment-299631525) and [#3217](https://github.com/moment/moment/pull/3217#issue-72865760) that there was a plan to replace `JSCS` by `ESLint`, since development of `JSCS` has stopped. This PR performs that migration. The `JSCS` rules have been replaced by their (closest) equivalent in `ESLint`.\r\n\r\nWhen running the new lint task I encountered quite some linting errors, despite the rules being equivalent. I went over the errors one by one, and concluded that ESLint is just much better at parsing and identifying the javascript styling. `JSCS` applied its indentation requirement incorrectly for example, or did not require the same object curly bracket spacing for `import` statements. All the errors have been fixed.\r\n\r\nMy suggestion would be to migrate from `JSHint` to `ESLint` as well, and to furthermore extend the `ESLint` config with the `eslint:recommended` rules, which are good at identifying common causes of bugs and errors.",
    "head_branch": "eslint",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0be8dfb6b84f2427c37",
    "number": 4470,
    "body": "related to issue https://github.com/moment/moment/issues/3918\r\n",
    "head_branch": "support-YYYY-ISO8601",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[feature] add support for [YYYY] as ISO8601 format (#4470)\n\n* [feature] add support for [YYYY] as ISO8601 format (issue #3918) (#4470)\r\n\r\n* [feature] add support for [YYYY] as ISO8601 format (issue #3918) (#4470)\r\n\r\nrevert support for extended years [+/-YYYYYY], it needs more discussion and work"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0bf8dfb6b84f2427c38",
    "number": 4466,
    "body": "fixes #4465",
    "head_branch": "km/grunt-test-browser",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[misc] Fix lazy-load test (#4466)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0c08dfb6b84f2427c39",
    "number": 4463,
    "body": "👋😃\r\n\r\nNoticed that your \"npm\" badge and \"downloads\" badge currently both point to the same page on npmjs.org  \r\n\r\nI was wondering if you might prefer having the download badge point to a download chart instead?\r\n\r\nIf not, feel free to close and apologies for the drive-by PR 😄",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[misc] Update downloads badge to point to graph of downloads (#4463)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0c18dfb6b84f2427c3a",
    "number": 4458,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[locale] Georgian - fixed incorrectly used word (#4458)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0c28dfb6b84f2427c3b",
    "number": 4457,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0c38dfb6b84f2427c3c",
    "number": 4456,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0c48dfb6b84f2427c3d",
    "number": 4455,
    "body": "Adds a badge showing the number of people helping this repo on CodeTriage.\n\n[![Open Source Helpers](https://www.codetriage.com/moment/moment/badges/users.svg)](https://www.codetriage.com/moment/moment)\n\n\n## What is CodeTriage?\n\nCodeTriage is an Open Source app that is designed to make contributing to Open Source projects easier. It works by sending subscribers a few open issues in their inbox. If subscribers get busy, there is an algorithm that backs off issue load so they do not get overwhelmed\n\n[Read more about the CodeTriage project](https://www.codetriage.com/what).\n\n## Why am I getting this PR?\n\nYour project was picked by the human, @schneems. They selected it from the projects submitted to https://www.codetriage.com and hand edited the PR. How did your project get added to [CodeTriage](https://www.codetriage.com/what)? Roughly about 1 year ago, [sarupbanskota](https://github.com/sarupbanskota) added this project to CodeTriage in order to start contributing. Since then, 34 people have subscribed to help this repo.\n\n## What does adding a badge accomplish?\n\nAdding a badge invites people to help contribute to your project. It also lets developers know that others are invested in the longterm success and maintainability of the project.\n\nYou can see an example of a CodeTriage badge on these popular OSS READMEs:\n\n- [![Email clients like GMAIL do not render SVG images](https://www.codetriage.com/rails/rails/badges/users.svg)](https://www.codetriage.com/rails/rails) https://github.com/rails/rails\n- [![Email clients like GMAIL do not render SVG images](https://www.codetriage.com/crystal-lang/crystal/badges/users.svg)](https://www.codetriage.com/crystal-lang/crystal) https://github.com/crystal-lang/crystal\n\n## Have a question or comment?\n\nWhile I am a bot, this PR was manually reviewed and monitored by a human - @schneems. My job is writing commit messages and handling PR logistics.\n\nIf you have any questions, you can reply back to this PR and they will be answered by @schneems. If you do not want a badge right now, no worries, close the PR, you will not hear from me again.\n\nThanks for making your project Open Source! Any feedback is greatly appreciated.",
    "head_branch": "codetriage-badge",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[misc] Add CodeTriage badge to moment/moment (#4455)\n\nAdds a badge showing the number of people helping this repo on CodeTriage.\r\n\r\n[![Open Source Helpers](https://www.codetriage.com/moment/moment/badges/users.svg)](https://www.codetriage.com/moment/moment)\r\n\r\n## What is CodeTriage?\r\n\r\nCodeTriage is an Open Source app that is designed to make contributing to Open Source projects easier. It works by sending subscribers a few open issues in their inbox. If subscribers get busy, there is an algorithm that backs off issue load so they do not get overwhelmed\r\n\r\n[Read more about the CodeTriage project](https://www.codetriage.com/what).\r\n\r\n## Why am I getting this PR?\r\n\r\nYour project was picked by the human, @schneems. They selected it from the projects submitted to https://www.codetriage.com and hand edited the PR. How did your project get added to [CodeTriage](https://www.codetriage.com/what)? Roughly about 1 year ago, [sarupbanskota](https://github.com/sarupbanskota) added this project to CodeTriage in order to start contributing. Since then, 34 people have subscribed to help this repo.\r\n\r\n## What does adding a badge accomplish?\r\n\r\nAdding a badge invites people to help contribute to your project. It also lets developers know that others are invested in the longterm success and maintainability of the project.\r\n\r\nYou can see an example of a CodeTriage badge on these popular OSS READMEs:\r\n\r\n- [![Email clients like GMAIL do not render SVG images](https://www.codetriage.com/rails/rails/badges/users.svg)](https://www.codetriage.com/rails/rails) https://github.com/rails/rails\r\n- [![Email clients like GMAIL do not render SVG images](https://www.codetriage.com/crystal-lang/crystal/badges/users.svg)](https://www.codetriage.com/crystal-lang/crystal) https://github.com/crystal-lang/crystal\r\n\r\n## Have a question or comment?\r\n\r\nWhile I am a bot, this PR was manually reviewed and monitored by a human - @schneems. My job is writing commit messages and handling PR logistics.\r\n\r\nIf you have any questions, you can reply back to this PR and they will be answered by @schneems. If you do not want a badge right now, no worries, close the PR, you will not hear from me again.\r\n\r\nThanks for making your project Open Source! Any feedback is greatly appreciated."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0c58dfb6b84f2427c3e",
    "number": 4453,
    "body": "Closes #4347 \r\nThis can close #4350 too because this is that change, but with the required unit tests.",
    "head_branch": "parse-weekdays-better",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[bugfix] Treat periods as periods, not regex-anything period, for weekday parsing in strict mode. (#4453)\n\n* Treat periods in short weekdays as literal periods when in strict mode with exact parsing turned off\r\n\r\n* Add tests for the other 2 areas where periods were treated improperly, and organize the tests\r\n\r\n* Remove trailing commas\r\n\r\n* Follow styling standards"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0c68dfb6b84f2427c3f",
    "number": 4446,
    "body": "Nice to have a gender neutral codebase.",
    "head_branch": "gender-neutral-comment",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[misc] Make comment in hour.js gender neutral (#4446)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0c78dfb6b84f2427c40",
    "number": 4445,
    "body": "We have the ability to update only a single relativeTime handler, but the typescript spec doesn't allow to do so.\r\nIssue ref => https://github.com/moment/moment/issues/4438",
    "head_branch": "relative-time-type-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[bugfix] (TypeScript) allow update of a single relativeTime handler"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0c88dfb6b84f2427c41",
    "number": 4444,
    "body": "moment.js is included in a Debian package. We need to know the copyright date. I guesses it from past commits, feel free to fix it, but please include the date.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0c98dfb6b84f2427c42",
    "number": 4433,
    "body": "Previous behavior:\r\n\r\n```javascript\r\nmoment.duration(5, 'days').days();   // 5\r\nmoment.duration(5).milliseconds();   // 5\r\nmoment.duration('5', 'days').days(); // 0\r\nmoment.duration('5').milliseconds(); // 0\r\n```\r\n\r\nNew behavior:\r\n\r\n```javascript\r\nmoment.duration('5', 'days').days(); // 5\r\nmoment.duration('5').milliseconds(); // 5\r\n```\r\n\r\nThis is consistent with how similar methods allow this signature, like `moment().add('5', 'days')`",
    "head_branch": "string-input-duration",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0ca8dfb6b84f2427c43",
    "number": 4430,
    "body": "Properly add spaces between CJK characters and alphanumeric characters in calendar time format.\r\n\r\nFor @ben-lin and @hehachris\r\n此修改在 Calendar Time 顯示中，在中文字與英數字適當加入空格\r\n「下星期一12:00」->「下星期一` `12:00」\r\n「今天13:00」->「昨天` `13:00」\r\n像是日文 locale 也是相同的格式用法\r\n\r\n排版標準：[https://github.com/sparanoid/chinese-copywriting-guidelines](https://github.com/sparanoid/chinese-copywriting-guidelines)\r\n\r\n舉例來說 Facebook 也是如此顯示",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[locale] zh-tw: add spaces (#4430)\n\nProperly add spaces between CJK characters and alphanumerics character and in calendar time format."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0cb8dfb6b84f2427c44",
    "number": 4423,
    "body": "Mongolian locale contributing request.",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[new locale] Added Mongolian locale mn (#4423)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0cc8dfb6b84f2427c45",
    "number": 4420,
    "body": "",
    "head_branch": "strict-one-digit-validation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0cd8dfb6b84f2427c46",
    "number": 4418,
    "body": "",
    "head_branch": "strict-one-digit-validation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0ce8dfb6b84f2427c47",
    "number": 4417,
    "body": "Changes to `isBetween` to fix a couple of issues from #4416 and #4114 .\r\n\r\nDocumentation states that `invalid.isBetween(another, another)` should return `false`, but #4416 highlights a case where it doesn't.  This PR fixes #4416 and ensures `isBetween(..)` return `false` no matter what unit or inclusivity flags are used:\r\n```js\r\n// These should all return false:\r\ninvalid.isBetween(another, another);\r\nvalid.isBetween(invalid, another);\r\nvalid.isBetween(another, invalid);\r\n```\r\n\r\nThe conversation in #4114 highlights some examples that are incompatible with current typescript bindings.  This PR fixes the typescript binding to match example code - explicitly allowing `null` to be passed in as the `units` value, - and this now follows a faster code path to avoid cloning moments unnecessarily - i.e. fixes #4114.",
    "head_branch": "fix/4114",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[bugfix] isBetween should return false for invalid dates (#4417)\n\n* [bugfix]: isBetween should return false for invalid dates\r\n\r\n* Tweak to use void not null for TS 1.x\r\n\r\n* Add tests requested in code review"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0ce8dfb6b84f2427c48",
    "number": 4413,
    "body": "## Changed localized formats\r\n\r\n- `LLLL`: move the name of weekday \r\n- `llll`: move the name of weekday and use short format (like https://ja.wikipedia.org/)\r\n\r\n## Changed calendar format\r\n\r\n- `前週` → `先週` or omitted\r\n- `来週` → `来週` or omitted\r\n- added the logic to tell whether same week or not.\r\n\r\n`前週` is not used ordinary, and native Japanese omits `今週` often.\r\n\r\n### example\r\n\r\nIf today is 11th,\r\n \r\nSun(日曜日) | Mon(月曜日) | Tue(火曜日) | Wed(水曜日) | Thu(木曜日) | Fri(金曜日) | Sat(土曜日)\r\n-- | -- | -- | -- | -- | -- | --\r\n1 | 2 | 3 | 4 | 5 | 6 | 7\r\n8 | 9 | 10 | __11__ | 12 | 13 | 14\r\n15 | 16 | 17 | 18 | 19 | 20 | 21\r\n\r\n- `1` - `7` are \"先週\" (means \"last week\")\r\n- `8` - `14` are \"今週\" (means \"this week\")\r\n- `15` - `21` are \"来週\" (means \"next week\".)\r\n\r\n\"Last Monday\" is \"今週月曜日\", but now `moment.js` says \"前週月曜日\".\r\n\"前週月曜日\" means \"Monday of last week\", so that points to 2nd.\r\n\r\n\r\nthe original author: @baryon ",
    "head_branch": "bgpat/locale-ja",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[locale] Fix Japanese locale (#4413)\n\n* Fix calendar format for Japanese\r\n\r\n* Fix format string for Japanese"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0cf8dfb6b84f2427c49",
    "number": 4410,
    "body": "New Unit Test exemplifies issue in existing version: `weeksInISOYear` assumed that `this.year()` was equal to the moment's ISO year. This is not the case when the new year starts on a Thursday and we are checking the Wednesday (e.g. December 31, 2019 is in ISO year 2020 and ISO year 2020 has 53 weeks)\r\n\r\nThe Thursday of the week is guaranteed to be in that day's ISO week, so this fix is rather simple.\r\n\r\nCloses #3942.",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[bugfix] Use ISO Year for weeksInISOYear instead of calendar year. (#4410)\n\n* Use calendar year of day at end of week for ISO year week count\r\n\r\n* Fix ambiguously constructed test moments\r\n\r\n* Add some spacing"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0d08dfb6b84f2427c4a",
    "number": 4403,
    "body": "To enable the use of the type definitions in a non-module-based application using moment as a global variable. \r\n\r\nFor context of this statement. Search for \"UMD modules\" in this page:\r\n\r\nhttps://www.typescriptlang.org/docs/handbook/modules.html",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0d18dfb6b84f2427c4b",
    "number": 4399,
    "body": "What test should I do so my file is accepted?",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0d28dfb6b84f2427c4c",
    "number": 4395,
    "body": "Correct Hour Plural in Konkani and add a test",
    "head_branch": "gomHourPlural",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[locale] Correct Hour Plural in Konkani and add a test (#4395)\n\n* Correct Hour Plural\r\n\r\n* Add test for 'hours ago'"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0d38dfb6b84f2427c4d",
    "number": 4392,
    "body": "> Change weekdaysShort and weekdaysMin as discussed in #4353 \r\n> Translate AM/PM",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[locale] Cambodian Locale: Translate AM/PM, change weekdaysShort and weekdaysMin (#4392)\n\n* translated am/pm\r\n\r\n* change weekdaysShort, and weekdaysMin\r\n\r\n* fix missing semi colons\r\n\r\n* fix more missing semi colons\r\n\r\n* fix missing spaces\r\n\r\n* add Khmer script number and use ordinal\r\n\r\n* fix trailing white space"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0d48dfb6b84f2427c4e",
    "number": 4391,
    "body": "Bug was introduced in PR #4341.\r\n\r\nI thought unit-tests using `utc()` and `utcOffset(...)` were good enough, but the behaviour of moments in utc mode isn't the same as non-utc moments with local timezone offsets.\r\n\r\nI'm not sure how to create unit-tests for this, but PR continues to keep unit-tests passing, and I've checked behaviour by using this bash script:\r\n\r\n```bash\r\n#!/bin/bash\r\n\r\nmoment=./build/umd/moment.js\r\n\r\nfor tz in Asia/Kathmandu America/Sao_Paulo Europe/London; do\r\necho $tz;\r\nTZ=$tz node -e \"$(cat << EOF\r\nvar moment = require('${moment}');\r\nvar m = moment();\r\nconsole.log(m.toISOString());\r\nconsole.log(m.toISOString(true));\r\nEOF\r\n)\"\r\ndone\r\n```\r\n\r\nOutput:\r\n```\r\nAsia/Kathmandu\r\n2018-01-04T19:06:41.943Z\r\n2018-01-05T00:51:41.943+05:45\r\nAmerica/Sao_Paulo\r\n2018-01-04T19:06:42.071Z\r\n2018-01-04T17:06:42.071-02:00\r\nEurope/London\r\n2018-01-04T19:06:42.202Z\r\n2018-01-04T19:06:42.202+00:00\r\n```",
    "head_branch": "fix/4390",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[bugfix] Fix #4390: use offset properly in toISOString (#4391)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0d58dfb6b84f2427c4f",
    "number": 4388,
    "body": "Issue for the bug was that were calculating the time difference by finding the difference months and millisecond. While calculating the difference of months it was ignoring the decimal value which important when we are converting the months to days.\r\nFor example - for passing \"1\" value to monthstodays function will give 30. But passing \"1.XX\" value to monthstodays function will give 31.\r\n\r\nFix - I have removed the calculation of month difference. Just calculation the overall millisecond difference and calculating the duration based on that.",
    "head_branch": "issues",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0d68dfb6b84f2427c50",
    "number": 4384,
    "body": "Issue for the bug was that were calculating the time difference by finding the difference months and millisecond. While calculating the difference of months it was ignoring the decimal value which important when we are converting the months to days.\r\nFor example - for passing \"1\" value to monthstodays function will give 30. But passing \"1.XX\" value to monthstodays function will give 31.\r\n\r\nFix - I have removed the calculation of month difference. Just calculation the overall millisecond difference and calculating the duration based on that. ",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0d78dfb6b84f2427c51",
    "number": 4383,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0d88dfb6b84f2427c52",
    "number": 4382,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0d98dfb6b84f2427c53",
    "number": 4379,
    "body": "fixes https://github.com/moment/moment/issues/4070",
    "head_branch": "km/ko-dots",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[locale] ko: Add trailing dot to L and l (#4379)\n\n* Add trailing dot to L and l\r\n\r\n* Add tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0da8dfb6b84f2427c54",
    "number": 4378,
    "body": "fixes #4023 \r\n",
    "head_branch": "km/ts-parseTwoDigitYear",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[misc] Add .ts defn for parseTwoDigitYear (#4378)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0db8dfb6b84f2427c55",
    "number": 4377,
    "body": "This is the same PR as https://github.com/moment/moment/pull/3894/files, except for the `es-us` locale.\r\n\r\nfixes #4162",
    "head_branch": "km/es-us-months",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[locale] es-us: Update month parsing to be dot lenient (#4377)\n\n* [locale] es-us: Update month parsing to be dot lenient, fixes #4162\r\n\r\n* Add test from #4162\r\n\r\n* add @chrisrodz from #4415"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0dc8dfb6b84f2427c56",
    "number": 4372,
    "body": "Hey guys, sorry for the back and forth. I think this will be ready for merge.\r\n\r\nThanks for @JLHwung for mentioning unicode cldr data. It's now compatible with unicode cldr.",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[new locale] ug-cn: Added locale ug-cn (#4372)\n\n* added uyghur language\r\n\r\n* fixed a silly bug"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0dd8dfb6b84f2427c57",
    "number": 4371,
    "body": "The test fails due to we have used deprecated rollup options for a long time and recently rollup 0.53.0 will [throw on unknown options](https://github.com/rollup/rollup/commit/afd30df8a368cec475b9c0265ff1b8812c07891f). Since we always use the latest rollup, the error is thrown as-is.\r\n\r\nThis PR fixes the issue according to the deprecated warning on the older rollup options.\r\n\r\nfixes https://github.com/moment/moment/issues/4373",
    "head_branch": "fix-deprecated-rollup-options",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[misc] fix deprecated rollup options (#4371)\n\n* fix(rollup): fix deprecated rollup options\r\n\r\n* chore(travis): test against on node 8"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0de8dfb6b84f2427c58",
    "number": 4368,
    "body": "The monthsShort and weekdaysMin of bo locale is aligned with Unicode CLDR v32, see http://www.unicode.org/repos/cldr/tags/release-32-0-1/common/main/bo.xml.\r\n\r\ncc @vajradog",
    "head_branch": "update-bo-locale",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[locale] bo: Improvements (#4368)\n\n* fix(bo): align monthsShort with CLDR\r\n\r\nmonthsShort is aligned to calendar type=“gregorian” => months => monthContext => monthWidth type=\"abbreviated\"\r\n\r\n* fix(bo): align weekdaysMin with CLDR\r\n\r\nweekdaysMin is aligned to calendar type=“gregorian” => days => dayContext => dayWidth type=“narrow”\r\n\r\n* test(bo): fix broken test"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0de8dfb6b84f2427c59",
    "number": 4367,
    "body": "I have fixed the issue that doesn’t show the right result as described in #4127 issue.\r\nI have followed the suggestion of @nekitk  and changed the <code>to</code> method. I also added some unit test",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0df8dfb6b84f2427c5a",
    "number": 4366,
    "body": "Add kabyle js file",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0e08dfb6b84f2427c5b",
    "number": 4365,
    "body": "Create kabyle moment js",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0e18dfb6b84f2427c5c",
    "number": 4364,
    "body": "Hey, here is the locale and test file for uyghur language.\r\n\r\nThanks.",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0e28dfb6b84f2427c5d",
    "number": 4363,
    "body": "Hey guys, here is the locale and test file for uyghur language.\r\n\r\nThanks.",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0e38dfb6b84f2427c5e",
    "number": 4362,
    "body": "Hey guys, here is the locale and test file for uyghur language.\r\n\r\nThanks.",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0e48dfb6b84f2427c5f",
    "number": 4361,
    "body": "Turkish don't use ordinal days but rather cardinals\r\n\r\nhttps://github.com/moment/moment/issues/4122#issuecomment-353021460",
    "head_branch": "feature/tr-local-ordinal",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[bugfix] remove `ordinal` for `Turkish` locale as they use `cardin… (#4361)\n\n* bugfix: local remove `ordinal` for `Turkish` locale as they use `cardinal` days\r\n\r\nCloses: #4122\r\n\r\n* restore ordinals"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0e58dfb6b84f2427c60",
    "number": 4360,
    "body": "`min` and `max` only work with moment instances (not Dates, strings, numbers etc.)\r\n\r\nFixes #4316 ",
    "head_branch": "fix/issue-4316",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[bugfix] Correct min/max TypeScript signatures (#4360)\n\n* Fix #4316: Update TypeScript signatures\r\n\r\n* Add min & max typescript tests\r\n\r\n* Add overload signatures"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0e68dfb6b84f2427c61",
    "number": 4359,
    "body": "Fixes #4270 \r\n\r\n",
    "head_branch": "km/fix-arabic-months",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[locale] Fix Arabic locale for months (again) (#4359)\n\n* [locale] Fix Arabic locale for months (again)\r\n\r\n* Fix tests\r\n\r\n* Fix the rest of the tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0e78dfb6b84f2427c62",
    "number": 4357,
    "body": "Update the typescript definition file to include the optional parameter keepOffset which was introduced in 2.20.0\r\n@ashsearle @marwahaha ",
    "head_branch": "blahDL-toISOString-keepOffset",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add optional parameter keepOffset to toISOString (#4357)\n\nUpdate the typescript definition file to include the optional parameter keepOffset which was introduced in 2.20.0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0e88dfb6b84f2427c63",
    "number": 4351,
    "body": "if define.amd is available then currently the moment library is defined as an anonymous factory.\r\nmoment needs to be named if it should be used in other modules.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0e98dfb6b84f2427c64",
    "number": 4350,
    "body": "Closes #4347.",
    "head_branch": "unnecessary_escape_closure_compiler_warnings",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0ea8dfb6b84f2427c65",
    "number": 4343,
    "body": "I was working in my project and downloaded moment for the typing and when i started building it threw an error because i don't use RequireJS or AMD. \r\n\r\nFeel free to check if this is the correct path to fix the problem, this fixed the issue for me and it might help others that might be facing the same problem",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0eb8dfb6b84f2427c66",
    "number": 4341,
    "body": "A minimal effort to allow users to opt-out of UTC conversion when calling `toISOString()`:\r\n\r\n```js\r\nmoment().toISOString();\r\nmoment().toISOString({ utc: false });\r\n```\r\n\r\nExample while running in Europe/London timezone:\r\n```js\r\nmoment('2017-07-01').toISOString(); // 2017-06-30T23:00:00.000Z\r\nmoment('2017-07-01').toISOString({ utc: false }); // 2017-07-01T00:00:00.000+01:00\r\n```\r\n\r\nThe PR preserves existing behaviour of converting to UTC by default.",
    "head_branch": "fix/1751",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[feature] Prevent toISOString converting to UTC (issue #1751) (#4341)\n\n* [feature] Prevent toISOString converting to UTC (issue #1751)\r\n\r\n* Improve readability (maybe)\r\n\r\n* Tweak following code review\r\n\r\n* jshint fix"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0ec8dfb6b84f2427c67",
    "number": 4338,
    "body": "These changes to `startOf` and `endOf` fix several DST-related issues:\r\n- avoid using setHours/setMinutes/setSeconds - fixes #1990, fixes #2749, fixes #3580\r\n- use `Date.UTC` / `new Date` for units bigger than hours - fixes #3132, fixes #4152\r\n\r\nAdditionally, the changes supersede these pull requests: #3620, #4164 and #4254 \r\n\r\nBenchmark results\r\n\r\n| Benchmark | moment 2.19.3 | this PR | improvement |\r\n| --- | --- | --- | --- |\r\n| startOf second | 2,598,171 ops/sec ±1.24% | 5,322,216 ops/sec ±1.56% | 2.0x |\r\n| startOf minute | 1,606,046 ops/sec ±0.98% | 7,397,801 ops/sec ±0.92% | 4.6x |\r\n| startOf hour | 1,069,176 ops/sec ±0.96% | 5,015,984 ops/sec ±0.91%   | 4.6x |\r\n| startOf date | 811,815 ops/sec ±1.08% | 1,162,031 ops/sec ±0.89%     | 1.4x |\r\n| startOf day | 827,911 ops/sec ±0.83% | 1,170,806 ops/sec ±1.25%      | 1.4x |\r\n| startOf isoWeek | 274,302 ops/sec ±1.06% | 973,431 ops/sec ±1.09%    | 3.5x |\r\n| startOf week | 298,240 ops/sec ±1.00% | 1,188,010 ops/sec ±0.94%     | 3.9x |\r\n| startOf month | 653,227 ops/sec ±0.85% | 1,447,224 ops/sec ±0.76%    | 2.2x |\r\n| startOf quarter | 381,496 ops/sec ±0.85% | 1,221,562 ops/sec ±0.93%  | 3.2x |\r\n| startOf year | 425,796 ops/sec ±0.98% | 2,047,534 ops/sec ±1.02%     | 4.8x |\r\n| endOf second | 200,544 ops/sec ±0.92% | 5,496,719 ops/sec ±1.00%     | 27.4x |\r\n| endOf minute | 190,097 ops/sec ±1.02% | 6,600,219 ops/sec ±0.94%     | 34.7x |\r\n| endOf hour | 331,129 ops/sec ±0.86% | 4,612,042 ops/sec ±0.88%       | 13.9x |\r\n| endOf date | 249,577 ops/sec ±1.10% | 1,239,091 ops/sec ±0.96%       | 4.9x  |\r\n| endOf day | 251,496 ops/sec ±1.01% | 1,240,042 ops/sec ±1.35%        | 4.9x  |\r\n| endOf isoWeek | 160,238 ops/sec ±1.73% | 917,050 ops/sec ±0.85%      | 5.7x  |\r\n| endOf week | 174,334 ops/sec ±2.02% | 1,216,138 ops/sec ±0.88%       | 6.9x  |\r\n| endOf month | 200,123 ops/sec ±1.24% | 1,480,412 ops/sec ±2.05%      | 7.3x  |\r\n| endOf quarter | 159,346 ops/sec ±0.99% | 1,165,512 ops/sec ±1.02%    | 7.3x  |\r\n| endOf year | 165,736 ops/sec ±1.70% | 2,026,810 ops/sec ±1.67%       | 12.2x |\r\n\r\nAdditionally, fixed one more bug: `moment('0000-02-29')` was created in year 1900 then reverted to year 0.  Unfortunately Feb 29th doesn't exist in 1900, so the moment ended up as `0000-03-01` instead.\r\n\r\nNew tests have been added to `start_end_of.js` that would have failed in earlier releases.",
    "head_branch": "fix/dst",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[bugfix] Fix startOf/endOf DST issues while boosting performance (#4338)\n\n* Fix startOf/endOf DST issues\r\n\r\n* Performance improvements\r\n\r\n* Rewrite for legibility\r\n\r\n* Fix for years in range 0-99\r\n\r\n* Remove placeholder comments\r\n\r\n* Revert comment\r\n\r\n* Remove useless special-case\r\n\r\n* Code review change: use break consistenly\r\n\r\n* Rename per code review\r\n\r\n* Fix typo\r\n\r\n* Inline variable to end naming debate\r\n\r\n* Address review comments"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0ed8dfb6b84f2427c68",
    "number": 4336,
    "body": "",
    "head_branch": "fix/4334",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix #4334: Remove unused function call argument (#4336)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0ee8dfb6b84f2427c69",
    "number": 4335,
    "body": "Israel has many English speaking citizens / visitors, however, none of the existing English locales match the needed configuration in Israel.\r\n\r\nen-il vs en-gb:\r\n1. The first day of the week is Sunday.\r\n2. The first week of the year is the week of January 1st.\r\n\r\nen-il vs en-us:\r\n1. The calendar format is DD/MM/YYYY.\r\n2. It uses 24 hours clock.\r\n\r\nThis pull request includes tests.",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[new locale] Added locale en-ilֿ  (#4335)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0ef8dfb6b84f2427c6a",
    "number": 4332,
    "body": "#4275 (fix for #4227) but with a few changes:\r\n\r\n * Don't create a local date every time, just pull the UTC day out of the UTC-constructed date\r\n * Some more tests",
    "head_branch": "ZachGawlik-fix-day-of-week-parsing",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[bugfix] Fix weekday verification for UTC and offset days (fixes #4227) (#4332)\n\n* Verify utc date weekdays using local weekday\r\n\r\n* add tests and change check"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0f08dfb6b84f2427c6b",
    "number": 4326,
    "body": "Limiting regex match to 256 chars, fixing #4163.\r\n\r\nI did not change the minified versions because I assumed that would be part of some build process and could not find anything about it in \"contributing\". Please advise if this has to be done manually somehow.",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[bugfix] Fix for ReDOS vulnerability (see #4163) (#4326)\n\n* Limiting regex match to 256 chars, fixing #4163\r\n\r\n* Limiting regex match to 256 chars, fixing #4163\r\n\r\n* Also limiting numbers to fix #4163"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0f18dfb6b84f2427c6c",
    "number": 4312,
    "body": "In `zh-cn` locale (among others) the end of [string with format (timezone offset) unit-test](https://github.com/moment/moment/blob/328d51e7235b7a2d443bfdf69c1844939c115660/src/test/moment/create.js#L357) attempts to create two dates using RFC formatted strings passed to `moment.utc()` with explicit format strings.\r\n\r\nThis fails because it tries to parse the month and day-of-week using the users locale (`zh-cn`) instead of the English required to parse RFC2822.\r\n\r\nThis PR removes the locale-specific formatting from the unit-test.\r\n\r\nFixes #4251 ",
    "head_branch": "fix/4251",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[bugfix] Fix #4251: Avoid RFC2822 in utc() test (#4312)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0f28dfb6b84f2427c6d",
    "number": 4310,
    "body": "Fixes #3883. It's currently possible to define a locale with a parent that is not yet defined. However, in the case of this bug when attempting to create a moment using a child locale with a parent that hasn't been loaded yet or hasn't been defined causes an exception to be thrown during prepareConfig.\r\n\r\nThis fix first attempts to load the parent locale during `defineLocale` if it can't be found initially.  If in the case that a moment is created or a locale is set with a child who's parent can't be loaded or hasn't been defined, `chooseLocale` returns the global locale instead of null. This mitigates the error described in this bug report in the instance the parentLocale can't be located, and follows the same logic when defining a child can't load a parent. I've added a test for this case.\r\n\r\nAs this is an edge case it may not be necessary, but makes for a nicer experience rather than having an unhandled exception thrown. I considered adding a warning in `chooseLocale` but this affected a number of tests. \r\n\r\nAlso, a warning was previously shown to indicate the parentLocale is missing but was removed (assuming due to the ability to define a parent after a child). However, the documentation specifies that it should still show the warning? I'm assuming in this instance the documentation needs updating.\r\n\r\nApologies if these scenarios have already been discussed and addressed.",
    "head_branch": "fix-3883",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[bugfix] Fix #3883 lazy load parentLocale in defineLocale, fallback to global if missing (#4310)\n\n* Fix #3883 defineLocale lazy load parentLocale\r\n\r\n* Fix #3883 fallback to globalLocale if parentLocale can't be loaded,\r\nadded test\r\n\r\n* Fix #3883 lazy load parentLocale test"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0f38dfb6b84f2427c6e",
    "number": 4303,
    "body": "@mrbase do you agree with these changes? All other locales seem to have uppercase localisation strings, and from my testing we should as well.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0f48dfb6b84f2427c6f",
    "number": 4296,
    "body": "Fixes #4295 ",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0f58dfb6b84f2427c70",
    "number": 4289,
    "body": "I believe this will fix the button near the bottom of https://momentjs.com. If not, feel free to delete this PR.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixed spelling and formatting for U.S. (#4289)\n\nI believe this will fix the button near the bottom of https://momentjs.com. If not, feel free to delete this PR."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0f58dfb6b84f2427c71",
    "number": 4275,
    "body": "This fixes https://github.com/moment/moment/issues/4227 where datestrings with `ddd` or `dddd` in the format returned \"Invalid Date\" for times that would have different dates locally than in UTC.\r\n\r\nThis bug was introduced in 2.19.0 with the introduction of the `check for mismatching day of week` if condition. The issue stems from `Date.prototype.getDay()` returns the day of week according to local time whereas for a .utc date `config._w.d` would be the day of week according to UTC. For example, since I live somewhere currently with UTC−04:00 offset, \r\n```js\r\n(new Date('2017-10-28T03:59:59Z')).getDay() // -> 5\r\n(new Date('2017-10-28T04:00:00Z')).getDay() // -> 6\r\n```\r\n\r\nI was able to write test cases that failed for *me* beforehand and work after my change. However, since it uses the built-in localization and Date object behind the scenes, the tests are specific to the timezone of the machine they're run on. I would really appreciate any pointers on how to make these test cases more robust (I haven't seen anything similar in the existing test base, and I've tried overwriting `Date.prototype.getTimezoneOffset` to no avail).",
    "head_branch": "fix-day-of-week-parsing",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0f68dfb6b84f2427c72",
    "number": 4271,
    "body": "* Fixed months name for standard Arabic. \r\n\r\n\r\nFixes https://github.com/moment/moment/issues/4270",
    "head_branch": "fix_arabic_locale",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[locale] Fix Arabic locale for months (#4271)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0f78dfb6b84f2427c73",
    "number": 4267,
    "body": "As discussed in #4038, in french (from France and Belgium anyway, not sure at all about fr-ch and fr-ca), weekdays are written in lowercase.\r\n\r\nAnd having the weekdaysMin capitalise wasn't making any real sense.",
    "head_branch": "fix-fr-weekday-case",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[locale] set french weekdaysMin in lowercase (#4267)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0f88dfb6b84f2427c74",
    "number": 4264,
    "body": "The `L` format of the `nl-be` locale should not be DD/MM/YYYY but DD-MM-YYYY, exactly the same as the `nl` locale.\r\n\r\nAlso see:\r\n* https://en.wikipedia.org/wiki/Date_and_time_notation_in_Belgium\r\n* https://www.taaltelefoon.be/datumnotatie\r\n* http://trac2.assembla.com/Team6GPR/export/3/BIN-normen.pdf",
    "head_branch": "nl-be-format",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0f98dfb6b84f2427c75",
    "number": 4255,
    "body": "When changing a year from a random day (not the 29th of february) of a leap year, the day is shifted to the end of the month.\r\n\r\nFixes #4238",
    "head_branch": "fix-setYearLeapYear",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix year setter for random days in leap year (#4255)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0fa8dfb6b84f2427c76",
    "number": 4254,
    "body": "The endOf formula was not working for the day that the daylight saving\r\ntime starts.\r\n\r\nCouldn't run tests locally, but running the test code worked.\r\n\r\nresolves https://github.com/moment/moment/issues/4249",
    "head_branch": "fix/daylight-saving-time",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0fb8dfb6b84f2427c77",
    "number": 4248,
    "body": "fix typo",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0fc8dfb6b84f2427c78",
    "number": 4247,
    "body": "fix typo",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0fd8dfb6b84f2427c79",
    "number": 4246,
    "body": "Hi there,\r\n\r\nThis patch adds 'ss' to RelativeTimeKey to make the typescript definition more complete, and updates the typing tests to match.\r\n\r\nFirst patch to moment.js, so please let me know if there's anything I'm missing or if you have any suggestions for improvements!",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[misc] Add 'ss' relative time key to typescript definition (#4246)\n\n* Add 'ss' to typescript definition\r\n\r\n* add missing ss key to MomentRelativetime\r\n\r\n* add typing tests for new ss key\r\n\r\n* correct whitespacing issues"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0fe8dfb6b84f2427c7a",
    "number": 4243,
    "body": "I am a dutchy and I noticed that the ss translation was still missing :)",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa0ff8dfb6b84f2427c7b",
    "number": 4242,
    "body": "This addresses #3626.\r\n\r\nA fix was suggested in the comments but a PR wasn't submitted. I've refactored the suggested fix which will check if the locale to update exists (if not found in the currently loaded locales) and load it before merging. This mitigates the merge with the current set locale if the submitted locale isn't found in the loaded locales array.\r\n\r\nNot sure if it should continue to merge if the locale to merge with can't be loaded, but this could be another issue to discuss.",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1008dfb6b84f2427c7c",
    "number": 4240,
    "body": "This fixes https://github.com/moment/moment/issues/2867\r\n\r\nMy solution was to exclude \\uFF08 and \\uFF09 which are `（` and `）` respectively.",
    "head_branch": "fix-incorrect-string-parsing-with-ja-parens",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[bugfix] Fix incorrect strict parsing with full-width parentheses (#4240)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1018dfb6b84f2427c7d",
    "number": 4239,
    "body": "This addresses https://github.com/moment/moment/issues/3054\r\n\r\nFor the test, I simply copied [test/locale/tl-ph.js](https://github.com/moment/moment/blob/develop/src/test/locale/tl-ph.js) and changed the argument to `localeModule`",
    "head_branch": "rename-filipino-locale",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1028dfb6b84f2427c7e",
    "number": 4232,
    "body": "This change reverts @ovangle's change from July to try a fallback try/catch for requiring locales. It maintains the change for react native of aliasing the require function. I pulled this change into webpack 2 and everything seems fine. In short, we appear to be able to *mostly* make everyone happy.",
    "head_branch": "maggie/fixBuild",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #4232 from moment/maggie/fixBuild\n\nrevert locale fallbacks in require, re-add react native aliasing"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1038dfb6b84f2427c7f",
    "number": 4226,
    "body": "This reverts commit aea6a97463521ebadae2f0c53536f36768ddee0d.\r\n\r\nThis seems to be related to https://github.com/moment/moment/issues/4216#issuecomment-335489518",
    "head_branch": "revert-package-json-es6",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Revert \"jsnext:main -> module (#3904)\"\n\nThis reverts commit aea6a97463521ebadae2f0c53536f36768ddee0d."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1048dfb6b84f2427c80",
    "number": 4225,
    "body": "Changes introduced in #4213 and #4214 broke webpack -- #4216. Reverting them",
    "head_branch": "revert-require-rename",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Revert \"Rename dynamic require to avoid React Native crash\"\n\nThis reverts commit 6a230ae3b574417945b9d7bf459e296eb2585935."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1058dfb6b84f2427c81",
    "number": 4222,
    "body": "Regarding webpack compile issue on Window enviroment",
    "head_branch": "cors-locale",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1058dfb6b84f2427c82",
    "number": 4215,
    "body": "Add typings for #4080",
    "head_branch": "ts-duration-clone",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add duration clone to TS"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1068dfb6b84f2427c83",
    "number": 4214,
    "body": "This is a fixup to #4213",
    "head_branch": "fixup-react-native-p2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Move require rename inside try/catch"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1078dfb6b84f2427c84",
    "number": 4213,
    "body": "This is a redo of #4207 without all the generated files.",
    "head_branch": "fix-react-native",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Rename dynamic require to avoid React Native crash"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1088dfb6b84f2427c85",
    "number": 4212,
    "body": "Fixed some months wont shorted",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1098dfb6b84f2427c86",
    "number": 4210,
    "body": "Simple format change for Russian locale.",
    "head_branch": "fix-timeformat-ru",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[locale] Russian LT/LTS: Updated time format in accordance with CLDR and www.timeandunits.com (#4210)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa10a8dfb6b84f2427c87",
    "number": 4209,
    "body": "Simple format change for Spanish - US locale.",
    "head_branch": "fix-timeformat-es-us",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[locale] es-us: Updated time format in accordance with CLDR and www.timeandunits.com (#4209)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa10b8dfb6b84f2427c88",
    "number": 4207,
    "body": "Note that this PR is not a robust fix, may allow difficult to debug runtime errors when using locales, and completely ignores the moment contribution guidelines.\r\n\r\nReact Native 0.49 really doesn’t like dynamic require statements. (facebook/metro-bundler#65) Importing the current version of moment produces the error\r\n\r\n    TransformError: /.../moment/moment.js: require() must have a single string literal argument\r\n\r\nThere is a more real fix in #4187, which works nicely for the normal scenario of `import moment from 'moment'`. However, it also involves using the ES6 code on the develop branch, which introduces it's own set of issues when the call to moment is somewhere deep in the dependency tree.\r\n\r\nThis version has a different set of problems to #4187, so may be useful as a quick fix if you are running into some of the thornier problems discussed there.",
    "head_branch": "rn49workaround2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa10c8dfb6b84f2427c89",
    "number": 4200,
    "body": "Should be a straight forward update. \r\n\r\nfixes #4189 ",
    "head_branch": "fix-4189",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixed issue 4189. Swiss/German local time format. (#4200)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa10d8dfb6b84f2427c8a",
    "number": 4199,
    "body": "This PR addresses issue #4024.\r\n\r\nSetting the year from February 29th on leap year to some other date on a non leap year returned March 1st of the other date.\r\n\r\n",
    "head_branch": "fix-year-setter-for-leap-years",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa10e8dfb6b84f2427c8b",
    "number": 4197,
    "body": "Hi, \r\nAs this is my first PR on this project (and almost my first PR at all), a feedback would be greatly appreciated!\r\nThanks,\r\n\r\n\r\n\r\n\r\nLaurent.",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa10f8dfb6b84f2427c8c",
    "number": 4195,
    "body": "Just a little shorter version, same meaning\r\n\r\nAuthor, @caio-ribeiro-pereira please verify \r\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[locale] pt-br: Simplify pt-br past relativeTime (#4195)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1108dfb6b84f2427c8d",
    "number": 4194,
    "body": "Hey, I noticed that moment is one of the most popular projects on jsDelivr, so I thought you might like this badge.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1118dfb6b84f2427c8e",
    "number": 4187,
    "body": "The current master build of metro-packager/react-native really doesn’t like dynamic require statements. Importing the current version of moment produces the error\r\n\r\n    TransformError: /.../moment/moment.js: require() must have a single string literal argument\r\n\r\nThis update moves things around so that it is possible to import a version of moment without lazy loaded locales (src/moment-core.js, as big as the diff looks, it’s just a rename). The existing loader is injected in moment.js, which reexports moment so that the previous behaviour of src/moment.js remains unchanged. \r\n",
    "head_branch": "no-dynamic-import",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1128dfb6b84f2427c8f",
    "number": 4184,
    "body": "I saw all the other use Agt for august short name. ( like Android iPhone )",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[locale] id: Fix short name for august in id locale (#4184)\n\n* Update id.js\r\n\r\n* Revert \"Update id.js\"\r\n\r\nThis reverts commit 587f6049c8990b9f5231975e03974a80a08875f4.\r\n\r\n* change id.js"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1138dfb6b84f2427c90",
    "number": 4183,
    "body": "Closes #3860 as is included in this PR.\r\n\r\nIt was not a small PR at first glance but every changes on i18n was limited to 1 locale per commit so it can makes review easier.\r\n\r\nMost translation of `ss` is referenced from Unicode CLDR `duration-second` property, the other CLDR-missing locales are translated by searching `30 seconds` on Google pages.\r\n\r\nIt is recommended to squash merging for better commit history readability.\r\n\r\nfixes https://github.com/moment/moment/issues/3981",
    "head_branch": "relative-seconds-i18n",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[locale] Relative seconds i18n (#4183)\n\n* locales ru, uk: added relative seconds\r\n\r\n* feat(i18n): add relativeSeconds for zh-*\r\n\r\n* feat(i18n): add relativeSeconds for en-*\r\n\r\n* af\r\n\r\n* ar\r\n\r\n* az\r\n\r\n* be\r\n\r\n* add relativeSeconds for th\r\n\r\n* add relativeSeconds for vi\r\n\r\n* ar-dz\r\n\r\n* change style\r\n\r\n* bg\r\n\r\n* bm\r\n\r\n* bn\r\n\r\n* add relativeSeconds for fr-*\r\n\r\n* add relativeSeconds for de-*\r\n\r\n* add relativeSeconds for es-*\r\n\r\n* ja\r\n\r\n* ms\r\n\r\n* nl\r\n\r\n* pt\r\n\r\n* jv\r\n\r\n* it\r\n\r\n* ca\r\n\r\n* cv\r\n\r\n* cy\r\n\r\n* da\r\n\r\n* el\r\n\r\n* eo\r\n\r\n* eu\r\n\r\n* lo\r\n\r\n* my\r\n\r\n* ta\r\n\r\n* fix lo\r\n\r\n* si\r\n\r\n* sv\r\n\r\n* fy\r\n\r\n* gl\r\n\r\n* gu\r\n\r\n* hr\r\n\r\n* hu\r\n\r\n* id\r\n\r\n* pl\r\n\r\n* bs\r\n\r\n* remove executable mode on pl.js\r\n\r\n* fi\r\n\r\n* lb\r\n\r\n* lt\r\n\r\n* lv\r\n\r\n* me\r\n\r\n* mi\r\n\r\n* mk\r\n\r\n* ml\r\n\r\n* mr\r\n\r\n* nb\r\n\r\n* pa-in\r\n\r\n* uz-latn\r\n\r\n* te tet tl-ph tlh tr tzl tzm tzm-latn ur uz x-pseudo yo\r\n\r\n* fix tzm\r\n\r\n* et\r\n\r\n* fa\r\n\r\n* fo\r\n\r\n* gd\r\n\r\n* sd se si sk sl sq sr sr-cyrl ss sw\r\n\r\n* mr ms-my ne nn\r\n\r\n* kk km kn ky\r\n\r\n* fix ro\r\n\r\n* fix tlh\r\n\r\n* fix tzl\r\n\r\n* fix tlh ro\r\n\r\n* gom-latn\r\n\r\n* he\r\n\r\n* is\r\n\r\n* fix pl\r\n\r\n* fix sw sr-cyrl sr\r\n\r\n* fix nn\r\n\r\n* fix sl\r\n\r\n* fix sk\r\n\r\n* hy-am\r\n\r\n* hi\r\n\r\n* gom-latn\r\n\r\n* et\r\n\r\n* fix sr\r\n\r\n* dv\r\n\r\n* fix sk\r\n\r\n* ar-ly\r\n\r\n* bo\r\n\r\n* cs\r\n\r\n* bs\r\n\r\n* ar-kw\r\n\r\n* ar-ma\r\n\r\n* ar-tn\r\n\r\n* ar-sa\r\n\r\n* fix ar-dz\r\n\r\n* br\r\n\r\n* fix ka\r\n\r\n* fix tl-ph\r\n\r\n* fix az from CLDR\r\n\r\n* fix bm from CLDR\r\n\r\n* fix bs from CLDR\r\n\r\n* fix cs from CLDR\r\n\r\n* fix fo from CLDR\r\n\r\n* fix gu from CLDR\r\n\r\n* fix hr from CLDR\r\n\r\n* fix ka from CLDR\r\n\r\n* fix km from CLDR\r\n\r\n* fix my from CLDR\r\n\r\n* fix ne from CLDR\r\n\r\n* fix sk from CLDR\r\n\r\n* fix sr-cyrl from CLDR\r\n\r\n* fix sr from CLDR\r\n\r\n* fix te from CLDR\r\n\r\n* fix style"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1148dfb6b84f2427c91",
    "number": 4177,
    "body": "This PR fixes a bug in `fromNow` when unnormalized locale name is used in `updateLocale`.",
    "head_branch": "use-normalize-on-update-locale",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1158dfb6b84f2427c92",
    "number": 4176,
    "body": "Fix for #4024 \r\n\r\nChanges:\r\nAdd new setter for year, when changing date from 29/02\r\n- to non-leap year, the date is now 28th\r\n- to leap year, the date is 29th\r\n\r\nAlso included some tests\r\n",
    "head_branch": "4024-fix-modify-leap-year-to-non",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1168dfb6b84f2427c93",
    "number": 4168,
    "body": "Fixed german translation for \"ein Monat\" (to \"einen Monat\") in all three german translations. Can you approve this, @lluchs? ",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1178dfb6b84f2427c94",
    "number": 4164,
    "body": "Fixes #3132\r\n\r\nThe approach taken here is a bit different than previous ideas (e.g. #3716) where startOf was called twice in endOf. Here we apply endOf much like startOf is done, so that startOf does not have to be called in endOf. Then in startOf it also checks for DST failures where some browsers return the previous or next day when they are set to a midnight that does not exist due to the DST jump. This is handled only for those time units which require it to avoid performance issues, but overall the performance impact should be very low as it only does a couple extra comparison in most cases.\r\n\r\nThe patch is demonstrated in https://jsfiddle.net/1gpr1fys/7/ in case you want to play with it and do your own tests. It logs all `true` in the console if you have the correct timezone (Brazil/Sao Paulo or Brasilia). Works in both Firefox and Chrome.\r\n\r\nIf you have another timezone that does the DST switch not at midnight, then tests 1 and 4 in the demo fail because they return midnight instead of 1am, that's normal. The test suite of moment though passes as it always mimicks the Brazil timezone in the tests checking for this behavior.\r\n",
    "head_branch": "GH3132",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1188dfb6b84f2427c95",
    "number": 4160,
    "body": "Adding support for ignorable Canonical Zone ID ISO string parsing so that\r\n```javascript\r\n    var moment = require('moment') \r\n    var mom = moment('2007-12-03T10:15:30+01:00[Europe/Paris]');\r\n```\r\ncan be also properly handled by _moment.js_.",
    "head_branch": "feature/4159-enhance-iso-parsing-with-optional-canonical-zone-id",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1198dfb6b84f2427c96",
    "number": 4154,
    "body": "This is an updated version of https://github.com/moment/moment/pull/4009 since it has become stale\r\n\r\nfixes https://github.com/moment/moment/issues/3928\r\n\r\nChanges:\r\nAdded format constants to be used when formatting a moment object to a string that HTML5 input can use, as specified in https://www.w3schools.com/html/html_form_input_types.asp\r\n\r\nSupports the following types\r\n\r\n- `datetime-local`\r\n- `date`\r\n- `time`\r\n- `week`\r\n- `month`",
    "head_branch": "3928-support-html5-formats",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "3928 add format constants to support output to HTML5 input type formats (#4154)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa11a8dfb6b84f2427c97",
    "number": 4153,
    "body": "This is the fix for https://github.com/moment/moment/issues/4024\r\n\r\nChanges:\r\nIf date is `29/02/xxxx`, in which `xxxx` is a leap year, then:\r\n\r\n- when changing year to a normal year, the date should become `28/02/yyyy`\r\n- when changing to a leap year, the date should become `29/02/zzzz`",
    "head_branch": "4024-fix-set-year-from-leap-year-to-non-leap-year",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa11b8dfb6b84f2427c98",
    "number": 4151,
    "body": "From (I think) TypeScript 2.1+ the recommended export formula for libraries which support UMD is to use the `export as namespace` structure. Without this, one cannot use the typed `moment` global variable. See this as a reference: https://github.com/Microsoft/TypeScript/wiki/What's-new-in-TypeScript#support-for-umd-module-definitions",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa11c8dfb6b84f2427c99",
    "number": 4146,
    "body": "Avoid a floating-point error during millisecond -> second conversion when formatting duration in ISO format.\r\n\r\nFloating-point error is easy to trigger:\r\n```js\r\nconsole.log(String((123456789 / 1000) % 60));\r\n```",
    "head_branch": "fix/4145",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #4146 from ashsearle/fix/4145\n\nFix #4145: floating-point errors in ISO duration format"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa11c8dfb6b84f2427c9a",
    "number": 4143,
    "body": "Months and days names, long and short format, time format for the Maltese Language",
    "head_branch": "mt",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[new locale] mt: Maltese language (#4143)\n\n* Added maltese locale\r\n\r\n* linted\r\n\r\n* Added missing ss key to relative time\r\n\r\n* Fixed git profile url"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa11d8dfb6b84f2427c9b",
    "number": 4142,
    "body": "Months and days names, long and short format, time format for the Maltese Language\r\n",
    "head_branch": "maltese",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa11e8dfb6b84f2427c9c",
    "number": 4140,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[locale] kn: Improve short months (#4140)\n\n* Update kn.js\r\n\r\n* tests for kannada\r\n\r\n* test for kannada"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa11f8dfb6b84f2427c9d",
    "number": 4138,
    "body": "The property `ss` was missing in `RelativeTimeSpec` and `MomentRelativeTime` interfaces, although the docs say it exists.\r\n\r\nI have only changed the `d.ts` file; I assume it is an independent change, and should not affect anything else.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1208dfb6b84f2427c9e",
    "number": 4137,
    "body": "As reported, and confirmed with:\r\n```js\r\nIntl.DateTimeFormat(\"lv\", {\r\n  day: \"2-digit\",\r\n  month: \"2-digit\",\r\n  year: \"numeric\",\r\n}).format(new Date());\r\n// \"21.08.2017\"\r\n```\r\n",
    "head_branch": "fix/4136",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1218dfb6b84f2427c9f",
    "number": 4134,
    "body": "As described in issue #4133, there shouldn't be a comma between weekday and date in Italian locale.\r\n\r\nI've checked this by comparing the output of:\r\n```js\r\nIntl.DateTimeFormat(\"it\", {\r\n  weekday: \"long\",\r\n  day: \"numeric\",\r\n  month: \"long\",\r\n  year: \"numeric\",\r\n  hour: \"2-digit\",\r\n  minute: \"2-digit\"\r\n}).format(new Date());\r\n// \"sabato 19 agosto 2017, 15:55\"\r\n```\r\n\r\n(I've not addressed the fact that the browser-native `Intl` implementation puts a comma between the date and time as I'm not sure if moment is trying to mimic `Intl` functionality - and commas in that position are also missing in other locales - e.g. `de`, `en-us`, `en-gb`...)",
    "head_branch": "fix/4133",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix #4133: Remove comma between weekday and date in Italian (#4134)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1228dfb6b84f2427ca0",
    "number": 4131,
    "body": "In response to issue #4112, this PR adds in weekday validation for string with format.\r\n\r\nI've also added a test for this, since it was mentioned there wasn't one for this case. I wasn't sure if it should have been grouped with an existing test.\r\n\r\nAny feedback is appreciated!",
    "head_branch": "mismatch-weekday",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1238dfb6b84f2427ca1",
    "number": 4129,
    "body": "Update to capital letter the first letter of months and days.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1248dfb6b84f2427ca2",
    "number": 4123,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1258dfb6b84f2427ca3",
    "number": 4121,
    "body": "- Split typings in moment.d.ts up across the various packages,\r\n- improve typings for internal functionality, javascript changes to follow\r\n- set minimum supported typescript version to 2.4\r\n- provide mixin schema for future modularization work.",
    "head_branch": "typescript@3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1268dfb6b84f2427ca4",
    "number": 4117,
    "body": "I signed the CLA. Please review/accept the PR. Thank you.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1278dfb6b84f2427ca5",
    "number": 4111,
    "body": "Changes the implementation of `chooseLocale` as per discussion in #3096. ",
    "head_branch": "fix#3946@3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1288dfb6b84f2427ca6",
    "number": 4110,
    "body": "This includes the transpilation changes, since they're necessary to make tests work.\r\n\r\nThe following changes are bundled in to this PR:\r\n\r\n- Remove deprecated functionality `moment.lang`\r\n- Ensure locales are statically available (fix #4025).\r\n- Ensure locales are registered predictably.\r\n- Rename `baseConfig` to `defaultLocaleConfig`\r\n- Includes a fix for #3946",
    "head_branch": "fix#4025@3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1298dfb6b84f2427ca7",
    "number": 4108,
    "body": "So here is why:\r\n* tests were completely non-satisfactory, the only thing they tested was whether a given string parses or not\r\n* the fixed timezones (PST, PDT...) were mostly wrongly defined\r\n* UT fixed timezone was not defined in the map (only the regexp)\r\n* (the **big** one) the parsing was completely wrong, the way it relied on `configFromArray`. It did make a lot of sense when you read the code, but what is needed is a UTC parse that goes back to non-utc (if the constructor was non-utc), so I just hardcoded the single line that replaces the whole function call\r\n* (issue with old code) military timezones are basically deprecated (see https://github.com/moment/moment/pull/3938#issuecomment-320764198)",
    "head_branch": "fixup-rfc2822",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Make jshint happy"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa12a8dfb6b84f2427ca8",
    "number": 4106,
    "body": "PR was merged with an extra function, this drops it.",
    "head_branch": "drop-is-numeric",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Drop isNumeric utility fn"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa12b8dfb6b84f2427ca9",
    "number": 4105,
    "body": "Rename newly merged `gu-IN` locale to `gu`.",
    "head_branch": "rename-gu-in",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Rename gu-IN locale to gu"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa12c8dfb6b84f2427caa",
    "number": 4104,
    "body": "If the moment object passed in as the first parameter is undefined (as judged by the isUndefined function), then we always return false.\r\n\r\nChange made on isBefore, isSame, and isAfter",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa12d8dfb6b84f2427cab",
    "number": 4101,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[locale] tet: Improvements for month and weekday names (#4101)\n\n* Update tet.js\r\n\r\n* Update tet.js\r\n\r\n* Update tet.js\r\n\r\n* Tests and date names for tet"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa12e8dfb6b84f2427cac",
    "number": 4100,
    "body": "",
    "head_branch": "my-develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa12f8dfb6b84f2427cad",
    "number": 4099,
    "body": "@ichernev @noureddineme DONE !",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1308dfb6b84f2427cae",
    "number": 4093,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1318dfb6b84f2427caf",
    "number": 4091,
    "body": "India uses the same (English) locale as Great Britain, with the\r\nexception that the week starts on Sunday, instead of Monday.\r\n\r\nFixes #4012",
    "head_branch": "feature/add-en-in",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1328dfb6b84f2427cb0",
    "number": 4088,
    "body": "✌️",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1338dfb6b84f2427cb1",
    "number": 4085,
    "body": "Right now if the new locale being set is not available then it fails silently and just uses the existing global locale. A console warning would be useful to notify the user of such a failure.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[misc] Print console warning when setting non-existent locales (#4085)\n\n* Dont silently fail setting new locale when it isnt available\r\n\r\nRight now if the new locale being set is not available then it fails silently and just uses the existing global locale. A console warning would be useful to notify the user of such a failure.\r\n\r\n* added missing semicolon\r\n\r\n* Added console warn check.\r\n\r\n* Fixed if condition.\r\n\r\n* Add space"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1348dfb6b84f2427cb2",
    "number": 4084,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1358dfb6b84f2427cb3",
    "number": 4083,
    "body": "",
    "head_branch": "fix/4082",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1358dfb6b84f2427cb4",
    "number": 4080,
    "body": "",
    "head_branch": "fix/4078",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1368dfb6b84f2427cb5",
    "number": 4079,
    "body": "",
    "head_branch": "fix/4072",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1378dfb6b84f2427cb6",
    "number": 4077,
    "body": "",
    "head_branch": "fix3985",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1388dfb6b84f2427cb7",
    "number": 4074,
    "body": "This PR fixes #3399: it adds two new localized formats: `LLLLWT` and `llllwt`. There are copies of `LLLL` and `llll` but without the time. It is useful when you want to display the complete date with the day of the week (but don't want the time).\r\n\r\nExamples:\r\n* `LLLLWT`: Tuesday, July 18, 2017\r\n* `llllwt`:  Tue, Jul 18, 2017\r\n\r\nObviously, `LLLLWT` means \"`LLLL` **W**ithout **T**ime\". I am totally open to better proposals.",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1398dfb6b84f2427cb8",
    "number": 4071,
    "body": "Ordinals abbreviations have been fixed (1.º, 2.º, 3.º instead of 1º, 2º, 3º); In Portuguese, month names must be lowercase (e.g. “17 de julho de 2017” instead of “17 de Julho de 2017”); Weekdays names must be lowercase as well (“Última sexta-feira”, “Último sábado”, “Último domingo” instead of “Última Sexta-Feira”, “Último Sábado”, “Último Domingo”).",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa13a8dfb6b84f2427cb9",
    "number": 4068,
    "body": "This is part of the work I'm doing for #4025, but it can (and probably should) be separated out into a separate PR. I'm submitting it against 3.x because I did the work against this branch, but it should be possible to merge back.\r\n\r\nI'm just trying to fix the spaghetti code mess that is the current `tasks/transpile.js` and remove a few of the \"weirder\" parts of the transpilation process.\r\n\r\nThere is still some work left to do to make the new output 100% compatible with the old output, but I'm submitting the PR early for feeback purposes.\r\n\r\n",
    "head_branch": "build-process@3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa13b8dfb6b84f2427cba",
    "number": 4067,
    "body": "#4024 Fix\r\n\r\n## Breakdowns:\r\n- [x] check for month and date for leap year\r\n- [x] set date to either 28 or 29 depending on isLeapYear of year value passed.\r\n\r\nnote: since the issue is caused by Date(), the approach I took is to check for the value passed to year() function.",
    "head_branch": "4024-modify-leap-year-to-non",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa13c8dfb6b84f2427cbb",
    "number": 4065,
    "body": "Two RFC2822 unit tests failed only in Microsoft browsers (IE11 and Edge) because they regard 2-digit, years prior to 1/1/1970, as invalid. The solution is to translate 2-digit years to 4-digits consistent with the rules defined in the RFC.",
    "head_branch": "Issue_#3886",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa13d8dfb6b84f2427cbc",
    "number": 4063,
    "body": "Fixes #3997 ",
    "head_branch": "fix/3997",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #4063 from ashsearle/fix/3997\n\n[bugfix] Add duration fields in month, day, time order, fixes #3997"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa13e8dfb6b84f2427cbd",
    "number": 4062,
    "body": "This should fix #3960 with output along the lines of `\"-P1MT-1H-59S\"` and `\"P1MT-1H-59S\"`.\r\n\r\n",
    "head_branch": "fix/3960",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa13f8dfb6b84f2427cbe",
    "number": 4061,
    "body": "And tests pass again :-)",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #4061 from NTag/develop\n\nFix #4060: bundle.generate returns a Promise now"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1408dfb6b84f2427cbf",
    "number": 4059,
    "body": "In this PR I'm adding some directories and files that are not used by npm package into `.npmignore` file. It reduces size of installed package and size of `tgz` file that is downloaded during moment installation.\r\n\r\nAlso something related to this PR: `min` directory contains two versions of each files (i.e. `locales.js` and `locales.min.js`). Does it makes sense to do it?  Ignoring `min/locales.js` and `min/moment-with-locales.js` and publishing only `min/locales.min.js` and `min/moment-with-locales.min.js` can significantly reduce size of the package.\r\n\r\nAnother proposal to reduce package size: currently it contains both ES6 and old-js versions in one package. It can be splitted to 2 packages (like `lodash` and `lodash-es`), so developer can choose what they want to use, instead of always downloading both versions.",
    "head_branch": "fix/npmignore",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1418dfb6b84f2427cc0",
    "number": 4058,
    "body": "The names of days of next week aren't declended in the Polish translation. This PR adds the declension.\r\n\r\n@evoL, could you please provide an opinion on this PR?",
    "head_branch": "pl_next_week_day_declension",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1428dfb6b84f2427cc1",
    "number": 4045,
    "body": "fixes an issue when compiling with webpack/babel on Windows\r\n\r\nissues: #2979, #4031, #3872,",
    "head_branch": "loadLocale-crossplatform-patch",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1438dfb6b84f2427cc2",
    "number": 4042,
    "body": "Reopening this PR now that tests are passing.\r\n\r\nCannot import the locale relatively, since the code exists\r\nin a different location in the bundled ES5 module than it\r\ndoes in ES6.\r\n\r\nIn order to run tests locally (where the external 'moment'\r\nlibrary can't be loaded), fall back to using the relative import.",
    "head_branch": "fix-4031",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1448dfb6b84f2427cc3",
    "number": 4041,
    "body": "Fixes a relative import issue. This doesn't address the bigger problems with the function, but at the very least it makes it work correctly when targeting ES6.",
    "head_branch": "fix-4031",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1458dfb6b84f2427cc4",
    "number": 4038,
    "body": "- Fix the week days order.\r\n\r\nWhile the `dow` was correctly set to Monday, the actual weekdays were still starting on Sunday.\r\n\r\n- Fix the case of weekdaysMin\r\n\r\nIn French, the days of the week are all in lowercase. The min version of the weekdays had were starting with an uppercase.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1458dfb6b84f2427cc5",
    "number": 4036,
    "body": "Addresses #4035",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1468dfb6b84f2427cc6",
    "number": 4034,
    "body": "Not much to say, the typescript declaration wasn't added when RFC_2822 parsing was added in 2.18.\r\n\r\nFixes #4033 ",
    "head_branch": "fix/4033",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1478dfb6b84f2427cc7",
    "number": 4032,
    "body": "Set uppercase month names.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1488dfb6b84f2427cc8",
    "number": 4029,
    "body": "\"Saniyə\" sözündə orfoqrafik səhv\r\n\r\nOrthographic error in translation of th word \"second\"",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1498dfb6b84f2427cc9",
    "number": 4017,
    "body": "Turkish locale calendar issue https://github.com/moment/moment/issues/4006\r\n\r\nTranslations changed as below:\r\n`[haftaya]` -> `[gelecek]`\r\n`[geçen hafta]` -> `[geçen]`",
    "head_branch": "4006-calendar-tr-issue",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa14a8dfb6b84f2427cca",
    "number": 4015,
    "body": "There should be no space between number variable and time unit.\r\neg. '5年', not '5 年'; '8小时', not '8 小时'...",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa14b8dfb6b84f2427ccb",
    "number": 4014,
    "body": "There should be no space between number variable and time unit. eg. '5年', not '5 年'; '8小時', not '8 小時'...",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa14c8dfb6b84f2427ccc",
    "number": 4010,
    "body": "Makes parseTwoDigitYear dynamically work out date instead of relying on the year being between 1968 and 2068",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa14d8dfb6b84f2427ccd",
    "number": 4009,
    "body": "This is my first open source contribution.\r\nI've added format constants that follow HTML5 input types based on #3928.",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa14e8dfb6b84f2427cce",
    "number": 4008,
    "body": "This is my first contribution to an open source project.\r\nI've added the requested constants from #3928 ",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa14f8dfb6b84f2427ccf",
    "number": 4007,
    "body": "Updated regex to support positive sign in addition to a negative sign. The `sign` is assigned a value of 1 if the regex finds \"+\" in the beginning.",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1508dfb6b84f2427cd0",
    "number": 4004,
    "body": "Hi there,\r\n\r\nI have added required files for Gujarati local please let me know if I missed something.  This is my first contribution for any git repository \r\n ",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added Gujarati locale for moment (#4004)\n\n* Added Gujarati locale for moment\r\n\r\n* Rename Gujarati Locale file\r\n\r\n* Fixed invalid culture name in comment"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1518dfb6b84f2427cd1",
    "number": 4003,
    "body": "This file is 3.5 Mb and it's not needed in production.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1528dfb6b84f2427cd2",
    "number": 4001,
    "body": "Adding Bambara locale. \r\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add bambara language. (#4001)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1538dfb6b84f2427cd3",
    "number": 3991,
    "body": "Trying to fix at least part of the DST problem. The solution is simple, if time is not set to 23:59, which means that an error occurred, set it properly to 23:59:59:999.\r\n\r\nTo my understanding, since all days end on 23:59 this should be a fix if the error was that the projected time was early (23:58) or late (00:01).\r\n\r\nI added the switch statement, so that more fixes may be implemented if the condition for endOf(\"day) is not enough.\r\n\r\nI hope that i am not missing something here",
    "head_branch": "issue#3132",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1548dfb6b84f2427cd4",
    "number": 3989,
    "body": "In Portuguese (Portugal) weekdays are in lowercase. So its required that working days will be like `Segunda-feira` not as the actual value `Segunda-Feira`\r\n\r\nFor those on grammar:\r\nEven the first capital letter is only Ok when in a single word or the first word in a sentence. Regular usage (in the middle of a sentence) it would be all in lowercase.\r\nBut we can't control here when it will show one way or the other, so the initial capital letter!\r\n\r\nReference: https://ciberduvidas.iscte-iul.pt/consultorio/perguntas/meses-e-dias-da-semana-outra-vez/3743",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[locale] pt: Fix capital letters in weekdays (#3989)\n\n* Typo fixing capital letter for weekedays\r\n\r\nIn Portuguese (Portugal) weekdays can only have one capital letter. So its Segunda-feira not Segunda-Feira\r\n\r\n* pt: Fix capital letters in weekdays\r\n\r\npt: Fix capital letters in weekdays\r\n\r\n* Fix conflicting file\r\n\r\n* small fix\r\n\r\n* fix\r\n\r\n* Revert test"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1558dfb6b84f2427cd5",
    "number": 3983,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1568dfb6b84f2427cd6",
    "number": 3969,
    "body": "This was listed in https://github.com/moment/moment/issues/3775 as v3.\r\n\r\nThere are a few things to consider:\r\n* **biggest issue** : a lot of locale tests fail, I'm not even sure how much strictness can we expect from them and how much work is required to fix locale definitions and tests for this to fly\r\n* meridiem might be missing, should we handle that in strict #297 \r\n* array of formats has a bunch of logic that does not require strict to work, should we just force strict on it too, or have some leeway\r\n* `X` also parses `X.S`, `X.SS` and `X.SSS` so the latter fail in strict mode\r\n* `str Z` (note the space) does not count as ISO, so it won't pass in strict (non-strict is going to the Date constructor IMHO)\r\n",
    "head_branch": "default-to-strict-parsing",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1578dfb6b84f2427cd7",
    "number": 3964,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1588dfb6b84f2427cd8",
    "number": 3963,
    "body": "There is an issue when using some arbitrary milliseconds as a duration and format as an ISO 8601 string.\r\n\r\nTake a look at this example:\r\n\r\n```\r\nmoment.duration({ms: 157115}).toISOString()\r\n```\r\n\r\nor\r\n\r\n```\r\nmoment.duration({s: 157.115}).toISOString()\r\n```\r\n\r\nwill returned `PT2M37.11500000000001S` instead of  `PT2M37.115S`.\r\n\r\nAs the original value gives only 3 decimal places in addition to [ISO8601 Times](https://en.wikipedia.org/wiki/ISO_8601#Times)'s milliseconds.\r\n\r\nPS. I also do an extra work by aligning some misalign export ;)",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1598dfb6b84f2427cd9",
    "number": 3961,
    "body": "Authors:\r\n\r\n@jorisroling @middagj \r\n\r\nI have not included any changes to the unit tests since they were left unaffected. Any dutch grammer book will tell you that days are to be written without a capital letter but for a quick reference to wikipedia:\r\n\r\nhttps://nl.wikipedia.org/wiki/Hoofdletter_in_de_Nederlandse_spelling#Perioden\r\n\r\nIf you want more trusted resources I will try my best to find them.\r\n\r\nGoogle translate:\r\n\r\n> **Periods**\r\nTime formats like the names of weekdays, months, seasons are written in small letters. Recently, this also applies to historical and geological periods.\r\n\r\nSince I have seen more people contributing this as a source, here you go:\r\n\r\nhttp://www.localeplanet.com/java/nl/index.html\r\nhttp://www.localeplanet.com/java/nl-BE/index.html\r\nhttp://www.localeplanet.com/java/nl-NL/index.html\r\n\r\nAll of these confirm the pull request.",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "NL and BE locale weekDaysMin should not be capitalized, updated to lowercase. (#3961)\n\n* NL and BE locale weekDaysMin should not be capitalized, updated to lowercase\r\n\r\n* Updated locale nl and be weekdays with lowercase"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa15a8dfb6b84f2427cda",
    "number": 3952,
    "body": "fixing for locale formats",
    "head_branch": "fix-locale-zh",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update locale zh (#3952)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa15b8dfb6b84f2427cdb",
    "number": 3951,
    "body": "Removed unnecessary break statements per issue #3927 ",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa15c8dfb6b84f2427cdc",
    "number": 3947,
    "body": "Following #3738.",
    "head_branch": "locale-pt-br",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa15d8dfb6b84f2427cdd",
    "number": 3945,
    "body": "See argumentation at https://github.com/moment/moment/issues/1428#issuecomment-299046240\r\n\r\nI kept the zero padding even though DSN says that it's \"usually not requried,\" but it seems to be the way it's done in every other momentjs locale. This way `l` would give the DSN recommended output, while `L` would give one that's close, but has the zero padding. I don't think it would make sense to force those two to be the same. Input welcome if there is a better way to do this.\r\n\r\nThis is further complicated by the fact that DSN recommends three different formats, `D.M.YYYY`, `D.M.YY` and `YYYY-MM-DD`. I picked the one that is stated to be \"traditional\" with dots and full year specification.",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "#1428: Updated Danish 'L' dateformat to use dots rather than slashes, aligning with article from DSN. (#3945)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa15e8dfb6b84f2427cde",
    "number": 3943,
    "body": "Visual Studio added some files - sorry about that ignore them.\r\n\r\nI was supposed to remove some unnecessary 'break' statements, but also noticed a few other issues highlighted by Resharper.\r\n\r\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa15f8dfb6b84f2427cdf",
    "number": 3941,
    "body": "I am still very confused why is the Finnish translation showing verbal numbers instead of the actual number. All of the other languages I looked at are using real numbers so after this change, the translation would be more consistent. As a native speaker, I couldn't think of any reason why in particular there should be an exception for the Finnish language.",
    "head_branch": "finnish-locale",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1608dfb6b84f2427ce0",
    "number": 3940,
    "body": "Original submission error-ed but did not fail.",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1618dfb6b84f2427ce1",
    "number": 3939,
    "body": "Separated change from #3920 pull request #3935.\r\nNew feature as part of the RFC 2822 capability - toRFC2822String method with test cases.",
    "head_branch": "Feature_3937",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1628dfb6b84f2427ce2",
    "number": 3938,
    "body": "Separated change - Fix for issue #3920. Includes changes made on #3935.\r\n",
    "head_branch": "Bugfox_3920",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1638dfb6b84f2427ce3",
    "number": 3935,
    "body": "Addressed issue #3920 and added a new test case to confirm.\r\nGood find @jgr3go and thanks for giving me an opportunity to practice TDD.\r\n@icambron, your hypothesis as to the probable cause appears to be spot-on, thanks.",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1648dfb6b84f2427ce4",
    "number": 3934,
    "body": "See http://www.localeplanet.com/java/de-AT/ please.\r\n\r\nThe trailing periods could be considered superfluous as well.",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1658dfb6b84f2427ce5",
    "number": 3933,
    "body": "http://cldr.unicode.org/index/downloads\r\n\r\nStandard date and time formats (full, long, medium, short) for gregorian calendar for \"ca\" locale don't use \"el\" prefix.\r\nAlso, I lowercased weekdaysMin: day names (short or not) in Catalan are always lowercase.\r\n\r\nIt looks weird when formating standalone dates. Moment library doesn't know the context, and so this article can be \"el\", \"al\", \"a\", ... or many other words.\r\nImho moment should print standalone dates, unless it fully adapts to ICU standards.\r\n\r\nOriginal author @juanghurtado",
    "head_branch": "locale-ca-cldr",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1668dfb6b84f2427ce6",
    "number": 3932,
    "body": "http://cldr.unicode.org/index/downloads\r\n\r\nStandard date and time formats (full, long, medium, short) for gregorian calendar for \"ca\" locale don't use \"el\" prefix. \r\nAlso, I lowercased weekdaysMin: day names (short or not) in Catalan are always lowercase.\r\n\r\nIt looks weird when formating standalone dates. Moment library doesn't know the context, and so this article can be \"el\", \"al\", \"a\", ... or many other words.\r\nImho moment should print standalone dates, unless it fully adapts to ICU standards.\r\n\r\nOriginal author @juanghurtado ",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1678dfb6b84f2427ce7",
    "number": 3930,
    "body": "The es and es-do locales had the same issue with date parsing of format D-MMM-YYYY . Both locales had code to test for /-MMM-/, so i added the fix for es, to es-do as well. Also added the appropriate test",
    "head_branch": "fix1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1688dfb6b84f2427ce8",
    "number": 3924,
    "body": "Followup to @kborchers's email on JSF adopting FOSSA for license scanning.\r\n\r\nCongrats on the passing license scan! In the PR is a green badge and report.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1698dfb6b84f2427ce9",
    "number": 3915,
    "body": "I believe that the month names in Portuguese should always start with a lowercase letter.\r\n\r\n@jalex79 & @caio-ribeiro-pereira",
    "head_branch": "pt-locale-month-lowercase",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa16a8dfb6b84f2427cea",
    "number": 3914,
    "body": "",
    "head_branch": "pt-locale-month-lowercase",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa16b8dfb6b84f2427ceb",
    "number": 3908,
    "body": "",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa16b8dfb6b84f2427cec",
    "number": 3907,
    "body": "Break in switch causes \"Unreachable 'break' after 'return'.\" warning with JSLint",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa16c8dfb6b84f2427ced",
    "number": 3906,
    "body": "I believe that the month names in Portuguese should always start with a lowercase letter.\r\n\r\n@jalex79 & @caio-ribeiro-pereira",
    "head_branch": "pt-locale-month-lowercase",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa16d8dfb6b84f2427cee",
    "number": 3905,
    "body": "Currently Moment.js ES6 export is not really an ES6 export, it's just an older ES5 export rewritten with `import`s and `export`s.\r\nThe goal of ES6 is not using different words but rather exporting different parts of the package independently.\r\nThis PR shows the right way of doing an ES6 export for a package.\r\nIt is meant as an illustration which can be merged if the moment internals allow that.\r\nOtherwise it's 180 KiloBytes which is unacceptable and will eventually have to go.",
    "head_branch": "fix/es6",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa16e8dfb6b84f2427cef",
    "number": 3904,
    "body": "Per rollup & webpack2.\r\n\r\nhttps://github.com/rollup/rollup/wiki/pkg.module\r\nhttps://webpack.js.org/configuration/resolve/#resolve-mainfields",
    "head_branch": "esm-entry",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "jsnext:main -> module (#3904)\n\nPer rollup & webpack. https://github.com/rollup/rollup/wiki/pkg.module"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa16f8dfb6b84f2427cf0",
    "number": 3902,
    "body": "When using moment together with ChartJS, I found out that there is performance issue with `isObjectEmpty ` when rendering large datasets. This function takes around 30% of total time required to render the chart. \r\n\r\nWhen using `Object.keys`, it only takes ~2% of total time using Chrome 57. \r\n\r\n![screenshot 434](https://cloud.githubusercontent.com/assets/25081285/24832686/6ca33f82-1cb5-11e7-9b15-532000621e87.png)\r\n\r\n![screenshot 431](https://cloud.githubusercontent.com/assets/25081285/24832688/74c23538-1cb5-11e7-8c8c-897f08e2eb94.png)\r\n\r\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1708dfb6b84f2427cf1",
    "number": 3898,
    "body": "I believe that the month names in Portuguese should always start with a lowercase letter.  \r\n\r\n@jalex79 & @caio-ribeiro-pereira ",
    "head_branch": "pt-locale-month-lowercase",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1718dfb6b84f2427cf2",
    "number": 3897,
    "body": "The word 'Monday' (الاثنين) in Arabic is with 'Hamzat wasl' (ا) not a 'hamzat Kaataa' (إ) because it's from (اثنين == TWO).",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1728dfb6b84f2427cf3",
    "number": 3896,
    "body": "Language: Tajik (cyrillic)\r\nISO 639-1: [tg]\r\nISO 639-2: [tgk]",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[new locale] tg: Tajik (Tajikistan) locale (#3896)\n\n* add Tajik (cyrillic) language\r\n\r\n* fix comment\r\n\r\n* add updates\r\n\r\n* add meridem and ordinal\r\n\r\n* fix suffixes\r\n\r\n* change weekdays to lowercase\r\n\r\n* move locale file\r\n\r\n* enhance code style\r\n\r\n* add tests for 'tg' locale\r\n\r\n* fix test issues\r\n\r\n* fix test issues\r\n\r\n* add Tajik (cyrillic) language\r\n\r\n* fix comment\r\n\r\n* add updates\r\n\r\n* add meridem and ordinal\r\n\r\n* fix suffixes\r\n\r\n* change weekdays to lowercase\r\n\r\n* move locale file\r\n\r\n* enhance code style\r\n\r\n* add tests for 'tg' locale\r\n\r\n* fix test issues\r\n\r\n* fix test issues\r\n\r\n* correct meridiem calculations\r\n\r\n* correct \"tg\" unit tests\r\n\r\n* fix words ending\r\n\r\n* extend meridiem tests\r\n\r\n* remove isPM part\r\n\r\n* separate meridiem units around 12\r\n\r\n* correct meridiem\r\n\r\n* code refactoring\r\n\r\n* change test value\r\n\r\n* adapt meridiemHour\r\n\r\n* change back\r\n\r\n* fix error\r\n\r\n* update component.json"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1738dfb6b84f2427cf4",
    "number": 3894,
    "body": "Fixed #3629 \r\n\r\nQuoting the original author of the locale: @julionc \r\n\r\nThe same changes should be made to the es-do locale, since to my understanding they are 90% identical.",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1748dfb6b84f2427cf5",
    "number": 3893,
    "body": "fixes #3117 \r\n\r\nWill need a docs update.\r\n\r\nIt's non-obvious if this is the right thing, since I don't know if people use `ZZ` to check timezones (it's only numbers before this..). Introducing a new token seems odd, though.\r\n\r\nNot sure if breaking, since I did update tests. I guess this is changing behavior...\r\n\r\n@maggiepint ",
    "head_branch": "fix/3117",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1758dfb6b84f2427cf6",
    "number": 3890,
    "body": "The word 'Monday' (الاثنين) in arabic is with 'Hamzat wasl' (ا) not a 'hamzat Kaataa' (إ) because it's from (اثنين == TWO) !",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1768dfb6b84f2427cf7",
    "number": 3889,
    "body": "The word 'Monday' (الاثنين) in arabic is with 'Hamzat wasl' (ا) not a 'hamzat Kaataa' (إ) because it's from (اثنين == TWO) !",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1778dfb6b84f2427cf8",
    "number": 3888,
    "body": "The word 'Monday' (الاثنين) in arabic is with 'Hamzat wasl' (ا) not a 'hamzat Kaataa' (إ) because it's from (اثنين == TWO) !",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1788dfb6b84f2427cf9",
    "number": 3884,
    "body": "The word 'Monday' (الاثنين) in arabic is with 'Hamzat wasl' (ا) not a 'hamzat Kaataa' (إ) because it's from (اثنين == TWO) !",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1798dfb6b84f2427cfa",
    "number": 3880,
    "body": "### Fix:\r\n[x] add export as namespace moment; into moment.d.ts to allow for consuming the moment declarations without ES6 modules\r\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa17a8dfb6b84f2427cfb",
    "number": 3877,
    "body": "fixes #3487 \r\n\r\nThe preparse line was introduced here\r\nhttps://github.com/moment/moment/pull/2268/files\r\n\r\nBut since the tests implemented in #2268 still pass, I think it's safe to remove the line. I don't know of other implications...",
    "head_branch": "fix/3487",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa17a8dfb6b84f2427cfc",
    "number": 3875,
    "body": "fixes #3358 ",
    "head_branch": "fix/3358",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa17b8dfb6b84f2427cfd",
    "number": 3868,
    "body": "Bug when calling months from locale data on Greek:\r\n```js\r\nmoment.locale('el');\r\nmoment.localeData().months(moment());\r\nUncaught TypeError: Cannot read property 'substring' of undefined\r\n    at Locale.months (global.js:6522)\r\n    at <anonymous>:1:21\r\n```\r\nOriginal author @mehiel",
    "head_branch": "bugfix/fix-el-localeData-months",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix localeData months on Greek (#3868)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa17c8dfb6b84f2427cfe",
    "number": 3867,
    "body": "Bug when calling `months` from locale data on Greek:\r\n\r\n```js\r\nmoment.locale('el');\r\nmoment.localeData.months(moment());\r\nUncaught TypeError: Cannot read property 'substring' of undefined\r\n    at Locale.months (global.js:6522)\r\n    at <anonymous>:1:21\r\n```\r\n\r\nOriginal author @mehiel ",
    "head_branch": "bugfix/fix-el-localeData-months-exception",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa17d8dfb6b84f2427cff",
    "number": 3865,
    "body": "\r\n\r\n## Issue\r\nJSPerf shows that using `.split` to create the month array is **96%** slower than using a predefined array of months.\r\n\r\n[https://jsperf.com/split-versus-array-for-month-names](https://jsperf.com/split-versus-array-for-month-names)\r\n\r\n![screen shot 2017-03-26 at 22 24 16](https://cloud.githubusercontent.com/assets/7824734/24335372/84f10458-1273-11e7-8be4-d8584e301051.png)\r\n\r\n## Solution\r\n\r\nUse predefined month array.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa17e8dfb6b84f2427d00",
    "number": 3860,
    "body": "There is no localization for relative seconds (actually looks like in all languages).\r\nConsider the following example:\r\n```javascript\r\nmoment.relativeTimeThreshold('ss', 0)\r\n\r\nvar t = moment(); t.subtract({seconds: -1}); t.toNow()\r\n// \"1 second назад\"\r\nvar t = moment(); t.subtract({seconds: -2}); t.toNow()\r\n// \"2 seconds назад\"\r\nvar t = moment(); t.subtract({seconds: -3}); t.toNow()\r\n// \"5 seconds назад\"\r\n```\r\n\r\nwith this patch (for \"ru\" and \"uk\" languages):\r\n```javascript\r\nvar t = moment(); t.subtract({seconds: -1}); t.toNow()\r\n// \"1 секунду назад\"\r\nvar t = moment(); t.subtract({seconds: -2}); t.toNow()\r\n// \"2 секунды назад\"\r\nvar t = moment(); t.subtract({seconds: -3}); t.toNow()\r\n// \"5 секунд назад\"\r\n```\r\n\r\nAlso this may be used with future work for duration formats. Without plural seconds locales seems inconsistent anyway.",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa17f8dfb6b84f2427d01",
    "number": 3854,
    "body": "I think it's easier to read and understand if we switch this block to switch instead of the chained ternary operator. \r\n\r\nThanks.",
    "head_branch": "switch",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #3854 from kienpham2000/switch\n\nConvert long ternary operator to switch for easier readability"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1808dfb6b84f2427d02",
    "number": 3853,
    "body": "Please see the attached screenshots from Chrome 56.0.2924.87. \r\n\r\nIt appears there is an invalid whitespace character in the source code in `src/lib/locale/set.js`. I removed that character and added a standard space which appears to have fixed the problem. I still ran the tests and confirmed all passed. \r\n\r\nThis can be reproduced by adding the following index.html file in the repo at the root of the project and loading it in chrome.\r\n\r\nI should note that I put the whitespace replacement into the file referenced above, then ran `grunt release` and confirmed that it did indeed fix the issue.\r\n\r\n```\r\n# index.html\r\n<html>\r\n<head>\r\n  <script src=\"moment.js\"></script>\r\n</head>\r\n<body>\r\n</body>\r\n</html>\r\n```\r\n\r\n<img width=\"1440\" alt=\"screen shot 2017-03-20 at 7 52 21 pm\" src=\"https://cloud.githubusercontent.com/assets/1163038/24130593/cdcf228a-0da6-11e7-8fe7-8ea8f33af81d.png\">\r\n\r\n<img width=\"655\" alt=\"screen shot 2017-03-20 at 7 52 41 pm\" src=\"https://cloud.githubusercontent.com/assets/1163038/24130597/d103eb16-0da6-11e7-8b74-861eda436680.png\">\r\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1818dfb6b84f2427d03",
    "number": 3850,
    "body": "add the es-us locale which is Spanish in US format",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1828dfb6b84f2427d04",
    "number": 3848,
    "body": "I think this will just work. Check out my own Travis Builds and Coveralls here:\r\nhttps://travis-ci.org/marwahaha/moment/builds\r\n[![Coverage Status](https://coveralls.io/repos/github/marwahaha/moment/badge.svg?branch=add-coveralls)](https://coveralls.io/github/marwahaha/moment?branch=add-coveralls)\r\n\r\nBuilds are significantly longer (takes ~4 minutes instead of ~3), but the coverage is probably worth it. I sort of prefer long builds to flaky/less-useful builds. (This is why I decided to test twice --- once with `default` and once with coveralls)\r\n\r\nthis is moment develop's, but it might be out of date\r\n[![Coverage Status](https://coveralls.io/repos/github/moment/moment/badge.svg?branch=develop)](https://coveralls.io/github/moment/moment?branch=develop)\r\n\r\n\r\nfixes #2509\r\n",
    "head_branch": "add-coveralls",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[misc] Add coveralls testing to travis build (#3848)\n\n* Add coveralls testing to travis build\r\n\r\n* Increase maxBlockDuration so coveralls can run"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1838dfb6b84f2427d05",
    "number": 3847,
    "body": "fixes #3631 ",
    "head_branch": "fix/3631",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1848dfb6b84f2427d06",
    "number": 3846,
    "body": "fixes #3842 ",
    "head_branch": "fix/3842",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[bugfix] Force four digits in Y token (#3846)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1858dfb6b84f2427d07",
    "number": 3840,
    "body": "fixes https://github.com/moment/moment/issues/3826\r\n\r\nI'd love for you to try this (clone this, and see if `grunt` works) @TracyGJG \r\n\r\n@icambron thoughts? I dont think it adds much time to the tests. ",
    "head_branch": "fix/windows-dev",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1868dfb6b84f2427d08",
    "number": 3839,
    "body": "almost copied from zh-cn.js",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1878dfb6b84f2427d09",
    "number": 3837,
    "body": "Default exporting moment as default export instead of export = moment in the typings file.\r\nI don't know the implications for people using older typescript versions. But now as typescript 2.x has been stable for quite a while, I suppose this should be the way to do it.\r\n\r\n(As requested in #2608, #3476, #3616)",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1888dfb6b84f2427d0a",
    "number": 3834,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1898dfb6b84f2427d0b",
    "number": 3829,
    "body": "",
    "head_branch": "german-fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa18a8dfb6b84f2427d0c",
    "number": 3828,
    "body": "The Meteor readme needn't be an ad for Meteor.",
    "head_branch": "meteor-readme-simplification",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #3828 from moment/meteor-readme-simplification\n\nSimplify Meteor Readme"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa18b8dfb6b84f2427d0d",
    "number": 3819,
    "body": "Should be correct now with test.",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa18b8dfb6b84f2427d0e",
    "number": 3817,
    "body": "Because of the way many polyfill libraries modify Array.prototype (without Object.defineProperty), enumerating momentProperties with for...in is unsafe.\r\n\r\nThis is a near zero-cost change that makes this enumeration safe.",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa18c8dfb6b84f2427d0f",
    "number": 3815,
    "body": "Fixes #3702 \r\n\r\nThis bug was shadowed by a weird Typing bug:\r\n\r\nWhen you initialize the moment.duration object, `DurationInputArg1` could be a `Duration` object. Since the `Duration` object has a `weeks` attribute (more precisely, a method), the type `weeks` is allowed within the constructor. This should not happen (i.e. Duration objects should only be allowed if they are full Duration objects).",
    "head_branch": "fix/3702",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa18d8dfb6b84f2427d10",
    "number": 3814,
    "body": "Added Object inheritance to moment interface in moment.d.ts file to support native Object functions on the moment object",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa18e8dfb6b84f2427d11",
    "number": 3813,
    "body": "Follows official rules published here: https://www.bk.admin.ch/dokumentation/sprachen/04915/05016/index.html?lang=de#",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa18f8dfb6b84f2427d12",
    "number": 3812,
    "body": "- The first argument in the function in `CalendarSpecVal` should match the first argument in `moment().calendar(..)`. \r\n - The MomentCreationData now matches the actual inputs given to the moment function. \r\n - Spelling error with upper/lowercase in isUtcOffset. ",
    "head_branch": "ts-fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1908dfb6b84f2427d13",
    "number": 3807,
    "body": "This is a rebased version of #3134. I haven't done anything other than remove conflicts and fix tests.\r\n\r\nSee https://github.com/moment/moment-rfcs/pull/1",
    "head_branch": "timrwood/zone-api",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1918dfb6b84f2427d14",
    "number": 3806,
    "body": "Should fix issue #3805\r\n\r\nhttps://runkit.com/581ddb1783dafc001466d8e6/58bac4ef6fc4fc0014cc5b30/branches/master",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1928dfb6b84f2427d15",
    "number": 3800,
    "body": "Hello,\r\n\r\nSmall grammar error fix.",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1938dfb6b84f2427d16",
    "number": 3799,
    "body": "Even if you set custom rounding threshold for days -> month, because relative\r\ntime works on durations, which computes it from two moments, if its over\r\na month in real terms (1st Feb to 2nd March) it will be shown as a month no\r\nmatter the thres. It might be considered a bug, but for now it's a feature.\r\n\r\nTL;DR setting custom threshold for days->month above 28 days will be wrong in March, and setting it above 30 will be wrong half the time :)",
    "head_branch": "fix-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix test broken only in March\n\nEven if you set custom rounding threshold for days -> month, because relative\ntime works on durations, which computes it from two moments, if its over\na month in real terms (1st Feb to 2nd March) it will be shown as a month no\nmatter the thres. It might be considered a bug, but for now it's a feature."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1948dfb6b84f2427d17",
    "number": 3798,
    "body": "Hello,\r\n\r\nI've corrected a small grammar error.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1958dfb6b84f2427d18",
    "number": 3796,
    "body": "Added Gujarati Locale for Indian language \"Gujarati\". ",
    "head_branch": "Added-Locale-Gujarati",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1968dfb6b84f2427d19",
    "number": 3793,
    "body": "`ordinalParse` was poorly named, because, contrary to `ordinal` short which is responsible to display ordinals for many units, the former cares only about day of month parsing.\r\n\r\nRan `grunt`.",
    "head_branch": "ordinal-parse",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1978dfb6b84f2427d1a",
    "number": 3792,
    "body": "Ar-Kw(Kuwait) Language Package Added .",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1988dfb6b84f2427d1b",
    "number": 3791,
    "body": "Change 일분 to 일 분.\r\nThere must be a space between number representation and time dependent noun.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1998dfb6b84f2427d1c",
    "number": 3790,
    "body": "Two other minor changes:\r\n\r\n- French uses curly quote ( `’` ) not straight quote ( `'` )\r\n\r\n- Align formatting (spacing) of fr-ch, fr-ca and fr locales code and\r\ntest code, so that the diff between them shows only actual differences\r\nbetween these locales, and ease their comparison.\r\n\r\nRan all tests.",
    "head_branch": "fr-ordinal",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa19a8dfb6b84f2427d1d",
    "number": 3787,
    "body": "fixes #3717\r\n\r\n@icambron ",
    "head_branch": "fix/3717",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa19b8dfb6b84f2427d1e",
    "number": 3786,
    "body": "Fixes #2621",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa19c8dfb6b84f2427d1f",
    "number": 3784,
    "body": "Manage months and days names, long and short format, time format.... for the Kabyle locale.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa19d8dfb6b84f2427d20",
    "number": 3780,
    "body": "fixes #3765 ",
    "head_branch": "patch/3765",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa19e8dfb6b84f2427d21",
    "number": 3779,
    "body": "",
    "head_branch": "mod-intro",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa19f8dfb6b84f2427d22",
    "number": 3778,
    "body": "Add a new locale for Konkani in the Latin script (gom-latn)",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1a08dfb6b84f2427d23",
    "number": 3777,
    "body": "Create a new locale for Konkani in the Latin script (gom-latn)",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1a08dfb6b84f2427d24",
    "number": 3776,
    "body": "",
    "head_branch": "https",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1a18dfb6b84f2427d25",
    "number": 3773,
    "body": "-------------------------------\n\nHaving install commands in other phases violates the semantics of the `.travis.yml` configuration. So we have refactored them into the `install` phase.\n\n-------------------------------\n\n**Note:** This pull request was generated by an automated tool developed by [The Software REBELs](http://rebels.ece.mcgill.ca/) (a.k.a., the Software Repository Excavation and Build Engineering Labs) of McGill University, Canada. It is part of a research project by [Keheliya Gallaba](http://keheliya.github.io/) under the supervision of [Dr.Shane McIntosh](http://shanemcintosh.org). If you have any questions or feedback about this tool, please feel free to contact the author (keheliya.gallaba@mail.mcgill.ca).",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1a28dfb6b84f2427d26",
    "number": 3772,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1a38dfb6b84f2427d27",
    "number": 3770,
    "body": "",
    "head_branch": "fix/min-max-deprecation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1a48dfb6b84f2427d28",
    "number": 3766,
    "body": "k and kk parsing support behaves the same as H and HH, except for the value 24 that is treated as the 0 value for the HOUR field.\r\nI had a concern about how to treat the 25 value, since ``moment(\"24:00\", \"HH:mm\")`` is valid but ``moment(\"24:50\", \"HH:mm\")`` is not; ``moment(\"25:00\", \"kk:mm\")`` could be valid (setting the hour field to 1), but in the end that seemed counterintuitive.\r\n\r\nAny thoughts are welcomed.\r\nHope this helps.",
    "head_branch": "k_and_kk_parsing_support",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1a58dfb6b84f2427d29",
    "number": 3761,
    "body": "Adds the option for diff to return an object containing the result over multiple units. For example:\r\n```javascript\r\nmoment([2015,8,8,5,5,5,550]).diff([2000,6,10],'all');\r\n//returns {years: 15, months: 1, days: 29, hours: 5, minutes: 5, seconds: 5, milliseconds: 550}\r\n```\r\nCurrently using 'all' as the key. Not sure if there'd be a better term. ",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1a68dfb6b84f2427d2a",
    "number": 3758,
    "body": "fixes #3757",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1a78dfb6b84f2427d2b",
    "number": 3753,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1a88dfb6b84f2427d2c",
    "number": 3752,
    "body": "Please add this new locale (uz-latn)",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1a98dfb6b84f2427d2d",
    "number": 3750,
    "body": "",
    "head_branch": "kannada_locale",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1aa8dfb6b84f2427d2e",
    "number": 3747,
    "body": "See http://www.treccani.it/enciclopedia/uso-delle-maiuscole_(La-grammatica-italiana)\r\n\r\n> I nomi dei giorni della settimana e dei mesi vanno scritti con l’iniziale minuscola\r\n> maggio, lunedì, marzo, sabato.",
    "head_branch": "fix-italian-grammar",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1ab8dfb6b84f2427d2f",
    "number": 3738,
    "body": "This PR adds an optional threshold (`ss`) for `a few seconds` to `%d seconds`. It is built so that it will never display `%d seconds` UNLESS the user manually sets the `ss` threshold. Setting the `ss` threshold once will separate the default value (which is the value in the `s` threshold minus 1).\r\n\r\nAs mentioned in #2558, there is no translation for: `%d seconds`. I could add this for each locale using the `seconds` word that is already present in each locale for the `s` threshold (e.g. `a few **seconds**`), but I don't know if this would work for all locales. So then this would require a review from a native speaker for each locale. Probably not gonna happen.\r\n\r\n#2182: I hope by not actively using this `ss` threshold by default (afaik this is backwards compatible), this PR still has a chance.\r\n\r\nLet me know what you think :)",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1ac8dfb6b84f2427d30",
    "number": 3737,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1ad8dfb6b84f2427d31",
    "number": 3735,
    "body": "I have issues with this approach - would like to discuss.  Primary issue is that I could not get the previous tests passing with this implementation.  Meaning, this implementation is intentionally gimped. ",
    "head_branch": "developmentsetter_garbage_fixusingIsNaN",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #3735 from wi-ski/developmentsetter_garbage_fixusingIsNaN\n\nSetter garbage fix using isNaN"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1ae8dfb6b84f2427d32",
    "number": 3727,
    "body": "This is useful when you want to pass around the imported moment module.\r\n\r\nIn my case I needed to add this workaround to assign `moment` (required with browserify from node_modules) to the window object",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1af8dfb6b84f2427d33",
    "number": 3726,
    "body": "add .idea (intellijIdea workspace settings) folder to .gitignore + fix context in Farsi locale",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1b08dfb6b84f2427d34",
    "number": 3724,
    "body": "In Russia 1st week of the year is a week that contains first thursday of the year",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1b18dfb6b84f2427d35",
    "number": 3716,
    "body": "…e is not midnight, doing a second aim at midnight.\r\n\r\nWorked on this with @kevPo.",
    "head_branch": "GH3132",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1b28dfb6b84f2427d36",
    "number": 3714,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1b38dfb6b84f2427d37",
    "number": 3712,
    "body": "Fixes #3693 \r\n\r\nPasses tests",
    "head_branch": "fix/3693",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1b48dfb6b84f2427d38",
    "number": 3710,
    "body": "This pull request solves #3632 and replaces #3644 with a less invasive solution.\r\n\r\nBasically, `.toISOString()` now returns null if called on an invalid date.\r\n\r\nThere was also some mad cyclomatic complexity in there that I cleaned up.",
    "head_branch": "maggie/isostringnull",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1b58dfb6b84f2427d39",
    "number": 3708,
    "body": "I have corrected the issue with the failing test but I still have a test I am unable to perform with out some advice. The test case 'RFC2822 datetime with mismatching Day (week v date)' confirms the day is consistent when given as both a day of week and day of month. This is a stipulation of the RFC so needs to be correct but I cannot achieve this without using a JS Date object, unless the core team have an alternative solution.\r\n\r\n**Work in Progress - Do not Merge, Advice required. Issue #2530**",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1b68dfb6b84f2427d3a",
    "number": 3707,
    "body": "The Esperanto locale has various different issues regarding use of the accusative (technically n-finaĵo, but this has no English equivalent), capitalization and use of hyphens in dates. The original author [mentions this in a comment, as well](https://github.com/moment/moment/blob/4b3fc58ddc777ec7d65fd3a85bd0ae64632e3dfe/src/locale/eo.js#L4). This PR fixes that.\r\n\r\n@colindean Can you please verify these changes? Otherwise I can get another speaker to do so.",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1b78dfb6b84f2427d3b",
    "number": 3704,
    "body": "Added a helper for checking whether an argument is numeric.  I feel as though its rather garish in implementation and would love some critiques if anyone feels this could/should be improved.\r\n\r\n",
    "head_branch": "development",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1b78dfb6b84f2427d3c",
    "number": 3701,
    "body": "According to the docs (http://momentjs.com/docs/#/i18n/instance-locale/) calling `.locale(false)` would reset the instance's locale to the global one, but the existing typings don't allow passing `false` to this function. This PR fixes this issue.",
    "head_branch": "fix/locale-specifier-typings",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1b88dfb6b84f2427d3d",
    "number": 3700,
    "body": "List is incorrect vs week.dow\r\nFrench weeks start on Monday (\"Lundi\") but days list was starting on Sunday (\"Dimanche\")",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1b98dfb6b84f2427d3e",
    "number": 3697,
    "body": "More discussion in this issue:\r\nhttps://github.com/moment/moment/issues/3696",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1ba8dfb6b84f2427d3f",
    "number": 3695,
    "body": "Adjust Thai localized short date format to read day/month/year (moment/moment#3692).\r\n\r\n@sirn, 👍 or 👎?",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1bb8dfb6b84f2427d40",
    "number": 3688,
    "body": "This is a TS 2.0-specific construct that allows TypeScript users to consume moment as a global.\r\n\r\nIt looks like the current `.d.ts` file avoids 2.0+ features, but just throwing this out there because I found [this Stack Overflow question](http://stackoverflow.com/questions/41336330/typescript-how-can-i-make-an-existing-namespace-global).\r\n\r\nCC @RyanCavanaugh.",
    "head_branch": "addUmdGlobalDeclaration",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1bc8dfb6b84f2427d41",
    "number": 3686,
    "body": "Silly PR, I know.",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1bd8dfb6b84f2427d42",
    "number": 3677,
    "body": "In its lengadocian dialecte",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1be8dfb6b84f2427d43",
    "number": 3676,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1bf8dfb6b84f2427d44",
    "number": 3671,
    "body": "* Changed months abbreviations to the recommended ones\r\n  (https://www.upf.edu/leupf/12ap1/111_3.htm).\r\n* Added articles and 'de' to long-form dates.\r\n* Added commas to short-form dates.\r\n\r\nPinging previous Catalan committers @pereorga and @juanghurtado.",
    "head_branch": "locale_ca_add_de",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1c08dfb6b84f2427d45",
    "number": 3668,
    "body": "I have implemented 3 new methods to deal with Julian Dates (=Julian Day + Time). Any Moment.js object can now be converted to Julian Dates using the `.toJD()` method.\r\n\r\nAlternatively, `moment.convertToJD( any_moment_date_obj )` and `moment.convertFromJD( any_Julian_Date )` can also be used to convert between Julian Dates and Gregorian Dates. The argument for `moment.convertToJD` must be a Moment.js object, whereas `moment.convertFromJD` can accept any positive number.\r\n\r\n**All the methods implemented on this commit should work fine for all positive Julian Days, i.e., all dates after BCE 4713 Jan 1st 12:00:00 UTC.**",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1c18dfb6b84f2427d46",
    "number": 3666,
    "body": "Found the issue ticket #3658, thought it looked like a nice place to start for my first PR on GitHub.  Made the recommended changes to overload the calendar function and added a unit test to the suite to cover my use case.",
    "head_branch": "calendar-overload-formats",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[feature] Calendar function handles formats only arg (#3666)\n\n* Issue no. 3658 adding overload for single parameter to calendar function\r\n\r\nCorrected the formatting on calendarjs unit test file\r\n\r\nCorrected autoformatting\r\n\r\n* Removed trailing space...\r\n\r\n* fixed comment per request\r\n\r\n* added helper utils for better type and property checking, updated calendar functionality to properly identify time and formats inputs. added a bunch of unit tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1c28dfb6b84f2427d47",
    "number": 3664,
    "body": "@jalex79 \r\n@caio-ribeiro-pereira ",
    "head_branch": "pt_weekdays",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1c38dfb6b84f2427d48",
    "number": 3659,
    "body": "Hi, I have added support for [Sindhi](https://en.wikipedia.org/wiki/Sindhi_language) language translation, It is very basic module and For most cases, I think these changes should suffice.\r\n\r\nUnit tests are included as well.\r\n\r\nThanks for the great library! 👍 \r\n\r\nCheers,\r\n\r\n```\r\nGlobal summary:\r\n┌───────┬───────┬────────────┬────────┬────────┬─────────┐\r\n│ Files │ Tests │ Assertions │ Failed │ Passed │ Runtime │\r\n├───────┼───────┼────────────┼────────┼────────┼─────────┤\r\n│ 1     │ 2892  │ 119091     │ 0      │ 119091 │ 10429   │\r\n└───────┴───────┴────────────┴────────┴────────┴─────────┘\r\n\r\nRunning \"exec:typescript-test\" (exec) task\r\n\r\nDone, without errors.\r\n```",
    "head_branch": "sindhi-locale-support",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1c48dfb6b84f2427d49",
    "number": 3657,
    "body": "- Added the MomentStatic TypeScript definition. This interface should describe the static `moment` variable as it is either imported or as it is attached to the window.\r\n  - This allows developers that wish to use moment but not actually bundle it with their application, i.e. they are using Webpack but moment is already included on the window by their deployment environment, to import only the declaration file and declare a moment variable of type Moment.MomentStatic.\r\n- Copied the typings tests with modification to import only the declarations file and use it with a constant declared of type Moment.MomentStatic.\r\n- Added ignore for IntelliJ project directory.",
    "head_branch": "typescript/moment-static",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1c58dfb6b84f2427d4a",
    "number": 3655,
    "body": "",
    "head_branch": "typo-in-contributing.md",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1c68dfb6b84f2427d4b",
    "number": 3654,
    "body": "I've lowercased \"I\"s that shouldn't be capitalized in this context. Also, I fixed a few other idiomatic problems. @mrbase Do you approve?\r\n\r\nAlso, month and weekday abbreviations in Danish should be followed by a period (e.g. \"søn.\") like in the German and French locale files. I haven't figured out how to make the tests run successfully when implementing that change, so I've skipped that change for now so that the tests run successfully.",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1c78dfb6b84f2427d4c",
    "number": 3644,
    "body": "issue #3632, changed function and tests",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1c88dfb6b84f2427d4d",
    "number": 3643,
    "body": "Fixes issue in #3520 where explicitly parsed offset in minutes less than abs(16) is converted to hours.",
    "head_branch": "maggie/offsetminutesashours",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1c98dfb6b84f2427d4e",
    "number": 3641,
    "body": "Translations in Urdu and passing unit tests are added.\r\n\r\n```\r\n┌───────┬───────┬────────────┬────────┬────────┬─────────┐\r\n│ Files │ Tests │ Assertions │ Failed │ Passed │ Runtime │\r\n├───────┼───────┼────────────┼────────┼────────┼─────────┤\r\n│ 1     │ 2892  │ 119091     │ 0      │ 119091 │ 9282    │\r\n└───────┴───────┴────────────┴────────┴────────┴─────────┘\r\nDone, without errors.\r\n```",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1ca8dfb6b84f2427d4f",
    "number": 3640,
    "body": "* `bg-x` locale was accidentally commited.\r\n* `yo` locale didn't have the right comment syntax, and wasn't inserted on the moment website.",
    "head_branch": "rm-bg-x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix comment in Yoruba (yo) locale"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1cb8dfb6b84f2427d50",
    "number": 3638,
    "body": "This fixes the definitions file from breaking changes introduced in #3490. Now the file is somewhat compatible with 2.0 with the use of `void` instead of `undefined`, but unfortunately `null` arguments are not supported with 2.x and `strictNullChecks`, because `null` keyword is not available in 1.x.\r\n\r\nThe typescript definitions will be updated for 2.0 (proper `null` support) with the release of moment 3.x. **NOTE** Any requests to fix the definitions before that will be denied.\r\n\r\n**NOTE2**: For the eager 2.0 ts users -- the definition file includes in comments whether the `void` corresponds to null, undefined, or both. So one can simply write a script to generate a proper 2.0 definition. The scope of this generator is *not* part of the moment team's efforts, so PRs won't be accepted.",
    "head_branch": "fix-ts2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1cb8dfb6b84f2427d51",
    "number": 3628,
    "body": "Adds a link to sign CLA, in case contributor wants to sign it immediately.",
    "head_branch": "feature-sign-cla-link",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #3628 from skfd/feature-sign-cla-link\n\nAdds \"sign CLA\" link to `CONTRIBUTING.md`."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1cc8dfb6b84f2427d52",
    "number": 3620,
    "body": "This increases the performance of startOf / endOf by a factor of about 90 for `'day'`.\r\n\r\nNB : This is my first PR, i'm not sure what I should do, especially regarding proving my call about this performance gain. I see there is a benchmark folder, but I don't know what to do about it. I have run grunt tests successfully on my computer.",
    "head_branch": "performance-start-end-of",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1cd8dfb6b84f2427d53",
    "number": 3615,
    "body": "I hope to address #1048 by porting @jsmreese 's plugin into moment core. Since #3308 closed, I tried to pick up where @butterflyhug left off.\r\n\r\nFeatures \r\n-----\r\n`moment.duration.format([template] [, precision] [, settings])`\r\nfor comparison, see https://github.com/jsmreese/moment-duration-format\r\n\r\n❌ [**REMOVED**] If no template or other arguments are provided, the default template function will generate a template string based on the duration's value.\r\n```\r\nmoment.duration(123, \"seconds\").format();\r\n// \"0:02:03\"\r\n\r\nmoment.duration(123, \"months\").format();\r\n// \"10y 3m\"\r\n```\r\n✔️  `template` (string|function) is the string used to create the formatted output, or a function that returns the string to be used as the format template.\r\n```\r\nmoment.duration(123, \"minutes\").format(\"h:mm\");\r\n// \"2:03\"\r\n```\r\nThe template string is parsed for moment-token characters, which are replaced with the duration's value for each unit type. The default tokens are:\r\n```\r\nyears:   Y or y\r\nmonths:  M\r\nweeks:   W or w\r\ndays:    D or d\r\nhours:   H or h\r\nminutes: m\r\nseconds: s\r\nms:      S\r\n```\r\n✔️ `precision` (number) defines the number of digits to display for the final value.\r\n\r\nThe default precison value is 0.\r\n```\r\nmoment.duration(123, \"minutes\").format(\"h [hrs]\");\r\n// \"2 hrs\"\r\n```\r\nPositive precision defines the number of digits to display to the right of the decimal point.\r\n```\r\nmoment.duration(123, \"minutes\").format(\"h [hrs]\", 2);\r\n// \"2.04 hrs\"\r\n```\r\nNegative precision will truncate the value to the left of the decimal point.\r\n```\r\nmoment.duration(123, \"minutes\").format(\"m [min]\", -1);\r\n// \"120 min\"\r\n```\r\n✔️ `settings` is an object that can override any of the default moment duration format options.\r\n\r\nBoth the `template` and `precision` arguments may be specified as properties of a single settings object argument, or they may be passed separately along with an optional settings object.\r\n```\r\nmoment.duration(123, \"minutes\").format({ template: \"h [hrs]\", precision: 2 });\r\n// \"2.04 hrs\"\r\n```\r\n#### Settings\r\n❌ `trim` (not implemented): Leading tokens are automatically trimmed when they have no value.\r\n❌ `forceLength` (not implemented): Force the first moment token with a value to render at full length, even when the template is trimmed and the first moment token has a length of 1. Sounds more complicated than it is.\r\n❌    `trunc` (REMOVED): Truncates final token value (default is false, does rounding instead)\r\n✔️ `decimalSeparator` (implemented):  string or a function, default detects environment's decimalSeparator from http://stackoverflow.com/questions/1074660/with-a-browser-how-do-i-know-which-decimal-separator-does-the-client-use\r\n✔️  Escape Token (implemented): Define something other than square brackets as escape characters.\r\n✔️  y/m/d/h/m/s/ms tokens (implemented): Define something other than defaults for tokens.\r\n✔️ general default token (implemented): By default, it's `/.+?/`. One can change it in the plugin, but we may not want to allow changes.\r\n❌ [REMOVED] `types` of tokens that are searched (implemented): By default, we are searching for `'escape years months weeks days hours minutes seconds milliseconds general'`.\r\n✔️ You can change the tokens with something like \r\n```\r\nmoment.duration.fn.format.defaults.weeks = /custom+/;\r\n```\r\nor like \r\n```\r\nmoment.duration(1234, 'days').format('custom weeks', { weeks: /custom+/ })\r\n```\r\n\r\n\r\nNotes:\r\n-----\r\n❌ ❓  The format tokens are not default moment tokens. I need to fix this as per CR, but I'm not sure how, since the format tokens all refer to durations.\r\n✔️  (completed) I've taken out all references to `trim` (and `forceLength` and `trunc`). We can add that into core moment later. The behavior is now slightly different than in the plugin.\r\n✔️ (completed) I've added internationalization using `this.localeData().postformat`, similar to other core moment formatting. This should work ok even with the `decimalSeparator` setting.\r\n✔️ ❗️ (for your information) This adds about 2.3K to `moment.min.js` (I think this is ~4.5%). If you need it thinner, let me know.\r\n✔️  (ok'd by @jsmreese) Conversions to months are handled a bit differently! I suppose @jsmreese used 30 days to a month, but it's now something more like 365/12 . So, I adjusted some of the tests to make it pass.\r\n\r\nArchitecturally, this started a bit different than core moment, and this may need more work and discussion. I'm happy to code, but I want to hear from all of you.\r\n",
    "head_branch": "patch-1048",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1ce8dfb6b84f2427d54",
    "number": 3614,
    "body": "There is currently a compilation error when compiling moment.d.ts in TypeScript 2 with strict null checks. \r\n\r\nIn the CalendarSpec interface, the 6 properties have type `CalendarSpecVal | undefined` (the undefined comes from them being optional prperties). \r\nIn TypeScript, if there is a string index type, every property in the same interface must be assignable to the string index type. \r\nAnd `CalendarSpecVal | undefined` is not assignable to `CalendarSpecVal`. \r\n\r\nThis fixes that.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1cf8dfb6b84f2427d55",
    "number": 3612,
    "body": "Just as @jasonkb said in #3608:\r\n\r\n> I am especially concerned about the YYYY年MMMD日Ah点mm分 format when there are 0 minutes -- the relatively common case of a timestamp that is on the hour. This comes out as e.g. \"2016年11月17日下午4点0分\" which is quite awkward -- one would not write it that way, and certainly not speak it that way (the 0分 would be elided). \r\n\r\nThis pull request adds context for longDateFormat so that we could return different format based on context. This pull request also omit 分 when minutes === 0 in longDateFormat of zh-CN.\r\n\r\nThe context object contains 2 fields: context.moment and context.input.\r\ncontext.moment is the moment instance when we format and context.input is the string input when we parse. ",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1d08dfb6b84f2427d56",
    "number": 3611,
    "body": "This was hoping to resolve #3225 \r\n\r\n- Creates an `_isValid` property for durations, and an accessor `isValid()`\r\n- If not valid, create a duration of time `0` and set `._isValid` to `false`\r\n- `.humanize()` will return the translated version of `Invalid Date` if not valid\r\n- `duration(null)`, `duration(undefined)`, `duration()` will all be valid\r\n- `duration(NaN)` is invalid\r\n\r\n",
    "head_branch": "patch-3225",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1d18dfb6b84f2427d57",
    "number": 3608,
    "body": "Time formats like '16:00' are predominant on China, Taiwan, Hong Kong, and Japan websites and apps. Time format like '오후 4:00' is predominant on Korea websites and apps. The current moment.js formats, following pattern of \"4[시点點時] 0[分분]\", are infrequently used for displaying times on CJK websites and apps. In particular, a time with zero minutes like \"4시 0분\", \"4点0分\", or \"4時0分\" is exceedingly awkward.\r\n\r\nThis change also removes an inconsistency in 'calendar' between zh-cn and the two other zh locales (zh-hk and zh-tw). Now 'calendar' will refer to days in the current week in the same way across these three locales. I am roughly familiar with written Chinese as used in CN, TW, and HK, and am not aware of a systematic difference how one refers to calendar days in the current week. Let me know if I'm missing something :)\r\n\r\nThis change also makes the l, ll, lll, llll formats set explicitly to match the L, LL, LLL, LLLL in CJK. This is to avoid incorrect day-of-week abbreviations like \"2010年2月14日午後3時25分 日\" (\"日\" is inappropriate as a standalone word) or \"2010년 2월 14일 일 오후 3시 25분\" (\"일\" is inappropriate as a standalone word).\r\n\r\n@baryon (ja)\r\n@kyungw00k @jeeeyul (ko)\r\n@suupic @zenozeng (zh-cn)\r\n@ben-lin @hehachris (zh-tw and zh-hk)\r\nCould you help review? Thank you :)\r\n\r\nBelow I have collected some evidence that the formats in this PR are appropriate, from various popular websites and apps.\r\n\r\n### ja\r\n\r\nFacebook uses \"16:00\" format.\r\n<img width=\"269\" alt=\"screenshot 2016-11-15 01 32 42\" src=\"https://cloud.githubusercontent.com/assets/1148925/20298484/6d8e6f9c-aad3-11e6-8a49-a8c239b89d19.png\">\r\n\r\nGMail uses \"16:00\" format.\r\n<img width=\"123\" alt=\"screenshot 2016-11-15 23 20 38\" src=\"https://cloud.githubusercontent.com/assets/1148925/20336799/2faa79de-ab8a-11e6-8c2f-c79a5beca1ec.png\">\r\n<img width=\"207\" alt=\"screenshot 2016-11-15 23 20 44\" src=\"https://cloud.githubusercontent.com/assets/1148925/20336803/3245b974-ab8a-11e6-9e4a-511e09019424.png\">\r\n\r\nWikipedia talk pages use \"16:00\" format.\r\n<img width=\"502\" alt=\"screenshot 2016-11-15 22 54 10\" src=\"https://cloud.githubusercontent.com/assets/1148925/20336317/77c75ac4-ab86-11e6-958b-2e6e2312ddb5.png\">\r\n\r\nLine on Japanese-language phone uses \"16:00\" format.\r\n![15129010_10101031834192808_8544315342583548960_o](https://cloud.githubusercontent.com/assets/1148925/20336508/e0aad47a-ab87-11e6-8452-23d06aa2bd95.jpg)\r\n\r\nKakaoTalk on Japanese-language phone uses \"16:00\" format.\r\n![15025430_10101031836458268_223990604552638952_o](https://cloud.githubusercontent.com/assets/1148925/20336567/60c408de-ab88-11e6-9c7a-6193e0c3d477.jpg)\r\n\r\n### ko\r\n\r\nFacebook uses \"오후 4:00\" format.\r\n<img width=\"278\" alt=\"screenshot 2016-11-15 01 49 35\" src=\"https://cloud.githubusercontent.com/assets/1148925/20298945/cc31d758-aad5-11e6-987b-a5fb1c63d8b8.png\">\r\n\r\nTwitter uses \"오후 4:00\" format.\r\n<img width=\"282\" alt=\"screenshot 2016-11-15 23 30 39\" src=\"https://cloud.githubusercontent.com/assets/1148925/20337005/8fce0c30-ab8b-11e6-9ba8-32d037fcfc7b.png\">\r\n\r\nGMail uses \"오후 4:00\" in some places and \"16:00\" format in other places (!)\r\n<img width=\"222\" alt=\"screenshot 2016-11-15 23 17 53\" src=\"https://cloud.githubusercontent.com/assets/1148925/20336742/c8adda28-ab89-11e6-826a-6b7e1f4aa525.png\">\r\n<img width=\"230\" alt=\"screenshot 2016-11-15 23 18 36\" src=\"https://cloud.githubusercontent.com/assets/1148925/20336755/e711ffb2-ab89-11e6-9452-9c5982d07351.png\">\r\n\r\nNaver News uses \"16:00\" format.\r\n<img width=\"239\" alt=\"screenshot 2016-11-15 23 12 29\" src=\"https://cloud.githubusercontent.com/assets/1148925/20336637/0e25ff14-ab89-11e6-8c7b-d99baec76667.png\">\r\n\r\nLine on Korean-language phone uses \"16:00\" format.\r\n![15110938_10101031839746678_5586062181360908786_o](https://cloud.githubusercontent.com/assets/1148925/20336665/45509814-ab89-11e6-8ba8-7cf75421c48c.jpg)\r\n\r\nKakaoTalk on Korean-language phone uses \"16:00\" format.\r\n![15068957_10101031840110948_6324736872530080588_o](https://cloud.githubusercontent.com/assets/1148925/20336681/6976ac88-ab89-11e6-8e61-266157048eec.jpg)\r\n\r\nWikipedia talk pages use \"16:00\" format.\r\n<img width=\"381\" alt=\"screenshot 2016-11-15 23 22 40\" src=\"https://cloud.githubusercontent.com/assets/1148925/20336832/78adb6aa-ab8a-11e6-9d0d-1b1ebb28cc3e.png\">\r\n\r\n### zh-cn\r\n\r\nChinese-language websites (in Simplified and in Traditional) seem to be split about whether they use 12 or 24 hour formats. So it's a judgment call about which to use in moment.js. I recommend using 24 hour format in moment for succinctness.\r\n\r\nPeople's Daily uses 24-hr format.\r\n<img width=\"292\" alt=\"screenshot 2016-11-15 02 01 27\" src=\"https://cloud.githubusercontent.com/assets/1148925/20336109/fa7fbaa8-ab84-11e6-9341-08b66e66d8c5.png\">\r\n\r\nTaobao tracking status uses 24-hr format.\r\n![screenshot 2016-11-15 17 02 15](https://cloud.githubusercontent.com/assets/1148925/20336174/60821dc8-ab85-11e6-9989-fc7a5500aae7.png)\r\n\r\n百度外卖 (Baidu delivery) uses 24-hr format.\r\n![default](https://cloud.githubusercontent.com/assets/1148925/20336227/b34f1664-ab85-11e6-95e0-2d5ab05b625e.png)\r\n\r\nWikipedia talk pages use 24-hr format.\r\n<img width=\"408\" alt=\"screenshot 2016-11-15 22 51 13\" src=\"https://cloud.githubusercontent.com/assets/1148925/20336267/15fe949c-ab86-11e6-9a82-c838a86e77ef.png\">\r\n\r\nGMail uses 24-hr format some places and 12-hr format other places (!)\r\n<img width=\"121\" alt=\"screenshot 2016-11-15 23 24 17\" src=\"https://cloud.githubusercontent.com/assets/1148925/20336864/b16643ae-ab8a-11e6-96d2-abd41940a93f.png\">\r\n<img width=\"189\" alt=\"screenshot 2016-11-15 23 24 51\" src=\"https://cloud.githubusercontent.com/assets/1148925/20336880/c13bc63c-ab8a-11e6-908d-96908f4d46ae.png\">\r\n\r\nFacebook uses 12-hour format.\r\n<img width=\"302\" alt=\"screenshot 2016-11-15 01 52 19\" src=\"https://cloud.githubusercontent.com/assets/1148925/20299015/2a070d12-aad6-11e6-9c4c-4b8c08ea9790.png\">\r\n\r\nTwitter uses 12-hour format.\r\n<img width=\"294\" alt=\"screenshot 2016-11-15 23 32 05\" src=\"https://cloud.githubusercontent.com/assets/1148925/20337038/caf285de-ab8b-11e6-844b-c53bfca5ddeb.png\">\r\n\r\nAlipay uses 12-hour format.\r\n![slack for ios upload](https://cloud.githubusercontent.com/assets/1148925/20336237/d1b024cc-ab85-11e6-9496-e55751453c57.png)\r\n\r\n\r\n### zh-tw and zh-hk\r\n\r\nFacebook uses \"16:00\" format.\r\n<img width=\"288\" alt=\"screenshot 2016-11-15 01 52 50\" src=\"https://cloud.githubusercontent.com/assets/1148925/20299029/3c72ee9e-aad6-11e6-922e-27bda7579f12.png\">\r\n\r\nPixnet.net (seems to be a popular TW site) uses \"16:00\" format, at least in this promotion and blog timestamps.\r\n<img width=\"467\" alt=\"screenshot 2016-11-15 23 37 07\" src=\"https://cloud.githubusercontent.com/assets/1148925/20337156/7b0de008-ab8c-11e6-91b3-0de966c55398.png\">\r\n<img width=\"399\" alt=\"screenshot 2016-11-15 23 38 03\" src=\"https://cloud.githubusercontent.com/assets/1148925/20337165/92594ee6-ab8c-11e6-9d11-ca03e374b93b.png\">\r\n\r\nhkgolden.com (seems to be a popular HK site) uses \"16:00\" format, at least in its forum timestamps and footer.\r\n<img width=\"303\" alt=\"screenshot 2016-11-15 23 39 06\" src=\"https://cloud.githubusercontent.com/assets/1148925/20337190/c0d1c5f0-ab8c-11e6-92b9-0e41715dc83e.png\">\r\n<img width=\"182\" alt=\"screenshot 2016-11-15 23 39 55\" src=\"https://cloud.githubusercontent.com/assets/1148925/20337206/d5bd3cce-ab8c-11e6-9efb-cd1fe171035d.png\">\r\n\r\nGMail uses 24-hr format some places and 12-hr format other places.\r\n<img width=\"128\" alt=\"screenshot 2016-11-15 23 26 06\" src=\"https://cloud.githubusercontent.com/assets/1148925/20336922/028cbfa6-ab8b-11e6-9eef-3529e3b437a0.png\">\r\n<img width=\"234\" alt=\"screenshot 2016-11-15 23 26 14\" src=\"https://cloud.githubusercontent.com/assets/1148925/20336923/05047e72-ab8b-11e6-80c6-37012b747796.png\">\r\n\r\nTwitter uses 12-hr format.\r\n<img width=\"294\" alt=\"screenshot 2016-11-15 23 32 05\" src=\"https://cloud.githubusercontent.com/assets/1148925/20337078/03bf5ff4-ab8c-11e6-9c45-b46383939ddb.png\">",
    "head_branch": "standardizedcjktimeformats",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1d28dfb6b84f2427d58",
    "number": 3605,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1d38dfb6b84f2427d59",
    "number": 3603,
    "body": "Fixes error compile error with 'strictNullChecks' enabled in typescript by declaring the `[x: string]` accessor as being possibly undefined (see #3599).\r\n\r\n ",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1d48dfb6b84f2427d5a",
    "number": 3602,
    "body": "This patch fixes TypeScript definition import when not using the module system (i.e. when using /// <reference path=\"...\" />).\r\n\r\nSigned-off-by: RandomBK <david@david-li.com>",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1d58dfb6b84f2427d5b",
    "number": 3597,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1d68dfb6b84f2427d5c",
    "number": 3595,
    "body": "Hi,\r\n\r\nWe just encountered a bug today where moment was incorrectly parsing year and month fields. The bug was introduced while upgrading to moment v2.16.0.\r\n\r\nWe eventually tracked it down to another library (modular-scale) which was setting a global variable called `value` to a number. The isNumber function in moment is then mistakenly referencing this global value instead of the input value it gets passed. This pull request fixes the problem.\r\n\r\nAll the best,\r\nDavid",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix accidental reference to global \"value\" variable"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1d78dfb6b84f2427d5d",
    "number": 3592,
    "body": "Typescript v2.1.1 compiler is giving me following errors:\r\n\r\n> /src/browser/node_modules/moment/moment.d.ts(63,5): error TS2411: Property 'sameDay' of type 'string | ((m?: Moment | undefined, now?: Moment | undefined) => string) | undefined' is not assignable to string index type 'CalendarSpecVal'.\r\n> /src/browser/node_modules/moment/moment.d.ts(64,5): error TS2411: Property 'nextDay' of type 'string | ((m?: Moment | undefined, now?: Moment | undefined) => string) | undefined' is not assignable to string index type 'CalendarSpecVal'.\r\n> /src/browser/node_modules/moment/moment.d.ts(65,5): error TS2411: Property 'lastDay' of type 'string | ((m?: Moment | undefined, now?: Moment | undefined) => string) | undefined' is not assignable to string index type 'CalendarSpecVal'.\r\n> /src/browser/node_modules/moment/moment.d.ts(66,5): error TS2411: Property 'nextWeek' of type 'string | ((m?: Moment | undefined, now?: Moment | undefined) => string) | undefined' is not assignable to string index type 'CalendarSpecVal'.\r\n> /src/browser/node_modules/moment/moment.d.ts(67,5): error TS2411: Property 'lastWeek' of type 'string | ((m?: Moment | undefined, now?: Moment | undefined) => string) | undefined' is not assignable to string index type 'CalendarSpecVal'.\r\n> /src/browser/node_modules/moment/moment.d.ts(68,5): error TS2411: Property 'sameElse' of type 'string | ((m?: Moment | undefined, now?: Moment | undefined) => string) | undefined' is not assignable to string index type 'CalendarSpecVal'.\r\n\r\nThat's because `sameDay` and other properties have `CalendarSpecVal | undefined` type but string index type is `CalendarSpecVal`.",
    "head_branch": "typings-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1d88dfb6b84f2427d5e",
    "number": 3591,
    "body": "…rSpec type #3589",
    "head_branch": "fix_3589",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1d98dfb6b84f2427d5f",
    "number": 3581,
    "body": "We can update the tests in the next version, but I want the fix in.\r\n\r\nFixes #3463",
    "head_branch": "fix-parse-zone",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix parseZone, redo #3504"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1da8dfb6b84f2427d60",
    "number": 3579,
    "body": "**Work in Progress - DO NOT MERGE**\r\n\r\nRemaining issues:\r\n1. I am still unable to get the tsc task to complete and have to force the release. I have tried various environment paths and even tried installing typescript as a global module without joy.\r\n2. For RFC2822 to be valid and given day-of-week has to be consistent with the day-by-date. I have a negative test case and appropriate code (both disabled) but the latter depends on instantiating a moment object that I am unable to do. \r\n\r\nAny advice on the above would be gratefully received. ",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1db8dfb6b84f2427d61",
    "number": 3573,
    "body": "And we're not using it anyway.\r\n\r\nWith esprima: 8.2s\r\nWith rollup only: 13.3s\r\nWith rollup+babel: 40s",
    "head_branch": "rm-babel",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove babel from rollup+babel combo to speed up build (and we're not using it anyway)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1dc8dfb6b84f2427d62",
    "number": 3571,
    "body": "In #3559 @ichernev stated that he would prefer using an `isNumber`\r\nutility function over a naive type check.\r\n\r\nThis pull request actualizes that preference.\r\n\r\nOur new `isNumber` function is slightly more robust than a simple type\r\ncheck. For example, it will also correctly identify wrapped number\r\nprimitives.\r\n\r\nhttps://javascriptweblog.wordpress.com/2010/09/27/the-secret-life-of-javascript-primitives/",
    "head_branch": "is-number",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1dd8dfb6b84f2427d63",
    "number": 3570,
    "body": "In #3559 @ichernev stated that he would prefer two strict comparisons\r\n(to `true` and `false`) over checking the type.\r\n\r\nThis pull request actualizes that preference.",
    "head_branch": "bool-check-develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1dd8dfb6b84f2427d64",
    "number": 3567,
    "body": "https://github.com/moment/moment/pull/3545#issuecomment-258198233\r\n\r\nNode 0.10 is dead. Long live Node!",
    "head_branch": "drop-0.10-travis",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1de8dfb6b84f2427d65",
    "number": 3565,
    "body": "Work in Progress - Do Not Merge\r\nAdvice requested - Why is my RFC2822 test failing?",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1df8dfb6b84f2427d66",
    "number": 3563,
    "body": "Fixes common mistake described in http://esadir.cat/entrades/fitxa/id/1496\r\n\r\nOriginal PR was #3446 ",
    "head_branch": "devel",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1e08dfb6b84f2427d67",
    "number": 3562,
    "body": "TypeScript does not allow for the \"isoWeek\" unit of time and causes an error when trying to compile\r\n\r\n[StartOf Documentation](http://momentjs.com/docs/#/manipulating/start-of/)\r\n\r\nBefore this change simply trying to use \r\n\r\n`let date = moment().year(2016).dayOfYear(271).startOf('isoWeek').toDate() `\r\n \r\nWould cause TypeScript to throw this error \r\n\r\n`Argument of type '\"isoWeek\"' is not assignable to parameter of type '\"s\" | \"year\" | \"years\" | \"y\" | \"quarter\" | \"quarters\" | \"Q\" | \"month\" | \"months\" | \"M\" | \"week\" |...'.`",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1e18dfb6b84f2427d68",
    "number": 3561,
    "body": "It'd be great if it could be merged or added from your side",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1e28dfb6b84f2427d69",
    "number": 3560,
    "body": "Found that it was impossible to pull in the moment declaration into Typescript application reliably, and it didn't appear to have the module declaration.  This adds the declaration along with fixing the test script.  Tested under Typescript 1.8 and 2.0.",
    "head_branch": "bugfix/fix-module-reference",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1e38dfb6b84f2427d6a",
    "number": 3559,
    "body": "`typeof` is an operator not a function. Removing the unneeded parenthesis\r\nmakes this clear. Additionally, using `typeof` to check for undefined\r\nvalues rather than checking equality to `undefined` is safer. Comparing\r\nto `undefined` can be broken if someone assigns to `window.undefined`.",
    "head_branch": "undefined-unify",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1e48dfb6b84f2427d6b",
    "number": 3558,
    "body": "Hello. We need Ukrainian localization, so we translate it from ru.",
    "head_branch": "localization_ua",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1e58dfb6b84f2427d6c",
    "number": 3556,
    "body": "It'd be great if it could be merged or added",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1e68dfb6b84f2427d6d",
    "number": 3548,
    "body": "This is an implementation of moment/moment-rfcs#2, which was written to address #1754.  This is obviously a breaking API change that would require a new major version number (e.g. \"3.0\").\n\nThe only major change from the RFC draft's discussion is that `moment.updateOffset()` and `moment.duration()._bubble()` will now return moment and duration objects, respectively.  Otherwise it's pretty much impossible for external code to customize the behavior of these hooks.\n\nFeedback welcome!  :smiley:\n",
    "head_branch": "immutability",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1e78dfb6b84f2427d6e",
    "number": 3546,
    "body": "This is a minimalistic redo of #3336 without the crazy test scaffolding.\n\n@skfd what do you think.\n\nI'd wait and see if users are happy, there are a few ways to improve it, but if that works I'm happy to leave it.\n",
    "head_branch": "fix-locale-race",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1e88dfb6b84f2427d6f",
    "number": 3545,
    "body": "This gets rid of the annoying deprecation warning. It also makes the build slower ... I think its a conspiracy with computer vendors ;-)\n\nThe transpiling is done slightly cleaner now. Unfortunately we still need to hack the headers for a lack of customizability on rollup's part.\n",
    "head_branch": "babel-redo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1e98dfb6b84f2427d70",
    "number": 3543,
    "body": "Redo #3261\n",
    "head_branch": "ar-sa-dow",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1ea8dfb6b84f2427d71",
    "number": 3538,
    "body": "Fixes issue #3531.\n\nInstead of copying `meteor/package.js` into the root directory and publishing from there, the Grunt script should run `meteor publish` from the `meteor/` directory. This commit implements the changes necessary to make that work.\n\nThe most important benefit of this change is that the nearly 200MB of `node_modules` in the root `moment` directory will not accidentally be published along with the Meteor package. This behavior is new in 1.4.2, and was an intentional change, but unfortunately it means `momentjs:moment@2.15.2` is very large, and even unusable for some developers.\n\nI work for Meteor Development Group, and this is a popular package in our developer community, so I hope you'll consider merging this pull request quickly.\n\nIf you want to test these changes (in particular the reduction in package size), I've published an identical package called `benjamn:moment`, which you can add to any Meteor app:\n\n``` sh\nmeteor create test-app\ncd test-app\nmeteor add benjamn:moment\ndu -chs $(which meteor)/../packages/benjamn_moment\nmeteor run\n```\n",
    "head_branch": "fix-issue-3531",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1eb8dfb6b84f2427d72",
    "number": 3534,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1ec8dfb6b84f2427d73",
    "number": 3533,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1ed8dfb6b84f2427d74",
    "number": 3532,
    "body": "moment.duration(NaN).humanize() returns \"a few seconds\"\n\n-- wrote test\n\n-- have not yet resolved.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1ee8dfb6b84f2427d75",
    "number": 3530,
    "body": "Fixes the issue as demonstrated here: https://jsfiddle.net/r6wpn9un/\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1ef8dfb6b84f2427d76",
    "number": 3526,
    "body": "1. Add definitions ([source](https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/moment/moment.d.ts)) and tests (own) for `moment.localeData()`\n2. Fix definition for `moment().diff()` to allow other input types besides `Moment` (own).\n3. Add intermediate type `MomentComparable` for re-use ([source](https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/moment/moment.d.ts)).\n\nNote: I haven't looked into all the differences between this definition file and the one on DefinitelyTypes. It would be great to have them converged.\n",
    "head_branch": "fix-definitions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1f08dfb6b84f2427d77",
    "number": 3525,
    "body": "Reduce `(\\s+)+` in RegExp to `(\\s)+` to speed them up.\n",
    "head_branch": "speedup-regex",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Speedup lithuanian month standalone/format RegExp"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1f18dfb6b84f2427d78",
    "number": 3524,
    "body": "\"attent a montly meeting\" > \"attend a monthly meeting\"\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1f28dfb6b84f2427d79",
    "number": 3523,
    "body": "Fix for #3520 and #3521, where `parseZone` doesn't handle UTC correctly. Specifically, we need to treat parsing `0` out of the string differently from failing to parse it at all.\n",
    "head_branch": "parseZone",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1f38dfb6b84f2427d7a",
    "number": 3519,
    "body": "Community help welcome.\n\nStart of conversion from Esparanto to Babel. Works for individual files, but combined files (moment-with-locales etc) are not working.\n",
    "head_branch": "babel",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1f48dfb6b84f2427d7b",
    "number": 3518,
    "body": "",
    "head_branch": "babel",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #3518 from maggiepint/babel\n\nStart of babel conversion"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1f48dfb6b84f2427d7c",
    "number": 3517,
    "body": "Start of Babel convert. Individual files work fine, but the combined files are having problems with declarations of globals.\n\nWill take help.\n",
    "head_branch": "babel",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1f58dfb6b84f2427d7d",
    "number": 3515,
    "body": "This is an alternative to Pull Request #3406 which adds one improvement:\n\nIt updates Brian Schemp's patch calculates the current week once\ninstead of twice for a small performance boost.\n",
    "head_branch": "hotfix-issue-2300",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1f68dfb6b84f2427d7e",
    "number": 3513,
    "body": "Issue #2530 initial development supplied for feedback.\n",
    "head_branch": "#2530_RFC2822",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1f78dfb6b84f2427d7f",
    "number": 3510,
    "body": "locale for Chile es-cl\n\nDate separator is  \"-\" instead of \"/\" used in Standard Spanish.\nHour format is 24 hour.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1f88dfb6b84f2427d80",
    "number": 3508,
    "body": "Discussed in #2522, these two new methods (`next()` and `previous()`) should help those who want to calculate 'last Wednesday' or 'Sunday in two weeks'. It's similar to `day()` in usage, but isn't confined to the current week. So on Saturday, every day you request using `next()` will be in the next week (assuming Sunday as 0). In addition, it takes a second parameter which determines the offset in weeks.\n\n**Next and previous methods**\nThese methods take two parameters, day (string or number) and offset in weeks (number). It defaults to the current day, exactly one week from now. The optional offset in weeks shifts the result by 7 days forward or backward.\n\n``` javascript\nmoment().next(day, offset)\nmoment().previous(day, offset)\n```\n\n**Examples**\nGiven today's date (2016-10-17) we can do the following:\n\n``` javascript\nmoment().next() // Monday 24th\nmoment().next(\"Wednesday\") // Wednesday 19th\nmoment().next(0, 1) // Sunday 30th\nmoment().previous() // Monday 10th\nmoment().previous(4, 2) // September 29th\n```\n",
    "head_branch": "feature-prev-next",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1f98dfb6b84f2427d81",
    "number": 3506,
    "body": "- `toDate`, `valueOf`, and `unix` methods now return invalid when called on invalid moments\n- Addresses #3430 \n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1fa8dfb6b84f2427d82",
    "number": 3505,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1fb8dfb6b84f2427d83",
    "number": 3504,
    "body": "This fix assumed that the flow control was failing to correctly handle `0` offsets and was interpreting them as falsey when we didnt it want it to ^^\n",
    "head_branch": "development",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1fc8dfb6b84f2427d84",
    "number": 3503,
    "body": "",
    "head_branch": "firstdayofweek-method",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1fd8dfb6b84f2427d85",
    "number": 3502,
    "body": "Before the fix, date strings which started with a valid ISO pattern but ended with non-conforming data would pass as valid ISO dates and not trigger the deprecation warning, causing garbage-in/garbage-out bugs and silent failure.\n\nExample of a garbage date which was considered Valid ISO before:\n\n```\n 2016-01-Just a bunch of junk\n```\n\nExample of silent failure cases:\n\n```\n2016-12-4 would be match the \"YYYY-MM\" ISO pattern, so would silently become \"2016-12-1\". \n2000-01-01T11:00:00 PM would match the \"  2000-01-01T11:00:00\" ISO pattern, silently turning 11 PM into 11 AM. \n```\n\nNon of the above cases trigger the \"non-ISO deprecation warning\", either. \n\nBecause of the nature of how the related tests are put together, the newly added test _passes_ even before the fix is applied.\n\nThis happens because the \"non-ISO\" tests are tested against the same ISO regex which is being fixed.\n\nBecause the broken regex is also used in the test, it allowed the non ISO date to be validated before the fix.\n\n---\n\nThis fix exposed another problem with non-ISO dates in the test suite, so it causes 3 other test failures, which are now fixed, too. The other test failures are in:\n\n  test/moment/is_same_or_before.js\n  test/moment/is_same_or_after.js\n\nAll concern dates which look like this:\n\n   2013-02-01T-05:00\n\nFrom what I can tell, it is not valid IS0 8601 to include a timezone offset without a time. The references I checked included:\n- The moment test suite, which has an extensive set of ISO 8601 cases to test\n- IS0 8601 wikipedia page\n- Attempt an IS0 8601 ABNF grammar http://www.egenconsulting.com/ietfcns.nsf/0bd281b2cc02b86a852564060002ca3d/cfcc618830db7cc5852563fb00584230?OpenDocument\n\nThese tests were updated to avoid this invalid date format after @icambron agreed the dates were not ISO format but should be. \n",
    "head_branch": "fix-3500-iso-regex-problem",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1fe8dfb6b84f2427d86",
    "number": 3501,
    "body": "because we just simply need it in typescript. tnx\ndon`t enforce MomentLanguage cause it makes lots of error on your existing locale. that is why I did put any as a type for locale property.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa1ff8dfb6b84f2427d87",
    "number": 3498,
    "body": "Changed the sentence construction for calendar time translation\n\n@hagmandan please verify, Thanks\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2008dfb6b84f2427d88",
    "number": 3492,
    "body": "",
    "head_branch": "kannada_locale",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2018dfb6b84f2427d89",
    "number": 3490,
    "body": "Fixes #3419.\n\nTo my understanding, this fixes ALL typescript issues for the current version.\n\nOpen for comments.\n\nI have a few open questions:\n- for somebody actually using typescript (with ide and the like), is the moment constructor defined in a usable fashion? The more indirect types are used, the more the user doesn't know what is actually a possible value for an argument.\n\n``` ts\nfunction(a: number): void;\nfunction(a: string): void;\n\n// vs\n\ntype X = number | string;\nfunction(a: X);\n```\n- is there a good way to declare what has been deprecated in comments\n- can you pull things out of a namespace (like using std::sort in C++ to pull out sort out of std and make it usable with namespace prefix).\n\n@blakeembrey @gdi2290 @Guria\n",
    "head_branch": "fix-ts",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2028dfb6b84f2427d8a",
    "number": 3486,
    "body": "**Work in Progress**\n\nHi @mj1856 @maggiepint \n\nThis PR is in reference to #3483 \n\nPlease review the current changes and let me know if this hack seems to be doing the trick. Also, let me know of any other steps I need to take to make this PR ready for a merge. Thanks :)\n",
    "head_branch": "fix-3483",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2038dfb6b84f2427d8b",
    "number": 3485,
    "body": "I am a native Arabic speaker. The calendar text in Arabic has been corrected to the way people actually use it and understand it.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2048dfb6b84f2427d8c",
    "number": 3472,
    "body": "Hi! I've seen issues for noobies. At first I didn't understand why this future is so needed, but now I do: if you want to show shorter dates (with 2 digits for year) in some places you have to use format and directly check the locale. I saw some pull requests for it early but they were writed only for few locales and without reading of contribute guide. I hope it's complex solution.\n",
    "head_branch": "localized-mm-dd-yy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2058dfb6b84f2427d8d",
    "number": 3466,
    "body": "Jawa language is Javanese not Japanese.\n\nRelated: https://github.com/moment/momentjs.com/pull/361\n",
    "head_branch": "fix/japanese-javanese",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2068dfb6b84f2427d8e",
    "number": 3465,
    "body": "To fix issue #3464 \n",
    "head_branch": "fix-dts-utcOffset",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2068dfb6b84f2427d8f",
    "number": 3460,
    "body": "I had missed `isNaN`, but I noticed it here https://github.com/moment/moment/commit/6d2ef540937c230d9ded54493c85c4bea55970d9\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2078dfb6b84f2427d90",
    "number": 3456,
    "body": "Related to #3419\n- Move out `defineLocale()` and  `updateLocale()`  to outer scope;\n- Change `defineLocale()` and `updateLocale()` return type to `MomentLanguageData`;\n- Add `MomentLanguageDefinition` (extended from `MomentLanguage`) interface with `parentLocale` property specifically for `defineLocale()`;\n- Make `updateLocale()` second argument `locale` optional.\n",
    "head_branch": "fix-locale-methods",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2088dfb6b84f2427d91",
    "number": 3454,
    "body": "This will make using the moment package with typings a whole lot easier.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2098dfb6b84f2427d92",
    "number": 3448,
    "body": "As they are not needed in production, so they will not appear in installed package \n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa20a8dfb6b84f2427d93",
    "number": 3447,
    "body": "#3319\n\nUpdate moment.d.ts\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa20b8dfb6b84f2427d94",
    "number": 3446,
    "body": "Fixes common mistake described in http://esadir.cat/entrades/fitxa/id/1496\n\nAlso added new newline character at the end of file.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa20c8dfb6b84f2427d95",
    "number": 3445,
    "body": "This change renames the `UnitOfTime` to two different types, `DurationUnit` and `MomentUnit`.   Let me know if there is a better / different name to use, I don't care about 🚲 shedding.\n\nWith this change we can now call `moment.get('dayOfYear')` with type safety.  It also clarifies what a unit is for, most methods on a moment, only support duration units (since they use those under the covers) but `get`/`set` support the extended unit set.\n",
    "head_branch": "units-of-time",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa20d8dfb6b84f2427d96",
    "number": 3443,
    "body": "https://en.wikipedia.org/wiki/ISO_week_date\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa20e8dfb6b84f2427d97",
    "number": 3442,
    "body": "This is a small change to add the default localized formats as signature methods for `format`.    This is mainly just a convenience change to make it apparent to TypeScript users, that there are some default formats available without having to drop back to the docs.  (Which are amazing by the way!)\n\nThe other small change was to make `moment.utc()` match the definition for `moment()`.\n\nAlso... thanks for making this wonderful library, anytime I have to do more than 3 things with a Date in JavaScript I just grab `moment`. 👍 ❤️ \n",
    "head_branch": "format-tokens",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa20f8dfb6b84f2427d98",
    "number": 3438,
    "body": "This is a redo of #3344 that doesn't (hopefully) break karma + phantomjs -- #3431.\n@ljharb @yiminghe let me know if that works for both of you.\n",
    "head_branch": "fix-locale-autoload",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2108dfb6b84f2427d99",
    "number": 3436,
    "body": "… Date\n\nFixes bug reported by @dagstuan\n\nIDK what you people are doing for tests, it's very complicated to figure out where to put a test. meteor-test, typescript-test, grunt file test task, qtest, karma w/ qunit... meanwhile no test directory, no test folder anywhere? No spec files? \n\nBut if you could just add a test like\n\n`expect(isDate(new Date('asdf')).to.be.false`\n\nThis will prove this code is working.\n\nCheers\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2118dfb6b84f2427d9a",
    "number": 3435,
    "body": "",
    "head_branch": "add-yoruba-locale",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2128dfb6b84f2427d9b",
    "number": 3429,
    "body": "Change the first day of the year and related tests to\nmatch the right Hungarian week of the year calculation.\n",
    "head_branch": "update-hu-locale",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2138dfb6b84f2427d9c",
    "number": 3427,
    "body": "Another set of patches to make IE8 work. Apparently it was broken for 2.14.x release because of the locale inheritance refactor.\n",
    "head_branch": "fix-ie8",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2148dfb6b84f2427d9d",
    "number": 3424,
    "body": "",
    "head_branch": "add-yoruba-locale",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2158dfb6b84f2427d9e",
    "number": 3420,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2168dfb6b84f2427d9f",
    "number": 3418,
    "body": "When using a custom format function for the [calendar](http://momentjs.com/docs/#/displaying/calendar-time/) method, the format function will be passed `now`, which is expected to be a Moment.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2178dfb6b84f2427da0",
    "number": 3416,
    "body": "These changes address issue https://github.com/moment/moment/issues/3410:\n- Renames nl locale to **nl-nl** for Dutch (**Netherlands**) locale\n- Creates **nl-be** for Dutch (**Belgium**) locale\n\n_**References for nl-be locale:**_\n- Locale Planet reference: http://www.localeplanet.com/java/nl-BE/\n- IBM Documentation of nl-be: http://www.ibm.com/support/knowledgecenter/SSS28S_3.0.0/com.ibm.help.forms.doc/locale_spec/i_xfdl_r_formats_nl_BE.html\n\n_**References for nl-nl locale:**_\n- Locale Planet nl-nl reference: http://www.localeplanet.com/java/nl-NL/\n- IBM Documentation of nl-nl: http://www.ibm.com/support/knowledgecenter/SSS28S_3.0.0/com.ibm.help.forms.doc/locale_spec/i_xfdl_r_formats_nl_NL.html\n\nHow does this look to you @jorisroling, @middagj?\n",
    "head_branch": "migrate-nl-locales",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2188dfb6b84f2427da1",
    "number": 3408,
    "body": "- add 'week' object to 'pt-br' locale with property 'dow' as 0.\n- add test for it\n\nfixes [#3400](https://github.com/moment/moment/issues/3400)\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2198dfb6b84f2427da2",
    "number": 3407,
    "body": "- Change LT time format from 12:30 to 12 h 30\n- Change LTS time format from 12:30:15 to 12 h 30 min 15 s\n- Updated tests accordingly\n\n@jfroffice , can you please review?\n\nThank you!\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa21a8dfb6b84f2427da3",
    "number": 3406,
    "body": "Default to current week when parsing without a month, day or year.\n\nThe following will default to the Thursday of the current week:\n\n``` js\nvar d = moment('Thursday 8:30pm', ['dddd h:mm a'], 'en');\n```\n\nFixes: #2300\n",
    "head_branch": "hotfix-issue-2300",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa21b8dfb6b84f2427da4",
    "number": 3404,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #3404 from anotheredward/patch-1\n\nadd license to bower.json"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa21b8dfb6b84f2427da5",
    "number": 3398,
    "body": "The translation team I'm working with is interested in shortening the time format in Thai to H:mm as opposed to written out with 'hours' and 'minutes'. \n\n@sirn Let us know if this is an acceptable change.\n",
    "head_branch": "shorten-thai-LT",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa21d8dfb6b84f2427da6",
    "number": 3397,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa21d8dfb6b84f2427da7",
    "number": 3396,
    "body": "Includes the following corrections to the Galician locale (@juanghurtado):\n- Months and days of week changed to lowercase (references below)\n- \"en\" + \"un*\" contraction for future times has been generalized\n- Corrected first week of the year (ISO 8601)\n\nBoth source and test code have been updated.\n\nReferences for lowercase months and days:\n- Real Academia Galega:\n  http://academia.gal/dicionario#searchNoun.do?nounTitle=mes\n  http://academia.gal/dicionario#searchNoun.do?nounTitle=semana\n- Manual de estilo Diario Oficial de Galicia: http://wikidog.xunta.es/index.php/Mai%C3%BAscula_e_min%C3%BAscula_en_inicial_de_palabra#Divisi.C3.B3ns_temporais.2C_etapas.2C_acontecementos_hist.C3.B3ricos.2C_festividades_conmemorativas_e_relixiosas\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa21e8dfb6b84f2427da8",
    "number": 3394,
    "body": "Looks like release files are a constant pain for newcomers. This PR proposes a  way to make development smoother.\n\nMost developers will have minified files ignored by default. Release person will be able to run `grunt exec:git-include-minified` to be able to push them.\n\nTODO: I'm not sure if it should be ran on `grunt release` too. Also read.me would have to be changed by English speaking person.\n\nWhat do you think?\n",
    "head_branch": "ignore-minified",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa21f8dfb6b84f2427da9",
    "number": 3393,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2208dfb6b84f2427daa",
    "number": 3392,
    "body": "Please add Urdu language translation which i have commited. \n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2218dfb6b84f2427dab",
    "number": 3388,
    "body": "This PR is based on an issue I originally report for moment-recur.\nhttps://github.com/c-trimm/moment-recur/issues/42#issuecomment-241264909\n\nThe warning message is updated to provide more detail and clarity.\nThe deprecation message function expands one level of detail for any argument that is an object.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2228dfb6b84f2427dac",
    "number": 3383,
    "body": "A small fix so that moments can be serialized with `JSON.stringify` after `Object.freeze` has been used on it.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2238dfb6b84f2427dad",
    "number": 3382,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2248dfb6b84f2427dae",
    "number": 3381,
    "body": "Calling parseZone without a timezone had unexpected results. Followed guidelines from #3083 for correcting the issue.\n\nFixes: #3083\n",
    "head_branch": "hotfix-issue-3083",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2258dfb6b84f2427daf",
    "number": 3378,
    "body": "Hopefully this patch will fix the home page too (it currently has 2 entries called \"Japanese\").\n",
    "head_branch": "fix-jv",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2268dfb6b84f2427db0",
    "number": 3377,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2278dfb6b84f2427db1",
    "number": 3374,
    "body": "`moment().set('date' , 1)` yields the first day of the month as documented at http://momentjs.com/docs/#/get-set/set/\nI tried the 'dates' and 'D' alternatives in moment@2.14.1 and they have the same behavior.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2288dfb6b84f2427db2",
    "number": 3372,
    "body": "I had a specific need to test and understand the relative cost of several operations in moment for one of the applications I am working on. I felt it would make sense to offer some of these benchmarks back upstream. \n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2298dfb6b84f2427db3",
    "number": 3371,
    "body": "code example:\n\n``` ts\n/// <reference types=\"moment\"/>\nmoment();\n```\n\nthe error message is `can not find moment`\nso I compare it with some similar library's typings, eg, socket.io-client(https://github.com/DefinitelyTyped/DefinitelyTyped/blob/master/socket.io-client/socket.io-client.d.ts) it declares a module('socket.io-client'), so I tried to do something similar, it did fix the error.\n\nand it doesn't affect:(nodejs-side)\n\n``` ts\nimport * as moment from \"moment\";\nmoment();\n```\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa22a8dfb6b84f2427db4",
    "number": 3369,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa22b8dfb6b84f2427db5",
    "number": 3366,
    "body": "fixed typos\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa22c8dfb6b84f2427db6",
    "number": 3365,
    "body": "fixed typos\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa22d8dfb6b84f2427db7",
    "number": 3363,
    "body": "Fix weekdaysMin to default brazilian use!\n\nSee windows 7 pt-br example:\n\nhttps://cdn.img42.com/9c121c8c9de9cff1fc499ae3d4736308.jpeg\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa22e8dfb6b84f2427db8",
    "number": 3361,
    "body": "This is a first crack at fixing #3288.\n\nThoughts or feedback appreciated :)\n",
    "head_branch": "drop-ie8-yay-3288",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa22f8dfb6b84f2427db9",
    "number": 3356,
    "body": "First time making a PR for moment and I tried to follow the contributing guidelines as much as possible. Since #3329 changed format, the PR failed those tests. Is there a need to rewrite those tests so that the new convention is followed? Thanks\n\nSigned-off-by: shaishavgandhi05 shaishgandhi@gmail.com\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2308dfb6b84f2427dba",
    "number": 3352,
    "body": "changed from src\nwe need to fix the day sequence to match the real day and not just visually. the problem is the calendar appears to be like \nAugust 2016\nFr    Sa    Su    Mo    Tu    We    Th\n31    1     2       3      4      5      6\n\nFriday is supposed to be the 5th of the month\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2318dfb6b84f2427dbb",
    "number": 3351,
    "body": "- Usually korean writes `one minute` as `1분` not `일분`\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2328dfb6b84f2427dbc",
    "number": 3350,
    "body": "fixed korean long date format.  \n",
    "head_branch": "korean_long_date_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2328dfb6b84f2427dbd",
    "number": 3345,
    "body": "I was looking into upgrading the declaration file on DefinitelyTyped so it matched version 2.14. \nAfter I had done most of that, I noticed that you have a more up-to-date version of the declaration file here. \n\nYou had implemented most of the changes that I found, but there was still 3 small things missing from the declaration file here. \n\nAdded locales, new since 2.12\nAdded a new overload of isoWeekday, which is possible since the input is passed through `parseIsoWeekday` since 2.14\nAdded defaultFormatUtc, new since 2.13.\n",
    "head_branch": "updateTo214",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2338dfb6b84f2427dbe",
    "number": 3344,
    "body": "incase some web package tools inconvenience.\n\nhttp://stackoverflow.com/questions/25384360/how-to-prevent-moment-js-from-loading-locales-with-webpack/25426019#25426019\n\nhttps://github.com/webpack/webpack/issues/198\n\nhttps://nodejs.org/dist/latest-v4.x/docs/api/modules.html#modules_module_require_id\n\n@ichernev\n",
    "head_branch": "module_require",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2348dfb6b84f2427dbf",
    "number": 3342,
    "body": "Credit to @marobo for initial release\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2358dfb6b84f2427dc0",
    "number": 3340,
    "body": "fixed typos\nhttps://pl.wikipedia.org/wiki/Sobota\nhttps://pl.wikipedia.org/wiki/Niedziela\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2368dfb6b84f2427dc1",
    "number": 3339,
    "body": "Adds tests to cover the creation of a moment with a format when the input is undefined.\n\nfixes #3338\n",
    "head_branch": "fix-issue-3338",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2378dfb6b84f2427dc2",
    "number": 3337,
    "body": "Fixes bug #3283: moment.min.js download contains comments .\n",
    "head_branch": "feature-minify-without-comments",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2388dfb6b84f2427dc3",
    "number": 3336,
    "body": "Here's a test case that crashes with `Unexpected deprecation thrown name=parentLocaleUndefined msg=specified parentLocale is not defined yet.`\n\nThat breaks the real-life scenario where localisation `zh-hk` depends on `zh-tw`. But child localisation definition goes before parent in the minimised file.\n",
    "head_branch": "feature-parentLocale-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2398dfb6b84f2427dc4",
    "number": 3333,
    "body": "Adds `zh-hk` support by copying `zh-tw` definition and tests.\n\nI'm aware of [parentLocale](https://github.com/moment/moment/pull/2774) option. But combination of `parentLocale` option and `localeModule` test helper is buggy for me. Will try to report the issue in separate pull request as a test case.\n",
    "head_branch": "feature-loc-zh-hk",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa23a8dfb6b84f2427dc5",
    "number": 3327,
    "body": "the sequence of days doesn't match the real day of the week. so it needs to be updated as the same locale file of Tunisia moment/locale/ar-tn.js\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa23b8dfb6b84f2427dc6",
    "number": 3326,
    "body": "There was a typo in the Javanese localization (JaPanese instead of JaVanese), which percolated all the way to the momentjs.com site source, causing \"Japanese\" to appear twice in the list.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa23c8dfb6b84f2427dc7",
    "number": 3323,
    "body": "This commit was adapted from 1ec036686e70ad0d837ed2443684d54bca13af01 in DefinitelyTyped.\nSee https://github.com/DefinitelyTyped/DefinitelyTyped/pull/8765 for context. The original\nbody of the commit message follows.\n\nThese changes do two things.\n1. Replace very lax typings like `any[]` with stricter, more-correct versions. In particular,\n   the `ISO_8601` constant, while _technically_ a void function, is actually an opaque sentinel\n   that a consumer should not know anything about it. The function type was replaced with a\n   sentinel type using the principle of \"brands\" that can be seen in the Typescript compiler:\n   https://github.com/Microsoft/TypeScript/blob/413d9a639f933df7539070b236c1677de8302a93/src/compiler/types.ts#L9\n2. Replace the many overloads of the parsing methods with a smaller representative set that\n   uses union types instead. Aside from succinctness, this allows callers to provide a union\n   type as the argument, as long as it matches, which was not possible before (Typescript does\n   not explode the union type to see if overloads cover all the possibilities).\n",
    "head_branch": "union-types-for-typings",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa23d8dfb6b84f2427dc8",
    "number": 3322,
    "body": "Added Release dates in the changelog for help in [#2330](https://github.com/moment/moment/issues/2330)\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa23e8dfb6b84f2427dc9",
    "number": 3319,
    "body": "Add missing definition for isoWeek to UnitOfTime type definition.\n",
    "head_branch": "ts-definitions-patch",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa23f8dfb6b84f2427dca",
    "number": 3317,
    "body": "During the cleanup of the comments, the name was changed from siSwati to Swazi. \n\nA Swazi is a person and siSwati is the language.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2408dfb6b84f2427dcb",
    "number": 3316,
    "body": "The #creationData() function is documented but it is missing in the Typings.\n\nI couldn't find the structure of the `locale`-property in the documentation, so I omitted it in this first attempt. If anyone gives me a hint, I will add it.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2418dfb6b84f2427dcc",
    "number": 3315,
    "body": "otherwise jspm will not install the typedefinitions\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2418dfb6b84f2427dcd",
    "number": 3312,
    "body": "This possibly fixes the issue #3284. Can you please verify it @icambron ?\n\nIn the absence of a moment parameter, it returns a locale specific list.\n",
    "head_branch": "fix/3284",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2428dfb6b84f2427dce",
    "number": 3310,
    "body": "@kaushikgandhi See if everything's okay?\n",
    "head_branch": "locale_bn_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2438dfb6b84f2427dcf",
    "number": 3308,
    "body": "See #1048.\n\nA quick pass at converting @jsmreese's plugin into the Moment module system and stripping out the obviously duplicated code vis-a-vis Moment's existing helper functions, etc.  I also arbitrarily yanked out the \"precision\" config option, because I didn't want to keep the `padZero` function that was mostly a duplicate of Moment's `zeroFill`, and I didn't care to rework that bit of code right now.\n\nThis currently adds 4.8KB to the minified build, which is about +8% of the existing codebase.  That seems a little heavy given our concerns about file size.  On the other hand, there are a number of comments in the code, so this stat may be overstating the actual impact on file size.\n\nI still need to port the tests before we merge this, but I probably won't bother to do so until we decide if the file size impact is prohibitive.\n",
    "head_branch": "duration-format",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2448dfb6b84f2427dd0",
    "number": 3303,
    "body": "Apparently this got lost when `UnitOfTime` was created. `Day` in dates only refers to the day of the week, while `Date` refers to the day of the month.\n\nThis pull request adds `date` back as an allowed unit.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2458dfb6b84f2427dd1",
    "number": 3299,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2468dfb6b84f2427dd2",
    "number": 3282,
    "body": "as discussed in https://github.com/moment/moment/pull/3280 with @ichernev\n\nThese tests are triggered after the grunt test task. The basis of the tests were the DefinitelyTyped moment tests found [here](https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/moment).  Plugging this in revealed a few missing elements of the `moment.d.ts` Typing file.  I have added these in based on the definition in DT.\n\nHope this helps.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2478dfb6b84f2427dd3",
    "number": 3280,
    "body": "The TypeScript typings in 2.14.0 are incorrect and breaking our builds. This should fix the issue.\n\nThanks for all the hard work ❤️ \n",
    "head_branch": "fix_typings",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #3280 from todd/fix_typings\n\nFix Typescript definitions"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2488dfb6b84f2427dd4",
    "number": 3276,
    "body": "Fixes #3266 \n\n~~Note: The rounding behavior described in https://github.com/moment/moment/issues/3266#issuecomment-229423853 is not currently included in this PR, because it would break a number of existing tests. For example, with the proposed rounding behavior, the duration parsed in [this test](https://github.com/moment/moment/blob/9c04c825ca7d3435c56badb1dc62d844d7ac1c32/src/test/moment/duration.js#L181) would have `seconds = 5` and `milliseconds = 0`.~~\n\n~~I can add the rounding behavior and change those tests if desired, but that might be considered a breaking change, so I thought it was worth bringing up the issue first. At the moment, extra millisecond digits are simply truncated rather than being rounded.~~\n\n_edit_: The rounding behavior has been added to this PR.\n",
    "head_branch": "issue3266",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2498dfb6b84f2427dd5",
    "number": 3275,
    "body": "",
    "head_branch": "ts-2.14.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update typescript definitions with 2.14.0 changes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa24a8dfb6b84f2427dd6",
    "number": 3273,
    "body": "Similar to aea2a8961bc4dbff0471d0615af1f4fb98fc81d7 and required for\nuse with https://github.com/frankwallis/plugin-typescript.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa24b8dfb6b84f2427dd7",
    "number": 3272,
    "body": "This is redo of #3181 \n",
    "head_branch": "fix-af-march",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix Afrikaans March abbr"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa24c8dfb6b84f2427dd8",
    "number": 3271,
    "body": "@jeeeyul , @kyungw00k, @maggiepint , @kyungw00k , please review this pull request when you can.  its to resolve the korean long date formatting issue.  I used to live in Busan, Korea, speak Korean a little bit and felt compelled to pitch in here.  Here is the issue: #3222 \n",
    "head_branch": "korean_long_date_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa24d8dfb6b84f2427dd9",
    "number": 3267,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa24e8dfb6b84f2427dda",
    "number": 3265,
    "body": "Based on the nl-locale, but with a modified date-separator (\"/\" instead of \"-\").\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa24f8dfb6b84f2427ddb",
    "number": 3262,
    "body": "Add support for Buddhist Era (BE) year, parsing and formatting\n\nBE is 543 years before CE\n\n2559 (BE) is equal to 2016 (CE)\nand\n2016 (CE) is equal to 2559 (BE)\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2508dfb6b84f2427ddc",
    "number": 3261,
    "body": "The first day in Saudi Arabia currently is Sunday. it should be edited here.\nFriday & Saturday are weekend\n\nThanks.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2518dfb6b84f2427ddd",
    "number": 3259,
    "body": "Issue #3242\n\nDutch locale removes the dot from the abbreviated if it is used in a dashed notation: DD-MMM-YYYY. However, it doesn't work the other way around, which I think should be possible.\n\nSee https://jsfiddle.net/ztroj5zv/ for an example.\n\nThis fixes the parsing logic and allow abbreviated months without dots, which is quite common in Dutch. See http://taaladvies.net/taal/advies/vraag/1727/afkortingen_van_de_namen_van_de_maanden/\n\n@jorisroling\n",
    "head_branch": "fix-nl-parse-month",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2528dfb6b84f2427dde",
    "number": 3255,
    "body": "",
    "head_branch": "add-maori",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2528dfb6b84f2427ddf",
    "number": 3254,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2538dfb6b84f2427de0",
    "number": 3252,
    "body": "Weeks are part of the spec here: http://momentjs.com/docs/#/durations/weeks/\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2548dfb6b84f2427de1",
    "number": 3248,
    "body": "Fixes #3019\n",
    "head_branch": "iso-8601-fmt",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2558dfb6b84f2427de2",
    "number": 3244,
    "body": "The current version (released version) is missing a definition for `updateLocale` in the moment namespace, the dev branch version also has an issue fixed in this pr.\n",
    "head_branch": "dts",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2568dfb6b84f2427de3",
    "number": 3241,
    "body": "",
    "head_branch": "compute-regex-escape-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2578dfb6b84f2427de4",
    "number": 3238,
    "body": "Redo #3111, fix #3085\n",
    "head_branch": "fix-empty-obj",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2588dfb6b84f2427de5",
    "number": 3237,
    "body": "Redo #2997, fix #2016\n",
    "head_branch": "fix-cs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Redo #2997, fix #2016"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2598dfb6b84f2427de6",
    "number": 3236,
    "body": "Fix for #3219.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa25a8dfb6b84f2427de7",
    "number": 3235,
    "body": "Previously english locale was defined mostly in Locale.prototype. Now it's\nmoved in locale config (similar to all other locales) that is merged the same\nway locales are patched (updated).\n\nFixes #3137 \n\nNOTE: changes in `src/test/helpers/common-locale.js` are because common tests for weekdays were plain wrong -- they weren't iterating all weekdays. It should go in a separate PR, if I'm not lazy.\n\n---\n\nNow the real story: we were depending in a few places that some stuff is just a given (in the prototype).\n- monthsParse, weekdaysParse -- assumes that if you have an own property then you define it, otherwise you want the default (esp for strict parsing). Now that it doesn't have prototype the check needs to be revised (I do === DEFAULT), but that is not ideal\n- longDateFormat -- we add lowercase values to the dict, which might change the default dictionary (because even if its in prototype it is still modifyable), but now we also merge it in, so locales inherit autodefined properties of other locales ... yuk. Its currently fixed by presenting an empty longDateFormat in all locales (if one doesn't exist) so we never modify the base, but it feels fragile\n- ordinalParse -- this is the last problematic one, but I took a decision that you can \"fallback-to-default\" in updateLocale by specifying null for some properties. Well, now that there is no fallback this null causes trouble. To fix it I disabled the tests. Not really the end of the world, but something more elegant can come along.\n",
    "head_branch": "fix-locales",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Cleanup day-of-week"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa25b8dfb6b84f2427de8",
    "number": 3234,
    "body": "Fixes #3159\n",
    "head_branch": "fix-mwl-comment",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa25c8dfb6b84f2427de9",
    "number": 3233,
    "body": "Fixes #3195 \n@mmozuras can you please verify the tests are now OK. They should be more accurate after this change, but I'm not a native speaker (nor any other kind :)).\n",
    "head_branch": "mont-is-format-lt",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa25d8dfb6b84f2427dea",
    "number": 3232,
    "body": "Fixes #3227\n",
    "head_branch": "neg-0-diff",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa25e8dfb6b84f2427deb",
    "number": 3231,
    "body": "This gets used automatically by node's util.inspect function and a number of similar libraries. This also means that it will be used by the NodeJS REPL.\n\nAs discussed in #3229.\n\nPlease be as brutal as you like with code-review 😄 .\n\nCouldn't think of a better way to test the round-trippable nature of this format than `eval`, so I've kept it constrained to that small helper function.\n\nIs there any other property of a moment that's important to include in the representation?\n",
    "head_branch": "inspect",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa25f8dfb6b84f2427dec",
    "number": 3230,
    "body": "Fix moment/moment#3228 where passing a date object with a format string would cause the date to be coerced to string and the interpreted by the string format. Now just uses the date and ignores the format.\n",
    "head_branch": "dateWithDateFormat",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2608dfb6b84f2427ded",
    "number": 3224,
    "body": "Add below function signature to definition file.\n- isSameOrBefore\n- isSameOrAfter\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2628dfb6b84f2427dee",
    "number": 3218,
    "body": "This PR will make dev builds compatible with jscs 3.0 (latest version)\n",
    "head_branch": "jscs-editing",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2638dfb6b84f2427def",
    "number": 3217,
    "body": "JSCS dropped a major release three days ago that causes the build to break.\n\nWhen I change the configuration that is breaking the build on my local machine, the build continues, but I get about a zillion code style errors. There must have been other breaking changes as well.\n\nThis fixes it temporarily by using the old package.\n\nBased on what I'm seeing on the JSCS website, we should convert to ESLint, as it has been deprecated in favor of that anyways. See medium post: https://medium.com/@markelog/jscs-end-of-the-line-bc9bf0b3fdb2#.u8qquoisi\n\nFor now though, someone needs to merge this so the build works.\n",
    "head_branch": "fixJSCS",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2648dfb6b84f2427df0",
    "number": 3216,
    "body": "This pull request fixes the code-style errors reported by \"jscs:all\" grunt task.\n",
    "head_branch": "fix-code-style-errors",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2658dfb6b84f2427df1",
    "number": 3213,
    "body": "Added a type to strongly type `UnitOfTime` entry points.\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2668dfb6b84f2427df2",
    "number": 3192,
    "body": "Rollup uses \"jsnext:main\" property in package.json for ES6 modules.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2678dfb6b84f2427df3",
    "number": 3191,
    "body": "moment#toDate currently returns the internal date object, which can lead to strange behaviour if the moment object is then modified. See [this fiddle for an example](https://jsfiddle.net/67uaf0zu/).\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2688dfb6b84f2427df4",
    "number": 3186,
    "body": "The following is a stab at a default issue template. Feedback welcome.\n\n**Description of the Issue:**\n\n**Expected result:**\n\n**Actual result:**\n\n**Steps and Code to Reproduce the Issue:**\n\n_Please include the values of all variables used._\n\n**Moment.JS Version:**\n\n**Environment:**\n\n_Examples: Chrome 49 on OSX, Internet Explorer 10 on Windows 7, Node.JS 4.4.4 on Ubuntu 16.0.4_\n\n_Both the browser and the OS are important to us, particularly if you have an unsual environment like an IOT application._\n\n**Other information that may be helpful:**\n- The time zone setting of the machine the code is running on\n- The time and date at which the code was run\n- Other libraries in use (TypeScript, Immutable.js, etc)\n\n_If you need troubleshooting help, you will probably get a faster response on Stack Overflow_\n",
    "head_branch": "issueTemplates",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #3186 from maggiepint/issueTemplates\n\nmoment issue template"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2688dfb6b84f2427df5",
    "number": 3183,
    "body": "Added missing isSameOrAfter and isSameOrBefore functions to typings\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2698dfb6b84f2427df6",
    "number": 3181,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa26a8dfb6b84f2427df7",
    "number": 3177,
    "body": "Bug fix for issue #2704 as requested by @mj1856 \n",
    "head_branch": "bugfix-2704",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa26b8dfb6b84f2427df8",
    "number": 3175,
    "body": "There have been numerous requests to be able to add more options to moment().calendar(). Going through and adding this to the locale files in the way that #2996 implements it causes breaking changes for people using updateLocale, and is on the whole not the cleanest thing. What if you don't want those other options? Now you have them and you're stuck with them.\n\nInstead, I added a function called calendarFormat that can be used to define what calendar option should be used. This function defaults to what already exists, but can be overridden. For instance, the following function adds this month and next month options:\n\n``` js\n    moment.calendarFormat = function (myMoment, now) {\n        var diff = myMoment.diff(now, 'days', true);\n        var nextMonth = now.clone().add(1, 'month');\n\n        var retVal =  diff < -6 ? 'sameElse' :\n            diff < -1 ? 'lastWeek' :\n            diff < 0 ? 'lastDay' :\n            diff < 1 ? 'sameDay' :\n            diff < 2 ? 'nextDay' :\n            diff < 7 ? 'nextWeek' :\n            (myMoment.month() === now.month() && myMoment.year() === now.year()) ? 'thisMonth' :\n            (nextMonth.month() === myMoment.month() && nextMonth.year() === myMoment.year()) ? 'nextMonth' : 'sameElse';\n        return retVal;\n    };\n```\n\nThen, use update locale to add the corresponding values to the locale:\n\n``` js\n    moment.updateLocale('en', {\n        calendar : {\n                sameDay : '[Today at] LT',\n                nextDay : '[Tomorrow at] LT',\n                nextWeek : 'dddd [at] LT',\n                lastDay : '[Yesterday at] LT',\n                lastWeek : '[Last] dddd [at] LT',\n                thisMonth : '[This month on the] Do',\n                nextMonth : '[Next month on the] Do',\n                sameElse : 'L'\n            }\n    });\n```\n\nIf the locale doesn't have the values specified, it will fall back to 'sameElse'.\n\nI think this is a cleaner way to go about this task.\n\nIt may need more unit tests but I'm tired.\n",
    "head_branch": "calendarExtend",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa26c8dfb6b84f2427df9",
    "number": 3160,
    "body": "Not sure if the group will agree on this one, but I think we should just deprecate isDSTShifted.\n\nIt doesn't work for moments that have been mutated (#2942), it doesn't work with moments using moment timezone (moment/moment-timezone#131), because it relies on browser behavior, it can't be  unit tested, and it's confusing: http://stackoverflow.com/questions/36939900/moment-timezone-utc-offset-difference\n\nIIRC @mj1856  and I have both looked at this function and tried to come up with a way to fix it. I think we both concluded that due to issues with overflow, it wasn't really feasible. Or maybe Matt looked at something else related to DST - I'm not sure.\n\nIt's possible there's a way to fix it, I'm open to suggestion. But if nobody is going to fix it, and it doesn't work, it doesn't make sense to keep it.\n\nI know I added a link to a webpage that doesn't exist in that deprecation warning. If we decide to merge this I'll update docs.\n",
    "head_branch": "deprecateDSTShifted",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa26d8dfb6b84f2427dfa",
    "number": 3157,
    "body": "It's basically the same as the es locale except for 12-hour clock rather than 24-hour clock.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa26e8dfb6b84f2427dfb",
    "number": 3155,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa26f8dfb6b84f2427dfc",
    "number": 3153,
    "body": "the arabian monthes are dublicated which make the ui of the bootstrap datepicker messy\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2708dfb6b84f2427dfd",
    "number": 3152,
    "body": "I found that momentjs is using invalid short month abbreviation for thai language.\nReference from the following source : \n- [http://www.thai-language.com/ref/months](http://www.thai-language.com/ref/months)\n- [https://th.wikipedia.org/wiki/](https://th.wikipedia.org/wiki/%E0%B9%81%E0%B8%A1%E0%B9%88%E0%B9%81%E0%B8%9A%E0%B8%9A:%E0%B8%8A%E0%B8%B7%E0%B9%88%E0%B8%AD%E0%B8%A2%E0%B9%88%E0%B8%AD%E0%B9%80%E0%B8%94%E0%B8%B7%E0%B8%AD%E0%B8%99)\n\nPlease review my pull request :)\n",
    "head_branch": "thai-month-fixed",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2718dfb6b84f2427dfe",
    "number": 3147,
    "body": "What: the code:\n\n```\nmoment().days(-1000).calendar(null, {\n   sameElse: function() {\n       return '[hoy a la' + ((this.hours() !== 1) ? 's' : '') + '] LT';\n   }\n});\n```\n\nWhere: on http://momentjs.com/docs/#/displaying/calendar-time/ in the Chrome console.\nWhat I got: It raises `Uncaught TypeError: this.hours is not a function`\n\nI expected use callback like in the example on http://momentjs.com/docs/#/customization/calendar/ .\n\nThis PR makes the compatible call with https://github.com/moment/moment/blob/develop/src/lib/locale/calendar.js#L14\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2728dfb6b84f2427dff",
    "number": 3146,
    "body": "I have a locale config worked fine in v2.10.6.\nBut when I updated moment to v2.13, I got a issue on it.\n\nThere are my code snippets:\n\n```\nmoment.locale('zh', {\n    ...\n    week: {\n      dow: 1 // Monday is the first day of the week.\n    }\n   ...\n});\nmoment.locale('zh')\n```\n\nIt would got an NaN when I called `moment().format('wo')`\n\nAnd I found moment lost some default config when get a Locale config.\n",
    "head_branch": "issue/locale-set",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2738dfb6b84f2427e00",
    "number": 3140,
    "body": "this creates out of the box support as an angular module\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2748dfb6b84f2427e01",
    "number": 3138,
    "body": "This should fix the loading of moment if it was previously loaded.\n\nI am not sure how to test this with the original jsbin (http://jsbin.com/xemidereza/edit?html,console) but this should just work.\n\nFixes #2736 \n",
    "head_branch": "add-load-check",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2758dfb6b84f2427e02",
    "number": 3135,
    "body": "As the title says, adding definitions for the pretty new functions defineLocale and updateLocale for the moment interface.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2768dfb6b84f2427e03",
    "number": 3134,
    "body": "This is the initial pass at implementing https://github.com/moment/moment-rfcs/pull/1\n\nThis introduces an interface for a TimeZone in moment core. Moment would provide 2 classes that implement the TimeZone interface, `LocalTimeZone` and `FixedOffsetTimeZone`. Libraries like `moment-timezone` could provide their own `TZDBTimeZone` class that implements the TimeZone interface.\n\nEach moment created now has a mandatory time zone. Calls to `moment()` would have a `LocalTimeZone` instance, calls to `moment.utc()` would have a `FixedOffsetTimeZone` instance, and calls to `moment.tz()` would have a `TZDBTimeZone` instance.\n\nTo support this, we will no longer be using the local timezone `Date.prototype` getters and setters. All calls to the underlying date object use the `setUTC*` and `getUTC*` methods, and parsing is done with `Date.UTC()`. We will continue to store the `_offset` property on a moment to determine what the offset is.\n### Public API Additions\n\n`moment.withTimeZone(timeZone)`\n\nThis is the public api for moment-timezone and other libraries to construct a moment in a timezone. It returns a function that can be used just like `moment()` or `moment.utc()`.\n\n``` js\nvar create = moment.withTimeZone(chicagoTimeZone);\nvar nowInChicago = create();\nvar decemberInChicago = create(\"2016 décembre\", \"YYYY MMMM\", \"fr\");\n```\n### Private API Removals\n\n`moment.updateOffset` hook.\n\nThis was build as an undocumented api for use by moment-timezone. We are moving the code for manually adjusting the offset into moment, so there is no need for an external library to handle this logic.\n\n`moment#_useUTC`\n\nThis is used by the parser to determine whether to use `new Date(y, m, d...)` or `Date.UTC(y, m, d)` when constructing the `Date`. We are always using `Date.UTC(y, m, d)`, so this is no longer needed.\n\n`moment#_isUTC`\n\nThis was used to switch between calls to `Date#getMonth` and `Date#getUTCMonth`, but we are always using `Date#getUTCMonth`, so this is unneeded.\n\n`moment.momentProperties`\n\nThis added for moment timezone to copy the `_z` property when cloning a moment, but now that timezones are a core concept for moment, a moment-timezone moment will behave the same as all other moments.\n### Public API Deprecations\n\n`moment#isLocal`, `moment#isUtc`, `moment#isUtcOffset`\n\nThese methods don't really match the semantics of the new timezone interface. They were added because we had internal flags that toggled between different modes. A better interface would be something like `moment#timezone() === 'local'`.\n### Open Questions\n#### This adds `moment.withTimeZone` as partial application for the timezone, should we expand that to format, locale, and strict parsing?\n\n``` js\nvar create = moment.withDefaults({\n  zone: chicagoTimeZone,\n  locale: \"fr\",\n  format: \"YYYY MMMM\",\n  strict: true\n});\nvar novemberInChicago = create(\"2016 novembre\");\nvar decemberInChicago = create(\"2016 décembre\");\n```\n#### Should we add a getter/setter for timezones? Should it publicly reference timezones with strings instead of objects?\n\n``` js\nmoment().timezone('local');\nmoment().timezone('UTC+1');\nmoment().timezone('America/Los_Angeles');\nmoment().timezone(); // 'local'\nmoment.withTimeZone('America/Los_Angeles').timezone(); // 'America/Los_Angeles'\nmoment.utc().timezone(); // 'UTC'\n```\n\nTo support this, we could provide an api to register callbacks to be used to resolve the timezone string.\n\n``` js\nmoment.defineTimezone(function (input) {\n  if (input === 'local') {\n    return new LocalTimeZone();\n  }\n});\nmoment.defineTimezone(function (input) {\n  if (matchesFixedOffsetFormat(input)) {\n    return new FixedOffsetTimeZone(input);\n  }\n});\n// moment timezone\nmoment.defineTimezone(function (input) {\n  if (zones[input]) {\n    return zones[input];\n  }\n});\n```\n\nThe timezone resolver would just loop through all the callbacks, returning the first timezone that matched.\n",
    "head_branch": "timrwood/zone-api",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2778dfb6b84f2427e04",
    "number": 3133,
    "body": "Per: https://github.com/nodejs/LTS\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2788dfb6b84f2427e05",
    "number": 3129,
    "body": "A feature in Typescript, that lets you define a method as a TypeGuard, the when you use the method in context, the type system can use the guard to resolve the underlying type.\n\n``` typescript\nconst m: any;\nif (moment.isMoment(m)) {\n  // typeof m is now `Moment`\n}\n```\n",
    "head_branch": "david-driscoll-patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2798dfb6b84f2427e06",
    "number": 3127,
    "body": "Many bugs including:\n1. typos in regexp between `\\.` and `.`\n2. correct parsing of (for example on February)  `фев`, `февр`, `фев.` and `февр.`\n3. fix order of moths in regexp, and eliminate duplicates\n\nSince there is no docs that describes when `monthsShortStrictRegex` will be used, fix minor bugs. Still not sure if correct (if full)\n",
    "head_branch": "rmofix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa27a8dfb6b84f2427e07",
    "number": 3122,
    "body": "From discussion in https://github.com/moment/moment/pull/2916/files/f2e45889e5d7522d7a5e8ffd607b783be320cb3c#r60102231\n",
    "head_branch": "update-ts-def",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa27b8dfb6b84f2427e08",
    "number": 3119,
    "body": "@ben-lin @ichernev \nTo replace #3075 \n",
    "head_branch": "chris/zh-tw-improvement",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa27c8dfb6b84f2427e09",
    "number": 3115,
    "body": "Change deprecation warning links to direct to website in order to improve clarity.\n",
    "head_branch": "linkChanges",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa27d8dfb6b84f2427e0a",
    "number": 3112,
    "body": "You might consider optimizing configFromStringAndFormat function by changing the order of tests in if statement in line 68. I ran all unit tests and found that the second check (config._a[HOUR] <= 12) is more often false comparing to the others, so by putting it in the first place the computation time in other tests can be saved most of the time.\n\nSo I found real performance benefit for two unit tests on V8 4.4 (I ran them with Benchmark.js library since jsperf is down). Both improvements are statistically significant.\n![selection_014](https://cloud.githubusercontent.com/assets/7926726/14566859/96b99526-0331-11e6-9d8e-8c0217bc3287.png)\n\nIf you want to try tests, just download them from https://s3.eu-central-1.amazonaws.com/momenttests/testsMoment.zip\n\nTo run the tests, call:\n\n> node run.js\n\nEven though this is a simple change, it seems to improve performance without affecting the readability of the code.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa27e8dfb6b84f2427e0b",
    "number": 3111,
    "body": "As mentioned in #3085, calling `moment({})` or `moment([])` resulted in different behavior than calling `moment()`, which we agreed was unexpected behavior. By setting the input to the same as it would be as if no empty array or object was passed in, the behavior is more consistent.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa27f8dfb6b84f2427e0c",
    "number": 3109,
    "body": "As mentioned in #1756, there is a thread-safe issue when we use Moment on the server side of the multi-threaded model (e.g. [Rhino](https://developer.mozilla.org/en-US/docs/Mozilla/Projects/Rhino)).\n\nI noticed the scope of  variable `i`  in `makeFormatFunction` function is too wide. The variable is shared in multiple threads. It causes unpredictable behavior.\n",
    "head_branch": "threadsafe_on_server_side",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2808dfb6b84f2427e0d",
    "number": 3105,
    "body": "Fixes #2927, redo #3103\n",
    "head_branch": "add-locale-sorted-weekdays",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2808dfb6b84f2427e0e",
    "number": 3103,
    "body": "fix issue #2927  \nmoment.weekdays(true) to sort list by the first day of week according to locale data\nmoment.weekdays(true, NUMBER) to get the #NUMBER day in sorted weekdayList\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2818dfb6b84f2427e0f",
    "number": 3102,
    "body": "This fixes issue #2762.\n\nThe consensus from that issue seemed to be that the presence of the `kk` token should not modify the value of other tokens, so that is the behavior that is implemented here.\n\nIt should be noted that this decision introduces a bit of an inconsistency, given that the parsing behavior introduced [here](/moment/moment/pull/1965) does change the day when an hour of 24 is present.\n\nIn other words,\n\n``` js\nmoment('2016-04-09T24:00:00')\n// yields a moment representing midnight at the start of April 10th, introduced in #1965\n\nmoment('2016-04-09T24:00:00').format('YYYY-MM-DD[T]kk:mm:ss')\n// \"2016-04-10T24:00:00\" (different from the original format string that was parsed)\n```\n\n---\n\nI'm not extremely familiar with the internal codebase, so please let me know if there's anything that I did incorrectly or that I should add.\n",
    "head_branch": "kk-format-token",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2828dfb6b84f2427e10",
    "number": 3098,
    "body": "As described in issue #3020, a moment in UTC mode\nshould be formatted, by default, with the letter Z\nas a suffix instead of the time zone, +00:00.\n",
    "head_branch": "default-utc-formatting",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2838dfb6b84f2427e11",
    "number": 3093,
    "body": "This removes the following grunt tasks.\n\n```\ngrunt size\ngrunt history\ngrunt embedLocales\ngrunt zones\n```\n\nThese are all out of date and no longer used.\n",
    "head_branch": "timrwood/remove-old-tasks",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2848dfb6b84f2427e12",
    "number": 3092,
    "body": "Dev deps cannot pass with grunt > 0.4\n\n1.0 will fail without deps themselves updating. PEgging the grunt dep\nensures that npm install will work without error\n\nfixes #3091\n",
    "head_branch": "peg-grunt",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #3092 from TheAlphaNerd/peg-grunt\n\ndeps: peg grunt to ~0.4"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2858dfb6b84f2427e13",
    "number": 3090,
    "body": ":exclamation: Not ready for merging :exclamation: \n\nThis is the start of replacing esperanto with babel and rollup. This transpiles the entire `src` directory into `build/cjs` in a commonjs module format, and uses that to run unit tests. It also builds some umd artifacts currently, though I am missing quite a few still.\n\nTODO:\n- [ ] Create `locales.js`\n- [ ] Create `moment-locales.js`\n- [ ] Custom locales builder.\n- [ ] Unit tests for browser\n- [ ] Retain comment headers in built files\n\nA potentially breaking change is that the locale files no longer `export default`. I'm not sure anyone was using them as `var es = require('moment/locale/es')` anywhere. I changed this so that rollup wouldn't complain about not declaring a module name for each of those files, I'm not sure if there is another way around this.\n",
    "head_branch": "timrwood/babel-and-rollup",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2868dfb6b84f2427e14",
    "number": 3089,
    "body": "The \"for\" is not needed for the sentence to make sense in Norwegian, and this will give the developer the chance to omit the \"for\" if wanted. This is also more consistent compared to the other locales in this repository.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2878dfb6b84f2427e15",
    "number": 3082,
    "body": "Use a relative AMD dependency so that it's not required to have the `main` defined for the `moment` package.\n",
    "head_branch": "amd-moment",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2888dfb6b84f2427e16",
    "number": 3081,
    "body": "Add a locale for siSwati (Swaziland, southern Africa)\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2898dfb6b84f2427e17",
    "number": 3079,
    "body": "Add locale for siSwati (Swaziland, southern Africa).\n\nThe translation was done in collaboration with 3 native speakers.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa28a8dfb6b84f2427e18",
    "number": 3078,
    "body": "This is a better implementation for #2782 (fixing #2801). It is a continuation of #2869 (which had to be shipped faster, without all the intended improvements).\n- [x] implement for weekdays\n- [x] add tests for weekdays\n",
    "head_branch": "fix-word-parsing",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa28b8dfb6b84f2427e19",
    "number": 3075,
    "body": "@ben-lin \n",
    "head_branch": "chris/improve-zh-tw",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa28c8dfb6b84f2427e1a",
    "number": 3070,
    "body": "Added Kyrgyz language support\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa28d8dfb6b84f2427e1b",
    "number": 3065,
    "body": "Instead of printing random warnings when running tests (now), check what deprecations is the tested code supposed to throw, and only raise an exception if there is a mismatch.\n\nFixes #2719\nObsoletes: #3012 \n",
    "head_branch": "no-deprecations-in-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa28e8dfb6b84f2427e1c",
    "number": 3063,
    "body": "To keep the team growing healthy we need a more formal initiation procedure.\n",
    "head_branch": "add-member-info",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa28f8dfb6b84f2427e1d",
    "number": 3060,
    "body": "@mik01aj @Oire @ichernev \n#### Proposed adding a pseudo locale.\n\nIf this is something you would incorporate I'll go ahead and add unit tests. \n\ncc @paulpdaniels @anottestad @scottrice10 @kirkhoff \n",
    "head_branch": "ps",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2908dfb6b84f2427e1e",
    "number": 3059,
    "body": "Fixes #2908.\n\nI wish there were simpler code for this, but as far as I am aware the only way to get rid of the negative zero is to explicitly check for it and replace it with zero.\n\nFun fact - this bug created a stack overflow question with a ton of upvotes: http://stackoverflow.com/questions/31599665/javascript-detecting-the-difference-between-positive-zero-and-negative-zero\n\nEdit: Tim made my code good. Lesson learned.\n",
    "head_branch": "diffNegZero",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2918dfb6b84f2427e1f",
    "number": 3055,
    "body": "This is the initial version of a script that will help with summoning all locale authors when we need to :)\n- [ ] 'check' authors that replied\n- [ ] incorporate into building next release to update a team that can be referenced more easily\n",
    "head_branch": "locale-scripts",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2928dfb6b84f2427e20",
    "number": 3053,
    "body": "It's a minor feedback, but when you look at the readme on https://www.npmjs.com/package/moment , it's really not obvious that \"Documentation\" was a link (because it's a title).\nmaybe it's a bug to raise at npmjs itself, but this PR would fix it.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2938dfb6b84f2427e21",
    "number": 3046,
    "body": "",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2948dfb6b84f2427e22",
    "number": 3045,
    "body": "PR resolves #3037 and #2986 \n\nThe date parts parsed are exposed in parsingFlags().parsedDateParts array. Array only has date parts at indexes parsed.\n\nBecause actual date parts parsed is being tracked now, it is possible to modify isValid to evaluate as false if no date parts are being parsed, but meridiem indicator was parsed.\nThis resolves a current behavior where junk data can parse valid if it has the letters 'a' or 'p' in it (or whatever indicates meridiem in the specific locale).\nCurrent behavior:\n\n``` js\nmoment('asdfgh', 'hh:mm a').isValid()\ntrue\n```\n",
    "head_branch": "parsingFlags",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2958dfb6b84f2427e23",
    "number": 3038,
    "body": "This fixes a few more test failure that occurred on the day of the spring-forward transition.\n\nSpecifically:\n- \"meridiem invariant\" test, ran on every locale, was using a local time unnecessarily, so used UTC instead.\n  - one locale had a dup of this common test, so I removed it\n- \"passing a function\" test on the `calendar` object had a local time.  Moved it from 02:00 to 13:00.\n",
    "head_branch": "more-dst-fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2968dfb6b84f2427e24",
    "number": 3036,
    "body": "Consider:\n\n``` javascript\nmoment.tz(\"2016-03-28T00:00:00\",\"Europe/London\").year(2015).format()  //  \"2015-03-27T23:00:00+00:00\"\n```\n\nIt should have been `\"2015-03-28T00:00:00+00:00\"`\n\nWhile this only manifests when using moment-timezone, the problem is in moment itself.  The `keepTime` flag of the year unit should be set to `true`, as it is for months, days, and hours.\n\nFixed this, added some unit tests, and added similar tests around other units and related scenarios.\n",
    "head_branch": "set-across-dst",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2978dfb6b84f2427e25",
    "number": 3034,
    "body": "Several unit tests failed as we approached the Spring Forward DST transition.  These were all just testing failures.\n",
    "head_branch": "fix-dst-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2988dfb6b84f2427e26",
    "number": 3032,
    "body": "Stumbled across two unit tests that were commented out in #1379.  That bug was fixed with #2702, but we forgot to put these tests back.\n\nAlso had to update these old tests to the current qunit API.\n",
    "head_branch": "restore-tests-for-1379",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2998dfb6b84f2427e27",
    "number": 3031,
    "body": "It would be better that we suggest people use min to find the min, and max to find the max.\n",
    "head_branch": "fixMinMaxTypo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2998dfb6b84f2427e28",
    "number": 3030,
    "body": "@jisaacks @ichernev please check the swedish localization fix\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa29a8dfb6b84f2427e29",
    "number": 3028,
    "body": "Fixes #3016 by using the `diff` function instead of subtracting unix timestamps.\n\nThis was failing when crossing a DST boundary, such as the one upcoming for March 13th in the USA.\n",
    "head_branch": "fix-for-3016",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa29b8dfb6b84f2427e2a",
    "number": 3024,
    "body": "@nurlan approve my changes\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa29c8dfb6b84f2427e2b",
    "number": 3023,
    "body": "Hi,\n\nThe translation of March in Khmer should be written as `មីនា` not `មិនា`.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa29d8dfb6b84f2427e2c",
    "number": 3015,
    "body": "fix the locale file and make it work as expected\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa29e8dfb6b84f2427e2d",
    "number": 3013,
    "body": "Per #3011 - Don't validate line endings because it causes excessive warnings and fails the build on Windows.\n",
    "head_branch": "dont-validate-line-endings",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa29f8dfb6b84f2427e2e",
    "number": 3012,
    "body": "It's not helpful to have deprecation warnings show up in the test output.\n",
    "head_branch": "supress-deprecation-in-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2a08dfb6b84f2427e2f",
    "number": 3008,
    "body": "Current code for using an object to set multiple values uses for ... in.\nMDN is quite clear on the fact that this runs in arbitrary order:\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/for...in\n\nOrder matters when values are being set.\n\nThe object setter should set the values in order of unit size (Years being biggest, milliseconds being smallest). This prevents errors like:\n\n``` js\nmoment('2016-04-30').set({date:31, month:4}).format()\n\"2016-05-01T00:00:00-05:00\"\n```\n\nIt is a minor separate change, but this also fixes an error where calling .get with an object will set the values passed in the object:\n\n``` js\nmoment('2016-04-30').get({year:2017}).format()\n\"2017-04-30T00:00:00-05:00\"\n```\n",
    "head_branch": "objectSetter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2a18dfb6b84f2427e30",
    "number": 3007,
    "body": "This hopefully fixes #2608.\n",
    "head_branch": "bring-back-src",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2a28dfb6b84f2427e31",
    "number": 2997,
    "body": "See #2016.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2a38dfb6b84f2427e32",
    "number": 2996,
    "body": "Added options:\n    - sameMonth\n    - lastMonth\n    - nextMonth\n    - sameYear\n    - lastYear\n    - nextYear\n\nAdded L placeholder for locale files\n\nformat will be picked with decreasing preferences from the middle:\n<- sameElse lastYear sameYear lastMonth sameMonth lastWeek lastDay (sameDay) nextDay nextWeek sameMonth nextMonth sameYear nextYear sameElse ->\n\nThis is for issue https://github.com/moment/moment/issues/2952\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2a48dfb6b84f2427e33",
    "number": 2995,
    "body": "#2978\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2a58dfb6b84f2427e34",
    "number": 2992,
    "body": "For some reason, this weekend I decided it would be a good idea to default the parser to strict mode and run all of the unit tests. \nWhen I did that, I noticed an interesting issue with all locales that use . in their shortened months. The parser will not accept the . in strict mode. For example:\n\n``` js\nmoment.locale('nl'); moment('jan.', 'MMM', true).format();\n\"Invalid date\"\n```\n\nNote that the months for Dutch include . in them (optionally) based on the locale file.\n\n``` js\nvar monthsShortWithDots = 'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_'),\n    monthsShortWithoutDots = 'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_');\n```\n\nBosnian is another example of this:\n\n``` js\nmoment.locale('bs'); moment('jan.', 'MMM', true).format();\n\"Invalid date\"\n```\n\nIn Bosnian the . is non-optional:\n\n``` js\n    months : 'januar_februar_mart_april_maj_juni_juli_august_septembar_oktobar_novembar_decembar'.split('_'),\n    monthsShort : 'jan._feb._mar._apr._maj._jun._jul._aug._sep._okt._nov._dec.'.split('_'),\n```\n\nAll together, I think there were 24 cultures.\n\nI overrode their short month regular expression with a version of the generic word regex that is currently used, but modified to accept .\n\nAs this PR stands right now, in strict mode it will accept both short months with and without . (both Jan and Jan.). I think this is what the user would expect, even though it adds variability to strict mode, which is maybe undesirable.\n\nTotally understand if we decide that strict mode shouldn't handle . at all and throw this one out. I just started fixing it and got kind of determined to finish :-)\n",
    "head_branch": "periodInShortMonth",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2a68dfb6b84f2427e35",
    "number": 2991,
    "body": "I didn't want this to go stale so I rewrote the necessary files.\n\nThe user can determine inclusivity via a fourth parameter by passing '()\", '[)', '(]', or '[]'. The default behavior is '()'.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2a78dfb6b84f2427e36",
    "number": 2989,
    "body": "Fixes #1747.\n",
    "head_branch": "fix-vi-ampm",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2a88dfb6b84f2427e37",
    "number": 2988,
    "body": "Fixes #2920.\n",
    "head_branch": "tr-parse",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2a98dfb6b84f2427e38",
    "number": 2982,
    "body": "Patch for #2974.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2aa8dfb6b84f2427e39",
    "number": 2977,
    "body": "http://new.gramota.ru/spravka/buro/search-answer?s=242637\n\nВо-первых, с точкой\nВо-вторых, сами сокращения.\n",
    "head_branch": "rufix3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2ab8dfb6b84f2427e3a",
    "number": 2972,
    "body": "Hello,\n\nI've noticed that `min/tests.js` is still present in npm package even if [it was added to npmignore](https://github.com/moment/moment/commit/eb35595035ebd10b2505c8f249f57fb79b468543). I think the publication is made with `scripts/npm_prepublish.sh`. So,I've added to this file a copy of the `.npmignore` file.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2ac8dfb6b84f2427e3b",
    "number": 2970,
    "body": "Normalizes behavior of add and subtract when a decimal value is passed.\nCurrent behavior:\n\n``` javascript\nmoment('2016-04-03').add(1.5, 'days').format() = \"2016-04-04T00:00:00-05:00\"  // (adds 1)\nmoment('2016-04-03').add(-1.5, 'days').format() = \"2016-04-01T00:00:00-05:00\"  // (adds -2)\nmoment('2016-04-03').subtract(1.5, 'days').format() = \"2016-04-01T00:00:00-05:00\"  // (subtracts 2)\nmoment('2016-04-03').subtract(-1.5, 'days').format() = \"2016-04-04T00:00:00-05:00\"  // (subtracts -1)\n```\n\nBehavior after PR:\n\n``` javascript\nmoment('2016-04-03').add(1.5, 'days').format() = \"2016-04-04T00:00:00-05:00\"  // (adds 1)\nmoment('2016-04-03').add(-1.5, 'days').format() = \"2016-04-02T00:00:00-05:00\"  // (adds -1)\nmoment('2016-04-03').subtract(1.5, 'days').format() = \"2016-04-02T00:00:00-05:00\"  // (subtracts 1)\nmoment('2016-04-03').subtract(-1.5, 'days').format() = \"2016-04-04T00:00:00-05:00\"  // (subtracts -1)\n```\n\nThe same behavior happens with months.\n\nI understand where this could be interpreted as a breaking change, so I certainly won't be offended if you don't take it, but I think it definitely causes the API to behave in a manner closer to what the user would expect.\n",
    "head_branch": "decimalAddSubtract",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2ad8dfb6b84f2427e3c",
    "number": 2965,
    "body": "Implements https://github.com/moment/moment/issues/2934\n\nSome questions that occurred to me while working on this:\n- Does it make sense to implement this function as a standalone method vs integrating it into `moment.week`?\n- Do we also need an `ISO` version of this method, similar to `isoWeek`?\n- Are my test cases sufficient?\n",
    "head_branch": "week-of-month",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2ae8dfb6b84f2427e3d",
    "number": 2958,
    "body": "Optimization of isArray (use instanceof at first place) and unit tests\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2af8dfb6b84f2427e3e",
    "number": 2955,
    "body": "This is to resolve issue #2408 where formats such as 'P-6D' were not supported for durations. It supports negating each component of the duration. If the whole duration has already been negated (-P6D -> -6 days), then it will make the component positive ('-P-6D' -> 6 days). The issue showed \"-P-6H+3M\" as an example, but the lack of a 'T' does not fit with the rest of the standard. In light of this, the changes allow for \"-PT-6H+3M\" instead.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2b08dfb6b84f2427e3f",
    "number": 2953,
    "body": "Allows user to determine if Moment is between or equal to a set of Moments (From, To)\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2b18dfb6b84f2427e40",
    "number": 2950,
    "body": "Hi,\n\nAs you already do in isDate and isFunction, to speedup isArray method, use instanceof at first place.\nI made small jsperf test: http://jsperf.com/isarray-1. Basically, even if for some inputs the first condition is false, overall improvement is better with instanceof..\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2b28dfb6b84f2427e41",
    "number": 2946,
    "body": "The deprecation warnings for instance `min` and `max` give incorrect substitutions. Per the current documentation `moment().min` and `moment.max()` should be replaced by `moment.max` and `moment.min` respectively. We learned this the hard way.\n\n<img width=\"962\" alt=\"screen shot 2016-02-03 at 1 32 52 pm\" src=\"https://cloud.githubusercontent.com/assets/332880/12797803/ac0cc38e-ca7a-11e5-8f03-3a8adf7fec70.png\">\n\nhttps://jsfiddle.net/s5ex3qh7/\n(open the console to see the deprecation warning)\n",
    "head_branch": "fix-min-max-deprecation-warnings",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2b38dfb6b84f2427e42",
    "number": 2943,
    "body": "Re: https://github.com/moment/moment/issues/2164\n\nDid not include exhaustive tests for all the units inclusive.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2b38dfb6b84f2427e43",
    "number": 2939,
    "body": "Fixes: https://github.com/moment/moment/issues/2936\n\nC# duration match was _almost_ complete enough to match full-strings, just needed to allow for the extra digits in microseconds. Getting to put in `^` `$` resolves the speed problem reported @ #2936.\n",
    "head_branch": "regex-dos-no-more",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2b48dfb6b84f2427e44",
    "number": 2938,
    "body": "Adding functionality for parse and set of time.\n",
    "head_branch": "timeSet",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2b58dfb6b84f2427e45",
    "number": 2932,
    "body": "Fixes #843\n\nThis adds the method `moment.locales()` to get an array of the locales that have been loaded (ie, bundled with moment.js or manually required in node.)\n\nIt does not list or `require` available (but unloaded) locales in node. I think that should be a separate feature if needed at all.\n",
    "head_branch": "list-locales",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2b68dfb6b84f2427e46",
    "number": 2931,
    "body": "Added a more _'non-technical'_ description of what Moment.js does.\nHopefully it'll help some of the newer developers out there get a better understanding of what Moment.js can do for them in quick paragraph.  \n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2b78dfb6b84f2427e47",
    "number": 2922,
    "body": "I've just got a ukrainian locale translated by one of my friends. More or less, it should be correct and working. The locale's source was based on the source of Polish locale (`pl.js`).\n\nPR is not fully ready yet, though:\n- [ ] we would need some unit tests (like [the one for Polish locale](https://github.com/moment/moment/blob/develop/src/test/locale/pl.js) for example)\n- [ ] I'm not sure if the whole `calendar` & `relativeTime` thing is fully correct\n\nUnfortunately, I'm not an Ukrainian speaker to do it. I'll just leave the PR here, maybe someone would be willing to finish it?\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2b88dfb6b84f2427e48",
    "number": 2921,
    "body": "at run time by bootloader and other frameworks.\nit works like component.json but for NPM based frameworks, \n\"moment/moment\" becomes package name, and absolute path of moment.js can be tracked.\nall module.json's in all bower-packages are merged to create one single resources.json for project.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2b98dfb6b84f2427e49",
    "number": 2917,
    "body": "Locale Punjabi(Gurmukhi) India format conversion.\n",
    "head_branch": "localePunjabiIndiaFormatConversion",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2ba8dfb6b84f2427e4a",
    "number": 2916,
    "body": "support for typescript type definition\n",
    "head_branch": "typings-support",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2bb8dfb6b84f2427e4b",
    "number": 2914,
    "body": "This commit is not ready for production, but I wanted a maintainer's opinion on a few things as I'm not keyed in to the vision for this code base.\n1. I need to reuse the meridiem fix wrap function in the create/from-string-and-format.js file. At this point I have simply left it in that file and exported it, but I feel like maybe it belongs in a common folder. Any suggestions as to where?\n2. I have move the ISO time regular expressions to the Parse/Regex.js file, again for the sake of reuse. Should we also remove the dates from the create/from-string.js file for the sake of consistency?\n3. I am not sure how you want the parsing flags handled. Right now, they are basically a copy/paste from the create/from-string-and-format.js file, but this is wrong.\n   What happens if the TimeSet uses a token that was unused by the initial create? Should that token be removed from the unused tokens array, potentially rendering the date valid in strict mode when it previously wasn't?\n   What happens to the charsLeftOver value? If it previously had a value, it could now be reset to zero (but potentially those chars left over were from the date part of the initial parse not the time, so technically the moment is still invalid). If it was previously zero, it could now be reset to more than zero (this is less bad, a previously valid date has become invalid). I'm not sure what the right way to handle this is.\n   Basically, validity has a lot of edge cases that get screwed up by doing more parsing.\n",
    "head_branch": "timeSetter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2bc8dfb6b84f2427e4c",
    "number": 2911,
    "body": "Format specifier 'L' should use dot instead of forward slash:\n'14.02.2010' instead of '14/02/2010'.\n\n@hinrik , could you confirm?\n",
    "head_branch": "update-locale-is",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2bd8dfb6b84f2427e4d",
    "number": 2910,
    "body": "\"npm install moment\" causes my project to be 5 MB larger than before. Looking at the code and the API-documentation it seems to me, that only the \"moment.js\"-file and the \"locale\"-files are needed in node. The \"min\"-directory can be omitted. I have added a \"files\"-property to the \"package.json\" that  includes only \"moment.js\" and the \"locale\"-directory.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2be8dfb6b84f2427e4e",
    "number": 2907,
    "body": "#2882\n#2569\n\nВот это вот: http://lh.2xlibre.net/locale/ru_RU/ Неправильная информация (!!!)\n\nЭтот PR корректно откатывает сделанный ранее 80fa7c5621797591e81b49c48621f53e858737a5\n",
    "head_branch": "rufix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2bf8dfb6b84f2427e4f",
    "number": 2901,
    "body": "relativeTime 일부 맞춤법 수정  // Correct relativeTime strings based on Korean grammar checker (http://speller.cs.pusan.ac.kr/PnuSpellerISAPI_201504/) \n1. 몇초 --> 몇 초\n2. 한시간 --> 한 시간 \n3. 한달 --> 한 달\n4. 일년 --> 일 년\n\n@kyungw00k  Please check this \n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2c08dfb6b84f2427e50",
    "number": 2899,
    "body": "In Thai people use 24 hour time format. Not `H hours m minutes s seconds`.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2c18dfb6b84f2427e51",
    "number": 2897,
    "body": "Lets `moment().month('7')` work the same as `moment().month(7)`\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2c28dfb6b84f2427e52",
    "number": 2891,
    "body": "Icelandic 'L' locale format should use a dot separator.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2c38dfb6b84f2427e53",
    "number": 2887,
    "body": "This is an attempt at solving issue #2886.\n\nInvalid moments were casting as 'null' (the string)\nNow they are properly casting as null (the literal)\n",
    "head_branch": "invalid_null_date",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2c38dfb6b84f2427e54",
    "number": 2885,
    "body": "In my testing when calling moment#calendar 'this' in a callback function referred not to the current moment but rather to the formatting strings object. Using apply and passing in the current moment fixed the issue.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2c48dfb6b84f2427e55",
    "number": 2881,
    "body": "This reverts commit 9ea2d6b1a86d59b36bce792771cffc3f85b382b0, reversing\nchanges made to f52a86863dd1fc638501b5f4b4fbe371f8fa725d.\n\nFixes #2873\nFixes #2854\n",
    "head_branch": "revert-sept",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge a8ff975474868335486654be6c116f9f27e5618c into f472e19f4bc20fdb768bd3bbab087a8eba041155"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2c58dfb6b84f2427e56",
    "number": 2877,
    "body": "This seems to result in speedups by around 10% for comparing moments.\n\nhttp://jsperf.com/explicit-valueof-for-momentjs\n",
    "head_branch": "explict-valueof",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2c68dfb6b84f2427e57",
    "number": 2875,
    "body": "Because they're proper names, \nmost other locales are capitalized\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2c78dfb6b84f2427e58",
    "number": 2869,
    "body": "This fixes #2841\n\nTODO:\n- [ ] add weekdays in the mix\n- [ ] test with months ending in dot and enable it there too\n- [x] sort regex parts by reverse length\n- [ ] add tests specific to this feature\n- [ ] fix polish monthsParse hack\n",
    "head_branch": "per-locale-month-regex",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2c88dfb6b84f2427e59",
    "number": 2868,
    "body": "Fix #2859 \n",
    "head_branch": "fix-y-token",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2c98dfb6b84f2427e5a",
    "number": 2865,
    "body": "Fixes #2862 \n\nbroken in #2773.\n",
    "head_branch": "fix-undefined-checks",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2ca8dfb6b84f2427e5b",
    "number": 2864,
    "body": "Noticed it missing from the npm tarball when our test broke after upgrading to 2.11\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2cb8dfb6b84f2427e5c",
    "number": 2858,
    "body": "The commit https://github.com/moment/moment/commit/f54a32f4c62c12a710335211a73cb002a7249646 and the follow on refactoring https://github.com/moment/moment/commit/b1d686ed481e2211cb81a1c60eca850fcea93f21 broke the ability for Date mocking libraries ([MockDate](https://www.npmjs.com/package/mockdate), SinonJS, etc.) to mock out the Date object. I believe we should restore this functionality.\n\n``` js\nconst moment = require('moment'),\n    mockdate = require('mockdate'),\n    frozenTime = moment();\n\nmockdate.set(frozenTime);\nconsole.log('Frozen time: ', frozenTime.toISOString());\n\nsetTimeout(function() {\n    console.log('Moment time: ', moment().toISOString());\n}, 1000);\n```\n\nRunning the code above will yield the following in `moment@2.10.6` and `moment@2.11.0` respectively.\n\n``` bash\n# moment@2.10.6\n$ node index.js\nFrozen time:  2016-01-04T14:21:55.335Z\nMoment time:  2016-01-04T14:21:55.335Z\n\n# moment@2.11.0\n$ node index.js\nFrozen time:  2016-01-04T14:21:55.335Z\nMoment time:  2016-01-04T14:21:56.355Z\n```\n- Fixes #2857\n- Fixes #2855\n",
    "head_branch": "global-date",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2cc8dfb6b84f2427e5d",
    "number": 2852,
    "body": "Canadian English mostly puts the day after the month like \"January 3, 2016\"\n\nUsage examples:\n- Parliament: http://www.lop.parl.gc.ca/Visitors/index-e.html\n- Government: http://www.cic.gc.ca/english/citizenship/become-how.asp (\"Citizenship application forms were updated on **June 11, 2015** ...\"\n- Toronto Star: http://torontostar.newspaperdirect.com/epaper/viewer.aspx\n\nOriginal author: @jonbca\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2cd8dfb6b84f2427e5e",
    "number": 2850,
    "body": "Put tests common to all locales in a single place.\n\nFixes #2801.\n",
    "head_branch": "common-locale-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2ce8dfb6b84f2427e5f",
    "number": 2848,
    "body": "There are many use cases where relative time humanization should use different rounding methods.\n\nThis PR is on the same wavelength as https://github.com/moment/moment/pull/1794\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2cf8dfb6b84f2427e60",
    "number": 2844,
    "body": "for accusative  აგვისტს => აგვისტოს\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2d08dfb6b84f2427e61",
    "number": 2843,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2d18dfb6b84f2427e62",
    "number": 2842,
    "body": "A few minor corrections to make moment work in IE8.\n",
    "head_branch": "fix-ie8",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2d28dfb6b84f2427e63",
    "number": 2840,
    "body": "ref: http://www.xn--12c0ecxsex2q.com/%E0%B8%95%E0%B8%B1%E0%B8%A7%E0%B8%A2%E0%B9%88%E0%B8%AD%E0%B9%80%E0%B8%94%E0%B8%B7%E0%B8%AD%E0%B8%99/\n",
    "head_branch": "fix-month-short-th-local",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2d38dfb6b84f2427e64",
    "number": 2835,
    "body": "I noticed strict flag was not exposed in newly added creationData function.\n",
    "head_branch": "add-strict-creation-data",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2d48dfb6b84f2427e65",
    "number": 2833,
    "body": "`now` was being exported at both `moment.now` and `moment.fn.now`, but only moment.fn.now was used for time source.\n\nI'm fixing this so there is only `moment.now`.\n\nFixes #2766.\n",
    "head_branch": "fix-now",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2d58dfb6b84f2427e66",
    "number": 2830,
    "body": "currently the project relies on grunt-cli to run unit tests.\nThere are no instructions in the readme to inform developers of this dependency.\n\nThis PR adds grunt-cli to the dev-dependencies for a more seamless development\nprocess. This PR will also make moment compatible with [CITGM](https://github.com/nodejs/citgm)\nthe node.js smoketesting utility. This will allow moment's unit test suite to\nbe ran against every release of Node.js, giving us an opportunity to give you a heads\nup if anything breaks before a release.\n",
    "head_branch": "add-grunt-cli",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2d68dfb6b84f2427e67",
    "number": 2829,
    "body": "Move changing to src/locale/ja.js.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2d78dfb6b84f2427e68",
    "number": 2827,
    "body": "Patch for #2807.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2d88dfb6b84f2427e69",
    "number": 2826,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2d98dfb6b84f2427e6a",
    "number": 2824,
    "body": "This PR adds support for Filipino (Tagalog) locale.\n\nAll tests should be passing.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2da8dfb6b84f2427e6b",
    "number": 2818,
    "body": "This should resolve issue #2797 \n\nMore generally it looks like it was previously not possible to combine week values with anything else; when weeks were specified they had to be the ONLY value given.\n",
    "head_branch": "parse-duration-day-and-week",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2db8dfb6b84f2427e6c",
    "number": 2815,
    "body": "the week.dow does not matching weekdays, weekdaysShort and weekdaysMin.\n\"一\" means Monday， \"日\" means Sunday\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2dc8dfb6b84f2427e6d",
    "number": 2810,
    "body": "Correct some of the words\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2dd8dfb6b84f2427e6e",
    "number": 2804,
    "body": "In Brazil the right names in week that consists in \"feira\" is \"DAYOFWEEK-feira\", \"Feira\" is incorrect.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2de8dfb6b84f2427e6f",
    "number": 2799,
    "body": "There is no caps in spanish date as you can see: \nhttps://es.wikipedia.org/wiki/Mes\nhttps://es.wikipedia.org/wiki/D%C3%ADa\nhttp://www.spanish.cl/Vocabulary/Notes/Dias_Meses.htm\nhttp://www.rae.es/consultas/mayuscula-o-minuscula-en-los-meses-los-dias-de-la-semana-y-las-estaciones-del-ano\nhttp://www.wikilengua.org/index.php/Fecha\n\nTests are already in lower case expect abbreviation\n\n@julionc are you agree ? :) \n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2df8dfb6b84f2427e70",
    "number": 2796,
    "body": "South Africa uses [ISO8601](https://en.wikipedia.org/wiki/ISO_8601) since [1998](https://en.wikipedia.org/wiki/Date_and_time_notation_in_South_Africa) so I've setup a locale for it\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2e08dfb6b84f2427e71",
    "number": 2794,
    "body": "Fixing failing unit tests as raised on Issue #2787 \n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2e18dfb6b84f2427e72",
    "number": 2786,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2e18dfb6b84f2427e73",
    "number": 2785,
    "body": "Redo of #2693\n",
    "head_branch": "fix-ta-numbers",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 5b720a191a3ff5cbc052660d65d38ca2ab756a64 into 11db26cc16d9012aa8a3cb4acbfabc81c0304be5"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2e38dfb6b84f2427e74",
    "number": 2782,
    "body": "This has been an issue for a long time.\n\nThe parser got a little bit more complicated, I don't think it can be done simpler. Basically each parsing function can say how many characters were consumed, so that a dot at the end of the month/weekday will be initially matched but then released, if the month doesn't end with a dot.\n\nTODO:\n- [x] fix #2801\n- [ ] put locale tests for months ending in dot for all locales (or at least the ones with dots)\n- [ ] auto-compute `haveDot` properties in locales on creation\n- [ ] redo dotFix locale method - put it out of locale prototype, change wording and put comments\n- [ ] handle non-strict dot-ending token with two dots separated by whitespace\n\nFixes #1920 \n",
    "head_branch": "fix-dot-abbr",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2e38dfb6b84f2427e75",
    "number": 2778,
    "body": "Since `develop` is this repo's default branch and there's no coverage data for master (yet).\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge c0f80232e8321cc5c217ea5d6ef7cac543d0888c into d731fe7e2678e585ae66cbe86033d1890688ef40"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2e48dfb6b84f2427e76",
    "number": 2777,
    "body": "I'm trying to come up with a failing test and fix for https://github.com/moment/moment/issues/1723, but it seems to be working just fine in `develop`.\n\nAm I missing anything?\n\nFixes https://github.com/moment/moment/issues/1723\n",
    "head_branch": "two-digit-time-zone",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2e58dfb6b84f2427e77",
    "number": 2776,
    "body": "This adds missing chinese locales.\n\n`zh-SG` is a copy of `zh-CN` as simplified chinese.\n`zh-MO` and `zh-HK` are copies of `zh-TW` as traditional chinese.\n\nAs far as I know there is no differences between these copies but this might be the case so it make sense to copy these files and not just link them. Note that I don't speak chinese at all but I work for chinese clients. All I know about the traditional and simplified chinese is described in this issue https://github.com/getnikola/nikola/issues/1637 .\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2e68dfb6b84f2427e78",
    "number": 2774,
    "body": "Users have requested this in one way or another.\n## Locale inheritance\n\nNow, you can write\n\n``` javascript\nmoment.defineLocale('en-foo', {\n  parentLocale: 'en',\n  /* */\n});\n```\n\nwhich would create a new locale `en-foo`, taking as base the `en` locale and modifying the specified properties. Providing an object field (like calendar) will update only the supplied fields, the rest will be inherited. (for exampe specifying `calendar: {sameDay: '...'}`, will update `sameDay`, but keep `nextDay` and the other calendar attributes).\n## Locale update\n\n``` javascript\nmoment.updateLocale('en', {\n  /**/\n});\n```\n\nThis has similar semantics to inheritance, but changes the specified locale, instead of creating a new one. Actually the original locale is not changed but a new one with the same name created. This means existing moments using the updated locale _won't_ change behavior.\n\nUse\n\n``` javascript\nmoment.updateLocale('en', null);\n```\n\nTo revert an update. If there are no applied updates this removes the locale.\n\nTODO:\n- [ ] make a proper base English locale, make other locales inherit from it behind the scenes\n",
    "head_branch": "locale-inheritance",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2e78dfb6b84f2427e79",
    "number": 2773,
    "body": "Updated all test for undefined to use new utility method isUndefined\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2e88dfb6b84f2427e7a",
    "number": 2766,
    "body": "Fix #2337\n\nMotivation: Need to implement client-side time synchronization for other project.\n\nExample:\n\n```\nmoment().toISOString()\n\"2015-11-22T23:02:47.586Z\"\n\nmoment.fn.now = function() { return 10000; };\n() { return 10000; }\n\nmoment().toISOString()\n\"1970-01-01T00:00:10.000Z\"\n\nmoment.fn.now = function() { return Date.now() * 2; };\n() { return Date.now() * 2; }\n\nmoment().toISOString()\n\"2061-10-13T22:06:22.934Z\"\n```\n",
    "head_branch": "alternate-clock-source-support",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2e98dfb6b84f2427e7b",
    "number": 2765,
    "body": "Switches file header from using `//!` to using `/*!` followed by `*`.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2ea8dfb6b84f2427e7c",
    "number": 2750,
    "body": "PR for Issue https://github.com/moment/moment/issues/2158 (Localized MM/DD/YY)\n\n**Changes Summary**\n- Adds locale format option `LY` to format date as: \n  - `MM/DD/YY` in `en`\n  - `DD/MM/YY` in `en-gb` (cc: locale author, @chrisgedrim)\n- Includes corresponding tests.  `grunt test` output screenshot below.\n\n<img width=\"417\" alt=\"screen shot 2015-11-16 at 4 09 47 pm\" src=\"https://cloud.githubusercontent.com/assets/6678014/11187506/937517ac-8c7e-11e5-822c-7e4104d557f0.png\">\n",
    "head_branch": "add-MM-DD-YY-locale-option",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2eb8dfb6b84f2427e7d",
    "number": 2746,
    "body": "I hope this fixes #2728  \n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2ec8dfb6b84f2427e7e",
    "number": 2744,
    "body": "This reapplies #2465, which was approved for 2.10.6, but somehow got deleted before it was merged.\n\nBasically, the comments are wrong about the `Date` object not accepting years before 1970.  It's just that it re-maps years 0 to 99 to 1900-1999 in a strange attempt at a Y2K fix.\n",
    "head_branch": "setFullYear",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2ed8dfb6b84f2427e7f",
    "number": 2741,
    "body": "Fix #2557.\n\nAlso make it easier to write standalone/format variants of months and weekdays.\n",
    "head_branch": "fix-cases",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2ee8dfb6b84f2427e80",
    "number": 2740,
    "body": "Fix #2342\n",
    "head_branch": "duration-format",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2ef8dfb6b84f2427e81",
    "number": 2739,
    "body": "This is the proper implementation of #2195 \n\nI'm not sure if the minified files should also start with a semicolon.\n",
    "head_branch": "semicolon-before-iife",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2f08dfb6b84f2427e82",
    "number": 2738,
    "body": "Fixed\n1. Grammatically corrected the words\n2. Corrected the mini-form of week days\n2. Corrected the meridiem time\n3. Corrected day of week and day of year\n\nRework of #2446\n",
    "head_branch": "fix-nepali",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 6c814f3c59daf24023c10cd0b7b18d5a13e9c393 into da969bfba78d743073895ef7b8cb83dac299395c"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2f18dfb6b84f2427e83",
    "number": 2735,
    "body": "Right now, if you include/import/load locales.js the locale is changed to 'zh-tw', because it is the last one defined. This patch resets the locale to `en` after all locales are defined.\n\nFixes #1798\n",
    "head_branch": "reset-locale-at-end",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2f28dfb6b84f2427e84",
    "number": 2734,
    "body": "This PR adds support for the IS/EN 28601 date time formats. We used the W3C post from John Cowan as guidance. He's a convenor who is on the national character set committee in Ireland.\n\nSee: http://lists.w3.org/Archives/Public/www-international/2001JulSep/0037.html\n\nIssue: https://github.com/moment/moment/issues/2733\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2f38dfb6b84f2427e85",
    "number": 2731,
    "body": "@mechuwind Date and time format more in line with official guide lines http://www.sprakradet.no/sprakhjelp/Skriveregler/Dato/\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2f48dfb6b84f2427e86",
    "number": 2726,
    "body": "",
    "head_branch": "fix/locale-mk",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2f58dfb6b84f2427e87",
    "number": 2724,
    "body": "Test is no longer dependent on the time it's being run. Test date is now statically set to the Summer Solstice of 2015 which should make it immune to DST-related inconsistencies.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2f68dfb6b84f2427e88",
    "number": 2723,
    "body": "Add an 'arguments' line to show more information about where the deprecated call was used.\n\nCloses #2356 \n\nHere's a jsfiddle with a demonstration: http://jsfiddle.net/sc6x537w/\n![image](https://cloud.githubusercontent.com/assets/148787/10866892/efb63c2a-8013-11e5-9ba7-10de97b4443f.png)\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2f78dfb6b84f2427e89",
    "number": 2722,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2f88dfb6b84f2427e8a",
    "number": 2721,
    "body": "Fixes problem with parsing Aug 31st for objects with string values (see test for an example of the problem). Analogous behavior to problem in #1870 with arrays\n",
    "head_branch": "support-object-with-strings",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2f88dfb6b84f2427e8b",
    "number": 2718,
    "body": "Warnings are showing in travis ci that esperanto and isn't being developed anymore and is deprecated and that to replace it with Babel instead.\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2f98dfb6b84f2427e8c",
    "number": 2717,
    "body": "Update os and browsers to test against.\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2fa8dfb6b84f2427e8d",
    "number": 2716,
    "body": "Test also against node_js versions 0.12 and 4.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2fb8dfb6b84f2427e8e",
    "number": 2709,
    "body": "-   isSameOrAfter\n-   isSameOrBefore\n",
    "head_branch": "add_date_comparison_methods",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2fc8dfb6b84f2427e8f",
    "number": 2702,
    "body": "A few changes fixing issues with the week calendar.\n\nFixes #2457 and #1379\n",
    "head_branch": "week-rework",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge cc641eb2c10348b3b3c2fdacd010914506eb4a0d into a4e932b19377eb87ed4730139b6b6bb4f7fc084a"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2fd8dfb6b84f2427e90",
    "number": 2700,
    "body": "Now hmm and hmmss will be properly parsed. Note that `hmm` can parse `123` as 1 hour 23 minute and also `1234` which is 12 hour and 34 minutes\n\nFixes #2418 \n",
    "head_branch": "hmm",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 90788a32b9f36928308be67cce2d81d236ca7813 into 4c61eb858db809e679e4d4b2c9c65cfdd0acfb2b"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2fe8dfb6b84f2427e91",
    "number": 2696,
    "body": "Old version that I use (2.6.0) in production has define like so:\ndefine(\"moment\", function (require, exports, module) {\nThat works.\nThe new version 2.10.6 (change in maybe one in the middle) does not.\nPlease review my fix, thank you.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa2ff8dfb6b84f2427e92",
    "number": 2693,
    "body": "Updated the number format in tamil when tamil locale is chosen\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3008dfb6b84f2427e93",
    "number": 2691,
    "body": "This is in response to the issue #2678 \nI have tried to fix the bug by checking if it is a function or not, similar to what is done in this file\n\n``` Javascript\n// src/lib/locale/calendar.js\nexport function calendar (key, mom, now) {\n    var output = this._calendar[key];\n    return typeof output === 'function' ? output.call(mom, now) : output;\n}\n```\n\nAlso a test file was created, as suggested by @mj1856 .\nI was wondering if there are any arguments to be passed in the function via call method.\nAny suggestions/reviews?\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3018dfb6b84f2427e94",
    "number": 2690,
    "body": "update weekdaysMin to 2 letters\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3028dfb6b84f2427e95",
    "number": 2685,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3038dfb6b84f2427e96",
    "number": 2684,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3048dfb6b84f2427e97",
    "number": 2683,
    "body": null,
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3058dfb6b84f2427e98",
    "number": 2682,
    "body": "Fix accents over spanish locale.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3068dfb6b84f2427e99",
    "number": 2675,
    "body": "To help with issues like #2331 and #2661 - adding a common function to calculate a person's exact age - or other whole-year differences between two given calendar dates.\n\nExample Usage:\n\n``` javascript\nmoment('1976-08-27').age() // 39\n```\n\nNote that I changed the function slightly from the example in #2331, such that Feb 29th birthdays will fall on Feb 28th in years without leap years.  There's a test for that included.\n",
    "head_branch": "age",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3078dfb6b84f2427e9a",
    "number": 2671,
    "body": "",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3088dfb6b84f2427e9b",
    "number": 2670,
    "body": "",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3098dfb6b84f2427e9c",
    "number": 2669,
    "body": "Have some problems removing historical commits from the PR. Please ignore the two initial commits listed. No source code is included with them.\n\nI have added ordinal support for quarters and tests for that according to my understanding of issue #2559. If you also want me to add parsing support, please let me know. Of course also open to any comments you may have to my code.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa30a8dfb6b84f2427e9d",
    "number": 2666,
    "body": "Adds klingon locale, as proposed in Issue #2431. \nBased on some excellent online resources :)\n",
    "head_branch": "klingon_tlh_locale",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa30b8dfb6b84f2427e9e",
    "number": 2665,
    "body": "This fixes #2614 \n\nWe still need to do something about dots in the end of weekdays (sample problem is for months too).\n",
    "head_branch": "better-strict-weekday",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge a8a7abfaa80f13f132827527d2c119249c84aaf6 into 1ef3e76a740f1df7ba54b21aca49545c0a8dce96"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa30b8dfb6b84f2427e9f",
    "number": 2663,
    "body": "It's currently breaking on apps running Meteor v1.2. Very simple fix. \n\nLine 6 was breaking for me when developing this locally. I had it set up by symlinking this directory over to my packages/ directory within an app. Had to supply the absolute path to `package.json` to get it to work locally, but I think that's only because of my setup.\n",
    "head_branch": "meteor-1.2-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa30c8dfb6b84f2427ea0",
    "number": 2654,
    "body": "Node.js v0.10 is a bit old at this point.\n",
    "head_branch": "travis-nodejs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa30d8dfb6b84f2427ea1",
    "number": 2652,
    "body": "",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa30e8dfb6b84f2427ea2",
    "number": 2651,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa30f8dfb6b84f2427ea3",
    "number": 2650,
    "body": "Expansion.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3108dfb6b84f2427ea4",
    "number": 2648,
    "body": "refer to #2640, add code to support instanceof operator and make tests.\n",
    "head_branch": "instanceof",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3118dfb6b84f2427ea5",
    "number": 2646,
    "body": "Fixes #2645 \n",
    "head_branch": "issue-2645-pre-1970",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3128dfb6b84f2427ea6",
    "number": 2641,
    "body": "Proper implementation for the remaining ISO 8601 pieces.\n\nFixes #2450\n",
    "head_branch": "iso-8601",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3138dfb6b84f2427ea7",
    "number": 2639,
    "body": "This is the combination of #2638 and #2637 for on behalf of @massic80 \n",
    "head_branch": "patch-5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3148dfb6b84f2427ea8",
    "number": 2638,
    "body": "Updated tests due to https://github.com/moment/moment/pull/2637#issuecomment-142983561\n",
    "head_branch": "patch-5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3158dfb6b84f2427ea9",
    "number": 2637,
    "body": "Rebasing, as discussed here https://github.com/moment/moment/pull/2237\n",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3168dfb6b84f2427eaa",
    "number": 2636,
    "body": "Rebasing, as discussed here https://github.com/moment/moment/pull/2237\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3178dfb6b84f2427eab",
    "number": 2635,
    "body": "Fixes #2289, obsoletes #2360.\n",
    "head_branch": "fix-thresholds-under-half-next",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3188dfb6b84f2427eac",
    "number": 2634,
    "body": "So I added short and long months parse arrays where they were needed and updated the tests\n- [x] fix broken locales\n- [ ] make sure we check for that when we create a locale\n- [ ] add strict month parsing tests for all locales \n\nfixes #2243, obsoletes #2493, #2527\n",
    "head_branch": "fix-strict-month-parsing",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3198dfb6b84f2427ead",
    "number": 2630,
    "body": "Hi @kalehv & @ichernev,\n\nAs per discussion in earlier PR #2625, committing only the 2 files under src folder.\nsrc/locale/mr.js\nsrc/test/locale/mr.js\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa31a8dfb6b84f2427eae",
    "number": 2625,
    "body": "Corrected Marathi translation (locale/mr.js) for relative time with suffix\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa31b8dfb6b84f2427eaf",
    "number": 2624,
    "body": "Implement proper handling of invalid moments across all methods.\n\nThe current situation is that only format will display moments as invalid, but most other methods will kind of work with some \"undefined behavior\" Date object stored underneath.\n\nNow all methods are predictable (I added tests) and work almost like NaNs -- operations involving them result in more NaNs and boolean checks return false.\n\nFixes #2619\n",
    "head_branch": "fix-2619",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa31c8dfb6b84f2427eb0",
    "number": 2622,
    "body": "… locale/calendar.js; added moment/calendar tests\n",
    "head_branch": "timothyfstephens/calendar_format_function",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa31d8dfb6b84f2427eb1",
    "number": 2613,
    "body": "adds kazakh locale with its tests\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa31e8dfb6b84f2427eb2",
    "number": 2603,
    "body": "Adds a normalize function for iso8601 strings which is used only when the string after the normalization appears to be valid iso8601.\n\nI've added tests to this pull request as well by copying the existing tests and removing the dashes and colons, and replacing the dots by commas.\n\nfixes: #2450\n",
    "head_branch": "patch-iso8601-issue2450",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa31f8dfb6b84f2427eb3",
    "number": 2597,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3208dfb6b84f2427eb4",
    "number": 2594,
    "body": "Adds locale and tests for Dhivehi/Thaana language.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3208dfb6b84f2427eb5",
    "number": 2589,
    "body": "Salvo que la mayúscula venga exigida por la puntuación (a comienzo de texto o después de punto), los nombres de los días de la semana, de los meses y de las estaciones del año se escriben en español con minúscula inicial.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3218dfb6b84f2427eb6",
    "number": 2588,
    "body": "",
    "head_branch": "mongolian-locale",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3228dfb6b84f2427eb7",
    "number": 2587,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3238dfb6b84f2427eb8",
    "number": 2583,
    "body": "I'm not sure why the `src` directory needs to be distributed via bower. The\n'main' file is set to `/moment.js`, outside of `src`, and users also have access\nto the `min` directory.\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3248dfb6b84f2427eb9",
    "number": 2579,
    "body": "Russian locale: capitalized first cahracters in names\n\nfixes: #2569\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3258dfb6b84f2427eba",
    "number": 2577,
    "body": "We shouldn't point to the bundled file in the jspm config. Because in the top the bundled file is trying to export itself when runs inside jspm bundle is broken in Firefox (https://github.com/moment/moment/issues/2576), I can't replicate this in Chrome but even that we shouldn't do that.\n\n@ryanlanciaux keep in mind this issue for Griddle because is the same problem in this ticket https://github.com/GriddleGriddle/Griddle/issues/201 The main file is very important file for these tools.\n",
    "head_branch": "fixing-es6-main-file-in-package.json",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3268dfb6b84f2427ebb",
    "number": 2572,
    "body": "This function returns an object containing the input format, input value, locale, and whether the moment was created in UTC.\n\nResolves #2443\n",
    "head_branch": "creation-data",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3278dfb6b84f2427ebc",
    "number": 2565,
    "body": "Hi Guys, just cannot wait. so put this feature in. Please review and advise. Thx\nmore details is here: [#2441](https://github.com/moment/moment/issues/2441) and [#2443](https://github.com/moment/moment/issues/2443)\n\nthe feature is to make a function called creationData(), which returns an object with input,\nformat, isUTC, locale\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3288dfb6b84f2427ebd",
    "number": 2562,
    "body": "Swiss french is slightly different from french: we use dots instead of slashes to display dates (14.2.2014 versus 14/2/2014). I also included the ordinal changes recently made to fr-ca conerning ordinal abbreviation but am not sure why it was rejected in 'fr' locale and if this rejection would also apply to 'fr-ch'.\n\n@jfroffice, do you have examples where the abbreviation looks wrong ?\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3298dfb6b84f2427ebe",
    "number": 2557,
    "body": "Even though names of months are 'siječanj' 'veljača' etc. that is NOT the right way to write them as a date!\n(same goes for other months) : 14. veljače 3. ožujka 17. travnja 21. svibnja 26. lipnja 19. srpnja 1. kolovoza 9. rujna 10. listopada 22. studenog 15. prosinca\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa32a8dfb6b84f2427ebf",
    "number": 2556,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa32b8dfb6b84f2427ec0",
    "number": 2553,
    "body": "'L(s)' and 'l(s)' get the same result,but standard months('L') should use the Chinese number. GB/T 7408-1994\n#2514 BTW only modify the src/. file\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa32c8dfb6b84f2427ec1",
    "number": 2549,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa32d8dfb6b84f2427ec2",
    "number": 2548,
    "body": "This PR is to add Scots Gaelic (gd) support to moment.js\n- [x] modifies parser to accept Gaelic months\n- [x] include Scots Gaelic Language file\n- [x] includes Scots Gaelic unit tests\n",
    "head_branch": "add_scots_gaelic_support",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa32e8dfb6b84f2427ec3",
    "number": 2545,
    "body": "This is an update of Pull Request #2228 authored by @fadsel. \nIt has been rebased to latest develop; the locale moved to src/local; and tests added.\nI don't speak swahili so the language is as per the original Pull Request.\n\nTo be confirmed by @fadsel:\n- [x] Is using AM and PM for time correct? As this is not defined, AM/PM this will be used by default;\n- [x] Is it correct that no ordinals are defined? This will mean that 1st, 2nd, 3rd and 4th are just written as 1, 2, 3 and 4.\n- [ ] Does \"hivi punde baadaye\" make sense for \"in a few seconds / in a short while\" and does \"tokea hivi punde\" make sense for \"a few seconds ago / a short while ago\"? This is how Moment will produce those phrases.\n- [ ] The translation of \"at\" seems inconsistent for today & tomorrow (\"saa\") vs. next week and last week (\"saat\") and seems to be missing for yesterday i.e. should \"[jana] LT\" be \"[jana saa] LT\"?\n- [ ] Next week & last week seem to be the equivalent of \"next week Tuesday\" and \"last week Tuesday\". Wouldn't you just say \"next Tuesday\" and \"last Tuesday\"?\n\nThat's all. Feel free to submit your own Pull Request using this work if it helps.\n",
    "head_branch": "swahili_locale",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa32f8dfb6b84f2427ec4",
    "number": 2544,
    "body": "Add locale for Lao language\nReplace earlier Pull Request #2510\n",
    "head_branch": "lao_locale",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa32f8dfb6b84f2427ec5",
    "number": 2543,
    "body": "`isFunction` was introduced in #2325 but only for one case: `addRegexToken`.\n\nThere are also other cases where legacy `Android` versions mistake `RegExps` for `functions`, so we should not rely on `typeof x === 'function'` but rather always check using `isFunction`.\n",
    "head_branch": "is-function",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3308dfb6b84f2427ec6",
    "number": 2541,
    "body": "Reproduce issue:\n1. Open http://momentjs.com/\n2. Set `Russian` locale.\n3. Execute in console (wrong)\n\n``` js\nmoment().subtract(3, 'days').calendar() == moment().add(4, 'days').calendar()\n```\n",
    "head_branch": "fix_ru_locale_next_week",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3318dfb6b84f2427ec7",
    "number": 2534,
    "body": "Added a check to verify 'require' is a function, before assuming it exists. In some cases 'exports' and 'module' are defined even when the system is not using require. (such as when using the lumbarjs module management).\n",
    "head_branch": "verify-require-function",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3328dfb6b84f2427ec8",
    "number": 2528,
    "body": "Requested in https://github.com/moment/moment/issues/2520\n",
    "head_branch": "ignore-tests-npm",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge eb35595035ebd10b2505c8f249f57fb79b468543 into f3fbef9d9875bbff340b527dbe3f1c447a942f69"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3338dfb6b84f2427ec9",
    "number": 2524,
    "body": "In english and some other languages, the first of the characters is in uppercase. So why is different in this languages?\n\nI already implemented this change in other languages: [Standart nomenclature (pt, pt-br, es)](https://github.com/moment/moment/pull/2328)\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3348dfb6b84f2427eca",
    "number": 2515,
    "body": "This was caused by https://github.com/moment/moment/pull/2368/files#diff-e792da0601bb2705000e86ef203f8e73R61\n\nWe should have had a test to cover for this case :)\n\nFix for #2512\n",
    "head_branch": "fix-constructor",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3358dfb6b84f2427ecb",
    "number": 2514,
    "body": "'L(s)' and 'l(s)' get the same result,but standard months('L') should use the Chinese number. GB/T 7408-1994\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3368dfb6b84f2427ecc",
    "number": 2510,
    "body": "",
    "head_branch": "lao_locale",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3378dfb6b84f2427ecd",
    "number": 2508,
    "body": "Redo #2124 in es6\n",
    "head_branch": "redo-2124",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3388dfb6b84f2427ece",
    "number": 2507,
    "body": "Same as #2191 but in es6 directory structure.\n",
    "head_branch": "redo-2191",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3398dfb6b84f2427ecf",
    "number": 2506,
    "body": "Same as #2123, but inside the es6 directory structure.\n",
    "head_branch": "to-object",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa33a8dfb6b84f2427ed0",
    "number": 2498,
    "body": "In Spanish, day and month names should be lowercase... as they were prior to commit 7d147d6\n\nfixes #2497 \n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa33b8dfb6b84f2427ed1",
    "number": 2494,
    "body": "Further to the discussion in #2344, this PR provides an alternative way to fix #2343.\n\nI've had to delete one of the existing tests to get this to pass -- it seems that although a couple of people have agreed that the behaviour described in #2343 is unwanted, there was actually a test there to make sure it happened.\n",
    "head_branch": "yyyy-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa33c8dfb6b84f2427ed2",
    "number": 2493,
    "body": "Fixes #2243 for Czech (overwrites default parser due to #477) and Slovak (uses default parser since it doesn't actually have the same problem).\n\nI've tried writing a test for parsing in strict mode by changing\n\n``` js\nfunction equalTest(input, mmm, monthIndex) {\n  assert.equal(moment(input, mmm).month(), monthIndex, input + ' should be month ' + (monthIndex + 1));\n}\n```\n\nto\n\n``` js\nfunction equalTest(input, mmm, monthIndex) {\n  assert.equal(moment(input, mmm, true).month(), monthIndex, input + ' should be month ' + (monthIndex + 1));\n}\n```\n\nbut it fails with:\n\n```\nModule: locale:cs Test: strict parse\nDied on test #1     at /Users/petrbela/code/petrbela/moment/build/umd/test/locale/cs.js:74:5\n    at test (/Users/petrbela/code/petrbela/moment/build/umd/test/locale/cs.js:3:67)\n    at Object.<anonymous> (/Users/petrbela/code/petrbela/moment/build/umd/test/locale/cs.js:6:2)\n    at Module._compile (module.js:456:26)\n    at Object.Module._extensions..js (module.js:474:10)\n    at Module.load (module.js:356:32)\n    at Function.Module._load (module.js:312:12)\n    at Module.require (module.js:364:17): Cannot read property '0' of undefined\nTypeError: Cannot read property '0' of undefined\n    at Locale.localeMonthsParse [as monthsParse] (/Users/petrbela/code/petrbela/moment/build/umd/moment.js:659:49)\n    at Object.<anonymous> (/Users/petrbela/code/petrbela/moment/build/umd/moment.js:626:36)\n    at addTimeToArrayFromToken (/Users/petrbela/code/petrbela/moment/build/umd/moment.js:580:26)\n    at configFromStringAndFormat (/Users/petrbela/code/petrbela/moment/build/umd/moment.js:1197:17)\n    at createFromConfig (/Users/petrbela/code/petrbela/moment/build/umd/moment.js:1324:13)\n    at createLocalOrUTC (/Users/petrbela/code/petrbela/moment/build/umd/moment.js:1380:16)\n    at local__createLocal (/Users/petrbela/code/petrbela/moment/build/umd/moment.js:1384:16)\n    at utils_hooks__hooks (/Users/petrbela/code/petrbela/moment/build/umd/moment.js:16:29)\n    at notEqualTest (/Users/petrbela/code/petrbela/moment/build/umd/test/locale/cs.js:80:30)\n    at Object.<anonymous> (/Users/petrbela/code/petrbela/moment/build/umd/test/locale/cs.js:84:13)\n```\n\nAny idea what might be going wrong?\n",
    "head_branch": "fix/2243",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa33c8dfb6b84f2427ed3",
    "number": 2492,
    "body": "This commit solves the problem with negative durations, which was described here: https://github.com/moment/moment/issues/2408\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa33d8dfb6b84f2427ed4",
    "number": 2489,
    "body": "As explained in the issue #2479, deprecate function causes Firefox 10 to hang for approximatively 3 seconds at each page load.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 2a70715ff9b447675b517e3c753287c935e41783 into 27e22be08e5f7706a950d5ffb92020204eb37373"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa33e8dfb6b84f2427ed5",
    "number": 2487,
    "body": "A few Bangla words are fixed. \n\nRef: \n- http://www.ovidhan.org/b2b/%E0%A6%AC%E0%A6%BF%E0%A6%95%E0%A6%BE%E0%A6%B2 \n  or https://translate.google.com/#en/bn/%E0%A6%AC%E0%A6%BF%E0%A6%95%E0%A6%BE%E0%A6%B2\n- https://translate.google.com/#en/bn/Friday\n",
    "head_branch": "fix-bangla-evening",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa33f8dfb6b84f2427ed6",
    "number": 2486,
    "body": "I suggest this commit to let travis run on last version of iojs and more versions of node.\n\n<!-- Reviewable:start -->\n\n[<img src=\"https://reviewable.io/review_button.png\" height=40 alt=\"Review on Reviewable\"/>](https://reviewable.io/reviews/moment/moment/2486)\n\n<!-- Reviewable:end -->\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3408dfb6b84f2427ed7",
    "number": 2478,
    "body": "The day after tomorrow was always determined as next week.\nSo we should subtract startOfWeek time from current time, and check it is larger then a week.\n",
    "head_branch": "zh-tw",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3418dfb6b84f2427ed8",
    "number": 2477,
    "body": "The `ms-my` key for the Malay locale is wrong, but we can not just remove the old one (backwards compatibility), so I'll just add the new locale, and we can remove the old one in `3.0`.\n\nThis is a redo of #2347.\n",
    "head_branch": "add-ms-locale",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3428dfb6b84f2427ed9",
    "number": 2476,
    "body": "Maybe its a bit of a hack, but I didn't want to store the input array (`_a`) inside the moment object, just for that function. So I recreate it, as if the moment is created right now, then I do the checks and cache the result.\n\n@icambron what do you think?\n",
    "head_branch": "fix-is-dst-shifted",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3438dfb6b84f2427eda",
    "number": 2473,
    "body": "Fixes QUnit complaining about exiting test early.\n",
    "head_branch": "fix-2023.1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3448dfb6b84f2427edb",
    "number": 2471,
    "body": "",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3458dfb6b84f2427edc",
    "number": 2467,
    "body": "When this test was switched from `.zone()` to `.utcOffset()`, the sign of the value changed, which broke the test for time zones that use fractional-hour offsets, such as UTC+05:30.  We now need to round down instead of up.\n\nFixes #2389. \n",
    "head_branch": "fix-2337.6",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3468dfb6b84f2427edd",
    "number": 2465,
    "body": "I noticed a comment and code indicating that `Date` won't take years before 1970, which is not true, it's just that years 0-99 are remapped to 1900-1999.   Updating accordingly.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3478dfb6b84f2427ede",
    "number": 2464,
    "body": "Updated to reflect the approved ISO standard, and abbreviations according to official rules\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3488dfb6b84f2427edf",
    "number": 2462,
    "body": "this fixes an issue where isSame would return true for two invalid moments, which is inconsistent with NaN === NaN and also inconsistent with other cases where isSame would return false for two invalid moments. (some invalid moments are backed by a valid date)\n\nFixes #2354\n",
    "head_branch": "fix/2354",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3498dfb6b84f2427ee0",
    "number": 2461,
    "body": "It also fixes broken way days were bubbling to months before, including (but not limited to) 364 days being 1 year and 4 days (because we round 30 days to a month, and extract 12 months from 364 with 4 extra ... LOL).\n\nI had to change the \"fundamental\" 30 days == 1 month (now its 31 days, because of the anchoring).\n\n@icambron @mj1856 what do you think?\n",
    "head_branch": "duration-bubble",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa34a8dfb6b84f2427ee1",
    "number": 2460,
    "body": "When too much tests are broken, testing just a single file makes things easier to debug.\n",
    "head_branch": "support-partial-test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa34b8dfb6b84f2427ee2",
    "number": 2459,
    "body": "Add a class check, as proposed here https://github.com/moment/moment/issues/2325#issuecomment-94516827\n",
    "head_branch": "fix-add-regex-token",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa34c8dfb6b84f2427ee3",
    "number": 2458,
    "body": "source of currect names for months is http://www.localeplanet.com/icu/uz/\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa34d8dfb6b84f2427ee4",
    "number": 2456,
    "body": "Well, we were just not checking if the weekday was invalid.\n\nI also found other issues related to the week-year, week, week-day parsing -- we don't do any overflow checks there, I'll submit it as another issue.\n",
    "head_branch": "fix-str-weekday-parse-check",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa34e8dfb6b84f2427ee5",
    "number": 2455,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa34f8dfb6b84f2427ee6",
    "number": 2451,
    "body": "Even though names of months are 'siječanj' 'veljača' etc. that is NOT the right way to write them as a date!\n\n`Po istom ovom principu pišu se i ostali mjeseci (same goes for other months) :\n14. veljače 3. ožujka 17. travnja 21. svibnja 26. lipnja 19. srpnja 1. kolovoza 9. rujna 10. listopada 22. studenog(a) 15. prosinca`\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa34f8dfb6b84f2427ee7",
    "number": 2449,
    "body": "This just fixes the bug at hand. Quickly skimming through the ISO 8601 section on wikipedia reveals a ton of issues, which need to be addressed with a bigger code reorganization.\n",
    "head_branch": "fix-iso",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3508dfb6b84f2427ee8",
    "number": 2448,
    "body": "Add support for parsing and formatting up to 9 digit milliseconds (fractional seconds). Only milliseconds are stored, so extra digits read are discarded, and extra digits printed are zeros.\n",
    "head_branch": "ms-tokens",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3518dfb6b84f2427ee9",
    "number": 2446,
    "body": "Fixed-\n1. Grammatically corrected the words\n2. Corrected the mini-form of week days\n2. Corrected the meridiem time\n3. Corrected day of week and day of year\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3528dfb6b84f2427eea",
    "number": 2442,
    "body": "Even 4 character month names should be cut to 3 symbols\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3538dfb6b84f2427eeb",
    "number": 2439,
    "body": "Moment is exported as a default export from moment.js but locale files import it as a named export.\nThis results in `Module does not export 'moment'` errors (issue #2394).\n\nThis pull request fixes named imports in locale files to use default import.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3548dfb6b84f2427eec",
    "number": 2438,
    "body": "Fixes #2362, includes updated tests for moment.min and moment.max.\n\nAlso includes tests to show that moment.isBefore and moment.isAfter correctly handle invalid moments.\n",
    "head_branch": "fixInvalidMin",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3558dfb6b84f2427eed",
    "number": 2434,
    "body": "See datetimes at:\nhttp://www-01.ibm.com/support/knowledgecenter/SSS28S_8.1.0/XFDL/i_xfdl_r_formats_hu_HU.dita\n",
    "head_branch": "fix/hu",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3568dfb6b84f2427eee",
    "number": 2429,
    "body": "Modified the translation originally made by @bleadof to be more similar to the other translations.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3578dfb6b84f2427eef",
    "number": 2424,
    "body": "This is useful if you want to override the locale-specified defaults on a case-by-case basis (i.e., not by changing the global config), for example if you don't want to include the time:\n\n```\nmoment().calendar(null, {\n  sameDay: '[Today]',\n  nextDay: '[Tomorrow]',\n  nextWeek: 'dddd',\n  lastDay: '[Yesterday]',\n  lastWeek: '[Last] dddd'\n})\n```\n\nNote that if you don't override a format, the default from the locale is still used - i.e., `sameElse` isn't specified above.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 15df9d7cf7102e4655f765b965ec3d30b337c699 into 89d76e55b5332ec7c966bc544cabebe6498daa0e"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3588dfb6b84f2427ef0",
    "number": 2422,
    "body": "Grammar ref: http://www.duden.de/sprachwissen/rechtschreibregeln/Gro%C3%9F-%20und%20Kleinschreibung\n\nThe original authors of these (`de` and `de-at`) translation are: @lluchs @Oire @MadMG \n",
    "head_branch": "de-capitalization",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3598dfb6b84f2427ef1",
    "number": 2421,
    "body": "Bengali translation of morning should be, \"সকাল\" (sokal) not শকাল (shokal). This PR fixes that.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa35a8dfb6b84f2427ef2",
    "number": 2420,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa35b8dfb6b84f2427ef3",
    "number": 2419,
    "body": "fixes #2163\n\nNot sure if the [test](https://github.com/jisaacks/moment/commit/73858808bdccc66f977201106798fb12e2eb6f33#diff-a7ade0358f2dce9fbec30b1a36e39523R328) is necessary, having to manually list all the locales could become hard to maintain. Would love to have that list generated. However, the test sure helped me feel confident I did not miss any.\n",
    "head_branch": "local-format-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa35c8dfb6b84f2427ef4",
    "number": 2414,
    "body": "I went for the simpler \"deuxième, troisième\" form instead of \"second,\ntroisième\". All numbers after 1 share the same abbreviation.\n\nMy first idea was to go for \"ème\", but looking for a source to back my\nPR I found that the \"correct\" way is \"e\", at least according to printing\nrules: https://fr.wiktionary.org/wiki/2%C3%A8me\n\nThe French Academy doesn't seem to have any article concerning the\nabbreviation, only the \"second / deuxième\" usage:\nhttp://www.xn--acadmie-franaise-npb1a.fr/la-langue-francaise/questions-de-langue#29_strong-em-deuxime-second-em-strong\n\nPing @jfroffice \n",
    "head_branch": "ordinal-fr",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa35d8dfb6b84f2427ef5",
    "number": 2412,
    "body": "Per bower/bower.json-spec@a325da3\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa35e8dfb6b84f2427ef6",
    "number": 2404,
    "body": "When a valid ISO-8601 date string without a time component is parsed using `moment.ISO_8601` as the date format and strict parsing is enabled, the resulting Moment object is invalid.\n\nHere's a JSFiddle: https://jsfiddle.net/k3snbte9/\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa35f8dfb6b84f2427ef7",
    "number": 2401,
    "body": "",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3608dfb6b84f2427ef8",
    "number": 2400,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3618dfb6b84f2427ef9",
    "number": 2393,
    "body": "#2367 **moment-with-locales.custom.js uses last defined locale by default**\n\n`moment-with-locales.js` and `moment-with-locales.custom.js` were default to \"en\".\n\nSee grunt task `embedLocales`: \n\n``` javascript\nvar languageReset = 'moment.locale(\\'en\\');';\n```\n\nAdding it back to transpiling task seems the right thing to do. \n\n---\n\n**custom locale building was broken**\n\n![screen shot 2015-05-28 at 2 38 08 pm](https://cloud.githubusercontent.com/assets/25500/7871808/34824378-0547-11e5-9279-f550314e703f.png)\n\nIn current built `moment-with-locales.custom.js`:\n\nthis line\n\n``` javascript\nvar moment_with_locales_custom = moment;\n```\n\nwhich `moment` is actually undefined, and should be replaced with the matches from the regex, \nand thus become\n\n``` javascript\nvar moment_with_locales_custom = moment__default;\n```\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3628dfb6b84f2427efa",
    "number": 2387,
    "body": "This pull adds coverage reporting facilitated by [nyc](https://www.npmjs.com/package/nyc) and the hosted coverage service coveralls.io.\n- run `npm run coverage` to get a human readable coverage report.\n- run `npm run coverage -- --reporter=lcov` to get an HTML report over coverage in the /coverage folder.\n- run `npm run coveralls` to report coverage to the [coveralls.io](https://coveralls.io/).\n  - you'll need to setup your repo on coveralls.io and grap the `COVERALLS_REPO_TOKEN`.\n  - on travis-ci.org, you'll need to set an environment variable with the value of `COVERALLS_REPO_TOKEN`\n\nHere's what coverage currently looks like for moment:\n\n``` shell\n---------------------------|-----------|-----------|-----------|-----------|\nFile                       |   % Stmts |% Branches |   % Funcs |   % Lines |\n---------------------------|-----------|-----------|-----------|-----------|\n   ./                      |       100 |        50 |       100 |       100 |\n      Gruntfile.js         |       100 |        50 |       100 |       100 |\n   ./build/umd/            |     98.11 |     92.61 |     97.59 |      98.1 |\n      moment.js            |     98.11 |     92.61 |     97.59 |      98.1 |\n   ./build/umd/locale/     |      93.9 |     71.01 |     95.99 |      93.9 |\n      af.js                |     77.78 |     57.89 |        80 |     77.78 |\n      ar-ma.js             |       100 |      37.5 |       100 |       100 |\n      ar-sa.js             |     84.62 |        40 |      87.5 |     84.62 |\n      ar-tn.js             |       100 |      37.5 |       100 |       100 |\n      ar.js                |     89.47 |     65.38 |     90.91 |     89.47 |\n      az.js                |     76.47 |      61.9 |        80 |     76.47 |\n      be.js                |     94.44 |     81.67 |     90.91 |     94.44 |\n      bg.js                |     95.24 |     74.19 |       100 |     95.24 |\n      bn.js                |     94.74 |     68.75 |      87.5 |     94.74 |\n      bo.js                |     94.74 |     68.75 |      87.5 |     94.74 |\n      br.js                |     96.15 |     72.73 |       100 |     96.15 |\n      bs.js                |     89.13 |      74.6 |       100 |     89.13 |\n      ca.js                |       100 |     73.33 |       100 |       100 |\n      cs.js                |     86.79 |        90 |       100 |     86.79 |\n      cv.js                |       100 |     58.33 |       100 |       100 |\n      cy.js                |     91.67 |     68.42 |       100 |     91.67 |\n      da.js                |       100 |      37.5 |       100 |       100 |\n      de-at.js             |       100 |        50 |       100 |       100 |\n      de.js                |       100 |        50 |       100 |       100 |\n      el.js                |       100 |        75 |       100 |       100 |\n      en-au.js             |       100 |     68.75 |       100 |       100 |\n      en-ca.js             |       100 |     68.75 |       100 |       100 |\n      en-gb.js             |       100 |     68.75 |       100 |       100 |\n      eo.js                |        75 |     42.86 |        75 |        75 |\n      es.js                |       100 |        60 |       100 |       100 |\n      et.js                |       100 |     64.29 |       100 |       100 |\n      eu.js                |       100 |      37.5 |       100 |       100 |\n      fa.js                |     84.62 |        40 |      87.5 |     84.62 |\n      fi.js                |       100 |     68.89 |       100 |       100 |\n      fo.js                |       100 |      37.5 |       100 |       100 |\n      fr-ca.js             |       100 |        50 |       100 |       100 |\n      fr.js                |       100 |        50 |       100 |       100 |\n      fy.js                |       100 |     66.67 |       100 |       100 |\n      gl.js                |       100 |        65 |       100 |       100 |\n      he.js                |       100 |        75 |       100 |       100 |\n      hi.js                |       100 |        80 |       100 |       100 |\n      hr.js                |     89.13 |      74.6 |       100 |     89.13 |\n      hu.js                |     92.86 |     78.87 |      87.5 |     92.86 |\n      hy-am.js             |     96.43 |     78.26 |        90 |     96.43 |\n      id.js                |       100 |     76.92 |       100 |       100 |\n      is.js                |     82.98 |     59.52 |       100 |     82.98 |\n      it.js                |      87.5 |        50 |       100 |      87.5 |\n      ja.js                |      87.5 |        50 |        75 |      87.5 |\n      jv.js                |       100 |     76.92 |       100 |       100 |\n      ka.js                |     90.91 |     67.86 |       100 |     90.91 |\n      km.js                |       100 |      37.5 |       100 |       100 |\n      ko.js                |       100 |        50 |       100 |       100 |\n      lb.js                |      87.8 |     72.73 |       100 |      87.8 |\n      lt.js                |     92.86 |     61.29 |       100 |     92.86 |\n      lv.js                |       100 |        75 |       100 |       100 |\n      me.js                |       100 |        64 |       100 |       100 |\n      mk.js                |     95.24 |     74.19 |       100 |     95.24 |\n      ml.js                |     92.86 |     68.75 |        75 |     92.86 |\n      mr.js                |       100 |        80 |       100 |       100 |\n      ms-my.js             |       100 |     76.92 |       100 |       100 |\n      my.js                |       100 |      37.5 |       100 |       100 |\n      nb.js                |       100 |      37.5 |       100 |       100 |\n      ne.js                |       100 |     82.35 |       100 |       100 |\n      nl.js                |       100 |     66.67 |       100 |       100 |\n      nn.js                |       100 |      37.5 |       100 |       100 |\n      pl.js                |     96.15 |     78.38 |       100 |     96.15 |\n      pt-br.js             |       100 |     58.33 |       100 |       100 |\n      pt.js                |       100 |     58.33 |       100 |       100 |\n      ro.js                |       100 |     61.54 |       100 |       100 |\n      ru.js                |     93.02 |     82.14 |     91.67 |     93.02 |\n      si.js                |       100 |     57.14 |       100 |       100 |\n      sk.js                |     86.79 |     89.89 |       100 |     86.79 |\n      sl.js                |     90.16 |     80.39 |       100 |     90.16 |\n      sq.js                |     83.33 |        50 |        75 |     83.33 |\n      sr-cyrl.js           |       100 |        64 |       100 |       100 |\n      sr.js                |       100 |        64 |       100 |       100 |\n      sv.js                |       100 |     68.75 |       100 |       100 |\n      ta.js                |       100 |     85.29 |       100 |       100 |\n      th.js                |        75 |        40 |        75 |        75 |\n      tl-ph.js             |       100 |      37.5 |       100 |       100 |\n      tr.js                |       100 |     66.67 |       100 |       100 |\n      tzm-latn.js          |       100 |      37.5 |       100 |       100 |\n      tzm.js               |       100 |      37.5 |       100 |       100 |\n      uk.js                |     92.11 |     77.78 |     91.67 |     92.11 |\n      uz.js                |       100 |      37.5 |       100 |       100 |\n      vi.js                |       100 |      37.5 |       100 |       100 |\n      zh-cn.js             |     97.44 |     76.92 |       100 |     97.44 |\n      zh-tw.js             |      96.3 |     81.08 |       100 |      96.3 |\n   ./tasks/                |     44.98 |      37.1 |     43.01 |     44.98 |\n      bump_version.js      |        20 |         0 |        50 |        20 |\n      check_sauce_creds.js |     33.33 |         0 |        50 |     33.33 |\n      component.js         |     33.33 |       100 |        50 |     33.33 |\n      embed_locales.js     |     29.17 |         0 |     16.67 |     29.17 |\n      history.js           |        20 |         0 |      6.25 |        20 |\n      nuget.js             |       100 |       100 |       100 |       100 |\n      size.js              |        20 |         0 |      8.33 |        20 |\n      transpile.js         |     79.05 |     76.67 |     81.58 |     79.05 |\n      update_index.js      |       100 |       100 |       100 |       100 |\n      zones.js             |        20 |         0 |      7.69 |        20 |\n---------------------------|-----------|-----------|-----------|-----------|\nAll files                  |     91.68 |     76.29 |     90.09 |     91.67 |\n```\n",
    "head_branch": "coverage",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3638dfb6b84f2427efb",
    "number": 2380,
    "body": "https://docs.npmjs.com/files/package.json#license\nhttp://npm1k.org/\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge acddc954713abc7c20a8af68bdc341c35d01efbd into 25cc720fbaab7323a1016cd0beb6a36e349c41be"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3648dfb6b84f2427efc",
    "number": 2377,
    "body": "There is unreachable code in function cloneWithOffset().\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3658dfb6b84f2427efd",
    "number": 2376,
    "body": "`grunt transpile:fr,ru` is broken-- if you attempt to use a resulting custom build, the browser will throw the error \"moment is undefined.\" The offending line in the build:\n`var moment_with_locales_custom = moment;`\nshould be\n`var moment_with_locales_custom = moment__default;`\nThis substitution is made with regex that I added.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3668dfb6b84f2427efe",
    "number": 2371,
    "body": "Per https://github.com/bower/bower.json-spec/commit/a325da3d79baab018c572d75dc1781b12322f6cd\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3678dfb6b84f2427eff",
    "number": 2370,
    "body": "This fixes https://github.com/moment/moment/issues/2354 and matches the\nprecedent in javascript following that invalid types are not comparable\n(similar to NaN).\n",
    "head_branch": "fix/invalid_is_same",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3688dfb6b84f2427f00",
    "number": 2369,
    "body": "Before update\n\nmoment.locale()\n\"ru\"\nvar m = moment('2015-05-01');\nm.weekday()\n4 => _четверг_ (true - _пятница_)\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3688dfb6b84f2427f01",
    "number": 2368,
    "body": "Reference: http://jsperf.com/date-copy-constructor/3\n\nDidn't expect this to make so much of a difference, but here we are.  I presume `Moment` always gets a `config` object where `_d` is a Date; certainly seems to be the case and no tests failed.  Results of `grunt test update-index benchmark`:\n\n---\n\nBefore:\n\n```\nRunning benchmark clone [benchmarks/clone.js]...\n>> clone x 3,698,440 ops/sec ±0.77% (85 runs sampled)\nRunning benchmark fromDate [benchmarks/fromDate.js]...\n>> fromDate x 1,709,634 ops/sec ±1.05% (79 runs sampled)\nRunning benchmark fromDateUtc [benchmarks/fromDateUtc.js]...\n>> fromDateUtc x 1,623,291 ops/sec ±0.95% (90 runs sampled)\n```\n\n---\n\nAfter:\n\n```\nRunning benchmark clone [benchmarks/clone.js]...\n>> clone x 4,919,547 ops/sec ±0.69% (87 runs sampled)\nRunning benchmark fromDate [benchmarks/fromDate.js]...\n>> fromDate x 2,232,456 ops/sec ±0.54% (92 runs sampled)\nRunning benchmark fromDateUtc [benchmarks/fromDateUtc.js]...\n>> fromDateUtc x 2,151,327 ops/sec ±1.01% (78 runs sampled)\n```\n",
    "head_branch": "clone-perf",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3698dfb6b84f2427f02",
    "number": 2360,
    "body": "...ow 30 seconds than bug occurs\n",
    "head_branch": "bugfix/less-than-30-seconds-threshold",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa36a8dfb6b84f2427f03",
    "number": 2357,
    "body": "## What is this?\n\nThis PR intends to fix issues with invalid ISO dates getting created from a well formatted `moment.duration`. GitHub Issues I am aware of:\n- https://github.com/moment/moment/issues/2162\n- https://github.com/moment/moment/issues/1697\n\nWhat I have done is basically:\n- not use `this.data` as source of truth anymore for `toISOString`\n  - I thought about changing the way `data` is filled, but I believe this would be the wrong approach, correct me if I am wrong\n- use some custom bubbling for `toISOString` that stops bubbling at **hours** and **days**\n  - these are basically the borders that are also used internally\n  - internal fields are milliseconds (which can bubble up to hours), days and month (becoming years)\n- add one-line spec that should cover all new edge cases\n## Why is it useful?\n\nThe ISO 8601 standard (which I only know from second hand knowledge), makes a difference between hours, days and months. That is:\n- `P1D` means tommorrow, at the same time\n- `PT24H` means in 24 hours, which can be different from the former case, if the clock changed in the meantime (think of DST changes, leap seconds, etc)\n- `P30D` means in thirty days, no matter how many days the current month has\n- `P1M` means on the same date in the next month\n\nThus from an ISO perspective there is a difference between `moment.duration(1, 'days')` and `moment.duration(24, 'hours')` which should now be reflected.\n\n_Note: I've written down similar arguments in the linked issues, but I believe it helps clarity to repeat it if I open a PR ^^_\n",
    "head_branch": "feature/iso_date_bubbling",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa36b8dfb6b84f2427f04",
    "number": 2347,
    "body": "According to ISO 639-2 Malay language code/tag is 'ms' please refer [here](http://www.loc.gov/standards/iso639-2/php/code_list.php).\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa36c8dfb6b84f2427f05",
    "number": 2344,
    "body": "This attempts to fix #2343 by adding a new format specifier, `U`, to allow the parsing of dates with either 2 or 4 digit years.  E.g.:\n\n```\nmoment('D/M/U', '18/9/14').format('DD/MM/YYYY') == '18/09/2014'\nmoment('D/M/U', '18/9/2014').format('DD/MM/YYYY') == '18/09/2014'\n```\n\nI said in the issue that I was going to use `Y` as the specifier, but it appears already to be in use for [something else](https://github.com/stewartml/moment/blob/develop/src/lib/units/year.js#L26).  So I picked `U`, for no real reason.\n\nI'm not very familiar with the layout of the code, so hopefully I've done the right things here...\n",
    "head_branch": "year-feature",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa36d8dfb6b84f2427f06",
    "number": 2342,
    "body": "I haven't included tests yet because I'm not sure if you will support adding this. You might not believe it's a common enough use-case. Source of the string is [here](https://github.com/django/django/blob/0ed7d155635da9f79d4dd67e4889087d3673c6da/django/utils/duration.py). Examples are [here](http://www.regexr.com/3asci). This could be incorporated into the `aspNetRegex` if that would be preferrable.\nCurrent:\n\n``` javascript\n/(\\-)?(?:(\\d*)\\.)?(\\d+)\\:(\\d+)(?:\\:(\\d+)\\.?(\\d{3})?)?/\n```\n\n12 13:22:45.334~~021~~ Currently looses the last three characters but that's changeable ofc.\n\n``` javascript\n/(\\-)?(?:(\\d*)[\\. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)\\.?(\\d{3})?\\d{0,3})?/\n```\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa36e8dfb6b84f2427f07",
    "number": 2336,
    "body": "Fixes incorrect year/week parsing for non standard dow/doy combinations. Replaces the pull request #2188. See also the issue #2115. \n",
    "head_branch": "year_week_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa36f8dfb6b84f2427f08",
    "number": 2329,
    "body": "The translation team I'm working with for a project is interested in the unit addition for minute.\n\nThis wraps up the work discussed in this PR #2107 by applying the change to zh-cn and zh-tw respectively.\n\nEither PR is fine with me (if the other one is updated) from a merge standpoint :smile:\n",
    "head_branch": "feature/update-zh-locales",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3708dfb6b84f2427f09",
    "number": 2328,
    "body": "I realized in pt and pt-br have some different things than others. In english and some other languages, the first of the characters is in uppercase. So why is different in pt and pt-br?\n\nI started to implement the change, missing the tests yet and adjust in locale/pt. But I wonder if I can adjust.\n\n**Note: DON'T merge this PR yet. Tests Failing.**\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3718dfb6b84f2427f0a",
    "number": 2323,
    "body": "This gives more flexibility to do things like \"2 days and 6 hours ago\" for example instead of the current \"2 days ago\".\n\nOf course the parameter is completely optional and doesn't disturb anything else. \n\nThank you in advance.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3728dfb6b84f2427f0b",
    "number": 2321,
    "body": "- Grammar for relative times (see http://www.uzdevumi.lv/p/latviesu-valoda/11-klase/stilistika-8130/re-68541d02-c66f-4e5b-bd29-ce6de3421c5a).\n- Fix singular unit durations for withoutSuffix=true cases (they matched withoutSuffix=false cases).\n- The short date format adjusted (see http://likumi.lv/ta/id/219491-dokumentu-izstradasanas-un-noformesanas-kartiba#p-363331).\n- Cache already split units, do not split them every time.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3738dfb6b84f2427f0c",
    "number": 2320,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3748dfb6b84f2427f0d",
    "number": 2319,
    "body": "Because it was broken.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3758dfb6b84f2427f0e",
    "number": 2317,
    "body": "I added a new merge method that combines date and time components from different sources.\n\nThis simplifies common use cases, such as one in which forms display separate date and time fields whose values then have to be merged before sending or processing the data.\n\nThe purpose is to be able to do something along these lines (pseudocode):\n\n```\nvar fullDateTime = moment.merge(dateField.value, timeField.value);\nvar forDisplay = fullDateTime.format();\nsendToServer(fullDateTime.toDate());\n```\n\nThe implementation allows the date and time components to be specified separately, in different ways. For example, the date could be a Date object and the time could be a string or a Moment object.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3768dfb6b84f2427f0f",
    "number": 2312,
    "body": "Reported in #2310\n",
    "head_branch": "readd-duration-fn",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3778dfb6b84f2427f10",
    "number": 2308,
    "body": "Fixes momentjs in Meteor on IE8 as per #2306 \n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3788dfb6b84f2427f11",
    "number": 2303,
    "body": "EDIT: es6 stuff is merged, so this PR needs to get rewritten.  I do plan on getting to it, but not immediately.\n\nFor explanation of some of these changes, I'll discuss my numbers.  I'm doing this from memory and can re-measure if necessary, but...  My CPU profile in Chrome started at 400ms, and after this suite of changes, the profile was reduced to 200ms.\n- https://github.com/brianwyantora/moment/commit/6bc5d2e075b0cad32083ea5209bb6ac695029aa7\n  - This change resulted in a reduction of about 70ms on my profile.\n  - Basically, in my use case, I never send invalid dates from server to client.  So while I might do some work on the first date sent from the server to make sure the browser can parse it, once I've done that, I won't call `moment.fn.isValid()`.  Generating the parsing flags takes a notable amount of time, so deferring that generation is a significant help.\n- https://github.com/brianwyantora/moment/commit/928e068349c10d90bceb5266727e016f0cda1259\n  - This change resulted in a reduction of about 60ms on my profile.\n  - This change might look wrong on first glance, but notice - `makeMoment` is only called from two places (the public constructors), and will pass the config object through `new Moment(config)`.  `Moment` already clones the date, so doing the same in `makeMoment` is just duplicating work unnecessarily.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3798dfb6b84f2427f12",
    "number": 2288,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa37a8dfb6b84f2427f13",
    "number": 2286,
    "body": "Finally getting back to this (funny how weeks turn into months).\nIn its own pull request this time.\n",
    "head_branch": "shortenconstants",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa37b8dfb6b84f2427f14",
    "number": 2283,
    "body": "Added the ability to check the dates being passed in the range. Currently, if I have a range of 3/18/2015 - 4/12/2015 and 3/18/2015 is the date being passed to check, it will return false even though it is in the date range.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa37c8dfb6b84f2427f15",
    "number": 2282,
    "body": "The inBetween function doesn't check for the dates being passed, only dates between the dates being passed. It makes sense to check the actual dates too because they would be considered in the range passed.\n",
    "head_branch": "talymo-patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa37d8dfb6b84f2427f16",
    "number": 2278,
    "body": "Fix for https://github.com/moment/moment/issues/2275\nIs a little hacky, but this is still the sanest way of solving this issue I have found.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa37e8dfb6b84f2427f17",
    "number": 2268,
    "body": "The order in which D/M/Y is displayed in browsers is reversed, because of [the way bidi algorithm works](https://en.wikipedia.org/wiki/Bi-directional_text).\n\nThis is how Arabic DD/MM/YYYY format is displayed on moment's homepage:\n![image](https://cloud.githubusercontent.com/assets/1012761/6544324/ee79d974-c552-11e4-9911-dc807a991504.png)\n\nChanging the element's direction does not help:\n![image](https://cloud.githubusercontent.com/assets/1012761/6544326/07e70350-c553-11e4-9ce4-d8d11c4ff285.png)\n\nAdding the Unicode non-printing character [\"Right-to-left mark\" (U+200F)](https://en.wikipedia.org/wiki/Right-to-left_mark) between the date fragments is a possible fix.\nI made this JSBin to demonstrate the issue: http://jsbin.com/yelaqajumi/1/\nAlso, I unified the L and l formats, because as far as I know, leading zeros are never used in dates in Arabic.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa37e8dfb6b84f2427f18",
    "number": 2262,
    "body": "",
    "head_branch": "feature/croatian-locale",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa37f8dfb6b84f2427f19",
    "number": 2257,
    "body": "It is faster to use instanceof operator over toString call, check: jsperf: http://jsperf.com/isdate. It shows even better performance when the input is Date type, but I evaluated the change also on other object types. \n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3808dfb6b84f2427f1a",
    "number": 2256,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3818dfb6b84f2427f1b",
    "number": 2249,
    "body": "@dandv Unfortunately, some people still use IE8, which, among many other things, doesn't support `delete` operations on the `window` object.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3828dfb6b84f2427f1c",
    "number": 2239,
    "body": "Mostly we use ဂါ to abbr Monday in Burmese.\nCheck these examples\n\nhttp://www.localeplanet.com/icu/my/index.html\nhttp://www.unicode.org/cldr/charts/26/summary/my.html\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3838dfb6b84f2427f1d",
    "number": 2237,
    "body": "I'm making timetables with weekdaysMin particles, but they look weird, since not all the days are same-sized.\nI'm making all of them two-chars long.\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3848dfb6b84f2427f1e",
    "number": 2236,
    "body": "I just tried to use the short Polish names and I noticed that \"min\" Polish weekday names haven't the same length (six of them are two-chars long, while \"sunday\" corresponds to \"N\"). Polish colleagues say there should be one more \"d\".\nI'd also make all \"short\" names 3-chars long, agree?\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3858dfb6b84f2427f1f",
    "number": 2232,
    "body": "omitting \"dot\" at day names\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3868dfb6b84f2427f20",
    "number": 2228,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3878dfb6b84f2427f21",
    "number": 2226,
    "body": "**Lines 13-83 & 136-150**\nThe original implementation used a colloquial form of expressing relative time in the past.\n_Colloquial:_ **2 uri nazaj**, **3 dni nazaj**, **4 mesece nazaj**\n_Proper:_ **pred 2 urama**, **pred 3 dnevi**, **pred 4 meseci**\nThis probably would not have been possible to implement before the 'isFuture' parameter was introduced to the callback function.\n\n**Lines 99-135**\nThe accusative case is for weekdays when referring to a past or future event.\n_Past_: **prejšnjo soboto ob 9:00**\n_Future_: **v soboto ob 9:00**\n",
    "head_branch": "fix-slovenian-locale",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3888dfb6b84f2427f22",
    "number": 2220,
    "body": "_Lint Warning: regular expressions should be preceded by a left parenthesis, assignment, colon, or comma._\n\nThis warning was causing errors while trying to minify 'moment.js' using 'JSMin'.\nWith this patch, the problem is solved.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3898dfb6b84f2427f23",
    "number": 2211,
    "body": "Basically augments the `bigHour` check to see if, in addition to the hour being less than 12, it's also greater than 0.\n\nThis should fix [#2140](https://github.com/moment/moment/issues/2140).\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa38a8dfb6b84f2427f24",
    "number": 2210,
    "body": "The time format for LT and LTS do not align with what is the default time settings in Windows for locale Norwegian Bokmål and what most people use. Propose H:mm instead of H.mm and LT:ss instead of LT.ss. Most norwegians do not use a 13.37 time format, but rather 13:37.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa38b8dfb6b84f2427f25",
    "number": 2209,
    "body": "exports.add clobbers tests for \"add_subtract\". renaming this to avoid conflict.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa38c8dfb6b84f2427f26",
    "number": 2208,
    "body": "Simple change proposal for better calendar time translations.\n\nThere are 2 changes introduced in calendar time translation.\n1. Before this commit, translations for calendar time for next week\n   was sort of broken. Say on a Monday, if you would get\n   `moment().day(5).calendar()` to get the next Friday, you would get\n   something like \"Next week Friday at ...\" instead of \"Next Friday\n   at ...\". This commit changes it to \"This Friday at ...\".\n2. Before this commit, translations for last week was similar to\n   \"Last week Friday at ...\" and this commit changes it to \"Last\n   Friday at ...\". It suits better with Turkish language.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa38d8dfb6b84f2427f27",
    "number": 2207,
    "body": "Remove periods from short days/months in Slovenian so users can add them if they need them.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa38e8dfb6b84f2427f28",
    "number": 2204,
    "body": "remove unnecessary space and update tests for #2051 \n",
    "head_branch": "patch-for-pull-2051",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa38e8dfb6b84f2427f29",
    "number": 2203,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa38f8dfb6b84f2427f2a",
    "number": 2202,
    "body": "Update tests for #1904 \n",
    "head_branch": "patch-for-issue-1904",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3908dfb6b84f2427f2b",
    "number": 2198,
    "body": "The locale/_js files in moment.js are not 'use strict'. Some projects will only include some of the locale files (as opposed to loading all the 80 translations in moment-with-locales.min.js). When minified, the locale/_js files might often be placed in a 'use strict' environment resulting in the 'this' object to be undefined. This fix adds 'window' as a paramter to the IIFE's in locale/*js files.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3918dfb6b84f2427f2c",
    "number": 2195,
    "body": "Small change avoids minification bugs.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3928dfb6b84f2427f2d",
    "number": 2191,
    "body": "fix relative time so that 's' means 'a few seconds' instead of  just 'seconds' in pt-br locale.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3948dfb6b84f2427f2e",
    "number": 2188,
    "body": "For some non standard combination of dow and doy the computation of the week number would return a wrong week number. This pull request fixes the problem.\n\nAlso added tests for all 7*7 dow/doy combinations.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3958dfb6b84f2427f2f",
    "number": 2181,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3958dfb6b84f2427f30",
    "number": 2179,
    "body": "Siječanj instead of sječanj (january)\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3968dfb6b84f2427f31",
    "number": 2177,
    "body": "There was some spacing problems like '일분' (oneminute) and little awkward pharses, so fixed them. tests included.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3978dfb6b84f2427f32",
    "number": 2176,
    "body": "- sort patterns\n- use same ignored patterns between bower and spm (except min)\n",
    "head_branch": "more-ignore",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3988dfb6b84f2427f33",
    "number": 2175,
    "body": "note that if we wanted to get really fancy, we could unwind the first couple of items off the generated error stack to point at the exact line of code with usage that spawned the deprecation warning (didn't do that here)\n\n> Original issue: https://github.com/moment/moment/issues/1407#issuecomment-71213788\n> \n> Just a thought- what about grabbing a stack trace with new Error() and stuffing it in the deprecation warning? It took me a while to hunt down where this was happening (it was one of our dependencies, https://github.com/urish/angular-moment). I've just started using the same approach in sails/node-machine and it's been pretty effective so far. I'll send a PR- feel free to close or accept, no pressure :+1:\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3998dfb6b84f2427f34",
    "number": 2169,
    "body": "Translation for the nds-nl-wiki.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa39a8dfb6b84f2427f35",
    "number": 2168,
    "body": "This converts the codebase from one 3000 line file to many smaller ES6 modules.\n\nWe can then create builds using [6to5](https://6to5.org/) to target CommonJS, AMD, and browser globals.\n\nAs part of the conversion to es6 modules, I also converted the tests to es6 modules. Unfortunately, I couldn't find a great way of getting nodeunit to play well with es6 modules, so I also converted the test framework to QUnit.\n\nThere are still a few outstanding tasks to get this production ready.\n- [x] Convert locales and tests.\n- [x] Build globals and amd bundles with grunt and es6-module-transpiler\n- [x] Build commonjs files using grunt-6to5\n- [ ] Build single moment + tests for browser (momentjs.com)\n- [ ] Build commonjs folder with moment + tests\n- [ ] update test task to generate commonjs moment + tests and run tests, make it possible to test a single file\n- [x] Build UMD single file version of the library (with all the UMD patches applied currently)\n- [ ] Generate minified files for amd, umd and globals\n- [ ] ~~Use https://github.com/developit/grunt-esperanto to create amd and browser bundles~~\n- [ ] ~~Use https://github.com/6to5/grunt-6to5 to transpile to commonjs~~\n- [ ] Comb through the unit test conversion commit, making sure nothing fell through the cracks.\n",
    "head_branch": "feature/es6-modules",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge 3ba9efe3af770e63abcb8d5de020c5d07ff73d27 into 78a53b8cb53e967c6dac2e7325e18da2a472fc2d"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa39b8dfb6b84f2427f36",
    "number": 2159,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa39c8dfb6b84f2427f37",
    "number": 2156,
    "body": "Changed the Swedish locale for lastWeek to something more like what one\nwould say. As it was before with for instance \"Förra söndagen\" (Last\nSunday) while referring to the closest passed Sunday is not what is used\nin language, last Sunday refers to the Sunday before the closest passed\none, so I changed it to that.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa39d8dfb6b84f2427f38",
    "number": 2155,
    "body": "Latin countries (usually) capitalizes month names, and weekday names, much like in english\n",
    "head_branch": "latin-locale",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa39e8dfb6b84f2427f39",
    "number": 2150,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa39f8dfb6b84f2427f3a",
    "number": 2148,
    "body": "In my opinion current phrasing for from and fromNow methods was little bit awkward, therefore tried to change it.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3a08dfb6b84f2427f3b",
    "number": 2139,
    "body": "In Chuvash previously we used some additional latin letters because the Cyrillic ones could not be displayed properly. [Now it is time to use the right ones](http://chuvash.eu/2014/04/13/it-is-time-to-standardize-the-chuvash-keyboard-layout/). I even updated the name of May: \"ҫу\", previously it was \"май\".\n",
    "head_branch": "chuvash-diacritics",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3a18dfb6b84f2427f3c",
    "number": 2136,
    "body": "Added missing locale for Montenegrin language (**me.js**)\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3a28dfb6b84f2427f3d",
    "number": 2135,
    "body": "Please consider these new tests as a bug report. I've also created a fiddle here:\n\nhttp://jsfiddle.net/ca9vfr3b/\n\nIt has to do with the rounding of the `duration.as('m')` value. When rounding down, 29 seconds becomes 0 minutes, so the logic here results in using the 'mm' unit instead of the 'm' unit:\n\nhttps://github.com/moment/moment/blob/develop/moment.js#L1738\n\nI attempted a fix by simply using Math.ceil() instead of round() but that turned out to be rather short-sighted as it resulted in failure of many other tests.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3a38dfb6b84f2427f3e",
    "number": 2133,
    "body": "The new algorithm to compute month differences between two moments (used in\n`diff(a, 'month|quarter|year')`), is as follows:\n- take the whole number of months between the two dates (ignoring day-of-month\n  and hour) -- `wholeMonthDiff`\n- the above is adjusted linearly by how much the second date is away from the\n  whole-month-diff-date (the date where the result would be exactly\n  `wholeMonthDiff`)\n\nThis algorithm makes sure that dates that are exact number of months apart\nwould return whole numbers (like previous algorithm), but also fixes a few edge\ncases that the old agorithm failed to do, like when the first moment is close\nto the end of a long month and the second moment was in the begining of a short\nmonth (end of Jan to begining of Feb for example).\n\nFixes #2026\n",
    "head_branch": "fix-month-diff",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3a48dfb6b84f2427f3f",
    "number": 2131,
    "body": "Fixes #1991\n",
    "head_branch": "diff-quarter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3a58dfb6b84f2427f40",
    "number": 2128,
    "body": "Fixes #1830\n",
    "head_branch": "locale-dow-doy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 4b378d1fd1e79e4863b23ec64ffc5c08b9651878 into d67554fe7d1a317e9761f6d89fb8359ca1eb7de8"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3a68dfb6b84f2427f41",
    "number": 2127,
    "body": "Code cleanup\n- remove unused code\n- use undefined consistently, short-circuiting, existing functionality, computed values, ...\n- clean structure of some conditions\n\nCode speedup\n- optimize zeroFill by ~20%, benchmark added\n",
    "head_branch": "patch/cleanup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3a78dfb6b84f2427f42",
    "number": 2126,
    "body": "",
    "head_branch": "patch/editorconfig",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3a88dfb6b84f2427f43",
    "number": 2125,
    "body": "Fixes failing test because it's expectation isn't met at the end of the year.\n",
    "head_branch": "patch/fix-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3a98dfb6b84f2427f44",
    "number": 2124,
    "body": "Hello, together with Iustì Canun I created a Talossan (tzl) translation of Moment.js.\nIt is almost finished, but there is one problem.\nThe relative time sentences don't fit in the variables, they differ per time (future/past).\nCould somebody explain to me how I can implement the time sentences?\n\nThe missing future sentences:\nin a few seconds => osprei viensas secunds\nin a minute => osprei 'n míut\nin % minutes => osprei % míuts\nin an hour => osprei 'n þora\nin % hours => osprei % þoras\nin a day => osprei 'n ziua\nin % days => osprei % ziuas\nin a month => osprei 'n mes\nin % months => osprei % mesen\nin a year => osprei 'n ar\nin % years => osprei % ars\n\nThe missing past sentences:\na few seconds ago => ja'iensas secunds\na minute ago => ja'iens míut\n% minutes ago => ja % míuts\nan hour ago => ja'iensa þora\n% hours ago => ja % þoras\na day ago => ja'iensa ziua\n% days ago => ja % ziuas\na month ago => ja'iens mes\n% months ago => ja % mesen\na year ago => ja'iens ar\n% years ago => ja % ars\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3aa8dfb6b84f2427f45",
    "number": 2123,
    "body": "",
    "head_branch": "feature/to_object",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3ab8dfb6b84f2427f46",
    "number": 2121,
    "body": "The day after tomorrow was always determined as next week.\nSo we should subtract startOfWeek time from current time, and check it is larger then a week.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3ab8dfb6b84f2427f47",
    "number": 2120,
    "body": "Newly added `moment.to` is similar to `moment.from`, but the result is reversed as the relativity of dates are considered.\n\n```\nvar today = moment();\nvar dayafter = moment(today).add(2, 'd');\n\nconsole.log(today.from(dayafter));       // 2 days ago\nconsole.log(today.to(dayafter));         // in 2 days\nconsole.log(today.to(dayafter, true));   // 2 days\n```\n",
    "head_branch": "to-moment",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3ac8dfb6b84f2427f48",
    "number": 2119,
    "body": "Sinhala is the language spoken by an ethnic group called Sinhalese of\naround 15 million individuals, mainly residing in the island nation Sri\nLanka.\n",
    "head_branch": "locale-si",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3ad8dfb6b84f2427f49",
    "number": 2118,
    "body": "[Sinhala](http://en.wikipedia.org/wiki/Sinhala_language) is the language spoken by an ethnic group called [Sinhalese](http://en.wikipedia.org/wiki/Sinhalese_people) of around 15 million individuals, mainly residing in the island nation [Sri Lanka](http://en.wikipedia.org/wiki/Sri_Lanka).\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3ae8dfb6b84f2427f4a",
    "number": 2117,
    "body": "Browser-based apps that have DOM nodes with the id \"global\" were being detected as Node apps for purposes of assigning moment to the runtime's global namespace.  This change is intended to fix that issue for most practical use cases, hopefully without breaking anyone's existing usage.\n\nAlgorithm:  If `global` is not defined, then we want to use `window`.  If `global` is defined but `window` is not, then we want to use `global`.  If both `global` and `window` are defined, then we want to assign to `global` if `window === global.window` -- otherwise we assume that `global === window.global`, in which case we want to assign to `window`.\n\nThis is an actually working version of my suggestion from #2092.\n",
    "head_branch": "global-scope-hack",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3af8dfb6b84f2427f4b",
    "number": 2111,
    "body": "Fixes https://github.com/moment/moment/issues/2101.\n",
    "head_branch": "nullDuration",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3b08dfb6b84f2427f4c",
    "number": 2107,
    "body": "I add the unit of time for minute in traditional chinese (zh-tw), and the unit test is pass now.\n\nTesting zh-tw.js........................OK\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3b18dfb6b84f2427f4d",
    "number": 2104,
    "body": "I translated the language file to Frisian (fy: Frysk), a language spoken in the northern part of the Netherlands.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3b28dfb6b84f2427f4e",
    "number": 2103,
    "body": "Dojo Loader doesn't like the explicit module name syntax with implicit dependencies:\n\n```\ndefine('moment', function (require, exports, module) { \n```\n\nIt's however OK when everything is implicit:\n\n```\ndefine(function (require, exports, module) { \n```\n\nBut, then the implicit module name could cause problems with Moment plugins if the path to Moment is mapped to a module other than 'moment'. So, a more compatible fix would be to declare the dependencies explicitly (both RequireJS and Dojo Loader are OK with this syntax):\n\n```\ndefine('moment', ['require', 'exports', 'module'], function (require, exports, module) {\n```\n",
    "head_branch": "dojo-compatible-amd",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3b38dfb6b84f2427f4f",
    "number": 2098,
    "body": "Added with the support of @corydeppen\n",
    "head_branch": "nuget",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3b48dfb6b84f2427f50",
    "number": 2097,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3b58dfb6b84f2427f51",
    "number": 2091,
    "body": "#2079\n",
    "head_branch": "fromNowNaN",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3b68dfb6b84f2427f52",
    "number": 2090,
    "body": "In Hebrew years that end with a zero except 10 (20, 30, 100, etc.)\nuse a different plural form, which is identical to the singular.\n\nI added this form.\n\nThis is also used by the CLDR plural rules.\n",
    "head_branch": "esrim-shana",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3b78dfb6b84f2427f53",
    "number": 2088,
    "body": "closes #2087\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3b88dfb6b84f2427f54",
    "number": 2084,
    "body": "Some JS minifiers (e.g. jsmin 1.0.1) interpret this line as an unterminated regex.\n",
    "head_branch": "prevent_min_choke",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3b98dfb6b84f2427f55",
    "number": 2074,
    "body": "Implements #1779\n",
    "head_branch": "utc-offset",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3ba8dfb6b84f2427f56",
    "number": 2073,
    "body": "No more `.sh` scripts :)\n\nHope to be the last PR in the #2062 series.\n",
    "head_branch": "meteor-integration",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3bb8dfb6b84f2427f57",
    "number": 2068,
    "body": "Architecture is only necessary if you want only client or server or if you want to use the third options argument.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3bb8dfb6b84f2427f58",
    "number": 2066,
    "body": "",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3bc8dfb6b84f2427f59",
    "number": 2065,
    "body": "",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3bd8dfb6b84f2427f5a",
    "number": 2064,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3be8dfb6b84f2427f5b",
    "number": 2062,
    "body": "Fix issues encountered in PR #2059.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3bf8dfb6b84f2427f5c",
    "number": 2061,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3c08dfb6b84f2427f5d",
    "number": 2059,
    "body": "Continuing #1974 for full Meteor.js support.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 324e83941647ad0fa243dce4255934d83e614fd9 into 2f9b330eb35a38184fd7239749c7f0feef6c5146"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3c18dfb6b84f2427f5e",
    "number": 2054,
    "body": "Goes along with [moment-timezone/pull/152](https://github.com/moment/moment-timezone/pull/152).\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3c28dfb6b84f2427f5f",
    "number": 2053,
    "body": "Appended \"分\" in zh-tw test files.\n",
    "head_branch": "patch-5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3c38dfb6b84f2427f60",
    "number": 2051,
    "body": "When using `fromNow()` to display a space  between English word and Chinese character will make a better UX for Chinese users. And most of the websites in China do like so.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3c48dfb6b84f2427f61",
    "number": 2048,
    "body": "... vel. to velj. (lj can not be splitted). Reference https://hr.wikipedia.org/wiki/Kategorija:Mjeseci_u_godini\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3c58dfb6b84f2427f62",
    "number": 2045,
    "body": "inspired by http://codebox.org.uk/pages/moment-date-range-plugin but with better fitting into the existing code\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3c68dfb6b84f2427f63",
    "number": 2044,
    "body": "I deleted a duplicate of the word \"pull\" within the CONTRIBUTING.md documentation file. The file is now more readable. \n",
    "head_branch": "contrib_doc_typo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 53919172b3a07dd9c87c4d09e24c87e0c6f7c2aa into c9dd13e4ac00476e4fc5e83ae72d7eab16942c1c"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3c78dfb6b84f2427f64",
    "number": 2016,
    "body": "Removed nonbreaking spaces from \"L\" long date format.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3c88dfb6b84f2427f65",
    "number": 2015,
    "body": "The 'Uhr' suffix is not as part of a time string as 'AM'/'PM' would be.\nSo remove it from the localized formats (LT, LLL and LLLL) but keep it\nin calendar time.\nAlso update the tests.\n\ncloses issue #2006\n",
    "head_branch": "locale-de",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3c98dfb6b84f2427f66",
    "number": 2013,
    "body": "Changed short month name for march. Just like June and July in Russian\nmarch has only 4 letters, so  full name could be used instead of short.\n",
    "head_branch": "russan-locale-update",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3ca8dfb6b84f2427f67",
    "number": 2011,
    "body": "Possible fix for #1991. ALTHOUGH, this is the most naive solution for a quarter diff. But I think there are two ways to do a \"quarter diff\" that make sense.\n- Two dates are a quarter apart if they're four months apart (the one implemented in this PR).\n- Two dates are a quarter apart if they're in different quarters (e.g. March 31st and April 1st are one quarter apart since they are on the first and second quarters of the year). This one is probably marginally more complex to implement, and also wouldn't have a sensible result when the third parameter for `diff` is `true`.\n",
    "head_branch": "quarter-diff",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3cb8dfb6b84f2427f68",
    "number": 2010,
    "body": "Our advice for users should match our implementation of the compatibility shim, which uses `moment().localeData()` as a getter and `moment().locale()` as a setter.\n\nBased on discussion in #1879.\n",
    "head_branch": "fix-locale-warning",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3cc8dfb6b84f2427f69",
    "number": 2009,
    "body": "The main idea is to take advantage of the speed in the native .toISOString when possible.\n\nThe node tests pass and I hope that there is CI coverage of browsers.  Please let me now if you'd like anything more or if you'd like anything different.\n\nRelated to issue #1999 \n",
    "head_branch": "fall_back_to_native_toISOString",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3cd8dfb6b84f2427f6a",
    "number": 2008,
    "body": "Fixes #1913\n",
    "head_branch": "fix-end-of",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3cf8dfb6b84f2427f6b",
    "number": 2004,
    "body": "Clone the model to get all plugin data (like zones), than move the time so that\nit matches the input and recompute the timezone.\n\nCloses #1952, #1956, #1772\n",
    "head_branch": "bugfix-make-as",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3d08dfb6b84f2427f6c",
    "number": 2003,
    "body": "Update the docs about parsingFlags to include bigHour key.\nFixes #1734\n",
    "head_branch": "detect-big-hours",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3d18dfb6b84f2427f6d",
    "number": 2002,
    "body": "Fixes #1927\n",
    "head_branch": "accept-date-key-object",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3d28dfb6b84f2427f6e",
    "number": 2001,
    "body": "Fixes #1983\n\nNote - I attempted to write a test for this, but it's difficult since we normally swap out the `createFromInputFallback` function in the unit tests.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3d38dfb6b84f2427f6f",
    "number": 2000,
    "body": "A few notes: This has come up several times before (see: #991, #1288)\n\nThanks to baryon for the Japanese and Chinese translations (see #1802).\n\nHere is how the time 3:25:50 PM would show in all languages/cultures:\n\nThe vast majority of languages/cultures use 15:25:50 , with the exception of:\n\n3:25:50 PM -> en-au, en-ca, en, ka\n15.25.50 -> fi, id, ms-my, nb\n١٥:٢٥:٥٠ -> ar-sa, ar\n15:25:50 Uhr -> de-at, de\nদুপুর ৩:২৫:৫০ সময় -> bn\nཉིན་གུང ༣:༢༥:༥༠ -> bo\n3e25:50 PM -> br\n3:25:50 ΜΜ -> el\n۱۵:۲۵:۵۰ -> fa\nदोपहर ३:२५:५० बजे -> hi\n午後3時25分50秒 -> ja\n오후 3시 25분 50초 -> ko\n15:25:50 Auer -> lb\n15:25:50 val. -> lt\nഉച്ച കഴിഞ്ഞ് 3:25:50 -നു -> ml\nदुपारी ३:२५:५० वाजता -> mr\n၁၅:၂၅:၅၀ -> my\nबेलुकाको ३:२५:५० बजे -> ne\n15 นาฬิกา 25 นาที 50  วินาที -> th\n下午3点25分50秒 -> zh-cn\n下午3點25分50秒 -> zh-tw\n\nFor Breton (br), CLDR does not recognise 'e' has the hour separator. It indicates that the time should be [15:25, not 15e25](http://www.unicode.org/cldr/charts/26/summary/br.html); See \"Formats - Standard - Time Formats\" on that page.\n\nCatalan (ca) and Galician (gl) did not have any of the standard formatting tests; someone familiar with the language should give it a once-over to make sure what was there is correct.\n\nThai (th) is based off of Google Translate; someone familiar with the language should give it a once-over.\n\n*Please note, this is my first pull request. Feel free to criticise.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3d38dfb6b84f2427f70",
    "number": 1998,
    "body": "Added the semester time unit\nit's a period of 6 month January to June And July to December\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3d48dfb6b84f2427f71",
    "number": 1992,
    "body": "Fixes #1930\n",
    "head_branch": "bugfix/strict-month-parsing",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3d58dfb6b84f2427f72",
    "number": 1989,
    "body": "This PR rewrote all `require('../moment')` to `require('moment')`\n\nThe reason is to decouple the locales from the moment.js file. \nThis could cause problems in browser environment, because locale files are not always bundled with moment.js, so there should be no relative relation anymore.\n\nIn Node.js envirnoment this works fine, because node will lookup moment in the node_modules directory. Also browserify still works.\n\nThis makes it easier for tools which use `require` in browser environment to load moment. To get it working the namespace/path `moment` must be registered, instead of `../moment`\n",
    "head_branch": "no-relative-require-in-locales",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3d68dfb6b84f2427f73",
    "number": 1985,
    "body": "Change format of japanese minutes to `mm`\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3d78dfb6b84f2427f74",
    "number": 1978,
    "body": "change month names so the persian guys like me can actually use this in their project\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3d88dfb6b84f2427f75",
    "number": 1977,
    "body": "Change month names in fa localization so the Persian guys can actually use this in their project.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3d98dfb6b84f2427f76",
    "number": 1974,
    "body": "The global scope might be node (`global`) or `this` (window or other), so detect in all language files. Implements #1946.\n",
    "head_branch": "locale-export",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3da8dfb6b84f2427f77",
    "number": 1972,
    "body": "Added native language of Kazakhstan (originated from turks).\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3db8dfb6b84f2427f78",
    "number": 1971,
    "body": "fix for lastWeek calendar time for 'Sunday'\nIn Italian, Sunday is a feminine noun and requires a different traslation for 'Last dddd'\nthanks\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3dc8dfb6b84f2427f79",
    "number": 1967,
    "body": "As in https://ca.wikipedia.org/wiki/Numerals_en_catal%C3%A0#Ordinals\n\nIs there a way to let the ordinal formatting function know if the moment is formatting week or day? In Catalan week (setmana) is feminine while day (dia) is masculine, and ordinal suffix could be changed accordingly for week numbers\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3dd8dfb6b84f2427f7a",
    "number": 1965,
    "body": "As requested in #1174\n",
    "head_branch": "support-24",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3de8dfb6b84f2427f7b",
    "number": 1964,
    "body": "Requested by #1938\n",
    "head_branch": "millisecond-token",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3df8dfb6b84f2427f7c",
    "number": 1963,
    "body": "This has been requested over and over #1939 #779 #1676 \n\nI think its safe to do. We'll just mention for people to add pathConfig in case the main file is in a different location and they want to use locales.\n",
    "head_branch": "amd-export",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3e08dfb6b84f2427f7d",
    "number": 1961,
    "body": "Remove unnecessary files from repo for npm publishing. Fixes #1948.\n",
    "head_branch": "add-npm-cleanup-script",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3e18dfb6b84f2427f7e",
    "number": 1960,
    "body": "I added the code for 'x' as a formatToken for both creating and formatting... I added the unittests. Hope it is sufficient like it is now...\n\nI did have a problem with the name `unix offset` as it might be confusing with a timezone offset, but I am not a native english speaker so I just included `in milliseconds` everywhere I could. And the function `unixms` might not be needed, it's probably better to use valueOf(). But I leave that decision making up to you....\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3e28dfb6b84f2427f7f",
    "number": 1957,
    "body": "Add Rwandan (Kinyarwanda) language.\nThis translation is only partially complete. I full translation should be complete in a few days. \n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3e38dfb6b84f2427f80",
    "number": 1956,
    "body": "Fix internal makeAs function to work properly for different time zones moment/moment-timezone#127\n\n`makeAs` function didn't change the timezone of `input` to match `model`. Instead, it just updated the `offset`, but with different time zone `offset` will be restored with any subsequent call to `updateOffset`.\nCorrect behavior should be creading a copy of `model` (it will be with proper time zone) and set timestamp from `input`.\nThen, we need to update offset from `model` (it is firstly set to zero, and then updated by call to `zone` function to preserve correct timestamp).\nAnd finally, call to `updateOffset` is needed for moment-timezone to update offset in case of different offset in the same time zone for `input` and `model` moments.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3e48dfb6b84f2427f81",
    "number": 1953,
    "body": "Moved months(Short), weekdays(Short|Min) to localeData, made the originals\ncall the localeData methods. Renamed original methods that get single month or\nweekdays names from plural to singular. Updated localeData set so that locale\ndefinitions with months/weekdays would continue to work.\n\nFixes #1945 \n",
    "head_branch": "instance-listers",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3e58dfb6b84f2427f82",
    "number": 1952,
    "body": "This has been discussed in #1877 and #1772.\n\nI need to add some tests. The existing ones pass though :)\n",
    "head_branch": "bugfix/fix-cmp-functions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3e68dfb6b84f2427f83",
    "number": 1951,
    "body": "This fixes #1683\n\nThis is the test plan:\n- format then strict parse on all languages\n- format then parse on all languages\n- parse number (not ordinal) on all languages\n",
    "head_branch": "bugfix/ordinal-parsing",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3e78dfb6b84f2427f84",
    "number": 1950,
    "body": "There were many locales that supported meridiem output, but did not support\nparsing (meridiemParse and isPM locale keys). Also some locales can not be\nparsed with a simple isPM function, because the variants are not different\naround noon.\n\nA new isPM function (with new name -- fixPM) is needed that also takes an hour\nand returns whether you should add 12 hours or not.\n",
    "head_branch": "bugfix/meridiem-in-locales",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3e88dfb6b84f2427f85",
    "number": 1934,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 5e1fcbdb1c63481ff5ee6985bb56bca563837382 into d5ff2cfc0000010c37cc5ebe75a5905c943368e4"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3e98dfb6b84f2427f86",
    "number": 1933,
    "body": "this changeset is intended to fix bug #1876 with Russian locale. also, cast @demidov91, @Oire, @zemlanin to see if similar changes should be made to Belarussian and Ukrainian locales.\n",
    "head_branch": "fix-1876",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3ea8dfb6b84f2427f87",
    "number": 1928,
    "body": "... This also makes sure that, even if module is not undefined, it is also not null before checking property export.\n\nI'm not entirely sure why this is not registering as undefined, but it seems related to this: http://javascriptweblog.wordpress.com/2011/08/08/fixing-the-javascript-typeof-operator/\n\n> What’s wrong with typeof?\n> \n> The most glaring issue is that typeof null returns “object”. It’s simply a mistake. There’s talk of fixing it in the next version of the ECMAScript specification, although this would undoubtedly introduce backwards compatibility issues.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3ea8dfb6b84f2427f88",
    "number": 1925,
    "body": "This is an attempt to complete #1894 and fix #1884.\n\nI've used Math.round instead of Math.floor to output whole days from months and years.\nRounding instead of flooring gives output that feels more realistic.\n\nI've added tests for each of the units from/to, that leap year days are added correctly, and that multiple months output real day values.\n",
    "head_branch": "fix-duration-as-getters",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3eb8dfb6b84f2427f89",
    "number": 1916,
    "body": "When making a date from string and format, I expect a missing year to make the date invalid.\nhttp://jsfiddle.net/jw8o2g2a/2/\n\n674: The toInt function should not default to 0 when the argument is undefined.  This returns a technically valid year even though no year was provided.\n\n2059: parseTwoDigitYear attempts to take an input value and add 1900 or 2000 to it.  If the value is undefined, this will return NaN, so default to 0.\n\n1361: use DATE constant rather than hard coded value\n",
    "head_branch": "missingYearIsValid",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3ec8dfb6b84f2427f8a",
    "number": 1915,
    "body": "When working with duration objects, it can be _really_ useful to know what unit quantities were used to create the duration object.\n\nThe `normalizedInput` object is already created in the duration object constructor. This update simply saves that input to the new duration object under the `_input` property.\n\nThe duration clone tests are updated to use the `asMilliseconds` method because the `_input` property will usually not match between the original and cloned duration objects. But each object should evaluate to the same number of milliseconds.\n\nOperations such as cloning, adding, or subtracting can modify a duration object so that its `_input` property gets out of sync with the actual duration value. I think that's OK.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3ed8dfb6b84f2427f8b",
    "number": 1912,
    "body": "Add \"分\" to minutes in Chinese.\n",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3ee8dfb6b84f2427f8c",
    "number": 1911,
    "body": "Add \"分\" to minutes in Chinese.\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3ef8dfb6b84f2427f8d",
    "number": 1907,
    "body": "Create new locale for Turkmenistan (turkmen language ['tk'] ). Translated from turkish locale.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3f08dfb6b84f2427f8e",
    "number": 1904,
    "body": "Append \"分\"(minute) to Ah点mm in longDateFormat\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3f18dfb6b84f2427f8f",
    "number": 1903,
    "body": "Append \"分\"(minute) to Ah點mm in longDateFormat\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3f28dfb6b84f2427f90",
    "number": 1898,
    "body": "In Bosnian language the correct name of August is \"august\" instead of \"avgust\"\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3f38dfb6b84f2427f91",
    "number": 1897,
    "body": "Fixes #1870.\n",
    "head_branch": "support-array-with-strings",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3f48dfb6b84f2427f92",
    "number": 1896,
    "body": "Fixes (parts of) #1879\n",
    "head_branch": "fix-locale-with-bad-id",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3f58dfb6b84f2427f93",
    "number": 1895,
    "body": "Fixes #1878 \n",
    "head_branch": "fix-utc-fmt-array",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3f68dfb6b84f2427f94",
    "number": 1894,
    "body": "This is an attempt at fixing #1884.\n\nAlso `days in one month` and `days in one year` yield floating point numbers in google.com, which is intended to be much more user friendly than moment (moment is developer friendly :)).\n\nThe `as` getters are intended for conversion, and this is exactly what we do here. It just `looks broken` as @jsmreese put it. @icambron what do you think?\n\n@jsmreese -- on the other hand if you don't want to display floating point numbers to the client you can just round them. I hope you're not using moment to convert 1 month into 30 days, but instead -- variable (possibly unexpected) input into days, which will most probably yield a non-natural number of days.\n\nTODO:\n- [ ] tests for all possible input and output units\n- [ ] remove commented out tests\n",
    "head_branch": "fix-duration-as-getters",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3f78dfb6b84f2427f95",
    "number": 1893,
    "body": "fixes #1790\n",
    "head_branch": "is-date",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3f88dfb6b84f2427f96",
    "number": 1892,
    "body": "- optimized performance of isBefore/isAfter/isSame by using valueOf and not momentizing/cloning already existing moment objects\n- 90% performance improvement when using without specific unit and the input is already a moment object\n\nreviewed by PatrickBic/tscheinecker\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3f98dfb6b84f2427f97",
    "number": 1890,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3fa8dfb6b84f2427f98",
    "number": 1885,
    "body": "- optimized performance of isBefore/isAfter/isSame by using valueOf and\n  not momentizing/cloning already existing moment objects\n- 90% performance improvement when using without specific unit and the\n   input is already a moment object\n\nreviewed by PatrickBic\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3fb8dfb6b84f2427f99",
    "number": 1883,
    "body": "The duration object refactor in moment version 2.8.0 introduced floating point math errors in the output of the duration as method.\n\nThe errors appeared for small units output: milliseconds, seconds, and minutes.\n\nThis fixes #1867 and fixes jsmreese/moment-duration-format#13.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3fc8dfb6b84f2427f9a",
    "number": 1882,
    "body": "Changed delimiter between hours and minutes back to colon in Czech language as it is more common than dot. Public media also use colon, for example http://www.ceskatelevize.cz/ct24/zive-vysilani/\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3fd8dfb6b84f2427f9b",
    "number": 1880,
    "body": "Add lodash to devDependencies in package.json.\nTest plan: rm -rf node_modules; npm install; grunt\n",
    "head_branch": "fix_lodash_dep",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3fe8dfb6b84f2427f9c",
    "number": 1874,
    "body": "Reimplement #1818, with replacing all hasOwnPrototype and adding a test.\n",
    "head_branch": "has-own",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 6d37f3b71e598b04b31f9c3caaa1dabffc894e1a into 092610d4c1b9a6ec35c70ec2a2ceb4dd70d0b330"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa3ff8dfb6b84f2427f9d",
    "number": 1873,
    "body": "As requested in #1775\n",
    "head_branch": "feature/duration-to-string",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4008dfb6b84f2427f9e",
    "number": 1872,
    "body": "Add `moment.deprecationHandler` that is executed every time a deprecated method or argument is passed.\n\nThis enables the user to throw an exception or breakpoint to find a place that emits the warning\n\nI'm not sure, but we might also want to put the following functionality in deprecationHandler somehow:\n- [ ] support printing the warning every time\n- [ ] support not printing a warning at all\n- [ ] support disabling deprecations altogether (for speed?)\n\ni.e don't merge for now, lets keep this until we figure out what we want from `deprecationHandler`.\n",
    "head_branch": "bugfix-add-subtract-duration-deprecate",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4008dfb6b84f2427f9f",
    "number": 1871,
    "body": "https://github.com/moment/moment/issues/1835\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4018dfb6b84f2427fa0",
    "number": 1865,
    "body": "It would be good having a common way to show date between various locales to have a similar representation of dates. \nEnglish locale, for example, has dates with months and week days that start with uppercase letter.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4028dfb6b84f2427fa1",
    "number": 1863,
    "body": "The default locale has months and week days starting with an uppercase letter.\nTo increase the user experience the style we use to represent a date should be as much similar as possible in every language.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4038dfb6b84f2427fa2",
    "number": 1859,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4048dfb6b84f2427fa3",
    "number": 1856,
    "body": "3 of the locale files didn't have the key in the comment like the rest.\n",
    "head_branch": "fix-locale-file-comments",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge f81da67eca81353618ad52d35203c92d2141e933 into 6307ac453a8ea440b2ee811337ea761dbd40dca2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4058dfb6b84f2427fa4",
    "number": 1854,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4068dfb6b84f2427fa5",
    "number": 1853,
    "body": "Makes Norwegian Bokmål and Norwegian Nynorsk look the same in formatting.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4078dfb6b84f2427fa6",
    "number": 1848,
    "body": "moment diff across dst was sometimes failing because of a floating point\nrounding. Just make sure to first do additions/subtractions and then division.\n\nfixes #1842\n",
    "head_branch": "bugfix/fix-month-diff",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4088dfb6b84f2427fa7",
    "number": 1844,
    "body": "There is a problem with moment, in which it does not define itself properly with RequireJS. This issue was discussed [here](https://github.com/Eonasdan/bootstrap-datetimepicker/issues/459), and was concluded that this was how moment.js declares itself. This PR solves this issue. All tests pass.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4098dfb6b84f2427fa8",
    "number": 1840,
    "body": "Windows tried to create symlinks for the \"files\" entries - reverting to \"scripts\" so this works with Windows (doesn't support symlinks).\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa40a8dfb6b84f2427fa9",
    "number": 1839,
    "body": "Windows tries to create symlinks with component 0.19 when you use \"files\" entries, so the component is unusable on windows (it doesn't support symlinks) - reverting to \"scripts\".\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa40b8dfb6b84f2427faa",
    "number": 1834,
    "body": "Hi,\n\nThanks for the great library. Here is Uyghur translation of moment, hope you can merge it. Thanks a lot.\n\nBest,\n\nAlim\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa40c8dfb6b84f2427fab",
    "number": 1833,
    "body": "And add some folder in .spmignore\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa40d8dfb6b84f2427fac",
    "number": 1825,
    "body": "Implemented toJSON function on Duration so JSON.stringify returns the ISO string representation of the duration\n\nThis is a fix for issue #1714 \n\n``` javascript\nJSON.stringify(moment.duration(1024, 'd'));\n```\n\nOld Result: \n\n``` javascript\n'{\"_milliseconds\":0,\"_days\":1024,\"_months\":0,\"_data\":{\"milliseconds\":0,\"seconds\":0,\"minutes\":0,\"hours\":0,\"days\":4,\"months\":10,\"years\":2}}'\n```\n\nNew Result: \n\n``` javascript\n'\"P2Y10M4D\"'\n```\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa40e8dfb6b84f2427fad",
    "number": 1823,
    "body": "Can we expose the leftZeroFill() function?\n\n While doing some complex formatting I need access to this lower level function.\n",
    "head_branch": "expose-leftZeroFill",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa40f8dfb6b84f2427fae",
    "number": 1819,
    "body": "",
    "head_branch": "lang_deprecation_oopsie",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4108dfb6b84f2427faf",
    "number": 1818,
    "body": "See http://stackoverflow.com/questions/8157700/object-has-no-hasownproperty-method-i-e-its-undefined-ie8 for reference\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4118dfb6b84f2427fb0",
    "number": 1813,
    "body": "It looks like we broke `moment().lang(key)` in 2.8.0. Take a look at the added (failing) unit tests.\n",
    "head_branch": "bugfix/maintain-lang-original-behavior",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 0c5b586bea8b4da368d46ed1e63254b036f1838b into b3f92609a80dd0b55a4d6df27e53c351df0825fb"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4128dfb6b84f2427fb1",
    "number": 1812,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4128dfb6b84f2427fb2",
    "number": 1811,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4138dfb6b84f2427fb3",
    "number": 1810,
    "body": "It is adapted version of \"sr-cyrl.js\" file.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4148dfb6b84f2427fb4",
    "number": 1809,
    "body": "Setting multiple values using the chaining API is awkward and verbose.\n\nCurrently:\n\n``` javascript\nmoment().set('year', 2011).set('month', 9).set('date', 12).set('hours', 6).set('minutes', 7).set('seconds', 8);\n```\n\nAfter this patch, the current API is supported, as well as using a hash of values:\n\n``` javascript\nmoment().set({ year: 2011, month: 9, date: 12, hours: 6, minutes: 7, seconds: 8 });\n```\n\nPR includes a passing test for the new behavior.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4158dfb6b84f2427fb5",
    "number": 1808,
    "body": "replaces #1785\n\nI rebased and added a few tests. Also run sauce tests.\n",
    "head_branch": "optimize_clone",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 059d1c094a5b9e09a7470e5e45c1f505b6b8d48f into c5bfe50f0fda24bf47e2c595a2963fd3fc9d2aff"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4168dfb6b84f2427fb6",
    "number": 1807,
    "body": "Apply #1761 to 4 remaining language files.\n",
    "head_branch": "fix-remaining-lang",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4178dfb6b84f2427fb7",
    "number": 1804,
    "body": "The proper preposition before the year is «de». «del» is used informally for years after 2000, but «de» is still the preferred form. «del» doesn't really work for years before 2000.\n\nSource: [Spanish Royal Academy's _Panhispanic Dictionary of Doubts_](http://lema.rae.es/dpd/srv/search?id=7Yloy2M3SD6pcC3Zyx).\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4188dfb6b84f2427fb8",
    "number": 1803,
    "body": "Added a dutch language file.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4198dfb6b84f2427fb9",
    "number": 1802,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa41a8dfb6b84f2427fba",
    "number": 1801,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa41b8dfb6b84f2427fbb",
    "number": 1800,
    "body": "It's little bit awkward to show 'minutes' in two digits.\nSo, it need to be modified to show like 2[minute], not 02[minute].\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa41c8dfb6b84f2427fbc",
    "number": 1794,
    "body": "Round up, down or to the nearest unit.\n\nUsage: moment.roundTo(units, [offset, midpoint])\n\nm.roundTo('minute', 15); // Round the moment to the nearest 15 minutes.\nm.roundTo('minute', 15, 'up'); // Round the moment up to the nearest 15 minutes.\nm.roundTo('minute', 15, 'down'); // Round the moment down to the nearest 15 minutes.\n",
    "head_branch": "feature/round-to",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa41d8dfb6b84f2427fbd",
    "number": 1791,
    "body": "Passing a Number value and a format to the Moment constructor causes Moment to throw a JS error (from within `makeDateFromStringAndFormat`). Seems like Moment isn't designed to handle this (preferring instead `moment.utc()` but it should probably not throw errors in this case when it can parse the Number and ignore the format.\n",
    "head_branch": "formatWithNumber",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa41e8dfb6b84f2427fbe",
    "number": 1789,
    "body": "Tibetan language localization added\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa41f8dfb6b84f2427fbf",
    "number": 1786,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4208dfb6b84f2427fc0",
    "number": 1785,
    "body": "I took a crack at optimizing cloning. On my box (tests are benchmark.js in Node on an MBP), I got this pre-optimization:\n\n```\n>> clone x 36,536 ops/sec ±0.96% (96 runs sampled)\n```\n\n(bigger is better).\n\nI did two passes. In the first one, I replaced the `momentProperties` object with an array of strings, reorganized the clone so that it doesn't sort of do it twice (once in `cloneMoment` and once in `extend`), and then I changed the clone to copy the fields over. Results:\n\n```\n>> clone x 220,760 ops/sec ±0.65% (90 runs sampled)\n```\n\nSo 6x. The second pass, I made `momentProperties` into an empty list (can still be added to by plugins), and then made the clone function actually just look at each field and copy them old-school. Results:\n\n```\n>> clone x 1,786,933 ops/sec ±0.97% (91 runs sampled)\n```\n\nSo 49x the original.\n\nCaveats:\n- I broke plugin compat, probably just tz. `momentProperties` is now an array, not an object, which makes it a bit faster to iterate through. We can either switch it back to an object and take the perf hit for moment-tz or we can fix moment-tz.\n- I need to write a test for the plugin field cloning\n- ~~**I broke one thing**. The `_lang` object is defined on the prototype and can be overriden by the instance. Since we don't check `hasOwnPrototype()`, the reference gets copied on clone either way (i.e. it gets \"promoted\" from prototype property to instance property). I don't think that has any practical effect unless you redefine the language in the prototype (weird), so I deleted the test, but I could be missing something. We could either use `hasOwnProperty()` in this one place, or we could live with it.~~\n- I haven't tested on, you know, actual browsers.\n",
    "head_branch": "optimize_clone",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4218dfb6b84f2427fc1",
    "number": 1784,
    "body": "Specifically:\n- LL   => 'MMMM D, YYYY'\n- LLL  => 'MMMM D, YYYY LT'\n- LLLL => ''dddd, MMMM D, YYYY LT'\n\n... and similarly for the lowercase variants.\n\nThe use of a comma between the day-of-month and year is standard\npractice in US English. See:\n- ICU docs [http://demo.icu-project.org/icu-bin/locexp?_=en_US](under Date & Time Patterns)\n- Chicago Manual of Style (by way of the Library of Congress)\n  [http://lcweb2.loc.gov/ammem/ndlpedit/handbook/numberdate.html]\n- Wikipedia [http://en.wikipedia.org/wiki/Date_and_time_notation_in_the_United_States]\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4228dfb6b84f2427fc2",
    "number": 1782,
    "body": "Ordinal numbers from 10 to 20 should all have the \"th\" suffix.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4238dfb6b84f2427fc3",
    "number": 1781,
    "body": "Replace expensive calls to `hasOwnProperty` with cheaper `Object.keys`\niteration. Similar to #1453, but with a compatibility shim for IE7 and IE8 that handles DontEnum bug (#1114).\n\nShaves a full second off the unit tests and nearly doubles the speed of\n`moment#clone()` on my machine.\n\nFor a performance comparison: http://jsperf.com/moment-clone-speedup\n\nI think this _does_ change the semantics of `moment#clone()` slightly—previously, cloning a moment would not include any weird custom properties a user may have set on a moment object. `moment().myFakeProperty = true`, for example, would not have been copied. With this change, _all_ enumerable properties on a moment instance will be copied. I doubt this is a breaking change, though.\n",
    "head_branch": "optimize-hotspots",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4238dfb6b84f2427fc4",
    "number": 1778,
    "body": "fixed formatting issues (jscs) as reported by Travis \n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge dc53ef751494cdf6d9f6510b86af408a84a37674 into 2733206c27a2fe4deb3958b692f1831a4951b508"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa4248dfb6b84f2427fc5",
    "number": 1776,
    "body": "please review away. unit test passed.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4258dfb6b84f2427fc6",
    "number": 1771,
    "body": "Include the \"a few\" prefix to `relativeTime.s`.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4268dfb6b84f2427fc7",
    "number": 1767,
    "body": "Algerian Arabic\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4278dfb6b84f2427fc8",
    "number": 1765,
    "body": "I really liked Tim's changes to the moment-timezone readme, so I ~~copied him~~ was inspired by those changes. It boils down to:\n- Move more stuff into contributing and rework it. (I don't think we need to be as emphatic about the branch thing because everything defaults to develop).\n- Move the changelog to its own file\n- New badges!\n",
    "head_branch": "simplify_readme",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4288dfb6b84f2427fc9",
    "number": 1764,
    "body": "Convert double quotes to single quotes for consistency throughout moment.js file.\n\nAll tests completed without any errors.\n\n![screen shot 2014-07-06 at 10 22 19 am](https://cloud.githubusercontent.com/assets/3654181/3489502/26ba91de-0532-11e4-83c9-56d6a68f4187.png)\n\n![screen shot 2014-07-06 at 10 22 50 am](https://cloud.githubusercontent.com/assets/3654181/3489504/2e2c79c8-0532-11e4-8323-9bf10f17326d.png)\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4298dfb6b84f2427fca",
    "number": 1763,
    "body": "Fix for #1729:\n- DRY for add/subtract\n- Deprecate old arg ordering\n- Fix internal uses and test uses (except, of course, ones specifically testing add/subtract)\n- Renamed tests so that \"reversed\" now means the opposite\n",
    "head_branch": "add_subtract_order",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa42a8dfb6b84f2427fcb",
    "number": 1761,
    "body": "- Deprecated moment.lang(), moment.langData(), moment#lang, and\n  duration#lang\n- Added moment.locale(), moment.localeData(), moment#localeData, and\n  druation#localeData\n- Added moment.defineLocale() that defines a locale but doesn't set it\n  as the global locale (#1750)\n- Removed the hack in the language concatenator that set the language\n  to English.\n- Refactored internal code to use moment#localeData instead of local\n  functions, and set the language directly on the moment instance at\n  creation.\n- Moved all the files and changed the build scripts so that everything\n  lives is named \"locale\" instead of \"lang\", e.g. the locale files under\n  the \"locale\" directory.\n- I did _not_ include build-generated changes like component.json and\n  the concated locale files, but I did inspect them to see that they look\n  right. But I did remove the old ones wherever they won't be named correctly in the future.\n",
    "head_branch": "language_rework",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa42b8dfb6b84f2427fcc",
    "number": 1759,
    "body": "Fix for #1752. Added a deprecation warning to the old toIsoString\n",
    "head_branch": "iso_vs_ISO",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa42c8dfb6b84f2427fcd",
    "number": 1758,
    "body": "The build's been failing because jsc doesn't pass. This is a fix for that.\n",
    "head_branch": "fix_jsc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa42d8dfb6b84f2427fce",
    "number": 1755,
    "body": "Build is broken because of that.\n",
    "head_branch": "fix-jscs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge ea74a712e22c302e4d8b141c24e3dd4983161d19 into 8897d255f2567aecdf780d94c3f45ee719c9ace8"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa42e8dfb6b84f2427fcf",
    "number": 1749,
    "body": "Relaxed rules for single quote, but allow double quotes if it's required to avoid escaping.\n\nNot a real issue, but my WebStorm mark moment files with a lot of errors.\n\nLooks like single quote is preferable.\nJust used <kbd>CTRL+F</kbd> via `moment.js`:\n- Single quotes: 795\n- Double quotes: 174\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa42f8dfb6b84f2427fd0",
    "number": 1738,
    "body": "This is a fix for #1719\n",
    "head_branch": "bugfix-zone2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 16dcad11fd28cad216d2c9f52f5a68dec7201139 into b5c9b3f5400c1fd243a5477f40e2cdda0b8c1512"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4308dfb6b84f2427fd1",
    "number": 1733,
    "body": "I have a scenario where I'm parsing thousands of date strings with moment, and `cloneMoment` was near the top of the more expensive methods by execution time. I believe this is due to using `for..in` to enumerate properties, which also enumerates prototype properties. However, this behavior appears to not be required, since the iterator block here immediately checks for own properties only.\n\nSince this method is only being called in one place where `m` is guaranteed to be a moment object, and only own properties are cloned and prototype enumeration is not a requirement, I have added a preferable implementation using the less-expensive `Object.keys`, which will be used if available ([which it universally is, among non-obsolete browsers](http://kangax.github.io/compat-table/es5/)). The former implementation is retained for obsolete browsers.\n\nThis results in a substantial improvement in my actual situation, with the total aggregate time for `cloneMoment` dropping from ~300ms to ~60ms.\n\nAll `grunt` tasks pass without issue.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4318dfb6b84f2427fd2",
    "number": 1731,
    "body": "all tests passed  \nI tested it and it works now :smile_cat:  \ntested with `component install timaschew/moment@develop`\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4328dfb6b84f2427fd3",
    "number": 1727,
    "body": "Corrected mistakes and added tests. See #1657\n",
    "head_branch": "feature/fix-1657",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 08ff506852abf3af405157c1418dc71456ba37ab into 9a0b3b1ab035952504c9e20e3db744ba6641b50a"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa4338dfb6b84f2427fd4",
    "number": 1720,
    "body": "I suggest a slight simplification of the language file implementation for Luxembourgish (lb)\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4348dfb6b84f2427fd5",
    "number": 1718,
    "body": "Add jscs grunt task, and appropriate config, and make sure Gruntfile, moment.js and all lang files pass. We should make the tests pass too, maybe later.\n\n**NOTE**: Don't merge until they push the new version of the jscs grunt task, that has the newest version of jscs (because we're using features from it)\n",
    "head_branch": "jscs-support",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4358dfb6b84f2427fd6",
    "number": 1716,
    "body": "adding the retrieve option for relativeTimeThresholds settings\n\nrelates to: https://github.com/moment/moment/issues/1715\n",
    "head_branch": "getRelativeTimeThreshold_Issue_1715",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4368dfb6b84f2427fd7",
    "number": 1710,
    "body": "See #1706\n",
    "head_branch": "feature/fix-1706",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 27075032688a5b781eb9af8fb4ce66365278e13f into 9acd38fcff7c996200ac0e4df49b5ca9737940f0"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4378dfb6b84f2427fd8",
    "number": 1708,
    "body": "The moment constructor when passed a Date should be the fastest. There is\nno need to match the aspNetJsonRegex before testing if the `input` is a\nDate.\n",
    "head_branch": "perf-makeDateFromInput",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4388dfb6b84f2427fd9",
    "number": 1706,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4398dfb6b84f2427fda",
    "number": 1704,
    "body": "This adds support for strings on add and subtract.\n\n``` javascript\nmoment().add('1', 'h');\nmoment().subtract('1', 'h');\nmoment().add('h', '1');\nmoment().subtract('h', '1');\n```\n\nNotice that the value is a string. At the moment, doing the add would not do anything.\n",
    "head_branch": "feature/support_string_value_in_add_subtract",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa43a8dfb6b84f2427fdb",
    "number": 1703,
    "body": "This adds support for strings on add and subtract.\n\n``` javascript\nmoment().add('1', 'h');\nmoment().subtract('1', 'h');\nmoment().add('h', '1');\nmoment().subtract('h', '1');\n```\n\nNotice that the value is a string. At the moment, doing the add would not do anything.\n",
    "head_branch": "feature/support_string_in_add_subtract",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa43b8dfb6b84f2427fdc",
    "number": 1699,
    "body": "",
    "head_branch": "feature/fix-1326",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa43b8dfb6b84f2427fdd",
    "number": 1693,
    "body": "This commit allows the ISO-8601 format to be passed as a format in the moment(string, array) constructor. This is an attempt to make #1680 possible.This is a preliminary commit as this addition as yielded a few issues. This is not ready for merge.\n\nHere are some of the issues:\n- `makeDateFromString` does not play nice with scoring (might be due to the way I implemented it)\n- scoring cannot currently be tested because `makeDateFromString` shoves what it doesn't know into into `createFromInputFallback` which has been modified to throw always throw an error in the test suite.\n\nI will probably try to add an optional parameter to `makeDateFromString` which tells it to not use `createFromInputFallback` to fix the second issue.\n",
    "head_branch": "moment-iso-parse",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa43c8dfb6b84f2427fde",
    "number": 1687,
    "body": "Russia's zone offset is different on 1st of January (something we assumed\nimpossible in tests). Check to see if that is the case and skip the offending\ntest.\n\nFixes #1635 and #1612\n",
    "head_branch": "bugfix/year-diff-ru",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 1e4b73b556f27746fcd116af03994db90c24d3fc into c2b9ce75355261a8b2bb204058f768a1cec953e2"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa43d8dfb6b84f2427fdf",
    "number": 1678,
    "body": "Language file added bn.js\ntest file for bengali aded test/lang/bn.js\n\n@Oire as we discussed in #1677 I am giving a pull request for adding bengali language support . \n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa43e8dfb6b84f2427fe0",
    "number": 1673,
    "body": "Fixed and rebased #1424\n",
    "head_branch": "fix-lt",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa43f8dfb6b84f2427fe1",
    "number": 1671,
    "body": "This has the two patches from @ryangreaves\n",
    "head_branch": "update-cy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4408dfb6b84f2427fe2",
    "number": 1664,
    "body": "https://github.com/moment/moment/issues/1609\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4418dfb6b84f2427fe3",
    "number": 1663,
    "body": "This new feature allows a user to set custom thresholds for the division between time units for relative time strings.\n\nExample:\nThe default threshold between hours and days as the unit for relative time is 22 hours. With this feature the user can now set a custom threshold like so:\n\n```\nvar m = moment().subtract('hours', 23);\nm.fromNow(); // Shows \"a day ago\"\nmoment.relativeTimeThreshold('h', 24)\nm.fromNow(); // Shows \"23 hours ago\"\n```\n",
    "head_branch": "relative-time-threshold-settings",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4428dfb6b84f2427fe4",
    "number": 1660,
    "body": "To help @ryangreaves\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4438dfb6b84f2427fe5",
    "number": 1659,
    "body": "",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4448dfb6b84f2427fe6",
    "number": 1657,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4458dfb6b84f2427fe7",
    "number": 1651,
    "body": "Fix for bug described in #1627.\n\nNeeds tests.\n",
    "head_branch": "fix-timezone-parsing",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4468dfb6b84f2427fe8",
    "number": 1650,
    "body": "This is a PR for (part of) the bug described in #1640\n",
    "head_branch": "fix-meridiem-parse-russian",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4478dfb6b84f2427fe9",
    "number": 1648,
    "body": "The austrian translation of january is 'Jänner' instead of 'Januar'.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4488dfb6b84f2427fea",
    "number": 1647,
    "body": "Another great package manager: http://spmjs.io\nDocumentation: http://spmjs.io/documentation\n\nhttp://spmjs.io/package/moment\nhttp://spmjs.io/package/jquery\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4498dfb6b84f2427feb",
    "number": 1646,
    "body": "Another great package manager: http://spmjs.io\nDocumentation: http://spmjs.io/documentation\n\nhttp://spmjs.io/package/moment\nhttp://spmjs.io/package/jquery\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa44a8dfb6b84f2427fec",
    "number": 1644,
    "body": "https://translate.google.com/#auto/cy/ago%0A2%20weeks%20ago%0A1%20day%20ago\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa44b8dfb6b84f2427fed",
    "number": 1642,
    "body": "Fix for #1620\n\nThere are a few things going on here\n- [x] Create accurate duration object given two dates (extracting months and milliseconds)\n- [x] More accurate bubbling of milliseconds to months (taking into account days-per-year and leap years)\n- [x] relativeTime now works with duration objects instead of mere milliseconds\n- [x] fix broken tests -- oh well, hopefully wouldn't break anybody's flow\n- [x] rebase on top of #1663\n\n@icambron maybe a careful code review, I'll fix the tests at some point in the future.\n",
    "head_branch": "fix-humanize",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa44c8dfb6b84f2427fee",
    "number": 1641,
    "body": "There was an issue with creating a weekyear/week/weekday with all years starting on Monday -- the created date one week back.\n\nRelated bug: #1626\n",
    "head_branch": "fix-init-from-week",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge dd46f289646389510da7d8f9ab68b68fe55009f1 into 83c63f8c40c8ff7df231e46cd28f05b6b60695b5"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa44d8dfb6b84f2427fef",
    "number": 1637,
    "body": "PR for https://github.com/moment/moment/issues/1548\n",
    "head_branch": "min-max-redo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa44e8dfb6b84f2427ff0",
    "number": 1633,
    "body": "Add Arabic with Saudi Arabia Locale\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge d40be08f059c5f686979f8471561189034ba59f0 into fae4fbf6a07b522339049f35df16cf4566948c40"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa44f8dfb6b84f2427ff1",
    "number": 1632,
    "body": "Added weekOfMonth method\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4508dfb6b84f2427ff2",
    "number": 1630,
    "body": "Use \"Ah:mm\" for LT instead of \"Ah點mm\" (since the later reads weird); separate time and date part with one space to increase readability.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4518dfb6b84f2427ff3",
    "number": 1628,
    "body": "Please accept the pull request for the community.\nThanks.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4528dfb6b84f2427ff4",
    "number": 1622,
    "body": "\"Την προηγούμενη Σάββατο\" that appeared, was wrong. Now shows \"Το προηγούμενο Σάββατο\".\n\nContains tests.\n",
    "head_branch": "akarelas-fixGreekCalendar",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4538dfb6b84f2427ff5",
    "number": 1621,
    "body": "This pull-request adds the ability to configure the language as part of the format method, instead of changing it globally.\n\n```\nmoment().format('LLL', { lang: 'pt' });\n```\n\nThe change is primarily for node.js server side uses. When rendering a date for a client, it's not desirable to modify the global language, but only for that call.\n\nOn the server-side, this change could be used alongside the [locale](https://github.com/jed/locale) module to negotiate the correct language for displaying dates.\n\n```\nvar supported = new locale.Locales([\"en\", \"en_US\", \"ja\", ... ]);\napp.get('/', function(req, res, next) {\n  var locales = new locale.Locales(req.headers[\"accept-language\"]);\n  res.render('template', { \n    localDate: moment().format('LLL', { lang: locales.best(supported) })\n  });\n});\n```\n",
    "head_branch": "format_options",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4548dfb6b84f2427ff6",
    "number": 1616,
    "body": "We were using the wrong codes for Serbian and Tamazight\n\nAs mentioned here  #1609\n",
    "head_branch": "fix-lang-codes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 4e7c24ab495cf7d2ba89ac2893326d7c82bd6d70 into cd91a72e81f5d1069767abbc97007969d9e6c2ad"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4548dfb6b84f2427ff7",
    "number": 1610,
    "body": "Adds a second parameter to `duration#humanize` method to get short strings.\nIt also ignores suffix.\n",
    "head_branch": "feature/humanize-short",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4558dfb6b84f2427ff8",
    "number": 1604,
    "body": "Every case where user supplied input ends up into the Date constructor, without\nus knowing what would be the result, call createFromInputFallback so the\nfunction can be deprecated, overwritten and replaced in future versions.\n",
    "head_branch": "fix-input-fallback",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4568dfb6b84f2427ff9",
    "number": 1602,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4578dfb6b84f2427ffa",
    "number": 1596,
    "body": "When requesting a relative time with a suffix for Russian correct form is: \"31 минуту назад\" and \"через 31 минуту\"\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge a74b230cb28ca936376c3cbe15ad853060fd75ae into 93ec26986d18509cbd650bd537256a67a465f8fd"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4588dfb6b84f2427ffb",
    "number": 1595,
    "body": "Round up, down or to the nearest unit.\n\nUsage: moment.roundTo(units, [offset, midpoint])\n\nm.roundTo('minute', 15); // Round the moment to the nearest 15 minutes.\nm.roundTo('minute', 15, 'up'); // Round the moment up to the nearest 15 minutes.\nm.roundTo('minute', 15, 'down'); // Round the moment down to the nearest 15 minutes.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4598dfb6b84f2427ffc",
    "number": 1590,
    "body": "Make sure non AMD compatible modules work well with moment in require.js. This is based on https://github.com/moment/moment/issues/1574\n",
    "head_branch": "early-amd-global",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa45a8dfb6b84f2427ffd",
    "number": 1589,
    "body": "We didn't have that for a few months, nobody complained. In Node.JS environment all software is module-aware, so I really don't see the need for a global. It can be exported at will if that is desired.\n",
    "head_branch": "remove-node-global",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa45b8dfb6b84f2427ffe",
    "number": 1588,
    "body": "This reverts commit ed6a2d4e1f3e32abce6939ef451f0cd4f8c54a1b.\nThis was discussed in https://github.com/moment/moment/issues/1537#issuecomment-39505749\n",
    "head_branch": "fix-cjs-exporting",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa45c8dfb6b84f2427fff",
    "number": 1586,
    "body": "This should solve part of https://github.com/moment/moment/issues/1500.\n",
    "head_branch": "feature/more_quarter_support",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa45d8dfb6b84f2428000",
    "number": 1583,
    "body": "I think this is more correct Spanish, maybe a native speaker can confirm?\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa45e8dfb6b84f2428001",
    "number": 1580,
    "body": "I missed it because it was a string, so JSHint didn't find it.\n\nI ran the task to make sure it worked.\n",
    "head_branch": "camelCase",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 4a5f3023871190217d6905adf69e37a41f8a1d9d into e092562e93b19ba40bf975dad3fd7f7969e6c4d3"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa45f8dfb6b84f2428002",
    "number": 1579,
    "body": "I haven't run all of the different grunt tasks yet, but this should cover most everything else:\n- Code changed\n- JSHint rule added\n- JSHint passed\n- Tests passed\n",
    "head_branch": "camelCase",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 2594fab6b7a20d2e33f79c67525247156e842106 into e7e1b60e1228e38fde8e642eabb2c0eab7f6ff04"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4608dfb6b84f2428003",
    "number": 1578,
    "body": "This is the patch for #1576\n",
    "head_branch": "fix-iso-times",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 739f9bc0d9af4fd658d393b9b52230a665217561 into 6ea146e66089380998ef579ba5cb1233bad85845"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4618dfb6b84f2428004",
    "number": 1577,
    "body": "This is step one for deprecating the Date constructor. First merge #1564 to get the deprecate function and actually deprecate the newly extracted function so it'd print a warning if moment construction hits `Date`.\n",
    "head_branch": "extract-date-constructor",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge f5603f65e716686304479bae966eaecb40360a15 into 9564f0c7692bb4da2f7421670e86c488c5c577d9"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4628dfb6b84f2428005",
    "number": 1573,
    "body": "Fixed some typos in `/lang/sq.js` and `/test/lang/sq.js`. Also,\ntrailing `ë` is often silent in Albanian, so it's easy to miss.\n\n(This is a fix of the previously closed #1572 as I had forgotten \nchanging the tests)\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 46fa158ad317f848c1c3071a58276b9456c7b279 into bb13838f9320f1e926ef307e32e54c2372b0a5f4"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4638dfb6b84f2428006",
    "number": 1572,
    "body": "Hi,\nI edited the albanian language file as some `e`-s need to be written with the diaeresis diacritic (i.e. as `ë`). Thought you might want to merge this into master.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4648dfb6b84f2428007",
    "number": 1571,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4648dfb6b84f2428008",
    "number": 1564,
    "body": "This is supposed to fix most issues regarding manipulating `moment-timezone`-d moments across DST. Unfortunately the built-in Date still has the same issues.\n\nThe main idea of the change is:\n- create low-level unit getters and setters that don't care about offset.\n- Create higher level setter, that handles updating offset.\n- Handle keep-time cases (changing the time across DST while wanting to preserve the hour/minutes), in which it is impossible (no such hour/minute in the current timezone)\n- change updateOffset/zone api (zone's second arg wasn't working at all before, so I'm pretty confident no code is broken) \n- Setting the hour now keeps the time (that is we'll try to actually set the hour to the one you say :))\n- startOf now works across DST\n\nCorresponding `moment-timezone` PR will show up soon\n\nEDIT: https://github.com/moment/moment-timezone/pull/70\n",
    "head_branch": "fix-zone-madness",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4658dfb6b84f2428009",
    "number": 1560,
    "body": "No tests for this yet, but just wanna open this up to see if there's interest in merging. If there is, I'll add some tests/docs/cleanup.\n\nWe need the ability to parse a date relative to another date. For example, given the input \"3:33 PM\", I want to be able to parse this value relative to two days from now, instead of the current date/time. This allows you to do the following:\n\n``` javascript\nmoment.relative(moment(\"2014-03-29\"), \"3:33 PM\", \"h:mm A\")\n```\n",
    "head_branch": "relative-parsing",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4668dfb6b84f242800a",
    "number": 1559,
    "body": "Updating Arabic language and minimize weekdaysShort\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 23d8445f2aef29da90c03dc06829006a616ee7cb into cec7d6b47f2c44d528afd696f3c514d5b87791df"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4678dfb6b84f242800b",
    "number": 1556,
    "body": "MediaWiki is using this library, but it also uses the standard ISO 639 code for Vietnamese (`vi`), so it doesn’t pick up this localization when the interface language is set to Vietnamese. (`vn` is the ISO country code for Vietnam.)\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4688dfb6b84f242800c",
    "number": 1554,
    "body": "For example:\n\n``` javascript\nmoment().calendar()\n// => Today at [...]\n\nfakeToday = moment().subtract( 'days', 1 )\nmoment().calendar( fakeToday )\n// \"Today\" from the perspective of yesterday (`fakeToday`) is \"tomorrow\".\n// => Tomorrow at [...]\n```\n\nI'm not sure how useful this would be outside of a testing environment, but with it you can test the `calendar` method by feed it a stubbed out \"now\".\n",
    "head_branch": "feature/calendar-accepts-time-argument",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4698dfb6b84f242800d",
    "number": 1553,
    "body": "For example:\n\n``` javascript\nmoment().calendar()\n// => Today at [...]\n\nfakeToday = moment().subtract( 'days', 1 )\nmoment().calendar( fakeToday )\n// \"Today\" from the perspective of yesterday (`fakeToday`) is \"tomorrow\".\n// => Tomorrow at [...]\n```\n\nI'm not sure how useful this would be outside of a testing environment, but with it you can test the `calendar` method by feed it a stubbed out \"now\".\n",
    "head_branch": "feature/calendar-accepts-time-argument",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa46a8dfb6b84f242800e",
    "number": 1546,
    "body": "Fix Last Week and Ordinal\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa46b8dfb6b84f242800f",
    "number": 1545,
    "body": "Fixes #1439\n",
    "head_branch": "abstracted-year-parsing",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa46c8dfb6b84f2428010",
    "number": 1544,
    "body": "The language code is **km**.\nReference: http://reference.sitepoint.com/html/lang-codes\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge d5f4651768cc3834d3f5637759194b5a9af77716 into 94a57cfc1b3dee114cb5f709dba3ea3a31832008"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa46d8dfb6b84f2428011",
    "number": 1540,
    "body": "Norwegian bokmål uses the character \":\" as the time separator, not \".\"\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa46e8dfb6b84f2428012",
    "number": 1536,
    "body": "Corrected Danish formatting, please review (my very first pull request! :-)).\nSee #1428 including jsFiddle demonstrating the new format.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa46f8dfb6b84f2428013",
    "number": 1529,
    "body": "Partition of #1472 as described here https://github.com/moment/moment/pull/1472#issuecomment-36736292\n",
    "head_branch": "serbian-cyrillic",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4708dfb6b84f2428014",
    "number": 1528,
    "body": "This is just a partition of #1472 as described here https://github.com/moment/moment/pull/1472#issuecomment-36736292\n",
    "head_branch": "serbian-improvements",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge e686babb12fdc0a5845eb69775485625b85694e9 into fb9276472ec3d0e0b829a5a7a1597c428a514678"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa4718dfb6b84f2428015",
    "number": 1527,
    "body": "Trying to fix https://travis-ci.org/moment/moment/builds/20586789\n",
    "head_branch": "fix-dependency-versions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 6662665f19d04d8d152dde34a7979ff718ed029a into bb9afc6fbbd0194ee86cfbb90b0497a51f52b19a"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4728dfb6b84f2428016",
    "number": 1526,
    "body": "This is rebased #1481\n",
    "head_branch": "mechuwind-develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4738dfb6b84f2428017",
    "number": 1510,
    "body": "see #1509\n",
    "head_branch": "bug/component-EMFILE",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4748dfb6b84f2428018",
    "number": 1502,
    "body": "Added an extra variable such that using aa or AA will result in a.m./p.m. or A.M./P.M. being printed, respectfully. Also works when converting from a.m. to moment format. (a.m. -> aa)\n",
    "head_branch": "feature/meridiem-format-update",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4758dfb6b84f2428019",
    "number": 1499,
    "body": "Provides correct \"authors\" property, and more importantly, adds the needed properties for use with the Composer component-installer.  \n\nOne note: I've chosen to include only the base moment.js in the default script build, and load the other, larger, files as alternative files that can be loaded if desired.  I think this makes the most sense, as there will be more projects that just want to use one or a few languages and don't want to load the entire language pack. I've also included the individual language files, so one can\n  require([\"moment\", \"moment/lang/fr\"], ...);\nfor instance, to load individual languages.\n",
    "head_branch": "feature/composer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 533dddb7abbbfaa3a090b5de405eba8d73ab6d81 into d3da8f7b504aee57fe610e1aa103c1702a7f945e"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4758dfb6b84f242801a",
    "number": 1491,
    "body": "This makes it possible to install moment with the components installer\n\nhttp://robloach.github.io/component-installer/\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4768dfb6b84f242801b",
    "number": 1475,
    "body": "for example\n\n``` js\nmoment('May 6th', 'MMMM Do').format('MMMM Do')\n// => May 1st\n// expected => May 6th\n```\n\nI'm happy to look into it and put together a pull request, just wondering if this wanted or not?\n",
    "head_branch": "issue_1475_parse_do",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4778dfb6b84f242801c",
    "number": 1481,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4788dfb6b84f242801d",
    "number": 1480,
    "body": "- Added load-grunt-tasks module to gruntfile\n- Removed possible unused module grunt-lib-legacyhelpers \n  https://github.com/Mayho/moment/compare/grunt-tasks?expand=1#diff-b9cfc7f2cdf78a7f4b91a753d10865a2L50\n",
    "head_branch": "grunt-tasks",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4798dfb6b84f242801e",
    "number": 1478,
    "body": "[Wikimedia - Capitalization](http://meta.wikimedia.org/wiki/Capitalization_of_Wiktionary_pages)\n**Languages which do not capitalize day names**\nPortuguese / Portuguese_Brazil\n\n**Capitalization of month names**\nPortuguese / Portuguese_Brazil\n\nAlso\n[Microsoft released a patch for their software](http://support.microsoft.com/kb/2732846)\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 61ee8c82d6d33c934ae1e9c05dc26c9a4aa63564 into 91efba1f734a8ae9d4999c0352993a4ff98f5157"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa47a8dfb6b84f242801f",
    "number": 1477,
    "body": "[Wikimedia - Capitalization](http://meta.wikimedia.org/wiki/Capitalization_of_Wiktionary_pages)\n**Languages which do not capitalize day names**\nPortuguese\n\n**Capitalization of month names**\nPortuguese / Portuguese_Brazil - Months are capitalized in Portugal, but not in Brazil\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa47b8dfb6b84f2428020",
    "number": 1472,
    "body": "Added support for Serbian language, both Latin and Cyrillic scripts. (sr-lat, sr-cyr)\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa47c8dfb6b84f2428021",
    "number": 1469,
    "body": "I have added two language files and also two test files to enable support for both Serbian Latin and Cyrillic scripts.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa47d8dfb6b84f2428022",
    "number": 1468,
    "body": "When you change the zone you'd expect the time to remain the same, but if\nyou're doing something low-level you might want just the zone offset to change.\n\nAdd a second argument to zone that would allow the caller to disable adjusting\nthe hour when setting a zone.\n\nI'll make a corresponding PR in the moment-timezone repo.\n",
    "head_branch": "feature/allow-zone-skip-adjust",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge de6b2362251f6de2a8a9f1acf8a73772b965384f into 8b333f544bed4ebbc27eb8429974f5ac3e950e81"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa47e8dfb6b84f2428023",
    "number": 1467,
    "body": "When you do `moment.date(5)`, you'd expect the time-of-day to remain the same\neven across DST. This only affects users of moment-timezone.\n\nRelated to https://github.com/moment/moment/pull/1419\n",
    "head_branch": "bugfix/default-ignore-offset",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa47f8dfb6b84f2428024",
    "number": 1462,
    "body": "This implements #1289. I think the week and iso week stuff should go in\na separate calendar at some point.\n",
    "head_branch": "feature/weeks-in-year",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4808dfb6b84f2428025",
    "number": 1461,
    "body": "I created a pull request from @tehnicaorg's commits.\n\n@tehnicaorg -- in the future please submit actual pull requests, mentioning the issue in the commit message is not enough. If you need help with that let me know.\n\n@gurdiga, @avaly what do you think?\n",
    "head_branch": "bugfix/romanian-month-names",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4818dfb6b84f2428026",
    "number": 1460,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4828dfb6b84f2428027",
    "number": 1459,
    "body": "This adds a global method `zone` to moment to set a default zone to be used:\n- when parsing new moments\n- when formatting moments\n\nThe aim is to allow the browser timezone to be setable.\n",
    "head_branch": "feature/default_zone",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4838dfb6b84f2428028",
    "number": 1458,
    "body": "Fixes #1234. Properly format YYYY-MMM-DD expressions -- no dot in the month\nname in this case.\n",
    "head_branch": "bugfix/spanish-dot-dash",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge af4577c380e79312b6e473e960db7e0d5ce230e2 into 5aa3e4b8c446d26e71e0eb38a3b0ec9cbc1efc34"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4848dfb6b84f2428029",
    "number": 1457,
    "body": "Lets merge this already :)\n",
    "head_branch": "bugfix/albanian-am-pm",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4858dfb6b84f242802a",
    "number": 1453,
    "body": "Speedup roughly 25% on the unit tests.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4868dfb6b84f242802b",
    "number": 1449,
    "body": "her we go, now with tests\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge f253889f25538888b68c99c924093a6bbfaeaf8a into fbd97eaabe56e596507e2020d1f9cbed73f55bf6"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4868dfb6b84f242802c",
    "number": 1448,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4878dfb6b84f242802d",
    "number": 1447,
    "body": "moment.parseZone is just a shorthand for moment().parseZone(), so make sure\nthat all arguments passed to the static function end up in the moment factory\nfunction.\n\nIn response to #1446\n",
    "head_branch": "bugfix/parse-zone-proxy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 969c12fa8d751f37dce5c358c3e01173175beeb7 into e5c26e00a4dc00b45443e46cca28dabc472d54a7"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa4888dfb6b84f242802e",
    "number": 1445,
    "body": "Fixed the project name in bower.json file. Many projects are using \"momentjs\" name in the dependency list instead of \"moment\"\n",
    "head_branch": "bowername",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4898dfb6b84f242802f",
    "number": 1444,
    "body": "Not actually using it in production, so only noticed because of:\nhttps://github.com/moment/moment/pull/1424\n",
    "head_branch": "feature/fix_lt_nominative_weekday_detection",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa48a8dfb6b84f2428030",
    "number": 1441,
    "body": "13 March 2011 is not handled properly in Safari. Detect bug and exit test early.\n\nFixes #1161.\n",
    "head_branch": "bugfix/workaround-safari-madness",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge a841f8443f8f224f5ef97d99939549efbae7eece into abc3a14b2ed7c9f4ff420395f3e1f198459528d8"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa48b8dfb6b84f2428031",
    "number": 1436,
    "body": "moment().duration().toLocalString([withSuffix bool], [precision 1:day 2:seconds 3:milliseconds]);\nmoment().duration(1928731).toLocalString();\nmoment().duration(1928731).toLocalString(true);\nmoment().duration(1928731).toLocalString(true, 3);\n\nI need humanize with precision. thank you.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa48c8dfb6b84f2428032",
    "number": 1434,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa48d8dfb6b84f2428033",
    "number": 1433,
    "body": "It seems more natural to express the concept of times in the past as something like:\n\n\"há dez anos\" - \"ten years ago\"\n\nrather than the somewhat formal sounding \"dez anos atrás\", which also gives the impression that it is the beginning of a phrase, and not standalone.\n\nWould welcome discussion!\n",
    "head_branch": "pt-lang",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 0a5d0f99fbb117e4efce69bdaa8799ea513b6a42 into 72abacac38121d08cd77dd6694afe0e9dd4accb0"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa48e8dfb6b84f2428034",
    "number": 1429,
    "body": "We were getting reports that our website was crashing in Chrome. We were able to pinpoint it to moment.\n\nChanging the config from a literal object to setting properties is ugly, but resolves the issue for us in production. Given how frequently Chrome is updated I suspect we'll be able to revert it once it's fixed upstream.\n\nSee https://github.com/moment/moment/issues/1423.\n",
    "head_branch": "bugfix/chrome-v32",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 080c7313d4e328c49fd1e370f33b36a56f0c5f80 into a80ee78a14ccb922d6122e8e4d38cbfd759c2cd5"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa48f8dfb6b84f2428035",
    "number": 1426,
    "body": "And renamed 'vteřina' to 'sekunda', because 'vteřina' is not time unit, but unit of arc.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4908dfb6b84f2428036",
    "number": 1424,
    "body": "In the Lithuanian localization the weekday names logic is different for the full day names and the shortened day names due to declination. This is ok when the Lithuanian weekdays numbering is used (week starts on Monday). However, when a calendar is used where the week starts on another day, the full weekday names are shifted (the abbreviated names stay correct). \n\nThe change uses the isoWeekDay for the weekday name declination. \n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4918dfb6b84f2428037",
    "number": 1421,
    "body": "Since this is a JavaScript library, we may not always use the produced strings in HTML directly. This changes the HTML entity used for \"à\" in Welsh translations to, well, \"à\".\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4928dfb6b84f2428038",
    "number": 1419,
    "body": "This adds a second argument to setters that provides a hint to updateOffset to not change hours/minutes when crossing a tz boundary.  This is frequently desirable when modifying part of an existing moment object directly.\n\nIt further passes this argument whenever adding / subtracting days or months, fixing an issue with moment-timezone (moment/moment-timezone#28).  See the corresponding PR for moment-timezone here: moment/moment-timezone#53.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4938dfb6b84f2428039",
    "number": 1418,
    "body": "This is to fix #1401\n\nBasically:\n- Non padded tokens match greedily (`H` matches one or two)\n- Padded tokens match exactly (`HH` is two digits)\n",
    "head_branch": "bugfix/strict-parsing-non-padded-units",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 95aeb62816dd970bb323106544c96522905eb1d7 into b0a23c9b80ac14db73ce669eeab635de54b6b3e0"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4948dfb6b84f242803a",
    "number": 1417,
    "body": "This is in response to #1404\n- detect moment objects that were cloned with something like `_.extend({}, moment())` as `isMoment`-s\n- properly clone them and produce _orthodox_ moment objects\n\nPlease interested parties (@chilversc, @mattbrooks2010, @RomanDidenko) -- test on knockout, or whatever fancy libraries you happen to use if it works fine with them.\n",
    "head_branch": "bugfix/cloning-weird-moments",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4958dfb6b84f242803b",
    "number": 1413,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 4a3744d91af43e3be66b97f3229be8d66132914a into c4d9f6e3b9076be7037ff4cf77e5fbf5078105f7"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4968dfb6b84f242803c",
    "number": 1410,
    "body": "Changes will work with require and with other compiles like Google Closure. Make sure that variables are atleast defined as undefined, or errors will be thrown.\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4978dfb6b84f242803d",
    "number": 1409,
    "body": "For compiler such as the google closure compiler, use window.console instead of console, or compiler with throw errors. Tightening up js.\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4988dfb6b84f242803e",
    "number": 1408,
    "body": "For JS Compiler, such as google closure, define has to be instantiated or it will throw an error in the compiler.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4988dfb6b84f242803f",
    "number": 1398,
    "body": "In Arabic week numbering (week starts on Saturday, 1st week contains January 1st) the local week numbering formatting is correct (2013-12-28 formatted as gggg ww d becomes 2014 1 6), the parsing however is shifting the weeks by one. Parsing moment('2014 1 6', 'gggg w d') returns the January 4th 2014.\n\nFixes the issue https://github.com/moment/moment/issues/1397\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 6431328eb7ca4e86c3b5654988ddcd4a219b5c4d into f5e8accdc4d9040d76b5c86399a1ffcaf304bb19"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4998dfb6b84f2428040",
    "number": 1396,
    "body": "Added leftZeroFill to GGGG and gggg formats (similar to how YYYY and other year formats do). Expanded testing for these cases; and in the process added testing for W and fixed a typo in some existing tests.\n",
    "head_branch": "left_zero_fill_gggg",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 9329a281ccb165405975dae1425f4505b7b4ea27 into a958ef6ed26b0706d5c165fdacf836a102de5463"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa49a8dfb6b84f2428041",
    "number": 1394,
    "body": "Added test for the 71 years in current 400-year cycle that have 53 weeks in ISO standard.\n\nBased on a table taken from http://en.wikipedia.org/wiki/ISO_week_date (as downloaded on 2014-01-06) listing the 71 years in a 400-year cycle that have 53 weeks; in this case reflecting the 2000 based cycle.\n\nTesting whether Dec 31 of these known years have an `isoWeek()` that equals 53.\n",
    "head_branch": "add_iso_53_weeks_test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 031b3c9663f6a0cbccdb3fbd643d960b4d3290fa into a9e69f335438e46a5da76e2778639a9f408e756f"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa49b8dfb6b84f2428042",
    "number": 1392,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa49c8dfb6b84f2428043",
    "number": 1391,
    "body": "PRs now pass travis build, because they don't execute sauce tests\n",
    "head_branch": "tests/fix-prs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa49d8dfb6b84f2428044",
    "number": 1389,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa49e8dfb6b84f2428045",
    "number": 1384,
    "body": "This patch improves performance of `leftZeroFill` by avoiding lots of unnecessary string concatenations. http://jsperf.com/zero-filling-full\n\nImprovements in Node.JS:\n- 10% faster when no zero filling is needed\n- Same speed when 1 zero fill is needed\n- 3x faster when 5 zero fills are needed\n- ~2x faster when 2 zero fills are needed\n\n<hr>\n\nI also changed the comment because the jsperf linked was incorrect - it doesn't use the code from the library and doesn't even use a zero fill argument. It also uses randomization which gives random results - the run to get least needed zero filling would win regardless of the actual performance of the implementation.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa49f8dfb6b84f2428046",
    "number": 1375,
    "body": "use module.hasOwnProperty(exports) instead module.exports so it works with CJS to AMD converter\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4a08dfb6b84f2428047",
    "number": 1374,
    "body": "This is a continuation of #1301\n\n@alexstrat any comments? I already used this setup to test the latest release, so in terms of usability -- it works (haven't tested the travis build hooks though).\n\nA few tests fail right now (IE8 and Safari), these are being worked on, so ignore them :)\n",
    "head_branch": "testing/sauce-labs-integration",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4a18dfb6b84f2428048",
    "number": 1373,
    "body": "Months and days of the week should be in lowercase (see references and justification below).\nChanged both source and test code.\n- Catalan Wikipedia: \n  - http://ca.wikipedia.org/wiki/Mes\n  - http://ca.wikipedia.org/wiki/Setmana\n- Style Book, Pompeu Fabra University, Barcelona: http://www.upf.edu/leupf/07esc/65_3.htm\n- Guidelines, Barcelona University: http://www.ub.edu/slc/ffll/fitxes/Fitxa26.html\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4a28dfb6b84f2428049",
    "number": 1371,
    "body": "`isSame` uses `startOf` and then compares milliseconds, but this misses the case of\ndifferent zones across the moments. `startOf('day')` in one timezone is different\nthan the other, so it was never successful.\n",
    "head_branch": "bugfix/is-same-different-zones",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4a38dfb6b84f242804a",
    "number": 1370,
    "body": "In calendar we need the start of today, in either local time or utc (zone) time. We can not assume that local time is the same as utc (current zone), because that changes with DST.\n",
    "head_branch": "bugfix/proper-diff-timezone-correction",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4a48dfb6b84f242804b",
    "number": 1368,
    "body": "",
    "head_branch": "feature/angularize",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4a58dfb6b84f242804c",
    "number": 1364,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 701b1193fcdca9a1e7f86ab62b5c372b6d3c3a5e into fbc26d66e1b8f3262d68794177ed1fdb6f0d32eb"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4a68dfb6b84f242804d",
    "number": 1362,
    "body": "I found that almost of language datas can't support parse meridiem correctly now.\nI made a fix and test case for Korean language data.\n\nbefore this fix:\n\n```\n// PM 2\nvalue = moment(\"오후 2시\", \"A h시\", \"ko\").format(\"hh\"); // => 02\n```\n\nwith this fix:\n\n```\n// PM 2\nvalue = moment(\"오후 2시\", \"A h시\", \"ko\").format(\"hh\"); // => 14\n```\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4a78dfb6b84f242804e",
    "number": 1358,
    "body": "This updates the iso 8601 regex slightly to allow 2 digit timezones, [as specified in ISO 8601](http://www.cl.cam.ac.uk/~mgk25/iso-time.html#zone), to allow for inputs like: `2013-10-17 14:55:23-04`.\n\nI've also taken the liberty of dropping the 'preliminary' from the comment above, since it's now been in since 1.6.0, coming up on 2 years ago.\n",
    "head_branch": "supportIsoMMTimezones",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4a88dfb6b84f242804f",
    "number": 1354,
    "body": "Adding Welsh language was issue 1215 not 1214\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4a98dfb6b84f2428050",
    "number": 1353,
    "body": "Switch checking `Object.prototype.toString` with `instanceof`.\n\nhttp://jsperf.com/tostring-vs-instance2of\n\n`instanceof` works much faster so if it's equals true second condition will be not executed.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4aa8dfb6b84f2428051",
    "number": 1351,
    "body": "Split the two tests up too, since it makes it all a little neater.\n",
    "head_branch": "fixUtcNowTest",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 6a55b4b37aa4d01df8a87a3d28b3a486da07f559 into 1b3becf269f9bca315aea4df65b782917bd4da96"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4ab8dfb6b84f2428052",
    "number": 1350,
    "body": "Apparently Date.UTC works only for years after 1900:\n\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date\n\nTo form an iso date, from any given year you should use an iso formatted\nstring. That string doesn't need 'Z' in the end ...\n\nThis is a fix for #1325\n",
    "head_branch": "bugfix/iso-week-parse-small-years",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 80680ee0992383be1b50d41a259863f2154f777b into b9c034a61e4a6603c52ba150d51cc45ea5b6216d"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4ac8dfb6b84f2428053",
    "number": 1349,
    "body": "ISO format supports negative an big years with a special, 6-digit, always signed year. Check https://github.com/moment/moment/issues/1178#issuecomment-26106354\n",
    "head_branch": "feature/iso-long-year-format",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4ad8dfb6b84f2428054",
    "number": 1348,
    "body": "Check https://github.com/moment/moment/issues/1178#issuecomment-26106354\n",
    "head_branch": "bugfix/YYYY-handle-negative",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4ae8dfb6b84f2428055",
    "number": 1347,
    "body": "This patch changes zone() and parseZone(), so that zone(tzString) now parses for timezones from the right, and parseZone() now uses _tmz data as specified by the format string, if available (and continues to fallback to zone(originalInput) if not).\n",
    "head_branch": "fixZoneParsing",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 4af458b11af764367c846660e8c13b9b3f483a6a into f5d982d012d81580a47118dc481cdc274dcb7db7"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4af8dfb6b84f2428056",
    "number": 1346,
    "body": "see the discussion in #1341\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 95ffe8b4623c43706a16374a0d553dc45cd6b122 into 23ac540ca529307eb3e1e5476d1a267966f50caa"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4b08dfb6b84f2428057",
    "number": 1343,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge c44f579c8cb92876f82f2c6c7ce3ad4c274e914e into d8df9c231f162f1a6145164f10b2230ce31fc6b4"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4b18dfb6b84f2428058",
    "number": 1342,
    "body": "Tests don't need to be published to npm. It will just take up hard drive space. Sure. 1.3M might not be that much, but it's still something.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4b28dfb6b84f2428059",
    "number": 1337,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4b38dfb6b84f242805a",
    "number": 1333,
    "body": "This makes a small adjustment for the new jspm configuration scheme being pushed out this week. This aligns the package configuration entirely with the RequireJS-style jspm loader configuration so there is a 1-1 relationship between the package.json config and the loader config.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4b38dfb6b84f242805b",
    "number": 1330,
    "body": "When working in another project I noticed three WARNs from UglifyJS2 (using \"-cm\" arguments) which originated from `moment.js` v2.4.0; each was of the format: \"WARN: Dropping unused variable _VAR_ [_path_/moment.js:_line_,_column_]\"\n\nTherefore, this Pull Request offers dropping some unused variables from the `moment.js` code in the `develop` branch. There are no new/changed unit tests, as there are no feature/bug changes requiring new test cases.\n\nI was able to perform `grunt` before and after the changes, and there has been no change in output; both report:\n\n```\nRunning \"jshint:all\" (jshint) task\n>> 164 files lint free.\n\nRunning \"nodeunit:all\" (nodeunit) task\nTesting ar-ma.js......................OK\nTesting ar.js......................OK\nTesting bg.js......................OK\nTesting br.js...............OK\nTesting bs.js......................OK\nTesting ca.js.....................OK\nTesting cs.js........................OK\nTesting cv.js......................OK\nTesting cy.js.....................OK\nTesting da.js..................OK\nTesting de.js.....................OK\nTesting el.js......................OK\nTesting en-au.js......................OK\nTesting en-ca.js......................OK\nTesting en-gb.js......................OK\nTesting en.js.....................OK\nTesting eo.js......................OK\nTesting es.js......................OK\nTesting et.js......................OK\nTesting eu.js......................OK\nTesting fa.js......................OK\nTesting fi.js......................OK\nTesting fo.js..................OK\nTesting fr-ca.js.....................OK\nTesting fr.js.....................OK\nTesting gl.js......................OK\nTesting he.js.....................OK\nTesting hi.js.......................OK\nTesting hr.js......................OK\nTesting hu.js......................OK\nTesting id.js.....................OK\nTesting is.js......................OK\nTesting it.js.....................OK\nTesting ja.js.....................OK\nTesting ka.js......................OK\nTesting ko.js......................OK\nTesting lb.js.........OK\nTesting lt.js......................OK\nTesting lv.js......................OK\nTesting ml.js.......................OK\nTesting mr.js.......................OK\nTesting ms-my.js......................OK\nTesting nb.js......................OK\nTesting ne.js.......................OK\nTesting nl.js.......................OK\nTesting nn.js......................OK\nTesting pl.js......................OK\nTesting pt-br.js.....................OK\nTesting pt.js.....................OK\nTesting ro.js......................OK\nTesting rs.js......................OK\nTesting ru.js...........................OK\nTesting sk.js........................OK\nTesting sl.js......................OK\nTesting sq.js......................OK\nTesting sv.js......................OK\nTesting ta.js......................OK\nTesting th.js.....................OK\nTesting tl-ph.js.....................OK\nTesting tr.js......................OK\nTesting tzm-la.js......................OK\nTesting tzm.js......................OK\nTesting uk.js.......................OK\nTesting uz.js......................OK\nTesting vn.js......................OK\nTesting zh-cn.js.......................OK\nTesting zh-tw.js......................OK\nTesting add_subtract.js..........OK\nTesting create.js.........................................OK\nTesting days_in_month.js..OK\nTesting diff.js.............OK\nTesting duration.js.................................OK\nTesting format.js......................OK\nTesting getters_setters.js............OK\nTesting invalid.js...OK\nTesting is_after.js........OK\nTesting is_before.js........OK\nTesting is_moment.js.OK\nTesting is_same.js........OK\nTesting is_valid.js..................OK\nTesting lang.js.....................OK\nTesting leapyear.js.OK\nTesting listers.js....OK\nTesting min_max.js..OK\nTesting mutable.js..OK\nTesting normalizeUnits.js.OK\nTesting parsing_flags.js...........OK\nTesting preparse_postformat.js...OK\nTesting quarter.js.OK\nTesting sod_eod.js................OK\nTesting string_prototype.js.OK\nTesting utc.js.....OK\nTesting week_year.js..OK\nTesting weekday.js.........OK\nTesting weeks.js...............OK\nTesting zones.js.........................OK\n>> 21835 assertions passed (3350ms)\n```\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 8d1a3b1ed53369d85600c9dfbd0f52641e043a42 into 00855b55fc0b1f72a96b6ea9d5c7581acb170593"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4b48dfb6b84f242805c",
    "number": 1329,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4b58dfb6b84f242805d",
    "number": 1324,
    "body": "Added tamil translation for moment\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 79e9278eed850f44a78bc2723026243a9d53ed47 into fdd8ab9b6851ebbeb14de49e234e15ddf20fe54f"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa4b68dfb6b84f242805e",
    "number": 1319,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4b78dfb6b84f242805f",
    "number": 1317,
    "body": "See http://en.wikipedia.org/wiki/Date_and_time_notation_in_the_Czech_Republic\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4b88dfb6b84f2428060",
    "number": 1316,
    "body": "The Italian translation for the relative time `a few seconds` is just `secondi` (`seconds`).\nIt's quite unclear: let's translate it better, with `qualche secondo` (`a few seconds`).\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4b98dfb6b84f2428061",
    "number": 1312,
    "body": "This configuration makes the module play a little more nicely with jspm - reducing the download time and ensuring the source is delivered minified with source maps.\n\nSee an example here of it being served over the CDN - http://jsbin.com/EHoyItAj/1/edit.\n\nWith the download tool, one would do `jspm install moment`.\n\nAny questions just ask. Appreciated for the time to look into this.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 75e68774584a7f04a6f8397a5c3bcf0446e8689d into af471421c0ab1598513f8a4df27b5556fe0b6c2d"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4ba8dfb6b84f2428062",
    "number": 1311,
    "body": "I added a 'q' to the format string that will output the quarter.  \nJanuary - March will output 1.  \nApril - June will output 2.  \nJuly - September will output 3.  \nOctober - December will output 4.\nI added a test in format.js called \"quarter formats\"\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4bb8dfb6b84f2428063",
    "number": 1308,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 76d5f44039e06e5ae4756b8f201f35ba71ac58e1 into 604c7942de38749e768ff8e327301ea6917c7c73"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4bc8dfb6b84f2428064",
    "number": 1307,
    "body": "Tests for PR #1291 \n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4bd8dfb6b84f2428065",
    "number": 1303,
    "body": "Fixes #1196.\n",
    "head_branch": "strict-tokens",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4be8dfb6b84f2428066",
    "number": 1302,
    "body": "This fixes #1227. That line of code has bugged me for a while, because I don't understand it. It doesn't make sense for a couple reasons. We should just leave the moments as they are and let the math work itself out. It seems to work.\n\nYou can verify the fix by changing your system clock to the day before the fall DST change (Nov 2 in the US). All the tests will pass.\n\nThere are still some test failures for the spring time change, but they're testing issues, as far as I can tell, caused by 2:00 not actually existing.\n",
    "head_branch": "fix-dst-calendar",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4bf8dfb6b84f2428067",
    "number": 1301,
    "body": "_This pull request adds cross-browser testing facilities thanks to [Karma](http://karma-runner.github.io/0.10/index.html) with access to various virtualized platforms and browsers thanks to [Open Sauce](https://saucelabs.com/opensource) plugged to current Travis CI configuration._\n- makes nodeunit test suite browser compatible with bc1ff64, 26ae977 and the file [`test/browser.js`](https://github.com/moment/moment/pull/1301/files#diff-3)\n- adds karma and karma-nodeunit adapter in dfaae74: make test run on (local-)chrome\n- adds saucelabs support in c43e0d6 and add a task to make tests run on various browsers\n- adds necessary configuration to make karma+sauce run on Travis – but needs that _you_ finish the integration.\n\nTest suite can be run on a local Chrome with `grunt test:browser`.\n\nTo run test suite on saucelabs you need to create an open-source account on https://saucelabs.com/opensource and export your username/accesskey in env variables:\n\n``` bash\nexport SAUCE_USERNAME='your-username'\nexport SAUCE_ACCESS_KEY='your-accesskey'\n```\n\nthen, run `grunt test:sauce-browser` that will run tests on various browsers: firefox on linux, ie8, ie9, safari on OSX and chrome on winxp.\n\nTo finish the integration for Travis, you need to follow this guide: https://saucelabs.com/opensource/travis and add encrypted username/accesskey to [`.travis.yml`](https://github.com/moment/moment/pull/1301/files#diff-354f30a63fb0907d4ad57269548329e3R7).\n\n**Caveats:**\n- all tests currently fail on ie8 with `TypeError: 'moment' is null or not an object`. Need to investigate why.\n- maintaining this [`test/browser.js`](https://github.com/moment/moment/pull/1301/files#diff-3) file might be cumbersome but it looked like to be the simplest way to make the nodeunit test suite compatible with browser.\n- ~~karma@>0.11 is required to make 3+ concurrent browsers work on saucelabs. However there is currently a version issue on grunt-karma (https://github.com/karma-runner/grunt-karma/issues/75) that prevents to install karma@>0.11. So I had to temporarily [get grunt-karma from its github repo](https://github.com/moment/moment/pull/1301/files#diff-b9cfc7f2cdf78a7f4b91a753d10865a2R50).~~ => 24db667\n- ~~it will be possible to get the [saucelabs badges](https://saucelabs.com/docs/status-images) once https://github.com/karma-runner/karma-sauce-launcher/pull/11 gets merged~~ => merged, but badges are a bit useless since [there is no per-branch status images](http://support.saucelabs.com/entries/24285527-Per-build-eg-per-branch-status-images)\n",
    "head_branch": "feature/cross-browser-test-ci",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4c08dfb6b84f2428068",
    "number": 1296,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 1c3567e2cf31999c12279ff07adbf996c1cceb63 into a22ed50c805a60cafded660001b5b41b6ccd9c37"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4c18dfb6b84f2428069",
    "number": 1294,
    "body": "In response to #1290\n",
    "head_branch": "bugfix/iso-format-z",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge ac041d308ae3b1fc8d5eaff1664d102110ab5181 into c9a56ebf5434c2c7b66ae88519cdcfcfeacdf296"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4c28dfb6b84f242806a",
    "number": 1293,
    "body": "Using older version of requirejs (1.0.4), module.config function doesn't exists and moment.js crashes on load.\n\nThis PR is so make momentjs be compatible with older version of requirejs\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4c38dfb6b84f242806b",
    "number": 1292,
    "body": "Current version:\nmoment.duration(112, \"years\").humanize(); // 112 lata\nmoment.duration(213, \"years\").humanize(); // 213 lata\n\nNew version:\nmoment.duration(112, \"years\").humanize(); // 112 lat\nmoment.duration(213, \"years\").humanize(); // 213 lat\n\nReal examples:\nhttps://pl.wikipedia.org/wiki/Lista_najstarszych_ludzi_w_Polsce\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4c48dfb6b84f242806c",
    "number": 1291,
    "body": "\"a few seconds\" translate to \"alcuni secondi\"\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4c58dfb6b84f242806d",
    "number": 1287,
    "body": "Language/lang should be renamed to locale, because we are not really dealing with languages here. The same language can be used in different countries, but still have different requirements for date formatting depending on the location.\n\nThis is exactly what locales are for - they are a combination of language and location. The current language system actually already uses locales, but they are called languages, which is wrong and may cause confusion.\n\nOf course, this would cause some backwards-incompatibility, so perhaps it makes sense to alias `locale` function to `lang` for some time.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4c68dfb6b84f242806e",
    "number": 1286,
    "body": "Language/lang should be renamed to locale, because we are not really dealing with languages here. The same language can be used in different countries, but still have different requirements for date formatting depending on the location.\n\nThis is exactly what locales are for - they are a combination of language and location. The current language system actually already uses locales, but they are called languages, which is wrong and may cause confusion.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4c78dfb6b84f242806f",
    "number": 1283,
    "body": "fix wiki syntax error\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 5db0e68b3b0a22291847fd9f55dca05a5bf2eb37 into 0a75a01edb53694683ca324531e5965705c73531"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4c88dfb6b84f2428070",
    "number": 1282,
    "body": "This PR improves the estonian locale. I have also added a few new tests to make sure `from` && `fromNow` work as expected.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4c98dfb6b84f2428071",
    "number": 1280,
    "body": "When used with the Dojo loader - `module.config()` is not required to return an empty object when no config properties are present - causing the define block to throw an error.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 023478dc525b258a0ac30e9608a9de2f4cb27804 into ff32605e9324c2ad8f250453772a10d6dec8ca2c"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4ca8dfb6b84f2428072",
    "number": 1278,
    "body": "This is in response to #1270\n\nIs this a proper fix, or I'm getting it wrong?\n",
    "head_branch": "bugfix/timezone-display",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4cb8dfb6b84f2428073",
    "number": 1277,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4cc8dfb6b84f2428074",
    "number": 1273,
    "body": "Added plurar version for seconds.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4cc8dfb6b84f2428075",
    "number": 1271,
    "body": "Patch for #1073.\n",
    "head_branch": "feature/timers",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4cd8dfb6b84f2428076",
    "number": 1268,
    "body": "In brazilian portuguese, when you write a date, it's normal to have \"às\" before the hour.\n\nThe method calendar() already returns the correct format, for example (as showed on docs): \"Amanhã às 11:53\".\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4ce8dfb6b84f2428077",
    "number": 1267,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4cf8dfb6b84f2428078",
    "number": 1265,
    "body": "Don't assume this is bound to the global scope in local functions.\n\nRelated to #1179\n\n@Xotic750 you mentioned something about returns on every code-path. I didn't find such an option in jshint. Can you double check and maybe propose other jshint options we should enforce to make moment strict mode compatible?\n",
    "head_branch": "feature/moment-strict-mode-compat",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4d08dfb6b84f2428079",
    "number": 1264,
    "body": "Fixes #1239\n",
    "head_branch": "bugfix/deprecated-export-static-methods",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4d18dfb6b84f242807a",
    "number": 1255,
    "body": "'Separator' has been spelled as 'seperator' in two comments.\n\nI know it's an extremely small, quasi-irrelevant issue, but typos freak me out; it's stronger than me so I've fixed it.\n",
    "head_branch": "separator-comment-typo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4d28dfb6b84f242807b",
    "number": 1247,
    "body": "Ready to merge\n",
    "head_branch": "lang_lb",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4d38dfb6b84f242807c",
    "number": 1246,
    "body": "Previous discussion here: https://github.com/moment/moment/issues/1235\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 9c3834b419bd678c3db25d9d964f76924be2f59c into 8b2b26fe525fb674e425fcd85e6aaa946077827c"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4d48dfb6b84f242807d",
    "number": 1243,
    "body": "Storing the _input for creating a duration doesn't work for cloning when the\noriginal duration is modified, because input no longer corresponds to the new\nduration. Instead use the ms, days and month values which uniquely identify\na duration.\n\nThis also happens to fix #1242\n",
    "head_branch": "bugfix/support-moment-add-duration",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 925762da0475af3fbf475cf3c3705afdff3e5f40 into ca3c88987ee977df1299ea2fd9b492d3b5aa053d"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4d58dfb6b84f242807e",
    "number": 1240,
    "body": "There were two small problems with the Albanian translation:\n\n\"disa seconda\" => \"disa sekonda\"\n&\n\"%d minutea\" => \"%d minuta\"\n\n:)\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4d68dfb6b84f242807f",
    "number": 1238,
    "body": "When using moment.js in QUnit tests, hasModule resolves true and triggers makeGlobal deprecation warning. This pull request ensures that the hasModule check on line 30 only resolves as truthy when using an actual module pattern with a require fn.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4d78dfb6b84f2428080",
    "number": 1224,
    "body": "Fixes #1223\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4d88dfb6b84f2428081",
    "number": 1220,
    "body": "This is discussed in #1214. If moment is exported as a global in AMD or\nCommonJS print a warning once the global is used.\n",
    "head_branch": "deprecate-global",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 3e51eff8e13047218aff58f558b22c037c1231b7 into 431c3d3d0d3fe5cf1a1c17eeff4cc8c51528e00e"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4d98dfb6b84f2428082",
    "number": 1219,
    "body": "ie8 doesn't support `[].forEach`, so replace it with a regular for loop.\n",
    "head_branch": "bugfix/ie8-fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge bfafa56da85114afe7528d197be8e6143f2c4928 into 9da828defd5398c9011b68cbaace17fbe940b08a"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4da8dfb6b84f2428083",
    "number": 1218,
    "body": "Made changes to detect the global context of the environment #1179\nMade changes to run in strict mode #1179\nMade changes and added a config file to allow option not to pollute Node environment #1214\nStandardise double quotes (\") to single quotes (') which were most extensive in library\nReverse strict comparisons of typeof statements to prevent accidental assignments\nStandardised undefined checks to use typeof strict comparisons\n",
    "head_branch": "globalcontextStrict",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4db8dfb6b84f2428084",
    "number": 1217,
    "body": "`moment(input)` needs to determine if `input` is a date.  The mechanism for \ndoing this was changed in ab7824f1dcca22bdb8b73f7f98cf660305a73211 to deal\nwith issue #1084, namely that in a node REPL `globals.Date` may not be the\nsame\n`Date` used by moment.\n\nHowever, this prevents users from changing `Date`, for example by mocking it\nvia something like [Timecop.js](https://github.com/jamesarosen/Timecop.js).\n\nThis commit makes date checking lenient enough to handle both cases.\n",
    "head_branch": "bugfix-tolerate-mock-dates",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4dc8dfb6b84f2428085",
    "number": 1215,
    "body": "Please can you add the Welsh translations?\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4dd8dfb6b84f2428086",
    "number": 1213,
    "body": "According to the standard (I'm not sure actually), arbitrary number of\nsubsecond precision digits can be specified. Read all of those and ignore\neverything after the third. This makes sure that iso formats actualy consume\nthe whole string.\n",
    "head_branch": "bugfix/allow-arbitrary-ms-iso-format",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 45d57acb039bf186a5be240cb96b684ca36da6a9 into 4ffd0a964f45c6eae8b92e184823ac977293c8d2"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4de8dfb6b84f2428087",
    "number": 1212,
    "body": "In iso date-time format time is always separated by date with 'T', so make sure\nall tests that expect to go through the iso parser have a 'T'.\n",
    "head_branch": "bugfix/iso-is-valid-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4df8dfb6b84f2428088",
    "number": 1206,
    "body": "",
    "head_branch": "momentjs-faroese",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4e08dfb6b84f2428089",
    "number": 1201,
    "body": "This is a fix proposition for #1190\n\nIt introduces an `upperCaseFirstLetter` boolean option to `#calendar`:\n\n``` js\nmoment().calendar(true); // -> 'Today at 10:47 PM'\nmoment().calendar(false); // -> 'today at 10:47 PM'\n```\n\nThis feature is tested and all `test/moment/*` pass.\n\nThis option is `true` by default for reverse-compatibility (`test/lang/en.js` passes without any modification):\n\n``` js\nmoment().calendar(); // -> 'Today at 10:47 PM'\n```\n\n**However** this fixes capitalization inconsistencies observed in languages where the first letter of day names is not upper-case. For instance in french:\n\n``` js\n// now\nmoment().add(\"day\", 4).calendar(); // \"dimanche à 9:00\" expected \"Dimanche à 9:00\"\nmoment().add(\"day\", 1).calendar(); // \"Demain à 9:00\"\n\n// with this fix\nmoment().add(\"day\", 4).calendar(); // \"Dimanche à 9:00\"\nmoment().add(\"day\", 1).calendar(); // \"Demain à 9:00\"\nmoment().add(\"day\", 4).calendar(false); // \"dimanche à 9:00\"\nmoment().add(\"day\", 1).calendar(false); // \"demain à 9:00\"\n```\n\nSee `test/lang/fr.js`\n### TODO\n- adapt for other languages than french (and english)\n",
    "head_branch": "hotfix/2.3.1/fix-gh1190/capitalization-of-calendar",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4e18dfb6b84f242808a",
    "number": 1197,
    "body": "Added tagalog support\n",
    "head_branch": "cldr",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4e28dfb6b84f242808b",
    "number": 1195,
    "body": "If I want to wrap day or month in html-tags\n\n```\n<b>DD</b> <i>MMMM</i>\n```\n\nold regular expressions don't work.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge b834f94451ea2c42cd7bfbca7d085e4d04192b1a into 96a432190c042c6dee602d962b37f06b59046ec7"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4e38dfb6b84f242808c",
    "number": 1188,
    "body": "Fix some mistakes in test/lang/zh-cn.js.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 5381e2f0b51b89c5edd4ceedb33d4de063f32448 into 1cdeda04167d61067bc3d795aa2e02bb54c0913a"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4e48dfb6b84f242808d",
    "number": 1187,
    "body": "See #1175. Our ISO parser wasn't really handling the \"Z\" case because it wasn't in the regex, which now has a `$` at the end.\n",
    "head_branch": "fix-trailing-z",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge d7c134a6e290b7393c05836a28438f656f802362 into 6b2784c658945c83bbbc86efe0af829ea4e2c335"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4e58dfb6b84f242808e",
    "number": 1185,
    "body": "This time there is am added at the end, which was never parsed as part of iso\nformat, so if it was pm it would result in a wrong parse.\n\nDeleting this test. Docs don't say this is possible, right :)\n",
    "head_branch": "bugfix/do-not-handle-ampm-end-of-iso",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge d4666fe62cb5b483a69cb7647c1d6a3ed161bf2d into 5b30f66e24bbb578ba0f065a05cb2577dc5ff0fd"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4e58dfb6b84f242808f",
    "number": 1183,
    "body": "One of the things that is broken on Android is \"including a trailing UTC in the\ninput should work\", which is a test added a long time ago, that used the fact\nthat ISO format matched beginning of string.\n\nSo right now this test goes through Date, which is different on regular vs\nmobile browser. Also adding UTC at the end doesn't make it parse a UTC date, so\nits misleading to say the least.\n\nI think removing the test makes the most sense in this case. The behavior (of\nadding UTC at the end is not documented, so shouldn't break legitimate code).\n",
    "head_branch": "bugfix/utc-at-end-of-iso-format",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 81255466c2f5b646b27e4b5b7a2898b325a06a85 into 479b650557d8a5ce2ac64ccfec0df5bd2f5e098b"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4e68dfb6b84f2428090",
    "number": 1177,
    "body": "We added tests to verify that languages actually exported the language they contain, but the way the test is written, it only works correctly in Node, since AMD passes the result through a callback, not as the return value to require. So our tests were failing in the browser.\n\nI just made the test not run in the browser, and then verified it using a local instance of momentjs.com.\n",
    "head_branch": "language-test-module-check",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 155920d20225d8a5d9aeab04b380fa1b99f0747e into 6a31f2d9b7e13d1d67867edcf0d74411e58e97e1"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4e78dfb6b84f2428091",
    "number": 1172,
    "body": "The component.json file is not listing \"moment.js\" under scripts, and the module is therefore not usable with require\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 35fc5923e0382e838fdd91bb5a2cf83e2a42fe14 into bbf9412f549321fc72bb3c37bde7138a096f89f8"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4e88dfb6b84f2428092",
    "number": 1171,
    "body": "Noticed a bug in `months()` and company: it doesn't work as expected when you ask for month 0.\n",
    "head_branch": "month-zero",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 9600b5fbab4c1e651c83e1d7f61a74ac51d9ec47 into 82a180d4cc439545b269920a6827ff3cc156b4b8"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4e98dfb6b84f2428093",
    "number": 1169,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge b9c786e8768509005d91497e09bdb6d1c8d88b01 into 40801bbc9efd15ce27728a7d4edffcf21d5ee0ac"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4ea8dfb6b84f2428094",
    "number": 1164,
    "body": "Fixes #1143, adds some other other bulletproofing.\n",
    "head_branch": "feature/simpler-scoring",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 01e608330b0b18142cf07f6fd78cbdf3f1e62941 into 7693a7c666a9e56bf345df4c819bc3c954e47540"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4eb8dfb6b84f2428095",
    "number": 1159,
    "body": "[latest develop/moment.js](https://github.com/moment/moment/blob/6a5f960/moment.js) was failing to load in context of Prototype.js (which pollutes Array.prototype -- causing a recently-added enumeration grief).  moment.js 2.2.1 appears to work fine though.\n\nhere's an example http://jsfiddle.net/wzp4Z/4/ (see debug console -- fails during initialization)\n\nthis pull request wraps in a conventional hasOwnProperty guard, but i wonder if switching to <code>for (i=0; i < lists.length; i++)</code> would actually make more sense here (since lists appears to be an Array).\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 65e1d8709b9bf91036a732dee39eaccb6305fbb6 into 51fef0e303608dd758e5c0262d5ead3a471f9e5c"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4ec8dfb6b84f2428096",
    "number": 1158,
    "body": "Fixes #1151.\n",
    "head_branch": "fix-format-newlines",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 9525c3cd8696d2346259bb873765f85d86788eee into 2ccdbc0a605bb2ef807a3df2b9252accea238281"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4ed8dfb6b84f2428097",
    "number": 1157,
    "body": "As requested by #1148\n",
    "head_branch": "bugfix/bg-lt",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge e73007f401ac22f991605f75dc7187903d2cf191 into 6a5f96021641e4365319facac2f0631710f6c54b"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4ee8dfb6b84f2428098",
    "number": 1155,
    "body": "This commit replaced instances of Moment to Number type coercion in comparisons\n(e.g. equivelent to \"+moment()\") and when returning the unix time what\nis equivelent to \"+moment().utc()._d\".\n\nThis commit passes all unit tests and works well in IE8.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4ef8dfb6b84f2428099",
    "number": 1149,
    "body": "",
    "head_branch": "fixup-bosnian",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge d8a04e3c6e9b15bc1eab2c2ddd4b65c7e8b94b8f into be5de6530548ae52090aa6b5e45cdf370470be06"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4f08dfb6b84f242809a",
    "number": 1147,
    "body": "This is a fix for #1146\n\nIt adds a return to all language files, so they can be required either using AMD or node.\n",
    "head_branch": "feature/exportLang",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 0e7ba76716974543b6dd097730d60e0229294b07 into c40912d1cafda3961c97885aaa1b5191b04ea529"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4f18dfb6b84f242809b",
    "number": 1144,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 2f226115cb0912bb6fae10f3bcf6334c4eea67bb into f1af5e34bdc78878fc84802185f0b63a57e1cee6"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa4f28dfb6b84f242809c",
    "number": 1142,
    "body": "Fix for #1108 and #1109. Here are the changes:\n- `moment.lang()` and `moment().lang()` now accept an array of language strings, with the idea that we'll use the first one that works\n- We now use language substrings. If  the user specifies 'es-MX', we'll use 'es' if we don't have the MX one.\n- The precedence between array items and substrings is that we'll try substrings of the same array item until we discover that the next item has something mores specific with the same root. E.g., we'll try `['es-MX', 'es-GU', 'fr-CA']` in this order: 'es-MX', 'es-GU', 'fr-CA', 'fr'. I think that's probably the most intuitive setup, because it allows you to describe specific alternatives without breaking general ones, and it seems unlikely you'd prefer a completely different language to a less localized version of the one you do want.\n- `moment.lang()` returns the language it actually decided to use\n",
    "head_branch": "feature/language-chooser",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge d9840730e70dc147d275eb43c76003e1b04e77fc into 0b1a46b844d28b23a2b474d20c63e420afbba4e5"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa4f38dfb6b84f242809d",
    "number": 1141,
    "body": "This PR does two things:\n1. Adds support for `get()` and `set()` for a bunch more properties\n2. Adds parsing support for 'gg', 'GG', 'w', 'W', 'e', 'E',  and 'd'. See #850 and #689\n\nThere's a bit of undefined behavior here, like what happens when you have contradictory strings, per @timrwood's comment [here](https://github.com/moment/moment/issues/850#issuecomment-19649965). I think that's probably OK.\n",
    "head_branch": "feature/parse-weeks",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 6f24c1e7683f982d20928d5fe43e3d89097739cd into a7601a93e5623d6303c8ada82366948e978aaaea"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa4f48dfb6b84f242809e",
    "number": 1140,
    "body": "Apologies for the number of commits here; it was hard to squash them because I merged in `develop` instead of rebasing (which I had to do because part of the branch was already merged. Here's a summary of the changes:\n# Parsing flags\n\nWe generate a set of parsing flags when parsing with a format. They are:\n\n``` js\n{\n  empty: false,                             //did we find anything to parse at all\n  unusedTokens: ['MM', 'DD'],    //tokens we didn't use in the parse\n  unusedInput: ['stuff', 'stuff'],     //other input not parsed\n  charsLeftOver: 15,                   //formally ._il, the total number of unused input characters. Sum of the strlens for unusedInput\n  overflowMonthOk: false,          //whether or not we consider an overflowed date OK, as in \"DDD\" parsing\n  overflow: 3,                              //array index of where overflow occurred (i.e. invalidAt())\n  nullInput: false,                         //was the input null?\n  invalidMonth: false,                  //month name that didn't exist, moment('splurk', 'MMMM')\n  userInvalidated: false               //user used moment.invalid() without specifying why\n}\n```\n\nAccess with `moment().parsingFlags()`. Note that the flags do **not** include `dstInvalid`.\n# Redefined isValid\n\n`isValid()` is now a function of three things:\n- Is `date.valueOf()` just `NaN`?\n- What parsing flags are set?\n- Are we parsing as strict?\n\nWhich parsing flags matter is determined by `strict`. This makes it a lot easier to understand and diagnose validity. There are some behavioral changes. In general, `isValid()` is more lenient. Some examples:\n\n`moment('xx-xx-2001', 'DD-MM-YY')` was invalid and now isn't. That's because it parses as Jan 20. I think this is correct. Use strict if you don't want that.\n\n`moment('123456790.12', 'X.SS') was invalid and now isn't.\n\nOpen questions:\n- `isValid()` completely ignores whether the date parsed corresponds to a time that doesn't exist because of DST. This is a significant change breaking change. Should it check that?\n# Improved format scoring\n\nAs of #1094, we do a much better job of picking a parsing format out of a list by checking how many unparsed characters there are. We can use the parsing flags to improve that:\n1. Prefer valid moments to all invalid moments, as measured by `isValid()`\n2. Prefer formats with fewer unused tokens\n3. Prefer formats that result in fewer unparsed input characters\n# Reworked strict parsing\n\nStrict parsing doesn't need its own separate function to check things. We just have `strict` behave differently in these ways:\n1. Prepend `^` to the token regexes. This works because we `slice()` the string progressively\n2. Place non-format characters in the `unsedTokens` parsing flag\n3. Make `isValid()` consider additional parsing flags\n\n~~Open stuff:~~\n-  ~~I need additional tests for that third item.~~ This is covered by the create() tests\n# isDSTShifted\n\nWe want to know if you asked for 1:30 AM on March 3 (assuming you're in the US). `isDSTShifted()` answers that. There are a few questions/issues there:\n- I'm not sure how to write tests for it that work across time zones. We could have it skip the test if you're not in a US timezone with DST. Anyway, **there are currently no tests for this**.\n- is `isDSTShifted` the right term for this? `isDSTInvalid()`? `isUnexpectedTime`? Don't know what to call it.\n- Does it work reliably? It works by assuming that if the date is valid && the `overflowMonthOk` flag is off, that the only reason for `_a != moment(_a).toArray()` is that DST messed with the date. I'm not 100% sure that's true.\n# format() for invalid moments\n\n`format()` always returns \"Invalid date\" for `!m.isValid()`. The string can be localized.\n\nOpen issues:\n- Is this what we want to do?\n- ~~Could use more tests in general~~ done\n-  ~~Need to test localization~~ done\n# Little stuff\n\n`moment.invalid()` now takes an optional object of parsing flags. So if you're making a third-party plugin, you can generate moments with the appropriate flags, even made-up ones. If you don't specify flags, it sets the `userInvalidated` flag for you.\n# Other internal changes\n\n``` js\n        YEAR = 0,\n        MONTH = 1,\n        DATE = 2,\n        HOUR = 3,\n        MINUTE = 4,\n        SECOND = 5,\n        MILLISECOND = 6,\n```\n",
    "head_branch": "feature/invalid-moments",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 8f08ba1f1ef61ceb9bfc3a4bb2c966706ba6d8de into 0b1a46b844d28b23a2b474d20c63e420afbba4e5"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa4f58dfb6b84f242809f",
    "number": 1139,
    "body": "Implementation of #1111\n\nThis is another breaking change. All users who do `toString` to display a moment to the user will be affected. Of course a better one would be  `.format('LLLL')` or something, but still it would be kind of breaking. Maybe we can instruct users to change toString() if they don't want to patch their code ;)\n",
    "head_branch": "feature/unlocalize-to-string",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge ce98f8197f464510f1109d8582a973532067d44e into bac5bb8b584c5b1e082ef221c0478ca4b245901d"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4f68dfb6b84f24280a0",
    "number": 1138,
    "body": "IIS has issues with files containing +. fixes #1118\n\nThe only thing that worries me is backwards compatibility. Should we also copy the new files to the old locations?\n",
    "head_branch": "bugfix/iis-compatible-filenames",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 8d476597787e2f3f773fa2d8744221c49254cbbf into 2d39f9ccb41a1901e7a2005f4a7cb489bd84d0de"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa4f78dfb6b84f24280a1",
    "number": 1137,
    "body": "I'm getting the hang of this... i think\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 0eaa20eb5bc29f23d36576754e0c52ded2079905 into 20a34b65f7f7ac3b15bad2fcfdb8f921aaf2a5a1"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4f88dfb6b84f24280a2",
    "number": 1136,
    "body": "Third attempt\n",
    "head_branch": "patch-5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4f98dfb6b84f24280a3",
    "number": 1135,
    "body": "My second attempt\n",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4fa8dfb6b84f24280a4",
    "number": 1134,
    "body": "My second attempt\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4fb8dfb6b84f24280a5",
    "number": 1130,
    "body": "Updated the test, please check it or tell me how to check it.\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4fc8dfb6b84f24280a6",
    "number": 1129,
    "body": "Added support for uzbek language\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge f8d69b936b283c04d3ab733edba0c34dce18ffc2 into 0a607adb8471dca8f2c660db7e871de3e3b55884"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa4fd8dfb6b84f24280a7",
    "number": 1126,
    "body": "Same as en-gb, just AM/PM instead of 24h for time formatting.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4fd8dfb6b84f24280a8",
    "number": 1123,
    "body": "#1007 created a new bug when passing empty strings or `null` into `moment.utc()`:\n\n``` javascript\nmoment('')      //=> null\nmoment.utc('')  //=> TypeError: Cannot call method 'utc' of null\n```\n\nThe quick fix is to see if `makeMoment()` returns `null` before trying to call `.utc()` on it.\n",
    "head_branch": "umd-bug-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 113b676ebb6bb80f26dd4c683fa2004f7d8ce8c0 into d35b902c28f639cce59257d788fcf64b789a0973"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4fe8dfb6b84f24280a9",
    "number": 1121,
    "body": "Convert lang/lt.js and lang/vn.js to UMD\n\nTried to do make myself a customlangs release, fixed this on the way.\n",
    "head_branch": "feature/convert_lt_and_vn_to_umd",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 1956cba0bd13f7d51f8936cc54b0425af3af6d99 into 065c40f866b218eb6022c8f78c7ac02254f88a8d"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa4ff8dfb6b84f24280aa",
    "number": 1116,
    "body": "Created a new function (normalizeObjectUnits), this is now also used by dateFromObject\n\nFixed spacing or jshint\n\nFixed missing argument\n",
    "head_branch": "DurationNormalization",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge c9cd0521dabe1fe379ec75f3a9467a4ed21c0264 into b10a233e5b1fc38373dea07cf64498cd6e20ce6f"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5008dfb6b84f24280ab",
    "number": 1115,
    "body": "https://github.com/moment/moment/issues/1114\n",
    "head_branch": "extendDontEnum",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 27caae1f52cf4f0c689ba124394b1712da9ad077 into c3718ba4d29e8c33e2f5ab088a2aa1838000d1d8"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5018dfb6b84f24280ac",
    "number": 1113,
    "body": "Requested by @icambron to continue #941.\n",
    "head_branch": "features/accept-iso-duration-rebased",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5028dfb6b84f24280ad",
    "number": 1111,
    "body": "Since `toString()` is mainly used for logging/debugging, I believe it should _not_ localize. Otherwise, switching languages breaks logging and makes debugging harder. For example, many applications, especially in Node are going to be parsing their logs and it's weird to have different formats.\n\nSince the docs and API are in English, I think it makes sense to use it in `toString()` too. That said, I welcome feedback to the effect of \"this will make it painful for me/others to debug, since I want that in my own language\".\n\nThis is basically the opposite of #1018\n",
    "head_branch": "feature/unlocalized-toString",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5038dfb6b84f24280ae",
    "number": 1110,
    "body": "When a moment is in UTC-mode, the `.weekday()` call is wrong because it relies on the internal date's local day-of-week. This also affects a UTC-moment's `.startOf('week')`.\n\nJSFiddle: http://jsfiddle.net/arshaw/ERPA8/\n\nThe fix is to make it rely on the moment's intelligent calculation of the current day-of-week.\n",
    "head_branch": "hotfix/2.2.1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge bb357ea06a22d896e70c264da50c9c1967123405 into 217b8b771cd9607164ebf16826514adc48ff4656"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5048dfb6b84f24280af",
    "number": 1106,
    "body": "As discussed in #887\n",
    "head_branch": "feature/parse-zone",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 2e9286705e88faf842bca4d2221cc58c4c3ce929 into 9d20aa7934e849a0581b281f3bed2d3415acda28"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa5058dfb6b84f24280b0",
    "number": 1105,
    "body": "https://github.com/moment/moment/issues/716\n",
    "head_branch": "makeMomentConsistency",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5068dfb6b84f24280b1",
    "number": 1104,
    "body": "",
    "head_branch": "clarityTildeTilde",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge a5c7cdd24402243806a21da8e473af04e3a0c502 into 77d57737cd9992a52382a86bfd81cfec502a4b85"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa5078dfb6b84f24280b2",
    "number": 1103,
    "body": "User object will now handle any acceptable capitalisation, aliasing or pluralisation.\n",
    "head_branch": "dateFromObject",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 98ad301f975a8ea8d8888262934863dd2a23aa43 into 2476f8595c44e49d8689a06fc76b6795366b575a"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5088dfb6b84f24280b3",
    "number": 1102,
    "body": "",
    "head_branch": "expandFormat",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 1d6e78cffc9bd4591096dc3752e5b8c00b59f3e6 into d450ceacf5afd22499be220e463005e339736c92"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5098dfb6b84f24280b4",
    "number": 1101,
    "body": "",
    "head_branch": "expandFormat",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa50a8dfb6b84f24280b5",
    "number": 1099,
    "body": "component.json has a list of all project files. Add a grunt task that would update the contents of component.json so that all lang files are included.\n",
    "head_branch": "feature/add-component-json-grunt-task",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge e5784d35a3a4d27f1e51080f72208f8897294d31 into b3e05bfc4a09aff59cc0ff86da126e9eb5504af2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa50b8dfb6b84f24280b6",
    "number": 1098,
    "body": "Added a way to create invalid moments, which is useful in general, and then used it to fix #716.\n\nI punted on the question of what we should do with invalid moments.\n",
    "head_branch": "feature/invalid-moments",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa50c8dfb6b84f24280b7",
    "number": 1097,
    "body": "Allows for:\n\n``` js\nmoment.months();\nmoment.shortMonths();\nmoment.weekdays();\nmoment.weekdaysShort();\nmoment.weekdaysMin();\n```\n\nAnd they work for languages for where the monthsShort string is a decided by a function:\n\n``` js\nmoment.monthsShort(\"-MMM-\");\n```\n\nFixes, for example, #1053.\n",
    "head_branch": "feature/list-months",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 74fae151237e78f13a4881231d7f7d04a56d4b3c into 76c56962ebc679d08b0bfbff48d18977d3e11927"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa50d8dfb6b84f24280b8",
    "number": 1096,
    "body": "User object will now handle any acceptable capitalisation, aliasing or pluralisation.\n",
    "head_branch": "hotfix/dateFromObject",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa50d8dfb6b84f24280b9",
    "number": 1094,
    "body": "Commit 1:\nWhen moment parses string with a few formats, only last part of unparsed string has influence on format penalty. For example, for string '11-02-10', formats 'MM DD YY' and 'DD-MM-YY' have same penalty, and it's 0. But as you can see, they have different separators ' ' and '-', that should have influence on penalty.\nNow moment can distinguish those separators, and our formats ('MM DD YY' and 'DD-MM-YY') will have penalty 2 and 0 respectively.\n\nCommit 2:\nIn gettings regex for token, special RegExp chars, such as point, slash, etc, should be escaped to prevent positive matching with other separators. For example, for string '11-02-10', format 'MM.DD.YY' has 0 penalty, because RegExp('.') positive mathes with '-'. \nNow moment escapes the chars and our format will have penalty 2.\n",
    "head_branch": "more_precise_parsing",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 3c419240925fe045ae0adb1debd6417fec843aae into 05295e00ba5eaa9fafafd3d87998dfd46b9b7b3b"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa50e8dfb6b84f24280ba",
    "number": 1093,
    "body": "",
    "head_branch": "feature/nl-decapitalization",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 4ccda33b0ed4acbc0102e3cfe7287e130676a651 into 043c18153f52639ff79e48c122bf0d1b16d2531f"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa50f8dfb6b84f24280bb",
    "number": 1092,
    "body": "Fix for #1083. To try fixing this without breaking anything, I experimented with trying `new Date(str)` first and only trying the ISO regex if that didn't work, That had strange results, namely that `new Date('1983-10-14')` gets interpreted as UTC, so you end up with \"Thu Oct 13 1983 20:00:00 GMT-0400 (EDT)\".\n\nSo I stuck with my original idea of forcing ISO strings to end the string. This will of course break code that has a valid ISO-8601 string followed by a bunch of unparsable stuff. I think that's acceptable, since you don't normally expect ISO-compliant strings to also contain gibberish.\n",
    "head_branch": "feature/fix-unpadded-datetimes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 1f8a51120d0944ff1b4fb62c024dcf086b6da4ad into eecd741b67e2d3b45c778d7d8c37252ff2dac226"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5108dfb6b84f24280bc",
    "number": 1091,
    "body": "This is a fix for #1084 \n",
    "head_branch": "feature/fix-node-repl",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge ab7824f1dcca22bdb8b73f7f98cf660305a73211 into 7054bae57c50c52fbb2b8cdab0ff33b2d59c74c8"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5118dfb6b84f24280bd",
    "number": 1090,
    "body": "Change all occurrences of ~~ to a named function floorTowardsZero\n",
    "head_branch": "feature/floorTowardsZero",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5128dfb6b84f24280be",
    "number": 1089,
    "body": "...uting the global space.\n\nOption has to be set by the user otherwise everything loads as previously.\n\nLoader would now look like this to choose noGlobal\n\n```\n(function (global, undef) {\n    \"use strict\";\n\n    var projectString = \"myProject\",\n        momentCDN,// = \"//cdnjs.cloudflare.com/ajax/libs/moment.js/2.1.0/moment.min\",\n        momentString = \"moment\";\n\n    (function (name, definition) {\n        if (global.module !== undef && global.module.exports) {\n            global.module.exports = definition(global.require(momentCDN));\n        } else if (typeof global.define === \"function\" && global.define.amd) {\n            var projectPaths = {},\n                projectConfig = {};\n\n            projectPaths[momentString] = momentCDN;\n            projectConfig[momentString] = {};\n            projectConfig[momentString].noGlobal = true;\n            global.require.config({\n                paths: projectPaths,\n                config: projectConfig\n            });\n\n            global.define(name, [momentString], definition);\n        } else {\n            global[name] = definition(global.moment);\n        }\n    }(projectString, function (moment) {\n        moment.fn.newFunction = function () {\n            // code\n        };\n\n        function MyFunction() {\n            // code\n        }\n\n        return {\n            \"MyFunction\": MyFunction,\n                \"momentPrivate\": moment\n        };\n    }));\n}(this));\n\nrequirejs([\"myProject\"], function (myProject) {\n    \"use strict\";\n\n    console.log(\"Private\", myProject.momentPrivate);\n    console.log(\"Global\", window[\"moment\"]);\n});\n```\n",
    "head_branch": "feature/noGlobal",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 6150e1d421d7077173a3e3c6479e6c58945b7ebc into 6f547158fc92df9a047775553fac1f0baed703fb"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5138dfb6b84f24280bf",
    "number": 1087,
    "body": "",
    "head_branch": "feature/normaliseUnits",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 956608a8e683d2c192eccc485e058d96027597ee into 4a2dd10e71126b5015c972c2bf1d632fd4e4024b"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa5148dfb6b84f24280c0",
    "number": 1086,
    "body": "https://github.com/moment/moment/issues/1075\n",
    "head_branch": "hotfix/unix-timestamp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 47dab76b58c01227de72bf99c1df3062d21e550a into e69c63ec1b7c9afae7440030258deb4efb0b446b"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5158dfb6b84f24280c1",
    "number": 1085,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5168dfb6b84f24280c2",
    "number": 1082,
    "body": "After further investigation of the corresponding materials I found that in Russian and Ukrainian short weekdays are identical to minimal weekdays. Corrected the translation and tests accordingly.\n",
    "head_branch": "feature/rus-ukr-short-weekdays",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge d60b9104cd4eecdbd7b7aaa7a0bba9740dd76987 into 8de8f3ad548a3d6e207e96c053ffa2ff6944291c"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5178dfb6b84f24280c3",
    "number": 1080,
    "body": "First commit fixes #1071.  Second fails the build if a language file isn't defined as AMD (now that lang/hr.js is valid).  Third, I figure we should be ignoring the custom language files.\n",
    "head_branch": "fix-1071",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge a7bbfc15bb9b46365dcbfb628635a8522e17d826 into 99e7f9490774cb92ddbd506320de77665181ee98"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5188dfb6b84f24280c4",
    "number": 1076,
    "body": "update lang/zh-cn.js, which is more corresponding to the Chinese expression.\n更新 lang/zh-cn.js 使之更符合中文表达习惯\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge ea2ab37e19f469af3de990cce979f16fc37c318a into 043c18153f52639ff79e48c122bf0d1b16d2531f"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5198dfb6b84f24280c5",
    "number": 1074,
    "body": "... tests\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa51a8dfb6b84f24280c6",
    "number": 1072,
    "body": "Tests written accordingly. this is actually used extremely seldom here, but I think Moment.js should provide all possible functionality.\n",
    "head_branch": "feature/rus-ukr-am-pm",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge ead36dd69cd26806108b29bcfaccaea41c9add15 into 14d96e14987840f56e33fc9b6e4887370b15c729"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa51b8dfb6b84f24280c7",
    "number": 1068,
    "body": "for use by developers when extending the library\nhttps://github.com/moment/moment/issues/1066\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa51b8dfb6b84f24280c8",
    "number": 1061,
    "body": "Added weekdaysMin value, so that it can be used with ion.calendar.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa51c8dfb6b84f24280c9",
    "number": 1059,
    "body": "The C# interpreter requires the seconds parameter to be included, so if one has a raw duration of 13:45, one must append ':00' for the constructor to recognize the duration (input[type=\"time\"] produces such raw durations). This PR solves that problem.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 48dfaa9c266b1a6f1164ff1337c71e5541edbafc into 407e797330b46d354eeffb6da64a67aaebdf5a13"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa51d8dfb6b84f24280ca",
    "number": 1057,
    "body": "Represents a continuation of #973 (didn't mean to create a new pull request specifically, but all the old work was made irrelevant anyway, and apparently github auto-closes pull requests if you delete the branch.  Go figure).\n\n`moment+langs.js` is a version of moment.js, prepackaged with all languages.  Can specify `--embed_languages=ar,br` to create `min/moment+customlangs.js` with just those two languages (went with this over `min/moment+ar+br.js` since it was easier to configure; could switch over if that's still your wish).  Also didn't indent the lang closures, since I think the file is readable as is; again, could indent if you guys want.\n\nIf you're wondering about `lang/da.js`, that was just a minor tweak so that it would match the replacement regex and pass jshint.  And the error message is mostly in reference to `lang/hr.js`, which at this time has the old node-require instead of a UMD wrapper, giving example output of:\n\n`Warning: all language files must use the common UMD wrapper pattern.  Failed language file: lang/hr.js`\n",
    "head_branch": "moment+langs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge b24a5f19cc2d5941e271d9db4ab41385fd4598ad into f7bd97ff375424ad758041589bf82e49800af4ef"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa51e8dfb6b84f24280cb",
    "number": 1056,
    "body": "Better implementation for #865\n",
    "head_branch": "bugfix/fix-chinese-ampm",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 75d48a2cc5b36481ac265e719ee09788b2ef7ad6 into f0747749a27fc140b1ca24971d41675bcbeb3dd5"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5208dfb6b84f24280cc",
    "number": 1055,
    "body": "Pretty straightforward, but see my question in the code.\n",
    "head_branch": "create-with-object",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 6d7560214f0676655e94b679435e654f72c8fa2b into 6c3ca9844493048a1f45e6593826c51b83736287"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5208dfb6b84f24280cd",
    "number": 1053,
    "body": "Short months should be abbreviated with a \".\" and there is no need for the function to switch between them. \nIn fact this breaks the locale functionality since \"monthsShort\" will not be replaced by the language file.\n",
    "head_branch": "nl-lang-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5218dfb6b84f24280ce",
    "number": 1051,
    "body": "Month and day names should be lowercase in Danish.\n\nPlease refer to [sproget.dk](http://sproget.dk/raad-og-regler/ordlister/sproglige-ordlister/store-eller-sma-begyndelsesbogstaver-i-proprier-tiltalepronomener-og-titulaturer) and [Retskrivningsordbogen](http://www.dsn.dk/)\n",
    "head_branch": "da-lang-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge bcb65e8b79f20953ea71e48dbd67efc71db736eb into 1aebc6ff83bd0f7cd8234dc5b6c88adbb95438d6"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5228dfb6b84f24280cf",
    "number": 1050,
    "body": "Some of the previously added fa.js file (number formatting and parsing) should not reside in a calendar library.\n\nAlso a few formatting changes are applied.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5238dfb6b84f24280d0",
    "number": 1042,
    "body": "",
    "head_branch": "fixing-travis-ci-badges",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 58ddb75c823a40cd54c6a8f3cb43e898a581ec0b into 3ea46db83d5eca44ea319ca07f840ef60017d4a0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5248dfb6b84f24280d1",
    "number": 1037,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 416102edd7ec1b8be0c71c2f7aaf1c79a61255b8 into 8dbd8024572058fb3b0d10b8b8a952a46785b998"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa5258dfb6b84f24280d2",
    "number": 1033,
    "body": "Had an issue where IE8 was not parsing AM/PM properly. I had failed to put a <!DOCTYPE html> tag at the top of my HTML file while I was playing around with it and this put IE8 into Quirks mode. IE8 Quirks Mode or IE7 Standards Mode doesn't appear to allow accessing strings as arrays. This resulted in the isPM function always returning false, so 1:00 PM would be parsed as 1:00 AM. Other date parsing worked, so it was hard to detect that this was an issue at first.  Switching to charAt instead of accessing the string as an array resolves this issue, and it fully passes the grunt tests. Adding <!DOCTYPE html> also fixes the issue as it pushes IE8 into Standards Mode, but not everyone does this or can use that DOCTYPE for legacy reasons.  \n\nIE8 Quirks Mode issue only shows up in the actual IE8 browser. Setting IE10 to IE8 Quirks Mode does not result in the issue, but the WinXP version of IE8 in Quirks Mode does show the issue.\n![ie8-quirks mode](https://f.cloud.github.com/assets/5317043/1044134/1fcd3b5e-100c-11e3-89b2-97f7cc2b9545.png)\n![ie8-standard mode](https://f.cloud.github.com/assets/5317043/1044135/1ffafa76-100c-11e3-9f2f-22d8e3765ed2.png)\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge b96630bac86ff88f9f9ad4201416dfe1a8e67c88 into 9e41a136cdeacc38ac70cba2134def664d908002"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5268dfb6b84f24280d3",
    "number": 1029,
    "body": "According to the [documentation](http://requirejs.org/docs/api.html#modulename)\nmodules should not be defined using a name, because they are less portable.\n\nIn my use case we put all 3rd party libraries in `lib/`, so moment is\n`lib/moment`, not just moment.\n",
    "head_branch": "features/proper-amd-export",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5278dfb6b84f24280d4",
    "number": 1027,
    "body": "",
    "head_branch": "feature/LT-translation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 9e4a010aa32b9cbff5905eeccc8cbd36faa3e8ed into 9c14c8c24c8f368d1abb76530aef72f480aa0452"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa5288dfb6b84f24280d5",
    "number": 1025,
    "body": "Self-explanatory - Lithuanian translation. I'll ask my countrymen on Twitter to take a reviewing looksie at this.\n",
    "head_branch": "feature/lt-lang",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 3ef2ff7db405d9c6fb1a4595c923d84bca5be20e into 9284a68edecbc3f94c630ff0a3781f0674d53c36"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa5298dfb6b84f24280d6",
    "number": 1022,
    "body": "Use ordinals for day of months in localized dates (according to standards)\nUse uncapitalized letters in future and present strings (it is better to capitalize when needed - icelandic translation does the same)\nAbbreviate weekdays as two letters and a dot (norwegian standards defined by the norwegian language council, Språkrådet)\nAbbreviate month names as three letters and a dot, but leave short month names in full length. (norwegian standards defined by the norwegian language council, Språkrådet)\nUse kl. instead of klokken (icelandic and danish translations do the same)\n\nI guess the abbreviations for month names can cause trouble when parsing localized dates, as short month names are not abbreviated. Is this a known problem that can be worked around? The standards says one thing, but this may be hard to understand for people not knowing the standard. But they can easily use their own format.It is a lot harder to write a parser that follows the standard, than specifying another format when needed. Just thinking out loud here.\n\nNynorsk will follow when bokmål is accepted.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge e51e848c865ab6d1cf91d97a3a7347dd409f110c into 172ffe487e56ca8efd41e211526197b5c114e851"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa52a8dfb6b84f24280d7",
    "number": 1021,
    "body": "I butchered #1009 (it's probably high time I sucked it up and got git-flow), so here it is again.\n\nIt's a good thing I added those extra tests, because my implementation was wrong.\n",
    "head_branch": "hour-alignment-redux",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge fdc09fed66d5afefe5fbce5eb848c39f6b3da7c9 into 0cb0eb231e896e40ab37b001ba23c8ecead3bd79"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa52b8dfb6b84f24280d8",
    "number": 1020,
    "body": "As discussed in #1006. Tested in some normal and problem time zones.\n",
    "head_branch": "better-dst-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge ac49c5cbd57292c8b871cdaa640c28a8d71f5260 into 690dd3c45b879d6522435d2bc13076c9c0021aa2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa52c8dfb6b84f24280d9",
    "number": 1019,
    "body": "Fixes #946, and adds a test.\n",
    "head_branch": "calendar-with-zone",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 2d844382836c1f8b08f91205a8483f398fafe068 into ac3ffa628c2295bded736caae110ce6f7e916365"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa52d8dfb6b84f24280da",
    "number": 1016,
    "body": "There are dots after month day in norwegian long date formats, just as ordinals.\n\nA valid LLLL in Norwegian Bokmål is: onsdag 21. august 2013 13.00\n\nActually, the HH:MM should be HH.MM with a dot as separator, according to standards (at least last time I checked), but people are increasingly using HH:MM with a colon.\n\nIn addition, the language flows better if \"klokken\" is taken away from all places noted. Should I create a new pull request for this?\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa52e8dfb6b84f24280db",
    "number": 1013,
    "body": "Added Croatian translation `lang/hr.js` and respective unit test `test/lang/hr.js`. Tested with `grunt`, all tests pass.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 1c5d13ad4d91f5dce8a6db58c42cf8dd096c9ee8 into 4c33c3d98604b4a06748886bc0fd4c9e26647478"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa52f8dfb6b84f24280dc",
    "number": 1012,
    "body": "This changes the language files to UMD rather than requiring an extra build step.\n\nUnfortunately, because this adds a closure to every file, the history is going to be broken a bit as each file is essentially completely rewritten as far as git is concerned.\n\nThe minified versions of the individual languages has also been removed as well.\n\nThis also simplifies the gruntfile and removes the need for a few of the moment-specific grunt tasks.\n",
    "head_branch": "feature/umd-lang",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5308dfb6b84f24280dd",
    "number": 1011,
    "body": "Fixes #665. Pretty straightforward. Allows:\n\n``` js\nmoment.lang(\"it\");\nmoment(\"01/03/2013\", \"L\"); // L maps to DD/MM/YYYY\nmoment.lang(\"en\");\nmoment(\"03/01/2013\", \"L\"); // L maps to MM/DD/YYYY\n```\n",
    "head_branch": "expand-localized-in-parser",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge afec852c5284e15c33f2d7576638362e85e6a756 into 5919648589b01889ba03048eb6195511939e14c7"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5318dfb6b84f24280de",
    "number": 1010,
    "body": "This should be viewed in the context of #952 and #989, but I figured I'd just submit it separately, since it's an easy one. This is a test failure from Pacific/Apia that results from them [never leaving DST in 2010](http://www.timeanddate.com/worldclock/timezone.html?n=282):\n\n```\nTesting diff.js........F....\n>> diff - diff between utc and local\n>> Message: year diff\n>> Error: year diff\n>> at Object.exports.diff.diff between utc and local (test/moment/diff.js:173:14)\n```\n\nI just used a different year.\n",
    "head_branch": "pacific-apia",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge f39139e65f30341439abac7b15688d6be6e825a2 into 5cf86d0879e874a0d8c5b0d93adc007ad0a613e6"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5328dfb6b84f24280df",
    "number": 1009,
    "body": "When I was thinking about #1008, I ended up writing `hasAlignedHours()` which can be used to tell if two zones have aligned hours, or a zone is aligned with UTC. Since I suspect there's a fair amount of quirky behavior when working with unaligned zones, it seems like this might be generally useful.\n",
    "head_branch": "hour-alignment",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5338dfb6b84f24280e0",
    "number": 1008,
    "body": "This addresses problem 2 in #989, which is test failures that look like this:\n\n```\n>> zones - same / before / after\n>> Message: two moments with different offsets should be the same hour\n>> Error: two moments with different offsets should be the same hour\n>> at Object.exports.zones.same / before / after (test/moment/zones.js:307:14)\n>> at Object.exports.zones.setUp (test/moment/zones.js:6:9)\n\n>> zones - same / before / after\n>> Message: two moments with different offsets should be the same hour\n>> Error: two moments with different offsets should be the same hour\n>> at Object.exports.zones.same / before / after (test/moment/zones.js:308:14)\n>> at Object.exports.zones.setUp (test/moment/zones.js:6:9)\n```\n\nThe problem is that a lot of time zones are offset by a half-hour. A good list is here:\n\nhttp://www.timeanddate.com/time/time-zones-interesting.html\n\nThe issue is what it means to say this:\n\n``` js\nmoment().zone(30).isSame(moment(), \"hour\");\n```\n\nYou can see why it doesn't work with the current implementation, but after thinking about it for a while, I concluded that it's not really a meaningful question in the first place. It's just a question that only makes sense between zones with the same hour alignment. So I just changed the test.\n",
    "head_branch": "half-hour-offsets",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge d5ded109ae090b9ea85e76fb70845f895a4e710d into 7ade04b8e8ebbd67037c51aef5deb9c306a86ce0"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5348dfb6b84f24280e1",
    "number": 1007,
    "body": "I think this is a bug:\n\n``` js\nmoment.utc(moment())._isUTC //=> false\n```\n\nSeems like `moment.utc()` should force the issue.\n",
    "head_branch": "cloning-with-utc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 3ff5130527a9a5b34d887862edb64c51b59775f4 into eea67b03b114033d7226fb11a5c6982a91d1fcdf"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5358dfb6b84f24280e2",
    "number": 1006,
    "body": "Here's a fix for part of part 3 for #989, which concerns test failures in other time zones, and is likely the most important issue I found there. It's two characters, but it requires some explanation, though. First, here's the test:\n\n```\nexport TZ=America/Asuncion\ngrunt nodeunit\n```\n\nWhich throws out a ton of errors. That's because Paraguay has daylight savings on inconvenient dates. There are a bunch of DST issues from #989 that are really just test artifacts, but these aren't an example of it; this is a real bug in Moment.\n\nBecause October 1, 2000 isn't a valid date, month parsing breaks completely for that whole month. E.g. October 12, 2013 is a perfectly valid date, but `moment(\"October 12, 2013\", \"MMMM DD, YYYY\")` returns **August** 12, 2013 (or whatever this month it is right now). The culprit is this code from `Language.monthParse()`:\n\n``` js\n            for (i = 0; i < 12; i++) {\n                // make the regex if we don't have it already\n                if (!this._monthsParse[i]) {\n                    mom = moment([2000, i]);\n                    regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n                    this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n                }\n                // test the regex\n                if (this._monthsParse[i].test(monthName)) {\n                    return i;\n                }\n            }\n```\n\n...which is building the list of regexes to be used with the \"MMM\" and \"MMMM\" parsing tokens. But because `moment([2000, 9])` returns September 31, that code pulls out word \"September\" instead of \"October\", and thus `/^October|^Oct/` never gets added to the array of regexes. So \"october\" can't be recognized as part of an input string.\n\nThe logic for why Moment does this at all is that for some languages like Dutch, the month abbreviations used in _formatting_ is really a function, and to spare the language from exposing a list of months _and_ a function for providing that month, the code for building the _parser_ just calls that function with a made up date in the right month. So an alternate fix here is to force languages that have a `monthsShort()` callback to separately provide a simple array of months.\n\nIn practice, it seems to work to just use `moment([2000, i, 2])`, so I did that. All the tests pass in America/Asuncion, and it didn't seem to negatively affect any other zones.\n\nThis also fixes many of the tests for Asia/Damascus, which has the same issue with April 1. That DST also causes other test failures not covered by this fix, but AFAIK, those are just tests assuming that April 1 is a valid date and in April, like `moment([2011, 3]).format(\"MMMM\") == \"April\"`.\n",
    "head_branch": "simpler-month-parse",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 4bf3fbf55100d946057b067814e8836fe5e44eda into 76ddc19338c295635d5f74667f046c12f6c908de"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5368dfb6b84f24280e3",
    "number": 1003,
    "body": "[Malayalam](http://en.wikipedia.org/wiki/Malayalam) is the primary language of the state of Kerala in India.\n\nThe localization and tests were modeled off of the ones for Hindi, by [Mayank Singhal](https://github.com/mayanksinghal). Thank you, @mayanksinghal \n",
    "head_branch": "feature/malayalam-language",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge a518f8dd06c28811075d02150036cad94cca1605 into 463b7c032bddf6a490130a8965c67088b8fc2371"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa5368dfb6b84f24280e4",
    "number": 1002,
    "body": "Sorry for our discussion in Ukrainian there in #1001. there was nothing besides conversation about weekdays and months)\n",
    "head_branch": "feature/ukr-short-months",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 2240054ee55a9f6de84d8f7b5d443000722994a6 into 47f31e4166d88ced5bdb56e23363811f3f686182"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5378dfb6b84f24280e5",
    "number": 998,
    "body": "In Hebrew, there is a special dual form for times like 2 hours, 2 days, 2 months and 2 years.\nNot using this, is the biggest _tell_ for a non-native speaker (or a machine).\nThe dual form for minutes and seconds isn't used in Modern Hebrew.\n\n[Wikipedia: Dual (grammatical number)](http://en.wikipedia.org/wiki/Dual_grammatical_number#Modern_Hebrew):\n\n> Modern Hebrew: The dual form is usually used in expressions of time and number. These nouns have plurals as well, which are used for numbers higher than two\n\nI've implemented this dual form as discussed in [issue #488](https://github.com/moment/moment/issues/488), but never actually implemented.\n\nI've also made sure of complete test coverage for this.\n",
    "head_branch": "hebrew-dual-form-fixed",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge b866a4f607ce844a7a144ffc02f0ff32aa410fff into 48bf0ebfc1b8b2638bf48bfdf2d1035aff713578"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5388dfb6b84f24280e6",
    "number": 995,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge f105bbab20fcc6f845aa3ef73dea49008cd93015 into b4c4e6e3eb9d8d9aa409cc711a692854682979ff"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa5398dfb6b84f24280e7",
    "number": 992,
    "body": "In order to enable the `require`s for language definitions with `.lang()`; every `*.js` file under lang directory must be listed under the `scripts` key in `component.json`.\n",
    "head_branch": "feature/component-i18n-support",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa53a8dfb6b84f24280e8",
    "number": 986,
    "body": "Enable languages to set a language alias, for example 'en-us' would set an alias 'en'. This was mentioned in #963.\n",
    "head_branch": "feature/lang-code-aliases",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa53b8dfb6b84f24280e9",
    "number": 985,
    "body": "",
    "head_branch": "feature/normalize-lang-codes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge faeb903108f1f6887c0feb4b8184134edb8293f3 into 6664ad71d0de00fd92cf83615021c32c81793227"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa53c8dfb6b84f24280ea",
    "number": 983,
    "body": "Implemented grunt zone as discussed in #916\n",
    "head_branch": "improved-grunt-zones",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 69534d6318c5d6309f41306d3f0225d122a8bc27 into 03efa302b0d4b7811f255343593f6cfd5f2219a6"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa53d8dfb6b84f24280eb",
    "number": 982,
    "body": "This is in response to #980.\n",
    "head_branch": "fix-prototype-constructor",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 762f16ff8415ec693a3222c390194c438bf99ba3 into 2f107036cdd9055a7b46496635866ae87435d5f7"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa53e8dfb6b84f24280ec",
    "number": 979,
    "body": "Fixing #968.\n\nI'm not entirely sure what the deal is with the changed lang files.  I'm guessing they were existing changes that just hadn't been minified down yet.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge a967032abfd9e824e267d6d89c049315fdc68871 into 569e17f48e629f4fdf87d4729b819ce9a90ea8ad"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa53f8dfb6b84f24280ed",
    "number": 978,
    "body": "Per discussion in #938\n",
    "head_branch": "extraneous-s",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 0c4055ffa1d6b87e785af3799a1d876e0e2e81cc into 35a26acc57af983567bda4c7dcacf18bc03bade9"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5408dfb6b84f24280ee",
    "number": 975,
    "body": "Just re-writing the grunt configuration using CoffeeScript.\nLooks more clean.\nThanks.\n",
    "head_branch": "migration/coffeescript/grunt-configuration",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5418dfb6b84f24280ef",
    "number": 974,
    "body": "The problem is in contructing RegExp for matching against input date. In russian language words sometimes changes their ending, causing some troubles.\n\nThe bug was in dates like this: `11 мая 1989` with format `D MMMM YYYY` (which is May, 11)\n\nmoment.js parser says it is January, 11.\n\nAlso, monthsCaseReplace function definitions looks a little bit strange accepting second attribute `format`, because there is an empty string passing in moment.js code:\n\n```\n#line 406\nregex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n```\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 3928b2e0b8421c4dbc005a30610dc53f59f73a97 into c4c36d282a7938ee01862df04c1e61f319161ca3"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5428dfb6b84f24280f0",
    "number": 973,
    "body": "As I mentioned in #940, I think there's a case to be made for bundling the main moment.js, and whatever languages a given user needs for their application, together, into just one file.  This simplifies loading of the library and the desired language immensely (no need to load moment and the language bundle separately, no need to define multiple AMD paths for each language).\n\nSo, in this series of commits, I introduced the `grunt concatwithlang` task (defined in tasks/concat-with-lang.js, modeled after tasks/concat-lang.js).  Run it without specifying `--useLang` on the command line, and it produces moment_and_alllangs.js, as seen in compiled, non-minified form in this pull request.  Run it with specifying, for example, `--useLang=uk,cs` and the file would instead only bundle those two languages.  This is a nice file size improvement for those that only need a limited subset of languages in their application (mine calls for 10-15, more or less), at least when compared to always loading the core moment.js and langs.js.\n",
    "head_branch": "momentwithlang",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5438dfb6b84f24280f1",
    "number": 971,
    "body": "According to the docs:\nhttps://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp/test\nissuing regex.test on the same regex that is also g (global), would cause it to\nremember the last match position and continue from there. Set lastIndex to\n0 before every test to make sure this won't happen.\n\nThis will also fix #965, #962, #954, #943, #937, #934 and maybe more. We should fix the message that doesn't include the failing messages. I'm sick of duplicated reports ... with missing reports.\n",
    "head_branch": "bugfix/global-regexp-test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge d915c77b7f2bdd7096e40a761b98bad8308ee529 into b9e23b96558308e94455a7bc00e300e2322113a0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5448dfb6b84f24280f2",
    "number": 966,
    "body": "Change the long date format for Norwegian nynorsk, so that it follows the most common Norwegian system for dates (DD.MM.YYYY). Ref. http://en.wikipedia.org/wiki/Date_and_time_notation_in_Norway.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge b53d1b89eacb088a540277cba616ac12b0fa5eb6 into 01d2135e1451f71485719bc45f3757ef5be4ee27"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5458dfb6b84f24280f3",
    "number": 964,
    "body": "Change the long date format, so that it follows the most common Norwegian system for dates (DD.MM.YYYY). Ref. http://en.wikipedia.org/wiki/Date_and_time_notation_in_Norway.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5468dfb6b84f24280f4",
    "number": 951,
    "body": "This was reported in #816.\nIt happens because there is DST in Argentina on 30 Dec 2007.\n",
    "head_branch": "bugfix/argentina-dst-failing-test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 26333668cf5c1158ae425af338b3dcc5bf51e645 into 7883f25e1de3556fd7f9ee3ac00b523dcde728ab"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5478dfb6b84f24280f5",
    "number": 950,
    "body": "Eventually Bower is likely to become incompatible with the component.json format, and the warnings will turn to errors when installing with Bower.\n\nThe ignore list is patterns and files that should not be installed for end users, when moment is to be consumed as a bower package.\n",
    "head_branch": "hotfix/2.1.0-add-bower.json",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 5732e098482849287802464fc8b034b141ae9b5d into 3e2d8f7946e04e3b428c3f47a173a5dfd1aac860"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5488dfb6b84f24280f6",
    "number": 949,
    "body": "Change the long date format, so that it follows the most common Norwegian system for dates (DD.MM.YYYY). Ref. http://en.wikipedia.org/wiki/Date_and_time_notation_in_Norway.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 187f3249edb32168439e09d10ddce78f30deb53d into 1d7d55354597d8cebad612e4f61a79b506231330"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5498dfb6b84f24280f7",
    "number": 942,
    "body": "Futher reading (in Russian): http://artgorbunov.ru/bb/soviet/20100812/\n",
    "head_branch": "feature/lang-ru-months-abbr",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 090686a1b054c9a1b164657ffd6da96b4e5de24b into 9a54ac57de425f0a2b7a89b91a4c657304ea1a82"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa54a8dfb6b84f24280f8",
    "number": 941,
    "body": "As requested per #861.\n",
    "head_branch": "features/accept-iso-duration",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 2a07b3380343b103eb1e03d27ff2679b272e50b5 into 4a2dd10e71126b5015c972c2bf1d632fd4e4024b"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa54b8dfb6b84f24280f9",
    "number": 940,
    "body": "Automatically generate component.json to avoid issues like #821 \n\nProbably include minified files too.\n",
    "head_branch": "add-component-json-grunt-task",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa54b8dfb6b84f24280fa",
    "number": 938,
    "body": "Should be able to do `moment().get('days')` and `moment().set('days', 3)`, similar to how we have `as()` and `get()` on durations (see #701).\n",
    "head_branch": "string-driven-getters",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 981a32854a381219ab73eaf6299921ec381ba755 into 1fbf4567ca9b20944d2224960efb960795e1fe7f"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa54c8dfb6b84f24280fb",
    "number": 930,
    "body": "If your are working with unix timestamps, they are often stored as integers, this fix allows you to initialize moment with an unix timestamp as an integer\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge ea364d127f825310406fde4cd5d1e1aab083f685 into 9bd805d6c55222d619f65547dcef32dd7f23c07c"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa54d8dfb6b84f24280fc",
    "number": 918,
    "body": "As requested by #855\n",
    "head_branch": "features/start-of-isoweek",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 363b3ceb21a04f3af51cacd476cb570ea32dfa7b into df4a9eb4def64ed70ab2b270e42465f983f5520d"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa54e8dfb6b84f24280fd",
    "number": 916,
    "body": "It looked like the timezone getting and setting done in grunt zones only worked on macosx. I added archlinux and also an easy way to add more os-es.\n\n@timrwood please test first, because I don't have a mac at hand.\n",
    "head_branch": "bugfix/grunt-zones-multios",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa54f8dfb6b84f24280fe",
    "number": 915,
    "body": "isValid is boolean, so its not very helpful in determining which section of\na date is wrong. inavlidAt returns the index of the broken token, where 0 is\nyear and 6 is millisecond.\n\nRequested in #570.\n",
    "head_branch": "features/invalid-at",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge f3c06838352df8a9039433822a2f3aac91355a98 into 5b83c5ca6370fed0bae980e192f80a24975b11ef"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5508dfb6b84f24280ff",
    "number": 913,
    "body": "I've wanted this for a long time -- strict parsing. It builds one regex of all the tokens and matches it against the whole string. Then it matches the match groups against the tokens.\n\nI guess we can add stricter regexes for the tokens (for example MM will match 2 digits only, instead of one digit).\n",
    "head_branch": "features/better-parsing",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 33c93d985b9efb0d9733739c611d0f2c72929fea into 4e9655ba55b20076ca65cac6f923c69334e37e43"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5518dfb6b84f2428100",
    "number": 912,
    "body": "This has been requested a few times:\n- if the format contains an year, do not default anything\n- if there is no year but month, then default to current year\n- if there is day of month, default to current year and month\n",
    "head_branch": "feature/create-defaults-to-current-date",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 5b7f261716bc5318b8c03ee0490971ad10f116e2 into ec4a1bdd1222230fb87b8eea2e0ede3fa151ddc8"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5528dfb6b84f2428101",
    "number": 911,
    "body": "moment.lang(key, null) now uninstalls a language. That's mostly useful to\nremove auxiliary languages added during test runs.\n\nThis is needed by #857.\n",
    "head_branch": "feature/uninstall-lang",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge c40c7d833fd87d8533c9d17070d8216ab749f3e5 into ae34b8100eb925832c7c0bc729ba0485de77bde6"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5538dfb6b84f2428102",
    "number": 910,
    "body": "Days are now completely optional and won't steal digits from the hours.\n\nFixing #896\n",
    "head_branch": "bugfix/asp-net-duration-regex",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 58c2ac01874516da51601a6f3455b67e2ecb7645 into 1288edbae963daf5f5487242e925c8054856313c"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5548dfb6b84f2428103",
    "number": 880,
    "body": "add permissive year format \"**YY\"\ncreate : accept both 2 and 4 digit year\nformat : display 4 digit same as \"YYYY\"\n\nhttp://james.padolsey.com/javascript/permissive-user-input-validation/\n\nexample: \nhttp://jsfiddle.net/kBQ8k/17/\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5558dfb6b84f2428104",
    "number": 876,
    "body": "Added tests for Albanian translation by @flakerimi. See #872.\n",
    "head_branch": "feature/albanian-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge aee062c0b6362bc21a0570c14c6d0b42de7e6c7b into ecd0a503941538ac5a834ae18f300b839bacae5f"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa5568dfb6b84f2428105",
    "number": 875,
    "body": "I needed to calculate the difference between two moment objects as hours & tenths of an hour (i.e. 3:14 --> 3.2).  I added a new option to the #diff function 'hour-decimal' which assumes / forces float representation, then performs the calculation as desired.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5578dfb6b84f2428106",
    "number": 874,
    "body": "Buddist Calendar / Thai solar Calendar support with format code BB, BBBB\nTHAI YEAR (BE.) is +543 years greater than AD. (that's all)\nhttp://en.wikipedia.org/wiki/Thai_solar_calendar\n\nMicrosoft Excel 2003 and later uses b or B for Buddhist Calendar\nhttp://office.microsoft.com/en-us/excel-help/format-dates-using-alternate-calendars-HP005262656.aspx\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5588dfb6b84f2428107",
    "number": 872,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5598dfb6b84f2428108",
    "number": 871,
    "body": "There was not test task, `grunt` is enough for testing. In fact this was misleading for me\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 07d95e6e7e010ec2011003973a72428b8a9fc9dd into 1ccf6b9e98161c4e1a603ac28712c9d0aeb77e46"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa55a8dfb6b84f2428109",
    "number": 870,
    "body": "It contains needed tests and is passing them well\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 30e72e1a36d0ffe85a34d2ccfec8b9f19a05f39e into f7648675197f63e62f52174cc8189f127267cf95"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa55b8dfb6b84f242810a",
    "number": 865,
    "body": "By now I just fixed the time. Now it's:\n\n```\nmorning < 9 <= forenoon < 11:30 <= noon < 12:30 <= afternoon < 18 <= night\n```\n\nI plan to adjust the details once I got accurate concept of the time in Chinese.\nAnd I asked a question at Zhihu: http://www.zhihu.com/question/21251131\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa55c8dfb6b84f242810b",
    "number": 863,
    "body": "`moment.duration` does not return an equivalent Duration for all\ninputs.  Add a test for this and fix the issue by reusing the\nDuration's constructor argument.\n\nThis is an alternative approach to https://github.com/timrwood/moment/pull/858.\n",
    "head_branch": "bugfix/clone-duration",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge b864420eab59b45dde8a4b9d33f9b6f81fc7b9b0 into 875650f4b5e61e95fe024ba036b6e9e17c817392"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa55d8dfb6b84f242810c",
    "number": 862,
    "body": "This addresses and hopefully fixes #842.  \n@ichernev, there are some tests that don't pass but I'm sure I haven't touched this (diff.js or whatever). Could it be merged anyway? :)\n",
    "head_branch": "feature/german-suffixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 9c78c8f744eaedf3af1dddc396f193365505c53a into fdc988184f761a610f49747c7cdae513cf4df328"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa55d8dfb6b84f242810d",
    "number": 858,
    "body": "`moment.duration` when passed a lengthy duration may return a\nduration that is not equal to the input.  Add a test and a fix for\nthis bug.\n",
    "head_branch": "bugfix/clone-lengthy-duration",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa55e8dfb6b84f242810e",
    "number": 857,
    "body": "moment.langKeys() returns an array of all available language keys\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa55f8dfb6b84f242810f",
    "number": 853,
    "body": "This pull requests tells bower to [ignore](https://github.com/bower/bower#defining-a-package) all nonessential files and folders (excluding LICENSE and readme.md) so they aren't sent over the wire when installing moment.\n",
    "head_branch": "bower-ignores",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 47789ff7ff54410b4b35dc8b3830745feff787e4 into 0ef623c39ea8499e48e0c155d3edb5f800a2666f"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5608dfb6b84f2428110",
    "number": 847,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 43c30a9833cf3149809c17417b684060aaab9dbc into 79b9f5d08b9e8f384ed56df2e82f0c7c510f66e4"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5618dfb6b84f2428111",
    "number": 846,
    "body": "in response to Issue #844\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 7a9c1ae0f6985659539d941c6e793f455fb8a719 into 4f7bc8bb8bcf51c182d7ad3948cbec079a330135"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5628dfb6b84f2428112",
    "number": 841,
    "body": "\"uglifyjs --lint -c json3.js\" should ideally do its thing without noting any warnings like unused variables & etc.\n",
    "head_branch": "uglifyjs-lint",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 908dbad0134fa4222849f3bdbd9354bddfcdbebf into fa26e8017f312179d23e244570bde67c5accd7ac"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5638dfb6b84f2428113",
    "number": 834,
    "body": "- \"Klockan\" is kinda superflous.\n- This makes the Swedish translation more similar to English.\n",
    "head_branch": "swedish-lang-remove-klockan",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 341142010746c4714276b1868ef2e9b954d7cecc into d94e3747fc77b212e5f534443c5f9456bd2495e2"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5648dfb6b84f2428114",
    "number": 825,
    "body": "As suggested by @timrwood in comments to #809, I've written functions to match ordinals format for Russian and Ukrainian and modified the tests appropriately.\n",
    "head_branch": "feature/rus-ukr-ordinals",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 48ce0b06813c5ca4733c77c2b1eef1a12f273213 into fb05577991e8a95f5011258c221abc99648f92ea"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5658dfb6b84f2428115",
    "number": 822,
    "body": "JavaScript does some weird stuff with setMonth(). This change makes its behavior more consistent.\n\nIf you have a moment object with a date around the end of the month and you try to change the month to a month that doesn't have that many days you end up with an unexpected result. You can see this exhibited using moment like this:\n\n```\n>>> var m = moment('20130531', 'YYYYMMDD');\n>>> m.month();\n4\n>>> m.month(3);\n>>> m.month();\n4\n```\n\nIn JS the `setMonth()` method sets the month and then applies the date and rolls over into the next month if the date (e.g. 31) is higher than the last day of the month.\n\nWhile this is the normal behavior of the JS `Date` object, I would argue that it is the wrong behavior. It causes bugs that users unfamiliar with the oddities of the language won't expect. In addition the date you end up with is somewhat arbitrary and not helpful in any case I can imagine because it's not consistent or predictable without extra logic. If I'm using an object and I try to explicitly set the month I want the object to go to that month, not occasionally end up on both a different month AND date from what I expect.\n\nIf the month doesn't have enough days it's much less buggy or unexpected for it to consistently go to the last day of the month than to end up on some day toward the start of the month depending on what day of the month it is and what month I'm switching to.\n\nIn my particular case it caused a bug that could only be observed on certain days of certain months, like today. In my code it creates a new moment object and then tries to set the month based on a value returned from the server. But since the object was created today it causes it to set the month wrong. If I tried the exact same thing yesterday it would have worked fine. At least with this fix it creates consistent and predictable behavior and always sets the month to the one requested.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge c40ef7bd15d1bd38b4edfa8d39901ca349229ac4 into fbba084bafbf2efd07e4465062c0853f7953630f"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5668dfb6b84f2428116",
    "number": 807,
    "body": "Correct dateformat for norwegian bokmål and norwegian nynorsk is\nDD-MM-YYYY\nSee:\nhttp://www.xn--sprkrdet-c0ac.no/nb-no/Sprakhjelp/Raad/Spoersmaal_og_svar/#dato\nand\nhttp://en.wikipedia.org/wiki/Date_format_by_country\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5678dfb6b84f2428117",
    "number": 806,
    "body": "I thought that adding in this helper method would improve readability for when you want an ISO datestring out of moment. Right now you would have to call either `moment().toJSON()` or `moment().format('YYYY-MM-DD[T]HH:mm:ss.SSS[Z]')`. This also follows the method naming and expected results that you get from the javascript date object.\n",
    "head_branch": "isoHelperMethod",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge ce992c312c27ddbd35ae74b89bca64086a025bc6 into bfc89ad4c03752c530f8480ce4a363999ca9f4b2"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa5688dfb6b84f2428118",
    "number": 803,
    "body": "What I've done:    \n- Fixed Ukrainian pseudo-dual (plural for few) forms for days and months to fit the literary standard (mea culpa, didn't notice this when made the previous PR);\n- Added special processing for 11 hours. @ichernev, you'll understand (as you can read Cyrillic :)). the thing is that in Ukrainian we say hours with preposition о (which I've fixed in the previous PR). However, the number 11 starts with a vowel (as in Bulgarian, but from о, not from е). And, if the next word starts with a vowel, о becomes об, so о десятій (at 10 o'clock), but об одинадцятій (at 11 o'clock).\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge af6008058efec77eb1426a43e6e1194e8154d44a into 31fb450d23fc4b35a5c7159d0aed8af431ecf11d"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5698dfb6b84f2428119",
    "number": 802,
    "body": "Added Macedonian Language.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa56a8dfb6b84f242811a",
    "number": 800,
    "body": "This adds the `max` and `min` methods noted in #755.\n\nThe max method returns the original moment only if it is before the max. Otherwise, it returns the max.\n\n``` javascript\npastMoment.max(moment()); // pastMoment\nfutureMoment.max(moment()); // now\nfutureMoment.max(pastMoment); // pastMoment\n```\n\nThe min method returns the original moment only if it is after the min. Otherwise, it returns the min.\n\n``` javascript\npastMoment.min(moment()); // now\nfutureMoment.min(moment()); // futureMoment\nfutureMoment.min(pastMoment); // futureMoment\n```\n\nBoth methods accept anything that can be passed to `moment()`.\n\n``` javascript\nmoment().max(\"septiembre 3 2006\", \"MMMM D YYYY\", \"es\");\n```\n\nPassing no arguments defaults to now.\n\n``` javascript\n// all different names for the same thing\nmoment().max();\nmoment().max(moment());\n```\n\nEdit: Removed \"now\" argument.\n",
    "head_branch": "feature/minmax",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge 99446c04acc29a04ac5bd07963d854c8eec61a6f into cab7d36e3f193b794e96e6048386c94f4dbd979e"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa56b8dfb6b84f242811b",
    "number": 797,
    "body": "ex. 2:00 AM >>> 02:00\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa56c8dfb6b84f242811c",
    "number": 795,
    "body": "GB uses 24H format\n\n---\n\nlove this project, keep up the good work :+1: \n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge d48d9c3aeb37107a0192d5d4e791a0db1c9d7e1c into 96b90aa5b4c62c9f1011b407aa3dd91840d642a1"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa56d8dfb6b84f242811d",
    "number": 791,
    "body": "Based on comments in #773.\n",
    "head_branch": "feature/ampm",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge f4ef8000d02d236115d251626c2ad5df7b9cb054 into 90ec201d2d8c420f650c8bf871744421a911174a"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa56e8dfb6b84f242811e",
    "number": 785,
    "body": "(was unsure if doing that on develop was best, as i am guessing it could be some time until you rebase master from develop, so it would be best to do this on master instead.\n\nHere was the other PR, ill probably close the other, and hope that this one gets merged instead:\n\nhttps://github.com/timrwood/moment/pull/784\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa56e8dfb6b84f242811f",
    "number": 784,
    "body": "Please add this to packagist.org so Symfony/Zend framework users can pull this in via composer.\n\n(also was not sure if to do this on master or develop, i can move it to master if you prefer).\n\nThanks.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge bac91b8a1d3d3ded4e563d24d9d8ac56387cb4e3 into 84975d3157157ee9e2f8e9d02256bfd221f0ae60"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa56f8dfb6b84f2428120",
    "number": 781,
    "body": "changed \"relativeTime.future\" from \"in\" to \"tra\"\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 4ed71bcdf52eb2beeedf17d90072f12c5e2acd82 into 41d63f66c48f6955322cefb038c51fde8e30447f"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5708dfb6b84f2428121",
    "number": 780,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge b5fe879f5c5b69235091f0b6c57a854a1913e8c3 into 02d060ffbef0dee925857eaa8200ba53e6a02d60"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5718dfb6b84f2428122",
    "number": 779,
    "body": "‘You can explicitly name modules yourself, but it makes the modules less portable. (…) It is normally best to avoid coding in a name for the module and just let the optimization tool burn in the module names.’\n\nPlease see http://requirejs.org/docs/api.html#modulename.\n",
    "head_branch": "hotfix/2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5728dfb6b84f2428123",
    "number": 777,
    "body": "This is to allow libs like `moment-timezone` and others to provide timezone information by overwriting `moment.fn.zoneName` and `moment.fn.zoneAbbr`.\n",
    "head_branch": "feature/zone-name",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge e165c44d27819fa933f336f37bc3d651fb978caf into 9f983fb8410b8f6620d9a5368f165197ab953fb3"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5738dfb6b84f2428124",
    "number": 773,
    "body": "This is related to #768.\n\n@timrwood I'm not too happy that a change in the parsing regexp is needed. Also I'm not sure how useful it is. There are also requests for localizing this, so I'd personally vote no-merge :)\n",
    "head_branch": "accept-dotted-ampm",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5748dfb6b84f2428125",
    "number": 770,
    "body": "I've updated minified lang files as requested in #769. I could add the fix for Russian if I know how to do that)\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 3b51df82183be5d1f344dce7109a7b4c857f6f18 into f8a395201963d3a43bd8d2220634fb10b7378446"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5758dfb6b84f2428126",
    "number": 767,
    "body": "Added support for breton language\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 68878821c2b8180816aba4a7a8725f1d9f8db205 into a58e5b7c5d71c99d6ae44cc1cb30072d47c6c2ae"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa5768dfb6b84f2428127",
    "number": 766,
    "body": "...hat var's call to determine if the variable is a function.\n\nThis fixes an incompatibility with ClojureScript, which defines String.prototype.call as a function.\n\nThat ClojureScript defines String.prototype.call is admittedly undesirable, but the timeline for changing that behavior is unknown, and this fix will allow ClojureScript uses to use moment.js in the interim, with no downside that I'm aware of.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 340f7e3acb689d949755993cd5d33d217d97b2d9 into 2e496f57fe72d0ca0ec03342ceb8db6e09e7af45"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5778dfb6b84f2428128",
    "number": 755,
    "body": "This is a useful alternative to fromNow when you know the date is in the past.\nSee @icambron comment in issue #537.\nLet me know if you prefer adding an option parameter to `fromNow`.\n",
    "head_branch": "pastfromnow",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5788dfb6b84f2428129",
    "number": 753,
    "body": "Here's what I've done:    \n- Optimized Russian and Ukrainian plural rules. Actually there are only three forms, and there's no reason to duplicate the second one (cf. original lang/ru.js);\n- Changed Ukrainian messages to fit literary standard, fixes #726.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 4151a2f309d63297903c70f5f599afb358dad6c8 into 360b7f0210c1c6b5576ad7b992f077f4e884eca8"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5798dfb6b84f242812a",
    "number": 752,
    "body": "I merged two branches from @DaAria and fixed the lang file a bit so tests pass.\n",
    "head_branch": "bugfix/gl-lang",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge c01236a967715bbd83ac5ed1dae50a24b22761af into 74d5ca2bd78b5e0a9cd4cb2a37ab4d7ee118631d"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa57a8dfb6b84f242812b",
    "number": 751,
    "body": "As discussed here: #737\n",
    "head_branch": "bugfix/tojson-skip-postformat",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 9701289bffdb45d17198db420daf2d306c9afd1f into 26d3dd58a60ea0496d9833744d30830dd6b1947b"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa57b8dfb6b84f242812c",
    "number": 750,
    "body": "Try to fix https://github.com/timrwood/moment/issues/744 by adding a hook.\nIf it is ok, the docs need to be updated for this issue.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge d245f605227def67d10ba51749fdc4247161ef9b into 699f3abf0a938471c5e1b6953eb9707b3bd36504"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa57c8dfb6b84f242812d",
    "number": 749,
    "body": "`för` shouldn't be prepended\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa57d8dfb6b84f242812e",
    "number": 748,
    "body": "Added Norwegian nynorsk localization\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 20d01716987b11428492b2ae9080d25bc968fa6d into 2d93378e8d14223c134a84654d87ea03e0e354c4"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa57d8dfb6b84f242812f",
    "number": 747,
    "body": "Diffs across timezones behave better now:\n- diffing days, weeks, months and years units ignores DST, meaning you can take the two local times (they are in potentially different timezones), and then do the arithmetic\n- diffing hours, minutes, seconds and ms takes DST into account, meaning you take the two utc times, and then do the arithmetic\n\nThat mostly worked up to now, excluding some very special month, year cases and all day, week cases (across dst). This should hopefully fix #626, #606, but the problem is that tests expect DST to happen on particular dates (USA DST), so I'm not sure how to tackle this for now :) \n",
    "head_branch": "features/diff-across-dst",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge c29880dff59f055c29618f1d25136990b95a7c6e into d1d1420433bed8c880b1027fe0260f05652cbf0c"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa57e8dfb6b84f2428130",
    "number": 746,
    "body": "Added norwegian nynorsk\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa57f8dfb6b84f2428131",
    "number": 745,
    "body": "moment(\"2013-04-27T05:48:29.000Z\").intervalNow()\n\"3 days 15 hours 2 minutes 53 seconds\"\n\nmoment(\"2013-04-27T05:48:29.000Z\").intervalNow(1)\n\"in 3 days 15 hours 2 minutes 53 seconds\"\n\nneed for exact left time without timezone\n\nthank you.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5808dfb6b84f2428132",
    "number": 734,
    "body": "Mostly I just copied over code from the moment()'s add() method -- similar functionality for durations.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge c823fbcbce189894792792e35c1bc7f42d783a37 into 71b0f65800cc9094f720705182cf419e29112bb3"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5818dfb6b84f2428133",
    "number": 730,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge a1f31dd76a200516fbfbd7e20ea4d1cf9e7db5bd into 5b747a75cfbef92eef394d0be7c079a5109adb08"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5828dfb6b84f2428134",
    "number": 725,
    "body": "- Corrected \"Octubro\" --> \"Outubro\"\n- Corrected \"fai\" --> \"hai\". \"fai\" is a spanized fail. Correct example: \"two days ago\" --> \"hai dous días\" (not \"fai dous días\")\n- Corrected \"uns segundo\" --> \"un segundo\" (number agreement)\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5838dfb6b84f2428135",
    "number": 715,
    "body": "By adding a `component.json` file we can add Moment as a dependency in Component. Otherwise I have to maintain a fork :cry: \n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge b8281e6e7fcb61ccd70735f13661ac8524f3deba into 3e2e80809cb7e44a778cba77fb5553ab09ee1bdf"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5848dfb6b84f2428136",
    "number": 714,
    "body": "Fix for #710.\n",
    "head_branch": "simplified-units",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 6427913c4b81572b918a72679385fbdbf8de5fd7 into fec3fb5be9e16cab3a153b1da8629807ec5bdae5"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa5858dfb6b84f2428137",
    "number": 712,
    "body": "This is the same as #667, but I added a cleanup commit at the end.\n",
    "head_branch": "bugfix/fixed-arabic-months",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 7d9f2bdb47ea62c9dc5280819a31f21bac02c523 into c43a72c10c0ac964b6674f7dc6fc1e56f14a445d"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5868dfb6b84f2428138",
    "number": 709,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 1d2307841f6223db18e8e06b22592bf24beed6d9 into 03cde2ea61a7042b26b5afadaa75841a28899e42"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa5878dfb6b84f2428139",
    "number": 707,
    "body": "My pull #701 conflicted with https://github.com/timrwood/moment/commit/04a19aaeb8b31883e25e559821734a77465c574c and broke the tests. Here's the fix.\n",
    "head_branch": "durations-as-anything",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge bb135116c5ea32290c46c565776118da8d394ce8 into 147f159266ae7fdabe799810e918a8e1fe67cbef"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5888dfb6b84f242813a",
    "number": 706,
    "body": "nodeunit is needed as a direct dependency for grunt tasks zone and zones.\n\nMost of you have it already installed so you don't see the error, but if you clear the node_modules file grunt won't work in the current setup.\n",
    "head_branch": "bug/nodeunit-dep",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 6562df3d71b11c9b25cf81fa73c43020177fcb58 into a23dde6625886f29a428810fd91d2e7e11717f1b"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5898dfb6b84f242813b",
    "number": 702,
    "body": "New pull request referencing #686.\n",
    "head_branch": "feature/dot-net-duration",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 8db3b32ca64b0f8fb431b3e52a20243f54875264 into b8c8e95aeba4f0c9a50d69d4a980364a415c5f8a"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa58a8dfb6b84f242813c",
    "number": 701,
    "body": "Fix for #412. Allows:\n\n`moment.duration().as(\"months\");`\n\nand\n\n`moment.duration().get(\"months\");`\n",
    "head_branch": "durations-as-anything",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 68ec709e299c1b90a47259484983a6cc97ddc36b into af2539cec9c8a42a8b449c503bc365d6b2de444c"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa58b8dfb6b84f242813d",
    "number": 700,
    "body": "Serbian latin translation. \n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa58c8dfb6b84f242813e",
    "number": 699,
    "body": "Initial implementation of iso-week-year. Related to #613.\n\nI'll add some tests, just let me know if I'm on the right track. If I'm not mistaken, the fact that iso-week-year can be different than the year should also mean that the localized week-year might be different than the year. In that case we need more functions/tokens :)\n",
    "head_branch": "features/iso-year",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 269932be565898d50ec0073422b34ff51ea24fdc into 2f261981db7ddc782ad2e8b0e5384d377c9f8505"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa58d8dfb6b84f242813f",
    "number": 696,
    "body": "- 755 -> 644\n\nThese files doesn't have to have execute authority.\n",
    "head_branch": "modify-filetype",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge d2fb919b0159bf9e6daf2c6e34558b6cae80810a into 85ed279b1fa35f1c7bf918b210f1a91e3eeae4e8"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa58e8dfb6b84f2428140",
    "number": 690,
    "body": "I wish to be able to set the month or weekday based on a name ('January' or 'Sunday') instead of a number (0). In other words, I want to use `moment().month('February')` or `moment().day('Sunday')`.\n\nI should note that you can work around this limitation for month names by creating a second moment: `moment().month( moment('February', 'MMMM').month() )`.\n",
    "head_branch": "feature/string-setter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 3ee6d848935907b1090c7badf62997a890cd2871 into 898b66d23542af8e0c40e185a6457725b6b94e42"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa58e8dfb6b84f2428141",
    "number": 693,
    "body": "Now `moment#startOf('y') == moment#startOf('year')`\n",
    "head_branch": "feature/startof-abbreviations",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 14c8c57cff5d7fe09bf574ef83b0da7e8bf7cad0 into 95145794de21cf41cbac2e813f48c74b107a44cf"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa58f8dfb6b84f2428142",
    "number": 686,
    "body": "refactored regex, location of the expression variable and application of\nthe expression\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5908dfb6b84f2428143",
    "number": 684,
    "body": "An year was converted to 12 months and a month is 30 days, so a year was 360 days. Fixed that by taking into account full years when computing milliseconds since unix epoch and fixing duration.asMonth to convert back a year to 12 months.\n\nFixes #542.\n",
    "head_branch": "bug/fix-duration-as-getters",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 04a19aaeb8b31883e25e559821734a77465c574c into f4a47ea5c0d0f16774a98908aa4ddea4af28091c"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa5918dfb6b84f2428144",
    "number": 678,
    "body": "Made amendments to Ukrainian translation to fix the issue with displaying calendar dates like this:\n\n``` javascript\nmoment().subtract('days', 3).calendar();    //\"В минулу середа в 23:05\" (\"Last Wednesday at 11:05 PM\") \n```\n\nIn the example above 'середа' is in nominative instead of the needed accusative ('середу').\n\nFixed by changing the format of \"Last %weekday%\" expression in Ukrainian to the more grammatically accurate, which uses genitive case, like in the example below:\n\n``` javascript\nmoment().subtract('days', 3).calendar();    //\"Минулої середи в 23:05\"\n```\n",
    "head_branch": "fix-ukrainian-genitive",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge cc32f7312827ad1be990756c720c40ddec0980e3 into eb5dad82d204fd3def711be5709e5c0bdc92ff78"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5928dfb6b84f2428145",
    "number": 672,
    "body": "added Georgian (ka) language with tests\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 7716a1ed1664494c7510d1a3f1f5ab93d6832f2a into 3b0eefa90509bace7f433f9d7d074230fb982e0f"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5938dfb6b84f2428146",
    "number": 671,
    "body": "This change allows you to set the intended offset for a moment.\n\n``` javascript\nmoment().format();           // 2013-03-08T20:36:21-08:00\nmoment().utc().format();     // 2013-03-09T04:36:21+00:00\nmoment().zone(120).format(); // 2013-03-09T02:36:21-02:00\n```\n\nAdditionally, because the offset changes during daylight saving time, there is a callback hook for external libraries to use to update the moment whenever it is mutated.\n\n``` javascript\nmoment.updateOffset = function (m) {\n    // check if the offset needs to be changed\n    if (dst) {\n        m.zone(60);\n    } else {\n        m.zone(120);\n    }\n};\n```\n\nThe way the offset setting works is by switching the moment to utc mode and adding the offset to the moment.\n\nThis is kind of hacky, and it requires that we correct for the offset whenever exporting the unix timestamp or the original date.\n",
    "head_branch": "feature/zone-setter",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge d68fbdbb5b2db994d4b517c68798c14e1183df30 into 7d89c118381d0c51496da3aea853291b606f3224"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5948dfb6b84f2428147",
    "number": 667,
    "body": "Two versions in months together and changes in weekdays,\nso that the translation is more general.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5958dfb6b84f2428148",
    "number": 656,
    "body": "Requested by @salixzs in #655\n",
    "head_branch": "fix-latvian-short-format",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 428b8df9cefd2fe5bd56879f82380688cb3520b4 into 13e89788bed7df556061359fbe5be201c0f6a91a"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5968dfb6b84f2428149",
    "number": 650,
    "body": "Caused errors when running tests in IE7 at http://momentjs.com/test/\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge bdc8ceea3ba0afc2e752dee60ac3e91964bc10b0 into 7f2df6e646721a18ece2591c07701cb2d17eb56d"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5978dfb6b84f242814a",
    "number": 647,
    "body": "Hi,\n\nthe uglify stuff is not failing more.\nI updated to uglify 2.0.\n\nThanks.\n",
    "head_branch": "feature/grunt-0.4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge cfb755d565447fc1af6951f62b2c8ce54265a642 into 92675d438d0ea2a3866e9d5eaa136e92ebfed00b"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5988dfb6b84f242814b",
    "number": 646,
    "body": "The `toJSON` function makes a conversion that loses timezone information. The result is a string that describes a different moment in time. For example:\n\n```\nmoment(\"2012-10-09T20:30:40.678+0300\").toJSON()\n\"2012-10-09T19:30:40.678Z\" // depends on your locale setting\n```\n\nbut the expected value is\n\n```\n\"2012-10-09T17:30:40.678Z\"\n```\n\nThe attached patch fixes this problem.\n",
    "head_branch": "tojson-non-utc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 189c3de1ef7438e27153cdb0f4e6aeced6f8616f into 4ee96503377369036f7e96146811d80155d05f9b"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5998dfb6b84f242814c",
    "number": 645,
    "body": "Hi,\nI have added Hindi language support, at least the very basic module. There are some linguistic technicalities I can think of, where the generated strings might be called inaccurate by experts but for most cases (and 99% of people), I think these changes should suffice.\n\nUnit tests as included as well.\n\nThanks for the great library! :)\nMayank Singhal\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge ccdcf4f2555c114c652c82b3005aac105abce921 into a69d8b0a543f1c81698a8908ff45487d590686a9"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa59a8dfb6b84f242814d",
    "number": 644,
    "body": "Hi,\n\nI upgraded from 0.3 to 0.4 grunt version.\nThere were a lot of modifications.\nThe main modification is: Core Tasks are now Grunt Plugins.\n\nI think I could not update the minify-lang.js file at line 48.\nAlso, I could not update the minify.js file at line 29.\nCan you help me at two lines?\n\nThanks.\n\nPS.: Upgrading from 0.3 to 0.4 can be found at: http://gruntjs.com/upgrading-from-0.3-to-0.4\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 685288286143175d609decf98c3bfdf954496cc7 into 609ebef6460ef7fc00167b3734420862beb138d8"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa59b8dfb6b84f242814e",
    "number": 641,
    "body": "Hi,\n\nI changed the grunt version for '~0.3.17' instead of 'latest'.\nIf someone run the command grunt with the latest version, this kind\nof message will appear:\n\"Fatal error: Unable to find Gruntfile\".\n\nThanks.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 1deaaaca9b0a742a48575e7536f0b66c45760748 into 2cf325a0cc1e951c351ed28d03a27a2b25bf00e9"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa59c8dfb6b84f242814f",
    "number": 640,
    "body": "",
    "head_branch": "feature/el-lang",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 0f33cc7d8faf953dc84ae37aac1291fd3ed00b55 into 4585edb6e265f1e56373c5a1a83182fe6d2afb8c"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa59d8dfb6b84f2428150",
    "number": 638,
    "body": "Hi this is translation for malay language (ms-MY) .\n\nPlease review. Thanks\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 5dba8e2ede260daf444a81e9fb80e5cd66fb5711 into b1719e2f9ee3e958af25033b00cc33dcd373ff9a"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa59e8dfb6b84f2428151",
    "number": 636,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa59f8dfb6b84f2428152",
    "number": 634,
    "body": "When trying to fix a weekly dataset export bug I ran into the following: `startOf('week')` should set the day by using `lang()._week.dow` instead of `0`, which is only correct for langs that start their week on a sunday.\n\nHope I could be of help, this is my first ever public Github excursion, kinda exciting actually :)\n\ngrtz,\n  Jurgen\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5a08dfb6b84f2428153",
    "number": 629,
    "body": "To clone a Date object d you need to convert it to a Number first and then pass\nit to Date constructor, like new Date(+d). Otherwise some browsers (firefox)\ncut milliseconds.\n\nRelated to https://github.com/timrwood/moment/issues/625\n",
    "head_branch": "fix-test-diff",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge fac452ea657c91c064a2a865c80b801f0cd1015a into 564e77f41afdf87d1b3bd50de29c1ca81e93d019"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5a18dfb6b84f2428154",
    "number": 623,
    "body": "'Today', 'Yesterday', etc. were capitalized while 'last' was not, which seems very inconsistent.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 6c36cbd2b549233da5c5fb40a6d4127f5c0b8dc9 into c38dc85a99e9955c8db3d302d2c4906806a357c3"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5a28dfb6b84f2428155",
    "number": 621,
    "body": "I followed the spec according to wikipedia (http://en.wikipedia.org/wiki/ISO_8601#Durations)\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5a38dfb6b84f2428156",
    "number": 614,
    "body": "It's not `une an` but `un an`.\n",
    "head_branch": "lang_fr_fix_typo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 32707c71454827cf4b328200d2a8bbfdd35f2936 into 81f9ef81e6615b2e7797761cf3cc73c5c7b5da38"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5a48dfb6b84f2428157",
    "number": 612,
    "body": "It sounds more natural to say `il y a un an` than `il y a une année` and same for `dans un an` than `dans une année`.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5a48dfb6b84f2428158",
    "number": 610,
    "body": "코드를 살펴본 결과 ordinal 을 함수로 호출하는데, string만 반환하게 되어있어\n문제가 되었다.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5a58dfb6b84f2428159",
    "number": 608,
    "body": "The diff rounding issue comes up so often, that I'm wondering if it would be better to `floor` instead of `round`.\n\nThe `2.0.0` release would be the ideal time for this, as it can introduce backwards incompatible changes.\n\nWhat do you think @ichernev?\n\nHere are some relevant issues.\n#393 #131 #588 #219\n",
    "head_branch": "feature/floor-diffs",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge 3379405b9091be9b0d44f8452bf4df5827968251 into 97e30693bb069c03dc3d7ef34e8c590d81765223"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5a78dfb6b84f242815a",
    "number": 607,
    "body": "",
    "head_branch": "feature/floor-diffs",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5a78dfb6b84f242815b",
    "number": 591,
    "body": "There's some problem with installition of uglify-js, so I cannot minimize language file\n\nAnd I'm sorry for two erroneous pull requests\n",
    "head_branch": "feature/uk-lang",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 30da6ce169ea5d842b10295aac35367b3dd1769b into 9d29cebb64279a1a91002c6a440c6b25ccac3f0e"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa5a98dfb6b84f242815c",
    "number": 590,
    "body": "There's some problem with installition of uglify-js, so I cannot minimize language file\n",
    "head_branch": "feature/uk-lang",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5a98dfb6b84f242815d",
    "number": 589,
    "body": "There's some problem with Makefile in develop branch, so I cannot minimize language file\n",
    "head_branch": "feature/uk-lang",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5aa8dfb6b84f242815e",
    "number": 585,
    "body": "Well, this isn't perfect, but since somebody might want to shorten the literal form of months to something, this is the best option I could come up with.\n",
    "head_branch": "feature/lang-short",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 05a188b7db0db63c0173a8481f8bf06302189dc6 into bbdc56c141e1aa3688413c2181f5c2f6f1be9a0a"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5ab8dfb6b84f242815f",
    "number": 584,
    "body": "See #533.\n\nLowercase `L` should be the shorter counterpart to uppercase `L`. The same units would exist in both formats. Choosing between an ordinal, zero filled, or plain number will depend on whether the format is uppercase or lowercase `L`. The same consideration should be made between long form names and abbreviated names.\n\n``` javascript\nmoment().format('L'); // 01/14/2013\nmoment().format('l'); // 1/14/2013\nmoment().format('LL'); // January 14th 2013\nmoment().format('ll'); // Jan 14 2013\nmoment().format('LLL'); // January 14th 2013 2:08 PM\nmoment().format('lll'); // Jan 14 2013 2:08 PM\nmoment().format('LLLL'); // Monday, January 14th 2013 2:08 PM\nmoment().format('llll'); // Mon, Jan 14 2013 2:08 PM\n```\n\nThe number of characters defines which types of tokens are used.\n\n```\n1    L/l     Month numeral, day of month, year\n2   LL/ll    Month name, day of month, year\n3  LLL/lll   Month name, day of month, year, time\n4 LLLL/llll  Month name, day of month, day of week, year, time\n```\n\nIf the `l ll lll llll` tokens do not exist, they are automatically created by replacing `MMMM` with `MMM`, `dddd` with `ddd`, `MM` with `M`, and `DD` with `D`.\n",
    "head_branch": "feature/lang-short",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge bbdc56c141e1aa3688413c2181f5c2f6f1be9a0a into 2f206f96f952f8862ae8b5e6b7e312319c4d4619"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5ac8dfb6b84f2428160",
    "number": 581,
    "body": "Added format token X, that will parse/print unix timestamp with ms\n\nThis is strongly related to #554\n\nI was somewhat lazy on the test site, @timrwood may propose something more interesting.\n",
    "head_branch": "feature/unix-timestamp-format-token",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 64a4ce01393fe3ed06ab8f1b034432ab3265c5f9 into 3f76ee9788b256aab2acb1465f3bd9c028deab76"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5ad8dfb6b84f2428161",
    "number": 579,
    "body": "See #411.\n\nThis is to ease developer pain.\n\nThe following syntaxes are now supported.\n\n``` javascript\nmoment().add({seconds:1});\nmoment().add('seconds', 1);\nmoment().add('seconds', '1');\nmoment().add(1, 'seconds');\n```\n\nThis syntax is not supported.\n\n``` javascript\nmoment().add('1', 'seconds');\n```\n",
    "head_branch": "feature/add-duration-args",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge 11cdbb4654e4daf42981bc59d459235ee0cfc2d2 into 7127221c54b13c0deae89cbd256751a59683dbc6"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5ae8dfb6b84f2428162",
    "number": 578,
    "body": "Finishing #293\n",
    "head_branch": "feature/lang-abbr-correction",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge 12cef5dc400c0a41b6d349cbd1fbbe0c78a59902 into e7483a75f857e4c8fe883fa1c4d15cbf3002b947"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5af8dfb6b84f2428163",
    "number": 577,
    "body": "See https://github.com/timrwood/moment/issues/484#issuecomment-9923454\n\n**Note** the following comment was copied here for simplicity.\n\nWith the new internals of the languages, all of the properties of a language config get added as `lang._property` if they are not a function, and `lang.property` if they are a function. \n\n[Line 119](https://github.com/timrwood/moment/blob/294685a55a971e3f27291a3659f2708e9a210204/moment.js#L199)\n\n``` javascript\nfunction Language(config) {\n    var prop, i;\n    for (i in config) {\n        prop = config[i];\n        if (typeof prop === 'function') {\n            this[i] = prop;\n        } else {\n            this['_' + i] = prop;\n        }\n    }\n}\n```\n\nThen, the default method and property on the `Language.prototype` could be something like this.\n\n``` javascript\nLanguage.prototype.ordinal = function (number) {\n    return this._ordinal.replace(\"%d\", number);\n};\nLanguage.prototype._ordinal = \"%d\";\n```\n\nThen, languages like Bulgarian, Catalan, Chuvash, and many others can just set a string as the ordinal property which would then overwrite `Language.prototype._ordinal`, but would still use `Language.prototype.ordinal`.\n\n``` javascript\nmoment.lang('bg', {\n   ordinal : \"%d.\"\n});\nmoment.lang('ca', {\n   ordinal : \"%dº\"\n});\nmoment.lang('cv', {\n   ordinal : \"%d-мĕш\"\n});\n```\n\nThen, no other internals would need to change except for [ordinalizeToken](https://github.com/timrwood/moment/blob/294685a55a971e3f27291a3659f2708e9a210204/moment.js#L173) which would actually be simpler.\n\n``` javascript\n// before\nfunction ordinalizeToken(func) {\n    return function (a) {\n        var b = func.call(this, a);\n        return b + this.lang().ordinal(b);\n    };\n}\n// after\nfunction ordinalizeToken(func) {\n    return function (a) {\n        return this.lang().ordinal(func.call(this, a));\n    };\n}\n```\n",
    "head_branch": "feature/ordinal",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge a119b8dfc194bb96bfe3b2bccc0ded4a53d763d6 into e7483a75f857e4c8fe883fa1c4d15cbf3002b947"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5b08dfb6b84f2428164",
    "number": 575,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5b18dfb6b84f2428165",
    "number": 574,
    "body": "This is to support #508 so that you can set a parsing language for in input string + format.\n\nThis way, you don't have to change the global language to parse a moment into another language. Without a language key, it defaults to the current behavior using the global language.\n\n``` javascript\nmoment('2012 July', 'YYYY MMM', 'en');\nmoment('2012 juillet', 'YYYY MMM', 'fr');\n```\n",
    "head_branch": "feature/parse-language",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge 69b5be099ba633d6600c8c9ed764730380bf3610 into f3f2156ae46dd3d03e459a3fde895107300e79b0"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5b28dfb6b84f2428166",
    "number": 572,
    "body": "These are three methods that were replaced by better solutions.\n\nFor `moment.humanizeDuration`, you should use `moment.duration().humanize`.\n\nFor `moment().eod()` and `moment().sod()` you should use `moment().endOf('day')` and `moment.startOf('day')`.\n",
    "head_branch": "feature/deprecation",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge e9432eae03e97441b67cf3a7e284d5cdee806412 into 2f206f96f952f8862ae8b5e6b7e312319c4d4619"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5b38dfb6b84f2428167",
    "number": 571,
    "body": "This is a potential solution to the buggy month/year diffs. However, when working on this I ran into some tricky problems, so I want to outline them here for posterity.\n\nThere are a few different ways to calculate the difference in years. The first way is to compare the percentages through the year.\n\n``` javascript\nstartPercent = 45 / 365; // 0.1232876712328767\nendPercent = 57 / 365; // 0.15616438356164383\ndiffPercent = endPercent - startPercent; // 0.03287671232876713\n```\n\nHowever, this has unexpected results when crossing leap years due to the extra day. 45 days into the year is a slightly smaller percentage on years with 366 days than years with 365 days.\n\n``` javascript\nstartPercent = 45 / 365; // 0.1232876712328767\nendPercent = 45 / 366; // 0.12295081967213115\ndiffPercent = endPercent - startPercent; // -0.0003368515607455602\n```\n\nThe solution I am proposing is that we use the percentages through the months divided by 12.\n\nWe calculate the percentage through the year with month accuracy (0/12, 1/12, 2/12 ... 11/12).\n\nWe then calculate the percentages through the start and end months with millisecond accuracy. For example, (189798626 / (31 \\* 24 \\* 60 \\* 60 \\* 1000)).\n\nThen, the combination of those two diffs results in a slightly more expected result.\n\nAn added bonus to this methodology is that we can use the same calculation for difference in months. Month diff = year diff \\* 12.\n",
    "head_branch": "feature/fix-diff",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge 354eb6c4683f1c1e6c2501e19455686b0cea7941 into 1529fab61d9703c3b3027939ad42bf8288f1cad0"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5b48dfb6b84f2428168",
    "number": 567,
    "body": "adding weeks support to startOf/endOf for convenience and consistency with startOf/endOf('month')\n\nfixes issue raised here: https://github.com/timrwood/moment/issues/558\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 3337d1b54c05e2c0f9c06a386781db0e264991dc into 73e9097fc3c5c9b778e3f7fd0abe56f39cf2e1ce"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5b58dfb6b84f2428169",
    "number": 566,
    "body": "This commit is the product of discussions in #475.\n\n`toString` == `format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ')`, so that \n- works properly on utc and non-utc moments\n- its uniform across browsers\n",
    "head_branch": "bugfix/to-string-fixed-format",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge d3842dbd6f99f5241ee0d803501950806b55d293 into 4a05dce96ee65e1fceeddcbf03501658bb623075"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5b68dfb6b84f242816a",
    "number": 565,
    "body": "This commit is the product of discussions in #475.\n\n`toString` == `format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ')`, so that \n- works properly on utc and non-utc moments\n- its uniform across browsers\n",
    "head_branch": "bugfix/to-string-fixed-format",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5b78dfb6b84f242816b",
    "number": 563,
    "body": "Hi. I know this doesn't adhere to the contribution guidelines, but I don't know if I'll ever manage to finish this... so I thought I'd make a pull request in case someone else wants to finish the Greek language support.\n\nIssues so far:\n1. The tests don't pass of course\n2. Greek language is harder to translate because the months are written a little differently in their possessive form\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5b88dfb6b84f242816c",
    "number": 562,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5b98dfb6b84f242816d",
    "number": 554,
    "body": "Add 'ET' format token to parse and print Epoch timestamp in seconds.\n\nRebased on develop branch.\n",
    "head_branch": "feature/epochtimestamp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5ba8dfb6b84f242816e",
    "number": 553,
    "body": "this allows to format localized dates using the short format for the months.\nexamples:\n  en: Dec 18, 2012\n  de: 18. Dez. 2012\n\nwe need this shorter form. the existing localized format 'LL' uses the long format of the month which needs to much space. we prefer to have the shorter form where the months are abbreviated.\n\nSorry that I directly made the pull request for the developer branch. I created a feature branch for the changes, but finished the feature with git-flow before I pushed to my forked repo. I'm new to git flow. I'll try to do that the right way the next time.\n\nCheers,\n-Andreas \n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5bb8dfb6b84f242816f",
    "number": 550,
    "body": "Denmark uses 24 hour time, not am/pm.\n'Månede' (month) was misspelled, should be 'Måned' (see http://da.wikipedia.org/wiki/M%C3%A5ned)\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge ae6440d26ce2d3b585a2989039d2440c131bec1f into fbf7c316a0d354222c99647d892a8f7a154dbe70"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5bc8dfb6b84f2428170",
    "number": 549,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge f541ba32b3a6497a1c882f38af37a2fea221bfa7 into 5eccc8f44ee813876529d1d521f53d6e4ae76eb3"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5bd8dfb6b84f2428171",
    "number": 548,
    "body": "Add 'ET' format token to parse and print Epoch timestamp in seconds.\n",
    "head_branch": "feature/epochtimestamp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5be8dfb6b84f2428172",
    "number": 547,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5be8dfb6b84f2428173",
    "number": 546,
    "body": "I noticed that:\n\n```\nmoment('2012-02-01T00:00:00').from('2012-12-11T11:29:59') == \"10 months ago\"\n//but...\nmoment('2012-02-01T00:00:00').from('2012-12-11T11:30:00') == \"11 months ago\"\n```\n\nI expected `10 months ago` in both cases (this is the behaviour of `time_ago_in_words` in Rails). I've made a small commit which  changes this behaviour. I haven't had a chance to run the full suit of tests as I'm not on my development machine, but I thought I should open this pull request for some feedback as to weather this change in behaviour is appropriate for Moment. If so I'll go through and fix anything this change breaks!\n",
    "head_branch": "change-relative-time-rounding-behaviour",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 5e1153b90e8541e61e71fc3d98d72702e490458c into e493b4d092a170df357db7c2b2dc3185f221f76f"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5bf8dfb6b84f2428174",
    "number": 543,
    "body": "This pull request adds Thai language locale as well as related test. In Thailand, we actually use this [weird 6-hour clock](http://en.wikipedia.org/wiki/Six-hour_clock) system for referring time but there doesn't seems to be an easy way to do this, so the second- most-common 24-hour clock is used for `LT` instead. (We don't use 12-hour clock in Thailand).\n",
    "head_branch": "feature/thai-language",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 57b3889e8236cdb503f73e3b24d5ef7371cadd90 into 90a784663e20396f33e569a7c8a75f3e567dcfda"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa5c08dfb6b84f2428175",
    "number": 540,
    "body": "Adds tokens 'Q' and 'QQ' to format code for outputting fiscal quarter (e.g. \"Q3\"). See the test cases in 'test/moment/format'. This was useful for me in a recent project.\n\nAlso note that I had to change the use of UglifyJS in the 'mincomment' grunt task, which was throwing an error with the \"latest\" (2.x) version of UglifyJS as specified in package.json. I considered changing the dependency to 1.x which worked, but instead just changed it to the new API. You don't have to accept that commit (bc170a5).\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5c18dfb6b84f2428176",
    "number": 527,
    "body": "There is an issue with grunt throwing `[L1:C0] Unsafe character.`. This issue is fixed on 0.4 version but not released yet.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 0c5914ebb3325801fba39613e8321f7b272ac776 into 228cad1d22c3b0e1768dccce677fffd8c97a53f8"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5c28dfb6b84f2428177",
    "number": 524,
    "body": "This:\n- Adds a Dojo build profile\n- Uses define() anonymously, so that Dojo assigns the module ID at build time (the previous form tickled http://bugs.dojotoolkit.org/ticket/16387)\n\nNote that this only includes `moment.js`.  The languages are dynamically included using a relative path (\"lang/whatever\"), and I don't see an easy way to make that work.\n",
    "head_branch": "dojoBuild",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 80045bf006175da840d8542b0c0b46e50595bb29 into b6b91428ffd310dd5e561fb91197c6d24d84a5f7"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5c38dfb6b84f2428178",
    "number": 523,
    "body": "see https://github.com/timrwood/moment/pull/518\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge bdfa96b4a0c2dc75af790f8558c61872f4accb02 into 81dc67b47b1070c46bd0f01fd555d0549eac29fd"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5c48dfb6b84f2428179",
    "number": 522,
    "body": "This was making the Clojure compiler complain\n",
    "head_branch": "trailing-comma",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge be6bf4cb16d9a79b2f9a6f78430b4af054e49f91 into 5a990196f872ac3dbb520c1bda40d498fde1b3a6"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5c58dfb6b84f242817a",
    "number": 521,
    "body": "Central Atlas Tamaziɣt in both latin and Tifinaɣ. Added Moroccan Arabic and Standard Arabic.\n\nThis will solve #441\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 61ff1c38259cae605751f255f68a3eacffe7fa40 into 81dc67b47b1070c46bd0f01fd555d0549eac29fd"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5c68dfb6b84f242817b",
    "number": 520,
    "body": "Ok, I finally managed to put this together, with help from @m-kas and @evoL. Original pull request #429.\n\n@timrwood, the changes is 4 patches, because I wanted to preserve the original authors. Let me know if you want me to merge all the changes together.\n",
    "head_branch": "bugfix/update-pl",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 20d5ad394d36e3562532b756ed4b70d4e5d70fe8 into e0ad3caebaa4eb4afe3c8e2953f4bd2a35e86417"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5c78dfb6b84f242817c",
    "number": 518,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5c88dfb6b84f242817d",
    "number": 514,
    "body": "As discussed in https://github.com/timrwood/moment/pull/504 I have implemented the `isBefore` and `isAfter` methods.\n",
    "head_branch": "feature/is-before-is-after",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge e7f37ce30f58213f5f8ce5f702f44663a49ad6a8 into 3d14e2d783e859eb6676ce106f8de6ab37e8eb08"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5c98dfb6b84f242817e",
    "number": 512,
    "body": "There was one place left where 2 separately created dates are compared for equality. I checked all moment constructors without arguments and all Date constructors without arguments. They all seem safe now. Hope this error doesn't appear again.\n",
    "head_branch": "fix-flaky-now",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 353830d66032244f4e78f426898ba157ce1c6c14 into 674d81aadd2af46557cc7ebb77c595be35186180"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5ca8dfb6b84f242817f",
    "number": 505,
    "body": "Dangerous practice in general; in my case, messed up the data keys (which were the orders' months, like `[2012, 11]`), only because I printed the month labels with `moment(myKeyArray).format(...)`\n",
    "head_branch": "array-init-no-mutation-dev",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 81adf44cb3b8d0af0647d94127562913fc883d8d into 62b96934e14104ad72af1dd880b2b2e17663b605"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5cb8dfb6b84f2428180",
    "number": 504,
    "body": "Just a couple of simple wrappers around `diff()` which let you determine if a moment is in the past or future of another moment, i.e. you can do this:\n\n``` javascript\nvar past = moment();\n// .. sleep\nvar future = moment();\n\npast.isPast(future) // true\nfuture.isFuture(past) // true\n\n```\n\nI've seen the change to diff in https://github.com/timrwood/moment/pull/345/ which returns a `duration`,  so I know that this implementation will have to change slightly when that branch gets integrated. I'm really happy to make those changes when you integrate that branch and if you want these new methods! :)\n",
    "head_branch": "feature/past-and-future-methods",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5cc8dfb6b84f2428181",
    "number": 503,
    "body": "See #501\n\nNote: This is not ready to be merged in yet, just wanted to open it up for comments.\n\nThis PR will add `moment.fn.isoWeek` and `moment.fn.week` as getter/setter methods.  `moment.fn.isoWeek` is the ISO week as defined at [1]. `moment.fn.week` is a localized week numbering based on the rules at [2].\n\nEach localization is able to specify which day of the week should be included in the first week of the year and which day of the week starts a new week.\n\nIt also adds `W WW Wo` tokens to the format which map to `isoWeek` and redefines the `w ww wo` tokens to use `moment.fn.week`.\n\n[1] http://en.wikipedia.org/wiki/ISO_week_date\n[2] http://www.pjh2.de/datetime/weeknumber/wnd.php?l=en\n",
    "head_branch": "feature/weeks",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge a1c3f4d871dab4b62822a85bbd2bcaa93cbf95d7 into af597b29337f9f503af6d851f697bfa358c8412e"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa5cd8dfb6b84f2428182",
    "number": 502,
    "body": "Sometimes `format YY` test breaks, because numbers get replaced by characters, which comes from the postformat test -- it didn't clean up properly. Now it does clean up, so the issue should not arise again.\n\nIt is not a complete solution tough. If in the future there are more languages that require postformat, all tests that change the language should also, at the end set the language back to English.\n",
    "head_branch": "bugfix/postformat-test-race",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge e5f429df97be36477bc9e96546dcf8588d3052d8 into a0857cd56fcec6de35d14456dc1db311e6011172"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5ce8dfb6b84f2428183",
    "number": 500,
    "body": "#491, fixed jshint issues, merging\n\n@sedovsek thank you for contributing!\n",
    "head_branch": "feature/lang-sl",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 758fe65c40683ee3f4fd3a91c0ecc51fa2f2fac6 into c862f50c340c9adabc7d52fe21a9c88428d28c02"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa5cf8dfb6b84f2428184",
    "number": 499,
    "body": "#491 rebased, fixed jshint warning, merging.\n",
    "head_branch": "feature/lang-sl",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5d08dfb6b84f2428185",
    "number": 497,
    "body": "Dangerous practice in general; in my case, messed up the data keys (which were the orders' months, like `[2012, 11]`), only because I printed the month labels with `moment(myKeyArray).format(...)`\n",
    "head_branch": "array-init-no-mutation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5d18dfb6b84f2428186",
    "number": 495,
    "body": "#492 , #493\n\nSometimes, codes below got error result:\n\n``` javascript\nmoment().format('w')\n```\n\ntest cases from here:\n[http://en.wikipedia.org/wiki/ISO_week_date](http://en.wikipedia.org/wiki/ISO_week_date)\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 5a86b9f3fd0f64749c740686354538a86d71157b into 294685a55a971e3f27291a3659f2708e9a210204"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5d28dfb6b84f2428187",
    "number": 493,
    "body": "#492\n\nSometimes, codes below got error result:\n\n``` javascript\nmoment().format('w')\n```\n\ntest cases from here:\n[http://en.wikipedia.org/wiki/ISO_week_date](http://en.wikipedia.org/wiki/ISO_week_date)\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5d38dfb6b84f2428188",
    "number": 492,
    "body": "Sometimes, codes below got error result:\n\n``` javascript\nmoment().format('w')\n```\n\ntest cases from here:\n[http://en.wikipedia.org/wiki/ISO_week_date](http://en.wikipedia.org/wiki/ISO_week_date)\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5d48dfb6b84f2428189",
    "number": 491,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5d58dfb6b84f242818a",
    "number": 489,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5d68dfb6b84f242818b",
    "number": 487,
    "body": "Bulgarian ordinal numbers were not implemented (returned a fixed suffix '.')\nNow the correct suffix is returned.\n",
    "head_branch": "feature/fix-bg-ordinals",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 54790720b0971e5dbb50be66882e92b6c04ee253 into ed08756f33b24326155c2de25655c7d6aaf5507e"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5d78dfb6b84f242818c",
    "number": 485,
    "body": "This addresses #128 and #479.\n\nThis changes the way language files are defined. Rather than adding the [complex environment forking](https://github.com/timrwood/moment/blob/1445773224bdc284c70bc317fa5d764958805785/lang/bg.js#L59) to each language file, the source files are instead [only targeting Node.js](https://github.com/timrwood/moment/blob/a775f290a7d0f4156ecd72575356370d115eddcb/lang/bg.js#L5).\n\nThen, during the build process, the `require('../moment')` string is replaced with `moment` and is wrapped with the AMD/browser code.\n\n``` javascript\n// en.js source file\nrequire('../moment').lang('en', {\n    // the good stuff\n});\n```\n\n``` javascript\n// en.min.js file targeted towards browsers and Require.js\n(function(){\n    function onload (moment) {\n        moment.lang('en', {\n            // the good stuff\n        });\n    }\n    if (typeof define === \"function\" && define.amd) {\n        define([\"moment\"], onload);\n    }\n    if (typeof window !== \"undefined\" && window.moment) {\n        onload(window.moment);\n    }\n})()\n```\n\nThoughts @mlegenhausen, @Morriz, and @trondkla?\n",
    "head_branch": "feature/lang-amd",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge 48e029dc3d7722bf5293cffaae3a14e58728c5e6 into 73819d01a7c3a3ed61f6bc856ed8f9a5908b624f"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5d88dfb6b84f242818d",
    "number": 483,
    "body": "- with preParse/postFormat support\n",
    "head_branch": "feature/lang-add-nepali",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge c5f56b0e5605731b3563a9931a2ad68af2e2c53d into d896f73872cb640e10be6349914ddae6c0162156"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa5d98dfb6b84f242818e",
    "number": 478,
    "body": "I created Czech translation, using new Language feature currently in `develop` branch (as suggested in #447).\nThere are three tests failing in `create.js`, but they were already failing when I pulled the branch.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 0793f617dd8a908bb94addb199eb3a81b6b41ae8 into 8425d906c6739d3ef1ea5831b742646ff1e932c9"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa5da8dfb6b84f242818f",
    "number": 472,
    "body": "he.js file\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 7031bbafa1e907072f8a57edb906d37d0cd6cdd2 into 1445773224bdc284c70bc317fa5d764958805785"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa5db8dfb6b84f2428190",
    "number": 469,
    "body": "Adding the ability to format to cents (1/100 of a minute). I started looking in to adding cents as an input : \n\n  date = moment('00:00.50','HH:mm.cc');\n\nBut was unable to follow the token path in such a way that I could catch cc and do the translation to seconds.\n",
    "head_branch": "feature/cents",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5dc8dfb6b84f2428191",
    "number": 462,
    "body": "according to Wikipedia(http://en.wikipedia.org/wiki/ISO_8601), it's allowed to omit the letter 'T' when putting the date and the time togethor, so '2012-10-08 21:58:21' is a  valid ISO_8601 format date string.\n\nthe variable 'isoRegex' recognized '2012-10-08 15:15:00' as iso time format(see line 49&50)\n\nbut when parse the iso time format with variable 'isoTimes', it needs 'T', so after parsing , only date is left, the time is lost.\n",
    "head_branch": "hotfix/1.7.2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5dd8dfb6b84f2428192",
    "number": 461,
    "body": "Translations of Indonesian time format in Bahasa Indonesia.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5de8dfb6b84f2428193",
    "number": 460,
    "body": "This is a bit of a restructure, so I thought I would add it as a PR so that other people can comment.\n\nBasically, instead of having to handle callbacks vs array vs strings all throughout the codebase, we can now call a consistent callback function on a `Language` object.\n\nWhen setting language config options, if the option is a function, it will replace the prototype function, otherwise, it will replace the data object that the prototype function uses. [See these lines](https://github.com/timrwood/moment/commit/03d8e7f5319e291ea63685c965100e8e725d50f3#L0R199).\n",
    "head_branch": "feature/lang-cleanup",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge 339389f1622db677da7e5b3e058e046b9862f64c into 1b08d072a48367e746ec6027ebfe5f468d50f038"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa5de8dfb6b84f2428194",
    "number": 458,
    "body": "This cleans up a few hacks that had been used for constructing moments.\n1. [Attaching the source array to the date object it created, then pulling it back off later](https://github.com/timrwood/moment/blob/7bf7d3f99ee1ee631bcbe29ac7778e6e6529b0e8/moment.js#L222)\n2. [Attaching the `asUTC` boolean as the eighth item in the input array](https://github.com/timrwood/moment/blob/7bf7d3f99ee1ee631bcbe29ac7778e6e6529b0e8/moment.js#L354)\n3. [Attaching the `isValid` boolean as the ninth item in the input array](https://github.com/timrwood/moment/blob/7bf7d3f99ee1ee631bcbe29ac7778e6e6529b0e8/moment.js#L357)\n\nNow, when `moment()` or `moment.utc()` are called, a `config` object is created that gets passed through all the functions necessary to convert the input to a `Moment`. Then, all the cases above can just attach their data to the config object.\n1. [config._a](https://github.com/timrwood/moment/blob/1fca58d212e1cf3f9a436f4b981bf79c1957643b/moment.js#L621)\n2. [config._useUTC](https://github.com/timrwood/moment/blob/1fca58d212e1cf3f9a436f4b981bf79c1957643b/moment.js#L564)\n3. [config._isValid](https://github.com/timrwood/moment/blob/1fca58d212e1cf3f9a436f4b981bf79c1957643b/moment.js#L513)\n",
    "head_branch": "feature/constructor-refactor",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5df8dfb6b84f2428195",
    "number": 451,
    "body": "Its currently hard to mock the native Date object for the purposes of unit tests etc because moment has a  locally scoped reference. You can mock Date before moment is initialised but this is a) not reversible afterwards and b) hard to do when using modular code (e.g. requirejs) \n\nIf we remove Date from the iife then it can be mocked as needed.\n\nNote: this issue is also discussed in https://github.com/cjohansen/Sinon.JS/issues/171\n\nP.S. Ive tried to follow the recommend pull request process but please do let me know if Ive made any mistakes as this is my first pull request! :)\n",
    "head_branch": "feature/overridable-date",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 48ac6c3eb3205851ee2424c0e0c72ae11bd44fe3 into e43184a97c6209b73519b133b6139d566213af8b"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa5e08dfb6b84f2428196",
    "number": 446,
    "body": "Changes:\n- Months and days names in Spanish are written in lowercase.\n- Added tests\n\nIt is correctly explained in Wikipedia, as in the Spanish Royal Academy of the Language (RAE):\n\nhttp://es.wikipedia.org/wiki/Wikipedia:Convenci%C3%B3n_para_nombrar_nombres_propios#Errores_t.C3.ADpicos\n\ncc @timrwood\n",
    "head_branch": "spanish",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 5fe76277c84f3f1677ae5e529daae2fb7cc6b9fb into a5af2ea64f11fc24ca4ed4bc9b9af3e7f817ef8b"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5e18dfb6b84f2428197",
    "number": 445,
    "body": "Changes:\n- Months and days names in Spanish are written in lowercase. See #438\n- Added tests\n\nIt is correctly explained in Wikipedia, as in the Spanish Royal Academy of the Language (RAE):\n\nhttp://es.wikipedia.org/wiki/Wikipedia:Convenci%C3%B3n_para_nombrar_nombres_propios#Errores_t.C3.ADpicos\n",
    "head_branch": "spanish",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5e28dfb6b84f2428198",
    "number": 444,
    "body": "This should make it a bit easier to serialize objects which use moment objects as properties. :)\n\nI'm using this with Backbone, where my models use moment objects which are serialized through JSON.stringify().\n",
    "head_branch": "feature/toJSON",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5e38dfb6b84f2428199",
    "number": 443,
    "body": "The pull request at https://github.com/timrwood/moment/commit/57ccb0ca3825d090fc911ef0a3acccfa33c2f0a7 added a section to export moment for AMD modules but this doesn't work for require.js. When trying to load moment.js from require I always get undefined.\n\nI added an additional check to see if require is defined and if so export moment using require's define function (different set of parameters than what must be standard AMD). With this change I can load moment using require.js.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5e48dfb6b84f242819a",
    "number": 441,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5e58dfb6b84f242819b",
    "number": 439,
    "body": "test will be added soon =)\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5e68dfb6b84f242819c",
    "number": 435,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5e78dfb6b84f242819d",
    "number": 429,
    "body": "Present Polish translation has some grammatical inaccuracies on 'lastWeek' cases. I have improved them, and Polish translation is grammatically correct at the moment.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5e88dfb6b84f242819e",
    "number": 425,
    "body": "Here's grunt!\n\nTo see tasks, use `grunt -h`.\n\nNow, while writing code, you can do `grunt watch` to automatically run the unit tests and jshint on every file save.\n\nAlso, `grunt zones` can be used to run unit tests in all timezones (on a unix system).\n",
    "head_branch": "feature/grunt",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge 57ccbaa859c0fff90cfe3dc56363326d72683466 into 6b56c7e4cf472414583311b3d7f1717a7782a6f2"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa5e98dfb6b84f242819f",
    "number": 420,
    "body": "I read up a bit and confirmed my suspicion that the Esperantist community primary uses 24-hour time.\n\nAlso fixed an errant English header pointed out by @wilkie.\n",
    "head_branch": "feature/esperanto-cleanup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 6b9ab35a06cf5eb17e6ce59f4261e7eb76a80e4a into 8cfa3a3e8286090d2981efe2d840c9db2f58b81e"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa5ea8dfb6b84f24281a0",
    "number": 419,
    "body": "Fixed tests for `moment(String, String)` and introduced failing tests for `moment.utc(String, String)`.\n\nOne possible solution of the timezone issue is to search for timezone format pattern in format (`Z` or `ZZ`). So if you want to parse sth that has +/- in front of the year -- you'd better specify a format, otherwise it won't work :) What do you think?\n",
    "head_branch": "timezone-detection-bug",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge ba74292b1aab0796b3a8cf506543b9c3bae2c1d1 into 7740b99d8547cd88ba3696e7ec2578238fe3b1e6"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5eb8dfb6b84f24281a1",
    "number": 417,
    "body": "Requested by @rockymeza in #370.\n",
    "head_branch": "is-same",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 8dd2af94f355033cc005dfc2c5a1b030a6ac3c27 into 6b56c7e4cf472414583311b3d7f1717a7782a6f2"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5ec8dfb6b84f24281a2",
    "number": 416,
    "body": "Indonesian translations with tests.\n\nThere's one itch though: in English, ordinal numbers can be written with suffix:\n\n```\n1st\n2nd\n3rd\n4th\n```\n\nUnfortunately, in Indonesian such ordinal numbers are written with prefix:\n\n```\nke-1\nke-2\nke-3\nke-4\n```\n\nAnyway, in practice Indonesians never express date in the form like \"February 14th\" so I'm currently leaving the ordinals in their English form.\n",
    "head_branch": "feature/lang-id",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 040bbe54b9a35f9acbaf33ff0b8e3d77e05a34a7 into 289032346ab2f2697c01a7c1f73b3061ab4cc5f2"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa5ed8dfb6b84f24281a3",
    "number": 415,
    "body": "",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 2e1492170f9c8a57503d23c6b28816c402effd68 into d3a73cdd960d490b2260680e88c998668ae2bcde"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa5ee8dfb6b84f24281a4",
    "number": 414,
    "body": "",
    "head_branch": "feature/esperanto-translation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 2d77b09cf7cc95541c6a0bafb60f3bd61a6d4899 into 3f67dc6abdd5564d1f2653ac5d9ee9679879c3d6"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa5ee8dfb6b84f24281a5",
    "number": 413,
    "body": "Weekdays and month names are not capitalized in Danish, unless they start a sentence.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5ef8dfb6b84f24281a6",
    "number": 401,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5f08dfb6b84f24281a7",
    "number": 398,
    "body": "Chuvash uses an affix to express the future \"fromNow\". This affix can have different forms depending on preceeding sound. I wrote about this issue in my blog post: [Chuvash localization of moment.js](http://sharepointkunskap.wordpress.com/2012/08/11/chuvash-localization-of-moment-js/). To solve this, the core moment.js has to support custom logic for future expressions.\n\nIn this PR I added tests for this for Chuvash, changes in lang/cv.js (a function instead of a string) and a change in \"humanize\" function in moment.js file.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5f18dfb6b84f24281a8",
    "number": 395,
    "body": "Actually, the documentation says:\n\n```\nmoment().format('\\\\\\\\L'); // outputs 'L'\n```\n\nbut this not works properly. I tried to find a solution, but for now, I could not find any.\n",
    "head_branch": "bug/wrong-scaping-testcase",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5f28dfb6b84f24281a9",
    "number": 390,
    "body": "I wrote this as an experiment and figured I'd submit it as a pull request. I created a global flag that makes moment objects immutable, forcing each of the manipulation functions to clone the moment object before\ndoing their work. So:\n\n``` js\nmutable = moment()\nmutable.add(\"s\", 3) == mutable  // => true\nmoment.immutable = true\nimmutable = moment()\nimmutable.add(\"s\", 3) == immutable  // => false\n```\n\nI do like immutability a lot, but I could see where this might not be ideal maintainability-wise, so NBD if you don't want it. Let me know what you guys think.\n",
    "head_branch": "immutable_maybe",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5f38dfb6b84f24281aa",
    "number": 388,
    "body": "Proper Romanian (ro) translations + tests to match.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge a741a68715438560f19a012b3f64823dc43ea985 into 92817ba069f8b0b377303db0f00ea559f7ddee8a"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa5f48dfb6b84f24281ab",
    "number": 386,
    "body": "Hello! This is only a prototype, still not finished. But I would like to know, whether it is feasible to integrate it into the core of \"moment\", when finalized, and created the respective tests.\n\nI saw the plugin \"moment-strftime\" and is made in coffescript which adds an additional dependency, also not quite complete. Not everyone uses and not all want coffescript use. I think it would be interesting to have this feature in the core of \"moment\".\n\nI have many projects needed a good interaction between the unix format (they are almost the same as python) and many cases I had to do it by hand. Datejs know, but the code is quite complex, and has given me enough problems in web browsers.\n\nWith this, you want to convey, I think I'm not the only one who would appreciate having this feature on \"moment\";)\n",
    "head_branch": "feature/strftime",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5f58dfb6b84f24281ac",
    "number": 382,
    "body": "e.g.\n\ntoday\ntomorrow\nyesterday\nApr\nApr 25th\n25 April\n2 days\n3 weeks ago\nlast year\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5f68dfb6b84f24281ad",
    "number": 381,
    "body": "With complete test\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 3f899573c7089d4001c7a5d0ba1743711e26b9ca into 92817ba069f8b0b377303db0f00ea559f7ddee8a"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa5f78dfb6b84f24281ae",
    "number": 374,
    "body": "Added norwegian language file.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5f88dfb6b84f24281af",
    "number": 373,
    "body": "It seems reasonable to support all the dates that JavaScript's Date can support. However, extending the existing YYYY format specifier to include 6-digit dates (and negative dates) will break when there are no separators, e.g. it would incorrectly attempt to parse 12345678/YYYYMMDD as the year 123456.\n",
    "head_branch": "big-years",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 7263f0647dd187d1ed7341d0ac0701dfba3a8705 into b661e8dbe232ccc04780ec09a607e86403ac9a38"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5f98dfb6b84f24281b0",
    "number": 372,
    "body": "Here is my contribution attempt with a bulgarian language/localization support. If there is something out of standarts or needs some final touches - i will try to fix it :) Thanks.\n",
    "head_branch": "feature/support-for-bulgarian",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge e9930670815eebcca23f7b9481eb56024d64b725 into d620e68453a3354cc04f9d9efe794c354fdcfc1f"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa5fa8dfb6b84f24281b1",
    "number": 370,
    "body": "Have added a simple feature for comparing a moment to another moment and determining whether they are on the same day. A new prototype method isSameDay that takes another moment as input.\n\nAlso fixed a bug in the current develop branch with the pt-br language tests.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5fb8dfb6b84f24281b2",
    "number": 368,
    "body": "Sorry for requesting this against master, and not develop. Blunder on my part. Can't find anywhere to correct it. Let me know if I should submit it again towards the correct branch.\n\nAdded a new feature isSameDay, that compares two moments and checks that they are on the same day.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5fc8dfb6b84f24281b3",
    "number": 367,
    "body": "Updated version of #366 for the develop branch.\n\nAccording to ECMA-262, `new Date(y, …)` will auto-convert `y` to `1900 + y` if `0 ≤ y ≤ 99`, hence setFullYear or setUTCFullYear is used instead.\n\nThis also zero-pads the year for the \"YYYY\" format, since the year may not necessarily have four digits.\n\nLastly, the pt-br test is adjusted to test for the first day of the month instead of the zeroth (which was causing it to fail).\n",
    "head_branch": "dev-first-century",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5fd8dfb6b84f24281b4",
    "number": 366,
    "body": "According to ECMA-262, `new Date(y, …)` will auto-convert `y` to `1900 + y` if `0 ≤ y ≤ 99`, hence setFullYear or setUTCFullYear is used instead.\n\nThis also zero-pads the year for the \"YYYY\" format, since the year may not necessarily have four digits.\n",
    "head_branch": "first-century",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5fe8dfb6b84f24281b5",
    "number": 364,
    "body": "Wrong days number in days in month test case message.\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa5ff8dfb6b84f24281b6",
    "number": 363,
    "body": "Wrong days number in `days in month` test case\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa6008dfb6b84f24281b7",
    "number": 362,
    "body": "his is a generalized version of sod, that works for years, months,\ndays, hours, minutes and seconds.\n\nUsage\n\n``` javascript\nmoment().startOf('year');  // x = new Date(); x.setMonth(0); x.setDate(1); x.setHours(0, 0, 0, 0);\nmoment().startOf('month'); // x = new Date(); x.setDate(1); x.setHours(0, 0, 0, 0);\nmoment().startOf('day'); // moment().sod() OR x = new Date(); x.setHours(0, 0, 0, 0);\nmoment().startOf('hour'); // x = new Date(); x.setMinutes(0); x.setSeconds(0, 0);\nmoment().startOf('minute'); // x = new Date(); x.setSeconds(0, 0);\nmoment().startOf('second'); // x = new Date(); x.setMilliseconds(0);\n```\n",
    "head_branch": "startOf",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa6018dfb6b84f24281b8",
    "number": 361,
    "body": "This is especially useful in testing.\n\nUsage\n\n``` js\nmoment.mockNow = moment().day(3);\nmoment().valueOf() === moment.mockNow.valueOf();\n```\n\nYou can assign anything to `moment.mockNow` that you would normally pass to a moment constructor (except it doesn't allow string + format).\n",
    "head_branch": "mockNow",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa6028dfb6b84f24281b9",
    "number": 358,
    "body": "Now I am sending on develop branch!!\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 40cc6ed14f6aaedc26af7c57b41616011bb37dc8 into de11511db72f7db5685af5cb80985bdb310cd96e"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa6038dfb6b84f24281ba",
    "number": 355,
    "body": "Added support for Canadian variants of English and French. Formatting based on MacOS date representations for that locale (and also personal experience).\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge aed838d89832e542b03dd60b07dbe43dac9bc7b0 into 0ef8c820a483a1d4d93bf6062d5558e81d4c8d23"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa6048dfb6b84f24281bb",
    "number": 354,
    "body": "Adding i18n for Canadian English and Canadian\nFrench. Unit tests based on existing fr and en\nlanguages. Formats based on MacOS X date formats for\nCanadian localizations.\n",
    "head_branch": "6074884",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa6058dfb6b84f24281bc",
    "number": 353,
    "body": "Hi, this is my contribution sending the brazilian date patterns!\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa6068dfb6b84f24281bd",
    "number": 347,
    "body": "In the Italian translation file, add accents to week days (like `Lunedi` -> `Lunedì`) and an apostrophe to `un'ora` (an hour). Update tests as well.\n",
    "head_branch": "fix-it-translation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge f74a040aad3060c95ebe01a9c16be71e161bb5ed into 17a4d26eee4d3c39546351ea7c6ecdb0072c5a8e"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa6078dfb6b84f24281be",
    "number": 346,
    "body": "Month abbreviations for nl are out of sync with CLDR, specifically 'mar.' -> 'mrt.' and 'mei.' -> 'mei'.\nAdditionally when a month abbreviation is surrounded by dashes (f.e. D-MMM-YYYY) , the dot is now omitted for a cleaner representation. For the original discussion, see #325.\n",
    "head_branch": "b74a212203c2ba94b26163ff4942a9885e322fd7",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 698f38f958cab4abc1ac4ce51ab8209be78ff375 into 5705302edba7a2fcc19047dacad17a8ab54e65b6"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa6078dfb6b84f24281bf",
    "number": 345,
    "body": "As discussed in #282, the diff function now returns a duration instead\nof just a millisecond number for the one parameter incantation.\nInternally, diff uses the duration to perform the math.  This commit\npasses all but two of the unit tests (fails regarding returning years as\nfloats).  This is not ready to be merged in.\n\nI am opening this pull request to ask for help as to how to correctly write this function and to start some momentum on the feature.\n",
    "head_branch": "feature/diff-duration",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa6088dfb6b84f24281c0",
    "number": 344,
    "body": "Basically just accents on the days of the week and `\"un'ora\"` instead of `\"un ora\"` (\"an hour\", which, being feminine in Italian, requires an apostrophe)\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa6098dfb6b84f24281c1",
    "number": 343,
    "body": "#341, #312\n\nThe regexes used to determine the cases might need tweaking, but so far it seems to work OK for formats like \"31 декабря 2010 00:00\" and \"В прошлую пятницу в 23:53\".\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 653390a69a73ad965922bd0c66cebfd3fca8c352 into c018776284d0bcd9b3a4e67160336ff7b85915ae"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa60a8dfb6b84f24281c2",
    "number": 342,
    "body": "Instead of using `window` object directly, establish the root object which will be `window` in the browser or `global` on the server.\n\nThe change imitated underscore.js.\nThis change would also make moment.js possible to use on mongoDB shell.\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge fe563d87ba257e070c132d79bb5159c9c5d6adda into 5732c1d39bf7ca09f99d6769c31f948c06c55c62"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa60b8dfb6b84f24281c3",
    "number": 340,
    "body": "Fixed ordinal function in TR translations, where it was left the same as the English version. This required some more tests to cover edge cases, which are included. All language tests are green for me.\n",
    "head_branch": "feature/lang/tr-ordinal",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 787644c8125687bb37fbb6c96d97c62433eed1f0 into 0a2665c77174a81eaf4020238f8fa82a1227db2c"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa60c8dfb6b84f24281c4",
    "number": 339,
    "body": "Adds new tests to assert the policy that manipulation methods are mutable.\n\nAlso asserts that sod and eod are not mutable.\n",
    "head_branch": "feature/mutable-manipulation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge f7b65ec76d981e8e3413324ed6eb98082327f1f9 into d0234679c8bba50e1ebea206dc5e16be7eacb0d2"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa60d8dfb6b84f24281c5",
    "number": 338,
    "body": "Please, this time a correct pull request?!\nFixes the test description for the diff test \"1 - .5\"\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 3ba765e791d9701096bd37860725b84281aac306 into cff663569710a7e89eb5fecbd2c95a155dfd37c1"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa60e8dfb6b84f24281c6",
    "number": 337,
    "body": "This time against the develop branch :-)\n\nEdit: Argh, wrong again! Sorry, my first try to use this GitHub feature :-(((\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa60f8dfb6b84f24281c7",
    "number": 336,
    "body": "Nothing critical, but when I was presented your lib by a colleague, I reviewed some unit tests - and (thanks to Murphy's law!) I found this one. The test itself is okay, just the description was wrong. This patch fixes it.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa6108dfb6b84f24281c8",
    "number": 332,
    "body": "I have provided a `lang` method on both moment.fn and moment.duration.fn\nto allow for instances of moments and durations to have their own\nlanguage configuration.  Additionally, the `lang` method is a getter\nwhich returns either the moment's language definition object or the\nglobal language definition object if the moment did not have one set.\n\nAlso, I modified the code surrounding meridiem to always expect a\nfunction.  This simplifies the formatter code, and also ensures\ninheritability of language configuration values.\n",
    "head_branch": "feature/instance-lang",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge 02fac57479f6e314fd74d11ad039e02ba61875a5 into 58998f7c35bd50b9acefcb514c8aa9e15f4513c9"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa6118dfb6b84f24281c9",
    "number": 331,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge b1c519b36b9468a1c8f6feea31a992a8e3435472 into 4b91be26ac82ee99fd00ca8cb2ae23165ba98c9b"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa6128dfb6b84f24281ca",
    "number": 330,
    "body": "In order to allow multiple languages on one page, we need to allow for\ndifferent instances of the moment library that allow simultaneously\ndifferent settings.  In this commit, I split up the code into two parts,\nthe library-instance specific code and the global, never changing code.\nEverything instance specific falls into the new `instantiateLibrary`\nfunction which is exposed at `moment.instantiateLibrary`.\n\nThis is related to #292.\n\nIt is not ready to be merged in, for the record.\n",
    "head_branch": "feature/library-instances",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa6138dfb6b84f24281cb",
    "number": 327,
    "body": "Turkish language do not use ordinal suffixes for any date patterns so removed that function from TR translations file.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa6148dfb6b84f24281cc",
    "number": 326,
    "body": "Hey Tim!\n\nHere is the Romanian localization.\n\nThank you for the great moment! ;-)\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa6158dfb6b84f24281cd",
    "number": 325,
    "body": "This allows for custom formats such as 'D-MMM-YYYY'. Current code gives f.e. '23-jun.-2012' while '23-jun-2012' is expected/preferred.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa6168dfb6b84f24281ce",
    "number": 322,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa6178dfb6b84f24281cf",
    "number": 318,
    "body": "",
    "head_branch": "i18n-hu",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge c5581a4cb6f2fd8595237ea84ece0d5754403f22 into 589d2ddd5e174b68ca34931e328ea0cee97e4bca"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa6188dfb6b84f24281d0",
    "number": 317,
    "body": "Not ready to pull in, opening discussion.\n\nTODO: inline L LL LLL LLLL LT tokens.\n\nSome speed tests:\n\nhttp://jsperf.com/date-formatting/8\nhttp://jsperf.com/momentjs-cached-format-functions\n\nAll `make test-moment` tests are passing now, need to add support for `L LL LLL LLLL LT` for all tests to pass.\n\nFile size difference\n-108b minified\n+75b gzipped\n\nThough there are probably some byte squeezing techniques we could add.\n",
    "head_branch": "feature/cached-formatter",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa6188dfb6b84f24281d1",
    "number": 313,
    "body": "#312\n",
    "head_branch": "feature/add-month-name-callback",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa6198dfb6b84f24281d2",
    "number": 311,
    "body": "I just added `moment.isPast()` and `moment.isFuture()` comparison methods. This can be used when you may want to conditionally print something that is dependent on a moment being in the future or in the past. e.g.:\n\n``` javascript\nvar eventStartTime = moment(eventModel.get('start_time'));\n\nif (eventStartTime.isPast()) {\n  return \"Last Event: \" + eventStartTime.fromNow();\n} else if (eventStartTime.isFuture()) {\n  return \"Next Event: \" + eventStartTime.fromNow();\n}\n```\n\nI'm thinking about whether an `isPresent()` method with an optional tolerance passed in would be useful, e.g. `moment().subtract('minutes', 30).isPresent('hours', 1);` would return `true`. This could be used in cases where you want to do something like: \n\n``` javascript\nif (eventStartTime.isPresent('hours', 1) { \n  return \"This event is happening now\"; \n} \n```\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa61a8dfb6b84f24281d3",
    "number": 307,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa61b8dfb6b84f24281d4",
    "number": 262,
    "body": "This would be useful for a datepicker or other calendar implementation, for example, where the convention is two-letter day column headers.\n",
    "head_branch": "feature/weekdaysMin",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge ed06d372009d1d149d09bcc98693e142d3282a56 into 618441a45f2937d9294e92f73d624f5a7d0ffe1a"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa61c8dfb6b84f24281d5",
    "number": 306,
    "body": "Not ready to be pulled in yet, just wanted to open the discussion.\n",
    "head_branch": "feature/isValid",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge 568bb72b7ffac1479a4509c246166fbbb501388e into 618441a45f2937d9294e92f73d624f5a7d0ffe1a"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa61d8dfb6b84f24281d6",
    "number": 305,
    "body": "Now I updated to pull into develop branch. Thank you!\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 8e0845f219ee839abbccf5a9d808b4d0942ec1ae into 68cfce0ee2b735738673a15e4074c81d8143e352"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa61e8dfb6b84f24281d7",
    "number": 304,
    "body": "Chuvash language file, test file and minified files.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa61f8dfb6b84f24281d8",
    "number": 300,
    "body": "it should be \"内\" instead of \"后\"\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 9f222601be7deb3f4abb36e018ce975978583faa into fb6bfa84822977f103ea4d4d3316b656272d96ec"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa6208dfb6b84f24281d9",
    "number": 284,
    "body": "I found one error in kr.js\nthat is, \n\nmoment().subtract('days', 3).calendar()\n\"지난주 일요일 undefined 3시 44분\"\n\nso i fixed kr.js. \"undefined -> 오전/오후\"\n\nthanks.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa6218dfb6b84f24281da",
    "number": 283,
    "body": "Hi,\n\nI have created generic endOf and startOf methods that fill the same purpose as the methods eod and sod but not just for days. You supply a string parameter 'years', 'months', 'days', 'hours', 'minutes' or 'seconds' and get the end or start of the year or month for example.\nAlso changed the existing eod and sod methods to use the generic methods to reduce duplication.\n\nUnit tests added and passed in the sod_eod.js.\n\nI think this is a usefull feature which reduces the code needed to do it for a user of the library.\n\nThank you!\nMattias\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge dcb4533d6b73a2ab6572b105c6c663094e77ca44 into 9423041368e832270aaea843716378228f90d62a"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa6228dfb6b84f24281db",
    "number": 278,
    "body": "Hi,\n\nI think there is a problem with how eod() handle UTC formatted date. I use the version bundled with Kalendae a JS calendar widget.\n\nIn the documentation it's written:\n\n> Set the time to the end of the day.\n> \n> moment().eod(); // set the time to 11:59:59.999 pm tonight\n> This is essentially the same as the following.\n> \n> moment().hours(23).minutes(59).seconds(59).milliseconds(999);\n\nBut when you use eod(), the date is converted to localtime.\nex: \n\n> moment.utc(\"03-07-2012\",\"MM-DD-YYYY\").eod().toString()\n> \"Wed Mar 07 2012 23:59:59 GMT+0100 (CET)\"\n> Kalendae.moment.utc(\"03-07-2012\",\"MM-DD-YYYY\").hours(23).minutes(59).seconds(59).milliseconds(999).toString()\n> \"Thu Mar 08 2012 00:59:59 GMT+0100 (CET)\"\n\nI've created a unit test to verify the behavior. \n\nregards\n\nPS: Thanks for this great lib\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa6238dfb6b84f24281dc",
    "number": 269,
    "body": "This actually does an explicit moment check when parsing to create a moment object.\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa6248dfb6b84f24281dd",
    "number": 268,
    "body": "**Note:** this pull request is not ready to be merged in.\n\nI am opening up the version 1.6.0 release for discussion.  In this pull request, I think we should talk about the features that need to be added or removed before we can cut a new version of moment.  Here are some changes that I think should be in version 1.6.\n## Languages\n-   #260, grammatical change for Swedish\n-   #229, Japanese\n-   #246, Icelandic\n-   #222, #221, Chinese fixes\n-   #226, Finnish\n## To be removed\n-   #228, old-style am/AM/pm/PM handling\n-   #227, z zz timezone tokens\n-   #216, moment.fn.native\n## New Features that have already been written\n-   #253, Ender compatibility\n-   #222, new-style am/AM/pm/PM handling\n-   #266, Adding a getter for moment.lang()\n-   #263, new parser\n-   #254, support for S SS and SSS millisecond tokens\n-   #236/#265, Durations\n-   #267 - moment.clone() does not copy the `_isUTC` property\n-   #261 - moment.diff() does not take into account utc mode\n-   #213 - moment.unix() and moment.fn.unix()\n-   #275 - moment.utc(string) parses ISO8601 as local time when timezone is missing\n## New features that have not been written\n## Things that should not go into this release\n-   #266, per-instance language configuration -- 1.7 ???\n-   #235, moment.fn.isValid -- 1.7 ???\n-   #262, Two letter month name formatting tokens -- 1.7 ???\n-   #283, Generic endOf and startOf to abstract sod/eod -- 1.7 ???\n",
    "head_branch": "release/1.6.0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa6258dfb6b84f24281de",
    "number": 267,
    "body": "It appears when you are working with two moment objects and you take the diff, the input moment's _isUTC is ignored when you parse the input into inputMoment. I've done a check to see if it looks like a moment object (by checking the _isUTC to see if it is defined) and if it is, then it just copies the input rather than parsing it. I think it should work fine on regular date objects as there is no _isUTC member.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa6268dfb6b84f24281df",
    "number": 265,
    "body": "This is a new feature based on the discussion in #236.\n\nI created a new object called Duration that can be `add`ed and `subtract`ed.  It can be instantiated using the `moment.duration` function.  There are three ways to instantiate a Duration object: Object, key/value, and millisecond.  The following five invocations result in essentially the same Duration object.\n\n``` javascript\nmoment.duration({seconds: 45});\nmoment.duration({s: 45});\nmoment.duration(45, 'seconds');\nmoment.duration(45, 's');\nmoment.duration(45000);\n```\n\nI exposed the `Duration.prototype` on `moment.duration.fn`.  On it currently there are two methods: `toValue` and `humanize`.  `toValue` returns the milliseconds of all the options added together.  `humanize` contains the functionality that `moment.humanizeDuration` used to contain.\n\nI deprecated `moment.humanizeDuration`, but I left it and the tests in place.  It now relies on `Duration.prototype.humanize`.  `moment.fn.from` also relies on the `Duration.prototype.humanize` now instead of `humanizeDuration`.\n## Things that it doesn't do (yet)\n-   There is no `isDuration` function to type-check Duration objects.\n-   When `add`ing using a duration, it basically clones the duration object by calling `moment.duration` on it.  So, there is no special handling of Durations versus normal Objects in adding and subtracting.\n-   If you create a Duration of 7 days and check the `weeks` property, it will still be zero.\n## Don't merge this in yet.\n\nI am opening this pull request so that we can continue the conversation and also start developing this feature.\n\ncc @nilakanta\n",
    "head_branch": "feature/durations",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa6278dfb6b84f24281e0",
    "number": 260,
    "body": "I took out the space between dddd AND [en klockan] in the sentence: \nlastWeek: '[Förra] dddd[en klockan] LT',\n\npreviously: lastWeek: '[Förra] dddd [en klockan] LT',\nBecause dddd refers to the name of the day AND [en... to the specific day, e.g. \"Förra tisdagen klockan 12:00\". tisdag + en needs to be concatenated to get it grammatically correct.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa6288dfb6b84f24281e1",
    "number": 253,
    "body": "The default behaviour of Ender is to attach everything on `module.exports` to the global `ender`/`$` object which messes up _moment_, you get all of the `moment.*` methods attached, and lose `moment()`. You also get `window.moment` which is unnecessary.\n\nThis PR attaches _moment_ as `$.moment` so it can be used as `$.moment(date).add('days', 10').format('YY-MM-DD')`. The 'ender' keyword in _package.json_ also makes it show up as an Ender-compatible lib in an `ender search`.\n\nHope this is acceptable!\n\nThanks for the **great** lib!\n",
    "head_branch": "ender",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa6298dfb6b84f24281e2",
    "number": 248,
    "body": "Milliseconds formatting in moment(date, format), support for ISO dates that supply extremely precise times (.000001 seconds).\n\nExample of a date like this would be: 2012-04-02T22:25:45.276419-08:00\n\nThis comes from JSON.NET's serialization of DateTimeOffset objects. Enabled this format to function when passed in to the moment(date) constructor as a valid ISO format.\n\nResults:\n\n> moment(\"2012-04-02T22:25:45.276419-08:00\").toString()\n\nBefore:\n\"Thu Apr 05 2012 09:44:45 GMT-0500 (Central Daylight Time)\"\n\nAfter:\n\"Tue Apr 03 2012 01:25:45 GMT-0500 (Central Daylight Time)\"\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa62a8dfb6b84f24281e3",
    "number": 246,
    "body": "Those couple of failing tests are due to missing inflection (#244) and limited quantity support (#243).\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge ceba696e74179c831ca308003e2096a905c0f761 into 86920d99b1f04bba3543159d90cb7557c0a90787"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa62b8dfb6b84f24281e4",
    "number": 232,
    "body": "I have a website where user can check status of batch run. Time varies from several hours to few minutes, and people tend to wait last minutes watching countdown. **moment(timestamp).fromNow()** was really useful, but it shows \"a few seconds\" awfully long period (one minute is long time to wait, when you think it's just ten seconds or so).\n\nChanged logic for relativeTime: \n\n``` javascript\nif (seconds > 10 && seconds < 55) {\n show \"%d seconds\"\n} else if (seconds < 10) {\n show \"a few seconds\"\n}\n```\n\nUnfortunately, I don't have Node installed, so I didn't update minified version or tests (which might be enough reason to reject this pull request).\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa62b8dfb6b84f24281e5",
    "number": 229,
    "body": "If the digit was allowed in month, please merge those code.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa62c8dfb6b84f24281e6",
    "number": 226,
    "body": "Okay, so here's the Finnish translation with the tests included. I didn't do a test for the added isFuture argument , but I tested that all the tests and translation tests passed. This should be good to go.\n\nAlso my friend had a read and spotted an issue which is also fixed here.\n\nCloses issue https://github.com/timrwood/moment/issues/218\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 625f5d6214accba9bfbaebd283b084baa4f392f7 into a5475f5bd3a98432702141eb2baec864c820b6f8"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa62d8dfb6b84f24281e7",
    "number": 225,
    "body": "Here's the Finnish translation. I didn't add a separate test for the isFuture, but at least all the other translations work and the current test cases passed, so it should be good to go.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa62e8dfb6b84f24281e8",
    "number": 224,
    "body": "I also added a regression test to be able to test this without having to wake up at 1 o'clock in the morning.  This addresses #223.\n",
    "head_branch": "gl-1oclock",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 95ad36b931ef23384a283f0cca24cd82eed14e40 into 8a5a4735848703b22be655a83f3d9819479cc7a6"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa62f8dfb6b84f24281e9",
    "number": 222,
    "body": "In Chinese, there are more values for the meridiem value than just AM and PM.  There are values that mean morning, before noon, noon, afternoon, and night time.  I had to modify moment.js to handle a callback or default to the previous behavior.\n\nIf you accept #221, I am pretty sure that you will have a merge conflict in the `calendar day` tests.  Here is what those tests should look like:\n\n``` javascript\n// zh-cn.js\ntest.equal(moment(a).calendar(),                     \"今天早上2点00\",     \"today at the same time\");\ntest.equal(moment(a).add({ m: 25 }).calendar(),      \"今天早上2点25\",     \"Now plus 25 min\");\ntest.equal(moment(a).add({ h: 1 }).calendar(),       \"今天早上3点00\",     \"Now plus 1 hour\");\ntest.equal(moment(a).add({ d: 1 }).calendar(),       \"明天早上2点00\",     \"tomorrow at the same time\");\ntest.equal(moment(a).subtract({ h: 1 }).calendar(),  \"今天早上1点00\",     \"Now minus 1 hour\");\ntest.equal(moment(a).subtract({ d: 1 }).calendar(),  \"昨天早上2点00\",     \"yesterday at the same time\");\n```\n\n``` javascript\n// zh-tw.js\ntest.equal(moment(a).calendar(),                     \"今天早上2點00\",     \"today at the same time\");\ntest.equal(moment(a).add({ m: 25 }).calendar(),      \"今天早上2點25\",     \"Now plus 25 min\");\ntest.equal(moment(a).add({ h: 1 }).calendar(),       \"今天早上3點00\",     \"Now plus 1 hour\");\ntest.equal(moment(a).add({ d: 1 }).calendar(),       \"明天早上2點00\",     \"tomorrow at the same time\");\ntest.equal(moment(a).subtract({ h: 1 }).calendar(),  \"今天早上1點00\",     \"Now minus 1 hour\");\ntest.equal(moment(a).subtract({ d: 1 }).calendar(),  \"昨天早上2點00\",     \"yesterday at the same time\");\n```\n",
    "head_branch": "zh-meridiem",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa6308dfb6b84f24281ea",
    "number": 221,
    "body": "In Chinese, the dates are always expressed in a specific order.  It goes from biggest container to smallest:\n\n```\nYear > Month > Day of Month > Day of Week > Meridiem (sort of) > Hour > Minute > Second\n```\n\nI updated the `longDateFormat` definition in both of the Chinese language files.  I also changed the `:` to a `点（點）`, but that is not related to ordering error.  Sorry for combining the commits.\n",
    "head_branch": "zh-ordering",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge a1491066f394d926ec0dc26e278877bb5e09302a into d918b9137489be128aea56e092cd93cfb7508b69"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa6318dfb6b84f24281eb",
    "number": 213,
    "body": "This is something that we wanted to avoid doing *1000 on every single UTC timestamp we receive (in seconds).\n\nFigured I would suggest it as I think it makes a nicer API.\n\nI can look into writing tests/docs for it first if you want.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 571f9baf99a1493db43b038fb4db2afbf44c513d into a327edc479b69a20e3865b67baa8e43acbdbb37b"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa6328dfb6b84f24281ec",
    "number": 212,
    "body": "Before:\n\n```\nmoment(1332291600000).utc().add(\"minutes\", -3 * 60).format(\"dddd D\")\n//=> Wednesday 20`\n```\n\nAfter:\n\n```\nmoment(1332291600000).utc().add(\"minutes\", -3 * 60).format(\"dddd D\")\n//=> Tuesday 20`\n```\n\n---\n\nDate.prototype.toString = Wed Mar 21 2012 00:22:46 GMT+0530 (IST)\nDate.prototype.toLocaleString = Wed Mar 21 2012 00:22:46 GMT+0530 (IST)\nDate.prototype.getTimezoneOffset = -330\nnavigator.userAgent = Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/535.11 (KHTML, like Gecko) Chrome/17.0.963.79 Safari/535.11\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge c14917cb3d5cbf3a8c164c41069b33b028b1e30d into b9b035a0818fb9a6377dc50f19ad93bfa31fa089"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa6338dfb6b84f24281ed",
    "number": 208,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa6348dfb6b84f24281ee",
    "number": 205,
    "body": "The problem is that how to compare with a moment object is not prepared. It is possible if it writes in this way.\n\n```\nfunction isMoment(obj) {\n    return obj && typeof obj.native === 'function' && obj.native() instanceof Date;\n}\n```\n\nHowever, this function is not exact.\n\n```\nvar myObj = {\n    native: function() { return new Date }\n};\n\nisMoment(myObj); //=> true\n```\n\nThis patch solves this. For example.\n\n```\nvar m = moment();\nmoment.isMoment(m); //=> true\nmoment.isMoment(myObj); //=> false\n```\n\nThanks.\n",
    "head_branch": "ismoment",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 5d70aa4b0487a449619fbb2d24a6f16b8569593d into 7da723fe9ac1e30ee1ce32461cda9407c8e4b1ff"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa6358dfb6b84f24281ef",
    "number": 203,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 282f0bbfcb1f5a61ff091422f79b97df875a9045 into 58ba38abac320629fa956ff17dbf4ef704b98b46"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa6368dfb6b84f24281f0",
    "number": 202,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa6378dfb6b84f24281f1",
    "number": 193,
    "body": "The french word for today is not correct.\n\nhttp://translate.google.fr/#en|fr|today%0A\n",
    "head_branch": "lang-fr",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 99e21b19a54e69b11b32d51f38af756ede0ae3c0 into 8c7a659330f839a235616b82b2e2f789853cd276"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa6388dfb6b84f24281f2",
    "number": 192,
    "body": "Hi Tim,\n\nWe talked about formatted diffs in #143. My code is ready to be discussed and reviewed! I encountered some problems and I have questions here's some details...\n- My function doesn't work if units aren't in decreasing order. Is it a problem? Should we throw an Error? I can work on a different implementation that can handle that case, but code will be bigger and maybe slower.\n- I assume that DST is always 1 hour but it's not ALWAYS the case. What do you think we should do about that?\n- The `calendar` function doesn't work anymore, but I'm not sure I'm responsible. ;-) You'll find details by running the tests. Please tell me if I've done something wrong.\n- Some tests in diff weren't correct :\n\n```\ntest.equal(moment([2010]).diff([2010, 0, 21], 'weeks'), -3, \"week diff\");\n```\n\nJanuary 1st to January 21th => 20 days => not 3 weeks\n\n```\ntest.equal(moment([2010]).diff([2011, 6], 'years', true), -1.5, \"year diff, float\");\n```\n\nIn France, DST change accurs in March so this diff is not exactly 1.5 years. What do you think we should do about that?\n\nThere's problably adjusments to make the code better, prettier or faster, feel free to make any remarks I'll correct my PR...\n\nThanks again for this library and for letting me having huge headaches on this ;-)\n\nRegards.\n",
    "head_branch": "formatted-diffs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa6398dfb6b84f24281f3",
    "number": 191,
    "body": "I had fixed some bugs in zh-cn.js and test file. Now it seems ok\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 8aa42752c6738771a73c5a39f8b68b1acc9b2488 into b5787e74e59383465756daa7fcc2b20c21fb3e96"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa63a8dfb6b84f24281f4",
    "number": 187,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 25acb63702778826a6a385acb4c715b0f91296e6 into fa6a9bcab602f7cef14b263ee667c133b051bfa0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa63b8dfb6b84f24281f5",
    "number": 186,
    "body": "This is very handy when getting a format string from a remote source.\n",
    "head_branch": "fromnow-format",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa63c8dfb6b84f24281f6",
    "number": 182,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 182536d457ac4910da0ccbad7110c4cf46274f2d into 5592c66787a0e64aa61b8ef22cee4e7100b36641"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa63d8dfb6b84f24281f7",
    "number": 178,
    "body": "Added a relative-time converter, takes in units, a duration, and an optional suffix remover boolean, and returns humanized output, e.g. moment().formatted_duration('minutes',20000,true); // \"14 days\"\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa63e8dfb6b84f24281f8",
    "number": 174,
    "body": "The test runs ok however the grammer logic for chinese is a little weird. For example we put \"am\"/\"pm\" before time, and we say \"midnight 2:00\" instead of \"2:00 pm\"... etc. But I guess every language has its own grammer rule, it is too difficult to fit them all in one library.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 7879362c50dbde91480e0cc461abf8e1e4301d52 into fa2bf3dd137eb5c8133bbc5e6fa8bb0439b4eceb"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa63e8dfb6b84f24281f9",
    "number": 170,
    "body": "New file: lang/zh-tw.js\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 04da17fee79e45ea640f0908f8c3884980c4a300 into fc255483e938ac81395dd6f14bde1762ffee6281"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa63f8dfb6b84f24281fa",
    "number": 169,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 1aa2fb812c83924e42c68977414a63bce85e0187 into e141548f103a1c57ec756d2182e962fe54a9377c"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa6408dfb6b84f24281fb",
    "number": 168,
    "body": "new file:   lang/zh_CN.js\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge e4f7121abfda07a4491b30d4f8db7fb5615dee66 into 2010c57d299251ab1612ee803ea59d90fc69d394"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa6418dfb6b84f24281fc",
    "number": 167,
    "body": "I updated the Makefile to follow some general conventions:\n- renamed test\\* to test-*\n- added a clean target\n- used the .PHONY target for rules that are not tied to files.\n- tied rules to actual filenames so that they will be updated when their prerequisites are updated\n\nI also changed some things:\n- added a pretty target\n- added a hint target for jshint-ing, although perhaps that should be called lint to be more generic.\n- fixed the paths to the executables (for jshint, nodeunit, and uglifyjs)\n- reduced the devDependencies to jshint, nodeunit, and uglify\n\nI also removed one target, `langtests`, which created the test/all-tests.js file.  I'm not sure what the point of that rule was because it `cat`ed some files that didn't even exist.\n\nIn addition, I moved test/non-lang to test/moment because I felt that was a better name.\n",
    "head_branch": "makefile-improved",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge f8fb68e7306aa61e8f7e9bd496f10469f00a8388 into 5adb83925b1fd6aa7dd33e0a1e4a2e487b0a94e8"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa6428dfb6b84f24281fd",
    "number": 165,
    "body": "- Added `.js` suffix to `\"main\" : \"./money\"` in order to avoid [this](https://github.com/josscrowcroft/money.js/pull/7) type of npm warning\n- devDependencies should be hash instead of array since npm throws warning about that. `npm WARN moment@1.4.0 devDependencies field should be hash of <name>:<version-range> pairs`\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 95a010f375571ef79e78d69c131d96b17f0eefe7 into 5d1ac12695ae9c8fd4efcfde72330805e338871b"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa6438dfb6b84f24281fe",
    "number": 163,
    "body": "allow moment().calendar( withoutTime ) method to accept a boolean parameter as an option to display date strings format without the time.\n\neg:\n\nnow = feb 7\nmoment().calendar(); // Today at 10:59pm\n\nmoment().calendar(true); // Today\n",
    "head_branch": "calendarWithoutTime",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa6448dfb6b84f24281ff",
    "number": 149,
    "body": "It ran into the same problems that adding and subtracting ran into in #78.\n",
    "head_branch": "diff_weeks",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge efa67e82c0f1f0fb939e458c15a7e41b235b42d3 into 3506dd3b11dde56a2601acbaf4875280865109b9"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa6458dfb6b84f2428200",
    "number": 145,
    "body": "moment('2012-01-25T11:00:00', 'YYYY-MM-DDTHH:mm:ss').format('HH') returns '11'\nmoment('2012-01-25T12:00:00', 'YYYY-MM-DDTHH:mm:ss').format('HH') returns '0'\nmoment('2012-01-25T13:00:00', 'YYYY-MM-DDTHH:mm:ss').format('HH') returns '13'\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa6468dfb6b84f2428201",
    "number": 136,
    "body": "I'm not sure how to attach new diffs to an existing pull request, so here's a new one. Per your request, I haven't checked in the built files, just the changed source files.\n",
    "head_branch": "sod",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 28eaf89971bd91355a76939c4bbba991da377d9e into ff796b6bf814653d3551cb065aa7aadb8f90c13c"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa6478dfb6b84f2428202",
    "number": 135,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa6488dfb6b84f2428203",
    "number": 132,
    "body": "Introduced 'added' and 'subtracted' functions on moment prototype, for adding and subtracting time but returning a modified object copy, leaving the original moment object intact. Also made a short, simple unit test and updated the docs. Did not commit build generated files.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa6498dfb6b84f2428204",
    "number": 131,
    "body": "If I compare `_.date(\"2012-01-13\", \"YYYY-MM-DD\").diff(_.date(), 'days')` and today is `2012-01-13 12:00:01` the diff is above 0.5 so it says that there is one day difference.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa64a8dfb6b84f2428205",
    "number": 130,
    "body": "RequireJS allows to use moment as a module, which is nice when building larger javascript applications.\n\nI added a simple check that looks for the `define` method and look if it is compatible with CommonJS AMD. I took the code from jquery so it should be correct ;)\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge f31d9dc349830c35189dc3cd2191e8f0443a4346 into 496e3f64461074855b21348d6590cef40b65b999"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa64b8dfb6b84f2428206",
    "number": 129,
    "body": "Add Catalan (Catalonia, Spain) locale file and tests.\n",
    "head_branch": "ca_locale",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa64c8dfb6b84f2428207",
    "number": 127,
    "body": "based on comments on issue #123\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa64d8dfb6b84f2428208",
    "number": 124,
    "body": "A few things here:\n- The actual purpose: added a `datePart()` that strips out hours, minutes, seconds, and milliseconds\n- Some simple tests\n- I added the node modules required to build to devDependencies in package.json. That made it a lot easier to get it building. I hope I didn't misunderstand something.\n- I couldn't build as-is because of file name case sensitivity, so I renamed en-GB.js to en-gb.js.\n",
    "head_branch": "datePart",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa64e8dfb6b84f2428209",
    "number": 120,
    "body": "Galician locale strings file and tests added.\n",
    "head_branch": "gl_locale",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 1fa5df1ad23207202920c97f4b2e4783c7cb01e9 into b305bc6170c97c86c10a9c210f01a98107559147"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa64f8dfb6b84f242820a",
    "number": 119,
    "body": "It would be awesome to provide a JSON-encoded string as a parameter and have it be understood and correctly parsed.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 4dfb2651b5fba2ab5fcd699f377e478bb871f2e0 into fea3266a1675f514bfcfc30b8f9a8415302f69cd"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa6508dfb6b84f242820b",
    "number": 112,
    "body": "Here is the patch for issue #110\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge b023a2b52344275d473dae84596d0e5015dc84be into 0aa17277c53d8ca46eab6716b4be709ac9718bc1"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa6528dfb6b84f242820c",
    "number": 100,
    "body": "- Adds the relativeDate method that gives a date relative to now. E.g. `moment().add({d:1}).relativeDate()` returns _Tomorrow at 1:00 PM_\n- Adds the localized time format `LT` that returns _13:00_ in Europe and _1:00 PM_ in the USA\n",
    "head_branch": "relative-date",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge bd7a57ea344c73cfa2f7e6c4d95f2587b4a3b43b into ef2c9ad1fb1c3204a6635e2deaeed35ce19c6c06"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa6538dfb6b84f242820d",
    "number": 99,
    "body": "Looks like it was the only one missing.\n",
    "head_branch": "milliseconds_shortcut",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge dc57f9d7f4bf42d7a40fa3d274cad07c468d6bfa into 3fa29ee9b753b5eb6b3e8ec50b39a90eec927342"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa6548dfb6b84f242820e",
    "number": 98,
    "body": "added danish translation and test files\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 6f518d9fa3d414d1491fabe808c6563f47a8b878 into 2d2065e4d995e42f93d244375715faa2a081937f"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa6558dfb6b84f242820f",
    "number": 97,
    "body": "Euskara translation added, with tests.\nI haven't committed the minified versions in \"/site\" and I haven't\nadded the language to the \"build.js\" file, but it is tested and should\nbe ready to go.\n",
    "head_branch": "eu-translation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 0ef6c0c187816fd4742f7c24e5674e7ac9dab66a into e48b3cff2ce1d61d250a24a437f229fe8a6e3858"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa6568dfb6b84f2428210",
    "number": 93,
    "body": "The last two \"format timezone\" tests were broken here in Switzerland.\n\nE.g. Z returned -1:00 instead of -01:00\n",
    "head_branch": "negative-timzone-offset",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 9547a6588fc591132ccfdbb726fb68b0fd2b6b79 into 99583f82c8627775d481f0977f8c77c35a5733e7"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa6578dfb6b84f2428211",
    "number": 86,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge bbaa2fa180db5d535a00cf08e322545ca592d9ff into 6c35a0ca3a281efad6e814db23d28a313c9e7b89"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa6588dfb6b84f2428212",
    "number": 84,
    "body": "Added British language file for correct date formats.\n",
    "head_branch": "feature/en-GB",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 0af021255c42ccba53bff3c91c34e87a7641429f into 79fb012cae42534dbdbccb0031c044e1092d819d"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa6598dfb6b84f2428213",
    "number": 81,
    "body": "Added an isDST method with tests as per discussion in #78.\n",
    "head_branch": "isDST",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge c45c7cba6aa7a771268507c9465b5bb7b13544a3 into 70180c6dce239730101e0dd2f0a350f49d771daf"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa6598dfb6b84f2428214",
    "number": 77,
    "body": "- no plural forms for 'uur' and 'jaar'\n- 'een minuutje' is informal language\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge fa3772455f6fdbd89c91a3cc6801f9303d117bde into 92cb97288a9be9e4e3e35f953605b8e2fb6b1650"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa65b8dfb6b84f2428215",
    "number": 74,
    "body": "The string '12:00 am' was being parsed as 12:00 pm.  I fixed that and\nadded a test.\n\nThis was the bug:\n\n```\nmoment('12:00 am', 'h:mm a').hours() == moment('12:00 pm', 'h:mm a').hours()\n```\n",
    "head_branch": "12am_bugfix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge c47d75d5fe9095f2b68f8d1f972dd501c155a719 into 422f683cddc71a6d1ecb1c862b39dff2f226ac9f"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa65c8dfb6b84f2428216",
    "number": 70,
    "body": "I added korean translation kr.js and test/kr.js\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 3621529edaf7b6548fe81f83ec25151f6b292161 into 1a4aef0dbc28041e54ddd2b744ba8c0dc9429a2c"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa65c8dfb6b84f2428217",
    "number": 66,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 98778bdfad426f259f194dbab2d77de2739e8a53 into 96fc2ca7ef2a07b7c9b72a433009342c49b32468"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa65d8dfb6b84f2428218",
    "number": 65,
    "body": "Cleaned up according to the docs.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 93a827c51f24f70616c183fcc49fc951b5f33504 into efa57728816be05e26c7503fd34bf77b4ef8fd7f"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa65e8dfb6b84f2428219",
    "number": 62,
    "body": "Thanks for nice JS tool!\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 1ff863e94a0fb8c7665832b2187e48815125c249 into 9ed7a4cf89f4fc2ec53a0a0528ae7359912dd233"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa65f8dfb6b84f242821a",
    "number": 60,
    "body": "More information at evoL@c7edf55e4b02d878e497df14284b8e44e5ccfc91.\n\nAlso I've updated the Polish language file to reflect those changes.\n",
    "head_branch": "updated",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 3da9117407eaee239195dec7fc8573a57ea43506 into c3c7192e3771404e670d1e7deeea59a491f6f1ae"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa6618dfb6b84f242821b",
    "number": 59,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 4f91f62979799219686aaa7513854d7652ea71dd into 1f42ebc92ecd4c8042a9364b6a8bf2cb4aefc93c"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa6618dfb6b84f242821c",
    "number": 57,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa6628dfb6b84f242821d",
    "number": 54,
    "body": "Language code 'de'; tests pass.\n",
    "head_branch": "german",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 9e754e44565370f4943a583fc7dc12b3de2f5da0 into f3347db884cc1aac7459f23c72744de31047df44"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa6638dfb6b84f242821e",
    "number": 53,
    "body": "Simple Polish language support. Language code: pl.\n",
    "head_branch": "45abfc45eba11d074cc1b4e8287a105107c4b7ac",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa6648dfb6b84f242821f",
    "number": 52,
    "body": "Use language code 'sv'\nUnit tests added and checked\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa6658dfb6b84f2428220",
    "number": 51,
    "body": "As requested, the dutch translation in a Pull Request\n\nRegards,\nJoris\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge c787c19b2e357072500eefbb45d12dcc9c67e267 into 1d6c6083e08693b998cb75f0a3514f451f1088c4"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa6668dfb6b84f2428221",
    "number": 50,
    "body": "This is just the little bit that was missing from merge commit https://github.com/timrwood/moment/commit/b4f446aecca306ea9970266f6b0f1fb3b92cb3e5\n\nThis should see the tests passing completely in IE.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 782cebdd3ea261bf311c77c7fa530d512d6b2cec into 0f021c80e92009508d76a0adbffc0246a94f6f11"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa6678dfb6b84f2428222",
    "number": 47,
    "body": "Re-generated site w/ spanish translation \n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge b6b59730fbaca505029b2eb438188a40b0861b83 into d77403edadaab62c0fd75405823abdeaaec6e7eb"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa6688dfb6b84f2428223",
    "number": 44,
    "body": "The unit tests were breaking in IE because the presence of `var moment`\nwas stamping over `window.moment`.\n\nTo fix this, I've wrapped the unit tests and lang tests in a closure.\n",
    "head_branch": "dev",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa6698dfb6b84f2428224",
    "number": 43,
    "body": "Changed to November 30\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 38733c475c1526f76bf7e249cb4c4fbae3d87978 into ba4ecab9eb84bc2c990f52ad1973f34b2508cc29"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa66a8dfb6b84f2428225",
    "number": 41,
    "body": "Changed lang tests such that `moment.format('zz')` is expected to simply return 3 or 4 uppercase letters, rather than specifically `PST`.\n\nAlso moved my own `moment.format('YY')` test in alongside the lang tests.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge dd95fcc3424a883adc410e87b58d6f4876d5e8f4 into 32853e4b84ad27ce5ff2117c46562532a547db62"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa66b8dfb6b84f2428226",
    "number": 39,
    "body": "A really quick modification to have the 'YY' output-formatter return the year leftZeroFilled to the two digits the format suggests. This is the one thing that tripped me up with this wonderful library.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 2bc6a3d41f6343dcb79c4271024e0aeee6535d71 into a4b65712e291d59d6f637e992036edcb8fab280e"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa66c8dfb6b84f2428227",
    "number": 38,
    "body": "Various fixes for French. Lots of spelling rules where not respected.\n",
    "head_branch": "fr",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge b50febc073621d06bab338ff7f6ceda66976300d into ca2da0216dccf8e47149e2bd4c1ca710913277ba"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa66d8dfb6b84f2428228",
    "number": 37,
    "body": "- February month is \"Fév\" and not \"Fev\" in french\n- If difference between moment and new.date() is equal to zero, it write that moment will happend in the future or it's in the past.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge eef725a3ae46761b274c59f489c28ea7befe4bd4 into c7964b58dab33448fcc5880dd42752372ae05c24"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa66e8dfb6b84f2428229",
    "number": 36,
    "body": "Added the concepts of masks. Added a toDate() method. Added parsing and generation for the 'standard' AM/PM key of 'tt' or 'TT'.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa66f8dfb6b84f242822a",
    "number": 33,
    "body": "Now you can use `U` for unix timestamp with second resolution and `u` for unix timestamp with millisecond resolution.\n",
    "head_branch": "unix-timestamp-in-format",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa6708dfb6b84f242822b",
    "number": 32,
    "body": "When using setters with falsey values (e.g. `0`) the getter is called instead.  This is fixed by a null comparison to use the setter for anything but `null` and `undefined`.\n",
    "head_branch": "falsey-setter-vals",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 4eea1f561cf2a264e94a5482fb0695db103de363 into 8cf6a3aeba18bf6bc1bd34698cce16719e674489"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa6718dfb6b84f242822c",
    "number": 31,
    "body": "When using setters with falsey values (e.g. `0`) the getter is called instead.  This is fixed by a null comparison to use the setter for anything but `null` and `undefined`.\n",
    "head_branch": "falsey-setter-vals",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa6728dfb6b84f242822d",
    "number": 30,
    "body": "As discussed in #29\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge d440e4e71f6fe6f640dbce38909bd9f8d6001646 into e2b64c7821b414e20091a0e0800a99097dd87fed"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa6738dfb6b84f242822e",
    "number": 28,
    "body": "I noticed while doing sampling the library that seconds strings for relative time weren't really that \"good\" especially in the french translation so I kind of fixed it for both english and french, if some more experimented people could fix those in the other language files it would also be cool.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge e4be3d2f91c1858f32e2f7b9b784cb705922e059 into b1b05add40f69c0c4132715fbe5d0b911ebc8d22"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "661fa6748dfb6b84f242822f",
    "number": 25,
    "body": "Small fix to the NodeJS detection to make the module work when run client-side using browserify.\n\nI think the way underscore does its client/server-side check best, but didn't want to make that big a change.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 1299b724a3a5255d116197b0880ff689fc5ea784 into bc711fe1f5176c091929ef534a6d2830bf2ca03f"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa6758dfb6b84f2428230",
    "number": 16,
    "body": "I suggest to add french translation directly in loading.\n\nAnd also to manage case for one second relativeTime which case happend for me during my test.\n\nThank you in advance for your time and your work.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa6768dfb6b84f2428231",
    "number": 15,
    "body": "",
    "head_branch": "italian",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge d145b91c319559880f5f3c6b5e34a6b5aa511d52 into 99fc63e8211260a5c8dbc620abe4a9efcf3e84b5"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa6778dfb6b84f2428232",
    "number": 12,
    "body": "I included just my language, but the format is open to add any language.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 37e3e51fb4561e22c9869e327bb22120159bbee3 into 31b72b000f9431faa3741f705af6289bec63fa8e"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa6788dfb6b84f2428233",
    "number": 9,
    "body": "Check for a undefined variable directly causes ReferenceError in nodejs.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "661fa6798dfb6b84f2428234",
    "number": 5,
    "body": "Underscore's mixin fn wants a hash that also names the mixin.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 663d246c179f7c8a410c683bc07ef69de84f17b7 into 35efaf633569f1a354e217ccfb3c7813f7b72a59"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  }
]