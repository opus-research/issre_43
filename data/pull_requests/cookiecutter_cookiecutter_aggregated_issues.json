[
  {
    "_id": "6621d9baac254a19ac29e4de",
    "number": 2062,
    "body": "<!--pre-commit.ci start-->\nupdates:\n- [github.com/pre-commit/pre-commit-hooks: v4.5.0 → v4.6.0](https://github.com/pre-commit/pre-commit-hooks/compare/v4.5.0...v4.6.0)\n- [github.com/astral-sh/ruff-pre-commit: v0.3.5 → v0.3.7](https://github.com/astral-sh/ruff-pre-commit/compare/v0.3.5...v0.3.7)\n<!--pre-commit.ci end-->",
    "head_branch": "pre-commit-ci-update-config",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9bbac254a19ac29e4df",
    "number": 2061,
    "body": null,
    "head_branch": "ruff-more-lints",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9bcac254a19ac29e4e0",
    "number": 2060,
    "body": null,
    "head_branch": "mypy-main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "shrink mypy whitelist for 'main' module (#2060)\n\nCo-authored-by: Jens W. Klein <jk@kleinundpartner.at>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9bcac254a19ac29e4e1",
    "number": 2059,
    "body": null,
    "head_branch": "mypy-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "run mypy on tests directory (#2059)\n\n* run mypy on tests directory\r\n\r\n* remove redundant type checks\r\n\r\n* remove redundant type checks\r\n\r\n* remove redundant type checks\r\n\r\n* fix rebase\r\n\r\n---------\r\n\r\nCo-authored-by: daniel.eades <daniel.eades@seebyte.com>\r\nCo-authored-by: Jens W. Klein <jk@kleinundpartner.at>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9bdac254a19ac29e4e2",
    "number": 2057,
    "body": null,
    "head_branch": "pathlib",
    "is_a_fork": true,
    "comments": [
      "mypy coverage still not good enough to do this effectively",
      "having another go now mypy coverage is higher",
      "CI failures due to #2063 ",
      "@jensens this is getting pretty close to ready.\r\n\r\nI will need some help to go back through this PR and ensure that I haven't made breaking changes to the API.\r\nFor example, I've changed some signatures from `str` to `Path`, which is fine for internal APIs but a breaking change for public APIs. There are at least some instances of this to be addressed. Can you help me spot them?\r\n\r\nMy intention is to change them to `Path | str`, and add a deprecation warning for uses of `str`, so that they can be changed to `Path` in a future major release",
      "@danieleades Great! But ... Ok, this is kind of massive. I need to take some time to review all this. I'll come back in the next days, no time today or tomorrow."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9beac254a19ac29e4e3",
    "number": 2056,
    "body": null,
    "head_branch": "mypy-environment",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "shrink mypy whitelist for 'environment' module (#2056)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9bfac254a19ac29e4e4",
    "number": 2055,
    "body": null,
    "head_branch": "mypy-extensions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "shrink mypy whitelist for 'extensions' module (#2055)\n\nCo-authored-by: Jens W. Klein <jk@kleinundpartner.at>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9c0ac254a19ac29e4e5",
    "number": 2054,
    "body": null,
    "head_branch": "mypy-misc",
    "is_a_fork": true,
    "comments": [
      "@jensens this is ready to go!",
      "@jensens this is ready to go!",
      "> @jensens this is ready to go!\r\n\r\n@danieleades now it needs conflict resolution - after merging your other PR...",
      "@jensens this has been deconflicted!",
      "@jensens any idea why the codecov checks aren't reporting back?\r\n\r\nfrom https://app.codecov.io/github/cookiecutter/cookiecutter/commit/d6c4e97626d4fee5da66558e253ed26cc8668f6d:\r\n\r\n> There is an error processing the coverage reports. Common issues are [files paths](https://docs.codecov.com/docs/fixing-paths), empty files or expired reports. See error [reference](https://docs.codecov.com/docs/error-reference) page for additional troubleshooting to resolve error.\r\n",
      "> @jensens any idea why the codecov checks aren't reporting back?\r\n> \r\n> from https://app.codecov.io/github/cookiecutter/cookiecutter/commit/d6c4e97626d4fee5da66558e253ed26cc8668f6d:\r\n> \r\n> > There is an error processing the coverage reports. Common issues are [files paths](https://docs.codecov.com/docs/fixing-paths), empty files or expired reports. See error [reference](https://docs.codecov.com/docs/error-reference) page for additional troubleshooting to resolve error.\r\n\r\nno, but we had some problems when the fork was outside the main repo. I ignore this for now as long it works on main then ;)"
    ],
    "commit_messages": [
      "shrink mypy whitelist for other modules (#2054)\n\n* shrink mypy whitelist for other modules\r\n\r\n---------\r\n\r\nCo-authored-by: Jens W. Klein <jk@kleinundpartner.at>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9c0ac254a19ac29e4e6",
    "number": 2053,
    "body": null,
    "head_branch": "mypy-utils",
    "is_a_fork": true,
    "comments": [
      "@jensens this is ready to go!"
    ],
    "commit_messages": [
      "shrink mypy whitelist for cookiecutter.utils (#2053)\n\nCo-authored-by: Jens W. Klein <jk@kleinundpartner.at>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9c1ac254a19ac29e4e7",
    "number": 2052,
    "body": "drops support for python 3.7\r\npython 3.7 is end of life",
    "head_branch": "drop-python37",
    "is_a_fork": true,
    "comments": [
      "I think this is fine. @cookiecutter/cookie-monsters What do you think?",
      "> I think this is fine. @cookiecutter/cookie-monsters What do you think?\r\n\r\ngreat group name",
      "I'm 👍🏼 but I would like to test what happens with pipx in 3.7 trying to get the latest cookiecutter",
      "> I'm 👍🏼 but I would like to test what happens with pipx in 3.7 trying to get the latest cookiecutter\r\n\r\n`python_requires='>=3.8',` in setup.cfg should prevent the combination of Python 3.7 and pip/pipx to use the newer version and fallback to a version with `python_requires='>=3.7',` set.",
      "According to Semantic Versioning this is a major change, right? I would prefer to wait for a 3.0 release to introduce this.",
      "> According to Semantic Versioning this is a major change, right? I would prefer to wait for a 3.0 release to introduce this.\r\n\r\ni'm not sure the spec says anything specifically about this case. I personally would not consider dropping support for an *end of life* minor release of the interpreter to be a major change\r\n\r\na major change would imply downstream breakages. And you won't get downstream breakages because the specified min python version will mean that people using older interpreters will be effectively pinned at an older version of cookiecutter (someone please test that don't take my word for it)",
      "i don't think there's any rush to merge this. It's dead easy to keep rebasing.\r\n\r\nIt really only becomes important once you want to use newer features, or you want to update the dependencies and those dependencies have dropped support for 3.7.\r\n\r\nI personally drop EOF python versions like a hot brick, but it would be perfectly reasonable to hold onto it until it's actually causing an issue and then pull the cord on this PR",
      "I'll get this cleaned up and rebased"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9c2ac254a19ac29e4e8",
    "number": 2051,
    "body": null,
    "head_branch": "mypy-cli",
    "is_a_fork": true,
    "comments": [
      "@jensens any idea why `typing_extensions` is not present in the docs test environment? I tried adding it explicitly to the `test_requirements` but that doesn't seem to have done the trick\r\n\r\n---\r\n\r\nnevermind! just had to add it to the docs requirements"
    ],
    "commit_messages": [
      "Add type hints for cookiecutter.cli and check it with mypy (#2051)\n\n* shrink mypy whitelist for cookiecutter.cli\r\n* add typing-extensions to docs requirements"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9c3ac254a19ac29e4e9",
    "number": 2050,
    "body": "I kept the original `4` value as the default value for backwards compatibility",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add optional indent parameter to jsonify extension (#2050)\n\nCo-authored-by: Jens W. Klein <jk@kleinundpartner.at>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9c4ac254a19ac29e4ea",
    "number": 2049,
    "body": "lints for and removes unused function arguments",
    "head_branch": "unused-args",
    "is_a_fork": true,
    "comments": [
      "@jensens this is ready to go!"
    ],
    "commit_messages": [
      "remove some unused args (#2049)\n\nremove unused function arguments"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9c5ac254a19ac29e4eb",
    "number": 2046,
    "body": "<!--pre-commit.ci start-->\nupdates:\n- [github.com/astral-sh/ruff-pre-commit: v0.3.3 → v0.3.5](https://github.com/astral-sh/ruff-pre-commit/compare/v0.3.3...v0.3.5)\n<!--pre-commit.ci end-->",
    "head_branch": "pre-commit-ci-update-config",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[pre-commit.ci] pre-commit autoupdate (#2046)\n\nupdates:\r\n- [github.com/astral-sh/ruff-pre-commit: v0.3.3 → v0.3.5](https://github.com/astral-sh/ruff-pre-commit/compare/v0.3.3...v0.3.5)\r\n\r\nCo-authored-by: pre-commit-ci[bot] <66853113+pre-commit-ci[bot]@users.noreply.github.com>\r\nCo-authored-by: Jens W. Klein <jk@kleinundpartner.at>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9c5ac254a19ac29e4ec",
    "number": 2044,
    "body": "We have recently migrated from `setup.cfg` to `pyproject.toml` on https://github.com/cookiecutter/cookiecutter/pull/2040. However, we have encountered an issue with pytest 6.0+ as it uses the `[tool.pytest.ini_options]` section instead of `[tool.pytest]` section on `setup.cfg`. As a result, the expected pytest settings were not being used and the coverage report was not being generated. \r\n\r\nThis pull-request fix this error.",
    "head_branch": "fix_pytest_init_config",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Use pytest 6.0+ compatible [tool.pytest.ini_options] instead of [tool.pytest] on pyproject.toml (#2044)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9c6ac254a19ac29e4ed",
    "number": 2043,
    "body": "<!--pre-commit.ci start-->\nupdates:\n- [github.com/astral-sh/ruff-pre-commit: v0.3.2 → v0.3.3](https://github.com/astral-sh/ruff-pre-commit/compare/v0.3.2...v0.3.3)\n- [github.com/pre-commit/mirrors-mypy: v1.8.0 → v1.9.0](https://github.com/pre-commit/mirrors-mypy/compare/v1.8.0...v1.9.0)\n<!--pre-commit.ci end-->",
    "head_branch": "pre-commit-ci-update-config",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[pre-commit.ci] pre-commit autoupdate (#2043)\n\nupdates:\r\n- [github.com/astral-sh/ruff-pre-commit: v0.3.2 → v0.3.3](https://github.com/astral-sh/ruff-pre-commit/compare/v0.3.2...v0.3.3)\r\n- [github.com/pre-commit/mirrors-mypy: v1.8.0 → v1.9.0](https://github.com/pre-commit/mirrors-mypy/compare/v1.8.0...v1.9.0)\r\n\r\nCo-authored-by: pre-commit-ci[bot] <66853113+pre-commit-ci[bot]@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9c7ac254a19ac29e4ee",
    "number": 2042,
    "body": null,
    "head_branch": "mypy-hooks",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "shrink mypy whitelist for cookiecutter.hooks (#2042)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9c8ac254a19ac29e4ef",
    "number": 2041,
    "body": null,
    "head_branch": "mypy-generate",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "shrink mypy whitelist for cookiecutter.generate (#2041)\n\nCo-authored-by: Jens W. Klein <jk@kleinundpartner.at>\r\nCo-authored-by: Fábio C. Barrionuevo da Luz <bnafta@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9c9ac254a19ac29e4f0",
    "number": 2040,
    "body": "and remove setup.cfg",
    "head_branch": "no-setupcfg",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "move configuration from setup.cfg to pyproject.toml (#2040)\n\nMove configuration from setup.cfg to pyproject.toml\r\n\r\nand delete setup.cfg"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9c9ac254a19ac29e4f1",
    "number": 2039,
    "body": null,
    "head_branch": "ruff-pytest-style",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9caac254a19ac29e4f2",
    "number": 2038,
    "body": null,
    "head_branch": "bump-codecov-to-4x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9cbac254a19ac29e4f3",
    "number": 2036,
    "body": "Updated outdated shield link branch names from 'master' to 'main' so README shields (CI/CD in particular) display properly.\r\n## before\r\n<img width=\"600\" alt=\"before\" src=\"https://github.com/cookiecutter/cookiecutter/assets/36799542/40d803cd-6248-4eaf-90ea-b82d986e2224\">\r\n\r\n## after\r\n<img width=\"600\" alt=\"after\" src=\"https://github.com/cookiecutter/cookiecutter/assets/36799542/779e66c6-13b8-4c5c-ba29-376651916df4\">\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "README: Update outdated shield branch names (#2036)\n\nUpdate outdated shield branch names from 'master' to 'main'"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9ccac254a19ac29e4f4",
    "number": 2033,
    "body": "<!--pre-commit.ci start-->\nupdates:\n- [github.com/PyCQA/bandit: 1.7.7 → 1.7.8](https://github.com/PyCQA/bandit/compare/1.7.7...1.7.8)\n<!--pre-commit.ci end-->",
    "head_branch": "pre-commit-ci-update-config",
    "is_a_fork": false,
    "comments": [
      "@danieleades I lost the overview, but as far as I understand this is no longer needed?",
      "> @danieleades I lost the overview, but as far as I understand this is no longer needed?\r\n\r\nyep, no longer needed"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9cdac254a19ac29e4f5",
    "number": 2031,
    "body": "Render the whole hook directory to a temporary folder before executing hooks so that it's possible to use local imports in hooks.\r\n\r\nI kindly request comments regarding this implementation before finalizing this PR by adding tests and documentation.\r\n\r\nA few notes about the implementation:\r\n- `Pre_prompt_hook` is still executed from the original location.\r\n- Relative imports in hooks are not supported. This is because relative imports are not possible if the hook module itself is not imported, hooks are executed as scripts.\r\n\r\nA few questions that I have:\r\n- How much do we care about the backwards compatibility of the API? This leaves the following methods orphaned:\r\n    - `run_hook_from_repo_dir()`\r\n    - `run_hook()`\r\n    - `run_script_with_context()`\r\n- Should it be possible to modify the `post_gen_hook` by the `pre_gen_hook`?\r\n- Should the repo directory be added to the `PYTHONPATH` during hook execution so that hooks can access packages from the repo directory?\r\n- What is Cookiecutter's policy regarding typing annotations? Should those be added to the new code?\r\n\r\nResolves #824",
    "head_branch": "render-hooks-dir",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9cdac254a19ac29e4f6",
    "number": 2030,
    "body": null,
    "head_branch": "actions",
    "is_a_fork": true,
    "comments": [
      "Sorry, mistakenly created pr here instead of my own fork.\r\nI have an upcoming PR and I try to run test actions on my fork before creating the PR here."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9ceac254a19ac29e4f7",
    "number": 2029,
    "body": "Fixes #1973 - a bug where the override value provided via command line wasn't being properly converted to its boolean counterpart.\r\n\r\nSince override values from the command line are interpreted as strings, we need to convert the override value to a boolean if it's overriding a boolean variable.\r\n\r\nI'm a total Python newbie so please let me know if there's anything I can change to make this better.",
    "head_branch": "fix/1973_convert-context-string-to-boolean",
    "is_a_fork": true,
    "comments": [
      "Thanks!",
      "Would love a release with this fix. Just noticed our CI is not actually testing what I thought it was because of this issue",
      "You are right, it is time for a release. I'll put it on my todo list for the next days! Thanks for the reminder!",
      "@jensens thanks! Was able to work around it with a pre-generate hook, so no rush 😉",
      "Looks like 2.6.0 was in February, this to me seems like a fix release? What's the hold up here?"
    ],
    "commit_messages": [
      "Convert CLI provided strings to booleans for boolean config variables (#2029)\n\n* fix: convert strings to booleans for boolean config variables (#1973)\r\n\r\nFixes a bug where the override value provided via command line wasn't being properly converted to its boolean counterpart.\r\n\r\nSince override values from the command line are interpreted as strings, we need to convert the string value to a boolean if the config variable is a boolean to begin with.\r\n\r\n* Fix linter warning about exception handling.\r\n\r\n---------\r\n\r\nCo-authored-by: Jens W. Klein <jk@kleinundpartner.at>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9cfac254a19ac29e4f8",
    "number": 2026,
    "body": "Bumps [release-drafter/release-drafter](https://github.com/release-drafter/release-drafter) from 5 to 6.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/release-drafter/release-drafter/releases\">release-drafter/release-drafter's releases</a>.</em></p>\n<blockquote>\n<h2>v6.0.0</h2>\n<h1>What's Changed</h1>\n<ul>\n<li>Update Node.js to 20 (<a href=\"https://redirect.github.com/release-drafter/release-drafter/issues/1379\">#1379</a>) <a href=\"https://github.com/massongit\"><code>@​massongit</code></a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/release-drafter/release-drafter/compare/v5.25.0...v6.0.0\">https://github.com/release-drafter/release-drafter/compare/v5.25.0...v6.0.0</a></p>\n<h2>v6.0.0-beta.1</h2>\n<p>Prerelease of v6, first release of the CLI, feel free to provide feedback in the pull request: <a href=\"https://redirect.github.com/release-drafter/release-drafter/pull/1204\">release-drafter/release-drafter#1204</a></p>\n<h2>v5.25.0</h2>\n<h1>What's Changed</h1>\n<h2>New</h2>\n<ul>\n<li>add prerelease increment behavior (<a href=\"https://redirect.github.com/release-drafter/release-drafter/issues/1303\">#1303</a>) <a href=\"https://github.com/neilime\"><code>@​neilime</code></a></li>\n<li>add latest input (<a href=\"https://redirect.github.com/release-drafter/release-drafter/issues/1348\">#1348</a>) <a href=\"https://github.com/o-mago\"><code>@​o-mago</code></a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/release-drafter/release-drafter/compare/v5.24.0...v5.25.0\">https://github.com/release-drafter/release-drafter/compare/v5.24.0...v5.25.0</a></p>\n<h2>v5.24.0</h2>\n<h1>What's Changed</h1>\n<h2>New</h2>\n<ul>\n<li>Add release version to github action output (<a href=\"https://redirect.github.com/release-drafter/release-drafter/issues/1300\">#1300</a>) <a href=\"https://github.com/mehdihadeli\"><code>@​mehdihadeli</code></a></li>\n</ul>\n<h2>Bug Fixes</h2>\n<ul>\n<li>fix(release): strip prefix before comparing version (<a href=\"https://redirect.github.com/release-drafter/release-drafter/issues/1255\">#1255</a>) <a href=\"https://github.com/neilime\"><code>@​neilime</code></a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/release-drafter/release-drafter/compare/v5.23.0...v5.24.0\">https://github.com/release-drafter/release-drafter/compare/v5.23.0...v5.24.0</a></p>\n<h2>v5.23.0</h2>\n<h1>What's Changed</h1>\n<h2>New</h2>\n<ul>\n<li>Add <code>include-pre-releases</code> configuration option (<a href=\"https://redirect.github.com/release-drafter/release-drafter/issues/1302\">#1302</a>) <a href=\"https://github.com/robbinjanssen\"><code>@​robbinjanssen</code></a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/release-drafter/release-drafter/compare/v5.22.0...v5.23.0\">https://github.com/release-drafter/release-drafter/compare/v5.22.0...v5.23.0</a></p>\n<h2>v5.22.0</h2>\n<h1>What's Changed</h1>\n<h2>New</h2>\n<ul>\n<li>Only use last full release when drafting (<a href=\"https://redirect.github.com/release-drafter/release-drafter/issues/1240\">#1240</a>) <a href=\"https://github.com/ssbarnea\"><code>@​ssbarnea</code></a></li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/release-drafter/release-drafter/commit/3f0f87098bd6b5c5b9a36d49c41d998ea58f9348\"><code>3f0f870</code></a> v6.0.0</li>\n<li><a href=\"https://github.com/release-drafter/release-drafter/commit/80296b4fbaeb08e43a2b957e188b283a20776b3b\"><code>80296b4</code></a> Update Node.js to 20 (<a href=\"https://redirect.github.com/release-drafter/release-drafter/issues/1379\">#1379</a>)</li>\n<li>See full diff in <a href=\"https://github.com/release-drafter/release-drafter/compare/v5...v6\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=release-drafter/release-drafter&package-manager=github_actions&previous-version=5&new-version=6)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
    "head_branch": "dependabot/github_actions/release-drafter/release-drafter-6",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Bump release-drafter/release-drafter from 5 to 6 (#2026)\n\nBumps [release-drafter/release-drafter](https://github.com/release-drafter/release-drafter) from 5 to 6.\r\n- [Release notes](https://github.com/release-drafter/release-drafter/releases)\r\n- [Commits](https://github.com/release-drafter/release-drafter/compare/v5...v6)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: release-drafter/release-drafter\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-major\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>\r\nCo-authored-by: Jens W. Klein <jk@kleinundpartner.at>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9d0ac254a19ac29e4f9",
    "number": 2022,
    "body": null,
    "head_branch": "jensens-2.6.0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Prepare release 2.6.0 (#2022)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9d1ac254a19ac29e4fa",
    "number": 2021,
    "body": "Cookiecutter allows customising the start and end strings for variables in both file and directory templates, but currently hardcodes using the default `{{` and `}}` when searching for the top-level template directory.\r\n\r\nThis PR fixes this, using the strings from the context when available to search for a template before passing it on.",
    "head_branch": "fix/find_template_block_strings",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9d1ac254a19ac29e4fb",
    "number": 2020,
    "body": "stacked on #2012 ",
    "head_branch": "ruff-strings",
    "is_a_fork": true,
    "comments": [
      "@jensens this is ready for review"
    ],
    "commit_messages": [
      "enable lint groups for string formatting (#2020)\n\nAdd str formatting lints"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9d2ac254a19ac29e4fc",
    "number": 2019,
    "body": "this PR is stacked on #2012 \r\n\r\nthis lint group provides micro performance improvements",
    "head_branch": "ruff-perf",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add 'perf' lint group (#2019)\n\n* add and apply minimal ruff configuration\r\n\r\n* add 'perf' lint group\r\n\r\n---------\r\n\r\nCo-authored-by: pre-commit-ci[bot] <66853113+pre-commit-ci[bot]@users.noreply.github.com>\r\nCo-authored-by: daniel.eades <daniel.eades@seebyte.com>\r\nCo-authored-by: Jens W. Klein <jk@kleinundpartner.at>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9d3ac254a19ac29e4fd",
    "number": 2018,
    "body": "this PR is stacked on #2012\r\n\r\nthe lints enabled in this PR are already passing- no code changes required",
    "head_branch": "ruff-trivial",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9d4ac254a19ac29e4fe",
    "number": 2017,
    "body": "this PR is stacked on #2012 ",
    "head_branch": "ruff-future-annotations",
    "is_a_fork": true,
    "comments": [
      "There are no changes?",
      "> There are no changes?\r\n\r\nno, the mypy PR made overlapping changes, so i think this can be closed"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9d4ac254a19ac29e4ff",
    "number": 2016,
    "body": "this PR is stacked on #2012 ",
    "head_branch": "ruff-pygrep",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add 'pygrep' lints (#2016)\n\n* add and apply minimal ruff configuration\r\n\r\n* add 'pygrep' lint group\r\n\r\n---------\r\n\r\nCo-authored-by: Jens W. Klein <jk@kleinundpartner.at>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9d5ac254a19ac29e500",
    "number": 2015,
    "body": "adds a minimal mypy linting configuration\r\n\r\n- add mypy target to pre-commit hooks\r\n- address 'low-hanging fruit'\r\n- whitelist remaining errors\r\n\r\nRather than attempt to completely resolve all type errors in this repo in one go, i've opted to fix the obvious ones and whitelist the rest. Over time, this whitelist should be shrunk and eventually removed entirely.",
    "head_branch": "mypy",
    "is_a_fork": true,
    "comments": [
      "working on this PR highlighted the highly inconsistent use of file paths in this repo, which switches pretty loosely between `pathlib.Path` and `str` representations. I suggest that over time this repo should remove the `os.path` path handling in favour of `pathlib`",
      "@jensens this is ready for review"
    ],
    "commit_messages": [
      "Add basic mypy linting (#2015)\n\nAdd basic mypy linting and apply type annotations to the code."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9d6ac254a19ac29e501",
    "number": 2014,
    "body": "this PR is stacked on #2012 so should be rebased when (if) that's merged.\r\n\r\nAdds the 'pyflakes' lint group to the ruff config",
    "head_branch": "ruff-pyflakes",
    "is_a_fork": true,
    "comments": [
      "@jensens this is ready for review"
    ],
    "commit_messages": [
      "Add 'pyflakes' lints (#2014)\n\n* add and apply minimal ruff configuration\r\n\r\n* add 'pyflakes' lint group"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9d7ac254a19ac29e502",
    "number": 2013,
    "body": "This PR is stacked on #2012, so should be rebased when (if) that gets merged.\r\n\r\nThis repo currently uses a mixture of single and double quoted strings. This PR standardises all quotes to the ruff/black default (double quotes).\r\n\r\nIf single quotes are preferred that's an easy config change. I'm in favour of double, but I think either is better than a mixture of the two",
    "head_branch": "ruff-quotes",
    "is_a_fork": true,
    "comments": [
      "i've just noticed the string quoting conventions in the contributing guide. Seems a bit complex to me but at least it's documented. I'll leave this PR here for discussion, but I can see that this change will be in violation of the current style guide."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9d8ac254a19ac29e503",
    "number": 2012,
    "body": "Adds a minimal Ruff configuration. I've chosen this configuration to match as closely as possible the behaviour of the existing linting and formatting, and have the least possible impact on existing code.\r\n\r\nRuff is a couple of orders of magnitude faster than flake8, which is particularly handy when using it as a pre-commit hook. It also has a massive range of additional lints that can be applied, and is able to autofix a large proportion of them.\r\n\r\nIf adding additional linting or more aggressive formatting is desirable that can be added (and discussed) in separate PRs. I've left the other lint groups in the config file, commented out. Suggest that these can be switched on one by one in other PRs (or removed) as appropriate.\r\n\r\n\r\n",
    "head_branch": "ruff",
    "is_a_fork": true,
    "comments": [
      "@jensens anything i can do to move this along?",
      "Looks overall good to me, just one thing, maybe personal flavor of mine: Why a ruff.toml if the very same configuration could be placed in pyproject.toml ?",
      "> Looks overall good to me, just one thing, maybe personal flavor of mine: Why a ruff.toml if the very same configuration could be placed in pyproject.toml ?\r\n\r\nI'll shift it over. Originally I was trying to minimise the impact on the original config, but then found it made it fully redundant\r\n\r\nEdit: @jensens this is now moved into `pyproject.toml` ",
      "Thanks! "
    ],
    "commit_messages": [
      "Use 'Ruff' for linting and formatting (#2012)\n\n* add and apply  ruff configuration in pyproject.toml\r\n* [pre-commit.ci] auto fixes from pre-commit.com hooks for more information, see https://pre-commit.ci\r\n---------\r\n\r\nCo-authored-by: Jens W. Klein <jk@kleinundpartner.at>\r\nCo-authored-by: pre-commit-ci[bot] <66853113+pre-commit-ci[bot]@users.noreply.github.com>\r\nCo-authored-by: daniel.eades <daniel.eades@seebyte.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9d9ac254a19ac29e504",
    "number": 2010,
    "body": "See #2009",
    "head_branch": "fix-2009",
    "is_a_fork": false,
    "comments": [
      "Test coverage fails in Python 3.7 to 3.9, but it is covered in 3.10 upwards.\r\n\r\nA local `tox -e py37` show the same result. Fun part: If I put a `breakpoint()` in between of the (according to pytest-cov) non-covered lines, I run into it.\r\n\r\nI have no idea what happens here.\r\n\r\nAny ideas?"
    ],
    "commit_messages": [
      "Fix regression #2009: Adding value to nested dicts broken (#2010)\n\nFix #2009:  Adding value to nested dicts broken after 2.2.0\r\n\r\nCo-authored-by: Kurt McKee <contactme@kurtmckee.org>\r\n\r\n---------\r\n\r\nCo-authored-by: Kurt McKee <contactme@kurtmckee.org>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9d9ac254a19ac29e505",
    "number": 2007,
    "body": "Bumps [codecov/codecov-action](https://github.com/codecov/codecov-action) from 3 to 4.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/codecov/codecov-action/releases\">codecov/codecov-action's releases</a>.</em></p>\n<blockquote>\n<h2>v4.0.0</h2>\n<p>v4 of the Codecov Action uses the <a href=\"https://docs.codecov.com/docs/the-codecov-cli\">CLI</a> as the underlying upload. The CLI has helped to power new features including local upload, the global upload token, and new upcoming features.</p>\n<h2>Breaking Changes</h2>\n<ul>\n<li>The Codecov Action runs as a <code>node20</code> action due to <code>node16</code> deprecation. See <a href=\"https://github.blog/changelog/2023-09-22-github-actions-transitioning-from-node-16-to-node-20/\">this post from GitHub</a> on how to migrate.</li>\n<li>Tokenless uploading is unsupported. However, PRs made from forks to the upstream public repos will support tokenless (e.g. contributors to OS projects do not need the upstream repo's Codecov token). This <a href=\"https://docs.codecov.com/docs/adding-the-codecov-token#github-actions\">doc</a> shows instructions on how to add the Codecov token.</li>\n<li>OS platforms have been added, though some may not be automatically detected. To see a list of platforms, see our <a href=\"https://cli.codecov.io\">CLI download page</a></li>\n<li>Various arguments to the Action have been changed. Please be aware that the arguments match with the CLI's needs</li>\n</ul>\n<p><code>v3</code> versions and below will not have access to CLI features (e.g. global upload token, ATS).</p>\n<h2>What's Changed</h2>\n<ul>\n<li>build(deps): bump openpgp from 5.8.0 to 5.9.0 by <a href=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/985\">codecov/codecov-action#985</a></li>\n<li>build(deps): bump actions/checkout from 3.0.0 to 3.5.3 by <a href=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1000\">codecov/codecov-action#1000</a></li>\n<li>build(deps): bump ossf/scorecard-action from 2.1.3 to 2.2.0 by <a href=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1006\">codecov/codecov-action#1006</a></li>\n<li>build(deps): bump tough-cookie from 4.0.0 to 4.1.3 by <a href=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1013\">codecov/codecov-action#1013</a></li>\n<li>build(deps-dev): bump word-wrap from 1.2.3 to 1.2.4 by <a href=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1024\">codecov/codecov-action#1024</a></li>\n<li>build(deps): bump node-fetch from 3.3.1 to 3.3.2 by <a href=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1031\">codecov/codecov-action#1031</a></li>\n<li>build(deps-dev): bump <code>@​types/node</code> from 20.1.4 to 20.4.5 by <a href=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1032\">codecov/codecov-action#1032</a></li>\n<li>build(deps): bump github/codeql-action from 1.0.26 to 2.21.2 by <a href=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1033\">codecov/codecov-action#1033</a></li>\n<li>build commit,report and upload args based on codecovcli by <a href=\"https://github.com/dana-yaish\"><code>@​dana-yaish</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/943\">codecov/codecov-action#943</a></li>\n<li>build(deps-dev): bump <code>@​types/node</code> from 20.4.5 to 20.5.3 by <a href=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1055\">codecov/codecov-action#1055</a></li>\n<li>build(deps): bump github/codeql-action from 2.21.2 to 2.21.4 by <a href=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1051\">codecov/codecov-action#1051</a></li>\n<li>build(deps-dev): bump <code>@​types/node</code> from 20.5.3 to 20.5.4 by <a href=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1058\">codecov/codecov-action#1058</a></li>\n<li>chore(deps): update outdated deps by <a href=\"https://github.com/thomasrockhu-codecov\"><code>@​thomasrockhu-codecov</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1059\">codecov/codecov-action#1059</a></li>\n<li>build(deps-dev): bump <code>@​types/node</code> from 20.5.4 to 20.5.6 by <a href=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1060\">codecov/codecov-action#1060</a></li>\n<li>build(deps-dev): bump <code>@​typescript-eslint/parser</code> from 6.4.1 to 6.5.0 by <a href=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1065\">codecov/codecov-action#1065</a></li>\n<li>build(deps-dev): bump <code>@​typescript-eslint/eslint-plugin</code> from 6.4.1 to 6.5.0 by <a href=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1064\">codecov/codecov-action#1064</a></li>\n<li>build(deps): bump actions/checkout from 3.5.3 to 3.6.0 by <a href=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1063\">codecov/codecov-action#1063</a></li>\n<li>build(deps-dev): bump eslint from 8.47.0 to 8.48.0 by <a href=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1061\">codecov/codecov-action#1061</a></li>\n<li>build(deps-dev): bump <code>@​types/node</code> from 20.5.6 to 20.5.7 by <a href=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1062\">codecov/codecov-action#1062</a></li>\n<li>build(deps): bump openpgp from 5.9.0 to 5.10.1 by <a href=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1066\">codecov/codecov-action#1066</a></li>\n<li>build(deps-dev): bump <code>@​types/node</code> from 20.5.7 to 20.5.9 by <a href=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1070\">codecov/codecov-action#1070</a></li>\n<li>build(deps): bump github/codeql-action from 2.21.4 to 2.21.5 by <a href=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1069\">codecov/codecov-action#1069</a></li>\n<li>build(deps-dev): bump <code>@​typescript-eslint/eslint-plugin</code> from 6.5.0 to 6.6.0 by <a href=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1072\">codecov/codecov-action#1072</a></li>\n<li>Update README.md by <a href=\"https://github.com/thomasrockhu-codecov\"><code>@​thomasrockhu-codecov</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1073\">codecov/codecov-action#1073</a></li>\n<li>build(deps-dev): bump <code>@​typescript-eslint/parser</code> from 6.5.0 to 6.6.0 by <a href=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1071\">codecov/codecov-action#1071</a></li>\n<li>build(deps-dev): bump <code>@​vercel/ncc</code> from 0.36.1 to 0.38.0 by <a href=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1074\">codecov/codecov-action#1074</a></li>\n<li>build(deps): bump <code>@​actions/core</code> from 1.10.0 to 1.10.1 by <a href=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1081\">codecov/codecov-action#1081</a></li>\n<li>build(deps-dev): bump <code>@​typescript-eslint/eslint-plugin</code> from 6.6.0 to 6.7.0 by <a href=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1080\">codecov/codecov-action#1080</a></li>\n<li>build(deps): bump actions/checkout from 3.6.0 to 4.0.0 by <a href=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1078\">codecov/codecov-action#1078</a></li>\n<li>build(deps): bump actions/upload-artifact from 3.1.2 to 3.1.3 by <a href=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1077\">codecov/codecov-action#1077</a></li>\n<li>build(deps-dev): bump <code>@​types/node</code> from 20.5.9 to 20.6.0 by <a href=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1075\">codecov/codecov-action#1075</a></li>\n<li>build(deps-dev): bump <code>@​typescript-eslint/parser</code> from 6.6.0 to 6.7.0 by <a href=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1079\">codecov/codecov-action#1079</a></li>\n<li>build(deps-dev): bump eslint from 8.48.0 to 8.49.0 by <a href=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1076\">codecov/codecov-action#1076</a></li>\n<li>use cli instead of node uploader by <a href=\"https://github.com/dana-yaish\"><code>@​dana-yaish</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1068\">codecov/codecov-action#1068</a></li>\n<li>chore(release): 4.0.0-beta.1 by <a href=\"https://github.com/thomasrockhu-codecov\"><code>@​thomasrockhu-codecov</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1084\">codecov/codecov-action#1084</a></li>\n<li>not adding -n if empty to do-upload command by <a href=\"https://github.com/dana-yaish\"><code>@​dana-yaish</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1085\">codecov/codecov-action#1085</a></li>\n<li>4.0.0-beta.2 by <a href=\"https://github.com/thomasrockhu-codecov\"><code>@​thomasrockhu-codecov</code></a> in <a href=\"https://redirect.github.com/codecov/codecov-action/pull/1086\">codecov/codecov-action#1086</a></li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/codecov/codecov-action/blob/main/CHANGELOG.md\">codecov/codecov-action's changelog</a>.</em></p>\n<blockquote>\n<h2>4.0.0-beta.2</h2>\n<h3>Fixes</h3>\n<ul>\n<li><a href=\"https://redirect.github.com/codecov/codecov-action/issues/1085\">#1085</a> not adding -n if empty to do-upload command</li>\n</ul>\n<h2>4.0.0-beta.1</h2>\n<p><code>v4</code> represents a move from the <a href=\"https://github.com/codecov/uploader\">universal uploader</a> to the <a href=\"https://github.com/codecov/codecov-cli\">Codecov CLI</a>. Although this will unlock new features for our users, the CLI is not yet at feature parity with the universal uploader.</p>\n<h3>Breaking Changes</h3>\n<ul>\n<li>No current support for <code>aarch64</code> and <code>alpine</code> architectures.</li>\n<li>Tokenless uploading is unsuported</li>\n<li>Various arguments to the Action have been removed</li>\n</ul>\n<h2>3.1.4</h2>\n<h3>Fixes</h3>\n<ul>\n<li><a href=\"https://redirect.github.com/codecov/codecov-action/issues/967\">#967</a> Fix typo in README.md</li>\n<li><a href=\"https://redirect.github.com/codecov/codecov-action/issues/971\">#971</a> fix: add back in working dir</li>\n<li><a href=\"https://redirect.github.com/codecov/codecov-action/issues/969\">#969</a> fix: CLI option names for uploader</li>\n</ul>\n<h3>Dependencies</h3>\n<ul>\n<li><a href=\"https://redirect.github.com/codecov/codecov-action/issues/970\">#970</a> build(deps-dev): bump <code>@​types/node</code> from 18.15.12 to 18.16.3</li>\n<li><a href=\"https://redirect.github.com/codecov/codecov-action/issues/979\">#979</a> build(deps-dev): bump <code>@​types/node</code> from 20.1.0 to 20.1.2</li>\n<li><a href=\"https://redirect.github.com/codecov/codecov-action/issues/981\">#981</a> build(deps-dev): bump <code>@​types/node</code> from 20.1.2 to 20.1.4</li>\n</ul>\n<h2>3.1.3</h2>\n<h3>Fixes</h3>\n<ul>\n<li><a href=\"https://redirect.github.com/codecov/codecov-action/issues/960\">#960</a> fix: allow for aarch64 build</li>\n</ul>\n<h3>Dependencies</h3>\n<ul>\n<li><a href=\"https://redirect.github.com/codecov/codecov-action/issues/957\">#957</a> build(deps-dev): bump jest-junit from 15.0.0 to 16.0.0</li>\n<li><a href=\"https://redirect.github.com/codecov/codecov-action/issues/958\">#958</a> build(deps): bump openpgp from 5.7.0 to 5.8.0</li>\n<li><a href=\"https://redirect.github.com/codecov/codecov-action/issues/959\">#959</a> build(deps-dev): bump <code>@​types/node</code> from 18.15.10 to 18.15.12</li>\n</ul>\n<h2>3.1.2</h2>\n<h3>Fixes</h3>\n<ul>\n<li><a href=\"https://redirect.github.com/codecov/codecov-action/issues/718\">#718</a> Update README.md</li>\n<li><a href=\"https://redirect.github.com/codecov/codecov-action/issues/851\">#851</a> Remove unsupported path_to_write_report argument</li>\n<li><a href=\"https://redirect.github.com/codecov/codecov-action/issues/898\">#898</a> codeql-analysis.yml</li>\n<li><a href=\"https://redirect.github.com/codecov/codecov-action/issues/901\">#901</a> Update README to contain correct information - inputs and negate feature</li>\n<li><a href=\"https://redirect.github.com/codecov/codecov-action/issues/955\">#955</a> fix: add in all the extra arguments for uploader</li>\n</ul>\n<h3>Dependencies</h3>\n<ul>\n<li><a href=\"https://redirect.github.com/codecov/codecov-action/issues/819\">#819</a> build(deps): bump openpgp from 5.4.0 to 5.5.0</li>\n<li><a href=\"https://redirect.github.com/codecov/codecov-action/issues/835\">#835</a> build(deps): bump node-fetch from 3.2.4 to 3.2.10</li>\n<li><a href=\"https://redirect.github.com/codecov/codecov-action/issues/840\">#840</a> build(deps): bump ossf/scorecard-action from 1.1.1 to 2.0.4</li>\n<li><a href=\"https://redirect.github.com/codecov/codecov-action/issues/841\">#841</a> build(deps): bump <code>@​actions/core</code> from 1.9.1 to 1.10.0</li>\n<li><a href=\"https://redirect.github.com/codecov/codecov-action/issues/843\">#843</a> build(deps): bump <code>@​actions/github</code> from 5.0.3 to 5.1.1</li>\n<li><a href=\"https://redirect.github.com/codecov/codecov-action/issues/869\">#869</a> build(deps): bump node-fetch from 3.2.10 to 3.3.0</li>\n<li><a href=\"https://redirect.github.com/codecov/codecov-action/issues/872\">#872</a> build(deps-dev): bump jest-junit from 13.2.0 to 15.0.0</li>\n<li><a href=\"https://redirect.github.com/codecov/codecov-action/issues/879\">#879</a> build(deps): bump decode-uri-component from 0.2.0 to 0.2.2</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/codecov/codecov-action/commit/f30e4959ba63075080d4f7f90cacc18d9f3fafd7\"><code>f30e495</code></a> fix: update action.yml (<a href=\"https://redirect.github.com/codecov/codecov-action/issues/1240\">#1240</a>)</li>\n<li><a href=\"https://github.com/codecov/codecov-action/commit/a7b945cea47ad44d8340fae2b004cb982191264f\"><code>a7b945c</code></a> fix: allow for other archs (<a href=\"https://redirect.github.com/codecov/codecov-action/issues/1239\">#1239</a>)</li>\n<li><a href=\"https://github.com/codecov/codecov-action/commit/98ab2c591b94478f4c3606d68ff73601df85ec43\"><code>98ab2c5</code></a> Update package.json (<a href=\"https://redirect.github.com/codecov/codecov-action/issues/1238\">#1238</a>)</li>\n<li><a href=\"https://github.com/codecov/codecov-action/commit/43235cc5aeeafd8aeb836fe7d647599acead161c\"><code>43235cc</code></a> Update README.md (<a href=\"https://redirect.github.com/codecov/codecov-action/issues/1237\">#1237</a>)</li>\n<li><a href=\"https://github.com/codecov/codecov-action/commit/0cf8684c821546a4e0c8c9a4cf4f21a7a0c5014b\"><code>0cf8684</code></a> chore(ci): bump to node20 (<a href=\"https://redirect.github.com/codecov/codecov-action/issues/1236\">#1236</a>)</li>\n<li><a href=\"https://github.com/codecov/codecov-action/commit/8e1e730371bf82c744e8ca9aa469e2b7011542ce\"><code>8e1e730</code></a> build(deps-dev): bump <code>@​typescript-eslint/eslint-plugin</code> from 6.19.1 to 6.20.0 ...</li>\n<li><a href=\"https://github.com/codecov/codecov-action/commit/61293af0e8288c75266030376a088c781ec81c18\"><code>61293af</code></a> build(deps-dev): bump <code>@​typescript-eslint/parser</code> from 6.19.1 to 6.20.0 (<a href=\"https://redirect.github.com/codecov/codecov-action/issues/1235\">#1235</a>)</li>\n<li><a href=\"https://github.com/codecov/codecov-action/commit/7a070cbe5b1002a522fa2d9446be76dd6abb709c\"><code>7a070cb</code></a> build(deps): bump github/codeql-action from 3.23.1 to 3.23.2 (<a href=\"https://redirect.github.com/codecov/codecov-action/issues/1231\">#1231</a>)</li>\n<li><a href=\"https://github.com/codecov/codecov-action/commit/909716592cc1daab655af36c98983bea3bca03e8\"><code>9097165</code></a> build(deps): bump actions/upload-artifact from 4.2.0 to 4.3.0 (<a href=\"https://redirect.github.com/codecov/codecov-action/issues/1232\">#1232</a>)</li>\n<li><a href=\"https://github.com/codecov/codecov-action/commit/ac042eaf0f05ddb0e0049e8761603887a080adc3\"><code>ac042ea</code></a> build(deps-dev): bump <code>@​typescript-eslint/eslint-plugin</code> from 6.19.0 to 6.19.1 ...</li>\n<li>Additional commits viewable in <a href=\"https://github.com/codecov/codecov-action/compare/v3...v4\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=codecov/codecov-action&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nYou can trigger a rebase of this PR by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>\n\n> **Note**\n> Automatic rebases have been disabled on this pull request as it has been open for over 30 days.",
    "head_branch": "dependabot/github_actions/codecov/codecov-action-4",
    "is_a_fork": false,
    "comments": [
      "@dependabot rebase",
      "Looks like this PR has been edited by someone other than Dependabot. That means Dependabot can't rebase it - sorry!\n\nIf you're happy for Dependabot to recreate it from scratch, overwriting any edits, you can request `@dependabot recreate`.\n",
      "@dependabot recreate"
    ],
    "commit_messages": [
      "Bump codecov/codecov-action from 3 to 4 (#2007)\n\n* Bump codecov/codecov-action from 3 to 4\r\n\r\nBumps [codecov/codecov-action](https://github.com/codecov/codecov-action) from 3 to 4.\r\n- [Release notes](https://github.com/codecov/codecov-action/releases)\r\n- [Changelog](https://github.com/codecov/codecov-action/blob/main/CHANGELOG.md)\r\n- [Commits](https://github.com/codecov/codecov-action/compare/v3...v4)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: codecov/codecov-action\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-major\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\n\r\n* Add the CODECOV_TOKEN env var required by codecov-action@v4\r\n\r\n---------\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>\r\nCo-authored-by: Fabio C. Barrionuevo da Luz <bnafta@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9daac254a19ac29e506",
    "number": 2004,
    "body": "major upgrade of package safty has breaking changes, leads to failure in CI/CD see #2003",
    "head_branch": "fix-2003",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Quick resolution of #2003 (#2004)\n\nquick resolution of #2003\r\n\r\nmajor upgrade of package safty has breaking changes, leads to failure in CI/CD"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9dbac254a19ac29e507",
    "number": 2000,
    "body": "Bumps [actions/setup-python](https://github.com/actions/setup-python) from 4 to 5.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/actions/setup-python/releases\">actions/setup-python's releases</a>.</em></p>\n<blockquote>\n<h2>v5.0.0</h2>\n<h2>What's Changed</h2>\n<p>In scope of this release, we update node version runtime from node16 to node20 (<a href=\"https://redirect.github.com/actions/setup-python/pull/772\">actions/setup-python#772</a>). Besides, we update dependencies to the latest versions.</p>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/setup-python/compare/v4.8.0...v5.0.0\">https://github.com/actions/setup-python/compare/v4.8.0...v5.0.0</a></p>\n<h2>v4.8.0</h2>\n<h2>What's Changed</h2>\n<p>In scope of this release we added support for GraalPy (<a href=\"https://redirect.github.com/actions/setup-python/pull/694\">actions/setup-python#694</a>). You can use this snippet to set up GraalPy:</p>\n<pre lang=\"yaml\"><code>steps:\n- uses: actions/checkout@v4\n- uses: actions/setup-python@v4 \n  with:\n    python-version: 'graalpy-22.3' \n- run: python my_script.py\n</code></pre>\n<p>Besides, the release contains such changes as:</p>\n<ul>\n<li>Trim python version when reading from file by <a href=\"https://github.com/FerranPares\"><code>@​FerranPares</code></a> in <a href=\"https://redirect.github.com/actions/setup-python/pull/628\">actions/setup-python#628</a></li>\n<li>Use non-deprecated versions in examples by <a href=\"https://github.com/jeffwidman\"><code>@​jeffwidman</code></a> in <a href=\"https://redirect.github.com/actions/setup-python/pull/724\">actions/setup-python#724</a></li>\n<li>Change deprecation comment to past tense by <a href=\"https://github.com/jeffwidman\"><code>@​jeffwidman</code></a> in <a href=\"https://redirect.github.com/actions/setup-python/pull/723\">actions/setup-python#723</a></li>\n<li>Bump <code>@​babel/traverse</code> from 7.9.0 to 7.23.2 by <a href=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a href=\"https://redirect.github.com/actions/setup-python/pull/743\">actions/setup-python#743</a></li>\n<li>advanced-usage.md: Encourage the use actions/checkout@v4 by <a href=\"https://github.com/cclauss\"><code>@​cclauss</code></a> in <a href=\"https://redirect.github.com/actions/setup-python/pull/729\">actions/setup-python#729</a></li>\n<li>Examples now use checkout@v4 by <a href=\"https://github.com/simonw\"><code>@​simonw</code></a> in <a href=\"https://redirect.github.com/actions/setup-python/pull/738\">actions/setup-python#738</a></li>\n<li>Update actions/checkout to v4 by <a href=\"https://github.com/dmitry-shibanov\"><code>@​dmitry-shibanov</code></a> in <a href=\"https://redirect.github.com/actions/setup-python/pull/761\">actions/setup-python#761</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/FerranPares\"><code>@​FerranPares</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/setup-python/pull/628\">actions/setup-python#628</a></li>\n<li><a href=\"https://github.com/timfel\"><code>@​timfel</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/setup-python/pull/694\">actions/setup-python#694</a></li>\n<li><a href=\"https://github.com/jeffwidman\"><code>@​jeffwidman</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/setup-python/pull/724\">actions/setup-python#724</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/setup-python/compare/v4...v4.8.0\">https://github.com/actions/setup-python/compare/v4...v4.8.0</a></p>\n<h2>v4.7.1</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Bump word-wrap from 1.2.3 to 1.2.4 by <a href=\"https://github.com/dependabot\"><code>@​dependabot</code></a> in <a href=\"https://redirect.github.com/actions/setup-python/pull/702\">actions/setup-python#702</a></li>\n<li>Add range validation for toml files by <a href=\"https://github.com/dmitry-shibanov\"><code>@​dmitry-shibanov</code></a> in <a href=\"https://redirect.github.com/actions/setup-python/pull/726\">actions/setup-python#726</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/setup-python/compare/v4...v4.7.1\">https://github.com/actions/setup-python/compare/v4...v4.7.1</a></p>\n<h2>v4.7.0</h2>\n<p>In scope of this release, the support for reading python version from pyproject.toml was added (<a href=\"https://redirect.github.com/actions/setup-python/pull/669\">actions/setup-python#669</a>).</p>\n<pre lang=\"yaml\"><code>      - name: Setup Python\n        uses: actions/setup-python@v4\n&lt;/tr&gt;&lt;/table&gt; \n</code></pre>\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/actions/setup-python/commit/0a5c61591373683505ea898e09a3ea4f39ef2b9c\"><code>0a5c615</code></a> Update action to node20 (<a href=\"https://redirect.github.com/actions/setup-python/issues/772\">#772</a>)</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/0ae58361cdfd39e2950bed97a1e26aa20c3d8955\"><code>0ae5836</code></a> Add example of GraalPy to docs (<a href=\"https://redirect.github.com/actions/setup-python/issues/773\">#773</a>)</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/b64ffcaf5b410884ad320a9cfac8866006a109aa\"><code>b64ffca</code></a> update actions/checkout to v4 (<a href=\"https://redirect.github.com/actions/setup-python/issues/761\">#761</a>)</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/8d2896179abf658742de432b3f203d2c2d86a587\"><code>8d28961</code></a> Examples now use checkout@v4 (<a href=\"https://redirect.github.com/actions/setup-python/issues/738\">#738</a>)</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/7bc6abb01e0555719edc2dbca70a2fde309e5e56\"><code>7bc6abb</code></a> advanced-usage.md: Encourage the use actions/checkout@v4 (<a href=\"https://redirect.github.com/actions/setup-python/issues/729\">#729</a>)</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/e8111cec9d3dc15220d8a3b638f08419f57b906a\"><code>e8111ce</code></a> Bump <code>@​babel/traverse</code> from 7.9.0 to 7.23.2 (<a href=\"https://redirect.github.com/actions/setup-python/issues/743\">#743</a>)</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/a00ea43da65e7c04d2bdae58b3afecd77057eb9e\"><code>a00ea43</code></a> add fix for graalpy ci (<a href=\"https://redirect.github.com/actions/setup-python/issues/741\">#741</a>)</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/8635b1ccc5934e73ed3510980fd2e7790b85839b\"><code>8635b1c</code></a> Change deprecation comment to past tense (<a href=\"https://redirect.github.com/actions/setup-python/issues/723\">#723</a>)</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/f6cc428f535856f9c23558d01765a42a4d6cf758\"><code>f6cc428</code></a> Use non-deprecated versions in examples (<a href=\"https://redirect.github.com/actions/setup-python/issues/724\">#724</a>)</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/5f2af211d616f86005883b44826180b21abb4060\"><code>5f2af21</code></a> Add GraalPy support (<a href=\"https://redirect.github.com/actions/setup-python/issues/694\">#694</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/actions/setup-python/compare/v4...v5\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/setup-python&package-manager=github_actions&previous-version=4&new-version=5)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nYou can trigger a rebase of this PR by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>\n\n> **Note**\n> Automatic rebases have been disabled on this pull request as it has been open for over 30 days.\n",
    "head_branch": "dependabot/github_actions/actions/setup-python-5",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Bump actions/setup-python from 4 to 5 (#2000)\n\nBumps [actions/setup-python](https://github.com/actions/setup-python) from 4 to 5.\r\n- [Release notes](https://github.com/actions/setup-python/releases)\r\n- [Commits](https://github.com/actions/setup-python/compare/v4...v5)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: actions/setup-python\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-major\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>\r\nCo-authored-by: Jens W. Klein <jk@kleinundpartner.at>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9dcac254a19ac29e508",
    "number": 1999,
    "body": "Bumps [actions/upload-artifact](https://github.com/actions/upload-artifact) from 3 to 4.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/actions/upload-artifact/releases\">actions/upload-artifact's releases</a>.</em></p>\n<blockquote>\n<h2>v4.0.0</h2>\n<h2>What's Changed</h2>\n<p>The release of upload-artifact@v4 and download-artifact@v4 are major changes to the backend architecture of Artifacts. They have numerous performance and behavioral improvements.</p>\n<p>For more information, see the <a href=\"https://github.com/actions/toolkit/tree/main/packages/artifact\"><code>@​actions/artifact</code></a> documentation.</p>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/vmjoseph\"><code>@​vmjoseph</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/upload-artifact/pull/464\">actions/upload-artifact#464</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/upload-artifact/compare/v3...v4.0.0\">https://github.com/actions/upload-artifact/compare/v3...v4.0.0</a></p>\n<h2>v3.1.3</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>chore(github): remove trailing whitespaces by <a href=\"https://github.com/ljmf00\"><code>@​ljmf00</code></a> in <a href=\"https://redirect.github.com/actions/upload-artifact/pull/313\">actions/upload-artifact#313</a></li>\n<li>Bump <code>@​actions/artifact</code> version to v1.1.2 by <a href=\"https://github.com/bethanyj28\"><code>@​bethanyj28</code></a> in <a href=\"https://redirect.github.com/actions/upload-artifact/pull/436\">actions/upload-artifact#436</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/upload-artifact/compare/v3...v3.1.3\">https://github.com/actions/upload-artifact/compare/v3...v3.1.3</a></p>\n<h2>v3.1.2</h2>\n<ul>\n<li>Update all <code>@actions/*</code> NPM packages to their latest versions- <a href=\"https://redirect.github.com/actions/upload-artifact/issues/374\">#374</a></li>\n<li>Update all dev dependencies to their most recent versions - <a href=\"https://redirect.github.com/actions/upload-artifact/issues/375\">#375</a></li>\n</ul>\n<h2>v3.1.1</h2>\n<ul>\n<li>Update actions/core package to latest version to remove <code>set-output</code> deprecation warning <a href=\"https://redirect.github.com/actions/upload-artifact/issues/351\">#351</a></li>\n</ul>\n<h2>v3.1.0</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Bump <code>@​actions/artifact</code> to v1.1.0 (<a href=\"https://redirect.github.com/actions/upload-artifact/pull/327\">actions/upload-artifact#327</a>)\n<ul>\n<li>Adds checksum headers on artifact upload (<a href=\"https://redirect.github.com/actions/toolkit/pull/1095\">actions/toolkit#1095</a>) (<a href=\"https://redirect.github.com/actions/toolkit/pull/1063\">actions/toolkit#1063</a>)</li>\n</ul>\n</li>\n</ul>\n</blockquote>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/actions/upload-artifact/commit/c7d193f32edcb7bfad88892161225aeda64e9392\"><code>c7d193f</code></a> Merge pull request <a href=\"https://redirect.github.com/actions/upload-artifact/issues/466\">#466</a> from actions/v4-beta</li>\n<li><a href=\"https://github.com/actions/upload-artifact/commit/13131bb095770b4070a7477c3cd2d96e1c16d9f4\"><code>13131bb</code></a> licensed cache</li>\n<li><a href=\"https://github.com/actions/upload-artifact/commit/4a6c273b9834f66a1d05c170dc3f80f9cdb9def1\"><code>4a6c273</code></a> Merge branch 'main' into v4-beta</li>\n<li><a href=\"https://github.com/actions/upload-artifact/commit/f391bb91a3d3118aeca171c365bb319ece276b37\"><code>f391bb9</code></a> Merge pull request <a href=\"https://redirect.github.com/actions/upload-artifact/issues/465\">#465</a> from actions/robherley/v4-documentation</li>\n<li><a href=\"https://github.com/actions/upload-artifact/commit/9653d03c4b74c32144e02dae644fea70e079d4b3\"><code>9653d03</code></a> Apply suggestions from code review</li>\n<li><a href=\"https://github.com/actions/upload-artifact/commit/875b63076402f25ef9d52c294c86ba4f97810575\"><code>875b630</code></a> add limitations section</li>\n<li><a href=\"https://github.com/actions/upload-artifact/commit/ecb21463e93740a6be75c3116242169bfdbcb15a\"><code>ecb2146</code></a> add compression example</li>\n<li><a href=\"https://github.com/actions/upload-artifact/commit/5e7604f84a055838f64ed68bb9904751523081ae\"><code>5e7604f</code></a> trim some repeated info</li>\n<li><a href=\"https://github.com/actions/upload-artifact/commit/d6437d07581fe318a364512e6cf6b1dca6b4f92c\"><code>d6437d0</code></a> naming</li>\n<li><a href=\"https://github.com/actions/upload-artifact/commit/1b561557037b4957d7d184e9aac02bec86c771eb\"><code>1b56155</code></a> s/v4-beta/v4/g</li>\n<li>Additional commits viewable in <a href=\"https://github.com/actions/upload-artifact/compare/v3...v4\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/upload-artifact&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nYou can trigger a rebase of this PR by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>\n\n> **Note**\n> Automatic rebases have been disabled on this pull request as it has been open for over 30 days.\n",
    "head_branch": "dependabot/github_actions/actions/upload-artifact-4",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Bump actions/upload-artifact from 3 to 4 (#1999)\n\nBumps [actions/upload-artifact](https://github.com/actions/upload-artifact) from 3 to 4.\r\n- [Release notes](https://github.com/actions/upload-artifact/releases)\r\n- [Commits](https://github.com/actions/upload-artifact/compare/v3...v4)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: actions/upload-artifact\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-major\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9ddac254a19ac29e509",
    "number": 1997,
    "body": "> Note: I recreated this closed PR https://github.com/cookiecutter/cookiecutter/pull/1963 as requested)\r\n\r\n**Description**\r\n\r\nCookiecutter supports using _jinja2_env_vars to modify the jinja environment. However when modifying `variable_start_string` or `variable_end_string` it will not work because we are hard-coding the start and end strings for the main directory creation (see [here](https://github.com/cookiecutter/cookiecutter/blob/2.4.0/cookiecutter/find.py#L20)). In addition, the jinja context is not always populated with the _jinja2_env_vars, for example when getting the [placeholder prompts here](https://github.com/cookiecutter/cookiecutter/blob/2.4.0/cookiecutter/prompt.py#L240)\r\n\r\n**Technical details**\r\n\r\nThis change does 3 things (which are in separate commits for readability):\r\n1. Creates a common utility function `create_env_with_context` so the jinja environment is created similarly and with context each time.\r\n   - Note that I also considered creating a single jinja env object & passing it around, however it requires much more refactoring (especially of tests), and we need to create it at least twice anyway (once to create the cookiecutter prompt, and once after the prompts are passed to the context), so I decided to go for the easier solution for now.\r\n2. Leverages the _jinja2_env_vars to search for the initial cookiecutter directory, to allow this customization of variable_start_string and variable_end_string.\r\n3. Small refactor to move `prompt_and_delete` from `utils` to `prompt`. It was causing circular import issues when having `prompt` import `utils`, because `utils` was importing `prompt`. And in any case I would say it makes more sense for it to live in `prompt` because it is a prompt as well after all.\r\n\r\nI also removed the `ensure_dir_is_templated` check because the same logic is used to find the dir, and is therefore redundant.\r\n\r\n**Use-case**\r\nIn react-native projects, it's extremely common to use `{{` and `}}` to pass objects to components. For example:\r\n```tsx\r\n<MyComponent\r\n    some-prop={{ key: 'value' }}\r\n</MyComponent>\r\n```\r\n\r\nSince `{{` is the default jinja variable string prefix, jinja goes crazy with react-native templates 🤪 .  \r\nA solution to this is to set `_jinja2_env_vars.variable_start_string == '{%{'` (or something else). But cookiecutter currently has issues when overriding this setting.\r\n\r\n**Testing**\r\n\r\nTested locally on a react-native project with `_jinja2_env_vars.variable_start_string == '{%{'` and `_jinja2_env_vars.variable_end_string == '}%}'`",
    "head_branch": "fix/jinja-variable-directory-name",
    "is_a_fork": true,
    "comments": [
      "What's the latest update on this? Would be extremely useful to have this ability",
      "> What's the latest update on this? Would be extremely useful to have this ability\r\n\r\n@ericof ",
      "@kurtmckee @ericof @jensens\r\nThis PR looks ready & has been reviewed, is there anything I can help with to get merged?\r\nThanks!",
      "@sacha-c I don't have rights to merge in this repo. A maintainer will need to merge.",
      "When can we expect a release to include this enhancement? ",
      "I plan to look first at some other PR's, but expect it within next 2-3 weeks. "
    ],
    "commit_messages": [
      "fix: modifying start and end variable strings (#1997)\n\nCreate a Jinja environment using context in order to modify start and end variable strings.\r\n\r\nCookiecutter supports using `_jinja2_env_vars` to modify the Jinja environment.\r\nHowever when modifying `variable_start_string` or `variable_end_string` it did not work because there were hard-coded start and end strings for the main directory creation.\r\n\r\nThis change leverages the `_jinja2_env_vars` to search for the main directory, to allow this customization of `variable_start_string` and `variable_end_string`.\r\n\r\nAdditional cleanup: While at it, the prompt util function `prompt_and_delete` was moved from `util.py` to `prompt.py`  since it made use of `read_user_yes_no` which was in `prompt`.\r\nThis solves a possible circular import situation.\r\n---------\r\n\r\nCo-authored-by: pre-commit-ci[bot] <66853113+pre-commit-ci[bot]@users.noreply.github.com>\r\nCo-authored-by: Jens W. Klein <jk@kleinundpartner.at>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9ddac254a19ac29e50a",
    "number": 1996,
    "body": "<!--pre-commit.ci start-->\nupdates:\n- [github.com/psf/black-pre-commit-mirror: 23.11.0 → 24.2.0](https://github.com/psf/black-pre-commit-mirror/compare/23.11.0...24.2.0)\n- [github.com/pycqa/isort: 5.12.0 → 5.13.2](https://github.com/pycqa/isort/compare/5.12.0...5.13.2)\n- [github.com/PyCQA/flake8: 6.1.0 → 7.0.0](https://github.com/PyCQA/flake8/compare/6.1.0...7.0.0)\n- [github.com/PyCQA/bandit: 1.7.5 → 1.7.7](https://github.com/PyCQA/bandit/compare/1.7.5...1.7.7)\n<!--pre-commit.ci end-->",
    "head_branch": "pre-commit-ci-update-config",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[pre-commit.ci] pre-commit autoupdate (#1996)\n\n* [pre-commit.ci] pre-commit autoupdate\r\n\r\nupdates:\r\n- [github.com/psf/black-pre-commit-mirror: 23.11.0 → 24.2.0](https://github.com/psf/black-pre-commit-mirror/compare/23.11.0...24.2.0)\r\n- [github.com/pycqa/isort: 5.12.0 → 5.13.2](https://github.com/pycqa/isort/compare/5.12.0...5.13.2)\r\n- [github.com/PyCQA/flake8: 6.1.0 → 7.0.0](https://github.com/PyCQA/flake8/compare/6.1.0...7.0.0)\r\n- [github.com/PyCQA/bandit: 1.7.5 → 1.7.7](https://github.com/PyCQA/bandit/compare/1.7.5...1.7.7)\r\n\r\n* [pre-commit.ci] auto fixes from pre-commit.com hooks\r\n\r\nfor more information, see https://pre-commit.ci\r\n\r\n---------\r\n\r\nCo-authored-by: pre-commit-ci[bot] <66853113+pre-commit-ci[bot]@users.noreply.github.com>\r\nCo-authored-by: Jens W. Klein <jk@kleinundpartner.at>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9deac254a19ac29e50b",
    "number": 1995,
    "body": "Fixes a bug as described in issue #1994, and an additional bug.",
    "head_branch": "issue1994",
    "is_a_fork": true,
    "comments": [
      "Although it was not within the scope of the original issue, I added another test case that covers the case where the config file contains multiple YAML documents, because it's closely related."
    ],
    "commit_messages": [
      "Fixed errors caused by invalid config files. (#1995)\n\n* Fixed errors caused by invalid config files.\r\n\r\nThis commit fixes two similar errors caused by configuration files\r\nwith unexpected contents:\r\n\r\n- if the config file is empty, then yaml.safe_load(stream) returns\r\n  None instead of an (empty) dictionary\r\n- if the config file has an array as its top-element, then\r\n  yaml.safe_load(stream) returns an array instead of a dictionary\r\n\r\nIn both cases, merge_configs(default, overwrite) would raise an\r\nexception due to only expecting a dictionary as an argument. These\r\ntwo cases are now handled as follows:\r\n\r\n- if the config file is empty, the result is an empty dictionary\r\n  resulting in the default config being used\r\n- if the config file does not have an object as its top-level\r\n  element, then an exception is raised to inform the user\r\n\r\n* Add test covering invalid config w multiple docs.\r\n\r\n- rewrote name and doc of existing test for clarity\r\n- adds a test that covers the case where the YAML config file\r\n  contains multiple documents\r\n- needed to add exception to linter because YAML files with multiple\r\n  docs are flagged"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9dfac254a19ac29e50c",
    "number": 1992,
    "body": "This PR address the issue #1694.\r\n\r\nThe proposed solution here is to have a default template path of `['.', '../templates']` and if the user would like to use the `FileSystemLoader` function to load other templates, then they are able to do so by adding paths to `additional_template_paths = []`.\r\n\r\nI have also modified `test_templates.py ` to account for the changes I have made.\r\n\r\nEnsured that `tox` coverage is 100%.\r\n",
    "head_branch": "remove-hardcoded-template-folder",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9e0ac254a19ac29e50d",
    "number": 1991,
    "body": "This pull request addresses the issue described in https://github.com/cookiecutter/cookiecutter/issues/1518. Written by @rafyak and @DanielZhangD\r\n\r\nThe solution was to add a check to render_and_create_dir to make sure the dirname was not empty.\r\n\r\n\r\nTesting was completed via adding a new unit tests for render_and_create_dir and making sure coverage stayed at 100%",
    "head_branch": "1518-directory-names-render-and-create-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[1518] Directory Name Render and Create Fix (#1991)\n\n* Raise warning when directory name is empty\r\n\r\n* Adding EmptyDirNameException for situation in render_and_create_dir where dirname is empty\r\n\r\n* Include new exception type in cli.py\r\n\r\n* Fixing linting issues and adding in test case for render_and_create_dir\r\n\r\n* [pre-commit.ci] auto fixes from pre-commit.com hooks\r\n\r\nfor more information, see https://pre-commit.ci\r\n\r\n---------\r\n\r\nCo-authored-by: Rafya Khan <rafya.khan@mail.utoronto.ca>\r\nCo-authored-by: Jens W. Klein <jk@kleinundpartner.at>\r\nCo-authored-by: pre-commit-ci[bot] <66853113+pre-commit-ci[bot]@users.noreply.github.com>\r\nCo-authored-by: Fábio C. Barrionuevo da Luz <bnafta@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9e1ac254a19ac29e50e",
    "number": 1989,
    "body": "Fix #1986 ",
    "head_branch": "issue-1986-python3.12",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Support Python 3.12 (#1989)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9e1ac254a19ac29e50f",
    "number": 1988,
    "body": "Closes #1985",
    "head_branch": "add-isort-issue-1985",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add isort as a pre-commit hook (#1988)\n\n* Add meta pre-commit hooks to help validate the pre-commit config\r\n\r\n* Add isort as a pre-commit hook; set its profile to match black\r\n\r\n* Run `pre-commit run -a isort`"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9e2ac254a19ac29e510",
    "number": 1984,
    "body": "This pull request addresses the issue described in #1653.\r\n\r\nMy solution here is to replace the subprocess.check_output() call with subprocess.run(), which allows the SSH passphrase prompt to be passed through to the user.\r\n\r\n The subprocess.run() function is more flexible and can interact with the user when necessary, such as prompting for a passphrase.\r\n \r\nIn this revised function, subprocess.run is used with the check=False argument to avoid immediate failure. The return code and output are then manually checked and handled. This should allow the passphrase prompt to appear and be entered by the user.\r\n\r\nI have tested this locally and passed all unit tests. Note, this change required me to modify some of the test cases. This is my process, which was done in a virtual environment:\r\n\r\n1. Made sure I was in the directory where you have cloned your fork of Cookiecutter with the modifications. \r\n2. Installed in Editable Mode: Use the following pip command to install your local Cookiecutter directory in editable mode:\r\n`pip install -e .`\r\n3.  After running the installation command, I verified that my local version of Cookiecutter is installed by checking the installed packages:\r\n`pip list`\r\n4. Tested my change in the Cookiecutter code, with Git configured with an SSH key that has a passphrase.\r\n`cookiecutter git+ssh://git@github.com/audreyr/cookiecutter-pypackage.git`\r\n5. This command now utilized my modified Cookiecutter code. It prompts for the SSH passphrase as expected.\r\n\r\n\r\nThus the issue/s are addressed.",
    "head_branch": "subprocess_SSH",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9e3ac254a19ac29e511",
    "number": 1982,
    "body": null,
    "head_branch": "prepare-2.5.0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Prepare release 2.5.0 (#1982)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9e4ac254a19ac29e512",
    "number": 1981,
    "body": "Support for new format: \r\n\r\n```json\r\n    {\r\n        \"templates\": {\r\n            \"project-1\": {\r\n                \"path\": \"./project-1\",\r\n                \"title\": \"Project 1\",\r\n                \"description\": \"A cookiecutter template for a project\"\r\n            },\r\n            \"package\": {\r\n                \"path\": \"./package\",\r\n                \"title\": \"Package\",\r\n                \"description\": \"A cookiecutter template for a package\"\r\n            }\r\n        }\r\n    }\r\n```\r\nCloses #1980",
    "head_branch": "issue-1980-new-nested-format",
    "is_a_fork": false,
    "comments": [
      "Thanks for tagging me to review this! I hope the feedback is helpful. Have a great weekend!",
      "The old format expects a list of strings.",
      "Note: The Windows tests are failing due to the absolute paths tests."
    ],
    "commit_messages": [
      "Implement new style for nested templates config (#1981)\n\n* Implement new style for nested templates config\r\n\r\n* Use set intesection to simplify codebase\r\n\r\n* Fix import order\r\n\r\n* Use list.pop\r\n\r\n* Fixes to prompt\r\n\r\n* Update documentation\r\n\r\n* Add tests to Windows filesystem"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9e5ac254a19ac29e513",
    "number": 1977,
    "body": "<!--pre-commit.ci start-->\nupdates:\n- [github.com/psf/black-pre-commit-mirror: 23.10.1 → 23.11.0](https://github.com/psf/black-pre-commit-mirror/compare/23.10.1...23.11.0)\n<!--pre-commit.ci end-->",
    "head_branch": "pre-commit-ci-update-config",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[pre-commit.ci] pre-commit autoupdate (#1977)\n\nupdates:\r\n- [github.com/psf/black-pre-commit-mirror: 23.10.1 → 23.11.0](https://github.com/psf/black-pre-commit-mirror/compare/23.10.1...23.11.0)\r\n\r\nCo-authored-by: pre-commit-ci[bot] <66853113+pre-commit-ci[bot]@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9e5ac254a19ac29e514",
    "number": 1971,
    "body": "Fixed swapped project name and author in the generated HTML",
    "head_branch": "fix-tutorial2-example-output",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix tutorial2 generated HTML (#1971)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9e6ac254a19ac29e515",
    "number": 1968,
    "body": "When using a local cookiecutter template that contains a pre_prompt script, cookiecutter will exit with a FileExistsError. \r\n\r\nReason for the FileExistsError is the input to `create_tmp_repo_dir()` which is just a simple dot. By converting the input into a Path object and using the `Path.resolve()`  method we get the absolute path instead of the relative(`.`) and `shutils.copytree()` runs without an error.\r\n\r\nOS: Windows 10\r\nLaunch Command: ` cookiecutter . --overwrite-if-exists`\r\nFixes #1972 ",
    "head_branch": "fix-windows-file-exists-error-with-pre-prompt",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix FileExistsError when using a relative template path (#1968)\n\nfix: FileExistsError when using relative path\r\n\r\nWhen using a local cookiecutter template ('cookiecutter .')\r\nthat contains a pre_prompt script, cookiecutter will exit\r\nwith a FileExistsError. The stack trace hints that the temporary\r\ndirectory already exists and cannot be created by shutils.copytree.\r\n\r\nBy converting repo_dir into a Path object and calling resolve\r\nto get the absolute path the actual name of the directory is used\r\ninstead of '.'."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9e7ac254a19ac29e516",
    "number": 1967,
    "body": "\"Programmatically\" is the correct spelling.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update README.md (#1967)\n\nprogrammatically is the correct spelling"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9e8ac254a19ac29e517",
    "number": 1965,
    "body": null,
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update cookiecutter-plone-starter link in readme (#1965)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9e9ac254a19ac29e518",
    "number": 1964,
    "body": "The \"run\" seems to be neccessary for the command to work as intended.\r\n\r\nHere is what I got when I tried without it:\r\n\r\n```bash\r\n❯ pipx cookiecutter gh:audreyfeldroy/cookiecutter-pypackage\r\nusage: pipx [-h] [--version] {install,uninject,inject,upgrade,upgrade-all,uninstall,uninstall-all,reinstall,reinstall-all,list,run,runpip,ensurepath,environment,completions} ...\r\npipx: error: argument command: invalid choice: 'cookiecutter' (choose from 'install', 'uninject', 'inject', 'upgrade', 'upgrade-all', 'uninstall', 'uninstall-all', 'reinstall', 'reinstall-all', 'list', 'run', 'runpip', 'ensurepath', 'environment', 'completions')\r\n```",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add argument run to pipx command in README.md (#1964)\n\nThe \"run\" seems to be neccessary for the command to work as intended"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9e9ac254a19ac29e519",
    "number": 1963,
    "body": "**Description**\r\n\r\nCookiecutter supports using _jinja2_env_vars to modify the jinja environment. However when modifying `variable_start_string` or `variable_end_string` it will not work because we are hard-coding the start and end strings for the main directory creation (see [here](https://github.com/cookiecutter/cookiecutter/blob/2.4.0/cookiecutter/find.py#L20)). In addition, the jinja context is not always populated with the _jinja2_env_vars, for example when getting the [placeholder prompts here](https://github.com/cookiecutter/cookiecutter/blob/2.4.0/cookiecutter/prompt.py#L240)\r\n\r\n**Technical details**\r\n\r\nThis change does 3 things (which are in separate commits for readability):\r\n1. Creates a common utility function `create_env_with_context` so the jinja environment is created similarly and with context each time.\r\n   - Note that I also considered creating a single jinja env object & passing it around, however it requires much more refactoring (especially of tests), and we need to create it at least twice anyway (once to create the cookiecutter prompt, and once after the prompts are passed to the context), so I decided to go for the easier solution for now.\r\n2. Leverages the _jinja2_env_vars to search for the initial cookiecutter directory, to allow this customization of variable_start_string and variable_end_string.\r\n3. Small refactor to move `prompt_and_delete` from `utils` to `prompt`. It was causing circular import issues when having `prompt` import `utils`, because `utils` was importing `prompt`. And in any case I would say it makes more sense for it to live in `prompt` because it is a prompt as well after all.\r\n\r\nI also removed the `ensure_dir_is_templated` check because the same logic is used to find the dir, and is therefore redundant.\r\n\r\n**Use-case**\r\nIn react-native projects, it's extremely common to use `{{` and `}}` to pass objects to components. For example:\r\n```tsx\r\n<MyComponent\r\n    some-prop={{ key: 'value' }}\r\n</MyComponent>\r\n```\r\n\r\nSince `{{` is the default jinja variable string prefix, jinja goes crazy with react-native templates 🤪 .  \r\nA solution to this is to set `_jinja2_env_vars.variable_start_string == '{%{'` (or something else). But cookiecutter currently has issues when overriding this setting.\r\n\r\n**Testing**\r\n\r\nTested locally on a react-native project with `_jinja2_env_vars.variable_start_string == '{%{'` and `_jinja2_env_vars.variable_end_string == '}%}'`",
    "head_branch": "fix/jinja-variable-directory-name",
    "is_a_fork": true,
    "comments": [
      "(EDIT: This comment is now resolved with my latest change)\r\n\r\nAfter further testing, I found that the placeholders used to generate the `context` are rendered _without_ using the `_jinja2_env_vars`.\r\n\r\nThis means that currently a file with:\r\n```json\r\n{\r\n    \"name\": \"Easy Project\",\r\n    \"slug\": \"{%{ cookiecutter.name.lower().replace(' ', '-') }%}\",\r\n    \"repo_path\": \"elements/elements-react-native/{%{ cookiecutter.slug }%}\",\r\n    \"author_name\": \"John Doe\",\r\n    \"author_email\": \"john.doe@elements.nl\",\r\n    \"description\": \"The greatest project ever created.\",\r\n    \"use_renovate\": [\r\n        \"yes\",\r\n        \"no\"\r\n    ],\r\n    \"_jinja2_env_vars\": {\r\n        \"variable_start_string\": \"{%{\",\r\n        \"variable_end_string\": \"}%}\"\r\n    }\r\n}\r\n```\r\n\r\nwill not work, because cookiecutter renders `{%{ cookiecutter.name.lower().replace(' ', '-') }%}` using `{{` instead of the provided override `{%{`\r\n\r\nThe issue is that [prompt_for_config](https://github.com/cookiecutter/cookiecutter/blob/2.4.0/cookiecutter/prompt.py#L233) is being called without passing the `envvars` to the jinja context...\r\n\r\nI am setting this PR to draft and will try to make the improvements for this to work.\r\n\r\n**EDIT:** I have updated the PR with a solution. Looking forward to your feedback 🙂 ",
      "@sacha-c Thank you for your work on this! However, this appears to be a duplicate of #1837.\r\n\r\nI'm closing this as a duplicate, but please comment back if there's functionality that your PR addresses that isn't addressed in #1837. Thank you!",
      "@kurtmckee thanks for taking a look! I really appreciate it 👍 \r\n\r\nAnd thanks for linking that PR, I had totally missed it when investigating this issue.\r\n\r\nHowever reading through it it looks like it is missing an additional fix\r\nBasically there are two issues:\r\n1. `variable_start_string` & `variable_end_string` are not taken into account when looking for the cookiecutter root directory\r\n   - This is included in the PR you linked, and in mine\r\n2. `_jinja2_env_vars` not taken into account when generating the updated cookiecutter context\r\n   - This is missing from the PR you linked, I only discovered it while further testing my changes on a project. [see my comment above](https://github.com/cookiecutter/cookiecutter/pull/1963#issuecomment-1777330179)\r\n\r\nI did like the use of `Environment.variable_start_string` rather than hardcoding default values as I was doing, so I've updated my PR with that improvement\r\n\r\nI would suggest closing the other PR in favor of this one.",
      "Oh, nice! Thanks for responding back!\r\n\r\n...and I just discovered that I only have repo permissions to close PRs but not to re-open them. I assumed that I could re-open PRs. 😞\r\n\r\n@ericof and @jensens, please re-open this PR and review in light of the additional bug fix that this offers over #1837 (interpreting template openers/closers in variables in `cookiecutter.json`).",
      "Hello!\r\nI see this PR is still closed, so just want to make sure it is still on the radar, if it can be re-opened and reviewed\r\nThanks! @kurtmckee @ericof @jensens \r\n",
      "Hello,\r\nWhat is the state of this PR, would you like me to create a new PR in order reopen it? \r\nThanks in advance\r\n@kurtmckee @ericof @jensens ",
      "I cannot re-open PRs; @ericof it will be helpful if you can reopen this. Thanks!",
      "@sacha-c If this doesn't get re-opened, please open a new PR. My apologies for these difficulties!",
      "Unfortunately I could not reopen (at least not in mobile app)",
      "I have just recreated the PR as requested: https://github.com/cookiecutter/cookiecutter/pull/1997\r\nI've rebased it onto current main & all tests are green, so all should be good and ready for review\r\n@kurtmckee @ericof @jensens "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9eaac254a19ac29e51a",
    "number": 1962,
    "body": "The original link has expired and has been replaced with a new related link.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Duplicate of #1952 "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9ebac254a19ac29e51b",
    "number": 1961,
    "body": "In 2.2.0, `generate.apply_overwrites_to_context` was amended with a recursive call to allow merging fields inside dictionary variables (#1692 )\r\n\r\nIn 2.3.0, it was further amended to allow merging of multichoice variables (#1903). \r\n\r\nHowever, these two changes interact to mean that cookiecutter began treating any list field in a dictionary variable as a choice (see #1954, #1960 for bugs running into this issue). If all the entries in a list field are hashable, then this may not cause problems, but if e.g. you have complex objects with lists of dictionary variables then the call to set introduce in #1903 would also cause a crash.\r\n\r\nThis PR fixes the merge behaviour by adding a simple recursive flag when applying the overwrites to dictionary variables. Cookiecutter itself will only treat \"top-level\" lists as choice variables, so this is consistent with the interaction model and the docs which state \"The dictionary values can, themselves, be other dictionaries and lists - the data structure can be as deep as you need.\"",
    "head_branch": "fix_recursive_context_overwrites",
    "is_a_fork": true,
    "comments": [
      "Hello, just a nudge to ask if this could be reviewed? At the moment I'm running off my own branch as this issue is blocking us from using the main cookiecutter release "
    ],
    "commit_messages": [
      "Fix recursive context overwrites (#1961)\n\n* Add recursive flag to generate.apply_overwrites_to_context\r\n\r\nThe recursive call to apply_overwrites_to_context for dictionary\r\nvariables mistakenly led to lists in dictionaries being treated\r\nas choice/multichoice variables\r\n\r\n* Update tests for choice, multichoice and dictionary variables\r\n\r\n* [pre-commit.ci] auto fixes from pre-commit.com hooks\r\n\r\nfor more information, see https://pre-commit.ci\r\n\r\n* Fix missing test docstring in tests/test_generate_context.py\r\n\r\n---------\r\n\r\nCo-authored-by: pre-commit-ci[bot] <66853113+pre-commit-ci[bot]@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9ecac254a19ac29e51c",
    "number": 1957,
    "body": "<!--pre-commit.ci start-->\nupdates:\n- [github.com/psf/black-pre-commit-mirror: 23.9.1 → 23.10.1](https://github.com/psf/black-pre-commit-mirror/compare/23.9.1...23.10.1)\n- [github.com/pre-commit/pre-commit-hooks: v4.4.0 → v4.5.0](https://github.com/pre-commit/pre-commit-hooks/compare/v4.4.0...v4.5.0)\n<!--pre-commit.ci end-->",
    "head_branch": "pre-commit-ci-update-config",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[pre-commit.ci] pre-commit autoupdate (#1957)\n\nupdates:\r\n- [github.com/psf/black-pre-commit-mirror: 23.9.1 → 23.10.1](https://github.com/psf/black-pre-commit-mirror/compare/23.9.1...23.10.1)\r\n- [github.com/pre-commit/pre-commit-hooks: v4.4.0 → v4.5.0](https://github.com/pre-commit/pre-commit-hooks/compare/v4.4.0...v4.5.0)\r\n\r\nCo-authored-by: pre-commit-ci[bot] <66853113+pre-commit-ci[bot]@users.noreply.github.com>\r\nCo-authored-by: Érico Andrei <ericof@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9edac254a19ac29e51d",
    "number": 1956,
    "body": "__Issue__\r\nhttps://github.com/cookiecutter/cookiecutter/issues/1928 \r\n\r\n__About__\r\nThis PR will allow cookiecutter users to create multiple scripts for any hook type. It will also sort them.\r\ni.e. ```pre_prompt_1, pre_prompt_2```\r\n\r\n__Testing__\r\nCreated ```post_gen_project_2.sh``` in new cookiecutter template with\r\n```\r\n#!/bin/bash\r\n\r\ntouch test_post_gen_project_2\r\n```\r\nVerified that this file is created, and the files are run in sorted order.\r\n\r\n__Documentation__\r\nUpdated documentation with this new functionality",
    "head_branch": "update_hook_valid",
    "is_a_fork": true,
    "comments": [
      "@david-abn I like this PR. Could you add a new test to show this is working?",
      "> @david-abn I like this PR. Could you add a new test to show this is working?\r\n\r\nAdded new commit to update unit test. Thank you"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9edac254a19ac29e51e",
    "number": 1953,
    "body": "Bumps [actions/checkout](https://github.com/actions/checkout) from 3 to 4.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/actions/checkout/releases\">actions/checkout's releases</a>.</em></p>\n<blockquote>\n<h2>v4.0.0</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Update default runtime to node20 by <a href=\"https://github.com/takost\"><code>@​takost</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1436\">actions/checkout#1436</a></li>\n<li>Support fetching without the --progress option by <a href=\"https://github.com/simonbaird\"><code>@​simonbaird</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1067\">actions/checkout#1067</a></li>\n<li>Release 4.0.0 by <a href=\"https://github.com/takost\"><code>@​takost</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1447\">actions/checkout#1447</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/takost\"><code>@​takost</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/checkout/pull/1436\">actions/checkout#1436</a></li>\n<li><a href=\"https://github.com/simonbaird\"><code>@​simonbaird</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/checkout/pull/1067\">actions/checkout#1067</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/checkout/compare/v3...v4.0.0\">https://github.com/actions/checkout/compare/v3...v4.0.0</a></p>\n<h2>v3.6.0</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Mark test scripts with Bash'isms to be run via Bash by <a href=\"https://github.com/dscho\"><code>@​dscho</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1377\">actions/checkout#1377</a></li>\n<li>Add option to fetch tags even if fetch-depth &gt; 0 by <a href=\"https://github.com/RobertWieczoreck\"><code>@​RobertWieczoreck</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/579\">actions/checkout#579</a></li>\n<li>Release 3.6.0 by <a href=\"https://github.com/luketomlinson\"><code>@​luketomlinson</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1437\">actions/checkout#1437</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/RobertWieczoreck\"><code>@​RobertWieczoreck</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/checkout/pull/579\">actions/checkout#579</a></li>\n<li><a href=\"https://github.com/luketomlinson\"><code>@​luketomlinson</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/checkout/pull/1437\">actions/checkout#1437</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/checkout/compare/v3.5.3...v3.6.0\">https://github.com/actions/checkout/compare/v3.5.3...v3.6.0</a></p>\n<h2>v3.5.3</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Fix: Checkout Issue in self hosted runner due to faulty submodule check-ins by <a href=\"https://github.com/megamanics\"><code>@​megamanics</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1196\">actions/checkout#1196</a></li>\n<li>Fix typos found by codespell by <a href=\"https://github.com/DimitriPapadopoulos\"><code>@​DimitriPapadopoulos</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1287\">actions/checkout#1287</a></li>\n<li>Add support for sparse checkouts by <a href=\"https://github.com/dscho\"><code>@​dscho</code></a> and <a href=\"https://github.com/dfdez\"><code>@​dfdez</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1369\">actions/checkout#1369</a></li>\n<li>Release v3.5.3 by <a href=\"https://github.com/TingluoHuang\"><code>@​TingluoHuang</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1376\">actions/checkout#1376</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/megamanics\"><code>@​megamanics</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/checkout/pull/1196\">actions/checkout#1196</a></li>\n<li><a href=\"https://github.com/DimitriPapadopoulos\"><code>@​DimitriPapadopoulos</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/checkout/pull/1287\">actions/checkout#1287</a></li>\n<li><a href=\"https://github.com/dfdez\"><code>@​dfdez</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/checkout/pull/1369\">actions/checkout#1369</a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/checkout/compare/v3...v3.5.3\">https://github.com/actions/checkout/compare/v3...v3.5.3</a></p>\n<h2>v3.5.2</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Fix: Use correct API url / endpoint in GHES by <a href=\"https://github.com/fhammerl\"><code>@​fhammerl</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1289\">actions/checkout#1289</a> based on <a href=\"https://redirect.github.com/actions/checkout/issues/1286\">#1286</a> by <a href=\"https://github.com/1newsr\"><code>@​1newsr</code></a></li>\n</ul>\n<p><strong>Full Changelog</strong>: <a href=\"https://github.com/actions/checkout/compare/v3.5.1...v3.5.2\">https://github.com/actions/checkout/compare/v3.5.1...v3.5.2</a></p>\n<h2>v3.5.1</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Improve checkout performance on Windows runners by upgrading <code>@​actions/github</code> dependency by <a href=\"https://github.com/BrettDong\"><code>@​BrettDong</code></a> in <a href=\"https://redirect.github.com/actions/checkout/pull/1246\">actions/checkout#1246</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/BrettDong\"><code>@​BrettDong</code></a> made their first contribution in <a href=\"https://redirect.github.com/actions/checkout/pull/1246\">actions/checkout#1246</a></li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/actions/checkout/blob/main/CHANGELOG.md\">actions/checkout's changelog</a>.</em></p>\n<blockquote>\n<h1>Changelog</h1>\n<h2>v4.1.0</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1396\">Add support for partial checkout filters</a></li>\n</ul>\n<h2>v4.0.0</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1067\">Support fetching without the --progress option</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1436\">Update to node20</a></li>\n</ul>\n<h2>v3.6.0</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1377\">Fix: Mark test scripts with Bash'isms to be run via Bash</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/579\">Add option to fetch tags even if fetch-depth &gt; 0</a></li>\n</ul>\n<h2>v3.5.3</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1196\">Fix: Checkout fail in self-hosted runners when faulty submodule are checked-in</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1287\">Fix typos found by codespell</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1369\">Add support for sparse checkouts</a></li>\n</ul>\n<h2>v3.5.2</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1289\">Fix api endpoint for GHES</a></li>\n</ul>\n<h2>v3.5.1</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1246\">Fix slow checkout on Windows</a></li>\n</ul>\n<h2>v3.5.0</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1237\">Add new public key for known_hosts</a></li>\n</ul>\n<h2>v3.4.0</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1209\">Upgrade codeql actions to v2</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1210\">Upgrade dependencies</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1225\">Upgrade <code>@​actions/io</code></a></li>\n</ul>\n<h2>v3.3.0</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1045\">Implement branch list using callbacks from exec function</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1050\">Add in explicit reference to private checkout options</a></li>\n<li>[Fix comment typos (that got added in <a href=\"https://redirect.github.com/actions/checkout/issues/770\">#770</a>)](<a href=\"https://redirect.github.com/actions/checkout/pull/1057\">actions/checkout#1057</a>)</li>\n</ul>\n<h2>v3.2.0</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/942\">Add GitHub Action to perform release</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/967\">Fix status badge</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1002\">Replace datadog/squid with ubuntu/squid Docker image</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/964\">Wrap pipeline commands for submoduleForeach in quotes</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1029\">Update <code>@​actions/io</code> to 1.1.2</a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/1039\">Upgrading version to 3.2.0</a></li>\n</ul>\n<h2>v3.1.0</h2>\n<ul>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/939\">Use <code>@​actions/core</code> <code>saveState</code> and <code>getState</code></a></li>\n<li><a href=\"https://redirect.github.com/actions/checkout/pull/922\">Add <code>github-server-url</code> input</a></li>\n</ul>\n<h2>v3.0.2</h2>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/actions/checkout/commit/8ade135a41bc03ea155e62e844d188df1ea18608\"><code>8ade135</code></a> Prepare 4.1.0 release (<a href=\"https://redirect.github.com/actions/checkout/issues/1496\">#1496</a>)</li>\n<li><a href=\"https://github.com/actions/checkout/commit/c533a0a4cfc4962971818edcfac47a2899e69799\"><code>c533a0a</code></a> Add support for partial checkout filters (<a href=\"https://redirect.github.com/actions/checkout/issues/1396\">#1396</a>)</li>\n<li><a href=\"https://github.com/actions/checkout/commit/72f2cec99f417b1a1c5e2e88945068983b7965f9\"><code>72f2cec</code></a> Update README.md for V4 (<a href=\"https://redirect.github.com/actions/checkout/issues/1452\">#1452</a>)</li>\n<li><a href=\"https://github.com/actions/checkout/commit/3df4ab11eba7bda6032a0b82a6bb43b11571feac\"><code>3df4ab1</code></a> Release 4.0.0 (<a href=\"https://redirect.github.com/actions/checkout/issues/1447\">#1447</a>)</li>\n<li><a href=\"https://github.com/actions/checkout/commit/8b5e8b768746b50394015010d25e690bfab9dfbc\"><code>8b5e8b7</code></a> Support fetching without the --progress option (<a href=\"https://redirect.github.com/actions/checkout/issues/1067\">#1067</a>)</li>\n<li><a href=\"https://github.com/actions/checkout/commit/97a652b80035363df47baee5031ec8670b8878ac\"><code>97a652b</code></a> Update default runtime to node20 (<a href=\"https://redirect.github.com/actions/checkout/issues/1436\">#1436</a>)</li>\n<li>See full diff in <a href=\"https://github.com/actions/checkout/compare/v3...v4\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/checkout&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nYou can trigger a rebase of this PR by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>\n\n> **Note**\n> Automatic rebases have been disabled on this pull request as it has been open for over 30 days.\n",
    "head_branch": "dependabot/github_actions/actions/checkout-4",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Bump actions/checkout from 3 to 4 (#1953)\n\nBumps [actions/checkout](https://github.com/actions/checkout) from 3 to 4.\r\n- [Release notes](https://github.com/actions/checkout/releases)\r\n- [Changelog](https://github.com/actions/checkout/blob/main/CHANGELOG.md)\r\n- [Commits](https://github.com/actions/checkout/compare/v3...v4)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: actions/checkout\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-major\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>\r\nCo-authored-by: Érico Andrei <ericof@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9eeac254a19ac29e51f",
    "number": 1952,
    "body": "'Learn More' link under 'For Template Creators' was pointing a 404 not found page.",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [
      "Resolves #1970"
    ],
    "commit_messages": [
      "Update README.md to fix broken link (#1952)\n\n'Learn More' link under 'For Template Creators' was pointing a 404 not found page."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9efac254a19ac29e520",
    "number": 1951,
    "body": null,
    "head_branch": "prepare-2.4.0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Prepare release 2.4.0 (#1951)\n\n* Prepare release 2.4.0\r\n\r\n* Update HISTORY.md\r\n\r\n* Update relase-drafter configuration.\r\n\r\n* Update README.md"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9f0ac254a19ac29e521",
    "number": 1950,
    "body": "## Summary\r\n\r\nThis PR implements a new hook, `pre_prompt`, that will run before any question is presented to the user.\r\n\r\nThis hook could be used for sanity checks or to rewrite `cookiecutter.json` to add default values.\r\n\r\n## Checklist\r\n\r\n- [X] Tests\r\n- [X] Documentation\r\n\r\n\r\nFixes #1948 ",
    "head_branch": "issue-1948",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Implement a pre_prompt hook that will run before prompts (#1950)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9f0ac254a19ac29e522",
    "number": 1949,
    "body": null,
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update README.md to include installation instructions (#1949)\n\n* Update README.md to include installation instructions\r\n\r\n* Update README.md\r\n\r\nCo-authored-by: Kurt McKee <contactme@kurtmckee.org>\r\n\r\n---------\r\n\r\nCo-authored-by: Érico Andrei <ericof@gmail.com>\r\nCo-authored-by: Kurt McKee <contactme@kurtmckee.org>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9f1ac254a19ac29e523",
    "number": 1947,
    "body": "**Issue**\r\nhttps://github.com/cookiecutter/cookiecutter/issues/1915\r\n\r\n**Testing**\r\nNo testing required as I am only updating docstring\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "update main docstrings to include overwrite_if_exists and skip_if_file_exists (#1947)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9f2ac254a19ac29e524",
    "number": 1942,
    "body": "## Overview\r\nAccording to [Python docs](https://docs.python.org/3/library/io.html?highlight=newlines#io.TextIOBase.newlines), `newlines` can be one of:\r\n- `None`\r\n- string (if line endings are consistent)\r\n- Tuple of strings (if multiple line endings are used)\r\n\r\nMeanwhile, `open` builtin takes `None` or a string representing the new line according to [Python docs](https://docs.python.org/3/library/functions.html#open). Hence, there is a mismatch between the two for the case of multiple line endings. `cookiecutter` will get something like `newlines=(\"\\n\", \"\\r\\n\")` and try to pass that to `open` function. In turn, this will throw an error that looks like this:\r\n```\r\nTypeError: open() argument 'newline' must be str or None, not tuple\r\n```\r\n\r\nThis PR proposes that `cookiecutter` takes the first detected new line when it encounters template files with mixed line endings. Whilst this means that original line endings aren't completed preserved, this seems like a better user experience than throwing a `TypeError`. It should also make `cookiecutter` more resilient against (arguably) malformed inputs.\r\n\r\nFixes https://github.com/cookiecutter/cookiecutter/issues/1737.\r\n\r\n## Testing\r\n- Added a test `test_generate_file_handles_mixed_line_endings` to reproduce the issue, it only passes with the proposed patch ✅ \r\n- Existing tests pass locally too ✅ \r\n- Confirmed that proposed changes are covered via the coverage report ✅ \r\n\r\n## Notes\r\n- New `test_generate_file_handles_mixed_line_endings` test asserts that either CRLF or LF newlines are returned, as Python docs seem to make no guarantees on what order line endings are returned in case of file having mixed newlines.\r\n",
    "head_branch": "fix-mixed-line-endings",
    "is_a_fork": true,
    "comments": [
      "Thank you very much for landing this 🙌 "
    ],
    "commit_messages": [
      "Gracefully handle files with mixed lined endings (#1942)\n\nCo-authored-by: Érico Andrei <ericof@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9f3ac254a19ac29e525",
    "number": 1941,
    "body": null,
    "head_branch": "prepare-2.3.1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Prepare release 2.3.1 (#1941)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9f3ac254a19ac29e526",
    "number": 1940,
    "body": "Fixes #1939",
    "head_branch": "issue-1939-fix-prompt-numbers",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Fix prompt counter. (#1940)\n\nFix prompt counter. Fixes #1939"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9f4ac254a19ac29e527",
    "number": 1937,
    "body": "## Changes\r\n- Read `VERSION.txt` using UTF-8\r\n- Read and write replay JSON using UTF-8\r\n\r\n## Notes\r\nI'm trying to add `-X warn_default_encoding` to `beeware/briefcase`'s test suite....but it seems to require _everything_ to explicitly specify encodings.",
    "head_branch": "explicit-file-encodings",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use UTF-8 for file reading/writing (#1937)\n\n- Read `VERSION.txt` using UTF-8\r\n- Read and write replay JSON using UTF-8"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9f5ac254a19ac29e528",
    "number": 1934,
    "body": "The black changelog notes that this pre-commit hook's binaries are compiled with mypyc and are ~2x faster.\r\n\r\nNice!",
    "head_branch": "update-black-pre-commit-hook-url",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update the black pre-commit hook URL and version (#1934)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9f6ac254a19ac29e529",
    "number": 1933,
    "body": "<!--pre-commit.ci start-->\nupdates:\n- [github.com/psf/black.git: 23.7.0 → 23.9.1](https://github.com/psf/black.git/compare/23.7.0...23.9.1)\n<!--pre-commit.ci end-->",
    "head_branch": "pre-commit-ci-update-config",
    "is_a_fork": false,
    "comments": [
      "This is superseded by #1934."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9f7ac254a19ac29e52a",
    "number": 1932,
    "body": "I think I found a typo in tutorial 2 [Create a Cookiecutter From Scratch](https://cookiecutter.readthedocs.io/en/stable/tutorials/tutorial2.html), when trying to reproduce it and getting stuck at [packing cookiecutter into ZIP](https://cookiecutter.readthedocs.io/en/stable/tutorials/tutorial2.html#step-5-pack-cookiecutter-into-zip.\r\n\r\nI was able to pack the cookiecutter after adding a parent directory symbol, which was apparently missing in line 2 of the packing script (unless I misunderstood something, which is also probable because I am not familiar with `pushd` and `popd`).\r\n\r\nPlease feel free to merge/close without comment!",
    "head_branch": "typo-in-tutorial",
    "is_a_fork": true,
    "comments": [
      "Looks like this has reverted.\r\nThe `pushd` command is missing the parent directory symbol again `pushd ..`\r\nhttps://cookiecutter.readthedocs.io/en/latest/tutorials/tutorial2.html",
      "This didn't revert -- it never actually got updated. [Read the Docs is configured to track `master`](https://readthedocs.org/projects/cookiecutter/versions/), not `main`.\r\n\r\n@audreyfeldroy @pydanny @ericof @jensens please modify cookiecutter's config in Read the Docs so that \"latest\" tracks `main`.",
      "I've set RTD to target main and ran the build again. Can someone let me know if the change worked?",
      "Looks like that worked @pydanny. https://cookiecutter.readthedocs.io/en/latest/tutorials/tutorial2.html#step-5-pack-cookiecutter-into-zip has the line `pushd .. &&`",
      "Thank you both! 👍 ",
      "And happy holidays!"
    ],
    "commit_messages": [
      "Add missing \"parent dir\" symbol in tutorial 2 (#1932)\n\nAdd missing parent dir symbol in tutorial 2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9f7ac254a19ac29e52b",
    "number": 1931,
    "body": "FIXED #1733",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "I don't think that this type of condition is a best practice.\r\n\r\nIn the associated issue, I've recommended getting CircuitPython to update their install instructions."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9f8ac254a19ac29e52c",
    "number": 1925,
    "body": null,
    "head_branch": "feature/add_dump_input_option",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9f9ac254a19ac29e52d",
    "number": 1924,
    "body": "I'm using cookiecutter programatically and generating some config values (_replay_dir_ to be specific) dynamically. So, I need ability to pass it from the outside. \r\nMaybe I'm wrong, but it seems like current version doesn't allow to do that. Creating config file time for every call of the cookiecutter sounds like an overhead to me.\r\nHere's my small suggestion how this functionality can be added without introducing breaking changes into the API. ",
    "head_branch": "feature/config-as-a-dict",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Default values can be passed as a dict (#1924)\n\n* Default values can be passed as a dict\r\n\r\n* Apply suggestions from code review\r\n\r\nCo-authored-by: Kurt McKee <contactme@kurtmckee.org>\r\n\r\n---------\r\n\r\nCo-authored-by: Érico Andrei <ericof@gmail.com>\r\nCo-authored-by: Kurt McKee <contactme@kurtmckee.org>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9faac254a19ac29e52e",
    "number": 1923,
    "body": "It seems like I can't associate this with #1759 other than referencing it here",
    "head_branch": "add-checkout-details-to-context",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "add checkout details to the context (fixes #1759) (#1923)\n\n* add checkout details to the context\r\n\r\n* Fix test\r\n\r\n* Fix typo"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9fbac254a19ac29e52f",
    "number": 1922,
    "body": "Cookiecutter fails when using Git repositories with nested templates.\r\n\r\nThis ensures the second call to `cookiecutter` uses the existing clone rather than issuing an invalid Git clone call, which references a subdirectory of a repository rather than a valid repository.\r\n\r\nAn alternative approach would be to use the `directory` parameter to specify the path within the Git repository.",
    "head_branch": "BTatlock-patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix nested templates in Git repository (#1922)\n\nCookiecutter fails when using Git repositories with nested templates.\r\n\r\nThis ensures the second call to `cookiecutter` uses the existing clone rather than issuing an invalid Git clone call, which references a subdirectory of a repository rather than a valid repository."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9fcac254a19ac29e530",
    "number": 1920,
    "body": "Closes #1919 ",
    "head_branch": "variable-with-null-default-not-required",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix variables with null default not being required (#1919) (#1920)\n\n* Fix variables with null default not being required (#1919)\r\n\r\n* Got rid of walrus operator to support Python 3.7"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9fdac254a19ac29e531",
    "number": 1918,
    "body": "Added a new feature called dump-input which dumps all user input and cookiecutter context into the created project directory.",
    "head_branch": "development",
    "is_a_fork": true,
    "comments": [
      "Should not go here"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9fdac254a19ac29e532",
    "number": 1917,
    "body": null,
    "head_branch": "void-install",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "docs: add install instruction for Void Linux (#1917)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9feac254a19ac29e533",
    "number": 1913,
    "body": null,
    "head_branch": "add_new_flag",
    "is_a_fork": true,
    "comments": [
      "This appears to duplicate the existing [replay file](https://cookiecutter.readthedocs.io/en/stable/advanced/replay.html) functionality.\r\n\r\nI'm closing this PR because it appears to duplicate existing functionality. Is there a better way to advertise the replay file feature?"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621d9ffac254a19ac29e534",
    "number": 1912,
    "body": "This is a docs-only/typo type of PR.\n\nThe colons already follow the brackets displaying default value. So I guess that the presence of those attached to prompt messages may be questionable.",
    "head_branch": "remove-colons-from-prompts-examples",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove colons from exemplary prompt messages (#1912)\n\ndocs: remove colons from prompts example"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da00ac254a19ac29e535",
    "number": 1909,
    "body": null,
    "head_branch": "prepare-2.3.0",
    "is_a_fork": false,
    "comments": [
      "LGTM, but the docs build failed."
    ],
    "commit_messages": [
      "Prepare release 2.3.0 (#1909)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da00ac254a19ac29e536",
    "number": 1908,
    "body": "Bumps [paambaati/codeclimate-action](https://github.com/paambaati/codeclimate-action) from 4.0.0 to 5.0.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/paambaati/codeclimate-action/releases\">paambaati/codeclimate-action's releases</a>.</em></p>\n<blockquote>\n<h2>v5.0.0</h2>\n<h1><a href=\"https://github.com/paambaati/codeclimate-action/compare/v4.0.0...v5.0.0\">5.0.0</a> (2023-07-06)</h1>\n<h3>Bug Fixes</h3>\n<ul>\n<li><strong>ci:</strong> checkout EVERYTHING so semantic-release has all the data it could need (<a href=\"https://github.com/paambaati/codeclimate-action/commit/a16dca5bb60d6d1ceec305e554d1d07b2e6f9f2f\">a16dca5</a>)</li>\n<li><strong>ci:</strong> do not cancel all matrix builds for one (<a href=\"https://github.com/paambaati/codeclimate-action/commit/1471593d867e0a8171a8bbd830bc6d14647c0c73\">1471593</a>)</li>\n<li><strong>ci:</strong> set up correct regex that replaces the 'v' prefixes for tags (<a href=\"https://github.com/paambaati/codeclimate-action/commit/b3bcc0e23b5ab151ae0a3a2aa8dce8c6bb3bb3d7\">b3bcc0e</a>)</li>\n<li><strong>core:</strong> handle globs correctly in windows (<a href=\"https://github.com/paambaati/codeclimate-action/commit/54ac87c16480738f78a87f5e33a4a417111a550b\">54ac87c</a>)</li>\n<li><strong>core:</strong> parse coverage path correctly on all platforms (<a href=\"https://github.com/paambaati/codeclimate-action/commit/923001d88c62217179c085d441a5a3d54b8399e5\">923001d</a>)</li>\n<li>create hash from windows (<a href=\"https://github.com/paambaati/codeclimate-action/commit/077e614c8e5c583d418676d578d063d75c198405\">077e614</a>)</li>\n<li>keep windows-style line endings for .bat files (<a href=\"https://github.com/paambaati/codeclimate-action/commit/67549ffc57b34e099f5bb2388d86c3cc7c347ec2\">67549ff</a>)</li>\n<li>set up gitattributes to stop the line ending fuckery (<a href=\"https://github.com/paambaati/codeclimate-action/commit/4246a36c822e053c11577e679d16bf16827d6842\">4246a36</a>)</li>\n<li>set up gitattributes to stop the line ending fuckery (<a href=\"https://github.com/paambaati/codeclimate-action/commit/9181fd8af8132edee25fcc8df8a751d814e394c8\">9181fd8</a>)</li>\n<li><strong>tests:</strong> additional windows-style test fixes (<a href=\"https://github.com/paambaati/codeclimate-action/commit/def6f6d4afae91513acccff73c32708488c56b75\">def6f6d</a>)</li>\n<li><strong>tests:</strong> fix tests for Windows (<a href=\"https://github.com/paambaati/codeclimate-action/commit/18e310ba76d6e1fe841d54e79d9de422dc9370d3\">18e310b</a>)</li>\n<li><strong>tests:</strong> fix the Windows path (<a href=\"https://github.com/paambaati/codeclimate-action/commit/6e029425c431d797aa38acc4943036320fe4788e\">6e02942</a>), closes <a href=\"https://redirect.github.com//redirect.github.com/ljharb/tape/issues/593/issues/issuecomment-1537292595\">ljharb/tape#593</a></li>\n<li><strong>tests:</strong> make sure the special variable in script are quoted to make string comparison work (<a href=\"https://github.com/paambaati/codeclimate-action/commit/c796f651db785c619396cdbb8e09fe0c23f5dc46\">c796f65</a>)</li>\n<li><strong>tests:</strong> mock checksum verification too (<a href=\"https://github.com/paambaati/codeclimate-action/commit/2befa84d394ee779f30efbf507b9aceabfdc18ca\">2befa84</a>)</li>\n<li><strong>tests:</strong> more windows-specific test fixes (<a href=\"https://github.com/paambaati/codeclimate-action/commit/de37362050b6d7216a5422f7a391e1d6380eec23\">de37362</a>)</li>\n<li><strong>tests:</strong> more windows-specific test fixes (<a href=\"https://github.com/paambaati/codeclimate-action/commit/e44e0a3f3b39f96c83d6e361469ae7fec20a5521\">e44e0a3</a>)</li>\n<li><strong>tests:</strong> more windows-specific test fixes (<a href=\"https://github.com/paambaati/codeclimate-action/commit/0b2f6f823e9a7761ee96aa4e10ea9855e814a789\">0b2f6f8</a>)</li>\n<li><strong>tests:</strong> more windows-specific test fixes (<a href=\"https://github.com/paambaati/codeclimate-action/commit/9a9184a38ee7d74840d8db188c814b80ff42a045\">9a9184a</a>)</li>\n<li><strong>tests:</strong> more windows-specific test fixes (<a href=\"https://github.com/paambaati/codeclimate-action/commit/1c1a7eb012ea910fd8c81de6dedfdaff7ce7374e\">1c1a7eb</a>)</li>\n<li><strong>tests:</strong> more windows-specific test fixes (<a href=\"https://github.com/paambaati/codeclimate-action/commit/8d2edab83e08094146fcf395ff2f93f803ed50e5\">8d2edab</a>)</li>\n<li><strong>tests:</strong> more windows-specific test fixes (<a href=\"https://github.com/paambaati/codeclimate-action/commit/e05d58f36f359fd2e40e1378c64a6d5c5aa83e19\">e05d58f</a>)</li>\n<li><strong>tests:</strong> more windows-specific tests (<a href=\"https://github.com/paambaati/codeclimate-action/commit/e9e87cc514c01b5a63d3f02552e7d1a137c803fc\">e9e87cc</a>)</li>\n<li><strong>tests:</strong> more windows-specific tests (<a href=\"https://github.com/paambaati/codeclimate-action/commit/13ff2e357d666a066f84e76369c20bb78b8f669b\">13ff2e3</a>)</li>\n<li><strong>tests:</strong> more windows-specific tests (<a href=\"https://github.com/paambaati/codeclimate-action/commit/80aa61ef4dffb2558582006ee27683cf5d1d304e\">80aa61e</a>)</li>\n<li><strong>tests:</strong> more windows-specific tests (<a href=\"https://github.com/paambaati/codeclimate-action/commit/498dee151bf552b61d78f1cf1b5345169cff761f\">498dee1</a>)</li>\n<li><strong>tests:</strong> more windows-specific tests (<a href=\"https://github.com/paambaati/codeclimate-action/commit/f4dff2a761bc3d7d08071c94d452704b5b07ff2d\">f4dff2a</a>)</li>\n<li><strong>tests:</strong> more windows-specific tests (<a href=\"https://github.com/paambaati/codeclimate-action/commit/4b488512dd11c86232802e7bfb81c02b9b89c6e3\">4b48851</a>)</li>\n<li><strong>tests:</strong> OS-agnostic line separators for all strings (<a href=\"https://github.com/paambaati/codeclimate-action/commit/2fc4cc3403ce99cfe7000fe58b8d0acb89549fb7\">2fc4cc3</a>)</li>\n<li><strong>tests:</strong> remove windows-only test and start writing os-independent logic (<a href=\"https://github.com/paambaati/codeclimate-action/commit/29cbd9169661bae87eccb3ae15101e9d9fa58f1b\">29cbd91</a>)</li>\n<li><strong>tests:</strong> run checksum verification pre-checks only for fixtures on their own target platforms (<a href=\"https://github.com/paambaati/codeclimate-action/commit/4dc408bc02b974db9dc9e4129c7d797e7b0a3ee1\">4dc408b</a>)</li>\n<li><strong>tests:</strong> set up correct file mode on Windows (<a href=\"https://github.com/paambaati/codeclimate-action/commit/4edff7ebe0387ebfb113739a5ab3c9101994820e\">4edff7e</a>)</li>\n<li><strong>tests:</strong> set up Windows fixtures (<a href=\"https://github.com/paambaati/codeclimate-action/commit/c29289fe7fac8870265111efaaeef59bb5b6a834\">c29289f</a>)</li>\n<li><strong>tests:</strong> skip integration tests on unsupported platforms (<a href=\"https://github.com/paambaati/codeclimate-action/commit/00e5b40552ecfd62683dfc2202ed236538468d25\">00e5b40</a>)</li>\n<li><strong>tests:</strong> try correcting extra spaces in checksum files generated on Windows (<a href=\"https://github.com/paambaati/codeclimate-action/commit/edc5e97e04929ec51a7d6b02563e518d39aff823\">edc5e97</a>)</li>\n<li>try LF-only line endings for all files (<a href=\"https://github.com/paambaati/codeclimate-action/commit/e2c94ee03d92b6c92abd36933bea05650aac91c7\">e2c94ee</a>)</li>\n<li><strong>util:</strong> follow redirects in fetch (<a href=\"https://github.com/paambaati/codeclimate-action/commit/a258bd9f1e258160b5309cfdfd7348aeb6edc640\">a258bd9</a>)</li>\n</ul>\n<h3>core</h3>\n<ul>\n<li>Support Windows (<a href=\"https://github.com/paambaati/codeclimate-action/commit/9af890ca201808293494389e160c2247062e61ab\">9af890c</a>)</li>\n<li>Support Windows (<a href=\"https://github.com/paambaati/codeclimate-action/commit/3434c618e21bb9a4ea49f8f85e10839bef1addcd\">3434c61</a>)</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/paambaati/codeclimate-action/blob/main/CHANGELOG.md\">paambaati/codeclimate-action's changelog</a>.</em></p>\n<blockquote>\n<h1><a href=\"https://github.com/paambaati/codeclimate-action/compare/v4.0.0...v5.0.0\">5.0.0</a> (2023-07-06)</h1>\n<h3>Bug Fixes</h3>\n<ul>\n<li><strong>ci:</strong> checkout EVERYTHING so semantic-release has all the data it could need (<a href=\"https://github.com/paambaati/codeclimate-action/commit/a16dca5bb60d6d1ceec305e554d1d07b2e6f9f2f\">a16dca5</a>)</li>\n<li><strong>ci:</strong> do not cancel all matrix builds for one (<a href=\"https://github.com/paambaati/codeclimate-action/commit/1471593d867e0a8171a8bbd830bc6d14647c0c73\">1471593</a>)</li>\n<li><strong>ci:</strong> set up correct regex that replaces the 'v' prefixes for tags (<a href=\"https://github.com/paambaati/codeclimate-action/commit/b3bcc0e23b5ab151ae0a3a2aa8dce8c6bb3bb3d7\">b3bcc0e</a>)</li>\n<li><strong>core:</strong> handle globs correctly in windows (<a href=\"https://github.com/paambaati/codeclimate-action/commit/54ac87c16480738f78a87f5e33a4a417111a550b\">54ac87c</a>)</li>\n<li><strong>core:</strong> parse coverage path correctly on all platforms (<a href=\"https://github.com/paambaati/codeclimate-action/commit/923001d88c62217179c085d441a5a3d54b8399e5\">923001d</a>)</li>\n<li>create hash from windows (<a href=\"https://github.com/paambaati/codeclimate-action/commit/077e614c8e5c583d418676d578d063d75c198405\">077e614</a>)</li>\n<li>keep windows-style line endings for .bat files (<a href=\"https://github.com/paambaati/codeclimate-action/commit/67549ffc57b34e099f5bb2388d86c3cc7c347ec2\">67549ff</a>)</li>\n<li>set up gitattributes to stop the line ending fuckery (<a href=\"https://github.com/paambaati/codeclimate-action/commit/4246a36c822e053c11577e679d16bf16827d6842\">4246a36</a>)</li>\n<li>set up gitattributes to stop the line ending fuckery (<a href=\"https://github.com/paambaati/codeclimate-action/commit/9181fd8af8132edee25fcc8df8a751d814e394c8\">9181fd8</a>)</li>\n<li><strong>tests:</strong> additional windows-style test fixes (<a href=\"https://github.com/paambaati/codeclimate-action/commit/def6f6d4afae91513acccff73c32708488c56b75\">def6f6d</a>)</li>\n<li><strong>tests:</strong> fix tests for Windows (<a href=\"https://github.com/paambaati/codeclimate-action/commit/18e310ba76d6e1fe841d54e79d9de422dc9370d3\">18e310b</a>)</li>\n<li><strong>tests:</strong> fix the Windows path (<a href=\"https://github.com/paambaati/codeclimate-action/commit/6e029425c431d797aa38acc4943036320fe4788e\">6e02942</a>), closes <a href=\"https://redirect.github.com//redirect.github.com/ljharb/tape/issues/593/issues/issuecomment-1537292595\">ljharb/tape#593</a></li>\n<li><strong>tests:</strong> make sure the special variable in script are quoted to make string comparison work (<a href=\"https://github.com/paambaati/codeclimate-action/commit/c796f651db785c619396cdbb8e09fe0c23f5dc46\">c796f65</a>)</li>\n<li><strong>tests:</strong> mock checksum verification too (<a href=\"https://github.com/paambaati/codeclimate-action/commit/2befa84d394ee779f30efbf507b9aceabfdc18ca\">2befa84</a>)</li>\n<li><strong>tests:</strong> more windows-specific test fixes (<a href=\"https://github.com/paambaati/codeclimate-action/commit/de37362050b6d7216a5422f7a391e1d6380eec23\">de37362</a>)</li>\n<li><strong>tests:</strong> more windows-specific test fixes (<a href=\"https://github.com/paambaati/codeclimate-action/commit/e44e0a3f3b39f96c83d6e361469ae7fec20a5521\">e44e0a3</a>)</li>\n<li><strong>tests:</strong> more windows-specific test fixes (<a href=\"https://github.com/paambaati/codeclimate-action/commit/0b2f6f823e9a7761ee96aa4e10ea9855e814a789\">0b2f6f8</a>)</li>\n<li><strong>tests:</strong> more windows-specific test fixes (<a href=\"https://github.com/paambaati/codeclimate-action/commit/9a9184a38ee7d74840d8db188c814b80ff42a045\">9a9184a</a>)</li>\n<li><strong>tests:</strong> more windows-specific test fixes (<a href=\"https://github.com/paambaati/codeclimate-action/commit/1c1a7eb012ea910fd8c81de6dedfdaff7ce7374e\">1c1a7eb</a>)</li>\n<li><strong>tests:</strong> more windows-specific test fixes (<a href=\"https://github.com/paambaati/codeclimate-action/commit/8d2edab83e08094146fcf395ff2f93f803ed50e5\">8d2edab</a>)</li>\n<li><strong>tests:</strong> more windows-specific test fixes (<a href=\"https://github.com/paambaati/codeclimate-action/commit/e05d58f36f359fd2e40e1378c64a6d5c5aa83e19\">e05d58f</a>)</li>\n<li><strong>tests:</strong> more windows-specific tests (<a href=\"https://github.com/paambaati/codeclimate-action/commit/e9e87cc514c01b5a63d3f02552e7d1a137c803fc\">e9e87cc</a>)</li>\n<li><strong>tests:</strong> more windows-specific tests (<a href=\"https://github.com/paambaati/codeclimate-action/commit/13ff2e357d666a066f84e76369c20bb78b8f669b\">13ff2e3</a>)</li>\n<li><strong>tests:</strong> more windows-specific tests (<a href=\"https://github.com/paambaati/codeclimate-action/commit/80aa61ef4dffb2558582006ee27683cf5d1d304e\">80aa61e</a>)</li>\n<li><strong>tests:</strong> more windows-specific tests (<a href=\"https://github.com/paambaati/codeclimate-action/commit/498dee151bf552b61d78f1cf1b5345169cff761f\">498dee1</a>)</li>\n<li><strong>tests:</strong> more windows-specific tests (<a href=\"https://github.com/paambaati/codeclimate-action/commit/f4dff2a761bc3d7d08071c94d452704b5b07ff2d\">f4dff2a</a>)</li>\n<li><strong>tests:</strong> more windows-specific tests (<a href=\"https://github.com/paambaati/codeclimate-action/commit/4b488512dd11c86232802e7bfb81c02b9b89c6e3\">4b48851</a>)</li>\n<li><strong>tests:</strong> OS-agnostic line separators for all strings (<a href=\"https://github.com/paambaati/codeclimate-action/commit/2fc4cc3403ce99cfe7000fe58b8d0acb89549fb7\">2fc4cc3</a>)</li>\n<li><strong>tests:</strong> remove windows-only test and start writing os-independent logic (<a href=\"https://github.com/paambaati/codeclimate-action/commit/29cbd9169661bae87eccb3ae15101e9d9fa58f1b\">29cbd91</a>)</li>\n<li><strong>tests:</strong> run checksum verification pre-checks only for fixtures on their own target platforms (<a href=\"https://github.com/paambaati/codeclimate-action/commit/4dc408bc02b974db9dc9e4129c7d797e7b0a3ee1\">4dc408b</a>)</li>\n<li><strong>tests:</strong> set up correct file mode on Windows (<a href=\"https://github.com/paambaati/codeclimate-action/commit/4edff7ebe0387ebfb113739a5ab3c9101994820e\">4edff7e</a>)</li>\n<li><strong>tests:</strong> set up Windows fixtures (<a href=\"https://github.com/paambaati/codeclimate-action/commit/c29289fe7fac8870265111efaaeef59bb5b6a834\">c29289f</a>)</li>\n<li><strong>tests:</strong> skip integration tests on unsupported platforms (<a href=\"https://github.com/paambaati/codeclimate-action/commit/00e5b40552ecfd62683dfc2202ed236538468d25\">00e5b40</a>)</li>\n<li><strong>tests:</strong> try correcting extra spaces in checksum files generated on Windows (<a href=\"https://github.com/paambaati/codeclimate-action/commit/edc5e97e04929ec51a7d6b02563e518d39aff823\">edc5e97</a>)</li>\n<li>try LF-only line endings for all files (<a href=\"https://github.com/paambaati/codeclimate-action/commit/e2c94ee03d92b6c92abd36933bea05650aac91c7\">e2c94ee</a>)</li>\n<li><strong>util:</strong> follow redirects in fetch (<a href=\"https://github.com/paambaati/codeclimate-action/commit/a258bd9f1e258160b5309cfdfd7348aeb6edc640\">a258bd9</a>)</li>\n</ul>\n<h3>core</h3>\n<ul>\n<li>Support Windows (<a href=\"https://github.com/paambaati/codeclimate-action/commit/9af890ca201808293494389e160c2247062e61ab\">9af890c</a>)</li>\n<li>Support Windows (<a href=\"https://github.com/paambaati/codeclimate-action/commit/3434c618e21bb9a4ea49f8f85e10839bef1addcd\">3434c61</a>)</li>\n</ul>\n<h3>Features</h3>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/paambaati/codeclimate-action/commit/4cace242c6e0a2dd554bbb3cc12c58047d8af3e5\"><code>4cace24</code></a> feat: build for release</li>\n<li><a href=\"https://github.com/paambaati/codeclimate-action/commit/583be3b478660830f1ebd0f8d9eeaa0f560f0ecd\"><code>583be3b</code></a> feat: build for release</li>\n<li>See full diff in <a href=\"https://github.com/paambaati/codeclimate-action/compare/v4.0.0...v5.0.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=paambaati/codeclimate-action&package-manager=github_actions&previous-version=4.0.0&new-version=5.0.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
    "head_branch": "dependabot/github_actions/paambaati/codeclimate-action-5.0.0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Bump paambaati/codeclimate-action from 4.0.0 to 5.0.0 (#1908)\n\nBumps [paambaati/codeclimate-action](https://github.com/paambaati/codeclimate-action) from 4.0.0 to 5.0.0.\r\n- [Release notes](https://github.com/paambaati/codeclimate-action/releases)\r\n- [Changelog](https://github.com/paambaati/codeclimate-action/blob/main/CHANGELOG.md)\r\n- [Commits](https://github.com/paambaati/codeclimate-action/compare/v4.0.0...v5.0.0)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: paambaati/codeclimate-action\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-major\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>\r\nCo-authored-by: Érico Andrei <ericof@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da01ac254a19ac29e537",
    "number": 1907,
    "body": "<!--pre-commit.ci start-->\nupdates:\n- [github.com/PyCQA/flake8: 6.0.0 → 6.1.0](https://github.com/PyCQA/flake8/compare/6.0.0...6.1.0)\n<!--pre-commit.ci end-->",
    "head_branch": "pre-commit-ci-update-config",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[pre-commit.ci] pre-commit autoupdate (#1907)\n\nupdates:\r\n- [github.com/PyCQA/flake8: 6.0.0 → 6.1.0](https://github.com/PyCQA/flake8/compare/6.0.0...6.1.0)\r\n\r\nCo-authored-by: pre-commit-ci[bot] <66853113+pre-commit-ci[bot]@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da02ac254a19ac29e538",
    "number": 1904,
    "body": "An error where the context defined in the replay file was not taken into account was introduced with https://github.com/cookiecutter/cookiecutter/pull/1758 (which added prompts for entries missing from the replay file). It seems to impact a few people: https://github.com/cookiecutter/cookiecutter/issues/1900 and https://github.com/cookiecutter/cookiecutter/issues/1902)\r\n\r\nThis PR:\r\n- Properly uses the context extracted from the replay file\r\n- Fix the tests related to it, removed one useless test (too many mocks, the tests are just testing mocks at some point :p)\r\n\r\nCloses https://github.com/cookiecutter/cookiecutter/issues/1900 \r\nCloses https://github.com/cookiecutter/cookiecutter/issues/1902\r\n\r\n@ericof @kurtmckee ",
    "head_branch": "fix-replay",
    "is_a_fork": true,
    "comments": [
      "@vemonet Could you please provide tests to confirm both issues are really fixed?",
      "Hi @ericof and @kurtmckee \r\n\r\nI added a test that generates a project with a replay file, and check if the replayed values are properly used in the generated file \r\n\r\nIt fails if you remove the changes I made to fix the replat (because the replayed values are not passed to the context), and works with my change"
    ],
    "commit_messages": [
      "Fix replay (#1904)\n\n* Properly uses the context extracted from replay. Fix tests related to it\r\n\r\nCloses https://github.com/cookiecutter/cookiecutter/issues/1900\r\nCloses https://github.com/cookiecutter/cookiecutter/issues/1902\r\n\r\n* Add test to check if replay is properly run and the replayed context is properly passed to generate the repo\r\n\r\n* Fix test for replay, and fixture to delete tests/tmp folder"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da03ac254a19ac29e539",
    "number": 1903,
    "body": "Implements https://github.com/cookiecutter/cookiecutter/issues/1892\r\n\r\nAllows multichoice values to be given as overwrite values to lists, where a given overwrite is valid if and only if all values are present in the corresponding context value",
    "head_branch": "support-multichoice-overwrite",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Support multichoice overwrite (#1903)\n\n* Adds support for multichoice overwrite keys\r\n\r\n* Adds tests\r\n\r\n* Switches to using subset to verify multichoice overwrites\r\n\r\n* Adds additional test for checking multichoice overwrites"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da04ac254a19ac29e53a",
    "number": 1901,
    "body": "Hi, this PR adds [`rich`](https://rich.readthedocs.io/en/stable/introduction.html) to the `cookiecutter` dependencies and improve the style of the prompts without changing the prompt workflow\r\n\r\n* Add a counter, e.g.  `[1/10]`, at the start of each prompt so the user knows how many steps are left\r\n* Default values are shown between parenthesis in the cyan color\r\n* This enables cookiecutter template creators to use simple markup to style their questions, e.g. `What is [bold yellow]your name[/]\"\r\n* The answers accepted for the different types of prompts are the same as before: \r\n  * `y/t/true/yes/on` or `n/f/false/no/off` for boolean questions\r\n  * Using integers for multiple choices questions\r\n  * Json prompt supported the same was as before\r\n* Add a 2 spaces indent at the start of each prompts\r\n\r\nYou can find screenshots of the changes proposed in the issue https://github.com/cookiecutter/cookiecutter/issues/1885 \r\n\r\nI used `rich` as it seems the most mature, maintained, and popular package to style CLI apps in python",
    "head_branch": "rich-prompts",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Improve style of prompts using `rich` (#1901)\n\n* Added support for adding human readable description/question for each variable in the cookiecutter.json. Human readable questions are shown instead of variable names to the user when possible. cf. https://github.com/cookiecutter/cookiecutter/issues/1835\r\n\r\n* Only add select in choice questions when description is not defined\r\n\r\n* start adding rich\r\n\r\n* merge with human readable prompts\r\n\r\n* Fix tests, keep 100% coverage\r\n\r\n* add support for json prompt with rich\r\n\r\n* add tests for git config extraction, fix linting issues, reach 100% coverage\r\nAdd test for JsonPrompt process_response, reach 100% coverage\r\n\r\n* Extend the confirmation prompt to accept various yes/no answers, same as before\r\n\r\n* add instructions to use rich markup to readme\r\n\r\n* remove .github/ISSUE_TEMPLATE/bug.yml\r\n\r\n* fix replay test, remove tmp dir also before tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da05ac254a19ac29e53b",
    "number": 1899,
    "body": "- [x] Bump `cookiecutter/VERSION.txt`\r\n- [x] Update `HISTORY.md`",
    "head_branch": "prepare-2.2.3",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Prepare release 2.2.3 (#1899)\n\n* Prepare release 2.2.3\r\n\r\n* Update HISTORY"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da05ac254a19ac29e53c",
    "number": 1898,
    "body": "Add support for adding human-readable labels for choices when defining multiple choices questions. As mentioned by @henryiii  in https://github.com/cookiecutter/cookiecutter/pull/1881\r\n\r\nExample JSON:\r\n\r\n```json\r\n{\r\n  \"full_name\": \"Audrey Roy Greenfeld\",\r\n  \"email\": \"audreyr@gmail.com\",\r\n  \"linting\": [\"ruff\", \"flake8\", \"none\"],\r\n  \"__prompts__\": {\r\n    \"full_name\": \"Provide your full name\",\r\n    \"email\": \"Provide your email\",\r\n    \"linting\": {\r\n      \"__prompt__\": \"Which linting tool do you want to use?\",\r\n      \"ruff\": \"Ruff\",\r\n      \"flake8\": \"Flake8\",\r\n      \"none\": \"No linting tool\"\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nPrevious behaviors are still working (no `__prompts__` and providing just a string to the multiple choices `__prompt__`)\r\n\r\nThe README.md and readthedocs page for human-readable prompts have been updated accordingly",
    "head_branch": "add-choices-labels",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add support for adding human-readable labels for choices when defining multiple choices questions (#1898)\n\n* add support for human-readable labels when defining choices. As mentioned in https://github.com/cookiecutter/cookiecutter/pull/1881\r\n\r\n* fix indentation in readme\r\n\r\n---------\r\n\r\nCo-authored-by: Érico Andrei <ericof@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da06ac254a19ac29e53d",
    "number": 1897,
    "body": "<!--pre-commit.ci start-->\nupdates:\n- [github.com/psf/black.git: 23.3.0 → 23.7.0](https://github.com/psf/black.git/compare/23.3.0...23.7.0)\n<!--pre-commit.ci end-->",
    "head_branch": "pre-commit-ci-update-config",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[pre-commit.ci] pre-commit autoupdate (#1897)\n\nupdates:\r\n- [github.com/psf/black.git: 23.3.0 → 23.7.0](https://github.com/psf/black.git/compare/23.3.0...23.7.0)\r\n\r\nCo-authored-by: pre-commit-ci[bot] <66853113+pre-commit-ci[bot]@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da07ac254a19ac29e53e",
    "number": 1896,
    "body": "Closes #1886",
    "head_branch": "issue-1886-version",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Set cookiecutter/VERSION.txt as source of truth for version number (#1896)\n\nCo-authored-by: Jens W. Klein <jk@kleinundpartner.at>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da08ac254a19ac29e53f",
    "number": 1895,
    "body": "Small fix for an issue where the human readable prompts dict was not passed for `yes_no` questions. \r\n\r\nFixes https://github.com/cookiecutter/cookiecutter/issues/1893",
    "head_branch": "fix-boolean-prompts-labels",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix issue where the prompts dict was not passed for yes_no questions (#1895)\n\nFix issue where the human readable prompts dir was not passed for yes_no questions. Fixes https://github.com/cookiecutter/cookiecutter/issues/1893"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da09ac254a19ac29e540",
    "number": 1894,
    "body": null,
    "head_branch": "2.2.3-dev",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Back to development (#1894)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da0aac254a19ac29e541",
    "number": 1891,
    "body": "Closes #1886",
    "head_branch": "prepare-2.2.2",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Prepare release of version 2.2.2 (#1891)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da0bac254a19ac29e542",
    "number": 1890,
    "body": "See https://github.com/cookiecutter/cookiecutter/issues/1888. This is a suggested docs addition.\n",
    "head_branch": "henryiii/docs/time_warning",
    "is_a_fork": true,
    "comments": [
      "I wonder if it would be better to instead make the whole example more generic and obvious, e.g. by specifying a placeholder extension like `foobar.FoobarExtension`.\r\n\r\nA warning after a potentially confusing example might just make the whole doc more confusing effectively."
    ],
    "commit_messages": [
      "docs: add warning for jinja2_time (#1890)\n\nSigned-off-by: Henry Schreiner <henryschreineriii@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da0bac254a19ac29e543",
    "number": 1889,
    "body": "Just some little .gitignore improvements to ease the maintenance burden and make contribution a little nicer.",
    "head_branch": "improve-gitignore",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Improve gitignore (#1889)\n\n* Improve attribution of Python.gitignore\r\n\r\n* \"Adapted from\" clarifies that it is our own .gitignore now (as opposed to one that stays true to just the source)\r\n* Reference URL is now the non-raw version on GitHub, making it easier to understand which repo it came from\r\n\r\n* Add macOS auto-generated file to .gitignore\r\n\r\n* Add .vscode/ to .gitignore"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da0cac254a19ac29e544",
    "number": 1884,
    "body": "- [X]  Update `HISTORY.md`\r\n- [X]  Update `setup.py`",
    "head_branch": "release-2.2.0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Prepare release 2.2.0 (#1884)\n\n* Prepare release 2.2.0\r\n\r\n* Update release date"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da0dac254a19ac29e545",
    "number": 1883,
    "body": "### Why these changes? It was working fine before!\r\n\r\nIndeed the development setup for `cookiecutter` is really good! But its configuration is stored in many different files, using different formats, making the repository harder to read and maintain.\r\n\r\nSo we propose to upgrade the project to use PEP standards (517, 518, 621) as much as possible: defining a `build-system` and putting everything in the `pyproject.toml` file, this will have the following benefits:\r\n\r\n* Greatly reduces the amount of config files (6 files deleted from the root folder, most of them just had 2 or 3 lines of config for a tool, now everything is standardized under the `pyproject.toml` file)\r\n* Greatly improve readability and maintainability of config files used for development: more consistent configs, they are all defined using the same format\r\n* Using PEP 621 standard metadata means effortless compatibility with all python dev/build tools (apart from poetry who are planning to support PEP 621 in the next major release, but we don't really care)\r\n* Clear, easy and standard management of optional dependencies bundle\r\n* While many files have disappeared, we keep a **development setup 1:1 identical to before**: based on tox to manage envs and not a single configuration field has been left out (afaik)\r\n\r\n### Whats is Hatch?\r\n\r\nHatch is project management tool for python, relying on PEP standards: https://hatch.pypa.io/latest/\r\n\r\nIt's doing a lot of things, and doing them well! (I have been looking for a good project management tool in python for years, and this one really blew my mind, so simple, so powerful, no surprises)\r\n\r\nYou probably never heard of it (because people only complains about bad things!), but it's already v1, officially recommended and maintained by the PyPA (python packaging authority), it is used as build-system by many modern, well-built and popular python projects such as FastAPI, pydantic, and others (see the long list of hatch users here: https://hatch.pypa.io/latest/community/users/)\r\n\r\nIt allows you to:\r\n\r\n* Define all your package metadata in the `pyproject.toml` following PEP 621, so you don't need to have 4 files just for packaging metadata (`setup.cfg`, `setup.py`, ). Most tools now supports config from the `pyproject.toml`, apart from flake8 (but we can use the additional `Flake8-pyproject` package)\r\n* Define your dependencies, with bundle of optional dependencies (to be installed with `pip install cookiecutter[docs,test]`). You can go over all your dependencies in a glance instead of jumping between 3 different files with different formats\r\n\r\n* Define scripts to run with `hatch run my-script`, which kind of replace `Makefile`, at the difference that: \r\n* Hatch will automatically setup and sync the virtual env when you are running a script with `hatch run`, so no need to figure out what to install, just `hatch run test` and the virtual env will be set automatically. It can also run post install scripts like `pre-commit install` \r\n* Hatch relies a lot on existing well established tools like `pip` to install, or `virtualenv`, all it does is to provide a sane user interface over it that can be fully configured from the `pyproject.toml` following the PEP recommendations. \r\n* **Hatch gets out of your way**. Don't want to use their scripts? The devs don't even need to install the `hatch` package, and hatch will just be used to put together your package when your run `python -m build`\r\n\r\n### What have I done?\r\n\r\n* I moved to add `hatch` as build-system (more exactly `hatchling`) and moved as many configuration as possible to the `pyproject.toml`, but kept `tox` and `Make` to run stuff\r\n\r\n* I removed the 2 `requirements.txt` files for test and docs, and defined those as optional dependencies in the `pyproject.toml`, then `tox` can install dependencies from the optional bundles instead of the requirements files\r\n\r\n* Removed 6 config files: `.bandit`, `MANIFEST.in`, `docs/requirements.txt`, `setup.cfg`, `setup.py`, `test_requirements.txt`. Everything is now in the `pyproject.toml`\r\n* The package version is now only defined at one place: in the `cookiecutter/__init__.py` file, there is no need to define it in pyproject.toml, hatch will resolve it auto \r\n\r\nAnd everything is working as it was before for the devs: use `make` or `tox` for tests/docs/lint!\r\n\r\nThe GitHub actions workflow also should not need any changes (I would probably install `tox` with `pipx` instead of `pip` to prevent any weird dependency conflict but that's another question!). With the `hatchling` build-system `python -m build` will be able to do everything needed to publish the python package\r\n\r\n### Could we do more?\r\n\r\nCurrently we could also easily replace `tox` with `hatch` to define envs matrix and test run. I already tried it, it works really well and make the config easier to read and maintain imo. You can check an example of `pyproject.toml` using hatch scripts here: https://github.com/vemonet/rdflib-endpoint/blob/main/pyproject.toml#L80 then the scripts are run with `hatch run my-script`\r\n\r\nBut `tox` provide a summary of the results of each step at the end, which `hatch` does not! So the current setup with `tox` seems better adapted to the project imo (it was really nice to run your test suite, kudos!)\r\n\r\nWe could also replace `Makefile` to directly use `hatch` scripts. The advantage of hatch is that it will automatically setup the env for the user, on the other hand the major advantage of `Make` is that it provides terminal autocomplete for the scripts (which `hatch` does not, you cannot tab your way to find the script you want :( )\r\n\r\nFor linting we could replace flake8 by [ruff](https://github.com/charliermarsh/ruff), it is now much more advanced, with many more auto fixes, more actively developed, and also used by many big python projects. I am using it on other projects, and would never go back!\r\n\r\n### Conclusion\r\n\r\nThis PR closes: \r\n\r\n* https://github.com/cookiecutter/cookiecutter/issues/1556\r\n* Also probably this one: https://github.com/cookiecutter/cookiecutter/issues/1856 since we can more easily add optional bundles of dependencies if needed. So we don't need to implement the complex solution of allowing dynamic dependencies (I don't think anyone wants to implement and maintain that, and it does not seems there any actual need for it at the moment)\r\n\r\nWe could also delete `codecov.yml` which only contains `comment=false`, it does not seems codecov support config through the `pyproject.toml` though, so I could not move this config, but it seems fairly useless, and removing it does not seems impact the test coverage ",
    "head_branch": "standard-dev-config",
    "is_a_fork": true,
    "comments": [
      "@vemonet As this is a significant change. I invite you first to open an issue and let us discuss this.\r\n",
      "Hi @ericof, as I mentioned in the original explanation there is already an issue about it opened here: https://github.com/cookiecutter/cookiecutter/issues/1556\r\n\r\n## The issue about issues\r\n\r\nThere has been already complaints from the main maintainers that the number of issues are piling up and that they don't have time to close them: https://github.com/cookiecutter/cookiecutter/issues/1828 so creating an  issue that is a duplicate of an existing issue where a discussion has been started seems to be really counter productive for everyone (and especially the maintainers, me I can just copy paste the explanation I already did, for the maintainers it means twice more issue and PR to manage and close...)\r\n\r\nMy previous merged PR closed 4 issues, those 4 issues are still opened, not sure how long it will take to close them even if the issue is solved.\r\n\r\nI don't want to add unnecessary work to the maintainers. I made a long post explaning the changes in this PR, maintainers can discuss the changes in this PR, it will be easier for everyone. Instead of splitting the conversation in 2 channels. If someone really wants to post something in an issue instead of a PR then they can use https://github.com/cookiecutter/cookiecutter/issues/1556\r\n\r\n## About the change\r\n\r\nIt is not a significant change as it is completely invisible for the end users (template creators and template consumers), and it has no impact on the developers workflow. \r\n\r\nThe built package will work exactly the same, it's **just some clean up of old code!** (small refactoring are necessary from time to time and not really considered as significant changes)\r\n\r\nWe are still using make and tox, the only difference is from where tox retrieve its dependencies, and from where bandit gets it's config.\r\n\r\nAlso all tests, docs gen, linting are all working 100% like they were before\r\n\r\n## Conclusion\r\n\r\nCould we just tag / request review from maintainers that might want to say something about it directly in this PR? and discuss changes directly in this PR? It would be helpful for this repository maintainers, and release some pressure from their shoulder (they get in the PR, check the code, say yes or no. Instead of arriving in an issue, going to the PR, checking the code, going back to the issue to comment... That does not make sense)\r\n\r\nIf you really want me to create a duplicate issue I can still do it in 2min, I'll just copy paste the current explanation provided with the PR\r\n\r\nbtw, what is your opinion about these changes ? :D ",
      "FYI, I'd not consider changing backends a breaking change. A user getting a wheel will get an identical wheel as before - neither the setup.py nor the pyproject.toml is placed in the wheel. We've moved lots of packages over (like `packaging`, `wheel`, `build`, `pipx`, `nox`, etc.) and the process is usually quite smooth. It only affects third party packagers that are building from SDist without using isolated environments (conda and the like), and they know how to make this change quite well by now.\r\n\r\nI would not recommend trying to use one of the flake8 pyproject.toml adaptors. The flake8 authors seem to go out of their way to try to break these when possible (I could be wrong, but I'm 100% they will never do even a slight change to help one of these projects exist, and I've seen them keep breaking them!). Instead, I'd move to Ruff (probably in a PR before or after this one). Ruff is 100x faster, has huge numbers of plugins built in, has fixes for plugins that have been languishing elsewhere, and supports toml config. Ruff is possibly the fastest growing project I've seen; it's hard to point out projects that haven't switched. Examples of ones that have include pip, mypy SciPy, FastAPI. Until then, you can put the flake8 config in `tox.ini`, we did that for a while in `build`.\r\n\r\nIf you'd like docs on modern configuration, see <https://packaging.python.org/en/latest/tutorials/packaging-projects/>, <https://learn.scientific-python.org/development/guides/packaging-simple/>, or <https://intersect-training.org/packaging/>. (Disclaimer: I was a primary author on all three). If you'd like to compare build systems, `cookiecutter gh:scientific-python/cookie` will let you choose between twelve of them. ",
      "FYI, in tox 4, you can add:\r\n\r\n```ini\r\n[testenv]\r\npackage = wheel\r\nwheel_build_env = .pkg\r\n```\r\n\r\nwhich will cache the wheel and provide a nice speed boost to running multiple envs.",
      "Thanks a lot for all the details on packaging @henryiii I learned a lot of things\r\n\r\nIndeed it makes more sense to move the flake8 config to the `tox.ini` file, I did not know it was possible. I just made the changes\r\n\r\nI would agree to replace `flake8` with `ruff`, I am using it on other projects and it is really great. But it would have introduced too great changes in 1 PR, I will create a follow up PR with `ruff` if this one gets merged\r\n\r\nSomething I forgot to mention also, currently I used the following for `authors` and `maintainers`:\r\n\r\n```toml\r\nauthors = [\r\n    { name = \"Audrey Feldroy\", email = \"audreyr@gmail.com\" },\r\n]\r\nmaintainers = [\r\n    { name = \"Audrey Feldroy\", email = \"audreyr@gmail.com\" },\r\n]\r\n```\r\n\r\nLet me know who I should add to the list",
      "This will need a big ol' rebase",
      "Why? There has been no expression of interest for improving the current build system. Who would go through a rebase for nothing?",
      "> Why? There has been no expression of interest for improving the current build system. Who would go through a rebase for nothing?\r\n\r\ni'm personally very interested in this and think it would be a huge improvement. I don't speak for the maintainers though",
      "got any thoughts on UV vs Hatch?",
      "Hey @danieleades , for now it's not \"uv vs hatch\", but more \"hatchling vs setuptools vs flit\" and \"pip+tox vs uv\"\r\n\r\nYou can find the official python docs about build-systems here: https://packaging.python.org/en/latest/guides/writing-pyproject-toml/ (note that hatchling is the one put in first ;) )\r\n\r\nYou can find documentation to use `uv` with `hatch` here: https://hatch.pypa.io/dev/how-to/environment/select-installer/\r\n\r\n* This PR mostly moves all configs to the `pyproject.toml` file, and use the `hatchling` build-system. But we do not use `hatch` for \"dependencies/environment management\" (we don't use `hatch` to define scripts and environments). Hatch is well built in this regard you can use its build-system without using its dependency management part :) \r\n* `uv` is not a build-system, there are discussions about wherever they should have one at some point: https://github.com/astral-sh/uv/issues/3957, for now it is \"just\" a dependency/environment manager, you still need to use an existing build-system (hatchling or setuptools or flit). Note their documentation currently recommend `hatchling` too: https://docs.astral.sh/uv/concepts/projects/#libraries\r\n\r\nPersonally I had a lot of issues with dependency resolution with `pip`: sometimes `pip` and `pip-tools` just fail to resolve dependencies without any helpful message while `uv` or `poetry` are resolving the exact same project without any issue in afraction of the time... (embarrassing for the \"reference implementation\" :D). And usually tools from the astral team (ruff) have been really comfortable and reliable to use\r\n\r\nJust that `uv` is still at a quite early stage (a few months ago it was still not clear if `uv` or `rye` would be the project management tool), and it is evolving rapidly so adopting it now might require changes in the future (but it's already more reliable than `pip` in some situations...)\r\n\r\nImo that would be nice (and easy) to migrate to modern tools for python project management:\r\n* We can already safely replace `flake8` and `black` by `ruff` (so much better)\r\n* Replace `tox` and `pip` by `uv` (when it will be stable enough)\r\n\r\nBut that would be another PR I guess",
      "uv still doesn't support full multiple environments or tasks, so it's not a replacement for Hatch/tox/nox/pixi yet.\r\n\r\nFor build backend, hatchling is excellent, a lot more stable than setuptools, and fast. Eventually, uv might provide a build backend that will allow even faster builds when using uv (as it could short-cut the Python step in the middle), but that will have it's own drawbacks, so projects might still prefer hatching or another build backend, and due to standards, they are all supported regardless of your frontend[^1].\r\n\r\n[^1]: The single exception these days is Poetry, which forces the use of its own backend. Every other frontend (PDM, Hatching, uv, pixi, etc) allows any backend.",
      "@vemonet all makes sense\r\n\r\n> * We can already safely replace `flake8` and `black` by `ruff` (so much better)\r\n\r\nthis has already been done\r\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da0eac254a19ac29e546",
    "number": 1881,
    "body": "Hi @pydanny @jensens @ericof @audreyfeldroy, I added support for providing human-readable questions to the different variables\r\n\r\nMany issues mentioned it:\r\n\r\n* https://github.com/cookiecutter/cookiecutter/issues/30\r\n* https://github.com/cookiecutter/cookiecutter/issues/249\r\n* https://github.com/cookiecutter/cookiecutter/issues/794\r\n* https://github.com/cookiecutter/cookiecutter/issues/1567\r\n* https://github.com/cookiecutter/cookiecutter/issues/1835\r\n\r\nA PR has been attempted but abandonned: https://github.com/cookiecutter/cookiecutter/pull/848\r\n\r\nThere have been lengthy discussions about wherever the json format should completely be changed, introduce breaking change, etc... I took the simplest approach, to **introduce the least amount of technical debt and keep complete backward compatibility** . So that we can merge this feature, really much needed for a templating library, and discuss about changing the JSON format later!\r\n\r\nIt was quite straightforward to implement, I just added a `__prompts__` object, which takes the variable names as key and the questions to ask the user as values.\r\n\r\nExample of a config file:\r\n\r\n```json\r\n{\r\n    \"package_name\": \"my-package\",\r\n    \"module_name\": \"{{ cookiecutter.package_name.replace('-', '_') }}\",\r\n    \"short_description\": \"A nice python package\",\r\n    \"__prompts__\": {\r\n        \"package_name\": \"Select your package name:\",\r\n        \"module_name\": \"Select your module name:\"\r\n    }\r\n}\r\n```\r\n\r\nThe 2 first questions will use the description provided, the 3rd one will use the variable name since there is no description provided\r\n\r\n**This format stays easy to read, and easy to write**. Once the dev defined all its variables with their default they can copy them, paste them in the `__prompts__` block, and replace the default by the questions one by one. Also wrap something around  2 underscores is a pythonic way to say \"this is special\" (`__init__`, `__main__`)\r\n\r\n<details><summary>In my opinion when you have many variables it is more readable  than a nested dict where some keys are repeated all other the place</summary>\r\n\r\n```json\r\n{\r\n    \"package_name\": {\r\n        \"default\": \"my-package\", \r\n        \"prompts\": \"Your package name\",\r\n    },\r\n    \"module_name\": {\r\n        \"default\": \"{{ cookiecutter.package_name.replace('-', '_') }}\", \r\n        \"prompts\": \"Your package name\",\r\n    },\r\n}\r\n```\r\n\r\n</details>\r\n\r\nIt is **100% backward compatible with the previous `cookiecutter.json` format 🎉** so it will not break existing template, it will only make templates that have defined `__prompts__` better!\r\n\r\n- [x] **Not a lot of code have been added**, and the changes introduced don't introduce a lot of complexity in the codebase\r\n- [x] I made sure **all tests pass** with `tox`, and I added a few tests for the new feature, to reach **💯% of code coverage**\r\n- [x] I have updated the example in the README to show how to use those new descriptions \r\n- [x] A page has been added in the advanced tab in readthedocs documentation \r\n\r\nI hope there is no more excuses to not merge this long-awaited feature 😄 I am already using it for my [templates](https://github.com/MaastrichtU-IDS/cookiecutter-python-package/blob/main/cookiecutter.json) and will continue in the future since those templates are fully compatible!\r\n\r\nThere are no breaking changes so this feature can be pushed to the next minor release without any concern 🥳\r\n\r\nPlease let me know if we should use something else instead of `__prompts__`, I can make the changes required in a few minutes (maybe `_prompts_` with only 1 underscore? that might be less prone to user mistakes, but the double underscore seems more pythonic) ",
    "head_branch": "add-questions-descriptions",
    "is_a_fork": true,
    "comments": [
      "Thanks, @vemonet! As soon as the tests pass, I will merge this!",
      "Does this support customizing choice prompts? I'd like to show something more helpful for selecting choices, but don't see how this fits into this structure. If I provided a dict here, how would I customize the top level prompt? Maybe a special key?\r\n\r\n```json\r\n{\r\n    \"__prompts__\": {\r\n        \"backend\": { \r\n            \"__prompt__\": \"Select a backend to build your package:\",\r\n            \"setuptools\": \"Classic setuptools configuration\",\r\n            \"setuptools621\": \"Modern pyproject.toml setuptools configuration\"\r\n       }\r\n    }\r\n}\r\n```\r\n?\r\n\r\n(This is great, by the way!)",
      "Hi @henryiii , it does not support this, but is an interesting suggestion \r\n\r\nAnd the solution you proposed is nice, and the easiest to implement I think. I'll take a look into it when I will have time\r\n\r\nA complete JSON would look like this:\r\n\r\n```json\r\n{\r\n    \"package\": \"my-package\",\r\n    \"backend\": [\r\n         \"setuptools\", \r\n         \"setuptools621\"\r\n    ],\r\n    \"__prompts__\": {\r\n        \"package\": \"Your package slug\",\r\n        \"backend\": { \r\n            \"__prompt__\": \"Select a backend to build your package:\",\r\n            \"setuptools\": \"Classic setuptools configuration\",\r\n            \"setuptools621\": \"Modern pyproject.toml setuptools configuration\"\r\n       }\r\n    }\r\n}\r\n```\r\n"
    ],
    "commit_messages": [
      "Added support for providing human-readable prompts to the different variables (#1881)\n\n* Added support for adding human readable description/question for each variable in the cookiecutter.json. Human readable questions are shown instead of variable names to the user when possible. cf. https://github.com/cookiecutter/cookiecutter/issues/1835\r\n\r\n* Only add select in choice questions when description is not defined\r\n\r\n* Fix all tests that had issues\r\n\r\n* rename __internal_use/descriptions to __questions__\r\n\r\n* rename __questions__ to __prompts__, and fix linting errors\r\n\r\n* [pre-commit.ci] auto fixes from pre-commit.com hooks\r\n\r\nfor more information, see https://pre-commit.ci\r\n\r\n---------\r\n\r\nCo-authored-by: pre-commit-ci[bot] <66853113+pre-commit-ci[bot]@users.noreply.github.com>\r\nCo-authored-by: Érico Andrei <ericof@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da0fac254a19ac29e547",
    "number": 1880,
    "body": "### The proposal\r\n\r\nProviding the user name and email are really common request for a lot of cookiecutter templates. Currently it is possible to create a file `~/.cookiecutterrc` to define it, but it requires additional work to do for each developer when they install cookiecutter. And cookiecutter's default are good, so from my experience most users never need to look into the extra work of setting up the user config file\r\n\r\nIdeally cookiecutter should try to automatically find the name/email of the user when it is not explicitly set in the `~/.cookiecutterrc`\r\n\r\nA lot of developers are already storing their name and email when they  setup git (and I guess most developers use git). It would be great if cookiecutter could get the name and email directly from git, as it will set properly for a lot of users\r\n\r\n### The implementation\r\n\r\nI added a function `add_user_config_from_git(config)` that automatically adds the user `full_name` and `email` to the user config if they are not set already.\r\n\r\nI picked `full_name` and `email` because they are mentioned in the docs when talking about the `~/.cookiecutterrc`\r\n\r\nThe function tries to retrieve the info from the env variable `GIT_AUTHOR_NAME` first, then from the command `git config --get user.name` (and same for the email)\r\n\r\nI took inspiration from how the [`hatch`](https://hatch.pypa.io) python packaging tool is doing it\r\n\r\n### Alternative implementation\r\n\r\nA potential change we could make is to materialize the name/email extracted from git in the `~/.cookiecutterrc` (and create the file if it does not exist), this way might be a bit clearer for the user, and let them more easily change the default name/email set if it is not the right one. \r\n\r\nI did not wanted to alter too much how cookiecutter currently handles user config though, automatically creating the `.cookiecutterrc` might have unexpected side effect on the current approach used by cookiecutter to handle user config.\r\n\r\n### Conclusion\r\n\r\nFor this setup to really help the users ideally cookiecutter should encourage its users to use specific properties label for common metadata (e.g. `full_name`, `email`) so that those fields will be automatically filled for most users\r\n\r\nI was not sure if I should have created an issue to discuss it first, but the issue template seems to be more targeted towards reporting bugs, so I sent a PR directly\r\n\r\nCurrently all tests passes, but we miss ~6 lines on the coverage. I will add the necessary tests to cover those lines if there is interest in merging this feature\r\n\r\nI tried it, and it works as expected whenever a user config is set or not\r\n\r\nLet me know if this is a feature that you would be interested to merge in cookiecutter, and if there is any improvements you want to bring to the implementation",
    "head_branch": "extract-user-metadata-from-git",
    "is_a_fork": true,
    "comments": [
      "Hello @vemonet!\r\nThanks for the initiative, but I would ask you also to open an issue and add tests to your change",
      "Hi @ericof , ok I opened the issue, I will add the test if there is interest for adding the feature\r\n\r\nI don't want to spend 20 minutes of my time struggling to get this last 1% of coverage to be told the feature is not interesting for the community :p  ",
      "It think it is interesting, but we need to make sure it works for everyone;-)",
      "@ericof I just checked the linting results more in details and found out `bandit` is not happy about us using `subprocess` :\r\n\r\n```bash\r\n>> Issue: [B404:blacklist] Consider possible security implications associated with the subprocess module.\r\n   Severity: Low   Confidence: High\r\n   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)\r\n   More Info: https://bandit.readthedocs.io/en/0.0.0/blacklists/blacklist_imports.html#b404-import-subprocess\r\n   Location: cookiecutter/config.py:87:12\r\n86\t        if full_name is None:\r\n87\t            import subprocess\r\n```\r\n\r\n```\r\n>> Issue: [B607:start_process_with_partial_path] Starting a process with a partial executable path\r\n   Severity: Low   Confidence: High\r\n   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)\r\n   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b607_start_process_with_partial_path.html\r\n   Location: cookiecutter/config.py:90:28\r\n90\t                full_name = subprocess.check_output(\r\n91\t                    ['git', 'config', '--get', 'user.name'], text=True\r\n92\t                ).strip()\r\n```\r\n\r\n```\r\n>> Issue: [B603:subprocess_without_shell_equals_true] subprocess call - check for execution of untrusted input.\r\n   Severity: Low   Confidence: High\r\n   CWE: CWE-78 (https://cwe.mitre.org/data/definitions/78.html)\r\n   More Info: https://bandit.readthedocs.io/en/0.0.0/plugins/b603_subprocess_without_shell_equals_true.html\r\n   Location: cookiecutter/config.py:104:24\r\n104\t                email = subprocess.check_output(\r\n105\t                    ['git', 'config', '--get', 'user.email'], text=True\r\n106\t                ).strip()\r\n```\r\n\r\nIn my opinion we can ignore those 3 issues, as they have a low severity, and if you read them the security issues only comes if the command you run in the subprocess can be changed by the user. In our case the command is hardcoded so I don't really see how it could be a vulnerability\r\n\r\nHow do we do to get the tests to pass? The only way I see would be to add an ignore for `B404`, `B603` and `B607` in the bandit config file (or some inline ignore if bandit allows it), any other idea?",
      "@ericof I added the tests to reach 100% coverage\r\n\r\nAll we need now is to figure out what we do with bandit complaining about using `subprocess`, do we add some ignore rule for bandit?",
      "Is there still an intention to proceed with this PR?"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da0fac254a19ac29e548",
    "number": 1879,
    "body": "The source is clear from the various in-file comments; now it is updated and cited.\r\n\r\nI routinely use `.venv/` as my virtual environment directory, which was not included in the old version of the Python-gitignore file. Now it *is* included, and I don't have to mentally ignore that directory when committing changes. 🥳 🎈 📈",
    "head_branch": "update-gitignore",
    "is_a_fork": true,
    "comments": [
      "Huzzah! Would you be willing to merge in that case?"
    ],
    "commit_messages": [
      "Update `.gitignore` and cite where it was copied from (#1879)\n\nThe source is clear from the various in-file comments;\r\nnow it is updated and cited."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da10ac254a19ac29e549",
    "number": 1877,
    "body": "This PR introduces the following changes:\r\n\r\n* Eliminate an `else` clause that follows a check for binary file output.\r\n\r\n  This reduces code indentation.\r\n\r\n* Only detect the original file's newlines if `_new_lines` isn't configured.\r\n\r\n  This reduces file I/O.\r\n\r\n* Update and standardize debug logging that announces what newline will be used.",
    "head_branch": "reduce-io",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Reduce I/O (#1877)\n\n* Remove an `else` clause; unindent its code block\r\n\r\n* Only check original newlines if `_new_lines` isn't configured\r\n\r\nThis reduces I/O when possible."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da11ac254a19ac29e54a",
    "number": 1876,
    "body": "This PR introduces these changes:\r\n\r\n* Add a pre-commit hook to standardize EOF newlines\r\n* Run `pre-commit run --all-files end-of-file-fixer` to standardize EOF newlines\r\n* Resolve test failures caused by standardized EOF newlines\r\n\r\nAs can be seen in the changes, some files did not end with a newline, and other files contained more than one blank line at the end.\r\n\r\nMerging this will allow pre-commit.ci to further enforce standards on new commits.",
    "head_branch": "standardize-eof-newlines",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Standardize EOF newlines (#1876)\n\n* Add a pre-commit hook to standardize EOF newlines\r\n\r\n* Run `pre-commit run --all-files end-of-file-fixer`\r\n\r\nThis is an automated change. Nothing was manually modified.\r\n\r\n* Resolve test failures caused by standardized EOF newlines"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da12ac254a19ac29e54b",
    "number": 1875,
    "body": "This affects exactly one line in the repository.",
    "head_branch": "rm-special-case-for-md-line-endings",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove a pre-commit hook special case (#1875)\n\nThis affects exactly one line in the repository."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da13ac254a19ac29e54c",
    "number": 1874,
    "body": "fixes #1873 \r\n\r\nChange to `cookiecutter.main.py` in `cookiecutter()` that saves all the original context key:value pairs in `context['_cookiecutter']` before overwriting them in `context['cookiecutter']`.",
    "head_branch": "kjaymiller-adds-_cookiecutter",
    "is_a_fork": true,
    "comments": [
      "Is it possible to reference this `_cookiecutter` variable? I tried `{{ _cookiecutter.var }}` and seems like I get the same thing."
    ],
    "commit_messages": [
      "preserves original options in `_cookiecutter` (#1874)\n\n* adds `_cookiecutter` to context\r\n\r\n* update test cookicutter.json\r\n\r\n* updates test_echo_undefined_variable_error"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da13ac254a19ac29e54d",
    "number": 1872,
    "body": "This PR documents _jinja2_env_vars, which was added in 2020.\r\n\r\nCC @kjaymiller who just used it in a project",
    "head_branch": "add-docs",
    "is_a_fork": true,
    "comments": [
      "@kurtmckee Thanks, great catch!",
      "Ah I bet the checks failed due to GitHub outage this morning, as they passed previously."
    ],
    "commit_messages": [
      "Add jinja env docs (#1872)\n\n* Add jinja env docs\r\n\r\n* Fix syntax\r\n\r\n* Add to toc\r\n\r\n* Add new line\r\n\r\n* Update docs/advanced/jinja_env.rst\r\n\r\nCo-authored-by: Kurt McKee <contactme@kurtmckee.org>\r\n\r\n---------\r\n\r\nCo-authored-by: Kurt McKee <contactme@kurtmckee.org>\r\nCo-authored-by: Jens W. Klein <jk@kleinundpartner.at>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da14ac254a19ac29e54e",
    "number": 1871,
    "body": "Currently there is a decorator to create a simple filter Jinja extension. This PR adds a similar decorator to create custom test extensions. Included is the decorator, test updatres, and docs updates",
    "head_branch": "feature/simple_test",
    "is_a_fork": true,
    "comments": [
      "All the corrections have been done, would it be possible to get this reviewed again :-)\r\n\r\nThank you. :-)"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da15ac254a19ac29e54f",
    "number": 1870,
    "body": "This resolves pre-commit hook failures that occur on Windows. The `.gitattributes` file forced CRLF newlines on all files via \"text=auto\", which caused linting to fail.\r\n\r\nLF newlines are now enforced for all files except those with \"crlf\" in their filenames.",
    "head_branch": "standardize-newlines",
    "is_a_fork": true,
    "comments": [
      "> I think this will do it.\r\n\r\nDo you mean, \"This approval will allow you to merge?\" My username doesn't have write access to the repo, so I'll need you to merge if the PR looks good-to-go. :smile: "
    ],
    "commit_messages": [
      "Standardize newlines for all platforms (#1870)\n\nThis resolves pre-commit hook failures that occur on Windows.\r\nThe `.gitattributes` file forced CRLF newlines on all files,\r\nwhich caused linting to fail.\r\n\r\nLF newlines are now enforced for all files\r\nexcept those with \"crlf\" in their filenames."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da16ac254a19ac29e550",
    "number": 1869,
    "body": "As a side effect, the warning will not bubble up to pytest.\r\n\r\nAfter this merges it will be possible to have pytest report unexpected warnings as errors, which will help ensure ongoing compatibility between cookiecutter, new Python versions, and new dependency versions.",
    "head_branch": "fix-pytest-warning",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Verify an expected warning is raised (#1869)\n\nAs a side effect, the warning will not bubble up to pytest."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da17ac254a19ac29e551",
    "number": 1868,
    "body": null,
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "README typo: misrendered link (#1868)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da17ac254a19ac29e552",
    "number": 1867,
    "body": "Release-drafter needed to pick up the latest merged PRs.",
    "head_branch": "fix-release-drafter",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Fix release-drafter to consider the new main branch as default (#1867)\n\nCo-authored-by: Jens W. Klein <jk@kleinundpartner.at>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da18ac254a19ac29e553",
    "number": 1866,
    "body": "This PR introduces the following changes:\r\n\r\n* CI is modified to skip running linters; this is now handled by pre-commit.ci\r\n* A tox configuration is introduced that supports the same functionality as the nox configuration\r\n* `safety` is automatically run locally only against a single Python version. In CI it will continue to run on all Python versions.\r\n* `safety`'s default telemetry is now disabled.\r\n* tox environment dependencies are configured to allow parallel execution as much as possible.\r\n\r\n# Improvement opportunities found during this work\r\n\r\n* The linting tests in CI are considered required. However, pre-commit.ci now handles linting. The CI configuration needs to be updated.\r\n\r\n* Linting currently fails on Windows; it appears that `.gitattributes` is forcing platform-specific line endings that override developer git settings and cause the doc8 hook to fail all files. This can be addressed in a different PR.\r\n\r\n* When building the documentation, ~myst~ *sphinx_contrib.apidoc* consistently overwrites `docs/cookiecutter.rst` with slightly different contents than what's stored in git. ~This can be addressed in a different PR.~ *I don't currently see a way to fix this via the apidoc configuration.*\r\n\r\n* pytest reports a UserWarning during execution; this should be caught by the test that induces it, rather than allowing it to bubble up to pytest. This can be addressed in a different PR.\r\n\r\n* The test suite cannot be run fully in parallel due to file access conflicts (at least on Windows). File I/O should not be occurring in the same directory across multiple runs, so it will be beneficial to update the test suite so it uses unique directories, or to virtualize all I/O using pyfakefs. This will be a helpful improvement to allow for parallel execution, rather than serial execution, of the test suite.",
    "head_branch": "use-tox",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use tox (#1866)\n\n* Stop running pre-commit in CI; this is now managed by pre-commit.ci\r\n\r\n* Migrate from nox to tox"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da19ac254a19ac29e554",
    "number": 1865,
    "body": "This PR will help overcome nox's inability to find installed Python versions on Windows, and its inability to distinguish between CPython and PyPy implementations.\r\n\r\nBesides this problem, nox is also currently slower than tox. These are the results of timing comparison between nox and tox on my machine:\r\n\r\n```\r\n> nox (first run)\r\nRuntime: 8:29\r\n\r\n> nox -r (second run; the user must ask nox to reuse venvs)\r\nRuntime: 4:22\r\n\r\n> tox (1st run)\r\nRuntime: 7:59\r\n\r\n> tox (2nd run)\r\nRuntime: 2:35\r\n```\r\n\r\nIn addition, tox is able to run test suites in parallel, but nox cannot.\r\n\r\nI recommend reverting #1858 and standardizing on tox, but if that is not preferred, this PR will allow the test suite to run on Windows more reliably.",
    "head_branch": "overcome-nox-problems-on-windows",
    "is_a_fork": true,
    "comments": [
      "Close this PR and focus on reverting the change to nox.",
      "I'll be able to tackle this soon. The tox file I used for the timing comparison was a direct transfer of the current nox config and isn't yet production-ready."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da1aac254a19ac29e555",
    "number": 1864,
    "body": "This PR swaps out the existing `check-json` hook for the `pretty-format-json` hook, which will enforce standards on the JSON files, not simply confirm that they can be parsed.\r\n\r\nI recommend visiting pre-commit.ci and enabling it for this repo. This will have the following benefits:\r\n\r\n* All PRs will be checked by pre-commit\r\n* Changes introduced by the linters will be added as an additional commit to all incoming PRs\r\n* Pre-commit hook versions will be regularly updated\r\n\r\nThis will reduce maintenance burden.",
    "head_branch": "pretty-format-json",
    "is_a_fork": true,
    "comments": [
      "@kurtmckee Now we need to fix the files :-)",
      "@ericof Haha, I thought that pre-commit.ci would kick in because of the new commit so I took a shortcut. Maybe it skips PRs that are already open?\r\n\r\nI'll watch for it on net-new PRs to show up as a CI action like the `codecov/*` CI checks. :+1: ",
      "@kurtmckee I have approved your request to install the pre-commit ci integration for the cookiecutter repository. It is now available for use.\r\n\r\nThese are the other GitHub Apps we have installed.\r\n\r\n![image](https://github.com/cookiecutter/cookiecutter/assets/807599/97f20b1a-c338-4e7f-8ade-e04b2316665d)\r\n\r\n\r\nIn case you don't know me, I'm one of the maintainers of cookiecutter-django, but I don't maintain cookiecutter.\r\n\r\nAnyway, thank you for the cleanup job you are doing on the issues/pull-requests.",
      "Thank you both for the quick PR review, and for setting up pre-commit.ci! I think that'll reduce maintenance burden."
    ],
    "commit_messages": [
      "Pretty-format JSON files (#1864)\n\n* Add a pre-commit hook to standardize JSON file formatting\r\n\r\n* Enforce JSON formatting standards\r\n\r\n* Feedback: Indent JSON files with 2 spaces"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da1bac254a19ac29e556",
    "number": 1858,
    "body": "Fixes #1857",
    "head_branch": "issue-1857",
    "is_a_fork": false,
    "comments": [
      "I would prefer to stick with tox and remove nox instead.",
      "@kurtmckee To be honest, it is not a big difference. And it seems our nice friends at `pypa` like it, so we are not adopting something that is unmaintained.",
      "I much more strongly disagree with this now that I've attempted to run the tests on Windows.\r\n\r\nnox is finding PyPy 3.9 and believes that it's CPython 3.9. It's not able to find 4 of my installed CPython versions.\r\n\r\nThis appears to be happening because PyPy 3.9 and CPython 3.11 are the only ones on my PATH (and my virtual environment was created using Python 3.11). The nox documentation says that it finds Python versions on Windows using the py launcher, which I don't have installed.\r\n\r\nnox -- on Windows, anyway -- appears to be an inferior product to tox in this regard, and I would like to revert this change and use tox instead.",
      "@ericof Please let me know if reverting this change and standardizing on tox will be acceptable.",
      "@kurtmckee open a PR reverting all nox changes"
    ],
    "commit_messages": [
      "Update base docs, remove tox (#1858)\n\n* Deprecated tox, use only nox. Closes #1697\r\n\r\n* README cleanup\r\n\r\n* Update package metadata\r\n\r\n* Start README with h1"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da1bac254a19ac29e557",
    "number": 1854,
    "body": "Bumps [actions/setup-python](https://github.com/actions/setup-python) from 3 to 4.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/actions/setup-python/releases\">actions/setup-python's releases</a>.</em></p>\n<blockquote>\n<h2>v4.0.0</h2>\n<h3>What's Changed</h3>\n<ul>\n<li>Support for <code>python-version-file</code> input: <a href=\"https://redirect.github.com/actions/setup-python/issues/336\">#336</a></li>\n</ul>\n<p>Example of usage:</p>\n<pre lang=\"yaml\"><code>- uses: actions/setup-python@v4\n  with:\n    python-version-file: '.python-version' # Read python version from a file\n- run: python my_script.py\n</code></pre>\n<p>There is no default python version for this <code>setup-python</code> major version, the action requires to specify either <code>python-version</code> input or <code>python-version-file</code> input. If the <code>python-version</code> input is not specified the action will try to read required version from file from <code>python-version-file</code> input.</p>\n<ul>\n<li>Use pypyX.Y for PyPy <code>python-version</code> input: <a href=\"https://redirect.github.com/actions/setup-python/issues/349\">#349</a></li>\n</ul>\n<p>Example of usage:</p>\n<pre lang=\"yaml\"><code>- uses: actions/setup-python@v4\n  with:\n    python-version: 'pypy3.9' # pypy-X.Y kept for backward compatibility\n- run: python my_script.py\n</code></pre>\n<ul>\n<li>\n<p><code>RUNNER_TOOL_CACHE</code> environment variable is equal <code>AGENT_TOOLSDIRECTORY</code>: <a href=\"https://redirect.github.com/actions/setup-python/issues/338\">#338</a></p>\n</li>\n<li>\n<p>Bugfix: create missing <code>pypyX.Y</code> symlinks: <a href=\"https://redirect.github.com/actions/setup-python/issues/347\">#347</a></p>\n</li>\n<li>\n<p><code>PKG_CONFIG_PATH</code> environment variable: <a href=\"https://redirect.github.com/actions/setup-python/issues/400\">#400</a></p>\n</li>\n<li>\n<p>Added <code>python-path</code> output: <a href=\"https://redirect.github.com/actions/setup-python/issues/405\">#405</a>\n<code>python-path</code> output contains Python executable path.</p>\n</li>\n<li>\n<p>Updated <code>zeit/ncc</code> to <code>vercel/ncc</code> package: <a href=\"https://redirect.github.com/actions/setup-python/issues/393\">#393</a></p>\n</li>\n<li>\n<p>Bugfix: fixed output for prerelease version of poetry: <a href=\"https://redirect.github.com/actions/setup-python/issues/409\">#409</a></p>\n</li>\n<li>\n<p>Made <code>pythonLocation</code> environment variable consistent for Python and PyPy: <a href=\"https://redirect.github.com/actions/setup-python/issues/418\">#418</a></p>\n</li>\n<li>\n<p>Bugfix for <code>3.x-dev</code> syntax: <a href=\"https://redirect.github.com/actions/setup-python/issues/417\">#417</a></p>\n</li>\n<li>\n<p>Other improvements: <a href=\"https://redirect.github.com/actions/setup-python/issues/318\">#318</a> <a href=\"https://redirect.github.com/actions/setup-python/issues/396\">#396</a> <a href=\"https://redirect.github.com/actions/setup-python/issues/384\">#384</a> <a href=\"https://redirect.github.com/actions/setup-python/issues/387\">#387</a> <a href=\"https://redirect.github.com/actions/setup-python/issues/388\">#388</a></p>\n</li>\n</ul>\n<h2>v3.1.4</h2>\n<h2>What's Changed</h2>\n<p>In the scope of this patch release, the warning for deprecating Python 2.x was added in <a href=\"https://redirect.github.com/actions/setup-python/pull/674\">actions/setup-python#674</a> by <a href=\"https://github.com/dmitry-shibanov\"><code>@​dmitry-shibanov</code></a></p>\n<p>For more information, check out <a href=\"https://redirect.github.com/actions/setup-python/issues/672\">actions/setup-python#672</a></p>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/actions/setup-python/commit/bd6b4b6205c4dbad673328db7b31b7fab9e241c0\"><code>bd6b4b6</code></a> Add warning for python 2.7 (<a href=\"https://redirect.github.com/actions/setup-python/issues/673\">#673</a>)</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/0cbcb9a3d7c0b228a2c4fbde82b6e8855233cd92\"><code>0cbcb9a</code></a> Merge pull request <a href=\"https://redirect.github.com/actions/setup-python/issues/668\">#668</a> from akv-platform/disallow-implicit-dependencies</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/669664dac1a46a4bb872089e1a90e4ad5dc232a6\"><code>669664d</code></a> Merge branch 'tool-config-auto-update' into disallow-implicit-dependencies</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/9cbf792a3cbbd9c37749da21d3b171b927451bb0\"><code>9cbf792</code></a> Update configuration files</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/e732e40717e028f4f5ce334e2b15f37370cb0fbb\"><code>e732e40</code></a> Update licenses</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/a0d867bfa9dbae7b55265d535b886d13be1ce2c7\"><code>a0d867b</code></a> Change http-client dependency to one matching previous version</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/d99bed8b212a85a522f5daad7239544f6be60527\"><code>d99bed8</code></a> Update license</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/f71253fee3c03493b0d84195f0e25a0f228e8be9\"><code>f71253f</code></a> Change to <code>@​action/http-client</code> version to the one that was used in the most re...</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/b51c97f6e3975dda61974a0d6a5f643ae759625f\"><code>b51c97f</code></a> Add eslint rule for disallowing implicit dependencies</li>\n<li><a href=\"https://github.com/actions/setup-python/commit/db9987b4c1f10f0404fa60ee629f675fafbd6763\"><code>db9987b</code></a> Fix a incorrect link advanced-usage.md (<a href=\"https://redirect.github.com/actions/setup-python/issues/657\">#657</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/actions/setup-python/compare/v3...v4\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=actions/setup-python&package-manager=github_actions&previous-version=3&new-version=4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
    "head_branch": "dependabot/github_actions/actions/setup-python-4",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Bump actions/setup-python from 3 to 4 (#1854)\n\nBumps [actions/setup-python](https://github.com/actions/setup-python) from 3 to 4.\r\n- [Release notes](https://github.com/actions/setup-python/releases)\r\n- [Commits](https://github.com/actions/setup-python/compare/v3...v4)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: actions/setup-python\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-major\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>\r\nCo-authored-by: Érico Andrei <ericof@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da1cac254a19ac29e558",
    "number": 1853,
    "body": "Bumps [paambaati/codeclimate-action](https://github.com/paambaati/codeclimate-action) from 3.0.0 to 4.0.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/paambaati/codeclimate-action/releases\">paambaati/codeclimate-action's releases</a>.</em></p>\n<blockquote>\n<h2>v4.0.0</h2>\n<h1><a href=\"https://github.com/paambaati/codeclimate-action/compare/v3.1.0...v4.0.0\">4.0.0</a> (2023-04-23)</h1>\n<h3>Bug Fixes</h3>\n<ul>\n<li><strong>ci:</strong> debug outputs (<a href=\"https://github.com/paambaati/codeclimate-action/commit/11ed9278d366c02ce89a0aa9c0266d01ed3fe78f\">11ed927</a>)</li>\n<li><strong>ci:</strong> fix invalid YAML (<a href=\"https://github.com/paambaati/codeclimate-action/commit/8f95f43e97f705d9dbb7e18d5586a16e8531d318\">8f95f43</a>)</li>\n<li><strong>ci:</strong> fix the tag detection logic for new releases (<a href=\"https://github.com/paambaati/codeclimate-action/commit/f787a56de16312cc3eeff8ed0117b9cc1339a2f3\">f787a56</a>)</li>\n<li><strong>ci:</strong> rebuild and republish to use new branch and workflows (<a href=\"https://github.com/paambaati/codeclimate-action/commit/0c99fb3d11aa2bbf8bf94ed90bd4955348c6338b\">0c99fb3</a>)</li>\n<li><strong>ci:</strong> republish so latest changes get applied (<a href=\"https://github.com/paambaati/codeclimate-action/commit/8f00eaacd9c46d0c7351c37ce64d6f2705ae93dc\">8f00eaa</a>)</li>\n<li><strong>ci:</strong> republish so latest changes get applied (<a href=\"https://github.com/paambaati/codeclimate-action/commit/fa71c1ff7a91f7177d648c64b50c50dd9aa0d90e\">fa71c1f</a>)</li>\n<li><strong>ci:</strong> set up correct (?) condition to trigger publish (<a href=\"https://github.com/paambaati/codeclimate-action/commit/3e9c9cefc80813bd2d9fffeb4610778e0761f2f7\">3e9c9ce</a>)</li>\n<li><strong>ci:</strong> try once again to publish new version (<a href=\"https://github.com/paambaati/codeclimate-action/commit/bcd27f6c52b0b9daa097cb34b05c43e5040216b7\">bcd27f6</a>)</li>\n<li><strong>ci:</strong> use the un-broken latest version of the workflow (<a href=\"https://github.com/paambaati/codeclimate-action/commit/0fe06436de76fed68e37a8d6001f6ba46ba23f26\">0fe0643</a>)</li>\n<li><strong>ci:</strong> validate empty new release version (<a href=\"https://github.com/paambaati/codeclimate-action/commit/2b9684a12a4089d77e5ab787677df4affaeb6ac0\">2b9684a</a>)</li>\n<li><strong>core:</strong> support ARM 64-bit environments (<a href=\"https://github.com/paambaati/codeclimate-action/commit/ea1367348928eca3a302fb3682b07c585841c39f\">ea13673</a>)</li>\n<li><strong>core:</strong> support ARM 64-bit environments (<a href=\"https://github.com/paambaati/codeclimate-action/commit/99e22b3d7de0c911c564cd391d4f9dae79ae176e\">99e22b3</a>)</li>\n</ul>\n<h3>Features</h3>\n<ul>\n<li><strong>core:</strong> cleanup downloaded artifacts (<a href=\"https://github.com/paambaati/codeclimate-action/commit/f3318964532e9a7bdf28c20830035973024c31bc\">f331896</a>), closes <a href=\"https://redirect.github.com/paambaati/codeclimate-action/issues/639\">#639</a></li>\n<li><strong>core:</strong> support fork PRs. (<a href=\"https://github.com/paambaati/codeclimate-action/commit/70a75acf3c0eaae19bee5fb425f63e455356daf7\">70a75ac</a>), closes <a href=\"https://redirect.github.com/paambaati/codeclimate-action/issues/627\">#627</a></li>\n</ul>\n<h3>BREAKING CHANGES</h3>\n<ul>\n<li><strong>ci:</strong> semantic-release and its process is fundamentally broken when the repo moved from master to main for its main branch. This is an attempt to try to unfuck the git log/ref notes</li>\n</ul>\n<h2>v3.2.0</h2>\n<h1><a href=\"https://github.com/paambaati/codeclimate-action/compare/v3.1.0...v3.2.0\">3.2.0</a> (2022-10-21)</h1>\n<h3>Bug Fixes</h3>\n<ul>\n<li><strong>ci:</strong> rebuild and republish to use new branch and workflows (<a href=\"https://github.com/paambaati/codeclimate-action/commit/0c99fb3d11aa2bbf8bf94ed90bd4955348c6338b\">0c99fb3</a>)</li>\n<li><strong>ci:</strong> use the un-broken latest version of the workflow (<a href=\"https://github.com/paambaati/codeclimate-action/commit/0fe06436de76fed68e37a8d6001f6ba46ba23f26\">0fe0643</a>)</li>\n</ul>\n<h3>Features</h3>\n<ul>\n<li><strong>core:</strong> support fork PRs. (<a href=\"https://github.com/paambaati/codeclimate-action/commit/70a75acf3c0eaae19bee5fb425f63e455356daf7\">70a75ac</a>), closes <a href=\"https://redirect.github.com/paambaati/codeclimate-action/issues/627\">#627</a></li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/paambaati/codeclimate-action/blob/main/CHANGELOG.md\">paambaati/codeclimate-action's changelog</a>.</em></p>\n<blockquote>\n<h1><a href=\"https://github.com/paambaati/codeclimate-action/compare/v3.1.0...v4.0.0\">4.0.0</a> (2023-04-23)</h1>\n<h3>Bug Fixes</h3>\n<ul>\n<li><strong>ci:</strong> debug outputs (<a href=\"https://github.com/paambaati/codeclimate-action/commit/11ed9278d366c02ce89a0aa9c0266d01ed3fe78f\">11ed927</a>)</li>\n<li><strong>ci:</strong> fix invalid YAML (<a href=\"https://github.com/paambaati/codeclimate-action/commit/8f95f43e97f705d9dbb7e18d5586a16e8531d318\">8f95f43</a>)</li>\n<li><strong>ci:</strong> fix the tag detection logic for new releases (<a href=\"https://github.com/paambaati/codeclimate-action/commit/f787a56de16312cc3eeff8ed0117b9cc1339a2f3\">f787a56</a>)</li>\n<li><strong>ci:</strong> rebuild and republish to use new branch and workflows (<a href=\"https://github.com/paambaati/codeclimate-action/commit/0c99fb3d11aa2bbf8bf94ed90bd4955348c6338b\">0c99fb3</a>)</li>\n<li><strong>ci:</strong> republish so latest changes get applied (<a href=\"https://github.com/paambaati/codeclimate-action/commit/8f00eaacd9c46d0c7351c37ce64d6f2705ae93dc\">8f00eaa</a>)</li>\n<li><strong>ci:</strong> republish so latest changes get applied (<a href=\"https://github.com/paambaati/codeclimate-action/commit/fa71c1ff7a91f7177d648c64b50c50dd9aa0d90e\">fa71c1f</a>)</li>\n<li><strong>ci:</strong> set up correct (?) condition to trigger publish (<a href=\"https://github.com/paambaati/codeclimate-action/commit/3e9c9cefc80813bd2d9fffeb4610778e0761f2f7\">3e9c9ce</a>)</li>\n<li><strong>ci:</strong> try once again to publish new version (<a href=\"https://github.com/paambaati/codeclimate-action/commit/bcd27f6c52b0b9daa097cb34b05c43e5040216b7\">bcd27f6</a>)</li>\n<li><strong>ci:</strong> use the un-broken latest version of the workflow (<a href=\"https://github.com/paambaati/codeclimate-action/commit/0fe06436de76fed68e37a8d6001f6ba46ba23f26\">0fe0643</a>)</li>\n<li><strong>ci:</strong> validate empty new release version (<a href=\"https://github.com/paambaati/codeclimate-action/commit/2b9684a12a4089d77e5ab787677df4affaeb6ac0\">2b9684a</a>)</li>\n<li><strong>core:</strong> support ARM 64-bit environments (<a href=\"https://github.com/paambaati/codeclimate-action/commit/ea1367348928eca3a302fb3682b07c585841c39f\">ea13673</a>)</li>\n<li><strong>core:</strong> support ARM 64-bit environments (<a href=\"https://github.com/paambaati/codeclimate-action/commit/99e22b3d7de0c911c564cd391d4f9dae79ae176e\">99e22b3</a>)</li>\n</ul>\n<h3>Features</h3>\n<ul>\n<li><strong>core:</strong> cleanup downloaded artifacts (<a href=\"https://github.com/paambaati/codeclimate-action/commit/f3318964532e9a7bdf28c20830035973024c31bc\">f331896</a>), closes <a href=\"https://redirect.github.com/paambaati/codeclimate-action/issues/639\">#639</a></li>\n<li><strong>core:</strong> support fork PRs. (<a href=\"https://github.com/paambaati/codeclimate-action/commit/70a75acf3c0eaae19bee5fb425f63e455356daf7\">70a75ac</a>), closes <a href=\"https://redirect.github.com/paambaati/codeclimate-action/issues/627\">#627</a></li>\n</ul>\n<h3>BREAKING CHANGES</h3>\n<ul>\n<li><strong>ci:</strong> semantic-release and its process is fundamentally broken when the repo moved from master to main for its main branch. This is an attempt to try to unfuck the git log/ref notes</li>\n</ul>\n<h1><a href=\"https://github.com/paambaati/codeclimate-action/compare/v3.1.0...v3.2.0\">3.2.0</a> (2022-10-21)</h1>\n<h3>Bug Fixes</h3>\n<ul>\n<li><strong>ci:</strong> rebuild and republish to use new branch and workflows (<a href=\"https://github.com/paambaati/codeclimate-action/commit/0c99fb3d11aa2bbf8bf94ed90bd4955348c6338b\">0c99fb3</a>)</li>\n<li><strong>ci:</strong> use the un-broken latest version of the workflow (<a href=\"https://github.com/paambaati/codeclimate-action/commit/0fe06436de76fed68e37a8d6001f6ba46ba23f26\">0fe0643</a>)</li>\n</ul>\n<h3>Features</h3>\n<ul>\n<li><strong>core:</strong> support fork PRs. (<a href=\"https://github.com/paambaati/codeclimate-action/commit/70a75acf3c0eaae19bee5fb425f63e455356daf7\">70a75ac</a>), closes <a href=\"https://redirect.github.com/paambaati/codeclimate-action/issues/627\">#627</a></li>\n</ul>\n<h2><a href=\"https://github.com/paambaati/codeclimate-action/compare/v3.1.0...v3.1.1\">3.1.1</a> (2022-10-20)</h2>\n<h3>Bug Fixes</h3>\n<ul>\n<li><strong>ci:</strong> rebuild and republish to use new branch and workflows (<a href=\"https://github.com/paambaati/codeclimate-action/commit/0c99fb3d11aa2bbf8bf94ed90bd4955348c6338b\">0c99fb3</a>)</li>\n</ul>\n<h1>[3.1.0] - 2022-10-14</h1>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/paambaati/codeclimate-action/commit/5f637ccd517bc8960de0fe59379dd922bcba9486\"><code>5f637cc</code></a> feat: build for release</li>\n<li><a href=\"https://github.com/paambaati/codeclimate-action/commit/9dd6d0bc98424cb18e82fec030cfdd41664edd59\"><code>9dd6d0b</code></a> feat: build for release</li>\n<li>See full diff in <a href=\"https://github.com/paambaati/codeclimate-action/compare/v3.0.0...v4.0.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=paambaati/codeclimate-action&package-manager=github_actions&previous-version=3.0.0&new-version=4.0.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\n\n\n</details>",
    "head_branch": "dependabot/github_actions/paambaati/codeclimate-action-4.0.0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Bump paambaati/codeclimate-action from 3.0.0 to 4.0.0 (#1853)\n\nBumps [paambaati/codeclimate-action](https://github.com/paambaati/codeclimate-action) from 3.0.0 to 4.0.0.\r\n- [Release notes](https://github.com/paambaati/codeclimate-action/releases)\r\n- [Changelog](https://github.com/paambaati/codeclimate-action/blob/main/CHANGELOG.md)\r\n- [Commits](https://github.com/paambaati/codeclimate-action/compare/v3.0.0...v4.0.0)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: paambaati/codeclimate-action\r\n  dependency-type: direct:production\r\n  update-type: version-update:semver-major\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>\r\nCo-authored-by: Érico Andrei <ericof@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da1dac254a19ac29e559",
    "number": 1852,
    "body": "CI does not run when PRs merge to `main`. This is caused by an out-of-date CI configuration, which targets `master`, not `main`.\r\n\r\nThis PR changes the CI configuration so CI will start running again when PRs merge to `main`.",
    "head_branch": "change-ci-base-branch-to-main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Rename `master` to `main` so CI runs correctly on merge (#1852)\n\nCo-authored-by: Jens W. Klein <jk@kleinundpartner.at>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da1eac254a19ac29e55a",
    "number": 1851,
    "body": "This PR adds a Dependabot configuration for GitHub workflow actions. Each month, Dependabot will look for new action versions and will submit a PR to update the action versions so they don't fall out of date.\r\n\r\nFor example, when this merges, you can expect a PR from Dependabot to update `actions/setup-python` from v3 to v4.",
    "head_branch": "add-dependabot-for-actions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add a Dependabot config to autoupdate GitHub workflow actions (#1851)\n\nCo-authored-by: Érico Andrei <ericof@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da1fac254a19ac29e55b",
    "number": 1850,
    "body": "Exactly what it says on the tin.",
    "head_branch": "support-python-3.11",
    "is_a_fork": true,
    "comments": [
      "My pleasure, @ericof!\r\n\r\nI've left triage comments for almost all of the PRs on the first page. If you have time now to look through the PRs, I think that you'll be able to address many of those PRs in relatively short order. 👍 ",
      "I will take care of that in the next 2 days and make sure our backlog is manageable again.\nThanks for all the hard work!"
    ],
    "commit_messages": [
      "Support Python 3.11 (#1850)\n\nCo-authored-by: Érico Andrei <ericof@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da1fac254a19ac29e55c",
    "number": 1849,
    "body": "This change was generated by running `pre-commit autoupdate`. No manual changes were introduced.\r\n\r\nNOTE: This updates bandit, and linting is now failing due to a call to `requests.get()` without a timeout specified. This is addressed separately by PR #1772, which should also be merged.\r\n\r\nI recommend signing up at [pre-commit.ci](https://pre-commit.ci/) to ensure that PRs are created by that service automatically to accomplish this.",
    "head_branch": "update-pre-commit-hooks",
    "is_a_fork": true,
    "comments": [
      "@kurtmckee Let's fix and merge #1772, then rebase this,"
    ],
    "commit_messages": [
      "Update pre-commit hook versions (#1849)\n\nCo-authored-by: Érico Andrei <ericof@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da20ac254a19ac29e55d",
    "number": 1848,
    "body": null,
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This seems to be already fixed by another PR prior to this."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da21ac254a19ac29e55e",
    "number": 1847,
    "body": null,
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Out of date following rebase."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da22ac254a19ac29e55f",
    "number": 1841,
    "body": "In this refactored code, the find_template function now returns an Effect instance representing the relative path to the project template. The search_template function performs the actual search logic within the effectful computation.\r\n\r\nTo run the effect and obtain the result, you can use the run() method as follows:\r\n\r\n`\r\nresult = find_template(\"/path/to/repo\").run()\r\n\r\nif isinstance(result, Exception):\r\n    # Handle the exception if the effect raised one\r\n    print(\"Exception occurred:\", result)\r\nelse:\r\n    # Process the successful result\r\n    print(\"The project template is:\", result)\r\n\r\n`\r\n\r\nThe refactored code essentially wraps the original functionality of searching for the project template in an Effect instance. This allows you to perform additional operations, such as logging, alongside the effectful computation. By using the Effect monad, you can encapsulate and manage the effectful computation in a more functional programming style.\r\n",
    "head_branch": "explore-use-effect-on-find",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da23ac254a19ac29e560",
    "number": 1839,
    "body": null,
    "head_branch": "secret_key_extension",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da23ac254a19ac29e561",
    "number": 1838,
    "body": "Hi\r\n\r\nI think this update of the repository for the pre-commit-check will fix the lint step.",
    "head_branch": "fix-lint-ci-action",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fixed failing lint ci action by updating repo of flake8 (#1838)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da24ac254a19ac29e562",
    "number": 1837,
    "body": "Addresses https://github.com/cookiecutter/cookiecutter/issues/1736.\r\n\r\nBased on the bugfix by @liortct in https://github.com/cookiecutter/cookiecutter/pull/1767 but using the organization name throughout the project.",
    "head_branch": "fix-jinja2-delimiters",
    "is_a_fork": true,
    "comments": [
      "This changes the signature of the functions -> breaking change.",
      "As this is a breaking change, we will add it to the 3.0.0 milestone",
      "Would it be sufficient to give the `environment` parameter a default of `None` and then conditionally use its settings? For example:\r\n\r\n```python\r\ndef find(x, environment = None):\r\n    left_delimiter = \"{{\"\r\n    right_delimiter = \"}}\"\r\n    if environment is not None:\r\n        left_delimiter = environment.x\r\n        right_delimiter = environment.y\r\n    ...\r\n```\r\n\r\nWould that allow this to get merged immediately as a bugfix instead of a breaking change?",
      "Was this addressed with merge of #1997 ?",
      "Yes, I think we can close this pull request.\n\nSorry for the late response. "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da25ac254a19ac29e563",
    "number": 1832,
    "body": "Alternative implementation to https://github.com/cookiecutter/cookiecutter/pull/1483. With these changes cookiecutter supports the XDG config locations and typical locations on MacOS and Windows.\r\nThe other PR (as of writing) does not add documentation.\r\nI can add tests, if you want, but using the appdirs package, makes that superfluous since that package has extensive tests.\r\n\r\n@ssbarnea @insspb ",
    "head_branch": "xdg_config_file",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da26ac254a19ac29e564",
    "number": 1830,
    "body": "temnplate -> template ",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Looks like this was changed already. Thanks anyway!"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da27ac254a19ac29e565",
    "number": 1829,
    "body": "\r\nIf cookiecutter functions are called in python code, it is useful to catch possible errors appearing during the execution of cookiecutter pre/post-generate hooks.\r\n\r\nmodified:   cookiecutter/hooks.py to:\r\n\r\n* catch possible errors from the subprocess calling hook scripts\r\n* add these errors in the FailedHookException message\r\n\r\nThe change is not breaking, all tests run to 100% coverage\r\n\r\nCo-authored-by: vykozlov",
    "head_branch": "feat/failedhookexception_with_hook_error",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da27ac254a19ac29e566",
    "number": 1824,
    "body": "By allowing jsonify to be used as a function in jinja2 templates it is possible to easily render cookiecutter\r\ncontext using `{{ jsonify(cookiecutter) }}`.\r\n\r\nThis can just re-use the existing logic.\r\n\r\nBefore investing in adding tests I want to check if this would be considered to be pulled in. I can use a local extension on my end so I do not depend on it but it seems something that could be useful to others.",
    "head_branch": "feature/jsonify_as_function",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da28ac254a19ac29e567",
    "number": 1819,
    "body": "By using cookiecutter inside a python script to include in a already existing project, i had the need to include more than one template folder (i.e. update several folders inside the project).\r\n\r\nCookiecutter is enough well designed to allow a very simple proposition of this implementation.\r\n\r\nIllustration :\r\n```\r\nrepo_dir\r\n|- {cookiecutter.repo_name_1}\r\n|- {cookiecutter.repo_name_2}\r\n|- cookiecutter.json\r\n```\r\n\r\ncookiecutter.json:\r\n```\r\n{\r\n    \"repo_name_1\": \"my_repo\",\r\n    \"repo_name_2\": \"my_other_repo\"\r\n}\r\n```",
    "head_branch": "implement_multi_template_generation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da29ac254a19ac29e568",
    "number": 1815,
    "body": "I needed to troubleshoot hooks and needed to inspect the temporary files generated. \r\nI though other might benefit also",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "@kurtmckee Cloud you please leave me off the notifications about pull-requests in this repo, because I'm unfortunately not a maintainer.",
      "My apologies!! 🙏 It won't happen again. I saw you had recently committed and mistakenly thought you were a maintainer.",
      "@kurtmckee No worries. Are you trying to get out a new release of Cookiecutter? The project seems abandoned.",
      "I've sometimes found that aggressive triage can get things moving again, so my move is to test the waters with some initial effort. This morning I found that a maintainer accepted that initial feedback, so I've triaged more PRs. It can lead to momentum, or it can lead to nowhere, but I'm game for it!",
      "@kurtmckee Interesting strategy! I must remember that. I wish you good luck. It's a shame anyway that such a prominent project is almost abandoned!\r\n\r\n",
      "Thanks! Hopefully our paths cross again! 🤝 😀"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da2aac254a19ac29e569",
    "number": 1814,
    "body": null,
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Close because the typo has already been fixed in the main branch."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da2bac254a19ac29e56a",
    "number": 1813,
    "body": "The test `test_make_sure_path_exists_correctly_handle_os_error` is missing a case when the path is invalid, for example, Path('invalid\\\\path').\r\n\r\nHope this PR can make this test a bit better.",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da2bac254a19ac29e56b",
    "number": 1811,
    "body": null,
    "head_branch": "code-block-fix",
    "is_a_fork": true,
    "comments": [
      "Hi @danhje \r\n\r\nWe started working on a new community fork of the Cookiecutter project, named Cookieninja.\r\nThe fork is found at: https://github.com/cookieninja-generator/cookieninja\r\n\r\nI think your PR is already solved in our fork. If not we would be happy if you can add this PR into Cookieninja project.\r\n\r\nWe're trying to bring the life back to this amazing project.\r\nWe are committed to reviewing and merging each PR in up to 2 weeks from the day it's opened (if there are no issues with it).\r\nWe'd really like you to join the fork, star it and contribute to it!\r\n\r\nThank you :)"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da2cac254a19ac29e56c",
    "number": 1808,
    "body": "Seems you missed it so it won't show up here:\r\nhttps://cookiecutter.readthedocs.io/en/stable/cookiecutter.html#cookiecutter.main.cookiecutter",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "But `skip_if_file_exists` is also not documented and if I look at the API docs it seems to be undocumented by choice. Other paramters with default values however are documented. What's you preferred way of doing this?",
      "I just wanted to clarify: while the params are documented through the options: https://cookiecutter.readthedocs.io/en/stable/cli_options.html I looked for a way to combine two different cookiecutter templates and then to use the result. That way I can write my own additions without the need to fork a project. This should work pretty well with a minimal base cookiecutter.\r\n\r\nFor that to work I would have to know if overwriting is some kind of merging (files are overwritten as they are encountered) or if it is a fresh start (the whole directory is removed and then recreated).\r\n\r\nObviously I can figure this out by reading the source, just wanted to explain why it would be good if kind of obvious parameters had some docs too",
      "Hi @inktrap \r\n\r\nWe started working on a new community fork of the Cookiecutter project, named Cookieninja.\r\nThe fork is found at: https://github.com/cookieninja-generator/cookieninja\r\n\r\nWe have re-opened and merged your PR in the Cookieninja project at: <pr-link>\r\n\r\nWe're trying to bring the life back to this amazing project.\r\nWe are committed to reviewing and merging each PR in up to 2 weeks from the day it's opened (if there are no issues with it).\r\nWe'd really like you to join the fork, star it and contribute to it!\r\n\r\nThank you :)"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da2dac254a19ac29e56d",
    "number": 1805,
    "body": " - Fixed some f-strings\r\n - Removed inheritance from object (python 3)\r\n - added trailing commas where requested by pep8\r\n - fixed an underline flake8 warning\r\n - simplified some case statements\r\n - black to reformat as per repo requirements",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "looks like the hook/action for gitlab is failing? Not sure what's going on there?"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da2eac254a19ac29e56e",
    "number": 1804,
    "body": "stam",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da2fac254a19ac29e56f",
    "number": 1803,
    "body": "* Add --dump-input flag to cli.py\n* Add _generate_cookiecutter_json_file() with the dump logic to generate.py\n* Rename zipfile.py to zipfile_utils.py to fix import collision with zipfile python package\n* Correct tests with the above rename\n",
    "head_branch": "dump-input-cli-arg",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da2fac254a19ac29e570",
    "number": 1800,
    "body": "modified the doc to proper english",
    "head_branch": "correct-doc-header",
    "is_a_fork": true,
    "comments": [
      "Hi @manuzcheruz ,\r\n\r\nWe started working on a new community fork of the Cookiecutter project, named Cookieninja.\r\nThe fork is found at: https://github.com/cookieninja-generator/cookieninja\r\n\r\nThis PR is already solved. See: https://github.com/cookieninja-generator/cookieninja/blob/main/docs/index.rst\r\n\r\nWe're trying to bring the life back to this amazing project.\r\nWe are committed to reviewing and merging each PR in up to 2 weeks from the day it's opened (if there are no issues with it).\r\nWe'd really like you to join the fork, star it and contribute to it!\r\n\r\nThank you :)",
      "looks like this was already fixed. Thanks anyway!"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da30ac254a19ac29e571",
    "number": 1799,
    "body": "Created a utility function that will return an array of file accessibility based on path.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da31ac254a19ac29e572",
    "number": 1798,
    "body": "As shown below, the ['Build Status'] badge doens't show up, due to wrong reference to the tests.yml file. \r\n\r\n![image](https://user-images.githubusercontent.com/61331156/204552673-ca4f19e5-8d4c-4826-aeac-b35166c725f5.png)\r\n\r\nI've changed the README.md file, referencing the appropriate path. With the change, the badge appears correctly as shown below. \r\n\r\n![image](https://user-images.githubusercontent.com/61331156/204553032-3fbc3201-e240-4431-bf70-3dfd00fd74a4.png)\r\n",
    "head_branch": "README_correction",
    "is_a_fork": true,
    "comments": [
      "Hi @Paulokim1 ,\r\n\r\nWe started working on a new community fork of the Cookiecutter project, named Cookieninja.\r\nThe fork is found at: https://github.com/cookieninja-generator/cookieninja\r\n\r\nThis PR is already solved. See: https://github.com/cookieninja-generator/cookieninja#readme\r\n\r\nWe're trying to bring the life back to this amazing project.\r\nWe are committed to reviewing and merging each PR in up to 2 weeks from the day it's opened (if there are no issues with it).\r\nWe'd really like you to join the fork, star it and contribute to it!\r\n\r\nThank you :)"
    ],
    "commit_messages": [
      "fixing badge display problem (#1798)\n\nCo-authored-by: Paulo Kim <paulokim@Paulos-MacBook-Pro.local>\r\nCo-authored-by: Jens W. Klein <jk@kleinundpartner.at>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da32ac254a19ac29e573",
    "number": 1796,
    "body": "I've got an issue where I want to modify the context via a hook, in particular *before* anything is rendered (in my case it's pulling data from `git config`, but I believe it would also help with some open tickets, e.g. #1759, etc.; It has some overlap with  #1466, but since that hasn't been touched in two years...). The minimally-invasive way I found to do so was to allow a new type of hook script, `pre_context`, that gets run as early as possible and returns json, which is then overlaid on the existing context structure (it is not replaced wholesale because I assume most of these scripts would *add* completely new keys, copying the entire context would make such scripts needlessly more complex).\r\n\r\nIn the process I discovered that the scripts have no way to log error messages, they can just fail by exiting non-zero. I've introduced capturing `stderr` and handing it to the logger, that should make things easier. (See #1672, #1499)\r\n\r\nIf this pull request gets otherwise accepted I'll gladly write some accompanying docs, obviously.",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "The failing CI/CD test is just a warning locally... But I'll investigate and see if I can fix it.",
      "I withdraw the PR. The trick schown in https://github.com/samj1912/cookiecutter-advanced-demo is sufficient for my needs."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da33ac254a19ac29e574",
    "number": 1795,
    "body": "Thank you! ",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "@jensens It looks like merging PRs is following a policy that introduces significant delays. For example, this PR has had `main` merged into it twice, and CI will have run 3 times for just this one PR.\r\n\r\nIs this something that's getting enforced by settings in the GitHub repo? If so, is it possible to disable the requirements so PRs can merge as soon as CI passes and the PR has been reviewed?",
      "thank you for merging!"
    ],
    "commit_messages": [
      "Remove unused import from post-generate hook script example (#1795)\n\nremove unused import from example\r\n\r\nCo-authored-by: KAZYPinkSaurus <KAZYPinkSaurus@users.noreply.github.com>\r\nCo-authored-by: Jens W. Klein <jk@kleinundpartner.at>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da33ac254a19ac29e575",
    "number": 1794,
    "body": null,
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da34ac254a19ac29e576",
    "number": 1793,
    "body": "In the \"Working with line-ends special symbols LF/CRLF\" section of the documentation we can see:\r\n\r\nThe special template variable `_new_lines` enforces a specific line ending. Acceptable variables: `'\\n\\r'` for CRLF and `'\\n'` for POSIX.\r\n\r\nHere is example how to force line endings to CRLF on any deployment:\r\n\r\n```\r\n{\r\n    \"project_slug\": \"sample\",\r\n    \"_new_lines\": \"\\n\\r\"\r\n}\r\n```\r\nBut this order is mistaken, since:\r\n\r\n\"The traditional order, when both control characters are used, is Carriage Return, then Line Feed.\r\n\r\nThe reason for this goes back to the old ASR-33 Teletype.\r\n\r\nWhen a Carriage Return is issued to an ASR-33, the print head, if it is near the right margin, takes over a tenth of a second to return to the left margin, plus there is a bit of \"bounce\" when the left margin is hit.\r\n\r\nIf the order were Line Feed, then Carriage Return, the first printed character might occur a tenth of a second after the Carriage Return, and thus might end up printing (as a smear) halfway across the page. But if Line Feed comes after Carriage Return then the time taken by the Line Feed provides extra time for the print head to complete it's trip.\"\r\n\r\n[StackOverflow](https://stackoverflow.com/questions/1885900/order-of-carriage-return-and-new-line-feed)\r\n\r\nSo this PR aims at fixing the CRLF order to the traditional `'\\r\\n'`",
    "head_branch": "fix-new-line-characters-docs",
    "is_a_fork": true,
    "comments": [
      "Hi @Lahiry \r\n\r\nWe started working on a new community fork of the Cookiecutter project, named Cookieninja.\r\nThe fork is found at: https://github.com/cookieninja-generator/cookieninja\r\n\r\nWe have re-opened and merged your PR in the Cookieninja project at: https://github.com/cookieninja-generator/cookieninja/pull/29\r\n\r\nWe're trying to bring the life back to this amazing project.\r\nWe are committed to reviewing and merging each PR in up to 2 weeks from the day it's opened (if there are no issues with it).\r\nWe'd really like you to join the fork, star it and contribute to it!\r\n\r\nThank you :)",
      "@jensens When this is merged, #1792 can be closed. (It is not linked and will not close automatically.)"
    ],
    "commit_messages": [
      "Fixing Carriage Return Line Feed (CRLF) order in docs #1792 (#1793)\n\nCo-authored-by: Jens W. Klein <jk@kleinundpartner.at>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da35ac254a19ac29e577",
    "number": 1788,
    "body": null,
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da36ac254a19ac29e578",
    "number": 1786,
    "body": "Hey everyone, I have cleaned up the repo to make it [PEP 517](https://peps.python.org/pep-0517/), [PEP 631](https://peps.python.org/pep-0631/), and [PEP 660](https://peps.python.org/pep-0660/) compliant as the packaging is now being standardized on the usage of the `pyproject.toml` file. Also, there are parts in the docs I haven't changed yet. Let's see if the CI passes first.\r\n\r\nEdit: Hey maintainers, please notify me whenever possible if you are taking these changes into consideration to continue working on it. I can also apply these changes for `cookiecutter-django` as well. Have a nice day/evening.",
    "head_branch": "up-pck-mtdt",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da37ac254a19ac29e579",
    "number": 1785,
    "body": "The documentation says that the output directory is the current directory. However, with PRs https://github.com/cookiecutter/cookiecutter/pull/452 and https://github.com/cookiecutter/cookiecutter/pull/452, it is configurable.\r\n\r\nWith this commit, the documentation simply links to CLI options page, not to the [CLI option entry on it](https://cookiecutter.readthedocs.io/en/stable/cli_options.html#cmdoption-cookiecutter-o). How do I do that with `:doc`?",
    "head_branch": "fix/output-dir-configurable",
    "is_a_fork": true,
    "comments": [
      "I'm fixing the failing workflow when the comment in the PR description has been processed. I'm awaiting feedback.",
      "The command line options block is generated in code (Sphinx plugin `sphinx_click.ext`). I am not sure if the [generated option](https://github.com/click-contrib/sphinx-click/blob/09a71dcc5052b9e8882eaa606b06826b950ee05b/sphinx_click/ext.py#L150) can be referenced. But if an option can be referenced, then this should work for an generated one too, because in the end both are parsed the same.\r\n\r\nUpdate there is an issue dealing with the problem here https://github.com/click-contrib/sphinx-click/issues/37"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da38ac254a19ac29e57a",
    "number": 1784,
    "body": "For Lior",
    "head_branch": "dump-input",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da38ac254a19ac29e57b",
    "number": 1783,
    "body": "Hello,\r\n\r\n[rich](https://github.com/Textualize/rich) is a very beautiful and popular Python text formatting in the terminal, and as cookiecutter displays text in terminal, it might be useful to add it in the requirements, this makes users no more need to install `rick` package after the installation of `cookiecutter`, if the authors of the template want to use `rich text` in the **pre and post hook scripts**.\r\n\r\nIf we dont add `rick` in the requirements, the authors must guide users to install it seperately, and sometimes it might be not easy as expected.\r\n\r\nAnd as we just add `rich` in the requirements, this PR won't force people to use it, but ease people who want to use it.",
    "head_branch": "add-req-rich-for-better-prompt",
    "is_a_fork": true,
    "comments": [
      "hello,\r\nsomeone @audreyfeldroy, @browniebroke, @ericof, @hackebrot, @insspb, @pydanny, @simobasso, @ssbarnea could give a feedback to this request please ?",
      "While I'm a big fan of rich, I don't think this belongs in Cookiecutter. Certainly not in this capacity of supporting a subset of users. Adding Rich add [5 other dependencies](https://github.com/Textualize/rich/blob/master/pyproject.toml#L31-L35) on Cookiecutter. We've always tried to keep the dependency tree as light as possible.\r\n\r\nAlso if we add Rich as a utility dependency, where do we draw the line at adding these kinds of dependencies that aren't affecting code? \r\n\r\nI'm open to arguments to change my mind, but right now I'm 👎🏻 on this PR.",
      "> While I'm a big fan of rich, I don't think this belongs in Cookiecutter. Certainly not in this capacity of supporting a subset of users. Adding Rich add [5 other dependencies](https://github.com/Textualize/rich/blob/master/pyproject.toml#L31-L35) on Cookiecutter. We've always tried to keep the dependency tree as light as possible.\r\n> \r\n> Also if we add Rich as a utility dependency, where do we draw the line at adding these kinds of dependencies that aren't affecting code?\r\n> \r\n> I'm open to arguments to change my mind, but right now I'm 👎🏻 on this PR.\r\n\r\nHi @pydanny \r\n\r\nThanks for sharing your thoughts, in fact I totally agree with you about not adding third-party non-important dependencies.\r\nMy goal was to add colorful prompt during the pre and post hooks, because most of the user interactions are from there, but unfortunately Python doesn't provide such ability natively, and I wouldn't like to write such things inside of the hooks neither.\r\n\r\nI looked around the solutions implemented elsewhere, what about the one used by poetry's script [install-poetry.py](https://github.com/python-poetry/poetry/blob/8a500f053b756616be99454939bcbf7ad42c7e3b/install-poetry.py#L122) ?, they wrote their own color functions, pure code, no pip install.",
      "There's 4 dependancies for Rich (one is optional). 2 of which are backports of stdlib modules for older Pythons. The other two are Pygments and Commonmark, both pure-python and mature.\r\n\r\nBeyond that I couldn't really say. I understand the desire to keep dependancies light, and I can see @pydanny 's POV that you probably don't want to add all modules that template authors *may* want.\r\n\r\nPerhaps cookie cutter templates could expose their own dependancies?",
      "I am +0.5 in favour of rich. Still, I would more likely want to see setup.py being ditches and PEP-517 implemented as more important.",
      "As @pydanny opposed here, I close the PR.",
      "I don't remember opposing this. Did I? 🤔"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da39ac254a19ac29e57c",
    "number": 1782,
    "body": null,
    "head_branch": "feature/Adding-dump-user-input-flag",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da3aac254a19ac29e57d",
    "number": 1781,
    "body": "When the flag is applied, the user input (along with some mote cookiecutter context info) will be writen to a new created file in the ganerated project tamplate. \r\nThe file name will be .cookiecutter.json",
    "head_branch": "feature/Adding-dump-user-input-flag",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da3bac254a19ac29e57e",
    "number": 1780,
    "body": "Usage: add the --dump-input for creating a new file named .cookiecutter.json with the user input in it. ",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da3cac254a19ac29e57f",
    "number": 1779,
    "body": "Closes #1755\r\n\r\nThis is the jinja2-time code copied almost verbatim, save for minute modern python code changes, and the https://github.com/hackebrot/jinja2-time/pull/19 patch for compatibility across more `arrow` versions.\r\n\r\nDidn't specify `arrow` version in requirements since I wasn't sure what to put there.",
    "head_branch": "inline-jinja2-time",
    "is_a_fork": true,
    "comments": [
      "Is there any way to detect this? Now `\"_extensions\": [\"jinja2_time.TimeExtension\"]`, no longer works out of the box unless a user installs/injects `jinja2_time`, instead \"cookiecutter.extensions.TimeExtension\" is needed. Can I template on the cookiecutter version?\r\n\r\n(I think it would have bene nice to keep the dependency for a version or two to allow cookies to adjust...)",
      "FYI, https://cookiecutter.readthedocs.io/en/stable/advanced/template_extensions.html still tells users to use `jinja2_time.TimeExtension` and `jinja2_time` is no longer included.",
      "FYI, since you handle the processing of that string, what about making `jinja2_time.TimeExtension` provide `cookiecutter.extensions.TimeExtension` if `jinja2_time` isn't' installed? Just a thought."
    ],
    "commit_messages": [
      "Inline jinja2-time extension code (#1779)\n\nCo-authored-by: Érico Andrei <ericof@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da3cac254a19ac29e580",
    "number": 1778,
    "body": "- enable py311 pipelines\r\n- expose py311 support in metadata",
    "head_branch": "chore/py311",
    "is_a_fork": false,
    "comments": [
      "@ssbarnea \r\nHi!\r\nWe started working on a new community fork of the Cookiecutter project, named Cookieninja.\r\nThe fork is found at: https://github.com/cookieninja-generator/cookieninja\r\n\r\nWe have re-opened and merged your PR in the Cookieninja project at https://github.com/cookieninja-generator/cookieninja/pull/16\r\n\r\nWe're trying to bring the life back to this amazing project.\r\nWe are committed to reviewing and merging each PR in up to 2 weeks from the day it's opened (if there are no issues with it).\r\nWe'd really like you to join the fork, star it and contribute to it!\r\n\r\nThank you :)",
      "@liortct I am quite curious about why the forking. If you can provide any links to discussions I would appreciate."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da3dac254a19ac29e581",
    "number": 1775,
    "body": "Requirement:\r\nI need to have verbose human-readable values options being shown to the user while having different values being set to the variable underneath. Example question for FooBarFlags variable:\r\nChoices shown: 1-Foo 2- Bar 3- Both Foo and Bar\r\nActual values: 1- Foo 2- Bar 3-FooBar\r\n\r\nUsage:\r\n```\r\n{\r\n    \"FooBarFlag\": [\"Foo\", \"Bar\", (\"Both Foo and Bar\", \"FooBar\")]\r\n}",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This was added in https://github.com/cookiecutter/cookiecutter/pull/1881!"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da3eac254a19ac29e582",
    "number": 1773,
    "body": "Currently, you cannot reference another value within the cookiecutter.json file if the referenced value is a dict, because those values are deferred to a second pass for parsing.  The cookiecutter.json is parsed as an OrderedDict, therefore there is no benefit to do multiple passes as it only prevents the use of some vars (dicts) in later values.  If a val depends on another value within the json file, it only needs to be put earlier/higher within the file and then can be used anywhere later in the file.",
    "head_branch": "fix_json_loader",
    "is_a_fork": true,
    "comments": [
      "@aryeh Tests are failing. Could you check it, please?"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da3fac254a19ac29e583",
    "number": 1772,
    "body": "We have detected this issue on branch `main` of `cokkiecutter` project on the version with commit hash `e9b3b8`.  This issue can be addressed as a api usage issue. \r\n\r\n**Fixes for api usage issue:**\r\nIn file: `cookiecutter/zipfile.py`, method `unzip` a request is made without a timeout parameter. If the recipient server is unavailable to service the request, [application making the request may stall indefinitely. ](https://docs.python-requests.org/en/master/user/advanced/#timeouts)our intelligent code repair system **iCR** suggested that a timeout value should be specified.\r\n\r\nThis issue was detected by our **OpenRefactory's Intelligent Code Repair (iCR)**. We are running **iCR** on libraries in the `PyPI` repository to identify issues and fix them. You will get more info at: [pypi.openrefactory.com](https://pypi.openrefactory.com/)",
    "head_branch": "icr-fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added timeout on request.get() for ensuring that if a recipient serve… (#1772)\n\n* Added timeout on request.get() for ensuring that if a recipient server is unavilabe then the application making request will not stall indefinitely\r\n\r\n* Update cookiecutter/zipfile.py\r\n\r\nCo-authored-by: Kurt McKee <contactme@kurtmckee.org>\r\n\r\n---------\r\n\r\nCo-authored-by: Érico Andrei <ericof@gmail.com>\r\nCo-authored-by: Kurt McKee <contactme@kurtmckee.org>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da40ac254a19ac29e584",
    "number": 1771,
    "body": "This PR contains a small change, which includes the resolved repository path from the `determine_repo_dir` as item `_repo_dir` to the Cookiecutter context. \r\n\r\nThis allows to define Python packages in the template and to reference them by extending the `sys.path` with normal import statements, e.g. in hook scripts.\r\n\r\n__Sample:__\r\n\r\n```python\r\nimport os\r\nimport requests\r\nimport shutil\r\nimport sys\r\n\r\nfrom dateutil import parser as dateparser\r\n\r\nfrom subprocess import Popen\r\n\r\nsys.path.append(\"{{ cookiecutter._repo_dir }}\")  # <= extend sys.path\r\n\r\nfrom utils.version import Version # <= use module from internal package\r\n\r\n# Get the root project directory\r\nPROJECT_DIRECTORY = os.path.realpath(os.path.curdir)\r\n\r\ndef _error_exit(msg):\r\n    # exits with status 1 to indicate failure\r\n    sys.stderr.write(\"ERROR: %s\\n\" % msg)\r\n    sys.exit(1)\r\n```\r\n\r\n",
    "head_branch": "feat/context-repo-dir",
    "is_a_fork": true,
    "comments": [
      "Someone @audreyfeldroy, @browniebroke, @ericof, @hackebrot, @insspb, @pydanny, @simobasso, @ssbarnea up to for a review of this mini PR, consisting of one line? 😁 ",
      "@ericof Érico when will this be available in a new release i.e. when will there be a new release?",
      "@tmeckel We will sprint on the next weeks to get a new release out",
      "Hoping for this change in a new release soon :) ",
      "Before this is released, is there any workaround whatsoever to get access to this in a hooks script?",
      "@ericof any hope a of release soon? 🙏 "
    ],
    "commit_messages": [
      "feat: Add resolved template repository path as _repo_dir to the context (#1771)\n\n* Changes to cookiecutter/main.py:\r\n* Add resolved template repository path as _repo_dir to the context\r\n\r\n* Changes to tests/test_cli.py:\r\n* corrected test test_echo_undefined_variable_error to check for new context item _repo_dir\r\n\r\nCo-authored-by: Thomas Meckel <tmeckel@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da40ac254a19ac29e585",
    "number": 1770,
    "body": "If you wish to create a hierarchy of templates and use cookiecutter to choose among them,\r\nyou need just to specify the key ``template`` in the main configuration file to reach \r\nthe other ones.\r\n\r\nLet's imagine to have the following structure:\r\n\r\n```\r\nmain-directory/\r\n├── project-1\r\n│   ├── cookiecutter.json\r\n│   ├── {{cookiecutter.project_slug}}\r\n|\t│   ├── ...\r\n├── project-2\r\n│   ├── cookiecutter.json\r\n│   ├── {{cookiecutter.project_slug}}\r\n|\t│   ├── ...\r\n└── cookiecutter.json\r\n```\r\n\r\nIt is possible to specify in the main ``cookiecutter.json`` how to reach the other \r\nconfig files as follows:\r\n```json\r\n{\r\n    \"template\": [\r\n\t\"Project 1 (./project-1)\",\r\n\t\"Project 2 (./project-2)\"\r\n    ]\r\n}\r\n```\r\n\r\nThen, when ``cookiecutter`` is launched in the main directory it will ask to choice\r\namong the possible templates:\r\n\r\n```\r\nSelect template:\r\n1 - Project 1 (./project-1)\r\n2 - Project 2 (./project-2)\r\nChoose from 1, 2 [1]:\r\n```\r\n\r\nOnce a template is chosen, for example ``1``, it will continue to ask the info required by \r\n``cookiecutter.json`` in the ``project-1`` folder, such as ``project-slug``\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Any news?",
      "FWIW my organization would use this if this MR can be merged in.",
      "> FWIW my organization would use this if this MR can be merged in.\r\n\r\nSeems like no one from the team cares about this PR",
      "Thank you",
      "This was a breaking change for users who already used the `template` key for something else (https://github.com/beeware/briefcase/issues/1347), but it was not released with a major version number increment.\r\n\r\nPerhaps it would be better for special keywords to be prefixed with `cookiecutter_` to avoid clashes."
    ],
    "commit_messages": [
      "Support nested config files (#1770)\n\n* allow nested config files\r\n\r\n* update comment\r\n\r\n* add comments\r\n\r\n* fix test bug (import)\r\n\r\n* fix bug windows\r\n\r\n* fixing trailing whitespaces\r\n\r\n---------\r\n\r\nCo-authored-by: Sorin Sbarnea <ssbarnea@redhat.com>\r\nCo-authored-by: Érico Andrei <ericof@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da41ac254a19ac29e586",
    "number": 1769,
    "body": null,
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da42ac254a19ac29e587",
    "number": 1768,
    "body": "Addresses #1744 .\r\n\r\nFixed bug where dynamic non string variable rendered as string.\r\nThat's not allowed dynamic creation of choice variable.\r\nAlso, added a unit-test for recreate this scenario.",
    "head_branch": "dynamic-choice-variable",
    "is_a_fork": true,
    "comments": [
      "@ericof . I can work on this PR again.\r\nDo you want I will fix the conflicts?"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da43ac254a19ac29e588",
    "number": 1767,
    "body": "Addresses #1736 .\r\n\r\nFixed bug where NonTemplatedInputDirException exception was raised when change jinja2 delimiters via `_jinja2_env_vars` in the `cookiecutter.json`.\r\nAlso, added a unit-test for recreate this bug.",
    "head_branch": "bugfix/jinja2-change-delimiters",
    "is_a_fork": true,
    "comments": [
      "Any news on this one?",
      "@ericof - firstly, apologies on the `@` but this PR is seriously needed else i have to use `{% raw %}` all over the place which is really messy (i've got a repo which has helm charts in there, which is used by my development team to generate an initial starting point to get going with all the good stuff used in other projects.\r\n\r\nThis change would ensure that i can use afformentioned `_jinja2_env_vars` feature which was merged recently. I do see this PR and https://github.com/cookiecutter/cookiecutter/pull/1666 appear to add similar functionality (haven't looked at them both in depth alongside one another to check if something is being missed)",
      "For anyone who stumbles upon this in the future, if this hasn't been merged, a workaround i have been using which isn't perfect but gets the job done (i'd rather have a workaround for this than use `{%raw%}` all over the place\r\n\r\n<details>\r\n  <summary>post_gen_project.py</summary>\r\n  \r\n  Assumes you have the cookie contents within a folder such as `{{<<cookiecutter.project_slug>>}}`. The delimiters used aren't important, it just ensures that the delimeters you have used get read and enables you to create a cookie whilst waiting for this PR to get merged.\r\n  \r\n  ```python\r\n    import pathlib\r\n    import shutil\r\n\r\n    PROJECT_SLUG = \"{{ cookiecutter.project_slug }}\"\r\n    OUTPUT_DIR = \"{{ cookiecutter._output_dir }}\"\r\n\r\n    {% raw %}\r\n    def move_resources():\r\n      src = pathlib.Path().absolute()\r\n      dest = pathlib.Path(OUTPUT_DIRECTORY)\r\n      shutil.copytree(src, dest, dirs_exist_ok=True)\r\n      shutil.rmtree(src)\r\n\r\n    if __name__ == \"__main__\":\r\n        move_resources()\r\n\r\n    {% endraw %}\r\n  ```\r\n</details>\r\n\r\n",
      "Hi @stefan-caraiman , @jack1902 \r\n\r\n\r\nWe started working on a new community fork of the Cookiecutter project, named Cookieninja.\r\nThe fork is found at: https://github.com/cookieninja-generator/cookieninja\r\n\r\nWe have re-opened and merged your PR in the Cookieninja project at: https://github.com/cookieninja-generator/cookieninja/pull/36\r\n\r\nWe're trying to bring the life back to this amazing project.\r\nWe are committed to reviewing and merging each PR in up to 2 weeks from the day it's opened (if there are no issues with it).\r\nWe'd really like you to join the fork, star it and contribute to it!\r\n\r\nThank you :)"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da44ac254a19ac29e589",
    "number": 1766,
    "body": "Addresses #1765 .\r\n\r\nAdded print directory tree after generating project.",
    "head_branch": "feature/print-directory-tree",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da44ac254a19ac29e58a",
    "number": 1762,
    "body": "Addresses #1761.\r\n\r\nAdded support for dependent questions.",
    "head_branch": "feature/dependant-questions",
    "is_a_fork": true,
    "comments": [
      "@ericof are you planning to merge this anytime soon?\r\n",
      "I like this idea but am leery of this implementation. It introduces syntax in the key name that must be interpreted. I think that a different implementation may be clearer, and allow for more than boolean dependencies.\r\n\r\nFor example:\r\n\r\n```json\r\n{\r\n    \"trim-level\": [\"basic\", \"standard\", \"high-end\"],\r\n    \"stereo\": [\r\n        {\"case\": {\"trim-level\": \"high-end\"}, \"value\": \"xm-enabled\"},\r\n        {\"case\": {\"trim-level\": \"standard\"}, \"prompt\": [\"am-fm-only\", \"xm-enabled\"]},\r\n        {\"default\": \"am-fm-only\"}\r\n    ]\r\n}\r\n```\r\n\r\nI'm not proposing that this is what an implementation _should_ look like, only that the ability to ask follow-up questions is useful but should be considered in the context of more conditional control over the prompting.\r\n\r\nDue to the age of this PR, I'm closing this.",
      "@kurtmckee \r\nI would like to add this feature. If you want any changes just say and I will work on it.\r\nI think that my implementation was good, you could use more than a boolean parameter, but if you think differently just say and I will change",
      "Hi @liortct!\r\n\r\nI recommend pinging @ericof / @pydanny / @jensens in #1761 to hash out the implementation. As noted above, I think that dependent questions will be valuable, but it will be good to discuss a solution that allows for more than boolean conditions.",
      "Hello @liortct, it would be awesome to have support for dependent questions, but I do agree with @kurtmckee about discussing the proper format to implement that.\r\nRight now, I suggest we move back to #1761 and discuss it there."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da45ac254a19ac29e58b",
    "number": 1760,
    "body": "Addresses #1754.\r\n\r\nFixed bug where files aren't cleaned up during panics, by adding an additional exception catch.",
    "head_branch": "cleanup-files-if-panics",
    "is_a_fork": true,
    "comments": [
      "Hi!\r\nWe started working on a new community fork of the Cookiecutter project, named Cookieninja.\r\nThe fork is found at: https://github.com/cookieninja-generator/cookieninja\r\n\r\nWe have re-opened and merged your PR in the Cookieninja project at https://github.com/cookieninja-generator/cookieninja/pull/30\r\n\r\nWe're trying to bring the life back to this amazing project.\r\nWe are committed to reviewing and merging each PR in up to 2 weeks from the day it's opened (if there are no issues with it).\r\nWe'd really like you to join the fork, star it and contribute to it!\r\n\r\nThank you :)",
      "Please don't @ me, while I'm a member of the organisation, I'm not a maintainer of the cookiecutter CLI project.",
      "My apologies!! It won't happen anymore. You're correct, I was looking at members of the organization.\r\n\r\nPlease have a good weekend!"
    ],
    "commit_messages": [
      "cleanup files if panics during hooks - bugfix (#1760)\n\n* cleanup files if panics during hooks\r\n\r\n* running pre-commit\r\n\r\n---------\r\n\r\nCo-authored-by: Jens W. Klein <jk@kleinundpartner.at>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da46ac254a19ac29e58c",
    "number": 1758,
    "body": "if replayfile have not all answers relatively cookiecutter config file it'll execute prompt operation ",
    "head_branch": "prompt_replay_file",
    "is_a_fork": true,
    "comments": [
      "hi, @audreyfeldroy, @browniebroke, @ericof, @hackebrot, @insspb, @pydanny, @simobasso, @ssbarnea could you take a look my PR, please",
      "i added one test, i can add more if needed",
      "hi, could any one merge it? i merged this with main 3 times already :)"
    ],
    "commit_messages": [
      "Prompt with replay file (#1758)\n\n* add implementation\r\n\r\n* changes for list\r\n\r\n* change to pass tests\r\n\r\n* change position of comment\r\n\r\n* [pre-commit.ci] auto fixes from pre-commit.com hooks\r\n\r\nfor more information, see https://pre-commit.ci\r\n\r\n* add test for prompting feature\r\n\r\n* fix linter\r\n\r\n* save original context\r\n\r\n---------\r\n\r\nCo-authored-by: Aleksey Kuznetsov <alexei.kuznetsov@corp.mail.ru>\r\nCo-authored-by: pre-commit-ci[bot] <66853113+pre-commit-ci[bot]@users.noreply.github.com>\r\nCo-authored-by: Érico Andrei <ericof@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da47ac254a19ac29e58d",
    "number": 1756,
    "body": "Hi, I have never contributed to cookiecutter (or any open source to be honest) but gotta say i love cookiecutter.\r\n\r\nCurrently when including a list in a default context the generate context fails. For example if you had a default context as below with a list value for the \"_copy_without_render\" key.\r\n\r\n\r\n```json\r\n{\r\n    \"1\": 2,\r\n    \"some_key\": \"some_val\",\r\n    \"_copy_without_render\": [\r\n        \"**/*.txt\"\r\n    ]\r\n}\r\n``` \r\n\r\nIn particular in the cruft project there is currently an issue caused by this: https://github.com/cruft/cruft/issues/166\r\n\r\nThis PR updates the `apply_overwrites_to_context` and updates the tests such that when overwriting, if a list is given this overwrites the whole list.",
    "head_branch": "list-in-context-bug",
    "is_a_fork": true,
    "comments": [
      "remark: this PR fixes issue #1757",
      "any update on getting this merged in? ",
      "+1 still blocked by this",
      "Any chances of getting this merged any time soon?",
      "Any chances of getting this merged any time soon?",
      "I'm also blocked by this",
      "+1 still blocked by this.",
      "Hi @simonwardjones \r\n\r\nWe started working on a new community fork of the Cookiecutter project, named Cookieninja.\r\nThe fork is found at: https://github.com/cookieninja-generator/cookieninja\r\n\r\nWe have re-opened and merged your PR in the Cookieninja project at: https://github.com/cookieninja-generator/cookieninja/pull/34\r\n\r\nWe're trying to bring the life back to this amazing project.\r\nWe are committed to reviewing and merging each PR in up to 2 weeks from the day it's opened (if there are no issues with it).\r\nWe'd really like you to join the fork, star it and contribute to it!\r\n\r\nThank you :)"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da48ac254a19ac29e58e",
    "number": 1753,
    "body": null,
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixed minor typos in docs (#1753)\n\nAuthored-by: Segun Babalola <s.babalola@ucl.ac.uk>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da48ac254a19ac29e58f",
    "number": 1749,
    "body": "There is a small typo in docs/conf.py.\n\nShould read `that` rather than `shat`.\n\n\nSemi-automated pull request generated by\nhttps://github.com/timgates42/meticulous/blob/master/docs/NOTE.md",
    "head_branch": "bugfix_typo_that",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "docs: fix simple typo, shat -> that (#1749)\n\nThere is a small typo in docs/conf.py.\r\n\r\nShould read `that` rather than `shat`."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da49ac254a19ac29e590",
    "number": 1748,
    "body": null,
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "0 Files changed...\r\n\r\nIt seems like the master had fixed it already?\r\nClose?"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da4aac254a19ac29e591",
    "number": 1746,
    "body": "Currently, `requests>=2.23.0` is used in https://github.com/cookiecutter/cookiecutter/blob/master/setup.py#L16\r\n\r\n`requests` `latest` points to `2.28.0`. \r\n\r\n`requests==2.28.0` is not happy with `chardet==5.0.0`.\r\n\r\n\r\n\r\nSo `chardet==4.0.0` is required. \r\n\r\n\r\nhttps://github.com/psf/requests/blob/v2.28.0/requests/__init__.py#L75-L79\r\n\r\n```python\r\n    if chardet_version:\r\n        major, minor, patch = chardet_version.split(\".\")[:3]\r\n        major, minor, patch = int(major), int(minor), int(patch)\r\n        # chardet_version >= 3.0.2, < 5.0.0\r\n        assert (3, 0, 2) <= (major, minor, patch) < (5, 0, 0)\r\n```\r\n\r\nThis dependency conflict can be fixed in next `requests` release as below\r\n\r\nhttps://github.com/psf/requests/blob/main/requests/__init__.py#L75-L79\r\n\r\n```python\r\n    if chardet_version:\r\n        major, minor, patch = chardet_version.split(\".\")[:3]\r\n        major, minor, patch = int(major), int(minor), int(patch)\r\n        # chardet_version >= 3.0.2, < 6.0.0\r\n        assert (3, 0, 2) <= (major, minor, patch) < (6, 0, 0)\r\n```\r\n\r\nRelated to https://github.com/ansible-community/molecule/pull/3607",
    "head_branch": "feature/pin-chardet-version",
    "is_a_fork": true,
    "comments": [
      "Fixed in `requests==2.28.1`"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da4bac254a19ac29e592",
    "number": 1741,
    "body": null,
    "head_branch": "fix-typos-and-minor-doc-updates",
    "is_a_fork": true,
    "comments": [
      "One needs to sell those PRs these days (<3 the headline :D)"
    ],
    "commit_messages": [
      "Easy PR! Fix typos and add minor doc updates (#1741)\n\nFix typos and add minor doc updates"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da4cac254a19ac29e593",
    "number": 1739,
    "body": "The main change in this PR is to remove the universal bdist_wheel option, which provides a wheel file [`cookiecutter-2.1.1-py2.py3-none-any.whl `](https://pypi.org/project/cookiecutter/2.1.1/#files) with misleading \"py2\" in the name. The fix included here creates `cookiecutter-2.1.2.dev0-py3-none-any.whl`, as this is a Python 3 only project.\r\n\r\nOther changes to Makefile are to use `python -m build` (i.e. PyPA's [build](https://github.com/pypa/build)) instead of `python setup.py` ([article](https://blog.ganssle.io/articles/2021/10/setup-py-deprecated.html)).",
    "head_branch": "dist-build",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove universal bdist_wheel option; use \"python -m build\" (#1739)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da4cac254a19ac29e594",
    "number": 1732,
    "body": null,
    "head_branch": "fix-build-badge",
    "is_a_fork": false,
    "comments": [
      "Hi @insspb, @sopermaf \r\n\r\nWe started working on a new community fork of the Cookiecutter project, named Cookieninja.\r\nThe fork is found at: https://github.com/cookieninja-generator/cookieninja\r\n\r\nThis PR is already solved. See: https://github.com/cookieninja-generator/cookieninja#readme\r\n\r\nWe're trying to bring the life back to this amazing project.\r\nWe are committed to reviewing and merging each PR in up to 2 weeks from the day it's opened (if there are no issues with it).\r\nWe'd really like you to join the fork, star it and contribute to it!\r\n\r\nThank you :)",
      "@pydanny @jensens @ericof Please close this PR. The build badge has been fixed in a recent merge."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da4dac254a19ac29e595",
    "number": 1729,
    "body": "Complete reason explanation: #1730 \r\n\r\nRelated #1409\r\nCloses #1693\r\n\r\nThis PR include:\r\n\r\n- Strict RST linter in CI/CD\r\n- Fixed versionadded\r\n- Reformat of all RST files",
    "head_branch": "strict-doc-formatting-rst",
    "is_a_fork": false,
    "comments": [
      "After checking back with old project leads, I can tell you this PR wont get in. One sentence per line is a sane rule and will be applied. \r\ncc @ericof "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da4eac254a19ac29e596",
    "number": 1728,
    "body": "Complete reason explanation: #1730 \r\n\r\nRelated #1409 \r\n\r\nThis PR include: \r\n\r\n- Restored HISTORY.md view, that is easy viewable as as text, as markdown.\r\n- Restored credentials for all contributors in HISTORY.md\r\n- Reformatted other markdown docs\r\n- Strict markdown linter\r\n- Removed information about future project roadmap (not updated)",
    "head_branch": "strict-doc-formatting-md",
    "is_a_fork": false,
    "comments": [
      "Rejected for known reasons.\r\n\r\nCc @ericof "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da4fac254a19ac29e597",
    "number": 1727,
    "body": "This PR should be merged after #1725 and #1726, before them pipeline will be failed.\r\n\r\nCloses #1724\r\n\r\nPlease merge it with squash and push, to check changes from #1723 behavior.",
    "head_branch": "black-strict-config",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da4fac254a19ac29e598",
    "number": 1726,
    "body": "Related #1724\r\n\r\nPlease force merge it with default **merge commit**, to check changes from #1723 behavior.",
    "head_branch": "black-strict-core",
    "is_a_fork": false,
    "comments": [
      "Hi @insspb \r\n\r\nWe started working on a new community fork of the Cookiecutter project, named Cookieninja.\r\nThe fork is found at: https://github.com/cookieninja-generator/cookieninja\r\n\r\nWe have re-opened and merged your PR in the Cookieninja project at: https://github.com/cookieninja-generator/cookieninja/pull/46\r\n\r\nWe're trying to bring the life back to this amazing project.\r\nWe are committed to reviewing and merging each PR in up to 2 weeks from the day it's opened (if there are no issues with it).\r\nWe'd really like you to join the fork, star it and contribute to it!\r\n\r\nThank you :)"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da50ac254a19ac29e599",
    "number": 1725,
    "body": "Related #1724\r\n\r\nPlease merge it with squash and push, to check changes from #1723 behavior.",
    "head_branch": "black-strict-tests",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da51ac254a19ac29e59a",
    "number": 1722,
    "body": "Related #1403\r\n\r\nI checked usage of ``make_sure_path_exists`` function, as one of the function related to files modification. First thought was to remove it, as it is almost wrapper over basic functions. But I decided to leave it with correct exception text, but without return.\r\n\r\nType annotate for functions that use ``make_sure_path_exists`` for correct values passing.",
    "head_branch": "update_make_sure_path_exists_and_related_code",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1722 from cookiecutter/update_make_sure_path_exists_and_related_code\n\nCode quality: utils.make_sure_path_exists refactored and type annotated"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da52ac254a19ac29e59b",
    "number": 1721,
    "body": "Related #1403 \r\n\r\nPR #1547 converting os to pathlib silently and implementing a lot of str method calls. It is not what we want, we want to work with Path when it is Path and work with str when str required. \r\n\r\nfind module not related to actual work, but require update in test and in module in one time, otherwise it has no sense. ",
    "head_branch": "pathlib-find",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1721 from cookiecutter/pathlib-find\n\nCode quality: find.py refactored and type annotated"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da53ac254a19ac29e59c",
    "number": 1720,
    "body": "Closes #1697 \r\n\r\n- Deprecates tox\r\n- Update related contribution docs\r\n- Reformat CONTRIBUTING.md\r\n- Roadmap information is also removed, as not actual completely ",
    "head_branch": "deprecate-tox",
    "is_a_fork": false,
    "comments": [
      "Please stick to one sentence per line. We want to be inclusive and having translatable docs is important. \r\n\r\nFurther reading\r\n- https://nick.groenen.me/notes/one-sentence-per-line/\r\n- https://asciidoctor.org/docs/asciidoc-recommended-practices/#one-sentence-per-line\r\n- https://hieuphay.com/one-sentence-per-line/\r\n\r\nAnd as YT: Svens talks and deep experience in documentation is great, like here (there are more) https://www.youtube.com/watch?v=N4kyGM3IYfo\r\n\r\nJust believe me, documentation is not code. Here  PEP8 does not apply, but rules that make sense for docs. Like one-sentence per-line.\r\n\r\n",
      "@jensens \r\n\r\n- I already commented and explained one line issues in #1677. And oneliners was implemented there. If I saw it before I never be agreed with this change. You decided and done, now you try to force it without reason.\r\n- This is markdown file that could and should be readd from vscode, pycharm or other editor as helper and reminder... And what to do with 320 symbols in line? \r\n- Any already translated documentation?\r\n- Any issue with request for translation?\r\n\r\nInclusive is good, but completely not related to one line. \r\n\r\nTechnical documentation should be clear from any device, with any screen, without moving mouse. \r\n\r\nThis PR implement 88 symbols, same as in black. \r\n",
      "Thus, I value your coding experience. But stick to your hi standard for documentation as well. Its not an opinion, it docs-qualitty I am talking about,\r\n\r\nDocs are not, code, no black here, no PEP8. It is that easy. I can not accept the PR here. Sorry.",
      "1. I dont force, its docs standard, stick to high standards?\r\n2.  340 per line? Rephrase, nobody would read it\r\n3.  Inclusiveness produces translatable documentation. You wont find a translator if docs does not enable it. \r\n\r\nSo, why are you taking docs like code? Its just wrong. Its it not.",
      "@jensens I am not arguing that this practice (one line) exist. I am sure, that this practice is not acceptable here at current step. This brings more complexity for working with docs. Docs require correct content at this point. As content will not be stable quite long.\r\n\r\nNow I just opened three popular projects. Raw files. How many symbols inside?\r\n\r\n- https://raw.githubusercontent.com/pytest-dev/pytest/main/CONTRIBUTING.rst\r\n- https://raw.githubusercontent.com/celery/celery/master/CONTRIBUTING.rst\r\n- https://raw.githubusercontent.com/psf/requests/main/README.md\r\n\r\nSo let's not reinvent a bike.",
      "Come on, it does add complexity to not add manual linebreaks? Sorry, I did the work already, just stick to it. It makes it simpler. We are exact at this point. You started formatting back. \r\n\r\nIts that easy, write whole sentences and add a line break at the end of it. \r\n\r\nIts simpler than anything we do here.\r\n\r\nBtw.: since you remove the Makefile in docs you also removed \"make gettext\". So, actually you removed a Sphinx default feature.\r\n",
      "@insspb \r\nFirst, I do not see a reason to move from tox to nox, and I think this should be discussed more with the rest of the community. So let's get back to the issue and discuss there.\r\nSecond, please follow the guidelines @jensens mentioned about contributing to documentation.\r\n",
      "Sorry, closed this by mistake.",
      "@ericof FYI @insspb already self-merged some PRs and introduced nox w/o obtaining consensus. I am +/i0 on nox vs. tox on technical level.\r\nBut given this project is declared as a conservative one, I would have complained, because  tox is a well known tool while nox is a niche.",
      "@jensens @ericof Please close this PR. There is no need to move from tox to nox.",
      "We just need now to decide if we keep nox or not "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da53ac254a19ac29e59d",
    "number": 1719,
    "body": "Easier to debug.\r\n\r\nzipfile.py out of scope of this changes, it will be refactored completely later.",
    "head_branch": "detailed-errors",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1719 from cookiecutter/detailed-errors\n\nCode quality: Core files: Added exception reason reraise when exception class changed (PEP 3134)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da54ac254a19ac29e59e",
    "number": 1718,
    "body": "This is related to #1403 \r\n\r\nThis PR include only file operation replace in tests, not covering all scope of #1403 \r\n\r\nThis is done to be focused and for easy review. Other PR related to #1403 will be soon.",
    "head_branch": "code-quality-tests-use-pathlib",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1718 from cookiecutter/code-quality-tests-use-pathlib\n\nCode quality: Tests upgrade: Use pathlib for files read/write"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da55ac254a19ac29e59f",
    "number": 1717,
    "body": null,
    "head_branch": "code-quality-tests-simple-fixes",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1717 from cookiecutter/code-quality-tests-simple-fixes\n\nCode quality: tests files: Simplify statements fixes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da56ac254a19ac29e5a0",
    "number": 1716,
    "body": "This removes usage of format whenever it is possible, to make code easier to read and same-formatted everywhere.",
    "head_branch": "code-quality-fstrings-core",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1716 from cookiecutter/code-quality-fstrings-core\n\nCode quality: core files: Format replaced with f-strings"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da57ac254a19ac29e5a1",
    "number": 1715,
    "body": "In the documentation for the replay functionality, a code block was ill-rendered.\r\nDue to the `::` after the `Or use the Python API`, the following code block was rendered incorrectly.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "@JohannLange thank you for contribution, i will look on this today. ",
      "Rebased"
    ],
    "commit_messages": [
      "Merge pull request #1715 from JohannLange/master\n\nFixed: Python code block in the replay documentation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da57ac254a19ac29e5a2",
    "number": 1714,
    "body": "Closes #1703",
    "head_branch": "actions",
    "is_a_fork": false,
    "comments": [
      "Related #1697"
    ],
    "commit_messages": [
      "Merge pull request #1714 from cookiecutter/actions\n\nCI/CD: Github actions definition minimized + Sync nox and github actions python versions"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da58ac254a19ac29e5a3",
    "number": 1713,
    "body": "Closes #1698 \r\nRelated #1697",
    "head_branch": "makefile-update",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1713 from cookiecutter/makefile-update\n\nMakefile update: Removed watchmedo and sed dependency, tox replaced with nox"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da59ac254a19ac29e5a4",
    "number": 1712,
    "body": "Closes #1702",
    "head_branch": "pre-commit",
    "is_a_fork": false,
    "comments": [
      "Code Climate has analyzed commit 6fdbb92e and detected **0 issues** on this pull request.\n\nThe test coverage on the diff in this pull request is **100.0%** (**0%** is the threshold).\n\nThis pull request will bring the total coverage in the repository to **100.0%** (**0.0%** change).\n\nView more on [Code Climate](https://codeclimate.com/github/cookiecutter/cookiecutter/pull/1712).\n"
    ],
    "commit_messages": [
      "Merge pull request #1712 from cookiecutter/pre-commit\n\nCI/CD: Updated .pre-commit-config.yaml to use latest hooks versions"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da5aac254a19ac29e5a5",
    "number": 1711,
    "body": "Related #1701",
    "head_branch": "dependabot",
    "is_a_fork": false,
    "comments": [
      "Code Climate has analyzed commit 0610b651 and detected **0 issues** on this pull request.\n\nThe test coverage on the diff in this pull request is **100.0%** (**0%** is the threshold).\n\nThis pull request will bring the total coverage in the repository to **100.0%** (**0.0%** change).\n\nView more on [Code Climate](https://codeclimate.com/github/cookiecutter/cookiecutter/pull/1711).\n"
    ],
    "commit_messages": [
      "Merge pull request #1711 from cookiecutter/dependabot\n\nFixed: Removed mention of packages versions, to exclude dependabot warnings alerts"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da5bac254a19ac29e5a6",
    "number": 1709,
    "body": "closes #1708",
    "head_branch": "myst",
    "is_a_fork": false,
    "comments": [
      "Code Climate has analyzed commit 30c691e4 and detected **0 issues** on this pull request.\n\nThe test coverage on the diff in this pull request is **100.0%** (**0%** is the threshold).\n\nThis pull request will bring the total coverage in the repository to **100.0%** (**0.0%** change).\n\nView more on [Code Climate](https://codeclimate.com/github/cookiecutter/cookiecutter/pull/1709).\n"
    ],
    "commit_messages": [
      "Merge pull request #1709 from cookiecutter/myst\n\nFixed: recommonmark replaced with myst, as recommonmark is deprecated"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da5bac254a19ac29e5a7",
    "number": 1707,
    "body": "Motivation: We want our CI/CD tests pass with same config, as in real build. for this we need control on build settings.",
    "head_branch": "readthedocs",
    "is_a_fork": false,
    "comments": [
      "Code Climate has analyzed commit d177d33f and detected **0 issues** on this pull request.\n\nThe test coverage on the diff in this pull request is **100.0%** (**0%** is the threshold).\n\nThis pull request will bring the total coverage in the repository to **100.0%** (**0.0%** change).\n\nView more on [Code Climate](https://codeclimate.com/github/cookiecutter/cookiecutter/pull/1707).\n"
    ],
    "commit_messages": [
      "Merge pull request #1707 from cookiecutter/readthedocs\n\nAdded: Readthedocs build config"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da5cac254a19ac29e5a8",
    "number": 1706,
    "body": "Related #1697",
    "head_branch": "nox",
    "is_a_fork": false,
    "comments": [
      "Code Climate has analyzed commit 59bfbb3d and detected **0 issues** on this pull request.\n\nThe test coverage on the diff in this pull request is **100.0%** (**0%** is the threshold).\n\nThis pull request will bring the total coverage in the repository to **100.0%** (**0.0%** change).\n\nView more on [Code Climate](https://codeclimate.com/github/cookiecutter/cookiecutter/pull/1706).\n"
    ],
    "commit_messages": [
      "Merge pull request #1706 from cookiecutter/nox\n\nCI/CD: Tox -> Nox: Added nox configuration"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da5dac254a19ac29e5a9",
    "number": 1705,
    "body": "Adding explanation on what is considered valid input for boolean configuration.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "@italomaia Thank you for contribution. I will merge it soon. right now this repository is used for some CI/CD config tests, so do not  look on 'failed'.",
      "Closes #1695\r\n"
    ],
    "commit_messages": [
      "Merge pull request #1705 from italomaia/patch-1\n\nUpdated: Boolean Variables documentation and docstrings"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da5eac254a19ac29e5aa",
    "number": 1704,
    "body": "Closes #1699 \r\n\r\nCloses #1700",
    "head_branch": "release-drafter",
    "is_a_fork": false,
    "comments": [
      "Code Climate has analyzed commit a1a61e32 and detected **0 issues** on this pull request.\n\nThe test coverage on the diff in this pull request is **100.0%** (**0%** is the threshold).\n\nThis pull request will bring the total coverage in the repository to **100.0%** (**0.0%** change).\n\nView more on [Code Climate](https://codeclimate.com/github/cookiecutter/cookiecutter/pull/1704).\n"
    ],
    "commit_messages": [
      "Merge pull request #1704 from cookiecutter/release-drafter\n\nUpdated: Release drafter configuration"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da5fac254a19ac29e5ab",
    "number": 1692,
    "body": "\r\n\r\ncookiecutter.json\r\n```json\r\n{\r\n    \"full_name\": \"Raphael Pierzina\",\r\n    \"github_username\": \"hackebrot\",\r\n    \"project\": {\r\n        \"name\": \"Kivy Project\",\r\n        \"description\": \"Kivy Project description\",\r\n    }\r\n}\r\n```\r\n\r\nuser_config.yaml\r\n```yaml\r\ndefault_context:\r\n  project:\r\n    name: \"My Project\"\r\n```\r\n\r\nCurrent generated context:\r\n```json\r\n{\r\n    \"full_name\": \"Raphael Pierzina\",\r\n    \"github_username\": \"hackebrot\",\r\n    \"project\": {\r\n        \"name\": \"My Project\",\r\n    }\r\n}\r\n```\r\nthe whole project is replace by user config instead of replace project.name only.\r\n\r\nExpected generated context:\r\n```json\r\n{\r\n    \"full_name\": \"Raphael Pierzina\",\r\n    \"github_username\": \"hackebrot\",\r\n    \"project\": {\r\n        \"name\": \"My Project\",\r\n        \"description\": \"Kivy Project description\",\r\n    }\r\n}\r\n```\r\n\r\n",
    "head_branch": "feature",
    "is_a_fork": true,
    "comments": [
      "@cksac thank you for contribution. merged to master"
    ],
    "commit_messages": [
      "Merge pull request #1692 from cksac/feature\n\nAdded: Support partially overwrite keys in nested dict"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da5fac254a19ac29e5ac",
    "number": 1691,
    "body": "Closes #1609",
    "head_branch": "jinja-links",
    "is_a_fork": false,
    "comments": [
      "Code Climate has analyzed commit fcd417de and detected **0 issues** on this pull request.\n\nThe test coverage on the diff in this pull request is **100.0%** (**0%** is the threshold).\n\nThis pull request will bring the total coverage in the repository to **100.0%** (**0.0%** change).\n\nView more on [Code Climate](https://codeclimate.com/github/cookiecutter/cookiecutter/pull/1691).\n"
    ],
    "commit_messages": [
      "Merge pull request #1691 from cookiecutter/jinja-links\n\nFixed broken links to jinja docs"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da60ac254a19ac29e5ad",
    "number": 1690,
    "body": "Signed-off-by: Ryan Russell <git@ryanrussell.org>",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1690 from ryanrussell/master\n\nImprove Docs Readability"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da61ac254a19ac29e5ae",
    "number": 1689,
    "body": null,
    "head_branch": "sanitize-mercurial-checkout",
    "is_a_fork": false,
    "comments": [
      "Code Climate has analyzed commit 85a7884f and detected **0 issues** on this pull request.\n\nThe test coverage on the diff in this pull request is **100.0%** (**0%** is the threshold).\n\nThis pull request will bring the total coverage in the repository to **100.0%** (**0.0%** change).\n\nView more on [Code Climate](https://codeclimate.com/github/cookiecutter/cookiecutter/pull/1689).\n",
      "For reference, this was assigned CVE-2022-24065."
    ],
    "commit_messages": [
      "Merge pull request #1689 from cookiecutter/sanitize-mercurial-checkout\n\nSanitize Mercurial branch information before checkout."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da62ac254a19ac29e5af",
    "number": 1687,
    "body": null,
    "head_branch": "bump-version-back-to-dev",
    "is_a_fork": false,
    "comments": [
      "Code Climate has analyzed commit 8b33e96c and detected **0 issues** on this pull request.\n\nThe test coverage on the diff in this pull request is **100.0%** (**0%** is the threshold).\n\nThis pull request will bring the total coverage in the repository to **100.0%** (**0.0%** change).\n\nView more on [Code Climate](https://codeclimate.com/github/cookiecutter/cookiecutter/pull/1687).\n"
    ],
    "commit_messages": [
      "Merge pull request #1687 from cookiecutter/bump-version-back-to-dev\n\nBump version to 2.1.1.dev0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da62ac254a19ac29e5b0",
    "number": 1686,
    "body": "Fix the documentation part of #1685 based on https://github.com/cookiecutter/cookiecutter/commit/c0e7698097d905938cd9ecd1a08d9a2c99c4f887#r74452594 and https://github.com/cookiecutter/cookiecutter/pull/1240#discussion_r449603826.\r\n\r\nWording improvements are welcome.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1686 from alkatar21/patch-1\n\n[Docs] Fix local extensions documentation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da63ac254a19ac29e5b1",
    "number": 1684,
    "body": "Prepare release 2.1.0 \r\n",
    "head_branch": "bump-release-2.1.0",
    "is_a_fork": false,
    "comments": [
      "Code Climate has analyzed commit 96c68260 and detected **0 issues** on this pull request.\n\nThe test coverage on the diff in this pull request is **100.0%** (**0%** is the threshold).\n\nThis pull request will bring the total coverage in the repository to **100.0%** (**0.0%** change).\n\nView more on [Code Climate](https://codeclimate.com/github/cookiecutter/cookiecutter/pull/1684).\n"
    ],
    "commit_messages": [
      "Merge pull request #1684 from cookiecutter/bump-release-2.1.0\n\nbump version and edit history"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da64ac254a19ac29e5b2",
    "number": 1683,
    "body": "- (re)move dup .md files\r\n- ad pre-commit hook for check-manifest\r\n- fix Manifest itself",
    "head_branch": "check-manifest",
    "is_a_fork": false,
    "comments": [
      "Code Climate has analyzed commit 563472e8 and detected **0 issues** on this pull request.\n\nThe test coverage on the diff in this pull request is **100.0%** (**0%** is the threshold).\n\nThis pull request will bring the total coverage in the repository to **100.0%** (**0.0%** change).\n\nView more on [Code Climate](https://codeclimate.com/github/cookiecutter/cookiecutter/pull/1683).\n"
    ],
    "commit_messages": [
      "Merge pull request #1683 from cookiecutter/check-manifest\n\nCheck manifest: pre-commit, fixes, cleaning"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da65ac254a19ac29e5b3",
    "number": 1682,
    "body": "As documented [here](https://packaging.python.org/en/latest/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/), we move to [pypa/gh-action-pypi-publish@release/v1](https://github.com/marketplace/actions/pypi-publish)\r\n\r\nThis closes #1681 ",
    "head_branch": "issue-1681-use-pypi-publish-action",
    "is_a_fork": false,
    "comments": [
      "Code Climate has analyzed commit 2a819d75 and detected **0 issues** on this pull request.\n\nThe test coverage on the diff in this pull request is **100.0%** (**0%** is the threshold).\n\nThis pull request will bring the total coverage in the repository to **100.0%** (**0.0%** change).\n\nView more on [Code Climate](https://codeclimate.com/github/cookiecutter/cookiecutter/pull/1682).\n"
    ],
    "commit_messages": [
      "Merge pull request #1682 from cookiecutter/issue-1681-use-pypi-publish-action\n\nFollow PyPA guide to release package using GitHub Actions."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da66ac254a19ac29e5b4",
    "number": 1680,
    "body": "This implements the same changes of #1611 ",
    "head_branch": "fpr-1611-fix-typo",
    "is_a_fork": false,
    "comments": [
      "Code Climate has analyzed commit 55047a61 and detected **0 issues** on this pull request.\n\nThe test coverage on the diff in this pull request is **100.0%** (**0%** is the threshold).\n\nThis pull request will bring the total coverage in the repository to **100.0%** (**0.0%** change).\n\nView more on [Code Climate](https://codeclimate.com/github/cookiecutter/cookiecutter/pull/1680).\n"
    ],
    "commit_messages": [
      "Merge pull request #1680 from cookiecutter/fpr-1611-fix-typo\n\nFix typo in dict_variables.rst"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da66ac254a19ac29e5b5",
    "number": 1679,
    "body": "Looked for Python 2.7 artifacts by running ``find . -name \"*.py\" -exec pyupgrade  --py3-only --py37-plus {} +``.\r\n\r\nPrimary changes:\r\n- remove inheritence from ``object``\r\n- a bunch conversion to f-strings\r\n- super calls w/o parameters\r\n- open without ``'r'``or ``rt``  (its by default)\r\n- IOError -> OSError\r\n- binary with `b'...'` instead of `'...'.encode('utf8')`",
    "head_branch": "pyupgrade",
    "is_a_fork": false,
    "comments": [
      "Code Climate has analyzed commit 9ee72e19 and detected **0 issues** on this pull request.\n\nThe test coverage on the diff in this pull request is **100.0%** (**0%** is the threshold).\n\nThis pull request will bring the total coverage in the repository to **100.0%** (**0.0%** change).\n\nView more on [Code Climate](https://codeclimate.com/github/cookiecutter/cookiecutter/pull/1679).\n"
    ],
    "commit_messages": [
      "Merge pull request #1679 from cookiecutter/pyupgrade\n\nhousekeeping: run pyupgrade to find remaining py27 artifacts"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da67ac254a19ac29e5b6",
    "number": 1677,
    "body": "- fixes #721 \r\n- addresses https://github.com/BruceEckel/HelloCookieCutter1/issues/8 (removes submodule and links to repository)\r\n- fixes #1411 (parts taken from stalled #1423)\r\n- addresses #1413 (moves cli docs to top level)\r\n- addresses #1613\r\n- Remove debian installation instructions (part of #1409)\r\n- fixes some Sphinx warnings\r\n- doc style: one line per sentence (not everywhere yet). Hint: in case anyone wants to translate the docs in future.\r\n- README indent and heading level fixes.\r\n- several minor fixes. ",
    "head_branch": "doc-overhaul",
    "is_a_fork": false,
    "comments": [
      "Code Climate has analyzed commit f0112400 and detected **0 issues** on this pull request.\n\nThe test coverage on the diff in this pull request is **100.0%** (**0%** is the threshold).\n\nThis pull request will bring the total coverage in the repository to **100.0%** (**0.0%** change).\n\nView more on [Code Climate](https://codeclimate.com/github/cookiecutter/cookiecutter/pull/1677).\n",
      "@jensens thank you for contribution, but please do not do this in future: \r\n\r\n> doc style: one line per sentence (not everywhere yet). Hint: in case anyone wants to translate the docs in future.\r\n\r\nDocumentation translate make any project less maintainable (if it is not something with huge use), but such changes makes documentation in files harder to read.\r\n\r\n@ericof Please consider my note in future documentation merges.",
      "Documentation is not code, we did large documentations in the past with real experts on the topic. \r\nOne sentence per line is the standard. \r\nSo we should stick to it. \r\n\r\nIf you use Sphinx and may want to translate the docs in future (which may happen), then there is no way around this rule.\r\nIt is a question about inclusiveness, not about readability. \r\n\r\nNice side effects: Better readability on git diff after changes, easier to write (no manual newlines after inserting/removing words in a sentence and so on.\r\n\r\n",
      "@jensens i do not remember any translation attempts. We do not have complete documentation in english. Nothing to say about other languages. But I remember moving to markdown #1216, and this will be done in future for most not auto-generated modules, as Myst support for rst is very elegant too.\r\n\r\nAbout docs not a code. Docs for end users is much more required, but to develop a doc you need to look inside.\r\nBut did you tried to read 231 characters string on small screen? try, it will be fun.\r\n\r\nCheck pre-commit file history to find out how rst checks was set up in past. (2020) also check history of setup.cfg.\r\n\r\nAs for side effects etc... I cannot agree with it. \r\n\r\nAs is standart, For subtitles and things like that for sure. For docs? I see it first time. I do not know any maintainer, who want to watch and work with doc translation."
    ],
    "commit_messages": [
      "Merge pull request #1677 from cookiecutter/doc-overhaul\n\nDocumentation overhaul"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da68ac254a19ac29e5b7",
    "number": 1676,
    "body": "- versions of pre-commit updated\r\n- removed Python version 3.6 from troove\r\n- added Python version 3.10 to troove classifiers",
    "head_branch": "jensens/fix-and-update-linting",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da69ac254a19ac29e5b8",
    "number": 1671,
    "body": "Fixes #1655 - relative path that comes directly from Jinja2 TemplateSyntaxError\r\nin some cases is in format \"./tests/...\" in other \"tests/... now both cases\r\nare accepted as a valid outcome.",
    "head_branch": "test",
    "is_a_fork": true,
    "comments": [
      "In general the `lint` problem was unconnected with the tests - it was in the end problem with old version of `black` tool https://stackoverflow.com/questions/71673404/importerror-cannot-import-name-unicodefun-from-click . I didn't want to mix those things together - but if this helps you - it's fixed.",
      "Green CI is always good idea :) Thanks for fixing CI",
      "Glad I could help - thank you for the review :) - it's helpful."
    ],
    "commit_messages": [
      "Merge pull request #1671 from MaciejPatro/test\n\ntest_generate_file_verbose_template_syntax_error fixed"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da69ac254a19ac29e5b9",
    "number": 1670,
    "body": "Fixes #1655 - relative path that comes directly from Jinja2 TemplateSyntaxError\r\nin some cases is in format \"./tests/...\" in other \"tests/... now both cases\r\nare accepted as a valid outcome.",
    "head_branch": "testing",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da6aac254a19ac29e5ba",
    "number": 1669,
    "body": "Fixes #1631\r\n\r\nHello, \r\n\r\nI think this CLI option would be helpful for creators of new cookiecutters.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "rebased on top of master"
    ],
    "commit_messages": [
      "Merge pull request #1669 from MaciejPatro/master\n\nAdd CLI option to keep project files on failure."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da6bac254a19ac29e5bb",
    "number": 1666,
    "body": "In the current master branch you can pass a dict to the variable \"_jinja2_env_vars\" to customize the Jinja Environment, among other things this allows you to change \"variable_start_string\" and \"variable_end_string\" which defaults to \"{{\" and \"}}\" respectively, however those were left as hard coded values in a couple of functions which prevented the usage of any other value for these 2 settings.",
    "head_branch": "bugfix/jinja_variable",
    "is_a_fork": true,
    "comments": [
      "I really need this feature, congrats! Hoping to be merged soon"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da6cac254a19ac29e5bc",
    "number": 1661,
    "body": "Fixes #1650",
    "head_branch": "override-copy-only-directory",
    "is_a_fork": true,
    "comments": [
      "I can see the problems with this fix,\r\n\r\n- The `dirs_exist_ok` was added after Python 3.8, so it won't work for the earlier versions.\r\n- It does not serve the purpose of the `-f` flag. If the files in the copy-only-dir have been changed, your code won't generate the new content based on the latest files in the source.",
      "> It does not serve the purpose of the `-f` flag. If the files in the copy-only-dir have been changed, your code won't generate the new content based on the latest files in the source.\r\n\r\nThat isn't true, it still copies the directoy in full.\r\n\r\n```\r\nIn [1]: import shutil\r\n\r\nIn [2]: import os\r\n\r\nIn [3]: shutil.copytree('./test', './test-copy', dirs_exist_ok=True)\r\nOut[3]: './test-copy'\r\n\r\nIn [4]: os.listdir('./test-copy')\r\nOut[4]: ['foo.txt']\r\n\r\nIn [5]: from pathlib import Path\r\n\r\nIn [6]: Path('./test/bar.txt').touch()\r\n\r\nIn [7]: os.listdir('./test')\r\nOut[7]: ['foo.txt', 'bar.txt']\r\n\r\nIn [8]: shutil.copytree('./test', './test-copy', dirs_exist_ok=True)\r\nOut[8]: './test-copy'\r\n\r\nIn [9]: os.listdir('./test-copy')\r\nOut[9]: ['foo.txt', 'bar.txt']\r\n```\r\n\r\n> The `dirs_exist_ok` was added after Python 3.8, so it won't work for the earlier versions.\r\n\r\nThis is probably a problem. Maybe I can combine our two solutions. Basically, need to modify your version to respect the `overwrite_if_exists` flag.",
      "Now I got your point, and I think it depends on how we understand the flag `-f`. I am considering it is a flag to re-create the destination anyway, without keeping any changes (modification or new files). But if the flag is only for overriding if exists, my solution won't work, we should keep whatever has been updated in the destination. ",
      "Your solution is more correct. `copytree` doesn't handle deleted files at all. I made a comment on #1651 to respect the flag, and then I think yours is the best solution."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da6dac254a19ac29e5bd",
    "number": 1660,
    "body": null,
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Closing as docs are currently failing to build."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da6dac254a19ac29e5be",
    "number": 1656,
    "body": "minor change to fix the version number in setup.py. that mistake leads\nto wrong version numbers on the local installation\n",
    "head_branch": "fix-setup-version",
    "is_a_fork": true,
    "comments": [
      "The test fails are due to #1655 ",
      "The root cause is #1629 which reverted a bit more than it should have. Including the click <8 upper pin.",
      "This should be solved with [release 2.1.0](https://github.com/cookiecutter/cookiecutter/releases/tag/2.1.0)"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da6eac254a19ac29e5bf",
    "number": 1651,
    "body": "Fixed the issue of failure execution when\r\n- the `overwrite_if_exists=True`\r\n- there are copy only directories in the context\r\n",
    "head_branch": "fixed-override-option-with-copy-only-dir",
    "is_a_fork": true,
    "comments": [
      "This bug is really annoying when you create your own cookiecutter package and need to generate the files again and again. You have to manual `rm -rf the-dir` before you can re-generate it. Is there anyone who can have a look?",
      "Here was my attempt to fix the failing test: https://github.com/cookiecutter/cookiecutter/pull/1661/commits/19a8f2fce6f50810dd558f34d32b085f46a67a55.\r\n\r\nIt might not work on Windows, though.",
      "@att14 \r\n\r\nLet step back to think about the requirement of this `-f` flag. I had a look for the document, and I noticed [doc](https://cookiecutter.readthedocs.io/en/1.7.2/advanced/cli_options.html#cmdoption-f). It says `Overwrite the contents of the output directory if it already exists`. \r\n\r\nHere is my understanding, if you decide to use `-f` flag, you give up any changes to the existing clone, and you re-start a new clone. So my initial fix was straightforward, deleting the existing clone.\r\n\r\nThe `-f` is not a frequently used option, because most of the time, you clone once, and you start to modify the clone. However, this flag is useful for template developers, they need to clone the template again and again to check the output content. During the testing/verification, they don't want to pick different project names, so the `-f` flag is very handy to let them use the same project name.\r\n\r\n\r\nI am happy to hear your thought or anyone else from the committer group. \r\n\r\n\r\n\r\n\r\n\r\n\r\n",
      "I don't disagree with you. I'm confused what the problem is. The change I made is to make your delete respect the `-f` option. You want to avoid deleting all the copy only directories if they haven't supplied `-f`.",
      "I don't think there is a case the copy-on-dir exists and the `overwrite_if_exists=False`. Please check this [block of code](https://github.com/cookiecutter/cookiecutter/blob/master/cookiecutter/generate.py#L216), if the cloned dir exists and the `overwrite_if_exists=False`, the program will raise an exception, but not copying/rendering anything. This means, if the code hits this line `if os.path.isdir(outdir) and overwrite_if_exists:`, the `overwrite_if_exists` must be `True`, and we don't need to add that check. \r\n\r\nI also noticed there is any flag `skip_if_file_exists`, and I believe that is the one to control not overriding any modified content. \r\n\r\n\r\n\r\n\r\n\r\n",
      "You are correct, but I see no reason to avoid being defensive since the check is in another function.",
      "@zhongdai @att14 thank you for contribution. Rebased and merged."
    ],
    "commit_messages": [
      "Merge pull request #1651 from zhongdai/fixed-override-option-with-copy-only-dir\n\nfixed the override not working with copy only dir #1650"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da6fac254a19ac29e5c0",
    "number": 1649,
    "body": "Close #1648",
    "head_branch": "luzfcb-fix-issue-1648",
    "is_a_fork": false,
    "comments": [
      "Code Climate has analyzed commit 907c8344 and detected **0 issues** on this pull request.\n\nThe test coverage on the diff in this pull request is **100.0%** (**0%** is the threshold).\n\nThis pull request will bring the total coverage in the repository to **100.0%** (**0.0%** change).\n\nView more on [Code Climate](https://codeclimate.com/github/cookiecutter/cookiecutter/pull/1649).\n"
    ],
    "commit_messages": [
      "Fixed incorrect link on docs. (#1649)\n\nClose #1648"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da70ac254a19ac29e5c1",
    "number": 1646,
    "body": "This PR adds support to specify a \"directory\" in an abbreviation (as in the `--directory` CLI argument).\r\n\r\nIn order to support this while still being backwards compatible, the code needed a slight adaptation in how expansions are executed.\r\n\r\nWhen this is merged, a user can write abbreviations in two variants:\r\n\r\n* simple: A simple string. This is the same behaviour as currently exists in cookie-cutter\r\n* advanced: A mapping. This new format allows to add the `directory` option.\r\n\r\nThis change also opens up the possibility to add more keys to abbreviations, opening up the doors to more advanced abbreviation handling, while still keeping backwards compatibility.",
    "head_branch": "directory-in-abbreviation",
    "is_a_fork": true,
    "comments": [
      "Updated with \"main\" again and the diff still looks clean. Any update/feedback on this?",
      "Hi @exhuma \r\n\r\nWe started working on a new community fork of the Cookiecutter project, named Cookieninja.\r\nThe fork is found at: https://github.com/cookieninja-generator/cookieninja\r\n\r\nWe have re-opened and merged your PR in the Cookieninja project at: https://github.com/cookieninja-generator/cookieninja/pull/64\r\n\r\nWe're trying to bring the life back to this amazing project.\r\nWe are committed to reviewing and merging each PR in up to 2 weeks from the day it's opened (if there are no issues with it).\r\nWe'd really like you to join the fork, star it and contribute to it!\r\n\r\nThank you :)"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da71ac254a19ac29e5c2",
    "number": 1645,
    "body": "Added the ability to use conditional prompts based on an old issue (#913: https://github.com/cookiecutter/cookiecutter/issues/913).\r\nI was looking for a solution, but I could not find it. I have created the first version for this including docs and tests.",
    "head_branch": "feature/conditional-prompt",
    "is_a_fork": true,
    "comments": [
      "I love this thank you!",
      "> Thanks for this feature, we are looking forward to using it in our on-going work. Let us know if there is anything else we can do to help!\r\n> \r\n> (@Ninjagod1251 too)\r\n\r\nThis is the first version, so I can imagine that this is 'rough around the edges'. We could have a quick chat and discuss possible next steps, happy to bring this further!",
      "> > Thanks for this feature, we are looking forward to using it in our on-going work. Let us know if there is anything else we can do to help!\r\n> > (@Ninjagod1251 too)\r\n> \r\n> This is the first version, so I can imagine that this is 'rough around the edges'. We could have a quick chat and discuss possible next steps, happy to bring this further!\r\n\r\n\r\n\r\n> > Thanks for this feature, we are looking forward to using it in our on-going work. Let us know if there is anything else we can do to help!\r\n> > (@Ninjagod1251 too)\r\n> \r\n> This is the first version, so I can imagine that this is 'rough around the edges'. We could have a quick chat and discuss possible next steps, happy to bring this further!\r\n\r\n@nilsdebruin Happy to connect! I am telegram with the same handle @Ninjagod1251 ",
      "Thank you very much for implementing this functionality @nilsdebruin 👏  Is there a timeline for cutting a `cookiecutter` release with this feature? 🙏 ",
      "Conflicts need to be resolved.",
      "hi everyone! just checking the current status of this issue and if there is any intention to move that forward or if we can help to move this forward.\r\n\r\nthanks!!",
      "Hi @xmnlab , @insspb , @jensens , @malcolmgreaves , @nilsdebruin , @Ninjagod1251 , @unparalleled-js , @moskrc \r\n\r\nWe started working on a new community fork of the Cookiecutter project, named Cookieninja.\r\nThe fork is found at: https://github.com/cookieninja-generator/cookieninja\r\n\r\nWe have re-opened and merged your PR in the Cookieninja project at: https://github.com/cookieninja-generator/cookieninja/pull/26\r\n\r\nWe're trying to bring the life back to this amazing project.\r\nWe are committed to reviewing and merging each PR in up to 2 weeks from the day it's opened (if there are no issues with it).\r\nWe'd really like you to join the fork, star it and contribute to it!\r\n\r\nThank you :)",
      "hi guys, I am in great need for this feature, is there any integration of it in any of the official releases? just from reading the release notes I would say now :( ",
      "It needs someone to work on it and fix the open issues.",
      "Has this issue been resolved? if not, i would like to help attempt to resolve it.",
      "@austinbenny, I assume you didn't progress it in the end?\r\n\r\n@jensens, it's just the naming and the tests missing (a part from a master rebase)?",
      "> @jensens, it's just the naming and the tests missing (a part from a master rebase)?\r\n\r\nIt's been a while, as far as I can remember that is it.  \r\n\r\n",
      "```\r\n\"ptype\": [\r\n        {\"a\": {\"yaml_path\": \"config/config.yaml\"}},\r\n        {\"b\": {\"input_data_path\": \"data/input/\", \"file_name\": \"data\"}}\r\n    ],\r\n```\r\nyou can write as above. If it is 'a', it asks for yaml_path prompt. If it is 'b', it asks for input_data_path and file_name prompts."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da71ac254a19ac29e5c3",
    "number": 1643,
    "body": "In https://github.com/cookiecutter/cookiecutter/commit/db5fce2ee25b5ece417c12dddfc712beaace61fe, most probably by accidence, we lost support for click 8.x. That PR reverts that change.\r\n\r\nIssue: #1640 ",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Restore accidentally deleted support for click 8.x (#1643)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da72ac254a19ac29e5c4",
    "number": 1639,
    "body": "So far, the versions are written differently and sometimes twice. For a new feature they were missing completely.\r\nThis is to be made more consistent now.",
    "head_branch": "unify-docs",
    "is_a_fork": true,
    "comments": [
      "Resolved now in the opposite direction (like it is in Python documentation) within #1677"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da73ac254a19ac29e5c5",
    "number": 1638,
    "body": "- With the changes here I am adding poetry as dependencies and packaging management tool to cookiecutter. as setuptools and wheels are not needed anymore, they were removed from the ci workflows.\r\n\r\n- The publishing workflow is tested by building and pushing the package to the test repository of PyPI. here is the test release https://test.pypi.org/project/cookiecutter/2.0.2/\r\n\r\n- The **CI Tests** workflows are successful on all python versions.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Squash on merge.",
      "With 2.1.0 we follow now the official PyPA process for Github actions  as defined here: https://packaging.python.org/en/latest/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/\r\n\r\nAs Cookiecutter defines itself as a conservative project (https://cookiecutter.readthedocs.io/en/latest/CONTRIBUTING.html#implement-features) I tend to propose not merge this PR, since following the official way is IMO the conservative way.\r\n\r\nI personally doubt we have any advantages with Poetry here. But decision is up to the @cookiecutter/cookiecutter-sentinel core contributor team and the leads as a whole.\r\n\r\nWhat do we gain using Poetry? \r\nWhat problems does it solve and what are the advantages over the conservative way?",
      "I also vote against poetry. Setuptools and PEP-517 are mature and a safe bet as of today.",
      "Even though I use Poetry for my personal projects, I do not see any additional benefits here. So I'm also 👎🏼 ",
      "The work here started 7 months and was waiting for a merge since January. If I start now arguing how Poetry facilitates the packaging and whether it brings advantages to the project or not and how it solves problems, then I feel something is going wrong here with the timing.\r\n\r\nSo as @jensens and @ericof are the new maintainers of Cookiecutter, here is a brief history of this PR:\r\nReplacing the setuptools with Poetry was already discussed during the live mob programming sessions last December with @audreyfeldroy when everybody was struggling to figure out how to come up with a new release because of the lack of documentation. Back then in the Christmas holidays, I came to an agreement with @audreyfeldroy that I go deeper into how the workflow in Cookiecutter is built and I suggested leveraging the packaging to Poetry.\r\nWe agreed on a meeting on 14th January where I showed the changes I made to @pydanny and @audreyfeldroy and I also explained how Poetry brings advantages to Cookiecutter.\r\nAfter that meeting, I had a few previews and I made some changes as agreed during the meeting.\r\nAlso on the same day of that meeting, I was able to publish version 2.0.3 to the test PyPI registry using the Poetry and many volunteers participated in a community testing.\r\nSince then, we agreed several times on a meeting where we publish the new release with the new workflow but @pydanny was not able to show up because of private reasons.",
      "@HosamAlmoghraby let me try to summarize: \r\n- the work started because of lack of knowledge how to implement a proper release process, \r\n- Poetry seemed to be a possible solution to overcome this\r\n- there were some discussion, but its not documented nor are there any facts left to built upon\r\n\r\nMeanwhile @ericof and I implemented the official PyPA release workflow (it was like 2h work). So there is no reason anymore left from what I get to merge this. It hurts, because work and time flew into this PR, but OTHO this how evolution of software works. I feel the pain with you.\r\n\r\nQuestion is - from the current state of 2.1.0: What are the benefits? What do we gain? I do not see much. One thing I like is there is no `setup.py` anymore. But this is possible with the official tools as well.\r\n\r\nAs said, I am conservative here. Unless I do not find a real problem solved, it is not worth to merge. Just for the sake of Poetry is not a reason.",
      "- What are the benefits? What do we gain?\r\nFrom the current state, I think, not so much (talking from a conservative point of view). The current implementation of the workflow and the other workflow proposed in this PR, both lead to package and publish Cookiecutter to PyPI.\r\nPoetry is an extra tool for dependency management and packaging. It manages this process out of the box, It does that like any other library used in the project to do a specific job. (click for example is used as a command-line interface in Cookiecutter!).\r\n\r\nAs long as the core team voted against the changes proposed here, I am fine with closing this PR."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da74ac254a19ac29e5c6",
    "number": 1635,
    "body": "Please reference code and doc.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "@browniebroke@audreyfeldroy @luzfcb @michaeljoseph, Please review this pull request, Thanks",
      "I think this is already solved with #1240?"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da75ac254a19ac29e5c7",
    "number": 1634,
    "body": "In order to test the poetry configuration, we need to publish the package to the test.pypi.org repository.\r\nI can push the package to the test repository if you add my test.pypi.org username \"hosam\" https://test.pypi.org/user/hosam/ to the contributors' list.",
    "head_branch": "publish_with_poetry",
    "is_a_fork": true,
    "comments": [
      "closed as there is another pull request #1638 "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da76ac254a19ac29e5c8",
    "number": 1629,
    "body": "As part of our group programming session today led by @audreyfeldroy, we are reverting #1577 together.",
    "head_branch": "remove-setuptools_scm-packaging",
    "is_a_fork": true,
    "comments": [
      "We could do this through the GitHub UI?\r\nhttps://docs.github.com/en/pull-requests/collaborating-with-pull-requests/incorporating-changes-from-a-pull-request/reverting-a-pull-request"
    ],
    "commit_messages": [
      "Merge pull request #1629 from ozer550/remove-setuptools_scm-packaging\n\nRemoved changes related to setuptools_scm"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da76ac254a19ac29e5c9",
    "number": 1626,
    "body": "Added support for specifying boolean parameters inside cookiecutter.json, prompt for them and parse them as actual booleans.\r\n\r\nCloses #1625",
    "head_branch": "add-boolean-field",
    "is_a_fork": true,
    "comments": [
      "rebased",
      "@liortct thank you for contribution and long merge waiting.",
      "> contribution\r\n\r\n\r\n\r\n> @liortct thank you for contribution and long merge waiting.\r\n\r\n@insspb \r\nI couldn't find a content details but I would like to help more in the project. I am interested in becoming more involved in the project and helping you guys.\r\nI will be happy to hear where you need help, review on PR's, new fixtures, help with issues etc...\r\nFeel free to contact me via liortct@gmail.com\r\nThanks",
      "sorry for commenting in a PR so old but just a feedback about using it from the CLI with --no-input\r\nI am trying to use it with a bunch of options (1, yes, True, true) .. but it is not working properly :(\r\nany advice would be very helpful",
      "This change is not released to PyPI yet: https://github.com/cookiecutter/cookiecutter/compare/2.1.1...main\r\n\r\nIf you want to use it, you need to install the cookiecutter CLI from git",
      "Oh I see. Thanks for the information. Appreciate that.\n\nBtw, is there any plan for cutting a new release?"
    ],
    "commit_messages": [
      "Merge pull request #1626 from liortct/add-boolean-field\n\nAdded: Boolean variable support in JSON"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da77ac254a19ac29e5ca",
    "number": 1621,
    "body": "Closes #1619\r\n\r\n- On Python 3.10 `cookiecutter --version` now prints Python 3.10 instead of Python 3.1\r\n- Added test to verify this behavior \r\n- Added cross-platform Python 3.10 CI environments",
    "head_branch": "1619-fix-python-version-number",
    "is_a_fork": true,
    "comments": [
      "I thought f-strings were not supported on Python 2.7 and 3.5, which this project purports it supports. Am I missing something?",
      "@gotmax23 where did you find references to those legacy python versions?\r\nWe don't support them any longer (as you can see from the CI runs).",
      "> @gotmax23 where did you find references to those legacy python versions? We don't support them any longer (as you can see from the CI runs).\r\n\r\nIt's listed in one of the shields.io badges in the README. I guess that whatever data source it pulls from is outdated."
    ],
    "commit_messages": [
      "Merge pull request #1621 from ozer550/1619-fix-python-version-number\n\nFix Python version number in `cookiecutter --version` and test on Python 3.10"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da78ac254a19ac29e5cb",
    "number": 1620,
    "body": "This PR updates the Cookiecutter release notes and version number.\n\n\nCo-authored-by: Sahil <sahilflash123@gmail.com>\nCo-authored-by: Prathamesh <prathameshd419@gmail.com>\nCo-authored-by: John-Anthony <john.thevos@gmail.com>",
    "head_branch": "1555-go-through-pypi-checklist",
    "is_a_fork": false,
    "comments": [
      "Code Climate has analyzed commit 4741a057 and detected **0 issues** on this pull request.\n\nThe test coverage on the diff in this pull request is **100.0%** (**0%** is the threshold).\n\nThis pull request will bring the total coverage in the repository to **100.0%** (**0.0%** change).\n\nView more on [Code Climate](https://codeclimate.com/github/cookiecutter/cookiecutter/pull/1620).\n"
    ],
    "commit_messages": [
      "Merge pull request #1620 from cookiecutter/1555-go-through-pypi-checklist\n\nRelease 2.0.1"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da79ac254a19ac29e5cc",
    "number": 1615,
    "body": "Try to fix this issue https://github.com/cookiecutter/cookiecutter/issues/1614\r\n\r\nInfo to fix find in:\r\n* https://setuptools.pypa.io/en/latest/userguide/declarative_config.html?highlight=setup.cfg\r\n* https://github.com/pypa/setuptools/issues/1390#ref-pullrequest-1055003577\r\n\r\n\r\n##  Before\r\n```python\r\npip install -e /home/thomas/Work/tests/cookiecutter\r\nDefaulting to user installation because normal site-packages is not writeable\r\nObtaining file:///home/thomas/Work/tests/cookiecutter\r\n  Installing build dependencies ... done\r\n  Checking if build backend supports build_editable ... done\r\n  Getting requirements to build wheel ... done\r\n  Preparing metadata (pyproject.toml) ... error\r\n  ERROR: Command errored out with exit status 1:\r\n   command: /usr/bin/python3 /home/thomas/.local/lib/python3.8/site-packages/pip/_vendor/pep517/in_process/_in_process.py prepare_metadata_for_build_wheel /tmp/tmptgk2ykzc\r\n       cwd: /home/thomas/Work/tests/cookiecutter\r\n  Complete output (37 lines):\r\n  running dist_info\r\n  creating /tmp/pip-modern-metadata-fcez5afp/cookiecutter.egg-info\r\n  writing /tmp/pip-modern-metadata-fcez5afp/cookiecutter.egg-info/PKG-INFO\r\n  Traceback (most recent call last):\r\n    File \"/home/thomas/.local/lib/python3.8/site-packages/pip/_vendor/pep517/in_process/_in_process.py\", line 363, in <module>\r\n      main()\r\n    File \"/home/thomas/.local/lib/python3.8/site-packages/pip/_vendor/pep517/in_process/_in_process.py\", line 345, in main\r\n      json_out['return_val'] = hook(**hook_input['kwargs'])\r\n    File \"/home/thomas/.local/lib/python3.8/site-packages/pip/_vendor/pep517/in_process/_in_process.py\", line 164, in prepare_metadata_for_build_wheel\r\n      return hook(metadata_directory, config_settings)\r\n    File \"/tmp/pip-build-env-hozahlxj/overlay/lib/python3.8/site-packages/setuptools/build_meta.py\", line 174, in prepare_metadata_for_build_wheel\r\n      self.run_setup()\r\n    File \"/tmp/pip-build-env-hozahlxj/overlay/lib/python3.8/site-packages/setuptools/build_meta.py\", line 158, in run_setup\r\n      exec(compile(code, __file__, 'exec'), locals())\r\n    File \"setup.py\", line 10, in <module>\r\n      setuptools.setup(\r\n    File \"/tmp/pip-build-env-hozahlxj/overlay/lib/python3.8/site-packages/setuptools/__init__.py\", line 153, in setup\r\n      return distutils.core.setup(**attrs)\r\n    File \"/usr/lib/python3.8/distutils/core.py\", line 148, in setup\r\n      dist.run_commands()\r\n    File \"/usr/lib/python3.8/distutils/dist.py\", line 966, in run_commands\r\n      self.run_command(cmd)\r\n    File \"/usr/lib/python3.8/distutils/dist.py\", line 985, in run_command\r\n      cmd_obj.run()\r\n    File \"/tmp/pip-build-env-hozahlxj/overlay/lib/python3.8/site-packages/setuptools/command/dist_info.py\", line 31, in run\r\n      egg_info.run()\r\n    File \"/tmp/pip-build-env-hozahlxj/overlay/lib/python3.8/site-packages/setuptools/command/egg_info.py\", line 292, in run\r\n      writer(self, ep.name, os.path.join(self.egg_info, ep.name))\r\n    File \"/tmp/pip-build-env-hozahlxj/overlay/lib/python3.8/site-packages/setuptools/command/egg_info.py\", line 656, in write_pkg_info\r\n      metadata.write_pkg_info(cmd.egg_info)\r\n    File \"/usr/lib/python3.8/distutils/dist.py\", line 1117, in write_pkg_info\r\n      self.write_pkg_file(pkg_info)\r\n    File \"/tmp/pip-build-env-hozahlxj/overlay/lib/python3.8/site-packages/setuptools/dist.py\", line 167, in write_pkg_file\r\n      write_field('Summary', single_line(self.get_description()))\r\n    File \"/tmp/pip-build-env-hozahlxj/overlay/lib/python3.8/site-packages/setuptools/dist.py\", line 151, in single_line\r\n      raise ValueError('Newlines are not allowed')\r\n  ValueError: Newlines are not allowed\r\n  ----------------------------------------\r\nWARNING: Discarding file:///home/thomas/Work/tests/cookiecutter. Command errored out with exit status 1: /usr/bin/python3 /home/thomas/.local/lib/python3.8/site-packages/pip/_vendor/pep517/in_process/_in_process.py prepare_metadata_for_build_wheel /tmp/tmptgk2ykzc Check the logs for full command output.\r\nERROR: Command errored out with exit status 1: /usr/bin/python3 /home/thomas/.local/lib/python3.8/site-packages/pip/_vendor/pep517/in_process/_in_process.py prepare_metadata_for_build_wheel /tmp/tmptgk2ykzc Check the logs for full command output.\r\n```\r\n\r\n-----\r\n\r\n## After\r\n```python\r\npip install -e /home/thomas/Work/tests/cookiecutter\r\nDefaulting to user installation because normal site-packages is not writeable\r\nObtaining file:///home/thomas/Work/tests/cookiecutter\r\n  Installing build dependencies ... done\r\n  Checking if build backend supports build_editable ... done\r\n  Getting requirements to build wheel ... done\r\n  Preparing metadata (pyproject.toml) ... done\r\nRequirement already satisfied: requests>=2.23.0 in /home/thomas/.local/lib/python3.8/site-packages (from cookiecutter==2.0.0a1.dev5) (2.24.0)\r\nRequirement already satisfied: jinja2-time>=0.2.0 in /home/thomas/.local/lib/python3.8/site-packages (from cookiecutter==2.0.0a1.dev5) (0.2.0)\r\nRequirement already satisfied: binaryornot>=0.4.4 in /home/thomas/.local/lib/python3.8/site-packages (from cookiecutter==2.0.0a1.dev5) (0.4.4)\r\nRequirement already satisfied: pyyaml>=5.3.1 in /usr/lib/python3/dist-packages (from cookiecutter==2.0.0a1.dev5) (5.3.1)\r\nRequirement already satisfied: python-slugify>=4.0.0 in /home/thomas/.local/lib/python3.8/site-packages (from cookiecutter==2.0.0a1.dev5) (4.0.1)\r\nRequirement already satisfied: click<9.0.0,>=7.0 in /home/thomas/.local/lib/python3.8/site-packages (from cookiecutter==2.0.0a1.dev5) (7.1.2)\r\nRequirement already satisfied: Jinja2<4.0.0,>=2.7 in /home/thomas/.local/lib/python3.8/site-packages (from cookiecutter==2.0.0a1.dev5) (2.11.2)\r\nRequirement already satisfied: chardet>=3.0.2 in /usr/lib/python3/dist-packages (from binaryornot>=0.4.4->cookiecutter==2.0.0a1.dev5) (3.0.4)\r\nRequirement already satisfied: MarkupSafe>=0.23 in /usr/lib/python3/dist-packages (from Jinja2<4.0.0,>=2.7->cookiecutter==2.0.0a1.dev5) (1.1.0)\r\nRequirement already satisfied: arrow in /home/thomas/.local/lib/python3.8/site-packages (from jinja2-time>=0.2.0->cookiecutter==2.0.0a1.dev5) (0.17.0)\r\nRequirement already satisfied: text-unidecode>=1.3 in /home/thomas/.local/lib/python3.8/site-packages (from python-slugify>=4.0.0->cookiecutter==2.0.0a1.dev5) (1.3)\r\nRequirement already satisfied: idna<3,>=2.5 in /usr/lib/python3/dist-packages (from requests>=2.23.0->cookiecutter==2.0.0a1.dev5) (2.8)\r\nRequirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/lib/python3/dist-packages (from requests>=2.23.0->cookiecutter==2.0.0a1.dev5) (1.25.8)\r\nRequirement already satisfied: certifi>=2017.4.17 in /usr/lib/python3/dist-packages (from requests>=2.23.0->cookiecutter==2.0.0a1.dev5) (2019.11.28)\r\nRequirement already satisfied: python-dateutil>=2.7.0 in /usr/lib/python3/dist-packages (from arrow->jinja2-time>=0.2.0->cookiecutter==2.0.0a1.dev5) (2.7.3)\r\nInstalling collected packages: cookiecutter\r\n  Attempting uninstall: cookiecutter\r\n    Found existing installation: cookiecutter 2.0.0a1.dev5\r\n    Uninstalling cookiecutter-2.0.0a1.dev5:\r\n      Successfully uninstalled cookiecutter-2.0.0a1.dev5\r\n  Running setup.py develop for cookiecutter\r\n    ERROR: Command errored out with exit status 1:\r\n     command: /usr/bin/python3 -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/home/thomas/Work/tests/cookiecutter/setup.py'\"'\"'; __file__='\"'\"'/home/thomas/Work/tests/cookiecutter/setup.py'\"'\"';f = getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__) if os.path.exists(__file__) else io.StringIO('\"'\"'from setuptools import setup; setup()'\"'\"');code = f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' develop --no-deps --user --prefix=\r\n         cwd: /home/thomas/Work/tests/cookiecutter/\r\n    Complete output (32 lines):\r\n    running develop\r\n    /tmp/pip-build-env-s22a9ydz/overlay/lib/python3.8/site-packages/setuptools/command/easy_install.py:156: EasyInstallDeprecationWarning: easy_install command is deprecated. Use build and pip and other standards-based tools.\r\n      warnings.warn(\r\n    WARNING: The user site-packages directory is disabled.\r\n    /tmp/pip-build-env-s22a9ydz/overlay/lib/python3.8/site-packages/setuptools/command/install.py:34: SetuptoolsDeprecationWarning: setup.py install is deprecated. Use build and pip and other standards-based tools.\r\n      warnings.warn(\r\n    error: can't create or remove files in install directory\r\n    \r\n    The following error occurred while trying to add or remove files in the\r\n    installation directory:\r\n    \r\n        [Errno 13] Permission denied: '/usr/local/lib/python3.8/dist-packages/test-easy-install-133040.write-test'\r\n    \r\n    The installation directory you specified (via --install-dir, --prefix, or\r\n    the distutils default setting) was:\r\n    \r\n        /usr/local/lib/python3.8/dist-packages/\r\n    \r\n    Perhaps your account does not have write access to this directory?  If the\r\n    installation directory is a system-owned directory, you may need to sign in\r\n    as the administrator or \"root\" account.  If you do not have administrative\r\n    access to this machine, you may wish to choose a different installation\r\n    directory, preferably one that is listed in your PYTHONPATH environment\r\n    variable.\r\n    \r\n    For information on other options, you may wish to consult the\r\n    documentation at:\r\n    \r\n      https://setuptools.readthedocs.io/en/latest/deprecated/easy_install.html\r\n    \r\n    Please make the appropriate changes for your system and try again.\r\n    \r\n    ----------------------------------------\r\n  Rolling back uninstall of cookiecutter\r\n  Moving to /home/thomas/.local/bin/cookiecutter\r\n   from /tmp/pip-uninstall-obx6lq9_/cookiecutter\r\n  Moving to /home/thomas/.local/lib/python3.8/site-packages/cookiecutter-2.0.0a1.dev5.dist-info/\r\n   from /home/thomas/.local/lib/python3.8/site-packages/~ookiecutter-2.0.0a1.dev5.dist-info\r\n  Moving to /home/thomas/.local/lib/python3.8/site-packages/cookiecutter/\r\n   from /home/thomas/.local/lib/python3.8/site-packages/~ookiecutter\r\nERROR: Command errored out with exit status 1: /usr/bin/python3 -c 'import io, os, sys, setuptools, tokenize; sys.argv[0] = '\"'\"'/home/thomas/Work/tests/cookiecutter/setup.py'\"'\"'; __file__='\"'\"'/home/thomas/Work/tests/cookiecutter/setup.py'\"'\"';f = getattr(tokenize, '\"'\"'open'\"'\"', open)(__file__) if os.path.exists(__file__) else io.StringIO('\"'\"'from setuptools import setup; setup()'\"'\"');code = f.read().replace('\"'\"'\\r\\n'\"'\"', '\"'\"'\\n'\"'\"');f.close();exec(compile(code, __file__, '\"'\"'exec'\"'\"'))' develop --no-deps --user --prefix= Check the logs for full command output.\r\n```",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "I close this PR because https://github.com/cookiecutter/cookiecutter/issues/1614#issuecomment-1134984224"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da7aac254a19ac29e5cd",
    "number": 1612,
    "body": "The cookiecutter community moved away from Slack to Discord. Update badge in README accordingly.",
    "head_branch": "discord-badge",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update badge & links from Slack to Discord in README (#1612)\n\nCo-authored-by: Michael Joseph <michaeljoseph+github@gmail.com>\r\nCo-authored-by: Sorin Sbarnea <sorin.sbarnea@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da7aac254a19ac29e5ce",
    "number": 1611,
    "body": "spell error",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Closing this in favor of #1680 (as it was not possible to resolve the conflicts)"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da7bac254a19ac29e5cf",
    "number": 1610,
    "body": "- Use developer install of package\r\n- Don't invoke `python setup.py` directly\r\n\r\nSee https://stackoverflow.com/questions/19048732/python-setup-py-develop-vs-install\r\nfor info\r\n\r\nCo-authored with @audreyfeldroy ",
    "head_branch": "update-contributor-install-commands",
    "is_a_fork": true,
    "comments": [
      "👌 #1608 fixes the build, i think ✅"
    ],
    "commit_messages": [
      "Improve local development step 3 (#1610)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da7cac254a19ac29e5d0",
    "number": 1609,
    "body": "The current links for jinja statements `if` and `for` are resolving to `Page not found`, updated them to correct pages.",
    "head_branch": "bugfix/broken-jinja-if-link",
    "is_a_fork": true,
    "comments": [
      "@lmmentel thank you for contribution, unfortunately it is on outdated documentation base. I will replace it in #1691"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da7dac254a19ac29e5d1",
    "number": 1608,
    "body": "This PR includes all changes by @audreyfeldroy and @pydanny in preparation for releasing 2.0.1 Release Candidate 1.",
    "head_branch": "release-prep-2.0.1rc1",
    "is_a_fork": false,
    "comments": [
      "Code Climate has analyzed commit 3db109d9 and detected **0 issues** on this pull request.\n\nThe test coverage on the diff in this pull request is **100.0%** (**0%** is the threshold).\n\nThis pull request will bring the total coverage in the repository to **100.0%** (**0.0%** change).\n\nView more on [Code Climate](https://codeclimate.com/github/cookiecutter/cookiecutter/pull/1608).\n"
    ],
    "commit_messages": [
      "Merge pull request #1608 from cookiecutter/release-prep-2.0.1rc1\n\nRelease preparation for 2.0.1rc1"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da7eac254a19ac29e5d2",
    "number": 1605,
    "body": "As per the title, this implements giving access to the username without the user having to specify it.  I've found myself wanting to have access to this information without the user needing to type it in.  If this feature isn't desired, can you please suggest an alternative approach that is preferred?﻿\n",
    "head_branch": "provide_username",
    "is_a_fork": true,
    "comments": [
      "You can apply `local_extensions` with custom Jinja2 filters creating values as needed, like defined here\r\n\r\nhttps://github.com/collective/cookiecutter-plone-starter/blob/ce0e291cdb4d1821c060bbdd5ee0756a65da522e/local_extensions/__init__.py#L7-L22\r\n\r\nregistered here:\r\n\r\nhttps://github.com/collective/cookiecutter-plone-starter/blob/ce0e291cdb4d1821c060bbdd5ee0756a65da522e/cookiecutter.json#L25-L27\r\n\r\nand used here:\r\n\r\nhttps://github.com/collective/cookiecutter-plone-starter/blob/1aa25d5560f4355e821046857502b25b056a31ba/cookiecutter.json#L9-L10\r\n\r\nIs this what you need?",
      "@jensens @pydanny @ericof Please close this PR. It appears that the use case may have been addressed."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da7eac254a19ac29e5d3",
    "number": 1604,
    "body": "I didn't check her other accounts, but updated all github mentions.\r\n\r\nHello @audreyfeldroy! :upside_down_face:",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1604 from ri0t/master\n\nFix @audreyr to @audreyfeldroy github account rename"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da7fac254a19ac29e5d4",
    "number": 1600,
    "body": "After cloning the project, I needed to install `pyyaml` to run `pytest`",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This is not needed because pyyaml is a runtime dependency already, no reason to also add it to test ones."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da80ac254a19ac29e5d5",
    "number": 1599,
    "body": "Fixes #1412",
    "head_branch": "credits-page",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1599 from doobrie/credits-page\n\nMove contributors and backers to credits section"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da81ac254a19ac29e5d6",
    "number": 1598,
    "body": "Hey guys! \r\n\r\nWe're writing a lot about our experience with CookieCutter (which has been great so far!) and would love to share our blogs with the community. \r\n\r\nI followed the docs guidelines here:\r\nhttps://github.com/cookiecutter/cookiecutter/blob/master/CONTRIBUTING.md\r\nand ensured everything looks good on the local setup! ",
    "head_branch": "adding-more-tutorial",
    "is_a_fork": true,
    "comments": [
      "Bump @audreyfeldroy! Could we send this?\r\nI'd be happy to make any request changes 😄 ",
      "Hi @maddymanu thank you for contribution. I do not think that it is community driven, it more looks like indirect ad of cortex.io\r\n\r\nI will leave this pull request for other reviewers, but I think it should be declined.",
      "Anyway if you want to continue with it - you need to rebase. \r\nAnd I think I thought 3 cc related docs on your site, so you can extend it. "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da82ac254a19ac29e5d7",
    "number": 1597,
    "body": "Resolves #1453\r\n\r\n```\r\n→ git remote -v\r\norigin\tcodecommit::eu-central-1://some-repo (fetch)\r\norigin\tcodecommit::eu-central-1://some-repo (push)\r\n```\r\n\r\nSupport for AWS CodeCommit is provided through git-remote-codecommit extension: https://pypi.org/project/git-remote-codecommit/\r\n\r\n",
    "head_branch": "codecommit-support",
    "is_a_fork": true,
    "comments": [
      "Hi @meckhardt \r\n\r\nWe started working on a new community fork of the Cookiecutter project, named Cookieninja.\r\nThe fork is found at: https://github.com/cookieninja-generator/cookieninja\r\n\r\nWe have re-opened your PR in the Cookieninja project at: https://github.com/cookieninja-generator/cookieninja/pull/40\r\n\r\nWe're trying to bring the life back to this amazing project.\r\nWe are committed to reviewing and merging each PR in up to 2 weeks from the day it's opened (if there are no issues with it).\r\nWe'd really like you to join the fork, star it and contribute to it!\r\n\r\nThank you :)",
      "I'm closing this ticket so that cookiecutter can avoid taking on increasing responsibility for cloning and managing the many VCS systems."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da82ac254a19ac29e5d8",
    "number": 1592,
    "body": "I was reading Docs and wanted to create a simple Cookiecutter template. So I ended up reading https://cookiecutter.readthedocs.io/en/latest/tutorial2.html# and was disappointed to see an incomplete basic tutorial. I spent most of my time trying to figure out how to test Cookiecutter template locally and it seems to me that the best option is to make a ZIP file and use it for running cookiecutter. \r\n\r\nIn this PR I tried to make a rounded up tutorial with a basic setup and to answer the most important questions that I had at the time.\r\n\r\nThis is my first PR, I hope it will be helpful. I'm looking forward to your feedback. 😊 ",
    "head_branch": "update-docs-for-create-cookiecutter-from-scratch",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1592 from miro-jelaska/update-docs-for-create-cookiecutter-from-scratch\n\nDocumentation extension: Create a Cookiecutter From Scratch tutorial"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da83ac254a19ac29e5d9",
    "number": 1590,
    "body": "Hi, Sourcehut has mercurial repositories also. \r\n\r\nThis pr does not support those.\r\n\r\nAny ideas how to cover that in a simple way?\r\n\r\nIt would be cool if the user could just give the `sr` abbreviation and either a git or hg repo as arg and cookiecutter will just dispatch to either `git.sr.ht/~` or `hg.sr.ht/~`",
    "head_branch": "sourcehut_abbreviation",
    "is_a_fork": true,
    "comments": [
      "Closing as I do not think that this service is popular enough to deserve an abbreviation. The fact that we did not see other supporters in so long is a proof. If situation changes, obviously that we will reconsider it."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da84ac254a19ac29e5da",
    "number": 1587,
    "body": "Addresses the concerns in #1543 that not all side effects are clearly documented",
    "head_branch": "no-input-docs-revamp",
    "is_a_fork": true,
    "comments": [
      "Hey @jeremyswerdlow thanks for taking time for this, and sorry for the delay on the review!\r\n\r\nWhile we're at it, I'd like to be able to fix other problems with flag's documentation within the codebase.  \r\n\r\nI tracked down all the places where `no_input` appears, and this is what I noticed:\r\n\r\n- cookiecutter/main.py::cookiecutter\r\n- cookiecutter/prompt.py::prompt_for_config\r\n- cookiecutter/prompt.py::prompt_choice_for_config\r\n- cookiecutter/repository.py::determine_repo_dir\r\n\r\nIn all those places the docstring just says *\"Prompt the user at command line for\r\nmanual configuration?\"*. But as a user of this function, I ask myself: what\r\nhappens if the end-user isn't prompted for manual configuration? (I\r\nshould be able to understand it by looking only at the docstring) \r\n\r\n\r\n- cookiecutter/zipfile.py::unzip\r\n\r\n*\"Suppress any prompts\"* doesn't say anything about how the function\r\nbehaves in this case. Take a look at cookiecutter/utils.py::prompt_and_delete, \r\nthis is an example of good documentation: if I read the docstring I\r\ndon't have to guess what happens.\r\n\r\n\r\n- cookiecutter/vcs.py::clone\r\n\r\nSame as above, how does the function behave if the flag is `True`? (there's no mention\r\nabout the cache being refreshed).\r\n\r\n\r\n- docs/advanced/suppressing_prompts.rst:6 \r\n\r\nWe should document also here the fact that `no_input` causes a refresh of the cached resources. \r\nI would also add a comment on line 6 to say that `no_input` corresponds to `--no-input` flag on the CLI. \r\n\r\n\r\nWould you mind taking care of them? \r\n\r\n\r\n",
      "Hey @jeremyswerdlow are you still interested on working on this? \r\n\r\nI don't want to put pressure, it's just to know if I should wait or add those changes by myself and merge the pr.\r\n\r\n---\r\n\r\n**Update** (2021-10-26)\r\nAdded the missing bits and assigned the review to someone else as this pull request now contains code submitted by myself.",
      "@jeremyswerdlow @glumia Thank you for contribution, will be in next release."
    ],
    "commit_messages": [
      "Merge pull request #1587 from jeremyswerdlow/no-input-docs-revamp\n\nExpand cli documentation relating to the no-input flag (#1543)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da85ac254a19ac29e5db",
    "number": 1580,
    "body": "This PR is a follow-up to PR #1566. It contains only the features of context V2 related to JSON Schema implementation. \r\nBecause the context V2 enables significantly more complexity in the cookiecutter.json schema, it becomes necessary to have a more robust and unified way of defining the structure of the cookiecutter.json file. This is why we want to use the python package for [JSON schema](https://json-schema.org/) to do so. This PR includes :\r\n\r\n- Definition of the V1.0 Schema (pass all schema)\r\n- Base definition of the V2.0 Schema:\r\n- Tools for inferring schema version and validating the structure of a  cookiecutter.json file",
    "head_branch": "feature/contextV2-JsonSchema",
    "is_a_fork": true,
    "comments": [
      "Hi @simobasso, we are still eager to make some progress with the new cookiecutter.json format that we proposed in #1567, and merging this PR would be the first step to make this possible. We've split the original PR into the smallest possible parts that so that it's easier to review. Would you like to start with this one?",
      "@simobasso bump"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da86ac254a19ac29e5dc",
    "number": 1579,
    "body": "",
    "head_branch": "feature/contextV2-JsonSchema",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da86ac254a19ac29e5dd",
    "number": 1578,
    "body": "Closes #1558 ",
    "head_branch": "backport_click_limit",
    "is_a_fork": true,
    "comments": [
      "I am -0.5 on this move because it will create conflicts with other packages that already require click > 8. If we do it we should first release 2.0, so users can upgrade to it in order to avoid conflicts. Should I also mention that passing CI test would require extra work :p"
    ],
    "commit_messages": [
      "Force click<8.0.0 backport 1.7.x (#1578)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621da87ac254a19ac29e5de",
    "number": 1577,
    "body": "One direct benefit of this change is that package version is no longer hardcoded and is generated based on last tag.\r\n\r\nRelated: #1555",
    "head_branch": "fix/setuptools-scm",
    "is_a_fork": false,
    "comments": [
      "Code Climate has analyzed commit f00bed7b and detected **0 issues** on this pull request.\n\nThe test coverage on the diff in this pull request is **100.0%** (**0%** is the threshold).\n\nThis pull request will bring the total coverage in the repository to **100.0%** (**0.0%** change).\n\nView more on [Code Climate](https://codeclimate.com/github/cookiecutter/cookiecutter/pull/1577).\n",
      "LGTM.\r\n\r\nThe only thing I don't like about `setuptools_scm` is that apparently, it doesn't work well with PEP 508, that is, if there are requirements like:\r\n\r\n```\r\npackage@https://github.com/repository/project/archive/branch_or_commit_hash.zip#sha1=HASH\r\n```\r\n\r\nI discovered this behavior yesterday so I don't have a solution or workaround\r\n\r\n```bash\r\npip install pip -U\r\npip install django-user-sessions@https://github.com/jazzband/django-user-sessions/archive/master.zip\r\n```\r\n",
      "It is expected not to work with git archives because it does not have any clue about which version to use. Git clones work. Is not the only thing not working with git archives. If I remember well microsoft was considering adding some extra metadata to these archives in order to enable consumers to make use of tag information.",
      "It will work for maintenance branches too because it will inherit from last tag from current history and generate a `devX` version. In fact it does know to also increase the minor version by default. Feel free to try it.\r\n\r\nAlso keep in mind that no release is made without a tag and the tag value. That does not prevent accidents like tagging the wrong version for the branch. Still that part is addressed differently via https://github.com/orgs/cookiecutter/teams/cookiecutter-sentinel/discussions/4",
      "Hi @simobasso @ssbarnea @luzfcb it looks like you have done a huge amount of work on attempting to improve packaging of Cookiecutter. The current team that is trying to put out the Cookiecutter 2 release (including myself) is having trouble getting setuptools_scm and build to work properly. We want to use the improved setup that you created here in this pull request, but we just cant get it to work on my computer. Can any of you help us sometime over the next 24 hours over a voice screen share in discord the Cookiecutter [Discord](https://discord.gg/ZvaJt9cAbj)? The ideal situation would be for us to use the current setup as-is to the new release, but if we cant figure it out, we will revert this pull request.\r\n\r\nNOTE: This message was typed by @ozer550  as Audrey is unable to use her hands.  "
    ],
    "commit_messages": [
      "Merge pull request #1577 from cookiecutter/fix/setuptools-scm\n\nAdopt setuptools-scm packaging"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da88ac254a19ac29e5df",
    "number": 1574,
    "body": "",
    "head_branch": "period",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add missing period (#1574)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da89ac254a19ac29e5e0",
    "number": 1573,
    "body": "This PR is based in previous work by @jgrasser see: #1041, #1048 and #1469; it has been discussed also in other context as in #1479.\r\nThe code was base on those requests which are not of my authory, I recicled what @jgrasser made and make it compatible with the current code base.\r\n\r\nIt provides:\r\n * Support for git submodules\r\n * A bit of documentation on the feature\r\n * Unit test",
    "head_branch": "feature/git_submodules",
    "is_a_fork": true,
    "comments": [
      "Updated PR to consider latest master: d6037b7",
      "What is the problem here?\r\nI'd love to see this feature and - fortunately - cookiecutter isn't dead yet, as there is some activity again :)",
      "I'm closing this PR due to its age, and to avoid cookiecutter taking on increasing responsibility for interacting with VCS systems."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da8aac254a19ac29e5e1",
    "number": 1572,
    "body": "This PR is a follow-up to PR #1566. It contains the implementation of the context V2 classes and run-flow. This includes :\r\n\r\n- Variable class: a class for implementing the dynamical features of a context variable\r\n- Template class: a class for implementing the dynamical features of a cookiecutter context (contains a list of **Variable** instances)\r\n- load_context(): An iterative method for prompting the variables to handle more complex behavior\r\n- Integration of the V2 run flow into the V1 framework in a non-interfering way.\r\n\r\n",
    "head_branch": "feature/context2-emptyshell",
    "is_a_fork": true,
    "comments": [
      "We're closing this PR as we are going to improve the workflow for reviewing #1566 "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da8bac254a19ac29e5e2",
    "number": 1571,
    "body": "This PR is a follow-up to PR #1566. It contains only the features of context V2 related to JSON Schema implementation. \r\nBecause the context V2 enables significantly more complexity in the cookiecutter.json schema, it becomes necessary to have a more robust and unified way of defining the structure of the cookiecutter.json file. This is why we want to use the python package for [JSON schema](https://json-schema.org/) to do so. This PR includes :\r\n\r\n- Definition of the V1.0 Schema (pass all schema)\r\n- Base definition of the V2.0 Schema:\r\n- Tools for inferring schema version and validating the structure of a  cookiecutter.json file",
    "head_branch": "feature/V2-jsonschema",
    "is_a_fork": true,
    "comments": [
      "replacing this PR with a cleaner one"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da8bac254a19ac29e5e3",
    "number": 1569,
    "body": "This PR makes `read_user_dict` compatible with click 8.x, and widens the version constraint to include the new release.\r\n\r\nCloses #1563 \r\n\r\nBased on @davidism's comment in https://github.com/cookiecutter/cookiecutter/issues/1558#issuecomment-852182383\r\n\r\n**Additional info**\r\n\r\nThe `read_user_dict` function uses a `\"default\"` sentinel instead of the actual default value. Being a JSON dict, the latter would often be hard to read.\r\n\r\nUnder click 8.x, the default value for `click.prompt` is passed to the `read_proc` callback. We use this callback to load JSON from the user input, and this would choke on an input like `\"default\"` (without quotes). Therefore, we change the callback to return the actual default value when it receives this input.\r\n\r\nUnder click 7.x (which remains our minimum version), the default value for `click.prompt` is returned as-is. Therefore, we continue to handle the case where `click.prompt` returns `\"default\"` instead of the actual default value. (In this last case, we explicitly check for click 7.x. This is only done for clarity, though. Under click 8.x, `click.prompt` would never return `\"default\"`, even if a user entered it as a valid JSON string. This is because our callback requires a dict, not a string.)\r\n\r\nThe PR also updates three unit tests in `test_read_user_dict`, which broke due to mocks being tied to implementation details. The commit messages have more detail on this.",
    "head_branch": "click-8.0",
    "is_a_fork": true,
    "comments": [
      "@cjolowicz can you please rebase this? Basically dependencies moved to setup.cfg. That is indeed a change that we really want in next release.",
      "@ssbarnea done :)"
    ],
    "commit_messages": [
      "Add support for click 8.x (#1569)\n\n* Make read_user_dict compatible with click 8.x\r\n\r\nThe `read_user_dict` function uses a \"default\" sentinel instead of the actual\r\ndefault value. Being a JSON dict, the latter would often be hard to type.\r\n\r\nUnder click 8.x, the default value for `click.prompt` is passed to the\r\n`read_proc` callback. We use this callback to load JSON from the user input, and\r\nthis would choke on an input like \"default\" (without quotes). Therefore, change\r\nthe callback to return the default value when it receives the \"default\"\r\nsentinel.\r\n\r\nUnder click 7.x (which is our minimum version), the default value for\r\n`click.prompt` is returned as-is. Therefore, continue to handle the case where\r\n`click.prompt` returns \"default\" instead of the actual default value, but only\r\nif we're actually running under click 7.x.\r\n\r\n(Checking for click 7.x is only done for clarity. Under click 8.x,\r\n`click.prompt` would never return \"default\", even if a user entered it as a\r\nvalid JSON string. This is because our callback requires a dict, not a string.)\r\n\r\n* test: Expect read_user_dict to call click.prompt with partial object\r\n\r\nPreviously, tests for `read_user_dict` expected `process_json` to be passed to\r\nclick.prompt directly. Instead, we now pass an instance of `functools.partial`,\r\nso adapt the mock to reflect that.\r\n\r\n* test: Avoid mocking `click.prompt` when testing defaults\r\n\r\nDo not mock `click.prompt` when testing that `read_user_dict` returns the proper\r\ndefault value (rather than the sentinel \"default\"). Mocking `click.prompt`\r\nprevents our callback from running, and under click >= 8.0 we process the\r\nsentinel in the callback. Instead, use `click.testing.CliRunner` to fake\r\nstandard input.\r\n\r\n* test: Adapt regression test for default handling\r\n\r\nExpect `json.loads` not to be called with the sentinel (\"default\"). Previously,\r\nthe test expected `process_json` not to be called, but under click >= 8.0 that\r\nis now where we handle the sentinel.\r\n\r\n* Update dependencies for click 8.x"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da8cac254a19ac29e5e4",
    "number": 1568,
    "body": "This should restore release-drafter for the 2.0.0 release\r\n\r\nBased on this comment on release-drafter: https://github.com/release-drafter/release-drafter/issues/656#issuecomment-806184887\r\n\r\nThis PR makes release-drafter considering only releases made on master branch.\r\nIf we want to support also hotfixes on stable branches we should make a release-drafter config for each `stable/x` branch",
    "head_branch": "fix_release_drafter",
    "is_a_fork": true,
    "comments": [
      "> IMHO that PR makes no sense as we already run release drafter only on master, see https://github.com/cookiecutter/cookiecutter/blob/master/.github/workflows/release-drafter.yml#L6\r\n> \r\n> Keep in mind that release drafter must run on any push made to master branch because\r\n> it does update the draft release notes (something visible only to project members).\r\n> \r\n> Did I miss something?\r\n\r\nYes if you take a look art the current release draft, after you did the patch release 1.7.3, we lost all old PR changes.\r\nThis PR configure release-drafter to look only at releases made on master branch so we should get back all PR change logs from 1.7.2 to master HEAD"
    ],
    "commit_messages": [
      "Merge pull request #1568 from SharpEdgeMarshall/fix_release_drafter\n\nMake release-drafter diff only between master releases"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da8dac254a19ac29e5e5",
    "number": 1566,
    "body": "This is a continuation of eruber's PR #1008 to implement a new cookiecutter context format with the following features:\r\n* Use of [JSON Schema](https://json-schema.org/) to define the requirements of cookiecutter.json (also works with cookiecutter.yml)\r\n* New Variables structure with:\r\n  * Different types: string, boolean, yes_no, int, float, uuid, json\r\n  * Regex validation: checks if a prompt entry matches a user defined regex expression and asks again on failure\r\n  * Skipping options: if a certain value has been entered, skip to the next or to a specific question\r\n  * Variable description: extended description in verbose mode\r\n  * Hidden input prompt: to enter sensitive information like access tokens\r\n* Versioning for the schema to facilitate future changes\r\n* Requirements in cookiecutter.json (python version, cookiecutter version)\r\nThis implementation is compatible with the old cookiecutter context format (we call it schema 1.0). \r\nIt contains a single breaking change: If we have a field named \"version\" in cookiecutter.json, it will be interpreted as the schema version if it corresponds to an existing schema version number. Because schema 1.0 had no pre-defined structure, it is impossible to avoid this kind of collision, but the issue should be quite rare in practice.\r\n<details>\r\n  <summary>Sample cookiecutter.yml</summary>\r\n  \r\n  ```yaml\r\n  version: '2.0'\r\n  \r\n  requires:\r\n    cookiecutter: '2.0.0'\r\n    python: '>=3.8'\r\n  \r\n  template:\r\n    name: awesome-template\r\n    version: '0.1'\r\n    description: this is the best cookiecutter template ever, you should totally use it\r\n    authors:\r\n      - Jane Doe <jane@example.org>\r\n      - John Doe <jane@example.org>\r\n    license: Apache 2.0\r\n    keywords:\r\n      - awesome\r\n      - python\r\n    url: https://github.com/...\r\n    variables:\r\n      - name: full_name\r\n        default: Jane Doe\r\n        prompt: What's your name?\r\n        description: Please enter your full name. It will be displayed in the README file\r\n          and used for the PyPI package definition.\r\n        type: string\r\n      - name: email\r\n        default: jane@example.org\r\n        prompt: What's your email?\r\n        description: Please enter an email address for the meta information in setup.py.\r\n        type: string\r\n      - name: project_name\r\n        default: my-project\r\n        prompt: What's the project name?\r\n        description: Please enter a name for your project.\r\n        type: string\r\n      - name: module_name\r\n        default: \"{{ cookiecutter.project_name | slugify | replace('-','_') }}\"\r\n        prompt: Please enter a name for your base python module\r\n        type: string\r\n        validation: \"^[_a-zA-Z][_a-zA-Z0-9]+$\"\r\n      - name: license\r\n        default: MIT\r\n        prompt: Please choose a license!\r\n        description: Cookiecutter will add an according LICENSE file for you and set the\r\n          according classifier in setup.py.\r\n        type: string\r\n        choices:\r\n          - MIT\r\n          - BSD-3\r\n          - GNU GPL v3.0\r\n          - Apache Software License 2.0\r\n          - Mozilla Public License 2.0\r\n  ```\r\n</details>",
    "head_branch": "feature/context-2.0",
    "is_a_fork": true,
    "comments": [
      "Hey @louisdegaste @klamann 👋 !\r\n\r\nThanks for the huge work!\r\n\r\nThis pr contains many side effects, and the review is quite impractical; what do you think to split into small feature branches?\r\n\r\nThanks 🙏 ",
      "Hi @simobasso, glad to hear that you're interested in accepting this change. This PR has a long history and I know it's huge, which makes it a pain to review, but I find it difficult to split it up in meaningful ways. We could extract certain parts like the json schema definition, but they wouldn't interact with any other parts of cookiecutter. Everything else we add would be built on top of another PR, so it wouldn't be possible to review them independently.\r\n\r\nDo you have a suggestion how we could divide and conquer this thing?",
      "Hello @simobasso :) That's great to see that you're interested in the PR ! as @klamann said,  the implementation is quite interdependent which will make any division break the code. Yet we could go for the following split:\r\n\r\n- **JSON schema:** all features used to validate and version the cookicutter.json schema\r\n- **Void Context V2:** The implementation of the classes and runflow of the context V2 but without fancy features (other than variables)\r\n- **V2 features:** the V2 context populated with features enabled by the new context ( e.g. Regex validation, skip if, etc.)\r\n\r\nThat would spread a bit the workload although the second branch will probably remain the bigger chunk.\r\n\r\nWhat du you think about it ?\r\n\r\n",
      "I created the PRs #1572  for the JSON schema and #1571 for the classes and renamed this one to split the implementation in 3 PRs which should be (hopefully) even enough :)\r\n",
      "Hi there, any updates on when this PR will be merged? ",
      "I'm closing this PR due to its size. It will not be possible to effectively review it."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da8eac254a19ac29e5e6",
    "number": 1564,
    "body": "Closes: https://github.com/cookiecutter/cookiecutter/issues/517",
    "head_branch": "isolated_test_environment",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1564 from simobasso/isolated_test_environment\n\nensure filesystem isolation during tests execution"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da8fac254a19ac29e5e7",
    "number": 1562,
    "body": "Closes #1558 \r\n\r\nWhile we work to support `click>=8.0.0`:\r\n\r\n- lock to `<8.0.0`\r\n- add regression test",
    "head_branch": "fix_click_major",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1562 from SharpEdgeMarshall/fix_click_major\n\nForce click<8.0.0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da8fac254a19ac29e5e8",
    "number": 1561,
    "body": "",
    "head_branch": "normalize_output_fixtures",
    "is_a_fork": true,
    "comments": [
      "superseded by https://github.com/cookiecutter/cookiecutter/pull/1564"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da90ac254a19ac29e5e9",
    "number": 1560,
    "body": "Closes: https://github.com/cookiecutter/cookiecutter/issues/1523",
    "head_branch": "add_safety_ci_step",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1560 from simobasso/add_safety_ci_step\n\nadd safety ci step"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da91ac254a19ac29e5ea",
    "number": 1559,
    "body": "ref: https://github.com/cookiecutter/cookiecutter/issues/1523",
    "head_branch": "add_bandit_as_pre_commit_hook",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1559 from simobasso/add_bandit_as_pre_commit_hook\n\npre-commit: add bandit hook"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da92ac254a19ac29e5eb",
    "number": 1553,
    "body": "",
    "head_branch": "stable/1.7.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Backport pip-publish workflow (#1553)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da92ac254a19ac29e5ec",
    "number": 1552,
    "body": "Release 1.7.3 hotfix in order to sort recent dependency conflicts.\r\n\r\nOnce merged, clone it and run `make release`.",
    "head_branch": "stable/1.7.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Release 1.7.3 (#1552)\n\nRelease 1.7.3 hotfix in order to sort recent dependency conflicts."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621da93ac254a19ac29e5ed",
    "number": 1551,
    "body": "",
    "head_branch": "stable/1.7.x-wip",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Activate workflows on stable branches (#1551)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da94ac254a19ac29e5ee",
    "number": 1550,
    "body": "This backports changes already made to master via: #1549 and #1548",
    "head_branch": "stable/1.7.x",
    "is_a_fork": true,
    "comments": [
      "We should backport CI updates too",
      "> We should backport CI updates too\r\n\r\nOhh 💩...., that may require an amount of work that nobody will be able to do. The hidden cost of not making any release in more than an year.\r\n\r\n@simobasso What can we do to unblock this? The jinja2 and MarkupSafe new releases are causing lots of failures for cookiecutter users. I already found CI/CD on two projects I use and another user made a comment on my fix aking about the backport.\r\n\r\nI am wondering if it would not make sense to perform this hotfix manually, including releasing it. It should buy us enough time to make the 2.0.0 release as I doubt we will see many similar problems very soon. It work nothing that these were the only dependencies that were pinned down.",
      "We could try to backport CI updates, it should not be a big deal.",
      "@SharpEdgeMarshall Apparently GHA refuses to start running any workflows on this branch, even after I updated the conditions. It is supposed to run old jobs names like linting, ubuntu-py27,... but it triggers nothing, the only one listed below are those that I marked as required in branch rules but if you look at actions tab, you will not find anything triggered.",
      "After manually adding the branch config I was able to trigger the workflow but only on push (after the merge) see https://github.com/cookiecutter/cookiecutter/actions/runs/841530404 \r\n\r\nThat PR made from my fork towards this the stable branch still does not trigger a thing. I wonder what else I am missing.",
      "Found! Apparently putting `pull_request: {}` works. Somehow branches: * bit was preventing it from triggering the workflows... another badly documented area on the workflows. It seems that GHA daily life is to look for a repository where it works as intended and copy/paste the changes.",
      "Actually is documented [here](https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#patterns-to-match-branches-and-tags):\r\n>\r\n'*' | Matches all branch and tag names that don't contain a slash (/). The * character is a special character in YAML. When you start a pattern with *, you must use quotes. | mainreleases\r\n-- | -- | --\r\n'**' | Matches all branch and tag names. This is the default behavior when you don't use a branches or tags filter. | all/the/branchesevery/tag\r\n\r\n",
      "@SharpEdgeMarshall Do not forget to approve the PR, so I can merge it w/o using admin rights."
    ],
    "commit_messages": [
      "Fix dependency conflicts (#1550)\n\nThis backports changes already made to master via: #1549 and #1548"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da95ac254a19ac29e5ef",
    "number": 1549,
    "body": "This sorts potential dependency conflicts with jinja2 which is the only place where markupsafe is used (since version 2.7)",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Thanks @ssbarnea 🙏 !"
    ],
    "commit_messages": [
      "Merge pull request #1549 from ssbarnea/master\n\nRemove direct dependency on markupsafe"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da96ac254a19ac29e5f0",
    "number": 1548,
    "body": "Jinja 3.0.0 has just been released \r\nhttps://jinja.palletsprojects.com/en/3.0.x/changes/#version-3-0-1\r\n\r\nWe depend on both cookiecutter and Jinja2, but cookiecutter is preventing us from updating Jinja2.\r\n(see https://github.com/inmanta/inmanta-core/pull/2921)\r\n\r\nI understand if you consider it too soon to merge this in.",
    "head_branch": "allow-jinja-3",
    "is_a_fork": true,
    "comments": [
      "@wouterdb Please check https://github.com/cookiecutter/cookiecutter/pull/1549"
    ],
    "commit_messages": [
      "allow jinja 3.0.0 (#1548)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da96ac254a19ac29e5f1",
    "number": 1547,
    "body": "Partially solves #1403\r\n",
    "head_branch": "remove_ospath",
    "is_a_fork": true,
    "comments": [
      "Actually I would like to get this one in. But the conflict-merge seems to break tests. Probably I did something wrong. I need to look into it later, or anyone else to step in? ",
      "Merged fresh master with updated CI/CD",
      "Hmm. Will look on this tomorrow, on windows and locally. Please do not merge before. \r\n",
      "@jensens I really do not like idea to merge it as is. So please do not merge this.\r\n\r\nSuch big changes I want at least in 2 merge requests. In 1 codebase only. (Tests should be stable, as we do not change app behavior).\r\n\r\nIn second - tests only.",
      "> Such big changes I want at least in 2 merge requests. In 1 codebase only. (Tests should be stable, as we do not change app behavior).\r\n> \r\n> In second - tests only.\r\n\r\nIndeed, this would be favorable.\r\n",
      "I'm closing this PR due to its age."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da97ac254a19ac29e5f2",
    "number": 1546,
    "body": "ATM we broke lint running on CI, this PR fixes it.",
    "head_branch": "fix_ci_linting",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1546 from SharpEdgeMarshall/fix_ci_linting\n\nFix linting in CI"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da98ac254a19ac29e5f3",
    "number": 1545,
    "body": "Partially solves #1405 ",
    "head_branch": "remove_tmpdir",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Replace tmpdir in favour of tmp_path (#1545)\n\n* Remove tmpdir\r\n\r\n* Deduplicate fixtures\r\n\r\n* Fix lint"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da99ac254a19ac29e5f4",
    "number": 1544,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Thanks!"
    ],
    "commit_messages": [
      "Fix author name (#1544)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da9aac254a19ac29e5f5",
    "number": 1542,
    "body": "Closes: #1541",
    "head_branch": "feature/enable_coverage_branches",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Enable branch coverage (#1542)\n\n* Add test cases for untested branches\r\n\r\n* Add branches coverage\r\n\r\nBranch coverage helps to find out untested branches.\r\n\r\nCloses: https://github.com/cookiecutter/cookiecutter/issues/1541"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da9aac254a19ac29e5f6",
    "number": 1540,
    "body": "This PR adds the feature described in [1201](https://github.com/cookiecutter/cookiecutter/issues/1201) and would help solve other issues like [1082](https://github.com/cookiecutter/cookiecutter/issues/1082).\r\n\r\nI added a refresh option to the CLI so that there is a way to avoid the following prompt (and effectively just say yes):\r\n\r\n```\r\nYou've downloaded ... before. Is it okay to delete and re-download it? [yes]:\r\n```\r\n\r\nI'm happy to add tests and update more docstrings, but I wanted to get an OK on the feature prior to making further changes.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Hello admins,\r\n\r\nCan you please allow the pipeline to run on this PR?\r\n\r\nAlso, please let me know if I should fix the CodeClimate errors. There are errors for lines of code that I did not touch and the suggestions they give for the code that I did change seem like they would do more harm than good. That being said, I'm happy to take another look if desired.",
      "@simobasso or other members,\r\n\r\nDo you want me to fix the CodeClimate stuff? It seems like it would require some refactoring (for little, or negative, gain IMO). \r\n\r\nI'm willing to try refactoring but given the current simplicity of this PR, and that I don't necessarily agree with CodeClimate, I wanted to get a second opinion.",
      "Hi @justinessert, thanks for taking the time to work on this! Unfortunately, I'm going to close this pull request for the reasons explained in https://github.com/cookiecutter/cookiecutter/issues/1201#issuecomment-830597644. Sorry for the delay, we're trying to dispose of the pile of accumulated issues/pull requests, the situation should improve once finished :see_no_evil: \r\n\r\n\r\nRegarding CodeClimate it's nothing wrong with your code, the failed check you see is an issue we are already discussing in https://github.com/cookiecutter/cookiecutter/issues/1523#issuecomment-827721569."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da9bac254a19ac29e5f7",
    "number": 1539,
    "body": "",
    "head_branch": "feature/context-2.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da9cac254a19ac29e5f8",
    "number": 1537,
    "body": "The previous link was broken since the file was removed from github\r\ngists. Its content was recovered with Internet Archive's Wayback Machine\r\nand adapted to our specific context (eg. references to specific\r\nplatforms were removed since we already have tests for that on our CI).\r\n\r\nCloses #1528",
    "head_branch": "fix_pull_requests_checklist",
    "is_a_fork": true,
    "comments": [
      "@glumia, thanks for this pull request!\r\n\r\nAs I said in https://github.com/cookiecutter/cookiecutter/pull/1529#discussion_r618709324, we should await the permission of @audreyfeldroy to use her gist in this project.",
      "@glumia Thank you for contribution. Unfortunately I do not think it can be merged as it is. I described problem in review comment.",
      "> @glumia, thanks for this pull request!\r\n> \r\n> As I said in [#1529 (comment)](https://github.com/cookiecutter/cookiecutter/pull/1529#discussion_r618709324), we should await the permission of @audreyfeldroy to use her gist in this project.\r\n\r\nOf course!\r\n\r\n> This should not be merged in the way ...\r\n\r\nHmm okay, I was also not very sure about adding another file to project's root directory. I'll try to fit the contents of `PR_CHECKLIST.md` into `CONTRIBUTING.md`, hoping that it doesn't become too big.",
      "@glumia, thanks for the update 🙏 ."
    ],
    "commit_messages": [
      "Merge pull request #1537 from glumia/fix_pull_requests_checklist\n\nFix pull requests checklist reference"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da9dac254a19ac29e5f9",
    "number": 1535,
    "body": "Closes #1534\r\n\r\nThose contributors were found using Github's `/repos/{owner}/{repo}/contributors` API service. \r\n\r\nThey were checked one by one to see if their contribution was worthy of mention in the authors file: template links and minor* fixes (check https://github.com/cookiecutter/cookiecutter/pull/1243#issuecomment-545643035) were not considered.\r\n\r\n---\r\n\r\n\\*Minor fixes <==> The kind of pull requests you see on Github when it's time of hacktoberfest",
    "head_branch": "add_missing_contributors",
    "is_a_fork": true,
    "comments": [
      "lol, @glumia I usually don't mind adding my name in the authors.md file.\r\n\r\nBut thanks 👏 ! I think is really important to say \"thank you\" in some way in a project like this.",
      "Yeah, me too, that's exactly why opened the issue and worked on it in the first place. Being grateful to people who contribute to cookiecutter in their free time is the least we can do!"
    ],
    "commit_messages": [
      "Merge pull request #1535 from glumia/add_missing_contributors\n\nAdd missing contributors"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da9eac254a19ac29e5fa",
    "number": 1532,
    "body": "audreyr has moved to audreyfeldroy\r\ncheck it out here please: https://github.com/audreyr",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "~lgtm!~ <-- Update: @HosamAlmoghraby while you're at it, would you mind updating also pydanny's name?",
      "I have updated Daniel Feldroy's name in the AUTHORS page, and also I went through the README page and updated Audrey's github link.",
      "Hello,\n\nI have been looking for a solution to automate the process of adding new contributors to the AUTHORS page and keeping that page up to date using some automation tools. I came to a tool called **[allcontributors](https://allcontributors.org/)**\n\nThe way  how the tool works:\n1. Install the Bot to the project\n\n2. Start a pull request or comment\n3. Mention the @all-contributors Bot\n4. Add a contributor’s username and contribution type\n\n5. Post and our ReadMe (Authors in our case) updates automatically!\n\nHow can I know if there is an interest to discuss that?\n\nBest Regards\nHosam",
      "CC: @audreyfeldroy @pydanny\n\nThanks"
    ],
    "commit_messages": [
      "Merge pull request #1532 from HosamAlmoghraby/master\n\nupdate AUTHOR lead"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da9eac254a19ac29e5fb",
    "number": 1531,
    "body": "we want to be able to validate the new cookiecutter 2.0 context format, so here's a json schema for it.",
    "head_branch": "feature/json-schema",
    "is_a_fork": true,
    "comments": [
      "sorry, I intended to open this PR against our own fork of the project. plz ignore"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621da9fac254a19ac29e5fc",
    "number": 1529,
    "body": "Relates to #1528\r\n\r\n~I don't really like to add another file (`PR_CHECKLIST.md`) to project's root directory but there's no other way to make the links in the `CONTRIBUTING.md` file work both on Github and in the compiled docs.~ (checklist changes moved to a separate PR)",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Thanks @glumia I'm going to merge this one 🎉 !"
    ],
    "commit_messages": [
      "Merge pull request #1529 from glumia/master\n\nUpdate CONTRIBUTING.md"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621daa0ac254a19ac29e5fd",
    "number": 1526,
    "body": "Closes #1524 \r\n\r\nThis PR:\r\n\r\n- Removes fix that skips some tests, used for old pypy3 version on Travis\r\n- Adds test for `force_delete` utils function\r\n- Adds unit test for OSError not thrown on windows\r\n- Adds fail-under 100% coverage",
    "head_branch": "housekeeping_tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1526 from SharpEdgeMarshall/housekeeping_tests\n\nCoverage 100%"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621daa1ac254a19ac29e5fe",
    "number": 1525,
    "body": "",
    "head_branch": "fix_github_actions_coverage_remove_travis",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621daa2ac254a19ac29e5ff",
    "number": 1521,
    "body": "Closes #1520 \r\nCloses #1522",
    "head_branch": "fix_github_actions_coverage",
    "is_a_fork": true,
    "comments": [
      "@SharpEdgeMarshall sadly Travis blocks the pr merge, and I cannot disable it. We should wait for one of the admins that can delete the integration.\r\n\r\nThanks for your patience",
      "closes #1522"
    ],
    "commit_messages": [
      "Merge pull request #1521 from SharpEdgeMarshall/fix_github_actions_coverage\n\nRun coverage with matrix and remove travis"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621daa2ac254a19ac29e600",
    "number": 1519,
    "body": "- update the LICENSE from 2017 to 2021\r\n- add back \"the copyright holder\" in the license like https://opensource.org/licenses/BSD-3-Clause\r\n\r\nHey @audreyfeldroy 👋 , do you endorse this update?\r\n\r\ncloses #1511\r\n\r\nThanks",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1519 from simobasso/patch-1\n\nUpdate LICENSE"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621daa3ac254a19ac29e601",
    "number": 1516,
    "body": "Closes: https://github.com/cookiecutter/cookiecutter/issues/1514\r\nCloses: https://github.com/cookiecutter/cookiecutter/issues/1149",
    "head_branch": "bugfix/set_default_on_default_context",
    "is_a_fork": true,
    "comments": [
      "EDIT: Fixed #1514 but not #1513 (the latter error coming from `poyo`).\r\n\r\nFor testing, you can clone [`cookiecutter-value-error`](https://github.com/acturner/cookiecutter-value-error) and then run:\r\n```shell\r\ncookiecutter cookiecutter-value-error --config-file=cookiecutter-value-error/init.yaml --no-input\r\n```",
      "@acturner thanks, just updated the description and also, I've found #1149 that seems the same issue.",
      "lgtm! \r\n\r\nThe fact you had to update both `tests/test_get_config.py::test_get_config` and `tests/test_get_user_config.py::custom_config` after editing `tests/test-config/valid-config.yaml` is a clear sign of code duplication, we should have a single fixture as source of truth of file's content.  @simobasso do you think it would be worth to open a refactor issue for that? ",
      "Sure @glumia! Feel free to open an issue on this!"
    ],
    "commit_messages": [
      "Merge pull request #1516 from simobasso/bugfix/set_default_on_default_context\n\nconfig: set default on missing default_context key"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621daa4ac254a19ac29e602",
    "number": 1515,
    "body": "I understand it may not be desirable to add `pyyaml` as a dependency, but these few changes do address both Issue #1513 and Issue #1514.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Hey, @acturner, please check https://github.com/cookiecutter/cookiecutter/pull/1516.\r\n\r\nSadly `pyyaml` can't be introduced without dropping windows users, please have a look at https://github.com/cookiecutter/cookiecutter/pull/1498#issuecomment-771973584",
      "@simobasso - Understood, unfortunately #1516 doesn't seem to fix these issues.\r\nEDIT: #1516 fixes #1514 but not #1514",
      "@acturner, thanks for reaching out. I just tried with your fork, and it works. Did you change anything?",
      "@simobasso Sorry I was mistaken, #1516 fixes #1514 - I had a similar solution, which doesn't require calling `merge_configs` when the key is missing (you can see in the diff). As far as fixing #1513, I just replaced `poyo` with `pyyaml`, which I know you said we can't use. It appears to be a problem with `poyo` ...",
      "> Hey, @acturner, please check #1516.\r\n> \r\n> Sadly `pyyaml` can't be introduced without dropping windows users, please have a look at [#1498 (comment)](https://github.com/cookiecutter/cookiecutter/pull/1498#issuecomment-771973584)\r\n\r\nHmm, AFAIK this should not be the case anymore. These yaml libraries now ship with wheels for windows so it should be possible to switch over. It is worth exploring moving to a better supported yaml library IMHO. ",
      "@glumia I believe I made all of your changes - let me know if anything doesn't look right. Cheers!",
      "Updated title to reflect that this PR no longer fixes Issue #1514 (but PR #1516 does).",
      "Hey @acturner, thanks for this pr; I just enabled the ci.\r\n\r\nCould you please check windows failures? Also, have you seen https://github.com/cookiecutter/cookiecutter/pull/1489 opened by @dHannasch?",
      "#1489 does seem like a similar implementation. It also fixes the test issues related to Windows builds.",
      "@simobasso @samj1912 I will check out #1489 soon and see what's going on with the Windows builds - also should probably add some tests for the bug this fixes (in case anyone makes a PR to use `poyo` again or something that breaks similarly)",
      "I do support this change but I fixing windows builds is required before being able to merge it.",
      "Merged https://github.com/cookiecutter/cookiecutter/pull/1489 which did pass the tests."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621daa5ac254a19ac29e603",
    "number": 1508,
    "body": "I have added SVN support for cookiecutter.\r\n\r\n```\r\ncookiecutter svn+https://mysvnrepo.com/path\r\n```\r\n\r\nAlso refactored the VCS code to a object-oriented model, which should allow the addition of other VCS software if needed.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Hey, @Theta-Dev, thanks for this!\r\n\r\nI just wrote down a small doubt on the regex, and it seems that `black` fails on `cookiecutter/cookiecutter/vcs.py`.",
      "Hi @simobasso,\r\n\r\ni'm glad you like my new feature.\r\n\r\nBut I'm not sure what you think the expected behavior when running `cookiecutter svn://private.com/svnrepo` should be.\r\n\r\nsvn:// is not a valid protocol like git://\r\nYou can do `git clone git://github.com/audreyfeldroy/cookiecutter-pypackage`\r\nbut you cant do `svn export svn://private.com/svnrepo`\r\n\r\nThe correct command for copying a local SVN repo is `svn export file:///home/thetadev/svnrepo` and for a remote one `svn export https://private.com/svnrepo`.\r\n\r\nThus the cookiecutter commands have to be `cookiecutter svn+file:///home/thetadev/svnrepo` and `cookiecutter svn+https://private.com/svnrepo`\r\n\r\nhg isn't included in the protocol regex either. Probably for the same reason: it would result in an invalid `hg clone hg://private.com/hgrepo` command. I've never used hg though, so I can be 100% sure in that regard\r\n\r\nI'll push a new commit where I fix the Black formatting issue and add `git://private.com/gitrepo` to the repo url test case.\r\nBut I dont think there is anything wrong with the protocol regex.",
      "YES. Finally the linter passes. I think I made the mistake to run black itself instead of the `tox -e lint` command before.",
      "Just a quick note, hth :)\r\n\r\nHere's the official list of supported URLs for Subversion repositories: http://svnbook.red-bean.com/en/1.7/svn.basic.in-action.html\r\n\r\nTwo points to note:\r\n\r\n- `svn://` is the URL to a repository served via `svnserve`\r\n- `svn+ssh://` is the URL for `svnserve` over SSH; note that the `svn+` must *not* be stripped off the URL\r\n",
      "Thank you, @cjolowicz.\r\nI didnt know about svnserve, because I've only used svn with local repos and my company's repo, which is available via https.\r\n\r\nDoing some research before coding probably isnt a bad idea.\r\n\r\n**Expected behavior:**\r\ncookiecutter svn+https:// => svn export https://\r\ncookiecutter svn+file:// => svn export file://\r\ncookiecutter svn:// => svn export svn://\r\ncookiecutter svn+ssh:// => svn export svn+ssh://\r\n\r\nGuess I'll have to do some more changes.",
      "@cjolowicz, thanks for your notes!\r\n\r\n@Theta-Dev looking forward to reviewing your pr!",
      "Okay, I think I'm done.\r\nCookiecutter SVN support now works with all 3 protocols. If you use SSH, you have to include your username followed by an @ and get prompted for your password.\r\n\r\n```\r\n$ cookiecutter svn+https://svn.code.sf.net/p/cookiecutter-pypackage/code/trunk/cookiecutter-pypackage\r\n$ cookiecutter svn://svn.code.sf.net/p/cookiecutter-pypackage/code/trunk/cookiecutter-pypackage\r\n$ cookiecutter svn+ssh://username@svn.code.sf.net/p/cookiecutter-pypackage/code/trunk/cookiecutter-pypackage\r\n```\r\n\r\nTo test everything, I created a public SVN repo on SourceForge and put audreyfeldroy's pypackage cookiecutter there.\r\nhttps://sourceforge.net/p/cookiecutter-pypackage/code/HEAD/tree/trunk/\r\n\r\nYou can see everything in action here:\r\nhttps://asciinema.org/a/0OFMg7IFmLlj5vIdMUBku3CEB\r\n",
      "@Theta-Dev, thank you, I just reviewed your pull request, and it seemed all good to me.\r\n\r\nI don't have the merge permission, and there is the `codecov/project` check failed, but IMHO the culprit it's not your pr.",
      "I applied the requested changes.\r\n\r\nIn case of an unknown VCS error, Cookiecutter now prints the raw output while still throwing the subprocess error.\r\nThat should be more user-friendly while still backwards-compatible.\r\n\r\nI got rid of the giant regex in the repository.py, too.\r\n\r\nIt got replaced with the VCS-specific ``VCS.match_repo_url`` function. It first checks if the URL and protocol is valid. Then it tries to match the ``git+``, ``svn+``, etc. prefixes, protocol and repo path suffix to the VCS specifications.\r\nThis can result in an explicit match -> the respective VCS gets chosen immediately.\r\n\r\nOtherwise it tries to find an implicit match (VCS identifier like `git` or `bitbucket` present in repository path). An implicit match becomes the second choice if no explicit match was found.",
      "Added the `breaking-change` label because of changes in the interface of `cookiecutter.vcs` module. \r\n\r\n@Theta-Dev do you think you could somehow refactor the code in such a way to introduce less breaking changes? (a quick way to see if you are introducing them is to run the original test suite on the new code)\r\n\r\nCurrently the major change is the return values of `identify_repo` (the other tests are failing because of how the code was rearranged and affected the monkeypatching, that's not an issue).",
      "@Theta-Dev Hi and thank you for contribution. \r\nI like object oriented approach in general, but unfortunately I had no time in 2021 to review this and several releases already was made. \r\nCan you rebase to current version and is you interested in continuing this feature?",
      "I'm closing this PR due to its age."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621daa6ac254a19ac29e604",
    "number": 1505,
    "body": "I was trying to run the below command and getting a git error:\r\n```\r\ncookiecutter(template='https://github.com/drivendata/cookiecutter-data-science')\r\n```\r\n\r\n\r\nThe current behavior only displays the return code of the git process:\r\n```\r\nsubprocess.CalledProcessError: Command '['git', 'clone', 'https://github.com/drivendata/cookiecutter-data-science']' returned non-zero exit status 128.\r\n```\r\nI think it would be helpful to print the actual git output:\r\n```\r\nCloning into 'cookiecutter-data-science'...\r\nfatal: unable to access 'https://github.com/drivendata/cookiecutter-data-science/': SSL certificate problem: unable to get local issuer certificate\r\n\r\n```\r\n\r\nFor what it's worth, I was then able to resolve the error (on windows) by setting the below:\r\n```\r\ngit config --global http.sslbackend schannel\r\n```\r\n\r\nMore info:  https://stackoverflow.com/questions/23885449/unable-to-resolve-unable-to-get-local-issuer-certificate-using-git-on-windows",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Hey @logworthy 👋 ,\r\n\r\nWe just restored the CI 🎉  . Could you please rebase your pr so we can proceed to merge it?\r\n\r\nThanks"
    ],
    "commit_messages": [
      "Log the error message when git clone fails, not just the return code (#1505)\n\nCo-authored-by: Lyndon D'Arcy <LyndonDArcy@fico.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621daa6ac254a19ac29e605",
    "number": 1504,
    "body": "fixes #1502 ",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Thanks @juhuebner 🌮!"
    ],
    "commit_messages": [
      "fixes prompting private rendered dicts (#1504)\n\n* fixes private dir handling\r\n\r\n* added patch branch to CI coverage.yml\r\n\r\n* changed codecov action\r\n\r\n* get coverage artifact\r\n\r\n* get artifact 2nd try\r\n\r\n* 3rd try to get artifacts\r\n\r\n* 4th try\r\n\r\n* 5th\r\n\r\n* Squashed commit of the following:\r\n\r\ncommit f0ac6a093319ad33f818fb1c4329d72a24f61bd7\r\nAuthor: Jens Hübner <jhuebner@nano.uni-hannover.de>\r\nDate:   Mon Feb 8 23:33:43 2021 +0100\r\n\r\n    5th\r\n\r\ncommit 2af3902a6d9774a07e21f1d00c1cb1c22a8d7d67\r\nAuthor: Jens Hübner <jhuebner@nano.uni-hannover.de>\r\nDate:   Mon Feb 8 23:20:18 2021 +0100\r\n\r\n    4th try\r\n\r\ncommit 903f6741e800f3ba155b73e009f57048bc498b8c\r\nAuthor: Jens Hübner <jhuebner@nano.uni-hannover.de>\r\nDate:   Mon Feb 8 23:07:46 2021 +0100\r\n\r\n    3rd try to get artifacts\r\n\r\ncommit c8a517888bb494227761ef95c24f7e6bf74934a4\r\nAuthor: Jens Hübner <jhuebner@nano.uni-hannover.de>\r\nDate:   Mon Feb 8 22:46:45 2021 +0100\r\n\r\n    get artifact 2nd try\r\n\r\ncommit 287c8ebe478e9b4c15a773b94018cb13729df81c\r\nAuthor: Jens Hübner <jhuebner@nano.uni-hannover.de>\r\nDate:   Mon Feb 8 22:32:58 2021 +0100\r\n\r\n    get coverage artifact\r\n\r\ncommit 6b11f6abdc97126db11fe45cc7702449be45c3be\r\nAuthor: Jens Hübner <jhuebner@nano.uni-hannover.de>\r\nDate:   Mon Feb 8 22:18:24 2021 +0100\r\n\r\n    changed codecov action\r\n\r\n* Squashed commit of the following:\r\n\r\ncommit 661c50b156b5db856f845391104d08340f4d6be1\r\nAuthor: Jens Hübner <jhuebner@nano.uni-hannover.de>\r\nDate:   Tue Feb 9 19:00:27 2021 +0100\r\n\r\n    modified coverage for code which is unreachable s.a. https://bugs.python.org/issue39340\r\n\r\ncommit f9cb8e7a1df21d029e2da17a9742f89d9bea0170\r\nAuthor: Jens Hübner <jhuebner@nano.uni-hannover.de>\r\nDate:   Tue Feb 9 10:00:16 2021 +0100\r\n\r\n    added posargs to tox.ini\r\n\r\n* applied black\r\n\r\n* cleanup\r\n\r\n* removed dev leftovers\r\n\r\n* clean-up docstring"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621daa7ac254a19ac29e606",
    "number": 1498,
    "body": "https://github.com/cookiecutter/cookiecutter/pull/1489 used pyyaml because that's what https://github.com/cookiecutter/cookiecutter/pull/1471 and now https://github.com/cookiecutter/cookiecutter/pull/1497 used, but it would probably be better to use ruyaml, which supports YAML 1.2. (If @ssbarnea agrees.)\r\n\r\n(pyyaml has expressed interest in YAML 1.2 and hope springs eternal that eventually pyyaml and ruyaml will merge, but for now ruyaml seems like the way to go, and in any case the difference between pyyaml and ruyaml is less than half a dozen lines so we could switch back if pyyaml updates.)",
    "head_branch": "use-ruyaml-for-yaml-1.2",
    "is_a_fork": true,
    "comments": [
      "The challenge with YAML parsers historically has been supporting them on Windows. While we personally may not use Windows, a significant portion of the scientific community does use Windows. And they rely on Cookiecutter or Cookiecutter powered tools.\r\n\r\nThat's why poyo, a pure python parser was created. To support those users who had trouble with C binaries. Before we used it we were being knocked over with the volume of YAML installation help requests from Windows users, including a lot of professional scientists.\r\n\r\nIf a YAML parser has an absolutely garauntee to work on all supported platforms,  then switch it over. Otherwise it shouldn't be used.",
      "> The challenge with YAML parsers historically has been supporting them on Windows. While we personally may not use Windows, a significant portion of the scientific community does user Windows. And they rely on Cookiecutter or Cookiecutter powered tools.\r\n> \r\n> That's why poyo, a pure python parser was created. To support those users who had trouble with C binaries. Before we used it we were being knocked over with the volume of YAML installation help requests from Windows users, including a lot of professional scientists.\r\n> \r\n> If a YAML parser has an absolutely garauntee to work on all supported platforms, then switch it over. Otherwise it shouldn't be used.\r\n\r\nMany things changed since we had the compilation issues. Pyyaml already has pure-python implementation and the clib on si optional. They also started to ship pre-compiled wheels for many platforms: https://pypi.org/project/PyYAML/5.4.1/#files -- in fact I will not be surprised to see aarch and ppc soon",
      "> If a YAML parser has an absolutely garauntee to work on all supported platforms, then switch it over.\r\n\r\npyyaml, ruamel.yaml and ruyaml all have wheels now, and observationally `pip install` Just Works on Windows, for all three.\r\n\r\nAs far as pyyaml versus ruyaml, I've just done some syntax shenanigans so we can easily switch back and forth.\r\n\r\nPreserving comments in the YAML would definitely be useful, but I think the main thing is supporting YAML 1.2. YAML 1.1 has some quirks, and as long as YAML 1.2 is supported, additional wrapper tools can do any comment-handling off to the side by reading and writing YAML 1.2.\r\n\r\nPyYAML intends to support YAML 1.2, but doesn't yet.\r\n\r\n> I created ruyaml fork about an year ago because ruamel.yaml had some leadership issues.\r\n> Still, the future of the fork in not very solid as it requires more active contributors.\r\n\r\n@ssbarnea Actually, since you bring it up, I wonder if I could probe your ideas of where ruyaml is going long-term. I had the impression that the main reason you forked ruamel.yaml into the new ruyaml was because, at the time, PyYAML was very much in keep-alive mode and was not interested in major changes like supporting YAML 1.2. So the only way to go was to keep ruamel.yaml also alive.\r\n\r\nI'm very much not an expert, but it seems like YAML 1.1 versus YAML 1.2 is the main reason the two libraries have always been incompatible --- PyYAML only supports YAML 1.1 and ruamel/ruyaml only supports YAML 1.2. (Right? Or am I completely off-base there?) That's why, when PyYAML got adopted, they couldn't incorporate any of the additions that ruamel.yaml made during the period when PyYAML was abandoned.\r\n\r\n(There's also the comment-preserving feature, and I assume that's not unrelated, since the cleaner syntax of YAML 1.2 is probably what enables handling comments. But it all comes back to YAML 1.2.)\r\n\r\nGiven that PyYAML is interested in supporting YAML 1.2, is there still reason to maintain ruyaml as a separate library independent of PyYAML, versus collapsing the features of ruyaml back into PyYAML?",
      "The maintainer of pyyaml stated clearly that preserving comments is outside their agenda (and unlikely to ever happen). Their main focus is on making pyyaml reliable and fast, the fact that it ended up being used as a file configuration is more an accident than a planned goal.\r\n\r\nI think you do underestimate the amount of complexity added by the comments feature. On the other hand ruyaml will likely never be as performant as pyyaml, so I doubt we will ever see one emerging as the winner.  I used both, based on what is more important.\r\n\r\nIn fact I have one project where I use both, as I needed features from both, ansible-lint, but that is a special case.\r\n\r\nI am a little bit inclined to recommend pyyaml instead of ruyaml mostly because of the number of active maintainers existing on both at this moment. Anyway, for cookiecutter any of them should be ok.",
      "Few minutes ago we merged https://github.com/cookiecutter/cookiecutter/pull/1489 which does switch to pyyaml, which is a safer bet when it comes to long term maintenance than ruyaml."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621daa8ac254a19ac29e607",
    "number": 1497,
    "body": "@tomgrin10 I noticed you added tests in https://github.com/cookiecutter/cookiecutter/pull/1471, it actually looks 99% done except for the failing lint. I'm unable to open a pull request on https://github.com/tomgrin10/cookiecutter/tree/use-yaml (?) so I'm opening a sibling pull request.",
    "head_branch": "use-yaml",
    "is_a_fork": true,
    "comments": [
      "Closing this PR due to unsafe YAML loading, and due to age."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621daa9ac254a19ac29e608",
    "number": 1496,
    "body": "If an invalid value is provided for a choice variable (such as from a config file), this alerts the user instead of silently ignoring it.",
    "head_branch": "error-if-invalid-choice",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Alert user if choice is invalid (#1496)\n\n* If an invalid value is provided for a choice variable (such as from a config file), alert the user instead of silently ignoring it.\r\n\r\n* black\r\n\r\n* Issue a warning instead of a ValueError.\r\n\r\n* assert generated_context == expected_context\r\n\r\n* test_apply_overwrites_invalid_overwrite\r\n\r\n* flake8\r\n\r\n* Verify variables overwrite for list if variable not in list not ignored."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621daaaac254a19ac29e609",
    "number": 1493,
    "body": "Fixes #1101 \r\n\r\nI aiming to generate uuids from directly from jinja2. Ansible has an extension exactly like this.\r\n\r\nThese are only a few lines in non tighly coupled part. So this will not interfere with other parts of the application. \r\n\r\nI guess you cloud add a custom extension for this as well but to be honest this is such a basic functionality, far more basic then the slugify extension. \r\nA custom extension will always mean the cookiecutters are not very portable. Since the extension must be install as a python package on every client. (correct me if im wrong). \r\n\r\nThanks for the consideration.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "This fixes #1101 which is a big issue for C# cookiecutters. @cookiecutter could you get this reviewed?",
      "Any news? I kind of need this feature. \r\nCan a reviewer please review this. I wouldn't  mind paying for this pull request. If funding is the issue. \r\n\r\nThanks",
      "I think it might be better to review/merge https://github.com/cookiecutter/cookiecutter/pull/1240 instead which should provide this functionality and more.",
      "This extension is not included in the latest release `1.7.3` but is mentioned in the latest documentation leading to very confusing errors.\r\n![image](https://user-images.githubusercontent.com/535299/129460040-8cc4e1d6-76c3-479e-a41c-b4d26842703f.png)\r\n\r\n```\r\nUnable to create file 'plugin.json'\r\nError message: 'uuid4' is undefined\r\n```"
    ],
    "commit_messages": [
      "Added uuid extension to be able to generate uuids (#1493)\n\n* Update extensions.py\r\n\r\n* Added tests and full function\r\n\r\n* fixed bug\r\n\r\n* fixed call\r\n\r\n* Fixed doc string\r\n\r\n* linting"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621daaaac254a19ac29e60a",
    "number": 1492,
    "body": "This is built atop https://github.com/cookiecutter/cookiecutter/pull/1490. Look there first. Once that is subtracted out, all this is doing is adding a conditional to `load_replay_file` that allows loading YAML. This could, if we wanted, actually be a one-line change, if we simply used a YAML parser always, since the YAML parser will also parse JSON.\r\n\r\nThe replay file is a useful feature, and it enables users to save and share the replay files. YAML files can be more human-readable than JSON files, since they can include comments.\r\n\r\nThis PR is very unambitious. This branch simply accepts a YAML replay file if the user specifically provides one; it does nothing else. It does not go looking for a YAML file if the user does not specifically provide one. It certainly does not go looking for a cookiecutter.yaml or any such thing. It just accepts a YAML replay file if the user provides one.",
    "head_branch": "yaml-replay-file",
    "is_a_fork": true,
    "comments": [
      "I'm closing this PR due to its age, and because replay files are generated by cookiecutter as JSON. If users are generating their own replay files they need to use JSON."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621daabac254a19ac29e60b",
    "number": 1491,
    "body": "This is built atop https://github.com/cookiecutter/cookiecutter/pull/1490. Look there first. This looks like it's changing more than it is.\r\n\r\nAll this is really doing is skipping straight to `load_replay_file` when the user directly provided the name of the replay file they want to use.",
    "head_branch": "use-load_replay_file-instead-of-round-trip",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621daacac254a19ac29e60c",
    "number": 1490,
    "body": "This shouldn't change behavior at all. This is its own PR just because it might *look* like something is changing here, but when you see this \"change\" all by itself, it becomes clear that it's just moving the same lines of code into a sub-function.",
    "head_branch": "load-replay-file",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621daadac254a19ac29e60d",
    "number": 1489,
    "body": "I was about to open an issue on poyo when I realized there's a much more fundamental question I should be asking: given that pyyaml was \"adopted\" two years ago, does it still make sense to maintain an entire separate YAML parser for cookiecutter?\r\n\r\nThis came up a bit before. https://github.com/cookiecutter/cookiecutter/pull/1136#issuecomment-512501467\r\n\r\nI could be wrong, but I sort of had the impression nobody with cookiecutter ever really *wanted* to be in the business of YAML parsing in the first place, and that poyo was just an act of desperation --- IIRC, with the half-complete migration to BitBucket, it wasn't even clear where you would go to contribute any fixes you needed. At this point, pyyaml is owned by The YAML Project and lives on GitHub with cookiecutter: https://github.com/yaml/pyyaml\r\n\r\nIt seems like it might be worth folding poyo into pyyaml, if there's anything cookiecutter needs that pyyaml doesn't currently have.\r\n\r\nAt this point `pip install pyyaml` just works on Linux and Windows. I'm opening this as a PR rather than an issue to show what a small change we're really talking about here --- anecdotally, the drop-in replacement in this branch just works.\r\n\r\n(This turned out a bit more complicated than just replacing the parsing call, but it's all to do with testing --- some tests were writing out test config files that, as it turned out, were not actually valid YAML. That's one of the things about having a separate hand-rolled parser; the language it actually represents tends to drift without anyone noticing, with the obvious implications for debugging.)",
    "head_branch": "replace-poyo-dependency",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Replace poyo with pyyaml. (#1489)\n\n* Replace poyo with pyyaml.\r\n\r\n* remove unused imports\r\n\r\n* assert that the raised exception is directly caused by a YAML error.\r\n\r\n* In YAML, use single quotes for unescaped backslashes.\r\n\r\n* Use single quotes for unescaped backslashes."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621daaeac254a19ac29e60e",
    "number": 1486,
    "body": "I always have a folder where I do my developing. For example '/projects'. I would like to specify that folder a the default output_dir in the config. This change is not breaking anything just adding a feature.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621daaeac254a19ac29e60f",
    "number": 1485,
    "body": "Hey @cookiecutter,\r\nThis implements a templates directory so a maintainer can use `extends`, `includes`, `blocks`, `import` and `super` inside the cookiecutter project template using jinja.\r\n\r\nloader: https://jinja.palletsprojects.com/en/2.11.x/api/#jinja2.FileSystemLoader\r\ntemplate-inheritance docs: https://jinja.palletsprojects.com/en/2.11.x/templates/#template-inheritance\r\n\r\nThe ratio is described in:\r\n\r\ncloses: https://github.com/cookiecutter/cookiecutter/issues/1484\r\n\r\nother issues on the same topic:\r\n\r\ncloses: https://github.com/cookiecutter/cookiecutter/issues/1495\r\ncloses: https://github.com/cookiecutter/cookiecutter/issues/818\r\nrefs: https://github.com/cookiecutter/cookiecutter/issues/409\r\n\r\nsimilar/extendable issues that get an improvement from this pr:\r\n\r\nref: https://github.com/cookiecutter/cookiecutter/issues/706\r\nref: https://github.com/cookiecutter/cookiecutter/issues/59\r\nref: https://github.com/cookiecutter/cookiecutter/issues/1004\r\nref: https://github.com/cookiecutter/cookiecutter/issues/364\r\n\r\nThank you!",
    "head_branch": "feature/add_templates_inheritance",
    "is_a_fork": true,
    "comments": [
      "@cookiecutter friendly ping 😊 ",
      "@cookiecutter Any chance of getting this PR merged? It's exactly what I've been looking for. Thanks @simobasso for implementing it!",
      "Hey @audreyr @pydanny @hackebrot, any chance of getting this pr reviewed?\r\n",
      "Apologies, but none of us have the unpaid bandwidth to work on this project. \r\n\r\nI think we need to do another call for maintainers. ",
      "@pydanny, thanks anyway!",
      "Hi all, I'd like to +1 this proposal because I think it would unlock a very powerful application for cookiecutter: composability. For example, if I want a template to provide my application with an API on AWS Lambda + API Gateway, then I could extend my core \"python app\" setup by including subtemplates \"API\" (providing FastAPI and some endpoint stubs and tests) and \"AWS Lambda API\" implementing the infra. That in turn could inherit from an AWS base template and be a sibling to an API-on-ECS template.\r\n\r\nSome of the more generic bits could be done by using separate python packages as the engine for composition and of course you could just do a massive batteries-included template and delete the irrelevant bits on a per-project basis But I think generating optional application components (CLI, web API, cloud provider, Slack integration) to be included by flags in cookiecutter.json would be really, really powerful when used creatively and carefully. On the other hand I find Jinja does get much less readable once you move from variable interpolation to control flow and blocks.\r\n\r\nI'm currently managing this sort of scenario using git-fu, but it takes a lot of attention to detail.\r\n\r\nI wonder if @timothycrosley or @samj1912 from [Cruft](https://github.com/cruft/cruft) would have the skills, interest or time to help with this?\r\n\r\nI do have one question on the implementation: the PR seems well able to include blocks of file content, but just as important would be the optional inclusion of whole files, directories or trees of directories in the same way (and analogously to the way cookiecutter permits templating in filenames). @simobasso do you have any thoughts on how that would be done?",
      "@HappyEinara thanks for the shout out!\r\n\r\n@pydanny I would be more than happy to help out with the maintanance of cookiecutter (I currently maintain http://cruft.github.io/ and https://github.com/samj1912/cookies which heavily rely on cookiecutter internals so I am fairly familiar with the codebase) but I would imagine we would still need more people (at least 1 more active maintainer) to be able to go through the current backlog of PRs and issues.",
      "@pydanny @samj1912 if this project needs some love, I'm more than happy to give it some :).\r\n\r\n> I do have one question on the implementation: the PR seems well able to include blocks of file content, but just as important would be the optional inclusion of whole files, directories or trees of directories in the same way (and analogously to the way cookiecutter permits templating in filenames). @simobasso do you have any thoughts on how that would be done?\r\n\r\nThat's an interesting question. I will open a new issue to keep this one on track because I think it is a bit far away from the scope of this pr; please have a look at https://github.com/cookiecutter/cookiecutter/issues/1517. \r\n",
      "@cookiecutter Any chance for this PR to get merged? Or are there any remaining concerns? It's a really great feature I'd love to see become available. :slightly_smiling_face:",
      "Hi. Firstly LOVE Cookiecutter!!! If I could :star:  more than once I would!!!\r\n\r\nIs there any movement on this PR? I would really love this feature.",
      "Any status update on this?",
      "Rebased to master",
      "@simobasso thank you for contribution and waiting. I will merge it, if you have a time please look at #1694\r\n\r\n@sisp, @JWBWork, @tall-josh, @samj1912 this will be in next release"
    ],
    "commit_messages": [
      "Merge pull request #1485 from simobasso/feature/add_templates_inheritance\n\nAdded: Templates inheritance"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621daafac254a19ac29e610",
    "number": 1483,
    "body": "This allows the `cookiecutterrc` file to be read from multiple places:\r\n    \r\n1) Environ variable `${COOKIECUTTER_USER_CONFIG_PATH}`\r\n2) `${XDG_CONFIG_HOME}/cookiecutter/cookiecutterc`\r\n3) `${XDG_CONFIG_HOME}/cookiecutterrc`\r\n4) `${HOME}/.cookiecutterrc`\r\n    \r\nThis allows the program to be more conform with the XDG standard.\r\n    \r\nRelated: See also #1355, which has similar ideas for the cache (`cookiecutters` and `cookiecutter_replay` folders)\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dab0ac254a19ac29e611",
    "number": 1482,
    "body": "…emplate dirs.\r\n\r\nTesting: Happy path is already tested by test_find.py. I tested the unhappy paths manually.",
    "head_branch": "chandler37_project_template_grace",
    "is_a_fork": true,
    "comments": [
      "@chandler37 thank you for contribution. Unfortunately:\r\n- No docs. \r\n- No full test coverage. \r\n- Not clear what it fixes\\changes.\r\n\r\nI cannot leave it as open pull request, as it is not clear what to do with it. If you are interested in this, please fix mentioned issues and create new pull request. Thank you."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dab1ac254a19ac29e612",
    "number": 1481,
    "body": "Currently, existing hooks are only sourced from within the root cookiecutter location under the hooks/ folder.\r\nThis commit adds a new CLI option to allow overriding that folder, if needed.\r\nThe rationale behind it is that one might want to have a generic or common set of pre/post hooks usable by all cookiecutters and sitting outside each cookiecutter template.",
    "head_branch": "hooks_dir",
    "is_a_fork": true,
    "comments": [
      "Rebased to master",
      "@roiavidan thank you for contribution. Can you add small documentation note on this?"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dab2ac254a19ac29e613",
    "number": 1480,
    "body": "Hi, I was going through the code and decided to run it through [DeepSource](https://deepsource.io), and found some interesting results. You might want to have a look for yourself as it detected [20 performance issues](https://deepsource.io/gh/de-sh/cookiecutter/issues/?category=performance), [4 bug risks](https://deepsource.io/gh/de-sh/cookiecutter/issues/?category=bug-risks) and [3 potential security vulnerabilities](https://deepsource.io/gh/de-sh/cookiecutter/issues/?category=security). Consider taking a look at the [report generated by DeepSource](https://deepsource.io/gh/de-sh/cookiecutter/issues/?category=security).\r\n\r\nI have made a few fixes and am including them in this PR:\r\n\r\n- Remove unnecessary delegation with super\r\n- Remove unnecessary inheritance from object\r\n- Rename variable that clashes with function name in outer scope\r\n\r\n---\r\n\r\nI strongly recommend that you do enable DeepSource analysis after merging this PR, as it is free for OpenSource projects. If you are interested, please follow these steps:\r\n\r\n- Sign up on [DeepSource](https://deepsource.io) with your GitHub account and grant access to the repo.\r\n- Activate analysis, if this PR is merged with the `.deepsource.toml` you can go without having to define your own.\r\n- You can also check out the docs for more details, but do let me know if I can be of any help!",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "No contribution from pull request author, original repository deleted and cannot be modified in range of this pull request. Closed"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dab2ac254a19ac29e614",
    "number": 1478,
    "body": "Signed-off-by: Gábor Lipták <gliptak@gmail.com>",
    "head_branch": "python9",
    "is_a_fork": true,
    "comments": [
      "@cookiecutter please review",
      "thank you @gliptak ",
      "hm, pypi and the docs do not list python 3.9 as a valid target."
    ],
    "commit_messages": [
      "Add Python 3.9 (#1478)\n\nSigned-off-by: Gábor Lipták <gliptak@gmail.com>\r\n\r\nCo-authored-by: Andrey Shpak <insspb@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dab3ac254a19ac29e615",
    "number": 1473,
    "body": "I noticed 'Do not modify this file, since 1.7.1 Changes are generated on Pull request title and will be added before release.'. If the dates are generated automatically, the responsible script probably needs to be fixed as well?",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "@graue70 Thank you."
    ],
    "commit_messages": [
      "Fix incorrect years in release history (#1473)\n\nI noticed 'Do not modify this file, since 1.7.1 Changes are generated on Pull request title and will be added before release.'. If the dates are generated automatically, the responsible script probably needs to be fixed as well?"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dab4ac254a19ac29e616",
    "number": 1471,
    "body": "I saw that #1136 was pretty much abandoned by the op, so I decided to revive it.\r\nAgain, this PR essentially addresses the long forgotten #970.\r\n\r\nI rebased the original PR, added tests, and changed some lines in the docs.\r\nMaybe there need to be some additional changes to the docs, but I don't really have an idea of where to do that.",
    "head_branch": "use-yaml",
    "is_a_fork": true,
    "comments": [
      "I'm closing this PR due to its age."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dab5ac254a19ac29e617",
    "number": 1470,
    "body": "To avoid new users to think they have to add it manually.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "@oncleben31 thanks. Merged."
    ],
    "commit_messages": [
      "Add slugify in the default extensions list (#1470)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dab6ac254a19ac29e618",
    "number": 1469,
    "body": null,
    "head_branch": "ISSUE-1441",
    "is_a_fork": true,
    "comments": [
      "Code Climate has analyzed commit 4ac22c32 and detected **2 issues** on this pull request.\n\nHere's the issue category breakdown:\n\n| Category | Count |\n|:---:|:---:|\n| Security | 2 |\n\n\nView more on [Code Climate](https://codeclimate.com/github/cookiecutter/cookiecutter/pull/1469).\n",
      "@jgrasser thank you for contribution....\r\n\r\ni am just returning to work on cc. \r\n\r\nSeveral questions, regarding this pull request.\r\n\r\n1. hg has no recursive option?\r\n2. Why not as cli option to cc? It is possible that final user do not need to make submodules clone.\r\n\r\nMaybe think about passing user commands to hg/git in some way? So user decide what he want...",
      "For cookiecutters, I wonder whether `--recurse-submodules` should be the default? Would there be any scenario where one would create a cookiecutter repo and *not* intend the sub-modules to be part of the baked project? Happy for it to be configurable, but would prefer if it became an opt-out thing.",
      "https://www.mercurial-scm.org/wiki/Subrepository",
      "@jgrasser did you see the questions above?",
      "Hey, just catching up on this now. Thank you all for the feedback. :)\r\n\r\nI don't have any mercurial experience; I'm one of those people that left university right when git was introduced and I never attempted to broaden my horizons by it.\r\n\r\nIs it correct that `hg clone` will do the recurse clone by default? Also, to checkout/pull the submodules you just need to append the `-s` flag to the mercurial commands?\r\n",
      "Hi @jgrasser @insspb @faph @gliptak @JonZeolla \r\n\r\nWe started working on a new community fork of the Cookiecutter project, named Cookieninja.\r\nThe fork is found at: https://github.com/cookieninja-generator/cookieninja\r\n\r\nWe have re-opened your PR in the Cookieninja project at: https://github.com/cookieninja-generator/cookieninja/pull/51\r\n\r\nWe're trying to bring the life back to this amazing project.\r\nWe are committed to reviewing and merging each PR in up to 2 weeks from the day it's opened (if there are no issues with it).\r\nWe'd really like you to join the fork, star it and contribute to it!\r\n\r\nThank you :)"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dab6ac254a19ac29e619",
    "number": 1468,
    "body": "Addresses issue #809. A malformed JSON file no longer raises an unhandled exception.\r\n\r\n**Steps to reproduce the issue:**\r\n1. Create a subtly malformed .json file in a project directory\r\n2. Run cookiecutter on that project\r\n3. Observe your eyes glazing over as a huge python exception comes out of it.\r\n\r\n**Cause:**\r\n\r\nIn generate.py's generate_context() function, for a JSON decoding error, it raised a friendlier exception. That is still daunting to new users.\r\n\r\n**Solution:**\r\n\r\nLogs an error message and exits.\r\n\r\n**Other things to note:**\r\n\r\nThe message text has not changed.",
    "head_branch": "handle-json-exception",
    "is_a_fork": true,
    "comments": [
      "Code Climate has analyzed commit 61175d34 and detected **0 issues** on this pull request.\n\nView more on [Code Climate](https://codeclimate.com/github/cookiecutter/cookiecutter/pull/1468).\n",
      "@noone234 thank you for contribution. At least now I understand what is #809 about.\r\n\r\nYou should not remove current Raise error, as cc can be used in internal scripts and this error can be handled in some kind. \r\nSo when you remove raise - you making breaking change.\r\n\r\nCorrect way to implement this:\r\nDetect is cc run as console app or as library. \r\nIf console app - you current solution.\r\n\r\nIf as part of other product - only raise, as it was. \r\n\r\n@noone234 do you interested to continue work on this?",
      "@insspb Thank you for reviewing my PR.\r\n\r\nYes, I am interested in continuing the work. I will try to do as you recommended.",
      "After studying the source code further, I opted for a simpler solution.\r\n\r\ncli.py's main() function already catches several exceptions. I added `ContextDecodingException` to that list.\r\n\r\nThat has the desired effect.\r\n- generate.py's generate_context() function still raises a `ContextDecodingException`, as @insspb requested.\r\n- If `cookiecutter` is run as a command, it prints the friendlier error message as requested in https://github.com/cookiecutter/cookiecutter/issues/809. It also exits with a non-zero status.",
      "@noone234 \r\nNice.\r\nTests?",
      "Added a test in test_cli.py. It is adapted from tests_generate_context.py's test_generate_context_with_json_decoding_error().\r\n\r\nI am not sure if this suffices.",
      "Hi @insspb, I added a test in test_cli.py. Do you need anything else from me?",
      "Hi @noone234 I am currently busy on other project. Will review after weekend.",
      "@insspb bumping this PR. It has been a few weeks since last activity.",
      "@insspb Can you please remove the `breaking-change` label from this PR? because it is no longer a breaking change.\r\n\r\nDo you think you will still have time to review this PR? If not, what are my next steps?\r\n\r\nThank you.",
      "@JonZeolla Sorry to interrupt. Can you please help me get this PR unstuck or direct me to someone who can? There has been no activity since October; 4 months.",
      "@simobasso Hi, I'm reaching out for assistance. Can you please help me get this PR unstuck or direct me to someone who can? There has been no activity since October; 5 months.\r\n\r\nPer the December 28 comment, can the `breaking-change` and `wip` labels be removed from this PR?",
      "Hey @noone234, 👋  thank you for reaching out!\r\n\r\nSadly I don't have any permission to help you 😞 as you can see on https://github.com/cookiecutter/cookiecutter/pull/1485 I'm in the same conditions.\r\n\r\nOne of the maintainers said https://github.com/cookiecutter/cookiecutter/pull/1485#issuecomment-812668296 that no one has time for this project now.\r\n\r\nWhat can I do for you is to review your pr but I cannot merge it sorry.\r\n\r\n",
      "Hey @noone234 👋, just merged!\r\n\r\nThanks for your job and sorry 😅  about the delay, we will do better next time! \r\n\r\n",
      "Thank you so much @simobasso!\r\n\r\nI see that you are now a maintainer. Congratulations! 🎉 "
    ],
    "commit_messages": [
      "Merge pull request #1468 from noone234/handle-json-exception\n\nUser's JSON parse error causes ugly Python exception #809"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dab7ac254a19ac29e61a",
    "number": 1466,
    "body": null,
    "head_branch": "feature/context_prompt_hooks",
    "is_a_fork": true,
    "comments": [
      "Code Climate has analyzed commit 84f35387 and detected **4 issues** on this pull request.\n\nHere's the issue category breakdown:\n\n| Category | Count |\n|:---:|:---:|\n| Complexity | 2 |\n| Security | 2 |\n\n\nView more on [Code Climate](https://codeclimate.com/github/cookiecutter/cookiecutter/pull/1466).\n",
      "I'm closing this PR due to its age."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dab8ac254a19ac29e61b",
    "number": 1459,
    "body": "Moved cli options to the top level menu as suggested in https://github.com/cookiecutter/cookiecutter/issues/1413#issuecomment-636306175 ",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "@ghostcodekc please test merge requests before review request. This MR will not work."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dab9ac254a19ac29e61c",
    "number": 1458,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "This is terrible and would not be merged.",
      "Hi @insspb, I kindly ask you to follow the [Cookiecutter Code of Conduct](https://www.python.org/psf/conduct/) when interacting with contributors on the issue tracker. Please be respectful and use welcoming and inclusive language."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dabaac254a19ac29e61d",
    "number": 1452,
    "body": "This commit adds optional support for allowing .zip files containing Cookiecutter project templates to be stored and accessed via S3. In short, project templates can be stored in a private S3 bucket instead of having to be publically available at an HTTP(S) endpoint. This support is achieved by using pre-signed S3 URLs, so that the mechanism for retrieving files from S3 is not dramatically different from downloading a file via HTTP(S), as is currently done.\r\n\r\nSupport for this feature is optional, since it requires the boto3 library, so this commit also adds an \"s3\" extra as an installation option. Support can be enabled by installing Cookiecutter using\r\n\r\n    $ pip install cookiecutter[s3]",
    "head_branch": "s3-repositories",
    "is_a_fork": true,
    "comments": [
      "I'm closing this PR due to its age."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dabaac254a19ac29e61e",
    "number": 1447,
    "body": "",
    "head_branch": "feature/add_hooks_for_ctx",
    "is_a_fork": true,
    "comments": [
      "Can any help me to figure out what's wrong with the linting job? Thank you in advance ;)"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dabbac254a19ac29e61f",
    "number": 1445,
    "body": "This PR attempts to address https://github.com/cookiecutter/cookiecutter/issues/1444\r\n\r\nWhen the template is downloaded and the user is asked whether the template should be re-downloaded, then the following steps are carried out.\r\n1. The existing template is backed up in a temporary directory.\r\n2. Try to download the new template\r\n3. If failed to download the new template, then restore the backup.\r\n\r\nChanges\r\n---------\r\n\r\n1. Function ``cookiecutter.utils.prompt_and_delete`` did both prompting the answer and deleting the existing template. I split function into ``prompt_ok_to_delete`` and ``prompt_ok_to_reuse``. Meanwhile the deletion of the existing template is carried out in ``cookiecutter.vcs``.\r\n2. Refactor ``cookiecutter.vcs`` by extracting functions ``_need_to_clone``, ``_clone_repo``, ``_handle_clone_error``, ``_backup_and_delete_repo``, ``_restore_old_repo``.\r\n\r\nKnown issues\r\n--------------\r\n\r\nCode coverage dropped because I did not manage to implement proper tests with correct mocking of reading user input.\r\nI appreciate if someone helps with that. The tests were created but marked to be skipped.",
    "head_branch": "feature/clone-before-deleting",
    "is_a_fork": true,
    "comments": [
      "I'm closing this PR due to its age, and to avoid having cookiecutter increasingly manage the many VCS systems and corner cases that exist."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dabcac254a19ac29e620",
    "number": 1443,
    "body": "Prevent introduction of RST bugs.",
    "head_branch": "fix/lint",
    "is_a_fork": false,
    "comments": [
      "Code Climate has analyzed commit 0b1c99d0 and detected **0 issues** on this pull request.\n\nThe test coverage on the diff in this pull request is **100.0%** (**50%** is the threshold).\n\nThis pull request will bring the total coverage in the repository to **99.7%** (**0.0%** change).\n\nView more on [Code Climate](https://codeclimate.com/github/cookiecutter/cookiecutter/pull/1443).\n"
    ],
    "commit_messages": [
      "Lint rst files (#1443)\n\nPrevent introduction of RST bugs.\r\n\r\nCo-authored-by: Sorin Sbarnea <ssbarnea@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dabdac254a19ac29e621",
    "number": 1442,
    "body": "Fixes #1410",
    "head_branch": "cookiecutterpkg-rename-doc2-0",
    "is_a_fork": true,
    "comments": [
      "right, maybe the CI test missed it. I have updated the line length, hope it suffices. Thanks for notifying @ssbarnea ",
      "It was never checked, I proposed a PR to fix few minutes ago. There were few issues I uncovered.",
      "got it. so would this PR be sufficient to close issue #1410? "
    ],
    "commit_messages": [
      "Renamed cookiecutter.package to API (#1442)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dabeac254a19ac29e622",
    "number": 1437,
    "body": "The example didn't match the description structure of the previous\r\nexample and it mentioned the pre_gen_project, when it should be\r\npost_gen_project hook.",
    "head_branch": "docs/require_conditional_example",
    "is_a_fork": true,
    "comments": [
      "I just mirrored the syntax of the previous approved example `¯\\(°_o)/¯`.\r\n\r\nCheck out the rephrased version: 530367b",
      "Hi @ssbarnea, can I do anything to speed up the merging process of this contribution?\r\n\r\nThanks!"
    ],
    "commit_messages": [
      "docs: rewrite the conditional files / directories example description. (#1437)\n\n* docs: rewrite the conditional files / directories example description.\r\n\r\nThe example didn't match the description structure of the previous\r\nexample and it mentioned the pre_gen_project, when it should be\r\npost_gen_project hook.\r\n\r\n* docs: improve hooks example phrasing"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dabeac254a19ac29e623",
    "number": 1427,
    "body": "missing \"a \"",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixed wording detail (#1427)\n\nmissing \"a \""
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dabfac254a19ac29e624",
    "number": 1423,
    "body": "- Possible fix #1411\r\n- moved local tutorials, inside one folder\r\n- specify external tutorial links",
    "head_branch": "docs-update",
    "is_a_fork": true,
    "comments": [
      "@Bhupesh-V Thank you for contribution,  you forgot 'Learn the Basics of Cookiecutter by Creating a Cookiecutte\r\n'",
      "> @Bhupesh-V Thank you for contribution, you forgot 'Learn the Basics of Cookiecutter by Creating a Cookiecutte\r\n> '\r\n\r\nHave included them just now",
      "merged in #1677"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dac0ac254a19ac29e625",
    "number": 1419,
    "body": "This is code update for #946, as we do not have access to original branch. \r\n\r\nThis PR implements option to change default Jinja2 settings by templates developers on template development stage.",
    "head_branch": "jinja2-environment",
    "is_a_fork": false,
    "comments": [
      "Code Climate has analyzed commit 26bcca5e and detected **0 issues** on this pull request.\n\nThe test coverage on the diff in this pull request is **100.0%** (**50%** is the threshold).\n\nThis pull request will bring the total coverage in the repository to **99.7%** (**0.0%** change).\n\nView more on [Code Climate](https://codeclimate.com/github/cookiecutter/cookiecutter/pull/1419).\n",
      "IIUC, this allows us to set (static) [Jinja2 environment](https://jinja.palletsprojects.com/en/2.11.x/api/#jinja2.Environment) values.\r\n\r\nNon-simple values, such as `filters` and `tests`, which are dicts referring to Python code objects, won't be able to set like this. Hence, it still won't be possible to add custom filters \"the Jinja way\", by simply adding a function reference to the `filters` dict.\r\n\r\nIs there a chance to add that feature before v2.0.0 is released?"
    ],
    "commit_messages": [
      "Added: Jinja2 Environment extension on files generation stage (#1419)\n\n* Give access to Jinja2 environment variables\r\n\r\n* Don't prompt user for private dictionnaries\r\n\r\n* Move the environment variables logic into generate_files\r\n\r\n* Codebase yearly update\r\n\r\nCo-authored-by: Guillaume Gelin <ramnes@1000mercis.com>\r\nCo-authored-by: ramnes <contact@ramnes.eu>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dac1ac254a19ac29e626",
    "number": 1418,
    "body": "This PR is engine change for #1413 \r\nCommands help require rephrasing and extension. Some of them even may require additional pages. \r\nNo menu work was done in this PR.",
    "head_branch": "click-docs",
    "is_a_fork": false,
    "comments": [
      "Code Climate has analyzed commit 99e2cce9 and detected **0 issues** on this pull request.\n\nThe test coverage on the diff in this pull request is **100.0%** (**50%** is the threshold).\n\nThis pull request will bring the total coverage in the repository to **99.7%** (**0.0%** change).\n\nView more on [Code Climate](https://codeclimate.com/github/cookiecutter/cookiecutter/pull/1418).\n"
    ],
    "commit_messages": [
      "Changed: CLI Commands documentation engine (#1418)\n\nCo-authored-by: Sorin Sbarnea <ssbarnea@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dac2ac254a19ac29e627",
    "number": 1414,
    "body": "When using `cookiecutter` on the cookiecutter I am working on (https://github.com/agateau/cookiecutter-qt-app) and using the default values except for selecting the MIT license, the author name appeared wrongly encoded both in the prompt default value and in the generated LICENSE file.\r\n\r\nExplicitly setting the encoding to utf-8 when reading the context file fixes this.\r\n\r\nThis only happens on Windows for me: the added test pass with or without the fix on Linux, but fails without the fix on Windows.",
    "head_branch": "fix/wrong-json-encoding-on-windows",
    "is_a_fork": true,
    "comments": [
      "@agateau thank you for contribution.\r\n\r\nYou commit merged to master branch. You can test it there, as well as many features that will be available in cookiecutter 2.0\r\n\r\nWith cookiecutter 2.0 we want to extend windows support, so if you find any windows related bugs please report. \r\nEncoding problems discussion began in 2014 in #248 Please leave you thoughts there.\r\n\r\nAlso you can make a great help with review of existing windows related issues, and maybe introducing some bugfixes.",
      "Thanks for merging this fix. Unfortunately I am not a Windows expert: I do most of my work on Linux, I just want it to work on Windows. Getting that one-liner done took a long time (and much cursing!).\r\n\r\nMy 2 cents regarding encoding (again as a mostly Linux user, sometimes dabbling on other platforms) would be: standardize on every file being utf-8, but do not assume it is the default encoding on the OS, so always specify it."
    ],
    "commit_messages": [
      "Fix default values being loaded with wrong encoding on Windows (#1414)\n\nExplicitly set the encoding to utf-8 when reading the context file to\r\nensure values are correctly loaded.\r\n\r\nCo-authored-by: Andrey Shpak <insspb@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dac2ac254a19ac29e628",
    "number": 1408,
    "body": "Import of `io` module was required in python <3. \r\nSince python 3 `open` is alias for `io.open` and direct import of `io` module not required.",
    "head_branch": "io_open_vs_open",
    "is_a_fork": false,
    "comments": [
      "Code Climate has analyzed commit eedb6f85 and detected **2 issues** on this pull request.\n\nHere's the issue category breakdown:\n\n| Category | Count |\n|:---:|:---:|\n| Security | 2 |\n\n\nThe test coverage on the diff in this pull request is **100.0%** (**50%** is the threshold).\n\nThis pull request will bring the total coverage in the repository to **99.7%** (**0.0%** change).\n\nView more on [Code Climate](https://codeclimate.com/github/cookiecutter/cookiecutter/pull/1408).\n"
    ],
    "commit_messages": [
      "Python3: Changed io.open to build-in open (PEP3116) (#1408)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dac3ac254a19ac29e629",
    "number": 1407,
    "body": "This pull request is based on two old PRs #406 and #1159 and solve problem from issue #405 \r\n\r\nWhat changed:\r\n\r\nAfter this PR merged cookiecutter will detect new-line symbol on each file in template and will use same new-line as in template, no matter on what system is deployed. \r\n\r\nFor template developers we introduce special key `_new_lines` that allow to force new line character on deployment. (check included docs).\r\n\r\nThis can break some old templates, that why marked as breaking change.\r\n\r\nSome related tests refactored in style described in #1403 and #1405 ",
    "head_branch": "win_crlf",
    "is_a_fork": false,
    "comments": [
      "To do: \r\n\r\n- [x] Force switcher\r\n- [x] documentation.",
      "Code Climate has analyzed commit a34df663 and detected **0 issues** on this pull request.\n\nThe test coverage on the diff in this pull request is **100.0%** (**50%** is the threshold).\n\nThis pull request will bring the total coverage in the repository to **99.7%** (**0.0%** change).\n\nView more on [Code Climate](https://codeclimate.com/github/cookiecutter/cookiecutter/pull/1407).\n"
    ],
    "commit_messages": [
      "Added: End of line detection and configuration. (#1407)\n\nCo-authored-by: Philippe Ombredanne <pombredanne@nexb.com>\r\nCo-authored-by: Francisco Molina <franciscojose.molina@alten.es>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dac4ac254a19ac29e62a",
    "number": 1406,
    "body": "* Monkeypatching instead of \"possible to fail values\"\r\n* tmpdir -> tmp_path\r\n* os -> pathlib\r\n\r\nrelated #1405",
    "head_branch": "tmpdir",
    "is_a_fork": false,
    "comments": [
      "Code Climate has analyzed commit 89bd5f57 and detected **0 issues** on this pull request.\n\nThe test coverage on the diff in this pull request is **100.0%** (**50%** is the threshold).\n\nThis pull request will bring the total coverage in the repository to **99.5%** (**0.0%** change).\n\nView more on [Code Climate](https://codeclimate.com/github/cookiecutter/cookiecutter/pull/1406).\n"
    ],
    "commit_messages": [
      "Tests refactoring: test_utils write issues fixed #1405 (#1406)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dac5ac254a19ac29e62b",
    "number": 1404,
    "body": "This fixes 7 possible security issues. \r\n\r\nhttps://codeclimate.com/github/cookiecutter/cookiecutter/pull/1404",
    "head_branch": "bumpversion_removal",
    "is_a_fork": false,
    "comments": [
      "Code Climate has analyzed commit 21028638 and detected **0 issues** on this pull request.\n\nThe test coverage on the diff in this pull request is **100.0%** (**50%** is the threshold).\n\nThis pull request will bring the total coverage in the repository to **99.5%** (**0.0%** change).\n\nView more on [Code Climate](https://codeclimate.com/github/cookiecutter/cookiecutter/pull/1404).\n"
    ],
    "commit_messages": [
      "Removed: Bumpversion, setup.py arguments. (#1404)\n\nCo-authored-by: Sorin Sbarnea <ssbarnea@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dac5ac254a19ac29e62c",
    "number": 1402,
    "body": "",
    "head_branch": "remove_unicode",
    "is_a_fork": false,
    "comments": [
      "Code Climate has analyzed commit 0876f376 and detected **0 issues** on this pull request.\n\nThe test coverage on the diff in this pull request is **100.0%** (**50%** is the threshold).\n\nThis pull request will bring the total coverage in the repository to **99.7%** (**0.0%** change).\n\nView more on [Code Climate](https://codeclimate.com/github/cookiecutter/cookiecutter/pull/1402).\n"
    ],
    "commit_messages": [
      "Python3: Remove python2 u' sign, fix some strings (#1402)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dac6ac254a19ac29e62d",
    "number": 1401,
    "body": "",
    "head_branch": "drop27-35",
    "is_a_fork": false,
    "comments": [
      "Code Climate has analyzed commit 3e34a3da and detected **5 issues** on this pull request.\n\nHere's the issue category breakdown:\n\n| Category | Count |\n|:---:|:---:|\n| Security | 5 |\n\n\nThe test coverage on the diff in this pull request is **100.0%** (**50%** is the threshold).\n\nThis pull request will bring the total coverage in the repository to **99.7%** (**0.2%** change).\n\nView more on [Code Climate](https://codeclimate.com/github/cookiecutter/cookiecutter/pull/1401).\n",
      "@insspb If you could split it by change-type it would be much easier to review and merge.",
      "@ssbarnea It is already splitted. for #1401, #1402 and many tests-related PR that will be done one by one. :)\r\n\r\nI will merge this one in minutes, as it is already approved by you ;)"
    ],
    "commit_messages": [
      "Python3: Remove futures, six and encoding (#1401)\n\n* Remove futures and coding: utf-8 from codebase. Making code python 3 only.\r\n\r\n* Git fix tests\r\n\r\nCo-authored-by: Sorin Sbarnea <ssbarnea@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dac7ac254a19ac29e62e",
    "number": 1400,
    "body": "Closes  #1337",
    "head_branch": "pip_releaser",
    "is_a_fork": false,
    "comments": [
      "Code Climate has analyzed commit c78aaa8e and detected **0 issues** on this pull request.\n\nThe test coverage on the diff in this pull request is **100.0%** (**50%** is the threshold).\n\nThis pull request will bring the total coverage in the repository to **99.0%** (**0.0%** change).\n\nView more on [Code Climate](https://codeclimate.com/github/cookiecutter/cookiecutter/pull/1400).\n"
    ],
    "commit_messages": [
      "Added: Automatic PyPI deploy on tag creation #1337 (#1400)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dac8ac254a19ac29e62f",
    "number": 1399,
    "body": "Closes #1398",
    "head_branch": "codeclimate",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Changed: Restored coverage reporter #1398"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dac9ac254a19ac29e630",
    "number": 1397,
    "body": "fix https://github.com/cookiecutter/cookiecutter/issues/127#issuecomment-223635938",
    "head_branch": "postexample",
    "is_a_fork": true,
    "comments": [
      "@xyb Thank you for contribution."
    ],
    "commit_messages": [
      "Documentation of conditional files / directories (#1397)\n\nfix https://github.com/cookiecutter/cookiecutter/issues/127#issuecomment-223635938"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dac9ac254a19ac29e631",
    "number": 1396,
    "body": "I want to run cookiecutter with untrusted templates.\r\n\r\nOne way to do it is run cookiecutter in a sandbox environment such as the the ones in pypy, jython and ironpython.   In such sandbox, I can prevent the untrusted template from modifying files outside the generated project.\r\n\r\nThe challenge is that the hooks are invoked using subprocess.Popen.  Sandboxes cannot allow Popen, because the child process would escape the sandbox. \r\n\r\nThis PR uses python's exec to run the hook code within the same process and remain sandboxed.\r\n\r\nNote the tests don't pass because some of the tests invoke sys.exit(1),  which just exits cookiecutter itself.  Looking for feedback for ways to solve this.\r\n ",
    "head_branch": "nofork",
    "is_a_fork": true,
    "comments": [
      "Hi @paulpach, will you continue to work on this one? It is still in draft."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dacaac254a19ac29e632",
    "number": 1395,
    "body": "Pipsi is no longer maintained (from the [pipsi github page](https://github.com/mitsuhiko/pipsi/)).",
    "head_branch": "doc-pipx-instead-of-pipsi",
    "is_a_fork": true,
    "comments": [
      "@ndclt Thank you for contribution. Merged."
    ],
    "commit_messages": [
      "Fixed: Replaced no longer maintained pipsi by pipx (#1395)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dacbac254a19ac29e633",
    "number": 1391,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Changed: README.md PyPI URLs changed to the modern PyPI last version (#1391)\n\nCo-authored-by: Andrey Shpak <insspb@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621daccac254a19ac29e634",
    "number": 1390,
    "body": "Closes #1389 ",
    "head_branch": "add-fix-readme",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixed: Comma in README.md (#1390)\n\nCo-authored-by: Cyrus Bey <cyrusbey@gmail.com>\r\nCo-authored-by: Andrey Shpak <insspb@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dacdac254a19ac29e635",
    "number": 1387,
    "body": "The files got new file name extensions, but MANIFEST was not updated -> files were missing in the tarballs",
    "head_branch": "fix-manifest",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "MANIFEST: Fix file name extensions (#1387)\n\nThe files got new file name extensions, but MANIFEST was not updated -> files were missing in the tarballs"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621daceac254a19ac29e636",
    "number": 1386,
    "body": "Python 2.7 is officially dead and we are not going to make any new release that supports it.\r\n\r\nThis removes py27 code but a follow-up will address other changes like removing use of `six`.\r\n\r\nMajor version is bumped to 1.8.0 to mark this breaking change.",
    "head_branch": "fix/drop-py27",
    "is_a_fork": true,
    "comments": [
      "Hi @ssbarnea! 👋 \r\n\r\nDropping Python 2 compatibility is a breaking change and requires a major version bump to version `2.0.0` as well as the PyPI classifier `Programming Language :: Python :: 3 :: Only`.",
      "> Hi @ssbarnea! 👋\r\n> \r\n> Dropping Python 2 compatibility is a breaking change and requires a major version bump to version `2.0.0` as well as the PyPI classifier `Programming Language :: Python :: 3 :: Only`.\r\n\r\nI do not mind using 2.0.0, mostly I got used to other projects where top version is used only on serious architectural changes, second is major, 3rd is minor, and 4th is optional and used only for hotfixes. Example ansible project(s).\r\n\r\nAnyway, I will update it to 2.0.0. The only worry I have is that as we want to move to a faster release cycle with breaking changes we risk starting to bump the first number quite often. Still, browsers demonstrated that nobody got hurt by this practice.\r\n\r\n",
      "BTW, I am really inclined to want to drop py35 too because is nearly end-of life and because having py36 as minimal would enable a serious list of improvements like f-strings or type-checking. Still, that decision is outside the scope of this PR. I want to keep any chance atomic, so is easy to review.",
      "As it appears coverage does really helped this time.",
      "@ssbarnea Please remember that PR title will be in changelog. So it should start with Changed:/Updated: etc keywords.\r\n",
      "<delurk>Just want to say that this is a wonderful development. Very exciting to watch unfold. Go go go!</delurk>",
      "> @ssbarnea Please remember that PR title will be in changelog. So it should start with Changed:/Updated: etc keywords.\r\n\r\nNot sure where this requirement comes from. The good part about using Release Drafter is that we can change the PR title and labels even after the merge and the notes will be updated, as long we do not tag a new release. This gives us time to tune it.\r\n\r\nAFAIK, PRs should be concise, easy to read, follow 50/72 rule as commits and use at least one label that is recognized by the drafter. Sadly there is no bot to check that, yet.\r\n\r\nRe `jinja2<3.0.0` or `markupsafe<2.0.0` are good to stay, there is no such releases. It is not a bad idea to limit major versions as they are high-likely to break backward compatibility. Only real problem is with packages that bump major version often, but apparently we do not have any problems of this kind with our dependencies.\r\n\r\n@pydanny Thanks for the message, I am happy to get some confirmation on our actions. Sometimes we worry that we could end-up making unpopular changes.",
      "@ssbarnea LGTM, but what about 3.5? \r\n"
    ],
    "commit_messages": [
      "Remove support for python < 3.6 (#1386)\n\n* Remove support for python2.7\r\n\r\nPython 2.7 is officially dead and we are not going to make any new\r\nrelease that supports it.\r\n\r\nThis removes py27 code but a follow-up will address other changes\r\nlike dropping the need to use six library.\r\n\r\n* Remove python 3.5\r\n\r\n* Restore travis\r\n\r\nCo-authored-by: Andrey Shpak <ashpak@ashpak.ru>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621daceac254a19ac29e637",
    "number": 1385,
    "body": "…",
    "head_branch": "fix_deps",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "FIxed: Jinja2&Six version limits causing build errors with ansible project (#1384)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dacfac254a19ac29e638",
    "number": 1383,
    "body": "",
    "head_branch": "release171",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Release 1.7.1"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dad0ac254a19ac29e639",
    "number": 1382,
    "body": "Documents how template authors can use github topics to make\r\ntheir templates easily discoverable by others.\r\n\r\nNote: many of these topics do not have any entries because template authors did not know about this. Still, to avoid a chick-n-egg issue, we start by documenting them first. Later we can ping some of them to ask them to update their github topics based on the documentation.",
    "head_branch": "listings",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dad1ac254a19ac29e63a",
    "number": 1381,
    "body": "Fixes: #1269",
    "head_branch": "pytest_config",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Added: Pytest config with docstrings enabled tests (#1381)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dad2ac254a19ac29e63b",
    "number": 1380,
    "body": "",
    "head_branch": "test_prompt",
    "is_a_fork": false,
    "comments": [
      "Hi @pfmoore, no problem. Did not want to interrupt your current work. \r\nI just removed you write access to this project, so you will not pop-up in reviewers. \r\nHope you ok with it. Msg me if you want access back."
    ],
    "commit_messages": [
      "tests: test_prompt Exception tests refactoring (#1380)\n\n* Tests refactoring: test_prompt Exception tests replaced by parametrization, docstrings, formatting, new tests\r\n\r\n* Remove wrong type limit. (Raw can be any)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dad2ac254a19ac29e63c",
    "number": 1379,
    "body": "Partial-Fix: #742",
    "head_branch": "test_generate_context",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Tests refactoring: test-generate_context one time use fixtures removed, docstrings added, code reformatting (#1379)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dad3ac254a19ac29e63d",
    "number": 1378,
    "body": "* Added docstrings\r\n* Added more strict check for binary files\r\n* Setup/teardown updated\r\n* Reformatted\r\n* 1 test order changed.\r\n\r\nPartial-Fix: #742",
    "head_branch": "test_generate_files",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Tests refactoring: test_generate* docstrings added, setup/teardown functions updated, duplicate tests dropped (#1378)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dad4ac254a19ac29e63e",
    "number": 1377,
    "body": "* Added docstrings\r\n* Setup/Teardown fixtures to modern syntax\r\n* Some reformatting",
    "head_branch": "tests_docstrings_2",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Added: docstrings for cookiecutter test files (#1377)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dad5ac254a19ac29e63f",
    "number": 1376,
    "body": "Docstrings only changes.\r\nPartial-Fix: #742",
    "head_branch": "tests_docstrings_1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Added: docstrings for cookiecutter test files (#1376)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dad5ac254a19ac29e640",
    "number": 1375,
    "body": "* Added docstrings\r\n* One fixture replaced with parametrization\r\n* New setup/teardown syntax\r\n\r\nPartial-Fix: #742",
    "head_branch": "tests_input",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "tests: docstrings for invocation test files (#1375)\n\n* Added: docstrings for cookiecutter invocation files\r\n\r\n* Updated: test_cookiecutter_invocation docstrings + new setup/teardown"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dad6ac254a19ac29e641",
    "number": 1374,
    "body": "Partial-Fix: #742",
    "head_branch": "test_abort_generate_on_hook_error",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Tests refactoring: test_abort_generate_on_hook_error tests replaced by parametrization, docstrings added (#1374)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dad7ac254a19ac29e642",
    "number": 1373,
    "body": "",
    "head_branch": "test_extensions",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Added: docstrings for extensions feature test files (#1373)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dad8ac254a19ac29e643",
    "number": 1372,
    "body": "* test_generate_hooks changed setup/teardown syntax\r\n* test-data generation function replaced with static data\r\n* docstrings added",
    "head_branch": "test_generate_hooks",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Tests refactoring: test_generate_hooks changed setup/teardown syntax, test-data generation function replaced with static data, docstrings added (#1372)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dad9ac254a19ac29e644",
    "number": 1371,
    "body": "",
    "head_branch": "tests_repository",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Added: docstrings for test files in `tests/repository` directory (#1371)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dad9ac254a19ac29e645",
    "number": 1370,
    "body": "",
    "head_branch": "extended_exception",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Updated: get_config Function exception extended with config file path information (#1370)\n\n* Updated: get_config Function exception now has config file path\r\n\r\n* Tests extended with path check for exception message and docstrings"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dadaac254a19ac29e646",
    "number": 1369,
    "body": "Partial-Fix: #742",
    "head_branch": "test_abbreviation_expansion",
    "is_a_fork": false,
    "comments": [
      "@insspb Please don't keep requesting my review here, I no longer have sufficient time to work on this project."
    ],
    "commit_messages": [
      "Tests refactoring: test_abbreviation_expansion tests replaced by parametrization, docstrings added (#1369)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dadbac254a19ac29e647",
    "number": 1368,
    "body": "Adopts black formatting and runs it as part of the linting process. This should assure that code style is assured by black and we do not have to care about it anymore.\r\n\r\nFixes:  #1305",
    "head_branch": "fi/black",
    "is_a_fork": true,
    "comments": [
      "@inglesp Can you please comment again? Github reports a comment from you which seems impossible to find.",
      "> @inglesp Can you please comment again? Github reports a comment from you which seems impossible to find.\r\n\r\n![image](https://user-images.githubusercontent.com/28734/79645382-e4b76580-81a6-11ea-8f53-c6dadbe3c09b.png)\r\n",
      "Thanks! That GH but is really annoying, the \"hidden comments\". I think last version got the commas sorted.\r\n"
    ],
    "commit_messages": [
      "Added: Black formatting verification for whole project\n\n* Enable black formatting\r\n\r\n* Fixid commas #1368\r\n\r\nCo-authored-by: Andrey Shpak <ashpak@ashpak.ru>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dadcac254a19ac29e648",
    "number": 1367,
    "body": "We no longer need to run AppVeyor because we already have same platforms covered by Travis, in a more reliable format.",
    "head_branch": "ci",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Drop AppVeyor references from documentation\n\nWe no longer run AppVeyor because we already have same\r\nplatforms covered by Travis, in a more reliable format.\r\n\r\nAlso updates contribution guidelines to make them CI/CD agnostic,\r\nmaking easier to perform other changes in the future."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621daddac254a19ac29e649",
    "number": 1366,
    "body": "",
    "head_branch": "docs",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Bulk changelog update for merged pull requests (#1366)\n\n* Add changelog for (#1356)\r\n\r\n* Changelog for #1357\r\n\r\n* Changelog for 1360\r\n\r\n* Changelog update for #1363"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dadeac254a19ac29e64a",
    "number": 1365,
    "body": "",
    "head_branch": "docs-pipeline",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Added: GitHub Action to build Sphinx docs and store artefacts (#1365)\n\n* Added GitHub Action to build Sphinx docs\r\n\r\n* Added GitHub Action to build Sphinx docs\r\n\r\n* Added: GitHub Action to build Sphinx docs and store artefacts\r\n\r\n* Fix naming\r\n\r\n* Add click requirement to docs build\r\n\r\n* Add cookiecutter pre-installation before docs build\r\n\r\n* Add cookiecutter pre-installation before docs build\r\n\r\n* Add cookiecutter pre-installation before docs build\r\n\r\n* Add cookiecutter pre-installation before docs build\r\n\r\n* Drop action, use make.\r\n\r\n* Drop action, use make.\r\n\r\n* Switch to the same version of python, like on read the docs."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dadeac254a19ac29e64b",
    "number": 1363,
    "body": "",
    "head_branch": "drop-appveyor",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Drop appveyor CI/CD (#1363)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dadfac254a19ac29e64c",
    "number": 1362,
    "body": "",
    "head_branch": "labels",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Updated: release-drafter configuration to match our changelog format"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dae0ac254a19ac29e64d",
    "number": 1361,
    "body": "",
    "head_branch": "pull_1331",
    "is_a_fork": false,
    "comments": [
      "> Same problem as with the docstring change, too many unrelated changes squeezed inside a single PR, even if they are against a single file.\r\n> \r\n> Unrelated changes should never be part of the same PR. If you do reformatting, you do not remove outdated project in the same change.\r\n\r\nHere is only 10 lines really changed. All other is reformatting or ordering. Changed lines are dark."
    ],
    "commit_messages": [
      "Reformatted readme file and removed outdated information (#1361)\n\n* Replace hardcoded template listing\r\n\r\nReplaces the hardcoded listing of templates with generic categories pointing to github topic queries.\r\n\r\nThis should cut the big number of listing updates and also provide an unbiased listing method, as github default listing is based on projects popularity (stars).\r\n\r\nWe also need to send en email that warns template publishers to update their topics on github. If possible we should try to send this email before merging the change.\r\n\r\n* New readme.\r\n\r\nCo-authored-by: Sorin Sbarnea <ssbarnea@redhat.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dae1ac254a19ac29e64e",
    "number": 1360,
    "body": "Closes #1359",
    "head_branch": "githubactions",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Add CI/CD steps for Github actions to speedup CI/CD (#1360)\n\n* Add alpha version of github actions CI/CD\r\n\r\n* Fix pypy2 naming.\r\n\r\n* Add pypy3 to travis + verbose tests logging everywhere.\r\n\r\n* Add skip test for pypy3 on Ubuntu travis.\r\n\r\n* Remove pypy tests from windows CI/CD (Broken)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dae1ac254a19ac29e64f",
    "number": 1358,
    "body": "Closes #1357 \r\nCloses #1306 ",
    "head_branch": "pull_1357",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Added debug messages for get_user_config (#1358)\n\n* Added debug messages for get_user_config\r\n\r\nFixes: #1306\r\n\r\n* Logger spelling. (Logs logged before action.\r\n\r\nCo-authored-by: Sorin Sbarnea <ssbarnea@redhat.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dae2ac254a19ac29e650",
    "number": 1357,
    "body": "Fixes: #1306",
    "head_branch": "fix/1306",
    "is_a_fork": true,
    "comments": [
      "While you are added, could you do this change as well:\r\n\r\nhttps://github.com/cookiecutter/cookiecutter/pull/1340/commits/55a342a891ea0ee45b6c9d05a9fde4e494ad60ce",
      "@con-f-use Your change is good but is unrelated, should go in separated PR.",
      "> While you are added, could you do this change as well:\r\n> \r\n> [55a342a](https://github.com/cookiecutter/cookiecutter/commit/55a342a891ea0ee45b6c9d05a9fde4e494ad60ce)\r\n\r\n@con-f-use I have this change in current work (#1354)",
      "@ssbarnea cannot push tou your branches. You changes updated and merged in #1358 "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dae3ac254a19ac29e651",
    "number": 1356,
    "body": "Release Drafter creates and updates draft release notes based on merged PRs and their labels. The bot is already enabled and does never make any releases, only updates the Draft on\r\nhttps://github.com/cookiecutter/cookiecutter/releases",
    "head_branch": "fix/release-drafter",
    "is_a_fork": false,
    "comments": [
      "@ssbarnea  I will update current changelog in one big pull request. I have separated branch localy."
    ],
    "commit_messages": [
      "Configure release-drafter (#1356)\n\n* Configure release-drafter\r\n\r\nRelease Drafter creates and updates draft release notes based\r\non merged PRs and their labels. The bot is already enabled and\r\ndoes never make any releases, only updates the Draft on\r\nhttps://github.com/cookiecutter/cookiecutter/releases\r\n\r\n* Update .github/labels.yml\r\n\r\nCo-Authored-By: Andrey Shpak <insspb@users.noreply.github.com>\r\n\r\n* Update .github/labels.yml\r\n\r\nCo-Authored-By: Andrey Shpak <insspb@users.noreply.github.com>\r\n\r\n* Update .github/labels.yml\r\n\r\nCo-Authored-By: Andrey Shpak <insspb@users.noreply.github.com>\r\n\r\nCo-authored-by: Andrey Shpak <insspb@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dae4ac254a19ac29e652",
    "number": 1355,
    "body": "[XDG Base Directory Specification](https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html) defines is a single base directory relative to which user-specific non-essential (cached) data should be written. This directory is defined by the environment variable $XDG_CACHE_HOME.\r\n\r\nThis commit change directories `cookiecutter_replay` and `cookiecutters` where cookiecutter stores its own data.",
    "head_branch": "XDG_CACHE_HOME",
    "is_a_fork": true,
    "comments": [
      "Related #104 ",
      "@insspb There is a problem with python2.7 32bit from appveyor which failed twice without any explanation. When I added the `-v` to pytest to increase verbosity, it worked. \r\n\r\nI propose we keep the -v to see what happens in the future.",
      "> I propose we keep the -v to see what happens in the future.\r\n\r\n+1 to this idea.",
      "@ssbarnea @luzfcb Agree with -v, about pull request, will review a little bit later. ",
      "I removed this feature from 1.7.1 release because it is introduding a breaking change: the\r\nnew caching directory will be different.\r\n\r\nMy suggestion is that we should merge it  just after we release 1.7.1",
      "* Related to #1309 \r\n* Do not forget to mention @ligurio in project contributors. \r\n",
      "Any manual test was made on Windows?",
      "@luzfcb I am not a big fun of either manual-testing or Windows platform, so you are welcomed to take this challenge. The good part is that we do hae CI/CD running on Windows, and it did not fail.",
      "@ssbarnea please check #971 for same ideas, but with external windows support",
      "Is this PR dead?",
      "More or less. While I do not have time to work on it it worth nothing that there is an even older competing PR that tries to do almost the same.\r\n\r\nI would keep it open until we have a fix merged. Once we have it merged, we can close the other pull requests.",
      "Closing as dead, I hope someone will implement it."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dae5ac254a19ac29e653",
    "number": 1354,
    "body": "Closes #1269 \r\nCloses #742 \r\n\r\nFeel free to check my english, while it is in wip.",
    "head_branch": "D103",
    "is_a_fork": false,
    "comments": [
      "I think that you want  to remove `D103` exclude from `setup.cfg` with this change.",
      "> I think that you want to remove `D103` exclude from `setup.cfg` with this change.\r\n\r\nWant, but when will fixx all 100+ issues.\r\nConverted to draft.",
      "This PR is splited to:\r\n\r\n#1369\r\n#1370\r\n#1371\r\n#1372\r\n#1373\r\n#1374\r\n#1375\r\n#1376\r\n#1377\r\n#1378\r\n#1379\r\n#1380",
      "Please do not touch branch, until other merged. "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dae5ac254a19ac29e654",
    "number": 1353,
    "body": "Closes #1350 \r\nCloses #1352 \r\nCloses #1349 \r\nCloses #1349 \r\nCloses #1347 ",
    "head_branch": "fix-pytest",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Fix pytest warnings, tox coverage, packages compatibility (#1353)\n\n* Fix cov-report tox environment run #1350\r\n\r\n* pytest-catchlog package removed from test_requirements, as now it is included in pytest (#1347)\r\n\r\n* Some packages versions limited to be compatible with python2.7 and python 3.5 (#1349)\r\n\r\n* Added missed coverage lines highlight to pytest-coverage report (#1352)\r\n\r\n* Changelog update for #1352 #1349 #1347"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dae6ac254a19ac29e655",
    "number": 1348,
    "body": "",
    "head_branch": "amey589-add_test",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Add more test to improve branch coverage (#1348)\n\n* add more test to improve branch coverage\r\n\r\n* Add new test to improve tests coverage #1023\r\n\r\nCo-authored-by: Amey Joshi <amey.joshi@simplivity.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dae7ac254a19ac29e656",
    "number": 1346,
    "body": "\r\nTo make sure that our .travis.yml doesn't get errors when validating with https://config.travis-ci.com/explore  it was necessary to\r\n\r\n\r\n- Removed \"sudo: false\" because is deprecated\r\n- Renamed \"matrix\" to \"jobs\" because \"matrix\" is deprecated\r\n- Added \"os: linux\" because now the \"os\" is required on the root section",
    "head_branch": "update-travis-cfg-to-latest-spec",
    "is_a_fork": true,
    "comments": [
      "@luzfcb waiting to pass tests, seems ok. \r\nCan you add changelog?",
      "@luzfcb Nevermind, I will add it in my pull request.",
      "@insspb Sorry, now that I saw that I forgot to include the changelog."
    ],
    "commit_messages": [
      "Update .travis.yml to be compatible with latest travis cfg specs (#1346)\n\n- Removed \"sudo: false\" because is deprecated\r\n\r\n- Renamed \"matrix\" to \"jobs\" because \"matrix\" is deprecated\r\n\r\n- Added \"os: linux\" because now the \"os\" is required on the root section"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dae8ac254a19ac29e657",
    "number": 1345,
    "body": "closes #1310 \r\ncloses #1303",
    "head_branch": "pull/1310",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Update pull #1310 (#1345)\n\n* Replaced click documentation links to point to version 7\r\n\r\n* Add authors and history note for #1303\r\n\r\n* Trailing whitespace fix\r\n\r\n* Restore contribution mention for #1076 #1322\r\n\r\nCo-authored-by: Igor Basko <igor.basko@here.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dae9ac254a19ac29e658",
    "number": 1344,
    "body": "Restore contribution note for @ppanero",
    "head_branch": "fix-history-for-slugify",
    "is_a_fork": false,
    "comments": [
      "@insspb Thanks a lot!"
    ],
    "commit_messages": [
      "Fix readme for #1336"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dae9ac254a19ac29e659",
    "number": 1343,
    "body": "Closes #1307",
    "head_branch": "loggers-fix",
    "is_a_fork": false,
    "comments": [
      "There are some serious performance impact related to use of string formatters on logging because previously the strings where rendered only when the logging level was appropiate. Now they are rendered all the time.\r\n\r\nStill, that should not impact a tool like cookiecutter, which is not running as a service or doing lots of logging, so not really a big deal. I only wanted to mention it because on other projects it could be a real issue."
    ],
    "commit_messages": [
      "Changed format of loggers invocation (#1343)\n\n* Changed format of loggers invocation (#1307)\r\n\r\n* Update changelog #1346\r\n\r\nCo-authored-by: Fábio C. Barrionuevo da Luz <bnafta@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621daeaac254a19ac29e65a",
    "number": 1342,
    "body": "Closes #1321 ",
    "head_branch": "fix-links",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Fix links in main README file.  (#1342)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621daebac254a19ac29e65b",
    "number": 1341,
    "body": "closes #1338 \r\ncloses #1341 \r\ncloses #1326 \r\ncloses #1320 ",
    "head_branch": "DanBoothDev-update-submodule",
    "is_a_fork": false,
    "comments": [
      "#1338"
    ],
    "commit_messages": [
      "Updated submodule to latest version (#1338)\n\n* Updated submodule to latest version\r\n\r\n* Changelog update #1338\r\n\r\nCo-authored-by: Dan Booth <DanBoothDev@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621daecac254a19ac29e65c",
    "number": 1340,
    "body": "In `cookiecutter.json`, you can now use the `_extensions` keyword to import extensions for a new `./extensions` directory in the template (similar to `./hooks/`).\r\n\r\n![image](https://user-images.githubusercontent.com/11145016/79017684-3a21c000-7b72-11ea-9631-f24de32695b4.png)\r\n\r\nFor some related discussion see e.g.: #1211 and #547\r\n\r\nThe [updated documentation](https://github.com/con-f-use/cookiecutter/blob/2bbea175558bf4b7fdb83630ec0d08c029d840b1/docs/advanced/template_extensions.rst) has a more detailed description.\r\n\r\nI would be willing to write additional tests to test this functionality.\r\n\r\nAlso. the \"new in version ???\" from my documentation should be updated before merging and releasing, same as release notes obviously.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "As mentioned, this is similar to #1240 and #944 .\r\n\r\n@ssbarnea @insspb \r\nI'm biased, but I'd gravitate toward my more simple solution that involves less code. For the same reason I'd also vote for using the _extensions keyword in the json for both local and installed extensions.\r\n\r\nIf anything, make the folder name in #1240 just extensions instead of local_extensions to go along with ./hooks/. ",
      "@con-f-use  As I mention earlier some tests required. \r\nAt least these behavior cases should be covered:\r\nUser requested an custom extension, extension exist and work.\r\nUser requested an custom extension, but extension not exist in `extension` folder files.\r\nUser requested an custom extension, file/class exist in folder, but is nor an extension.\r\n\r\nThis feature can be useful for some part of users, who want to deliver own extensions without pip packages. But it is not just path extension.",
      "> User requested an custom extension, but extension not exist in `extension` folder files.\r\n> User requested an custom extension, file/class exist in folder, but is nor an extension\r\n\r\nI wouldn't worry about these two cases. The python import system will catch  the first one. \r\n\r\nFor the last, IMHO it is not necessary to check if it is an extension. If Jinja cannot find the extension, it will complain and I'd leave it to Jinja. Besides we have no way of knowing, whether the user wants to include a pip installed extension with `\"_extensions\": \"SomeName\"`, or if `SomeName` is supposed to be in the `./extension` directory but isn't.\r\n\r\nI'd not explicitly forbid that something other than Jinja extension - it's actually a nice feature if it can be a normal python package or module in there and the directory is not permanently added to the path. Also, we already have arbitrary code execution by virtue of having hooks. Elaborate verification would just over-complicate things with no benefit.\r\n\r\nThat being said, I will write a test, that verifies an actual Jinja2 extension can be imported and used. Just not today ;-)",
      "@con-f-use I just found #1240 and seems it is more correct implementation of same thing and almost done. \r\nI will close this one and #944  as duplicates of #1240"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621daedac254a19ac29e65d",
    "number": 1339,
    "body": "Currently, variables starting with an underscore (which are not shown to the user on project creation) are not rendered with Jinja2. If you want to create one of these variables based on other variables you cannot. For example, if you are creating a Python package repository and want to base the package name on the project name you might have a configuration like this\r\n\r\n```python\r\n{\r\n    \"project_name\": \"Project Name\",\r\n    \"project_slug\": \"{{ cookiecutter.project_name|lower|replace(' ', '-') }}\",\r\n    \"package_name\": \"{{ cookiecutter.project_name|lower|replace(' ', '_') }}\",\r\n}\r\n```\r\n\r\nWhich could create a structure like this\r\n\r\n```\r\nproject-name\r\n├── Makefile\r\n├── README.md\r\n├── requirements.txt\r\n└── src\r\n    ├── project_name\r\n    │   └── __init__.py\r\n    ├── setup.py\r\n    └── tests\r\n        └── __init__.py\r\n```\r\n\r\nHowever, the user can change `project_slug` and `package_slug`. This may be desirable, but (as in my current situation) it may not be. You _could_ create post-generation hooks to fail project creation if these are changed, but this seems inelegant. This PR allows for the configuration to be specified like this\r\n\r\n```python\r\n{\r\n    \"project_name\": \"Project Name\",\r\n    \"_project_slug\": \"{{ cookiecutter.project_name|lower|replace(' ', '-') }}\",\r\n    \"_package_name\": \"{{ cookiecutter.project_name|lower|replace(' ', '_') }}\",\r\n}\r\n```\r\n\r\nThe user then cannot change these variables, enforcing consistent naming.",
    "head_branch": "feature/render-skipped-variables",
    "is_a_fork": true,
    "comments": [
      "I like this very much, as I ran into that very problem as a relatively new user. Perhaps you should add a test and documentation for that as well. Btw. have you checked how that interacts with the replay function / repo updater packages?  \r\n\r\nI'd very much like to see this PR merged soon and making it easy on the developers is a good way.",
      "@con-f-use I'm glad you like it! You're right, I should add a test and some docs, though as far as I could see the underscore variables aren't explicitely tested for or documented (I didn't spend too long looking so may have missed it).\r\n\r\n>have you checked how that interacts with the replay function / repo updater packages?\r\n\r\nI haven't, but all the tests pass so I assume this is fine.\r\n\r\nI'm not sure this will be merged given #1256 Perhaps this could go in the 2.0 release @insspb?",
      "Hi @smoothml \r\nFirst of all - thank you for contribution. I really like this idea. Why I do not done it myself? Haha :)\r\nThen here is my thoughts about it.\r\n\r\n1. Remaking how current underscore works can break current templates. Maybe somebody read this code before and used it as feature for example with numbers. In your case numbers will be converted to string.\r\nHere is code for you, to reproduce what I am talking about:\r\n```python\r\n    def test_should_render_dict(self):\r\n        \"\"\"\r\n\r\n        \"\"\"\r\n        context = {\r\n            'cookiecutter': {\r\n                'project_name': 'Slartibartfast',\r\n                '_project_name': 1123,\r\n                'details': {'other_name': '{{cookiecutter.project_name}}'},\r\n            }\r\n        }\r\n\r\n        cookiecutter_dict = prompt.prompt_for_config(context, no_input=True)\r\n        assert cookiecutter_dict == {\r\n            'project_name': 'Slartibartfast',\r\n            '_project_name': 1123,\r\n            'details': {'other_name': u'Slartibartfast',},\r\n        }\r\n```\r\nThis code will be good with current implementation. Will fail with your proposal. \r\n\r\nSo...\r\n\r\nLet do double underscore for user rendered private variables + docs + test. And it can be included in nearest release after this will be done.\r\n\r\nBut I really like this idea. At least things like this will be shorter: https://github.com/ionelmc/cookiecutter-pylibrary/blob/master/cookiecutter.json\r\n\r\nCurrently included in 1.7.1, but as we are plan to make a release in few days maybe it will not be ready for that time. At this case i will move it to 2.0.",
      "Thanks for your comments @insspb. Good point regarding numbers vs. strings. Double underscores work 👍 I'm not sure I'll be able to get this ready in the next few days so getting it in 2.0 is a good aim I think.",
      "I like this change but please add some tests for it and we should merge it in next major release 1.8.0, not the patch one (1.7.x) due to the risk of breaking existing templates.\r\n\r\nThe risk of breaking templates is small and template authors should already have CI/CD configured to test their templates with cookiecutter from master, running jobs at least weekly. We will always wait at least one week before merging a breaking change and tagging a release or pre-release.",
      "@smoothml still draft?",
      "Yeah, sorry. Been slammed the last couple of weeks. Just docs to go. Will try and get it done this weekend. Sorry for the delay!",
      "@insspb @ssbarnea apologies for the delay. This is ready for review now."
    ],
    "commit_messages": [
      "Render variables starting with an underscore. (#1339)\n\nCo-authored-by: Paul Harrison <paulharrison@ip-192-168-1-10.ec2.internal>\r\nCo-authored-by: Paul Harrison <paulharrison@Pauls-MacBook-Pro.local>\r\nCo-authored-by: Paul Harrison <paul@LAPTOP-16SL8FNL.localdomain>\r\nCo-authored-by: Paul Harrison <paul@harrison.sh>\r\nCo-authored-by: Sorin Sbarnea <ssbarnea@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621daedac254a19ac29e65e",
    "number": 1338,
    "body": "",
    "head_branch": "update-submodule",
    "is_a_fork": true,
    "comments": [
      "Thank you @DanBoothDev \r\nMerged in 1341 with contributors update."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621daeeac254a19ac29e65f",
    "number": 1336,
    "body": "Closes https://github.com/cookiecutter/cookiecutter/issues/1333\r\n\r\nAdded tests and docs.",
    "head_branch": "slugify",
    "is_a_fork": true,
    "comments": [
      "@ppanero Thank you for contribution. \r\n\r\nContribution note added in #1344 "
    ],
    "commit_messages": [
      "Add slugify template filter (#1336)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621daefac254a19ac29e660",
    "number": 1335,
    "body": "Fixed broken tests, probably caused by a change that was merged\r\nwithout waiting for CI results.",
    "head_branch": "fix/ci",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix broken test (#1335)\n\nFixed broken tests, probably caused by a change that was merged\r\nwithout waiting for CI results."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621daf0ac254a19ac29e661",
    "number": 1334,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "I'm really looking forward to `--directory` option. Thx!",
      "@ssbarnea \r\nNot sure about 1.7.2\r\nAs it seems life introduced new problems and fast releases currently not possible. Maybe we should concentrate on 2.0 or 1.8? Like in project plna. What you think? \r\nCatch me in slack to talk. ",
      "@ssbarnea I will close it, just because I will make release manually this time. Do not waste you time on this :) Thanks"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621daf1ac254a19ac29e662",
    "number": 1332,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Minor gramatical fix. (#1332)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621daf1ac254a19ac29e663",
    "number": 1331,
    "body": "Replaces the hardcoded listing of templates with generic categories pointing to github topic queries.\r\n\r\nThis should cut the big number of listing updates and also provide an unbiased listing method, as github default listing is based on projects popularity (stars).\r\n\r\nWe also need to send en email that warns template publishers to update their topics on github. If possible we should try to send this email before merging the change.",
    "head_branch": "listings",
    "is_a_fork": true,
    "comments": [
      "@ssbarnea Cannot push to you repo... Included in #1361 ",
      "This PR not updated and not containing all updates. Please review #1361"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621daf2ac254a19ac29e664",
    "number": 1330,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Hi @dibby-dibby, thank you for contribution. Can you write some tests for this feature? ",
      "@dibby-dibby I merged current master and updated current tests so everything working now. \r\nBut we still waiting dedicated tests for your feature.",
      "Hi @dibby-dibby \r\n\r\nThank you for contribution. After some investigation  I found another PR with same function and extended options. Look at #992 \r\n\r\nI cannot merge both of pull requests. Pull request #992 has tests, so #992 will be merged in Cookiecutter 2.0",
      "I didn't have the time to write the tests, so I'm sorry for this :(\r\nBut I'm happy to hear that the feature will be available :)\r\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621daf3ac254a19ac29e665",
    "number": 1329,
    "body": "cmake w/ conan",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Read the docs, we no longer add new entries.",
      "@kassane Please look at https://github.com/cookiecutter/cookiecutter/pull/1331/files -- as long you add the right topics your template will be visible."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621daf4ac254a19ac29e666",
    "number": 1323,
    "body": "",
    "head_branch": "fix-cookiecutter-doc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix documentation typo (#1323)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621daf5ac254a19ac29e667",
    "number": 1322,
    "body": "Indent fields in `default_context` so that copy-pasting the snippet into `.cookiecutterrc` works.\r\nYaml is sensitive to indentation and it doesn't work as is now.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "@mhsekhavat thank you for contribution. Contribution mention restored in #1345 "
    ],
    "commit_messages": [
      "Fix indentation of .cookiecutterrc in README.md (#1322)\n\nIndent fields in `default_context` so that copy-pasting the snippet into `.cookiecutterrc` works.\r\nYaml is sensitive to indentation and it doesn't work as is now."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621daf5ac254a19ac29e668",
    "number": 1318,
    "body": "",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "update url for cookiecutter-flask-skeleton (#1318)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621daf6ac254a19ac29e669",
    "number": 1313,
    "body": "I just created a new cookiecutter template for Python packages using Python poetry, GitHub Actions, Sphinx & Read the Docs and automatic version bumping via python-semantic-release. Default behaviour is to publish to testPyPI, however docs explain how to modify this to PyPI.\r\n\r\nWas primarily developed for teaching students in the classroom but might be helpful to others.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Please read https://github.com/cookiecutter/cookiecutter/blob/master/README.md#a-pantry-full-of-cookiecutters as we no longer accept new listings.",
      "Hi @ttimbers! 👋 \r\n\r\nThank you for submitting a pull-request to Cookiecutter! 🍪 \r\n\r\nA decision was made to not list templates on the project README file going forward. You can find out more about this on the [A Pantry Full of Cookiecutters](https://cookiecutter.readthedocs.io/en/1.7.0/README.html#a-pantry-full-of-cookiecutters) page of the documentation.\r\n\r\nSorry about that.",
      "I don't appreciate that tone of voice, @ssbarnea. Please use empathy when talking and interacting with contributors to Cookiecutter. 😞 ",
      "@habnabit I rephrased the explanation. I also proposed https://github.com/cookiecutter/cookiecutter/pull/1331/files which should put an end to the incoming pull requests, but we need to be careful how we do the transition, assuring that we give people time to edit their topics, lots of projects do not have any added yet."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621daf7ac254a19ac29e66a",
    "number": 1310,
    "body": "Related to issue #1303 ",
    "head_branch": "update-http-links-current-click",
    "is_a_fork": true,
    "comments": [
      "Thank you @igorbasko01 will merge in hour in #1345 with contribution mention. "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621daf8ac254a19ac29e66b",
    "number": 1309,
    "body": "[XDG Base Directory Specification](https://specifications.freedesktop.org/basedir-spec/basedir-spec-latest.html) defines is a single base directory relative to which user-specific non-essential (cached) data should be written. This directory is defined by the environment variable $XDG_CACHE_HOME.\r\n\r\nThis commit change directories `cookiecutter_replay` and `cookiecutters` where cookiecutter stores its own data.",
    "head_branch": "XDG_CACHE_HOME",
    "is_a_fork": true,
    "comments": [
      "Very good idea! I am waiting to see the CI green.",
      "Can you please resolve conflicts?",
      "Hi @ligurio! 👋 \r\n\r\nThe environment variable `XDG_CACHE_HOME` does not seem to be set on my mac OS devices. I don't think we can merge this pull-request. 😟",
      "pip has implemented a module only to discover some user-related directories, like cache dir:\r\n\r\nhttps://github.com/pypa/pip/blob/master/src/pip/_vendor/appdirs.py#L264-L322\r\nhttps://github.com/pypa/pip/blob/master/src/pip/_vendor/appdirs.LICENSE.txt\r\n",
      "A big red **warning**: never ever consider importing anything from pip module because the maintenance team stated multiple times that their own API is the command line. They do not support any kind import from pip. \r\n\r\nThere is also a module doing the same on https://pypi.org/project/appdirs/ but I did not see it updated in long time and I do not want to go nodejs path where there is a package for everything. \r\n\r\nI used the `os.getenv(\"XDG_CACHE_HOME\", os.path.expanduser(\"~/.cache\"))` approach in lots of cross platform projects without any issues. My main development machine are MacOS based so I care a lot about not breaking on them.\r\n\r\n",
      "I do not have such variable on Ubuntu. What I do wrong? \r\nAs i see it is archlinux stuff. \r\nI do not think that we should merge something, that will not work on different systems.",
      "Did you read the specification paragraph? It does not state anywhere that the variable must be defined, it does clearly specify what default value should be used when not defined. In fact 99% of systems do not have it defined but programs will respect it if defined. In fact there is a 9/10 chance that any program creating files there will already use the variable. The exceptions are those the did not bother to read the spec. XDG sped got a lot of popularity in the last years and that part of the spec is already used by lots of tools that have nothing to do with X/GUI.",
      "Ehrm, it's a pretty widely adopted thing, not just  \"achlinux stuff\". Quite the opposite really it aims to be cross-platform. You might know it as the [freedesktop](https://en.wikipedia.org/wiki/Freedesktop.org) specification. Even Ubuntu implements part of the XDG specification, i.e. you will probably have `$XDG_DATA_DIRS` defined on your Ubuntu. **I vote to re-open!** If you look closely at the PR, it will default to `~/.cache/` if the variable is not defined. \r\n\r\nIt's very much a natural extension of when programs moved to storing their config in `~/.config/` rather than cluttering the home directory with tons of uninteresting user config. Same goes for the introduction of `~/.local/`.",
      "Reopening it as I think it was closed due to a confusion, but it still needs few fixes: doc line and CI, where user home was not expanded.",
      "Hi @ligurio, this taken into the work by core commiter @ssbarnea . his PR includes your changes, and you will be mentioned in contributors list. \r\nI will close this PR in flavor to #1355 \r\nPlease keep all discussion there.\r\nPlease review @ssbarnea changes, as you more involved in this topic. ",
      "@insspb Thanks!"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621daf9ac254a19ac29e66c",
    "number": 1308,
    "body": "…a hyphen that had broken the current link.",
    "head_branch": "fix-broken-readme-link",
    "is_a_fork": true,
    "comments": [
      "Not sure why the percentage is at 99.87%, all I changed was a line in the Readme. ",
      "Hi @joshbangle, thank you for contribution. I just found this pull request, but I already fixed same issue in #1342 "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621daf9ac254a19ac29e66d",
    "number": 1304,
    "body": "Closes #1302 \r\nCloses #1267 \r\nCloses #1266 \r\nCloses #1264",
    "head_branch": "code-linting",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Code linting (#1304)\n\n* Explain docstring ignore rules #1302\r\n\r\n* Fix and remove D100 warning from files and config\r\n\r\n* Activate rule: D400: First line should end with a period\r\n\r\n* D103: Missing docstring in public function fix p1\r\n\r\n* D103: Missing docstring in public function fix p2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dafaac254a19ac29e66e",
    "number": 1300,
    "body": "closes #1301 ",
    "head_branch": "travis-windows",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Speed up CI/CD extend travis with windows support (#1300)\n\n* Speed up CI/CD extend travis with windows support\r\n\r\n* Fix travis windows test\r\n\r\n* Changelog update for #1300 #1301"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dafbac254a19ac29e66f",
    "number": 1299,
    "body": "",
    "head_branch": "revert_black_support",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Revert black implementation (#1299)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dafcac254a19ac29e670",
    "number": 1297,
    "body": "closes #1295",
    "head_branch": "python3.8",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Add/fix python 3.8 and pypy tests and notes (#1295) (#1297)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dafdac254a19ac29e671",
    "number": 1296,
    "body": "Some changes in changelog not mentioned, as not confirmed to be done properly.\r\n\r\nCloses #1294 ",
    "head_branch": "restore_changelog",
    "is_a_fork": false,
    "comments": [
      "My impression was that release-drafter generated https://github.com/cookiecutter/cookiecutter/releases was a good replacement for the changelog, one based on PR metadata, easily to fix post merge."
    ],
    "commit_messages": [
      "Restore changelog (#1296)\n\n* Most changes for commits since 1.7.0 (#1294)\r\n\r\n* Add nicain for PR #1293\r\n\r\n* Note for (#1295, #1297)\r\n\r\n* @asottile added for PR #941\r\n\r\n* @croesnick added for PR #1283\r\n\r\n* Add @ssbarnea work notes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dafdac254a19ac29e672",
    "number": 1293,
    "body": "This change will make the dumped json file in replay easier on the eyes, and grep/find-able",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "@nicain nice. Approved."
    ],
    "commit_messages": [
      "Update replay.py json.dump indent for easy viewing (#1293)\n\nThis change will make the dumped json file in replay easier on the eyes, and grep/find-able"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dafeac254a19ac29e673",
    "number": 1291,
    "body": "As I am currently writing and refactoring my first cookiecutter template, chances are quite good I am missing on some already existing functionality. 🙂 So please tell me if what I am trying to achieve is already possible.\r\n\r\n### Situation\r\n\r\nWhile refactoring my template, I tried extracting common functionality (like formatting and conversion functions) into custom extensions. An example of such a conversion would be to reformat a given project name into a valid Python module name (no leading non-word characters, no leading numbers, non-word characters replaced by underscores). I created an `extensions` below my template's root, made it a module (added `__init__.py`), and wrote said extensions. Finally, I added the extensions to my `cookiecutter.json`'s `_extensions` list; e.g., `\"extensions\": [\"extensions.naming.ModuleNameExtension\"]`.\r\n\r\n### Issue\r\n\r\nAs `extensions` is not within my PYTHONPATH, cookiecutter fails to find my modules (custom extensions).\r\n\r\n### Proposal\r\n\r\nAuto-prepend `repo_dir` to `sys.path` in order to make custom Python modules (e.g., extensions) available to cookiecutter.\r\n\r\nDownside: Custom modules might shadow other identically-named modules.",
    "head_branch": "feature/local-extensions",
    "is_a_fork": true,
    "comments": [
      "Duplicate of #1240",
      "@croesnick thank you for contribution, but as you mentioned above it is duplicate. \r\nOriginal issue already in plan.\r\nNot sure about time forsing for original issue, but will look on it again, after dealing with current repo status."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621daffac254a19ac29e674",
    "number": 1290,
    "body": "",
    "head_branch": "rules",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db00ac254a19ac29e675",
    "number": 1289,
    "body": "Fixes linting rules to match black requirements and documents exceptions.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Enable black\n\nFixes linting rules to match black requirements and documents\nexceptions."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db01ac254a19ac29e676",
    "number": 1288,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "D200 rule activation\n\nEnables and fixes:\nD200 One-line docstring should fit on one line with quotes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db02ac254a19ac29e677",
    "number": 1287,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "D205: rule activation (#1287)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db02ac254a19ac29e678",
    "number": 1286,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "D205: rule activation (#1286)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db03ac254a19ac29e679",
    "number": 1285,
    "body": "Fixes D401 rule and activates it.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "D401 rule activation (#1285)\n\nFixes D401 rule and activates it."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db04ac254a19ac29e67a",
    "number": 1284,
    "body": "Initial enablement of docstrings checks which solves only few rules:\r\nD105, D107, D209\r\n\r\nAll the others are put with skip and we welcome having them fixed\r\none by one in individual PR which also remove the skip.\r\n\r\nThat is the only way such change can be tested correctly on CI.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "test: enable flake8-docstrings (#1284)\n\nInitial enablement of docstrings checks which solves only few rules:\r\nD105, D107, D209\r\n\r\nAll the others are put with skip and we welcome having them fixed\r\none by one in individual PR which also remove the skip.\r\n\r\nThat is the only way such change can be tested correctly on CI."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db05ac254a19ac29e67b",
    "number": 1283,
    "body": "Took the list generated by `pycodestyle --select=D100` and added docstrings for each entry. Also took the liberty to reorder imports in files touched to follow the usual order (builtin-external-internal, `import` before `from .. import ..`, lexicographical).\r\n\r\nSolves GH-1269",
    "head_branch": "feature/bof-docstring",
    "is_a_fork": true,
    "comments": [
      "Please rework this and remove D100 from setup.cfg as part of it.",
      "@croesnick I am afraid you need need to rebase, please don't lose hope, we are getting close. ;)",
      "@ssbarnea No worries 🙂 Hope I caught all docstrings now. Linting results look good at least.",
      "Ping me when conflicts are sorted and gree, I will be happy to merge it.",
      "@ssbarnea: Rebased the branch on current master & squashed the commits to get a clean history. 🙂 ",
      "@croesnick Thanks. You did great here, this was the biggest non-conformance. If you also want to address the others, you are more than welcome. One by one."
    ],
    "commit_messages": [
      "Add docstring headers to all files, resolving pycodestyle D100"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db05ac254a19ac29e67c",
    "number": 1282,
    "body": "I think the community has moved from Gitter to Slack a few months ago. This makes it official in the README. Let me know if other places needs to be updated in the documentation.\r\n\r\nI made up a badge with shield.io, feedback welcome for the colour and copy in it.",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [
      "Did it? I am not sure I follow either of them actively so I will let others to vote on this."
    ],
    "commit_messages": [
      "Replace Gitter links by Slack"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db06ac254a19ac29e67d",
    "number": 1279,
    "body": "This disables the comment from codecov.io about the code coverage.\r\n\r\nThe report is still produced and the check will report red if it fails.\r\nUser can always click the link to see what failed.\r\n\r\nThis should declutter the reviewing process.",
    "head_branch": "fix/coverage",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "ci: disable coverage comment (#1279)\n\nThis disables the comment from codecov.io about the code coverage.\r\n\r\nThe report is still produced and the check will report red if it fails.\r\nUser can always click the link to see what failed.\r\n\r\nThis should declutter the reviewing process."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db07ac254a19ac29e67e",
    "number": 1278,
    "body": "This is a first step towards full PEP257 compliance. It includes a\r\nseries of excludes in order to keep the change size manageable.\r\n\r\nPlease raise follow-ups which remove excludes one-by-one.\r\n\r\nRelated: #1263",
    "head_branch": "fix/docstyle",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1278?src=pr&el=h1) Report\n> Merging [#1278](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1278?src=pr&el=desc) into [master](https://codecov.io/gh/cookiecutter/cookiecutter/commit/3caa16158312696d7f63ced2ebfe80f2e4207442?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1278/graphs/tree.svg?width=650&token=8kF8iLUMJE&height=150&src=pr)](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1278?src=pr&el=tree)\n\n```diff\n@@          Coverage Diff           @@\n##           master   #1278   +/-   ##\n======================================\n  Coverage     100%    100%           \n======================================\n  Files          18      18           \n  Lines         805     804    -1     \n======================================\n- Hits          805     804    -1\n```\n\n\n| [Impacted Files](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1278?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [cookiecutter/extensions.py](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1278/diff?src=pr&el=tree#diff-Y29va2llY3V0dGVyL2V4dGVuc2lvbnMucHk=) | `100% <ø> (ø)` | :arrow_up: |\n| [cookiecutter/cli.py](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1278/diff?src=pr&el=tree#diff-Y29va2llY3V0dGVyL2NsaS5weQ==) | `100% <0%> (ø)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1278?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1278?src=pr&el=footer). Last update [3caa161...78b2cd1](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1278?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
      "Please review, I cannot do it myself."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db08ac254a19ac29e67f",
    "number": 1277,
    "body": "I'm glad to present to the community my template for python3 projects based on asyncio/aiohttp with uvloop (ultra fast event loop implementation). \r\n\r\nRead why [uvloop: Blazing fast Python networking](https://magic.io/blog/uvloop-blazing-fast-python-networking/), *TLDR* \r\n`In fact, it is at least 2x faster than nodejs, gevent, as well as any other Python asynchronous framework. The performance of uvloop-based asyncio is close to that of Go programs.`\r\n\r\nSuccessfully used on several projects for high-load Public API, mobile app backends, but universally like aiohttp himself. I hope this will be useful to someone else.",
    "head_branch": "cookiecutter-aiohttp-uvloop-introduced",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1277?src=pr&el=h1) Report\n> Merging [#1277](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1277?src=pr&el=desc) into [master](https://codecov.io/gh/cookiecutter/cookiecutter/commit/1ac5a42b1e49f886eadc7258e687223dca33167e?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1277/graphs/tree.svg?width=650&token=8kF8iLUMJE&height=150&src=pr)](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1277?src=pr&el=tree)\n\n```diff\n@@          Coverage Diff           @@\n##           master   #1277   +/-   ##\n======================================\n  Coverage     100%    100%           \n======================================\n  Files          18      18           \n  Lines         785     785           \n======================================\n  Hits          785     785\n```\n\n\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1277?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1277?src=pr&el=footer). Last update [1ac5a42...46dd07d](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1277?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
      "We are no longer listing templates in the readme, read https://github.com/cookiecutter/cookiecutter/blob/master/README.md#a-pantry-full-of-cookiecutters and just add the right topic to your repository on github.",
      "I think the project is really dead.",
      "Remove other templates from readme so segmented community members be in equal conditions. As developer I personally recomends that all just use yoman there project is alive and where projects templates can be useful.",
      "Yoman have ecosystem - cookiecutter is not.",
      "@osminogin With all due respect for alternatives, which I looked upon myself,  cookiecutter is not dead, is only in a transitional phase. Cookiecutter is python based and most its users like that, yoman is from JS world. Cookiecutter is a dependency of many python packages, which yoman will never be (unless there is a python port).\r\n\r\nIn number cookiecutter still has >11K start on github, while yoman does not even reach 1K.\r\n\r\nPlease read at least the project README when preparing a PR, the template listing was clearly documented there.\r\n\r\nAbout community..., we can do better, we messed few things like moving between chat platforms too often.\r\n\r\nPS. Try to be more constructive in comments, flames are not appreciated anywhere."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db09ac254a19ac29e680",
    "number": 1276,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1276?src=pr&el=h1) Report\n> Merging [#1276](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1276?src=pr&el=desc) into [master](https://codecov.io/gh/cookiecutter/cookiecutter/commit/1ac5a42b1e49f886eadc7258e687223dca33167e?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1276/graphs/tree.svg?width=650&token=8kF8iLUMJE&height=150&src=pr)](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1276?src=pr&el=tree)\n\n```diff\n@@          Coverage Diff           @@\n##           master   #1276   +/-   ##\n======================================\n  Coverage     100%    100%           \n======================================\n  Files          18      18           \n  Lines         785     785           \n======================================\n  Hits          785     785\n```\n\n\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1276?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1276?src=pr&el=footer). Last update [1ac5a42...5219e25](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1276?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
      "Hi @Benjamin-Lee, we decided to stop including new templates in core documentation. \r\nPlease use github tags to share your template. Thank you"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db09ac254a19ac29e681",
    "number": 1275,
    "body": "This should fix #1264 ",
    "head_branch": "pep257_docstring_for_docs_conf",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1275?src=pr&el=h1) Report\n> Merging [#1275](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1275?src=pr&el=desc) into [master](https://codecov.io/gh/cookiecutter/cookiecutter/commit/1ac5a42b1e49f886eadc7258e687223dca33167e?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1275/graphs/tree.svg?width=650&token=8kF8iLUMJE&height=150&src=pr)](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1275?src=pr&el=tree)\n\n```diff\n@@          Coverage Diff           @@\n##           master   #1275   +/-   ##\n======================================\n  Coverage     100%    100%           \n======================================\n  Files          18      18           \n  Lines         785     785           \n======================================\n  Hits          785     785\n```\n\n\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1275?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1275?src=pr&el=footer). Last update [1ac5a42...f9b1ea2](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1275?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
      "Copying a function name to a docstring is not documenting.",
      "Not sure what should be the documenting for these magic methods."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db0aac254a19ac29e682",
    "number": 1274,
    "body": "- Add docstring for tests/test-extensions/hello_extension/hello_extenson.py\r\n- This should fix #1267 ",
    "head_branch": "pep257_docstring_for_hello_extension",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1274?src=pr&el=h1) Report\n> Merging [#1274](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1274?src=pr&el=desc) into [master](https://codecov.io/gh/cookiecutter/cookiecutter/commit/1ac5a42b1e49f886eadc7258e687223dca33167e?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1274/graphs/tree.svg?width=650&token=8kF8iLUMJE&height=150&src=pr)](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1274?src=pr&el=tree)\n\n```diff\n@@          Coverage Diff           @@\n##           master   #1274   +/-   ##\n======================================\n  Coverage     100%    100%           \n======================================\n  Files          18      18           \n  Lines         785     784    -1     \n======================================\n- Hits          785     784    -1\n```\n\n\n| [Impacted Files](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1274?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [cookiecutter/cli.py](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1274/diff?src=pr&el=tree#diff-Y29va2llY3V0dGVyL2NsaS5weQ==) | `100% <0%> (ø)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1274?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1274?src=pr&el=footer). Last update [1ac5a42...b843268](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1274?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
      "Copying a function name to a docstring is not documenting."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db0bac254a19ac29e683",
    "number": 1273,
    "body": "This will fix #1265 ",
    "head_branch": "pep257_docstring_for_docs_init",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1273?src=pr&el=h1) Report\n> Merging [#1273](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1273?src=pr&el=desc) into [master](https://codecov.io/gh/cookiecutter/cookiecutter/commit/1ac5a42b1e49f886eadc7258e687223dca33167e?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1273/graphs/tree.svg?width=650&token=8kF8iLUMJE&height=150&src=pr)](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1273?src=pr&el=tree)\n\n```diff\n@@          Coverage Diff           @@\n##           master   #1273   +/-   ##\n======================================\n  Coverage     100%    100%           \n======================================\n  Files          18      18           \n  Lines         785     785           \n======================================\n  Hits          785     785\n```\n\n\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1273?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1273?src=pr&el=footer). Last update [1ac5a42...e569302](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1273?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
    ],
    "commit_messages": [
      "Add pep257 docstring for docs/__init__.py (#1273)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db0cac254a19ac29e684",
    "number": 1272,
    "body": "This should fix #1263 ",
    "head_branch": "pep257_docstrings_for_tests_conftest",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1272?src=pr&el=h1) Report\n> Merging [#1272](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1272?src=pr&el=desc) into [master](https://codecov.io/gh/cookiecutter/cookiecutter/commit/1ac5a42b1e49f886eadc7258e687223dca33167e?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1272/graphs/tree.svg?width=650&token=8kF8iLUMJE&height=150&src=pr)](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1272?src=pr&el=tree)\n\n```diff\n@@          Coverage Diff           @@\n##           master   #1272   +/-   ##\n======================================\n  Coverage     100%    100%           \n======================================\n  Files          18      18           \n  Lines         785     785           \n======================================\n  Hits          785     785\n```\n\n\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1272?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1272?src=pr&el=footer). Last update [1ac5a42...10b09dd](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1272?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
    ],
    "commit_messages": [
      "Add pep257 docstring suggestions for tests/conftests.py (#1272)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db0dac254a19ac29e685",
    "number": 1271,
    "body": "This should fix #1263 ",
    "head_branch": "docstrings_for_tests_conftest",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db0dac254a19ac29e686",
    "number": 1270,
    "body": "- This will fix #1268 \r\n- Adding PEP257 doctring for \"./tests/replay/conftest.py\"",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1270?src=pr&el=h1) Report\n> Merging [#1270](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1270?src=pr&el=desc) into [master](https://codecov.io/gh/cookiecutter/cookiecutter/commit/1ac5a42b1e49f886eadc7258e687223dca33167e?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1270/graphs/tree.svg?width=650&token=8kF8iLUMJE&height=150&src=pr)](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1270?src=pr&el=tree)\n\n```diff\n@@          Coverage Diff           @@\n##           master   #1270   +/-   ##\n======================================\n  Coverage     100%    100%           \n======================================\n  Files          18      18           \n  Lines         785     785           \n======================================\n  Hits          785     785\n```\n\n\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1270?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1270?src=pr&el=footer). Last update [1ac5a42...1b294e9](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1270?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
    ],
    "commit_messages": [
      "Add docstrings for \"./tests/replay/conftest.py\" (#1270)\n\n* Ran pep257 for replay.py\r\n\r\nWorking on #742, added pep257 recommendations on replay.py file.\r\n\r\n* Ran pep257 for tests/replay/conftest.py\r\n\r\n* Fix flake8 error."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db0eac254a19ac29e687",
    "number": 1262,
    "body": "",
    "head_branch": "fix-1236",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1262?src=pr&el=h1) Report\n> Merging [#1262](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1262?src=pr&el=desc) into [master](https://codecov.io/gh/cookiecutter/cookiecutter/commit/e5d5c1d8f1d8f63f8515004bbc11ad2caf287603?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1262/graphs/tree.svg?width=650&token=8kF8iLUMJE&height=150&src=pr)](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1262?src=pr&el=tree)\n\n```diff\n@@          Coverage Diff           @@\n##           master   #1262   +/-   ##\n======================================\n  Coverage     100%    100%           \n======================================\n  Files          18      18           \n  Lines         785     785           \n======================================\n  Hits          785     785\n```\n\n\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1262?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1262?src=pr&el=footer). Last update [e5d5c1d...151b823](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1262?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
    ],
    "commit_messages": [
      "Updated docstrings in test_unzip.py to better match pep257 (#1236) (#1262)\n\nUpdated docstrings in test_unzip.py to better match pep257 (#1236) (#1262)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db0fac254a19ac29e688",
    "number": 1261,
    "body": "",
    "head_branch": "pep-exceptions",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1261?src=pr&el=h1) Report\n> Merging [#1261](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1261?src=pr&el=desc) into [master](https://codecov.io/gh/cookiecutter/cookiecutter/commit/bc1ff912bcf0026e57347dc89edf4e016fcf94d4?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1261/graphs/tree.svg?width=650&token=8kF8iLUMJE&height=150&src=pr)](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1261?src=pr&el=tree)\n\n```diff\n@@          Coverage Diff           @@\n##           master   #1261   +/-   ##\n======================================\n  Coverage     100%    100%           \n======================================\n  Files          18      18           \n  Lines         785     785           \n======================================\n  Hits          785     785\n```\n\n\n| [Impacted Files](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1261?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [cookiecutter/exceptions.py](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1261/diff?src=pr&el=tree#diff-Y29va2llY3V0dGVyL2V4Y2VwdGlvbnMucHk=) | `100% <100%> (ø)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1261?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1261?src=pr&el=footer). Last update [bc1ff91...14e6158](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1261?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db10ac254a19ac29e689",
    "number": 1260,
    "body": "",
    "head_branch": "version-bump",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1260?src=pr&el=h1) Report\n> Merging [#1260](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1260?src=pr&el=desc) into [master](https://codecov.io/gh/cookiecutter/cookiecutter/commit/43c0ccfbdc0d7560aacf4ee135415497e48bdfe9?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1260/graphs/tree.svg?width=650&token=8kF8iLUMJE&height=150&src=pr)](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1260?src=pr&el=tree)\n\n```diff\n@@          Coverage Diff           @@\n##           master   #1260   +/-   ##\n======================================\n  Coverage     100%    100%           \n======================================\n  Files          18      18           \n  Lines         785     785           \n======================================\n  Hits          785     785\n```\n\n\n| [Impacted Files](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1260?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [cookiecutter/\\_\\_init\\_\\_.py](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1260/diff?src=pr&el=tree#diff-Y29va2llY3V0dGVyL19faW5pdF9fLnB5) | `100% <100%> (ø)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1260?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1260?src=pr&el=footer). Last update [43c0ccf...0961364](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1260?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
    ],
    "commit_messages": [
      "Version bump to 1.7.0 (#1260)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db11ac254a19ac29e68a",
    "number": 1259,
    "body": "",
    "head_branch": "contribs-change",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1259?src=pr&el=h1) Report\n> Merging [#1259](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1259?src=pr&el=desc) into [master](https://codecov.io/gh/cookiecutter/cookiecutter/commit/43c0ccfbdc0d7560aacf4ee135415497e48bdfe9?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1259/graphs/tree.svg?width=650&token=8kF8iLUMJE&height=150&src=pr)](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1259?src=pr&el=tree)\n\n```diff\n@@          Coverage Diff           @@\n##           master   #1259   +/-   ##\n======================================\n  Coverage     100%    100%           \n======================================\n  Files          18      18           \n  Lines         785     785           \n======================================\n  Hits          785     785\n```\n\n\n| [Impacted Files](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1259?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [cookiecutter/replay.py](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1259/diff?src=pr&el=tree#diff-Y29va2llY3V0dGVyL3JlcGxheS5weQ==) | `100% <0%> (ø)` | :arrow_up: |\n| [cookiecutter/exceptions.py](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1259/diff?src=pr&el=tree#diff-Y29va2llY3V0dGVyL2V4Y2VwdGlvbnMucHk=) | `100% <0%> (ø)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1259?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1259?src=pr&el=footer). Last update [43c0ccf...1e9303c](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1259?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
    ],
    "commit_messages": [
      "History and authors update\n\n* History and authors update\r\n\r\n* Added author of #1237\r\n\r\n* Added author of #1234\r\n\r\n* Added author of #1236, #1262"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db11ac254a19ac29e68b",
    "number": 1257,
    "body": "Our appveyor is dependency dependent, so we need constantly update it.",
    "head_branch": "fix-tests",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1257?src=pr&el=h1) Report\n> Merging [#1257](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1257?src=pr&el=desc) into [master](https://codecov.io/gh/cookiecutter/cookiecutter/commit/72322521b7c401916ed71a2a4f0aec048f5060d2?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1257/graphs/tree.svg?width=650&token=8kF8iLUMJE&height=150&src=pr)](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1257?src=pr&el=tree)\n\n```diff\n@@          Coverage Diff           @@\n##           master   #1257   +/-   ##\n======================================\n  Coverage     100%    100%           \n======================================\n  Files          18      18           \n  Lines         785     785           \n======================================\n  Hits          785     785\n```\n\n\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1257?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1257?src=pr&el=footer). Last update [7232252...c4fa3be](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1257?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
    ],
    "commit_messages": [
      "Fix tox dependencies versions for tests (#1257)\n\nFix tox dependencies versions for tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db12ac254a19ac29e68c",
    "number": 1255,
    "body": "https://github.com/wemake-services/wemake-python-package",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [
      "We will not merge templates in cookiecutter library. We cannot control the templates lifecycle, so we decided to exclude all templates from project in the next version. \r\nPlease check #1182 for discussion\r\nAnd this is quote from our main page with instructions:\r\n\r\n> You can check all cookiecutter templates on GitHub. If you are template publisher keep in mind to add the cookiecutter-template topic to your repository and the correct language tags.\r\n\r\n> Please avoid creating PRs for listing additional templates. We outsourced their listing due to extra maintenance required to review them. We will likely replace the lists below with links to GitHub queries for each category.\r\n\r\nBy the way you have no cookiecutter mention in branch name, so it will be hard to find it."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db13ac254a19ac29e68d",
    "number": 1254,
    "body": "",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [
      "Thank you",
      "# [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1254?src=pr&el=h1) Report\n> Merging [#1254](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1254?src=pr&el=desc) into [master](https://codecov.io/gh/cookiecutter/cookiecutter/commit/72322521b7c401916ed71a2a4f0aec048f5060d2?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1254/graphs/tree.svg?width=650&token=8kF8iLUMJE&height=150&src=pr)](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1254?src=pr&el=tree)\n\n```diff\n@@          Coverage Diff           @@\n##           master   #1254   +/-   ##\n======================================\n  Coverage     100%    100%           \n======================================\n  Files          18      18           \n  Lines         785     785           \n======================================\n  Hits          785     785\n```\n\n\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1254?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1254?src=pr&el=footer). Last update [7232252...6a3a0f6](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1254?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
    ],
    "commit_messages": [
      "Updates REAMDE.md with svg badge (#1254)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db14ac254a19ac29e68e",
    "number": 1252,
    "body": "Thanks for the great project. Is it appropriate for me to suggest adding a link\nto a cookiecutter that I have created, with others?",
    "head_branch": "add-scientific-python-cookiecutter",
    "is_a_fork": true,
    "comments": [
      "We will not merge templates in cookiecutter library. We cannot control the templates lifecycle, so we decided to exclude all templates from project in the next version. \r\nPlease check #1182 for discussion\r\nAnd this is quote from our main page with instructions:\r\n\r\n> You can check all cookiecutter templates on GitHub. If you are template publisher keep in mind to add the cookiecutter-template topic to your repository and the correct language tags.\r\n\r\n> Please avoid creating PRs for listing additional templates. We outsourced their listing due to extra maintenance required to review them. We will likely replace the lists below with links to GitHub queries for each category."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db15ac254a19ac29e68f",
    "number": 1249,
    "body": "I think this example should have an endif Jinja2 template statement at the end of it, for it to be a working example",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1249?src=pr&el=h1) Report\n> Merging [#1249](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1249?src=pr&el=desc) into [master](https://codecov.io/gh/cookiecutter/cookiecutter/commit/72322521b7c401916ed71a2a4f0aec048f5060d2?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1249/graphs/tree.svg?width=650&token=8kF8iLUMJE&height=150&src=pr)](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1249?src=pr&el=tree)\n\n```diff\n@@          Coverage Diff           @@\n##           master   #1249   +/-   ##\n======================================\n  Coverage     100%    100%           \n======================================\n  Files          18      18           \n  Lines         785     785           \n======================================\n  Hits          785     785\n```\n\n\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1249?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1249?src=pr&el=footer). Last update [7232252...6cf2e77](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1249?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
    ],
    "commit_messages": [
      "Add missing {% endif %} to Choice Variables example (#1249)\n\nAdd missing {% endif %} to Choice Variables example."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db15ac254a19ac29e690",
    "number": 1248,
    "body": "",
    "head_branch": "add-main-comments",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1248?src=pr&el=h1) Report\n> Merging [#1248](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1248?src=pr&el=desc) into [master](https://codecov.io/gh/cookiecutter/cookiecutter/commit/72322521b7c401916ed71a2a4f0aec048f5060d2?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1248/graphs/tree.svg?width=650&token=8kF8iLUMJE&height=150&src=pr)](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1248?src=pr&el=tree)\n\n```diff\n@@          Coverage Diff           @@\n##           master   #1248   +/-   ##\n======================================\n  Coverage     100%    100%           \n======================================\n  Files          18      18           \n  Lines         785     785           \n======================================\n  Hits          785     785\n```\n\n\n| [Impacted Files](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1248?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [cookiecutter/main.py](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1248/diff?src=pr&el=tree#diff-Y29va2llY3V0dGVyL21haW4ucHk=) | `100% <ø> (ø)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1248?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1248?src=pr&el=footer). Last update [7232252...2d0f3c9](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1248?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
      "@Angus-Millar This PR brings nothing new or important to the project. Closed."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db16ac254a19ac29e691",
    "number": 1247,
    "body": "updated",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1247?src=pr&el=h1) Report\n> Merging [#1247](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1247?src=pr&el=desc) into [master](https://codecov.io/gh/cookiecutter/cookiecutter/commit/72322521b7c401916ed71a2a4f0aec048f5060d2?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1247/graphs/tree.svg?width=650&token=8kF8iLUMJE&height=150&src=pr)](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1247?src=pr&el=tree)\n\n```diff\n@@          Coverage Diff           @@\n##           master   #1247   +/-   ##\n======================================\n  Coverage     100%    100%           \n======================================\n  Files          18      18           \n  Lines         785     785           \n======================================\n  Hits          785     785\n```\n\n\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1247?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1247?src=pr&el=footer). Last update [7232252...d586aaa](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1247?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
      "This PR brings nothing new or important to project. Closed."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db17ac254a19ac29e692",
    "number": 1244,
    "body": "as per https://github.com/cookiecutter/cookiecutter/issues/1166",
    "head_branch": "cc",
    "is_a_fork": true,
    "comments": [
      "@Granitosaurus thank you for your contribution. I like you idea and ready to test it but please first fix tests and review comment. ",
      "@insspb I'm really not sure why the tests are failing. None of the changes I've made seem to be responsible. \r\n\r\n```\r\n        context_str = json.dumps(context, indent=4, sort_keys=True)\r\n>       assert context_str in result.output\r\nE       assert '{\\n    \"cookiecutter\": {\\n        \"_template\": \"tests/undefined-variable/file-name/\",\\n        \"github_username\": \"hackebrot\",\\n        \"project_slug\": \"testproject\"\\n    }\\n}' in 'Unable to create file \\'{{cookiecutter.foobar}}\\'\\nError message: \\'collections.OrderedDict object\\' has no attribute...ined-variable/file-name/\",\\n        \"github_username\": \"hackebrot\",\\n        \"project_slug\": \"testproject\"\\n    }\\n}\\n'\r\nE        +  where 'Unable to create file \\'{{cookiecutter.foobar}}\\'\\nError message: \\'collections.OrderedDict object\\' has no attribute...ined-variable/file-name/\",\\n        \"github_username\": \"hackebrot\",\\n        \"project_slug\": \"testproject\"\\n    }\\n}\\n' = <Result SystemExit(1)>.output\r\n```",
      "@Granitosaurus \r\n\r\nI am thinking about this issue for a while, when was worked on 1.7.x\r\n\r\nMany PRs related to namespace variables, and I am inviting all their contributors here for discussion.\r\n\r\nRelated issues and PRs: \r\n\r\n* #380 - Remove cookiecutter namespace discussion\r\n* #822 - Custom context template holder name\r\n* #1166 - Renaming cookiecutter dictionary\r\n* #1233 - Parametrize namespace\r\n* #1242 - Alias \"cc\" to \"cookiecutter\"\r\n* #1244 - Alias \"cc\" to \"cookiecutter\"\r\n\r\nMy main concern is that namespace cli or class setting has no sense. This option will require user to write `cookiecutter --namespace=cc` or something like this, just to make some template work on their side. Or will require us to hardcode some value in our internals, as 'cookiecutter' now.\r\n\r\nAs I see it now: Correct solution is to implement namespace naming based on raw variable in template. Like it done with [`_copy_without_render`](https://cookiecutter.readthedocs.io/en/latest/advanced/copy_without_render.html) or [`_new_lines`](https://cookiecutter.readthedocs.io/en/latest/advanced/new_line_characters.html)\r\n\r\nSo we need to implement `_namespace` inside template, and check it in mentioned `cookiecutter/cookiecutter/generate.py` and pass it in next stages as independent variable.\r\n\r\nI will do it myself before 2.0 if nobody will not be able to do it before, but this implementation is another way of hardcodding, that should be avoided.\r\n\r\nI propose to make any further discussion in original issue #380\r\n\r\nThis PR is closed, to keep all discussion in #380. \r\n\r\nI am inviting everybody to join."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db18ac254a19ac29e693",
    "number": 1243,
    "body": "My contribution to Open Source.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1243?src=pr&el=h1) Report\n> Merging [#1243](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1243?src=pr&el=desc) into [master](https://codecov.io/gh/cookiecutter/cookiecutter/commit/673f773bfaf591b056d977c4ab82b45d90dce11e?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1243/graphs/tree.svg?width=650&token=8kF8iLUMJE&height=150&src=pr)](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1243?src=pr&el=tree)\n\n```diff\n@@          Coverage Diff           @@\n##           master   #1243   +/-   ##\n======================================\n  Coverage     100%    100%           \n======================================\n  Files          18      18           \n  Lines         784     785    +1     \n======================================\n+ Hits          784     785    +1\n```\n\n\n| [Impacted Files](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1243?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [cookiecutter/cli.py](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1243/diff?src=pr&el=tree#diff-Y29va2llY3V0dGVyL2NsaS5weQ==) | `100% <0%> (ø)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1243?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1243?src=pr&el=footer). Last update [673f773...4c7351a](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1243?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
      "I have no words, but ok. Thank you.",
      "Without mentions in doc. because mentions is bigger fix than this one :)"
    ],
    "commit_messages": [
      "Dots fixing in read me\n\nUpdate README.md"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db19ac254a19ac29e694",
    "number": 1242,
    "body": "Simply add alias to `cookiecutter` prefix for templating as `cc` short version. \r\n\r\nAs per https://github.com/cookiecutter/cookiecutter/issues/1166",
    "head_branch": "cc",
    "is_a_fork": true,
    "comments": [
      "@Granitosaurus please see https://github.com/cookiecutter/cookiecutter/issues/1166#issuecomment-542329850 ⚠️ "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db19ac254a19ac29e695",
    "number": 1240,
    "body": "this is a proposed change to add a \"_local_extensions\" feature.\r\nIt will enable the use of an additional \"_local_extensions\" element in the cookiecutter.json file. This will have the exact same functionality as the \"_extensions\" element, except that it can be used to load jinja2 template extensions straight from the project template.\r\n\r\nI'm not certain if this is the best approach to achieve this, but I'm happy to have some feedback, of course.\r\n\r\n```json\r\n{\r\n    \"directory_name\": \"directory_name\",\r\n    \"module_name\": \"module_name\",\r\n    \"_local_extensions\": [\"local_extensions.SomeExtension\"]\r\n}\r\n```\r\n\r\n",
    "head_branch": "feature/local_extensions",
    "is_a_fork": true,
    "comments": [
      "I totally missed your PR, @mwesterhof, when quickly scanning the open PRs today for exactly this feature. While not being finally decided whether I like an implicit (silent) loading of local extensions or your more explicit approach via dedicated keyword, I definitely like your context-manager approach for prepending `repo_dir` to `sys.path`. 🙂 ",
      "@croesnick \r\n> I totally missed your PR, @mwesterhof, when quickly scanning the open PRs today for exactly this feature. While not being finally decided whether I like an implicit (silent) loading of local extensions or your more explicit approach via dedicated keyword, I definitely like your context-manager approach for prepending `repo_dir` to `sys.path`.\r\n\r\nThanks, it was a bit of a challenge to find the right way to implement this. I'd be very interested in this feature, though. When you decide on the way you want this to work, feel free to let me know. I'd be happy to make some changes",
      "@mwesterhof @croesnick thank you for contribution. \r\nAs you both are active, we can speed up this feature implementation. \r\nFirst it should be well documented from point how user should it use. ",
      "@insspb @croesnick \r\ni added some docs for this feature to the \"advanced\" section. I haven't specified a version number yet, of course... should I leave that the way it is, or can i just replace the X.x with the next upcoming version?",
      "I'm sorry, it seems I've implemented a very similar thing in #1340 but at least mine is more documented than the other duplicate in #944 :sweat_smile: \r\n\r\nFor completeness I want to mention the issues, I know of, that have requested something like that #1211 and #547 so that people don't re-implement it again.\r\n\r\nBtw. may I ask, why not just add the extension directory to the path. It will only stay there, as long as the interpreter process running cookiecutter lives, so it will not influence anything else. You don't even have to check of its existence as python ignores non-existent dirs on `sys.path`.\r\n\r\nI'd gravitate toward the more simple solution that involves less code. For the same reason I'd also vote for using the `_extensions` keyword in the json for both local and package installed extensions.\r\n\r\nIf anything, make the folder name just `extensions` instead of `local_extensions` to go along with `./hooks/`.",
      "Love this PR @mwesterhof! I was thinking about how to tackle the `modify config from a hook` problem that others were having, and basically came to the same idea that you did here. \r\n\r\nI had one idea that I thought might improve this implementation. I haven't fully thought it through, but I wanted to get your take:\r\n\r\nAs a `cookiecutter` user, I don't want to have to know / care about how to write a custom Jinja filter -- I just want to write a python function (or functions) that I can use in my `cookiecutter.json`.\r\n\r\nWhat about instead of having users create a full-blown extension like:\r\n```python\r\nclass FoobarExtension(Extension):\r\n    def __init__(self, environment):\r\n        super(FoobarExtension, self).__init__(environment)\r\n         \r\n        def foobar():\r\n             return \"foobar\"\r\n        \r\n        environment.filters['foobar'] = foobar\r\n``` \r\n\r\nwe had them create a module `filters.py` where they'd define a bunch of functions:\r\n```python\r\ndef foo():\r\n   return \"bar\"\r\n\r\ndef baz():\r\n   return \"qux\"\r\n```\r\n\r\nand we could do something like:\r\n```python\r\nimport inspect\r\n\r\nimport filters\r\n\r\nfunctions = inspect.getmembers(filters, inspect.isfunction)\r\nfor function in functions:\r\n    register_function_as_filter(function)\r\n```\r\n\r\nThoughts on this?",
      "it's an interesting take, @grahamalama \r\nI'm generally in favor of that kind of simplification, but i have a feeling it might be a bit too restrictive and too \"magical\".\r\n\r\nI'm no expert on jinja, but i think we're ignoring a lot of the power of template filters by simplifying it this much. I'd propose a compromise:\r\n\r\n```python\r\n@simple_filter\r\ndef foo():\r\n    return 'stuff'\r\n```\r\n\r\n1. creating fully fledged jinja-based filters is still possible\r\n2. creating a simple function based one is possible\r\n3. registering the function based filters is explicit\r\n4. it's possible to add other (helper) functions to the module without them erroneously being picked up as filters\r\n\r\nit actually mimics some ideas in the django framework regarding template filters and template tags, and it's an approach that i'm a big fan of.\r\n\r\nAny opinions? I'd be happy to implement this behavior in my branch",
      "I still maintain, that just adding the extensions directory to the path and letting the user do whatever is the best, smallest, most simple and most generic solution.\r\n\r\nI don't know what the extra `_local_extensions` keyword (the existing `_extensions` keyword works if the extensions dir is on the path) and elaborate import_patch... functionality brings to the table other than unnecessary complexity.\r\n\r\nEither way, the `simple_filter` decorator could be imported from `cookiecutter.utils` or some place in the cookie-cutter namespace, though, as long as it's well documented. I like it.",
      "@con-f-use i would agree. importing the decorator as an additional helper from cookiecutter.utils is exactly what i had in mind. As far as separating the local extensions from the \"regular\" ones goes... i'm sure this is somewhat of a personal thing, but I'm personally a fan of having a clear distinction between \"extensions bundled with the template\" and \"installed extensions\". That's just my view on it, but i'd be happy to change that. I'm not entirely sure who makes that call, but please let me know",
      "@insspb @croesnick @con-f-use @grahamalama \r\ni just resolved a few conflicts, and I'm wondering if anyone has time to look at this MR. I'm more than happy to implement some changes, if necessary",
      "any news about this?",
      "I was looking for exactly this. I'm glad that this in the works. My preference, would be to not introduce new naming such as the `_local_extensions` and instead use the already existing `_extensions`. From reading the code on how you are patching the python path that shouldn't be a problem. \r\n\r\n ",
      "@mwesterhof \r\n\r\n> it actually mimics some ideas in the django framework regarding template filters and template tags, and it's an approach that i'm a big fan of.\r\n\r\n> Any opinions? I'd be happy to implement this behavior in my branch\r\n\r\nI like the `@simplefilter` approach as well. ",
      "sorry guys, i've been quite sick recently and haven't gotten around to any work. I'll start working on this again though, so expect to see changes soon :muscle: ",
      "Mention me and I'll be happy to give feedback on any code changes. I hope\nyour illness isn't around any longer.\n\nSent from my mobile\n\nOn Wed, 15 Jul 2020, 14:28 Marco Westerhof, <notifications@github.com>\nwrote:\n\n> sorry guys, i've been quite sick recently and haven't gotten around to any\n> work. I'll start working on this again though, so expect to see changes\n> soon 💪\n>\n> —\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/cookiecutter/cookiecutter/pull/1240#issuecomment-658735807>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AAQGYESUYI5OYFLMPTHUL2DR3WNTRANCNFSM4I7AGD5Q>\n> .\n>\n",
      "@grahamalama  @jonathan-s I updated my branch to include the simple_filter decorator, and rebased it. Can you guys take a look at it and let me know what you think about it? I'll try to check out your comment about a simple local_extensions.py asap, @grahamalama, but i think it should work just fine. \r\nalso, the point about the naming scheme is a valid one, please weigh in on this. I'd be happy to change it so everything can be defined under '_extensions', without needing a separate '_local_extensions', i'd just like some more input on it first.\r\n\r\nI finally have some time to work on this, and I hope we can do something cool with this MR soon. Please let me know what you guys think :muscle: ",
      "@mwesterhof The simplefilter looks 👌. As mentioned by @con-f-use, I also think it'd be better to use `extensions` rather than `local_extensions`. It'll be one thing less to remember for the user of cookiecutter. I don't see any major advantages in having `extensions` and `local_extensions` separate. Are there any compelling reasons for that?",
      "@jonathan-s i think it's a valid question. I initially wanted to leave it separate, but looking at the endresult, i doubt there's a particularly good reason to keep it that way. It shouldn't be a problem to change it. I'll wait for the feedback, but I'll make the change locally in the mean time so I can verify that it works fine in all scenarios",
      "My vote should be obvious... **no** `_local_extension` :grin: ",
      "@con-f-use @grahamalama @jonathan-s i made this change, we're now using exclusively _extensions\r\nplease let me know if you agree, i can always revert it if necessary",
      "@insspb, it would be great if you could take a look at this. In my opinion this is ready to be merged. ",
      "Please merge this already, it's super-useful!",
      "@jonathan-s based on his activity, i think insspb might be unavailable. Do you know if anyone else might be able to take a look at this in the mean time?",
      "@ssbarnea Would it be possible for you to take a look at this?",
      "@jonathan-s is there a plan C? :sweat_smile:",
      "@mwesterhof Sometimes it can take a while in the open source world. It's frustrating I know. Hacktober is coming up in a month, so let's wait for that. It'll likely get some more activity going. ",
      "I am afraid I cannot help with this PR, mainly because I personally do not see the use-case for it. If understand correctly this would mean that you will be able to use cc only from a specific location and the result would be dependent on your setup. To be this seems to make tool usage harder. Wouldn't a use of plugin mechanisms like pluggy allow it to be easier to extend. Installing an extension would be done using pip, same as cc itself.",
      "@ssbarnea to clarify the use case; primarily, i've come across quite a few cases where we would like to have a template extension that does something relatively simple, yet very specific for a template that we're maintaining. Essentially, we want more power in creating and maintaining a CC template. Of course, installing extensions through pip is, and should remain an option, but this PR allows for much, much more flexibility by bundling custom python code with the template",
      "@ssbarnea, As described in this issue -> https://github.com/pydanny/cookiecutter-djangopackage/issues/966 I would like to use a custom template filter `split` in the cookiecutter. Without this patch it's not possible. \r\n\r\n> If understand correctly this would mean that you will be able to use cc only from a specific location and the result would be dependent on your setup. \r\n\r\nI fail to see how this would happen. ",
      "> @ssbarnea, As described in this issue -> [pydanny/cookiecutter-djangopackage#966](https://github.com/pydanny/cookiecutter-djangopackage/issues/966) I would like to use a custom template filter `split` in the cookiecutter. Without this patch it's not possible.\r\n> \r\n> > If understand correctly this would mean that you will be able to use cc only from a specific location and the result would be dependent on your setup.\r\n> \r\n> I fail to see how this would happen.\r\n\r\nactually, i think this might be an important misunderstanding. to clarify how this works... a \"local\" extension is an extension that's *bundled* with the template itself. So no, it's absolutely not dependent on an individual setup. The extension would be both used by, and *provided by* the template.",
      "Yes, it actually makes things a lot easier for the enduser. At the company I work for, we have a number of usecases for this and actually run on a fork, currently, that already has this.",
      "Please merge when possible, this is something that would be really useful for our projects.",
      "@insspb Can you please have another look at this and make a decision, eventually a merge if it looks ok to you. Thanks.",
      "@insspb will this be merged?",
      "Hey guys, do you have a workaround to enable this feature while we wait for @insspb to merge this feature ? ",
      "The most sensible workaround would be to ask the user of the cookie cutter\ntemplate to install a forked cookiecutter, where the fork contains this\nfix.\n\nSent from my mobile\n\nOn Wed, 3 Feb 2021, 19:05 Brayan Jules, <notifications@github.com> wrote:\n\n> Hey guys, do you have a workaround to enable this feature while we wait\n> for @insspb <https://github.com/insspb> to merge this feature ?\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/cookiecutter/cookiecutter/pull/1240#issuecomment-772708576>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/AAQGYEQ5RTZ2AL3RPIXLKY3S5GF6XANCNFSM4I7AGD5Q>\n> .\n>\n",
      "@ssbarnea @jonathan-s apologies if I seem awfully pushy on this, but @insspb doesn't seem available for review, and hasn't been since he was first mentioned in august last year. Considering the fact that this regards a relatively small but welcome feature that doesn't impact any of the current features, I'm wondering if there's a way to short-track this a bit",
      "I don't have any power here. It'd be up to ssbarnea in that case. ",
      "Friendly reminder to @ssbarnea that we'd still very much like to have this.",
      "Can we please get this in the 2.0 release? ",
      "Hello, is there any update for this feature? Thank you",
      "@audreyfeldroy Pretty please? :grin: ",
      "2 days ago I've opened up an issue requesting to use some sort of custom .py script or function while generating the cookiecutter project to set a value in the cookiecutter.json, I believe this feature is exactly what I'm looking for! (In my case I need to read out the git config file to grab the name of the user)\r\n\r\nIs there any update on this?\r\n\r\nThis is the one feature needed to automate all the things with cookiecutter :stuck_out_tongue: ",
      "Yeah, please merge this asap, I'd prefer not to wait another 2.5 years. It would be incredibly useful!",
      "Hi, I hope the best for @insspb but unfortunately, there is no Github activities for his account since December 2021.\r\n\r\nCould we review/merge this PR without him?\r\n\r\nThank you,",
      "@insspb indeed doesn't seem available long term. I'm sorry to once again have to bother @ssbarnea , but is there any way to proceed with this PR without his input?",
      "I was planning to merge it but I wanted to see the CI result first.",
      "@ssbarnea it seems that black linting was added somewhere along the line. I accounted for that, and it looks like everything passes now",
      "I'm overjoyed :grin: Thanks ssabernea! :1st_place_medal: When can we expect that to be released?\r\n\r\nEdit:\r\nIncluded in [2.1.0](https://github.com/cookiecutter/cookiecutter/releases/tag/2.1.0) released on May 30th, 2022.",
      "Awesome, can't wait to use it cause this will really make things a lot more extensive!\r\n\r\nSame question as @con-f-use, is there a planned release date(with updated Docs as well?).",
      "I'm eager make use of this feature too! Thanks.",
      "@con-f-use looks like it made it into [this release](https://github.com/cookiecutter/cookiecutter/releases/tag/2.1.0)."
    ],
    "commit_messages": [
      "Feature/local extensions (#1240)\n\nCo-authored-by: Andrey Shpak <ashpak@ashpak.ru>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db1aac254a19ac29e696",
    "number": 1239,
    "body": "fix pep257 and flake8 on remote.py",
    "head_branch": "pep257",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1239?src=pr&el=h1) Report\n> Merging [#1239](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1239?src=pr&el=desc) into [master](https://codecov.io/gh/cookiecutter/cookiecutter/commit/673f773bfaf591b056d977c4ab82b45d90dce11e?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1239/graphs/tree.svg?width=650&token=8kF8iLUMJE&height=150&src=pr)](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1239?src=pr&el=tree)\n\n```diff\n@@          Coverage Diff           @@\n##           master   #1239   +/-   ##\n======================================\n  Coverage     100%    100%           \n======================================\n  Files          18      18           \n  Lines         784     785    +1     \n======================================\n+ Hits          784     785    +1\n```\n\n\n| [Impacted Files](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1239?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [cookiecutter/replay.py](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1239/diff?src=pr&el=tree#diff-Y29va2llY3V0dGVyL3JlcGxheS5weQ==) | `100% <ø> (ø)` | :arrow_up: |\n| [cookiecutter/cli.py](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1239/diff?src=pr&el=tree#diff-Y29va2llY3V0dGVyL2NsaS5weQ==) | `100% <0%> (ø)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1239?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1239?src=pr&el=footer). Last update [673f773...2ab67b9](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1239?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
      "duplicates work done in [1234] (https://github.com/cookiecutter/cookiecutter/pull/1234) which looks good."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db1bac254a19ac29e697",
    "number": 1238,
    "body": "Fixed a small issue (D205) with pep257 in `cookiecutter/replay.py`. This relates to issue #742.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1238?src=pr&el=h1) Report\n> Merging [#1238](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1238?src=pr&el=desc) into [master](https://codecov.io/gh/cookiecutter/cookiecutter/commit/673f773bfaf591b056d977c4ab82b45d90dce11e?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1238/graphs/tree.svg?width=650&token=8kF8iLUMJE&height=150&src=pr)](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1238?src=pr&el=tree)\n\n```diff\n@@          Coverage Diff           @@\n##           master   #1238   +/-   ##\n======================================\n  Coverage     100%    100%           \n======================================\n  Files          18      18           \n  Lines         784     785    +1     \n======================================\n+ Hits          784     785    +1\n```\n\n\n| [Impacted Files](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1238?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [cookiecutter/replay.py](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1238/diff?src=pr&el=tree#diff-Y29va2llY3V0dGVyL3JlcGxheS5weQ==) | `100% <ø> (ø)` | :arrow_up: |\n| [cookiecutter/cli.py](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1238/diff?src=pr&el=tree#diff-Y29va2llY3V0dGVyL2NsaS5weQ==) | `100% <0%> (ø)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1238?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1238?src=pr&el=footer). Last update [673f773...426baab](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1238?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
      "flake8 failed on travis",
      "duplicates work done on [1234](https://github.com/cookiecutter/cookiecutter/pull/1234)",
      "Duplicate with #1234"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db1cac254a19ac29e698",
    "number": 1237,
    "body": "cf #742",
    "head_branch": "pep257-wm",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1237?src=pr&el=h1) Report\n> Merging [#1237](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1237?src=pr&el=desc) into [master](https://codecov.io/gh/cookiecutter/cookiecutter/commit/673f773bfaf591b056d977c4ab82b45d90dce11e?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1237/graphs/tree.svg?width=650&token=8kF8iLUMJE&height=150&src=pr)](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1237?src=pr&el=tree)\n\n```diff\n@@          Coverage Diff           @@\n##           master   #1237   +/-   ##\n======================================\n  Coverage     100%    100%           \n======================================\n  Files          18      18           \n  Lines         784     785    +1     \n======================================\n+ Hits          784     785    +1\n```\n\n\n| [Impacted Files](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1237?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [cookiecutter/exceptions.py](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1237/diff?src=pr&el=tree#diff-Y29va2llY3V0dGVyL2V4Y2VwdGlvbnMucHk=) | `100% <100%> (ø)` | :arrow_up: |\n| [cookiecutter/\\_\\_init\\_\\_.py](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1237/diff?src=pr&el=tree#diff-Y29va2llY3V0dGVyL19faW5pdF9fLnB5) | `100% <100%> (ø)` | :arrow_up: |\n| [cookiecutter/cli.py](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1237/diff?src=pr&el=tree#diff-Y29va2llY3V0dGVyL2NsaS5weQ==) | `100% <0%> (ø)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1237?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1237?src=pr&el=footer). Last update [673f773...e1480bf](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1237?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
      "@insspb Typo fixed!\r\n\r\n`UnknownTemplateDirException` and `MissingProjectDir` aren't used locally, but I hesitate to remove them in case downstream projects make use of them. Their remove should at least be mentioned in the changelog...\r\n\r\nAlso, #1112 (from a year ago) covers much of this same ground."
    ],
    "commit_messages": [
      "pep257 cleanup of cookiecutter.exceptions (#1237)\n\n* pep257 cleanup of cookiecutter.exceptions"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db1dac254a19ac29e699",
    "number": 1236,
    "body": "My previous pull request failed Travis build. I didn't think about lines being longer than 80 characters. I have closed that pull request, self-shunned and fixed my mistakes. Hopefully this is cleaner and better respects pep257 where it can with no extra whitespace and lines stopped at 80",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1236?src=pr&el=h1) Report\n> Merging [#1236](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1236?src=pr&el=desc) into [master](https://codecov.io/gh/cookiecutter/cookiecutter/commit/673f773bfaf591b056d977c4ab82b45d90dce11e?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1236/graphs/tree.svg?width=650&token=8kF8iLUMJE&height=150&src=pr)](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1236?src=pr&el=tree)\n\n```diff\n@@          Coverage Diff           @@\n##           master   #1236   +/-   ##\n======================================\n  Coverage     100%    100%           \n======================================\n  Files          18      18           \n  Lines         784     785    +1     \n======================================\n+ Hits          784     785    +1\n```\n\n\n| [Impacted Files](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1236?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [cookiecutter/cli.py](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1236/diff?src=pr&el=tree#diff-Y29va2llY3V0dGVyL2NsaS5weQ==) | `100% <0%> (ø)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1236?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1236?src=pr&el=footer). Last update [673f773...a57a8e6](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1236?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
      "No response from contributor (@tonytheleg ) Merged as #1262 \r\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db1dac254a19ac29e69a",
    "number": 1235,
    "body": "Per help request in issue #742 pep has been run on test_unzip.py\r\nOnly thing not cleaned up was a missing docstring on mock download but I am not 100% on what it does and didn't want to assume and document it.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1235?src=pr&el=h1) Report\n> Merging [#1235](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1235?src=pr&el=desc) into [master](https://codecov.io/gh/cookiecutter/cookiecutter/commit/673f773bfaf591b056d977c4ab82b45d90dce11e?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1235/graphs/tree.svg?width=650&token=8kF8iLUMJE&height=150&src=pr)](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1235?src=pr&el=tree)\n\n```diff\n@@          Coverage Diff           @@\n##           master   #1235   +/-   ##\n======================================\n  Coverage     100%    100%           \n======================================\n  Files          18      18           \n  Lines         784     785    +1     \n======================================\n+ Hits          784     785    +1\n```\n\n\n| [Impacted Files](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1235?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [cookiecutter/cli.py](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1235/diff?src=pr&el=tree#diff-Y29va2llY3V0dGVyL2NsaS5weQ==) | `100% <0%> (ø)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1235?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1235?src=pr&el=footer). Last update [673f773...d8ee30d](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1235?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db1eac254a19ac29e69b",
    "number": 1234,
    "body": "Working on #742, added pep257 recommendations on replay.py file.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1234?src=pr&el=h1) Report\n> Merging [#1234](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1234?src=pr&el=desc) into [master](https://codecov.io/gh/cookiecutter/cookiecutter/commit/673f773bfaf591b056d977c4ab82b45d90dce11e?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1234/graphs/tree.svg?width=650&token=8kF8iLUMJE&height=150&src=pr)](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1234?src=pr&el=tree)\n\n```diff\n@@          Coverage Diff           @@\n##           master   #1234   +/-   ##\n======================================\n  Coverage     100%    100%           \n======================================\n  Files          18      18           \n  Lines         784     785    +1     \n======================================\n+ Hits          784     785    +1\n```\n\n\n| [Impacted Files](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1234?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [cookiecutter/replay.py](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1234/diff?src=pr&el=tree#diff-Y29va2llY3V0dGVyL3JlcGxheS5weQ==) | `100% <ø> (ø)` | :arrow_up: |\n| [cookiecutter/cli.py](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1234/diff?src=pr&el=tree#diff-Y29va2llY3V0dGVyL2NsaS5weQ==) | `100% <0%> (ø)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1234?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1234?src=pr&el=footer). Last update [673f773...3f89f7e](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1234?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
      "Looks good",
      "Thanks, @firejava Can you merge it?"
    ],
    "commit_messages": [
      "pep257 docstring update for replay.py (#1234)\n\npep257 docstring update for replay.py (#1234)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db1fac254a19ac29e69c",
    "number": 1233,
    "body": "This allows for specifying a different context namespace than the default `'cookiecutter'`, when using cookiecutter's methods from Python. The behaviour of the command-line tool is unchanged.\r\n\r\nThis should be a first step towards fixing issues #380 and #1166 .\r\n\r\nRationale:\r\n\r\n- The code was already partially supporting custom namespaces, in the `generate_context` method of `generate.py`. The method takes a context file name as parameter, with default value `'cookiecutter.json'`, and then generates a context object, using the file stem as the namespace: https://github.com/cookiecutter/cookiecutter/blob/673f773bfaf591b056d977c4ab82b45d90dce11e/cookiecutter/generate.py#L104 So with a context file name \"`foo.json`\", we then end up with a namespace of \"`foo`\". This PR extends this idea by making other methods \"symmetric\" with that behaviour. Slight change: we decouple the namespace from the context file name stem, by also introducing a namespace parameter to the `generate_context` function.\r\n- Changes are voluntarily kept minimal, to ensure backwards compatibility and to ease code review. The issue of aligning the CLI, to accept e.g. an extra `--namespace` flag would have to be addressed separately, after merging this.\r\n\r\nThe last commit (f6645be) is just some bonus documentation for VS Code users, and is unrelated to the main concern of this PR. I can remove it from the branch and make a new PR if preferred.",
    "head_branch": "parameterize-namespace",
    "is_a_fork": true,
    "comments": [
      "Hi @miklosaubert , thank you for contribution. \r\n\r\nI am thinking about this issue for a while, when was worked on 1.7.x\r\n\r\nMany PRs related to namespace variables, and I am inviting all their contributors here for discussion.\r\n\r\nRelated issues and PRs: \r\n\r\n* #380 - Remove cookiecutter namespace discussion\r\n* #822 - Custom context template holder name\r\n* #1166 - Renaming cookiecutter dictionary\r\n* #1242 - Alias \"cc\" to \"cookiecutter\"\r\n* #1244 - Alias \"cc\" to \"cookiecutter\"\r\n\r\nMy main concern is that namespace cli or class setting has no sense. This option will require user to write `cookiecutter --namespace=cc` or something like this, just to make some template work on their side. Or will require us to hardcode some value in our internals, as 'cookiecutter' now.\r\n\r\nAs I see it now: Correct solution is to implement namespace naming based on raw variable in template. Like it done with [`_copy_without_render`](https://cookiecutter.readthedocs.io/en/latest/advanced/copy_without_render.html) or [`_new_lines`](https://cookiecutter.readthedocs.io/en/latest/advanced/new_line_characters.html)\r\n\r\nSo we need to implement `_namespace` inside template, and check it in mentioned `cookiecutter/cookiecutter/generate.py` and pass it in next stages as independent variable.\r\n\r\nI will do it myself before 2.0 if nobody will not be able to do it before, but this implementation is another way of hardcodding, that should be avoided.\r\n\r\nI propose to make any further discussion in original issue #380"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db20ac254a19ac29e69d",
    "number": 1229,
    "body": "The issue can be seen on early versions of [awscli-bastion](https://pypi.org/project/awscli-bastion/0.5.0/).\r\n\r\n### Error\r\nWe can reproduce the issue with running ``make clean`` with ``python setup.py bdist_wheel``:\r\n\r\n```\r\n$ make clean\r\n$ make release\r\n```\r\n\r\nthen install will fail\r\n\r\n```\r\n$ pip install awscli-bastion==0.5.0                                                                                                                                         master\r\nCollecting awscli-bastion==0.5.0\r\n  ERROR: Could not find a version that satisfies the requirement awscli-bastion==0.5.0 (from versions: 0.1.0.macosx-10.14-x86_64, 0.2.0.macosx-10.14-x86_64, 0.3.0.macosx-10.14-x86_64, 0.4.0.macosx-10.14-x86_64, 0.5.0.macosx-10.14-x86_64)\r\nERROR: No matching distribution found for awscli-bastion==0.5.0\r\n```\r\n\r\n### Solution\r\n\r\nEdit ``make clean`` with ``python setup.py sdist``:\r\n\r\n```\r\n$ make clean\r\n$ make release\r\n```\r\n\r\nthen install will succeed\r\n\r\n```\r\n$ pip install awscli-bastion==0.6.0   ",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "@aidanmelen This issue is not related to cookiecutter itself but it seems related to https://github.com/audreyr/cookiecutter-pypackage \r\n",
      "Anyway, the [wheel package](https://pythonwheels.com/) format [(PEP 427)](https://www.python.org/dev/peps/pep-0427/) is the standard and work side-by-side with the old egg package format.\r\n\r\nhttps://packaging.python.org/guides/distributing-packages-using-setuptools/#wheels",
      "That is good to hear. Do you know why my releases are failing with bdist_wheel? why does it only work with sdist?",
      "@aidanmelen \r\n\r\nThis commit (https://github.com/aidanmelen/awscli_bastion/commit/49ac464dbf311aafcb2bb6f514aefc80b4d5ad89#diff-b67911656ef5d18c4ae36cb6741b7965) seems to introduce the bug in your code because of the argument expected by the [`wheel`](https://wheel.readthedocs.io/en/latest/) library is `bdist_wheel` and not [`bdist`](https://docs.python.org/3.7/distutils/builtdist.html#creating-built-distributions).\r\nIs expected that the `wheel` package must already be installed and updated to the latest version.\r\n\r\nAlso, without debugging information, it's hard to give any help\r\n\r\n",
      "thanks I appreciate that. That gives me enough context to sort my stuff out."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db21ac254a19ac29e69e",
    "number": 1227,
    "body": "First off, thank you for creating this excellent project!\r\n\r\nWe are templating a large number of pre-existing complex jinja2 templates and, to avoid having to use a workaround like the one described in https://github.com/cookiecutter/cookiecutter/issues/1068#issuecomment-406107802, we have added the ability to create the j2 [Environment](https://jinja.palletsprojects.com/en/2.10.x/api/#jinja2.Environment) with custom delimiters.\r\n\r\nThe approach in this PR is to source these overrides from the environment. For example, we run `cookiecutter` with:\r\n\r\n```\r\nJ2_VARIABLE_START_STRING='<<'\r\nJ2_VARIABLE_END_STRING='>>'\r\nJ2_BLOCK_START_STRING='<%'\r\nJ2_BLOCK_END_STRING='%>'\r\nJ2_COMMENT_START_STRING='<#'\r\nJ2_COMMENT_END_STRING='#>'\r\n```\r\n\r\nWe tried another approach using cookiecutter.json (similar to the way you already allow custom j2 modules to be loaded) but for various reasons (mainly that there are two places where the variable start and end delimiters are hard-coded from which config would not be easily accessible), we pursued this one.\r\n\r\nWe have not yet updated docs as we wanted to validate the general approach first.\r\n",
    "head_branch": "custom_j2_delimiters",
    "is_a_fork": true,
    "comments": [
      "I wonder why is this not available yet? (> 3 years after)\r\n\r\nIt seems to be a critical feature for this kind of tool 🤔 ",
      "I'm closing this PR due to its age."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db22ac254a19ac29e69f",
    "number": 1225,
    "body": "Uses the second (setuptools>=18) approach documented at\r\nhttps://hynek.me/articles/conditional-python-dependencies/\r\nto make the dependency Py2-only.",
    "head_branch": "whichcraft",
    "is_a_fork": true,
    "comments": [
      "@ssbarnea did you see @michaeljoseph's comment? 🤔 "
    ],
    "commit_messages": [
      "Merge pull request #1225 from anntzer/whichcraft\n\nDon't install whichcraft on Py>=3."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db22ac254a19ac29e6a0",
    "number": 1224,
    "body": "For issue https://github.com/cookiecutter/cookiecutter/issues/1223\r\n\r\n- [x] Implemented cli feature to find `cookiecutter.json` in a subdirectory.  This was written to solve the problem that cookiecutter could not work with subdirectories within github.  Also works with local, though that use case makes no sense :)\r\n- [x] Updated unit tests for new cli option\r\n- [x] Added a unit test to read from a subdir\r\n- [x] Added documentation on how to use.  Not sure where that should go though.\r\n- [x] Manually tested it works with local path\r\n- [x] Manually tested it works with local zip file\r\n- [x] Manually tested it works with github",
    "head_branch": "1223-enable_repo_subdirectories",
    "is_a_fork": true,
    "comments": [
      "@insspb Should I also increment version in setup.py?",
      "> @insspb Should I also increment version in setup.py?\r\n\r\nNo, unfortunately, we have a long new version deploy process, so you should not increment it, as until several core developers review this it is hard to say when it will be merged. (Last PRs merged fast, but we have some dev depth with opened PRs since 2017)\r\n",
      "# [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1224?src=pr&el=h1) Report\n> Merging [#1224](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1224?src=pr&el=desc) into [master](https://codecov.io/gh/cookiecutter/cookiecutter/commit/2ed56bf0891245e92d6fdc2339be239ae7dbc6b1?src=pr&el=desc) will **decrease** coverage by `0.12%`.\n> The diff coverage is `80%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1224/graphs/tree.svg?width=650&token=8kF8iLUMJE&height=150&src=pr)](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1224?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master    #1224      +/-   ##\n==========================================\n- Coverage     100%   99.87%   -0.13%     \n==========================================\n  Files          18       18              \n  Lines         784      789       +5     \n==========================================\n+ Hits          784      788       +4     \n- Misses          0        1       +1\n```\n\n\n| [Impacted Files](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1224?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [cookiecutter/main.py](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1224/diff?src=pr&el=tree#diff-Y29va2llY3V0dGVyL21haW4ucHk=) | `100% <ø> (ø)` | :arrow_up: |\n| [cookiecutter/cli.py](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1224/diff?src=pr&el=tree#diff-Y29va2llY3V0dGVyL2NsaS5weQ==) | `100% <100%> (ø)` | :arrow_up: |\n| [cookiecutter/repository.py](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1224/diff?src=pr&el=tree#diff-Y29va2llY3V0dGVyL3JlcG9zaXRvcnkucHk=) | `97.67% <75%> (-2.33%)` | :arrow_down: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1224?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1224?src=pr&el=footer). Last update [2ed56bf...e70e85a](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1224?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
      "# [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1224?src=pr&el=h1) Report\n> Merging [#1224](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1224?src=pr&el=desc) into [master](https://codecov.io/gh/cookiecutter/cookiecutter/commit/2ed56bf0891245e92d6fdc2339be239ae7dbc6b1?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1224/graphs/tree.svg?width=650&token=8kF8iLUMJE&height=150&src=pr)](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1224?src=pr&el=tree)\n\n```diff\n@@          Coverage Diff           @@\n##           master   #1224   +/-   ##\n======================================\n  Coverage     100%    100%           \n======================================\n  Files          18      18           \n  Lines         784     788    +4     \n======================================\n+ Hits          784     788    +4\n```\n\n\n| [Impacted Files](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1224?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [cookiecutter/main.py](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1224/diff?src=pr&el=tree#diff-Y29va2llY3V0dGVyL21haW4ucHk=) | `100% <ø> (ø)` | :arrow_up: |\n| [cookiecutter/cli.py](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1224/diff?src=pr&el=tree#diff-Y29va2llY3V0dGVyL2NsaS5weQ==) | `100% <100%> (ø)` | :arrow_up: |\n| [cookiecutter/repository.py](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1224/diff?src=pr&el=tree#diff-Y29va2llY3V0dGVyL3JlcG9zaXRvcnkucHk=) | `100% <100%> (ø)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1224?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1224?src=pr&el=footer). Last update [2ed56bf...95185cd](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1224?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
      "@insspb also added unit test so that coverage should now not go down anymore.\r\n\r\nPlease let me know if there is anything I can do to help speed up merging of PR.  I really want to start using this feature (and I think another feature being reviewed right now https://github.com/cookiecutter/cookiecutter/pull/1173 😄 )",
      "@RomHartmann checked docs on local and get another errors after it. \r\nThen I begin to fix it and catched that subdirectory is not correct name for this feature, as `-cd` flag too.\r\nI made a PR https://github.com/RomHartmann/cookiecutter/pull/1  with all changes that will make it better I think.",
      "> @RomHartmann checked docs on local and get another errors after it.\r\n> Then I begin to fix it and catched that subdirectory is not correct name for this feature, as `-cd` flag too.\r\n> I made a PR [RomHartmann#1](https://github.com/RomHartmann/cookiecutter/pull/1) with all changes that will make it better I think.\r\n\r\n@insspb Approved PR.  Don't know what the merge policy is in this project, so I'll fall back to least-permission and wait for you to merge it :)",
      "@RomHartmann you should merge my PR to your RomHartmann:1223-enable_repo_subdirectories repo. Then it will be available here automatically. \r\nCore devs with write access can push code directly to your repo, but I do not have write access yet. So I am making PR. \r\n\r\nMerge policy in cookiecutter:\r\nReviews and approve from 2-3 core at least, after one of cores marks PR as \"Needs review\"",
      "Accidentally I discovered that some idea was implemented in #1063, we will not be able to merge both PRs and this PR already has reviews and ready to merge. But we will need to make some credits to @DSEnvel ",
      "@michaeljoseph Any other change suggestions?",
      "Howdy folks! Interested in having this available for a project. Looks like it's all good to go but just needs to be merged?",
      "Seconding @SteveHNH, this would be great to use in our current project!",
      "So excited for this feature to be merged! \r\nEdit: Woops, I'm not sure why my approval appeared over there. Sorry about that!"
    ],
    "commit_messages": [
      "Enable multiple templates per repository (#1224)\n\n* implement subdirectory functionality for a repo.\r\n\r\n* add tests for subdir implementation.\r\n\r\n* change way subdirectory is implemented\r\n\r\n* create unit test for subdirectory.\r\n\r\n* Change implementation as per unit tests.\r\n\r\n* Add documentation on how to use.\r\n\r\n* Hail to the mighty linter.\r\n\r\n* add documentation to index\r\n\r\n* update documentation to be more explicit.\r\n\r\n* fix list to be rst\r\n\r\n* This _should_ fix the .rst formatting...\r\n\r\n* add unit test for determine_repo_dir\r\n\r\n* Fix documentation\r\n\r\n* Cli rename and docs fix\r\n\r\n* PR comments, rename test script\r\n\r\n* PR comments: remove redundant condition\r\n\r\n* rename argument 'dir' to directory\r\n\r\n* Documentation review changes.\r\n\r\n* Shorten Docstring by 2 characters for 79 width\r\n\r\nCo-authored-by: Andrey Shpak <insspb@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db23ac254a19ac29e6a1",
    "number": 1222,
    "body": "",
    "head_branch": "appveyor_tests",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1222?src=pr&el=h1) Report\n> Merging [#1222](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1222?src=pr&el=desc) into [master](https://codecov.io/gh/cookiecutter/cookiecutter/commit/2ed56bf0891245e92d6fdc2339be239ae7dbc6b1?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1222/graphs/tree.svg?width=650&token=8kF8iLUMJE&height=150&src=pr)](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1222?src=pr&el=tree)\n\n```diff\n@@          Coverage Diff           @@\n##           master   #1222   +/-   ##\n======================================\n  Coverage     100%    100%           \n======================================\n  Files          18      18           \n  Lines         784     785    +1     \n======================================\n+ Hits          784     785    +1\n```\n\n\n| [Impacted Files](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1222?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [cookiecutter/cli.py](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1222/diff?src=pr&el=tree#diff-Y29va2llY3V0dGVyL2NsaS5weQ==) | `100% <0%> (ø)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1222?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1222?src=pr&el=footer). Last update [2ed56bf...5cc3ea0](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1222?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db24ac254a19ac29e6a2",
    "number": 1221,
    "body": "When we only have python3 installed, the test for missing argument is\r\nfailing because there is no \"python\" executable. Use `sys.executable`\r\ninstead. Also set environment correctly, like done in 7024d3b36176.",
    "head_branch": "fix/tests-no-python",
    "is_a_fork": true,
    "comments": [
      "LGTM"
    ],
    "commit_messages": [
      "Merge pull request #1221 from vincentbernat/fix/tests-no-python\n\nUse sys.executable when invoking python interpreter from tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db25ac254a19ac29e6a3",
    "number": 1218,
    "body": "",
    "head_branch": "docs_merge",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db26ac254a19ac29e6a4",
    "number": 1217,
    "body": "Our linter failed because hooks.py does not have a shebang. But I don't think it's supposed to be executable. Please let me know your thoughts! 🙇 \r\n\r\nhttps://travis-ci.com/cookiecutter/cookiecutter/jobs/228509876\r\n\r\nSee also #1195",
    "head_branch": "change-file-mode-for-hooks-module",
    "is_a_fork": true,
    "comments": [
      "Thanks for the review @insspb! 🍪 "
    ],
    "commit_messages": [
      "Merge pull request #1217 from hackebrot/change-file-mode-for-hooks-module\n\nUpdate file mode for hooks.py to be not executable"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db26ac254a19ac29e6a5",
    "number": 1216,
    "body": "First of all. Thanks to @wagnernegrao for his great work at the footprint of this poll request. I just fixed some places to make our documentation available in Sphinx and Github pages at the same time. \r\n\r\nHere is a summary for this pull request from both of us: \r\n\r\n* AUTHORS.rst from root folder converted to AUTHORS.md.\r\n  Authors list synced on August 27, 2019\r\n* AUTHORS.rst from docs folder replaced with a symlink to AUTHORS.md in the root folder. It is possible to configure Sphinx to render documents outside the docs folder, but in case of MarkDown formatting, it will break documentation rendering.\r\n* BACKERS.rst from root folder converted to BACKERS.md.\r\n* BACKERS.md added to Sphix documentation via a symlink\r\n* CONTRIBUTING.rst from root folder converted to CONTRIBUTING.md\r\n* contributing.rst from docs folder replaced with a symlink to CONTRIBUTING.md from the root folder. The reasons are the same as with AUTHORS.rst and all other replaced files from docs folder.\r\n* contributing.rst, contributor_guidelines.rst, contributor_setup.rst, contributor_testing.rst files from docs folder removed. This will change a little bit how Contribution guide displayed in Sphinx doc. But now we need to update guide in one place and it will work everywhere. \r\n* Make file update at the core - as we do not render contributing from several files, this target removed.\r\n* Information of this target is also removed from contributions guide.\r\n* HISTORY.rst from root folder converted to HISTORY.md\r\n  History synced on August 27, 2019\r\n* history.rst from docs folder replaced with a symlink to HISTORY.md in the root folder.\r\n* README.rst converted to README.md in the root folder, added as a symlink to docs folder.\r\n* case_studies.rst converted to case_studies.md in the root folder, added as a symlink to docs folder.\r\n* .pre-commit-config.yaml updated:\r\n  * Now it ignores markdown hard newlines (double space at the end of the line)\r\n  * As we now use symlinks it will check that every symlink works.\r\n* All MD files passed markdown lint\r\n* All MD files are formated at the same style way. (Long lines, asterisks as unordered lists, ordered lists with all numbers, no bare-links allowed, all links in the same format)\r\n* docs/conf.py and docs/requirements.txt - Include new render configuration and some changes to pass lint tests.\r\n* docs/conf.py - Copyright and year update\r\n* docs/index.rst and docs/installation.rst - Links are in CAPS symbols. This required to make links works in Github and in Sphinx at the same time.\r\n* setup.py - update to use Markdown for description.\r\n\r\nFuh, it was a long night :)\r\n\r\n ",
    "head_branch": "docs_merge",
    "is_a_fork": true,
    "comments": [
      "This commit includes and supersedes several PRs: \r\n#1185 \r\n#1188 \r\n#1126\r\n\r\nAfter this commit merged these issues will be fixed:\r\n#1062 \r\n\r\nRelated #1194 \r\nRelated #1179",
      "@insspb Looks good at initial inspection but should I go deeper if I so not see CI passing on AppVeyor? ",
      "@ssbarnea I think AppVeyor with tox is broken completely. It always has some problems. \r\nOur documentation is rendered in Linux, (for readthedocs), so I do not think it is a problem. \r\nI am thinking about remaking tox config for appveyor or making migration to nox, but all these thoughts are out of the scope of this issue. \r\n",
      "If it is broken removing or fixing it should be no1 priority, nothing else (PRs) is more important than having a green CI..",
      "# [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1216?src=pr&el=h1) Report\n> Merging [#1216](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1216?src=pr&el=desc) into [master](https://codecov.io/gh/cookiecutter/cookiecutter/commit/115f936cab13e913bda177785bf9ad0673d26f67?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1216/graphs/tree.svg?width=650&token=8kF8iLUMJE&height=150&src=pr)](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1216?src=pr&el=tree)\n\n```diff\n@@          Coverage Diff           @@\n##           master   #1216   +/-   ##\n======================================\n  Coverage     100%    100%           \n======================================\n  Files          18      18           \n  Lines         785     784    -1     \n======================================\n- Hits          785     784    -1\n```\n\n\n| [Impacted Files](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1216?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [cookiecutter/hooks.py](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1216/diff?src=pr&el=tree#diff-Y29va2llY3V0dGVyL2hvb2tzLnB5) | `100% <0%> (ø)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1216?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1216?src=pr&el=footer). Last update [115f936...3bf31d2](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1216?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
      "# [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1216?src=pr&el=h1) Report\n> Merging [#1216](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1216?src=pr&el=desc) into [master](https://codecov.io/gh/cookiecutter/cookiecutter/commit/2ed56bf0891245e92d6fdc2339be239ae7dbc6b1?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1216/graphs/tree.svg?width=650&token=8kF8iLUMJE&height=150&src=pr)](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1216?src=pr&el=tree)\n\n```diff\n@@          Coverage Diff           @@\n##           master   #1216   +/-   ##\n======================================\n  Coverage     100%    100%           \n======================================\n  Files          18      18           \n  Lines         784     785    +1     \n======================================\n+ Hits          784     785    +1\n```\n\n\n| [Impacted Files](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1216?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [cookiecutter/cli.py](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1216/diff?src=pr&el=tree#diff-Y29va2llY3V0dGVyL2NsaS5weQ==) | `100% <0%> (ø)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1216?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1216?src=pr&el=footer). Last update [2ed56bf...1bfab61](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1216?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
      "@ssbarnea Maybe you do not understand me correct. \r\nFixing of our testing environment is out of scope of this issue. \r\nLast master branches changes almost repeared appveyor, but included new bugs for travis. And this bugs already solved in #1217 \r\nI do not think that it is good point to merge test-fixing issues to commit that not related to tests at all. \r\nAll markdown and syntax change for this PR was passed. \r\nI will merge docs changes from last 24 hours and we will see is appveyor showing same results every time. I think - no.",
      "Ok, results are the same each time for appveyor. But as we see it in last PRs discussion this issue should be related to incorrect pip version in travis. As it is only one build that uses 19.2.2, others use 19.2.3\r\n\r\nBu the way it is interesting, that in this build for other PR 3.5 uses 19.2.3 https://ci.appveyor.com/project/cookiecutter/cookiecutter/builds/26996821/job/xrghfgr0tujph92a\r\n\r\nThanks god I changed Windows to Linux :) ",
      "@hackebrot Any news on this?",
      "I did not have time to review this pull-request.",
      "I hate appveyor. All the problem was in outdated versions in tox notation. \r\nI updated tox requirements to current, and now it is green and will not break our CI/CD\r\nReady for merge.",
      "Thanks! Lets merge it.",
      "🚀  SHIP IT!",
      "Merged after one month of review :) \r\n@wagnernegrao congratulations, thank you.",
      "I think the issue (#1062)  was accidentally ignored in this PR.\r\n\r\nI had the same errors while running `make servedocs`.\r\nGot fixed when I installed the dependencies mentioned in #1126.\r\n\r\nShould I create a new issue/PR for this ?",
      "@Bhupesh-V If yoou have any issue anywhere you always should create new issue and PR, and never try to use old ones. As mentioned issue was related to version 1.6.0. (2 years ago)"
    ],
    "commit_messages": [
      "Merge PR #1216: Core documentation converted to Markdown"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db27ac254a19ac29e6a6",
    "number": 1215,
    "body": "Fix [Python 2.7 test environment](https://ci.appveyor.com/project/cookiecutter/cookiecutter/branch/master/job/ec787v2rawykero1). See https://github.com/tox-dev/tox/issues/1406",
    "head_branch": "fix-build-failure-for-py2",
    "is_a_fork": true,
    "comments": [
      "As more and more projects drop support of python 2.7 we will face such issues more frequently. \r\nIf I understand correctly this PR does not fix it in appveyor.\r\nI think we should make some sprint in September to close as many current issues as possible, release 1.7.0 and drop python 2.7 support after it. \r\n",
      "# [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1215?src=pr&el=h1) Report\n> Merging [#1215](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1215?src=pr&el=desc) into [master](https://codecov.io/gh/cookiecutter/cookiecutter/commit/dade3bd9addb836a5b98b2c5ee0d00e5a8a59161?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1215/graphs/tree.svg?width=650&token=8kF8iLUMJE&height=150&src=pr)](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1215?src=pr&el=tree)\n\n```diff\n@@          Coverage Diff           @@\n##           master   #1215   +/-   ##\n======================================\n  Coverage     100%    100%           \n======================================\n  Files          18      18           \n  Lines         784     784           \n======================================\n  Hits          784     784\n```\n\n\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1215?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1215?src=pr&el=footer). Last update [dade3bd...5e65edf](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1215?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
      "# [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1215?src=pr&el=h1) Report\n> Merging [#1215](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1215?src=pr&el=desc) into [master](https://codecov.io/gh/cookiecutter/cookiecutter/commit/dade3bd9addb836a5b98b2c5ee0d00e5a8a59161?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1215/graphs/tree.svg?width=650&token=8kF8iLUMJE&height=150&src=pr)](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1215?src=pr&el=tree)\n\n```diff\n@@          Coverage Diff           @@\n##           master   #1215   +/-   ##\n======================================\n  Coverage     100%    100%           \n======================================\n  Files          18      18           \n  Lines         784     784           \n======================================\n  Hits          784     784\n```\n\n\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1215?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1215?src=pr&el=footer). Last update [dade3bd...5e65edf](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1215?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
      "Thanks for the review @ssbarnea! 🍪 ",
      "@insspb Lets not diverge, I hope we do not discuss dropping py27 before 2020. I use cookiecutter in molecule and I am sure I will not drop it until it ends EOL. Even after I am likely to keep it until I am forced to drop it. I am more likely to replace a library that drops support for it than dropping support for py27."
    ],
    "commit_messages": [
      "Merge pull request #1215 from hackebrot/fix-build-failure-for-py2\n\nRequire pip 9.0.0 or newer and upgrade virtualenv for tox envs"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db28ac254a19ac29e6a7",
    "number": 1213,
    "body": "This goes to fix this: https://github.com/cookiecutter/cookiecutter/issues/1204",
    "head_branch": "remove-dead-links-readme",
    "is_a_fork": true,
    "comments": [
      "Thank you for notice. It will be implemented in #1185 before the merge."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db29ac254a19ac29e6a8",
    "number": 1210,
    "body": "This PR converts the custom jinja2 extension called JsonifyExtension to a function to conform with the standard stated here: https://github.com/cookiecutter/cookiecutter/blob/master/CONTRIBUTING.rst#L165 which states that this project should prefer functions to classes.",
    "head_branch": "feature-use-function-extension",
    "is_a_fork": true,
    "comments": [
      "This seems fine, code-wise, but I'm not sure preferring functions to classes means we should rewrite existing code without getting additional benefits?",
      "Code looks good. But overall I do not think that this implementation makes all codebase easier to read and understand. Let's hear from other developers.",
      "Hi @yudori! 👋 \r\n\r\nThank you for your pull-request. Based on our [coding standards documentation](https://github.com/cookiecutter/cookiecutter/blob/master/CONTRIBUTING.rst#L165), you were right to assume that this jinja2 extension needed to me updated to be using functions instead of a class. In my opinion, this specific guideline applies to cookiecutter's own code, while the extension follows the [best practices of the jinja2 project](https://jinja.palletsprojects.com/en/2.10.x/extensions/#example-extension).\r\n\r\nI'm sorry, but I will have to close your pull-request. I created #1214 to update the coding standards section in our contributing guide to make sure it doesn't happen again. 📝 \r\n\r\nThanks again for your work. I hope to see another pull-request from you @yudori! 🍪 "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db2aac254a19ac29e6a9",
    "number": 1209,
    "body": "Convert Readme from rst to md",
    "head_branch": "readme-rst-to-md",
    "is_a_fork": true,
    "comments": [
      "Thank you for efforts, but this is duplicate work. The same done in #1185 \r\nsetup.py changes not included in #1185 at this point. If you remove all changes except setup.py and make new PR it will be merged with #1185 if will not be added at #1185 at merge time. \r\nThank you for work anyway."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db2aac254a19ac29e6aa",
    "number": 1207,
    "body": "Fix #1180 \r\n\r\nAll CI/CD steps, as shown in #1181 \r\n   - [X] Travis\r\n   - [X] appveyor/pr \r\n   - [X] codecov\r\n   - [X] scrutinizer-ci\r\n   - [x] remove landscape.io\r\n\r\nAbout the landscape.io integration: Since the project moved to an organization, landscape.io can't find the project anymore, so I had to [create it again in landscape.io](https://landscape.io/repository/58537/status), however, the webhook integration process is never completed. The issue described here: https://github.com/landscapeio/landscape-issues/issues/310",
    "head_branch": "issue_1180",
    "is_a_fork": true,
    "comments": [
      "Thoughts on dropping landscape for now then?",
      "@luzfcb should we try update readthedocs in this change also?",
      "I just granted RDD and travis cookiecutter org access.",
      "I haven't used landscape.io. Happy to remove it unless folks find it useful? 🤷‍♂  ",
      "# [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1207?src=pr&el=h1) Report\n> Merging [#1207](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1207?src=pr&el=desc) into [master](https://codecov.io/gh/cookiecutter/cookiecutter/commit/f8470a8c4b01e213074c8514d2710f2f990faa47?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1207/graphs/tree.svg?width=650&token=8kF8iLUMJE&height=150&src=pr)](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1207?src=pr&el=tree)\n\n```diff\n@@          Coverage Diff           @@\n##           master   #1207   +/-   ##\n======================================\n  Coverage     100%    100%           \n======================================\n  Files          18      18           \n  Lines         784     784           \n======================================\n  Hits          784     784\n```\n\n\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1207?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1207?src=pr&el=footer). Last update [f8470a8...12483fd](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1207?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
      "# [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1207?src=pr&el=h1) Report\n> Merging [#1207](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1207?src=pr&el=desc) into [master](https://codecov.io/gh/cookiecutter/cookiecutter/commit/f8470a8c4b01e213074c8514d2710f2f990faa47?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1207/graphs/tree.svg?width=650&token=8kF8iLUMJE&height=150&src=pr)](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1207?src=pr&el=tree)\n\n```diff\n@@          Coverage Diff           @@\n##           master   #1207   +/-   ##\n======================================\n  Coverage     100%    100%           \n======================================\n  Files          18      18           \n  Lines         784     784           \n======================================\n  Hits          784     784\n```\n\n\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1207?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1207?src=pr&el=footer). Last update [f8470a8...c8bee51](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1207?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
      "I really like the landscape.io UI, but I'm fine to let it go, then I removed the landscape.io from the README."
    ],
    "commit_messages": [
      "Merge pull request #1207 from luzfcb/issue_1180\n\nUpdate README badge links"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db2bac254a19ac29e6ab",
    "number": 1206,
    "body": "",
    "head_branch": "testing",
    "is_a_fork": true,
    "comments": [
      "@mihrab34 Thanks to your contribution. Can you add yourself on the AUTHORS.rst ?",
      "# [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1206?src=pr&el=h1) Report\n> Merging [#1206](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1206?src=pr&el=desc) into [master](https://codecov.io/gh/cookiecutter/cookiecutter/commit/21687afd7ac00036e78bcf79b08ef56188246fa6?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1206/graphs/tree.svg?width=650&token=8kF8iLUMJE&height=150&src=pr)](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1206?src=pr&el=tree)\n\n```diff\n@@          Coverage Diff           @@\n##           master   #1206   +/-   ##\n======================================\n  Coverage     100%    100%           \n======================================\n  Files          18      18           \n  Lines         783     784    +1     \n======================================\n+ Hits          783     784    +1\n```\n\n\n| [Impacted Files](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1206?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [cookiecutter/cli.py](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1206/diff?src=pr&el=tree#diff-Y29va2llY3V0dGVyL2NsaS5weQ==) | `100% <0%> (ø)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1206?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1206?src=pr&el=footer). Last update [21687af...0005ead](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1206?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
      "Thanks for the inclusion.",
      "Thank you for your pull-request @mihrab34! 🍪 "
    ],
    "commit_messages": [
      "Merge pull request #1206 from mihrab34/testing\n\nTest the codebase with python3.8 beta on tox and Travis-ci"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db2cac254a19ac29e6ac",
    "number": 1205,
    "body": "Replace flake8 with black",
    "head_branch": "flack8-to-black",
    "is_a_fork": true,
    "comments": [
      "Not entirely sure I agree with this PR, `flake8` can do a lot more things than just paint it black?",
      "Hi @millatidy! 👋 \r\n\r\nThank you for your pull-request to Cookiecutter! 🍪\r\n\r\nI'm afraid I'm with @michaeljoseph here. I'm happy to auto-format source code with black, but we will need to continue running flake8 as a code linter.",
      "> Hi @millatidy! 👋\r\n> \r\n> Thank you for your pull-request to Cookiecutter! 🍪\r\n> \r\n> I'm afraid I'm with @michaeljoseph here. I'm happy to auto-format source code with black, but we will need to continue running flake8 as a code linter.\r\n\r\n@hackebrot and @michaeljoseph I noticed some PR's are failing due to vague linting issues. That is why I made this PR. How the the failing PR's be fixed for instance this PR?",
      "I played with black a little bit and have some thoughts about it. \r\n1. It is not style checker, it is formatter. So we should not change flake8 for it. Moreover in next versions of python we, I hope, will extend flake8 with mypy type checking plugin.\r\n2. Implementation of black with default settings will require a complete codebase code change. That will make all existing pull requests problematic. Here is example of what black with do with one of our files, when black allowed to any change.\r\n![Screenshot from 2019-08-25 17-11-09](https://user-images.githubusercontent.com/1916759/63651269-a1157480-c75b-11e9-8a48-13fba0f232e8.png)\r\n3. In other places, black sometimes do a good job. (With restricted quotes change) I like this type of formatting:\r\n![Screenshot from 2019-08-25 17-10-02](https://user-images.githubusercontent.com/1916759/63651272-a1157480-c75b-11e9-9142-c174bbe69c63.png)\r\nBut if line not so long it can break already formatted to oneliner. I do not like it for lines where it was already formatted vertically.\r\n![Screenshot from 2019-08-25 17-10-24](https://user-images.githubusercontent.com/1916759/63651271-a1157480-c75b-11e9-9398-55cd6f2aab22.png)\r\n\r\nSo at the end of the day. this commit will break existing codebase and will require next commit to fix it. \r\nThis commit is not ready to merge.\r\nBlack CAN be implemented as precommit hook on github, and only in this way. But this should be done when most current PRs are closed/merged.\r\nI will close it. You can open an issue to discuss this feature."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db2dac254a19ac29e6ad",
    "number": 1203,
    "body": "Referencing [Issue](https://github.com/cookiecutter/cookiecutter/issues/1179). Added acknowledgment to @audreyr  and contributors.",
    "head_branch": "readme-rst-to-md",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1203?src=pr&el=h1) Report\n> Merging [#1203](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1203?src=pr&el=desc) into [master](https://codecov.io/gh/cookiecutter/cookiecutter/commit/5c282f020a8db7e5e7c4e7b51b010556ca31fb7f?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1203/graphs/tree.svg?width=650&token=8kF8iLUMJE&height=150&src=pr)](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1203?src=pr&el=tree)\n\n```diff\n@@          Coverage Diff           @@\n##           master   #1203   +/-   ##\n======================================\n  Coverage     100%    100%           \n======================================\n  Files          18      18           \n  Lines         783     783           \n======================================\n  Hits          783     783\n```\n\n\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1203?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1203?src=pr&el=footer). Last update [5c282f0...67ef6db](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1203?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db2eac254a19ac29e6ae",
    "number": 1202,
    "body": "Referencing issue [1179](https://github.com/cookiecutter/cookiecutter/issues/1179)\r\n\r\nI converted all `rst` files in `docs/advanced`\r\n",
    "head_branch": "rst-to-md",
    "is_a_fork": true,
    "comments": [
      "@sasili-adetunji looks like your change is failing our `pre-commit` trailing whitespace check: https://travis-ci.com/cookiecutter/cookiecutter/jobs/224115003",
      "# [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1202?src=pr&el=h1) Report\n> Merging [#1202](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1202?src=pr&el=desc) into [master](https://codecov.io/gh/cookiecutter/cookiecutter/commit/5c282f020a8db7e5e7c4e7b51b010556ca31fb7f?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1202/graphs/tree.svg?width=650&token=8kF8iLUMJE&height=150&src=pr)](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1202?src=pr&el=tree)\n\n```diff\n@@          Coverage Diff           @@\n##           master   #1202   +/-   ##\n======================================\n  Coverage     100%    100%           \n======================================\n  Files          18      18           \n  Lines         783     783           \n======================================\n  Hits          783     783\n```\n\n\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1202?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1202?src=pr&el=footer). Last update [5c282f0...3515bc4](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1202?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
      "@sasili-adetunji https://travis-ci.com/cookiecutter/cookiecutter/jobs/224129085 is complaining about `docs/usage.rst` for some reason.\r\nI think the best way to address this would be to run the `tox -e lint` task locally?",
      "Also, I think may be ok to put the new markdown files in the same directory as the rst ones?",
      "this is sphinx documents, rendered only on main site. Do we really need to convert it? I am not sure that  idea was in converting all the docs. I assume, that idea was to convert docs, available on main github page. \r\nBut let's hear from other devs.",
      "@sasili-adetunji \r\nAfter fresh review. This PR added another directory, that will not be rendered by sphinx. \r\nAnd there will be files duplication in sphinx and MD. \r\nThe basic task was phrased wrong, and I do not think that we need conversion of all docs to md.\r\nSo this will not be merged. Sorry."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db2eac254a19ac29e6af",
    "number": 1200,
    "body": "Including a random string of some kind in a template is often a use case. Currently the workarounds are really quite annoying: You can use a post_hook to replace tokens in a file, but this is super hacky.\r\n\r\nThis feature has been requested a number of times, and I really think including a `random_ascii_string` global function would be really useful.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1200?src=pr&el=h1) Report\n> Merging [#1200](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1200?src=pr&el=desc) into [master](https://codecov.io/gh/cookiecutter/cookiecutter/commit/2ed56bf0891245e92d6fdc2339be239ae7dbc6b1?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1200/graphs/tree.svg?width=650&token=8kF8iLUMJE&height=150&src=pr)](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1200?src=pr&el=tree)\n\n```diff\n@@          Coverage Diff           @@\n##           master   #1200   +/-   ##\n======================================\n  Coverage     100%    100%           \n======================================\n  Files          18      18           \n  Lines         784     832   +48     \n======================================\n+ Hits          784     832   +48\n```\n\n\n| [Impacted Files](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1200?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [cookiecutter/environment.py](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1200/diff?src=pr&el=tree#diff-Y29va2llY3V0dGVyL2Vudmlyb25tZW50LnB5) | `100% <ø> (ø)` | :arrow_up: |\n| [cookiecutter/extensions.py](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1200/diff?src=pr&el=tree#diff-Y29va2llY3V0dGVyL2V4dGVuc2lvbnMucHk=) | `100% <100%> (ø)` | :arrow_up: |\n| [cookiecutter/replay.py](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1200/diff?src=pr&el=tree#diff-Y29va2llY3V0dGVyL3JlcGxheS5weQ==) | `100% <0%> (ø)` | :arrow_up: |\n| [cookiecutter/exceptions.py](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1200/diff?src=pr&el=tree#diff-Y29va2llY3V0dGVyL2V4Y2VwdGlvbnMucHk=) | `100% <0%> (ø)` | :arrow_up: |\n| [cookiecutter/cli.py](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1200/diff?src=pr&el=tree#diff-Y29va2llY3V0dGVyL2NsaS5weQ==) | `100% <0%> (ø)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1200?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1200?src=pr&el=footer). Last update [2ed56bf...7034c61](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1200?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
      "Oh, just forgot main problem. \r\nThis should be documented in Advanced usage docs. In same place where time extension documented. \r\nWith usage examples. \r\nThank you. Let's merge it before 1.7.0",
      "Done @insspb. I've updated the advanced usage page to cover the jsonify extension as well. Let me know what you think!",
      "@orf Thank you for your efforts. I made a pull request to your repo after manual check of this plugin. Please merge it, msg me, and I will mark it as needs review and needs-merge.",
      "Thanks for your MR @insspb. I've left a comment: I'm against not using the 'secrets' module here. Please remove that deletion and I'll merge, and we can get this in for 1.7.0.",
      "@orf Ok, not big deal, maybe you right, changed in PR. \r\n\r\nP.S., By the way, please review #1216 here, as we have not enough reviewers for my big commit. ",
      "Hi @orf! 👋 \r\n\r\nThank you for submitting a pull-request to cookiecutter!\r\n\r\nYou said that this feature has been requested a number of times and that workarounds for this are annoying to use. Can you please provide example use cases where template authors would want to create a generate a random string? Also have you considered publishing this extension and make it [available for the template](https://cookiecutter.readthedocs.io/en/latest/advanced/template_extensions.html#template-extensions) rather than shipping it with cookiecutter?\r\n\r\nWe need to be deliberate with adding new features to cookiecutter since we have limited bandwidth to maintain this project and care about backwards-compatibility, meaning that if we merge a feature we will most likely have to maintain it for quite some time. 🍪 ",
      "The case that spurred this MR was generating an Elixir project. Elixir requires three secret keys embedded in a configuration file. The creator of the Elixir template had written a pre_hook in Python that would write three keys to three files, and a post_hook that would do some `sed` magic to add the random strings to the right places. This is absolute madness, and meant you could not use the template from a git URL, but after spending some time I couldn't find a much better way (one python post_hook isn't much better). \r\n\r\nPeople write things like this because they have a use case that's not easily supported, and I expect he is not the first one to have to hack around this.\r\n\r\nMaintenance is a burden, as always, but this is a not uncommon use case. I don't have the time now, but I did some searching before and there are several requests for this in the repo across the years. This is essentially a 5 line function with some boilerplate. I don't see that it's particularly burdensome to maintain.\r\n\r\nCookiecutter is used in more contexts than just Python, and all of our internal users of it install via homebrew. Asking them to install a third party Python package before running a template is a big hurdle that not everyone will be able to complete, and plus I'm not even sure if it's possible with Homebrew (it installs cookiecutter to an isolated virtualenv).",
      "Any news on this? Can we get it merged soonish? Not sure when the release is, but I'd really love this to be in it."
    ],
    "commit_messages": [
      "Add a random_ascii_string() global function. (#1200)\n\n* Add a global random_ascii_string() method\r\n\r\n* Imports and docs fix\r\n\r\n* Secrets module back\r\n\r\nCo-authored-by: Andrey Shpak <insspb@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db2fac254a19ac29e6b0",
    "number": 1198,
    "body": "I have added a cookiecutter for ExpressJS with mongoose, passportjs, ansible, circleci, sphinx, sentry setup in the list. ",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1198?src=pr&el=h1) Report\n> Merging [#1198](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1198?src=pr&el=desc) into [master](https://codecov.io/gh/cookiecutter/cookiecutter/commit/5c282f020a8db7e5e7c4e7b51b010556ca31fb7f?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1198/graphs/tree.svg?width=650&token=8kF8iLUMJE&height=150&src=pr)](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1198?src=pr&el=tree)\n\n```diff\n@@          Coverage Diff           @@\n##           master   #1198   +/-   ##\n======================================\n  Coverage     100%    100%           \n======================================\n  Files          18      18           \n  Lines         783     783           \n======================================\n  Hits          783     783\n```\n\n\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1198?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1198?src=pr&el=footer). Last update [5c282f0...4e3f7be](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1198?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db30ac254a19ac29e6b1",
    "number": 1197,
    "body": "",
    "head_branch": "Fix-typos",
    "is_a_fork": true,
    "comments": [
      "@minho42 thanks for the contribution. Please add your name to the contributors list.\r\nhttps://github.com/cookiecutter/cookiecutter/blob/master/AUTHORS.rst#contributors",
      "@luzfcb \r\nDone.\r\nThanks."
    ],
    "commit_messages": [
      "Fix typos (#1197)\n\n* Fix typos\r\n\r\n* Update AUTHORS.rst Contributors\r\n\r\n* Fix typo"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db31ac254a19ac29e6b2",
    "number": 1195,
    "body": "* enable chaining multiple linters via pre-commit tool.\r\n* fixes several trailing newlines\r\n* removes few incorrect +x modes on files\r\n* adds few extra checks\r\n* renames flake8 tox environment to 'lint' to avoid confusions\r\n* fixes docs/conf.py style so we do not need more flake8 excludes",
    "head_branch": "pre-commit",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1195?src=pr&el=h1) Report\n> Merging [#1195](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1195?src=pr&el=desc) into [master](https://codecov.io/gh/cookiecutter/cookiecutter/commit/1c547ee9e8b316b36316788ee40f3db60302bbb5?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1195/graphs/tree.svg?width=650&token=8kF8iLUMJE&height=150&src=pr)](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1195?src=pr&el=tree)\n\n```diff\n@@          Coverage Diff           @@\n##           master   #1195   +/-   ##\n======================================\n  Coverage     100%    100%           \n======================================\n  Files          18      18           \n  Lines         783     783           \n======================================\n  Hits          783     783\n```\n\n\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1195?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1195?src=pr&el=footer). Last update [1c547ee...94888c7](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1195?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
    ],
    "commit_messages": [
      "Generalize linter calling via pre-commit (#1195)\n\n* enable chaining multiple linters via pre-commit tool.\r\n* fixes several trailing newlines\r\n* removes few incorrect +x modes on files\r\n* adds few extra checks\r\n* renames flake8 tox environment to 'lint' to avoid confusions\r\n* fixes docs/conf.py style so we do not need more flake8 excludes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db32ac254a19ac29e6b3",
    "number": 1193,
    "body": "The one in https://jinja.readthedocs.io/en/2.10/ does not exist. ",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1193?src=pr&el=h1) Report\n> Merging [#1193](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1193?src=pr&el=desc) into [master](https://codecov.io/gh/cookiecutter/cookiecutter/commit/5292b095a215c58c62a55400857e458069520c9f?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1193/graphs/tree.svg?width=650&token=8kF8iLUMJE&height=150&src=pr)](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1193?src=pr&el=tree)\n\n```diff\n@@          Coverage Diff           @@\n##           master   #1193   +/-   ##\n======================================\n  Coverage     100%    100%           \n======================================\n  Files          18      18           \n  Lines         783     783           \n======================================\n  Hits          783     783\n```\n\n\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1193?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1193?src=pr&el=footer). Last update [5292b09...df5177d](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1193?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
      "Hi  @hackebrot\r\n\r\nShould I add or modify anything else?\r\n\r\n",
      "Thank you for your pull-request, @dacog! 🍪 "
    ],
    "commit_messages": [
      "Merge pull request #1193 from dacog/patch-1\n\nupdate link to Jinja2 extensions Documentation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db32ac254a19ac29e6b4",
    "number": 1192,
    "body": "Some systems may have older virtualenv versions which would install\r\nan ancient version of pip (like 8.1.1) which is not able to parse\r\nrequirements correctly generating errors like:\r\n```\r\nRequirementParseError: Expected ',' or end-of-list in pathlib2>=2.2.0;python_version<\"3.6\" at ;python_version<\"3.6\"\r\nYou are using pip version 8.1.1, however version 19.1.1 is available.\r\n```\r\nWe cannot really support such versions so we can assure that we\r\nonly run with relatively newer tools.\r\n\r\nThis should fixed observed AppVeyor errors.",
    "head_branch": "fix/setup-requiremetns",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Avoids tox/pip failures on old systems (#1192)\n\nSome systems may have older virtualenv versions which would install\r\nan ancient version of pip (like 8.1.1) which is not able to parse\r\nrequirements correctly generating errors like:\r\n\r\nRequirementParseError: Expected ',' or end-of-list in pathlib2>=2.2.0;python_version<\"3.6\" at ;python_version<\"3.6\"\r\nYou are using pip version 8.1.1, however version 19.1.1 is available.\r\n\r\nWe cannot really support such versions so we can assure that we\r\nonly run with relatively newer tools.\r\n\r\nThis should fixed observed AppVeyor errors."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db33ac254a19ac29e6b5",
    "number": 1191,
    "body": "",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [
      "Hi @cclauss and thanks for your contribution!\r\nIt looks like we've already upgraded `flake8` in the move to `pre-commit` (#1195), so i'm going to thank you again, and close this."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db34ac254a19ac29e6b6",
    "number": 1189,
    "body": "Fixes: #1182",
    "head_branch": "fix/depantry",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1189?src=pr&el=h1) Report\n> Merging [#1189](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1189?src=pr&el=desc) into [master](https://codecov.io/gh/cookiecutter/cookiecutter/commit/db6893b26d591781d14f80f1b51ef83531719ad8?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1189/graphs/tree.svg?width=650&token=8kF8iLUMJE&height=150&src=pr)](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1189?src=pr&el=tree)\n\n```diff\n@@           Coverage Diff           @@\n##           master    #1189   +/-   ##\n=======================================\n  Coverage   99.74%   99.74%           \n=======================================\n  Files          18       18           \n  Lines         783      783           \n=======================================\n  Hits          781      781           \n  Misses          2        2\n```\n\n\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1189?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1189?src=pr&el=footer). Last update [db6893b...4fdda7d](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1189?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
    ],
    "commit_messages": [
      "Document use of cookiecutter-template topic on GitHub (#1189)\n\nFixes: #1182"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db35ac254a19ac29e6b7",
    "number": 1188,
    "body": "Added: CONTRIBUTING.md\r\nRemoved: CONTRIBUTING.rst\r\n\r\nIt refers to issue #1179 ",
    "head_branch": "rst2md",
    "is_a_fork": true,
    "comments": [
      "@ronaldpnh thank you for this work start. But we need to bring all text from old .rst to new .md\r\nI will wait for the update for two-tree weeks if you will add changes that cover all old file we will merge it. \r\nCurrently it is [Work in progress]",
      "@ronaldpnh if you will not work on this, please msg here. I will close this PR in this case. Thank you.",
      "Hi, don't worry, i will review and fix it.\r\nWhen i finish and commit the changes, i mention you here. ;)",
      "Please update or we will close the PR. Now that we fixed CI we can start merging contributions, especially simple ones like this.",
      "Let's put this in a nicer way: @pinho, please update so we can merge it in ASAP. 😀\r\n\r\n@ssbarnea, we do our best to be nice to contributors. It's good karma. 😁",
      "@pinho Thank you for your great work and efforts.\r\nUnfortunately, same work was almost completed in #1185, and completely finished at #1216 \r\nI am closing this commit to keep all work in one place and make it in a timely manner. \r\nI am inviting you to review #1216 to speed up overall progress."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db36ac254a19ac29e6b8",
    "number": 1187,
    "body": "see https://github.com/cookiecutter/cookiecutter/issues/1186",
    "head_branch": "cpp_cookiecutter",
    "is_a_fork": true,
    "comments": [
      "I added the cookiecutter keywords and added more documentation for the cookiecutter on readthedocs.\r\nAny suggestions to to improve the changes of a merge? =)\r\nGreetings Thorsten",
      "We are no longer maintaining a list of templates inside README file and instead we use github topics feature. Please read https://github.com/cookiecutter/cookiecutter#a-pantry-full-of-cookiecutters and add the needed topics to your repository and people will be able to find your template. The most important one is ``cookiecutter-template``.\r\n\r\nWe are also going to remove most of already listed templates from there, in order not avoid being biased."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db36ac254a19ac29e6b9",
    "number": 1185,
    "body": "Referencing the issue [1179](https://github.com/cookiecutter/cookiecutter/issues/1179)\r\n\r\nI'm working to convert all files.\r\n\r\nFiles:\r\n- [x] Authors\r\n- [x] Backers\r\n- [x] Contributing\r\n- [x] History\r\n- [x] Readme\r\n - [x] case_studie\r\n\r\nWork in production!",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "@wagnernegrao thank you. Msg me when you ready. ",
      "@insspb  Alright, I'll make the changes with more agility next week.",
      "# [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1185?src=pr&el=h1) Report\n> Merging [#1185](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1185?src=pr&el=desc) into [master](https://codecov.io/gh/cookiecutter/cookiecutter/commit/db6893b26d591781d14f80f1b51ef83531719ad8?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1185/graphs/tree.svg?width=650&token=8kF8iLUMJE&height=150&src=pr)](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1185?src=pr&el=tree)\n\n```diff\n@@          Coverage Diff           @@\n##           master   #1185   +/-   ##\n======================================\n  Coverage     100%    100%           \n======================================\n  Files          18      18           \n  Lines         783     783           \n======================================\n  Hits          783     783\n```\n\n\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1185?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1185?src=pr&el=footer). Last update [db6893b...c088608](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1185?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
      "I finished converting the files for markdown. @insspb @pydanny ",
      "Ok thanks, I'm happy to help.\r\n\r\nI'll to do all corrections gradually, some errors are per lack of attention, sorry. =)",
      "@wagnernegrao please look at #1209 and implement setup.py change from there, if possible.",
      "@wagnernegrao I made a pull request to your branch that fixes setup.py and sphinx related changes.\r\nThis will make this PR more relevant and will not break main documentation after merge. Please merge my PR and fix other mentioned issues in MD files. After all these changes this PR will be marked as needs-merge.",
      "@insspb @wagnernegrao please ping me when is ready, this went for too long anyway. ",
      "Hey @ssbarnea! 👋\r\n\r\nPlease be thoughtful and show empathy when interacting with first-time contributors. Not everyone can contribute to open-source as part of their job and we need to be okay with waiting for contributors to address our review comments at times.\r\n\r\n> this went for too long anyway.\r\n\r\nThank you. 🙇 ",
      "@wagnernegrao thank you for your great work. I took some time and finished it. I hope it will be merged with my commit #1216\r\nYou do not need to update anything here. I already updated all my issues and many more. \r\nYou are invited to review #1216 \r\nAll your contributions and commits included and all credits are in doc. \r\nThank you.\r\nI am closing this PR to keep work in one place as I am able to finish it in a timely manner. "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db37ac254a19ac29e6ba",
    "number": 1184,
    "body": "Add file:// as a suitable protocol\r\n\r\nRequired if the repo is stored in Windows server, or other shared folder.\r\n\r\nEnables the following:\r\n$ cookiecutter \"file://path/to/server/repo.git\"\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "I'm trying to run cookiecutter against a local, version controlled, repository and the `--checkout BRANCH`  option seems to largely be ignored. Similarly if I invoke cookiecutter with `checkout=\"BRANCH\"`. I suspect it is not picking up that the cookiecutter resides within a repository as I am passing in a local path for the repository argument. As a consequence I have tried a number of variants of the `file:///...folder` both with forward and backward slashes and double/triple leading slashes, My results are as follows :\r\n\r\n```\r\ne:\\Python>cookiecutter file:///e:/python/biscuits --checkout python\r\nA valid repository for \"file:///e:/python/biscuits\" could not be found in the following locations:\r\nfile:///e:/python/biscuits\r\n\r\ne:\\Python>cookiecutter file:///e:\\python\\biscuits --checkout python\r\nA valid repository for \"file:///e:\\python\\biscuits\" could not be found in the following locations:\r\nfile:///e:\\python\\biscuits\r\n\r\ne:\\Python>cookiecutter file:///e:\\\\python\\\\biscuits --checkout python\r\nA valid repository for \"file:///e:\\\\python\\\\biscuits\" could not be found in the following locations:\r\nfile:///e:\\\\python\\\\biscuits\r\n\r\ne:\\Python>cookiecutter file://e:/python/biscuits --checkout python\r\nA valid repository for \"file://e:/python/biscuits\" could not be found in the following locations:\r\nfile://e:/python/biscuits\r\n\r\ne:\\Python>cookiecutter file://e:\\python\\biscuits --checkout python\r\nA valid repository for \"file://e:\\python\\biscuits\" could not be found in the following locations:\r\nfile://e:\\python\\biscuits\r\n\r\ne:\\Python>cookiecutter file://e:\\\\python\\\\biscuits --checkout python\r\nA valid repository for \"file:///e:/python/biscuits\" could not be found in the following locations:\r\nfile:///e:/python/biscuits\r\n```\r\n\r\nI am also uncertain of where the `.git` in `.../folder.git` originates from ? If I create a normal repository the result is `.../folder/.git` and if I push this into a \"bare\" repository there isn't a `.git` folder. Is this some naming convention that you use to identify folders under version control e.g. `../folder.git`, `../folder.svn`, `.../folder.cvs` etc. or is there some other format for a git folder that I'm unaware of ? Renaming my repository as `../folder.git` has no effect either. My guess is that this is some form of convention that you use and that the documentation does not reflect this or you are actually pointing to a repository hosted on some form of git server, though which one is not clear (I know gitlab/github append `.git` to their urls for instance but I do not know how one hosts a repository under such a path ending otherwise; If you do this I'd be keen to know how)",
      "After a quick skim through `cookiecutter/repository.py` it seems as though cookiecutter only tests for the presence of a local folder and does not inspect it for any versioning mechanism. If I follow it correctly the code uses `REPO_REGEX`  to distinguish `git|svn|cvs+file://some/path`, under version control, from `/some/path`, without version control. I tested `REPO_REGEX` does match my use cases above yet the \"repository\" code that should execute in preference to the \"folder\" does not and I fall through to the raised exception at the end of `determine_repo_dir`. It seems that cookiecutter should duplicate local paths, that are version controlled repositories, to be duplicated into the users' `.cookiecutter` folder in the same manner that a remote repository might be checked out yet for me this is failing.\r\n\r\n*aside: * I'll fire up a development environment for this when I have time again but for today I'm out of moonlight."
    ],
    "commit_messages": [
      "Add file:// as a suitable protocol (#1) (#1184)\n\n* Add file:// as a suitable protocol (#1)\r\n\r\n* Add file:// as a suitable protocol\r\n\r\nThis is required if the repo is stored in Windows server,\r\nor other shared folder.\r\n\r\n* Update usage.rst to reflect comments on PR #1184 (#2)\r\n\r\nRefer to https://github.com/cookiecutter/cookiecutter/pull/1184"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db38ac254a19ac29e6bb",
    "number": 1183,
    "body": "Links to our pages was not posted and our short names was given with error. \r\nThis PR fix it.",
    "head_branch": "authors",
    "is_a_fork": true,
    "comments": [
      "LGTM"
    ],
    "commit_messages": [
      "Merge pull request #1183 from insspb/authors\n\nFix links to new core committers"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db39ac254a19ac29e6bc",
    "number": 1181,
    "body": "Changes to original #1178 PR are: \r\n\r\n* Removed python 3.3 mentions in `docs/contributor_guidelines.rst`\r\n* Added python 3.4 restriction to `setup.py`",
    "head_branch": "drop34",
    "is_a_fork": true,
    "comments": [
      "Tested locally with tox:\r\n```\r\n___________________________________________________________________________________________________________ summary ___________________________________________________________________________________________________________\r\n  py27: commands succeeded\r\n  py35: commands succeeded\r\n  py36: commands succeeded\r\n  py37: commands succeeded\r\nERROR:   pypy: InterpreterNotFound: pypy\r\n  flake8: commands succeeded\r\n```",
      "Just remove \"Merged #1178\" suffix from the PR title and it should be fine.",
      "# [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1181?src=pr&el=h1) Report\n> Merging [#1181](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1181?src=pr&el=desc) into [master](https://codecov.io/gh/cookiecutter/cookiecutter/commit/9007ae5ec54b82b97aca0b02268a12e1e11beb39?src=pr&el=desc) will **decrease** coverage by `0.25%`.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1181/graphs/tree.svg?width=650&token=8kF8iLUMJE&height=150&src=pr)](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1181?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master    #1181      +/-   ##\n==========================================\n- Coverage     100%   99.74%   -0.26%     \n==========================================\n  Files          18       18              \n  Lines         783      783              \n==========================================\n- Hits          783      781       -2     \n- Misses          0        2       +2\n```\n\n\n| [Impacted Files](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1181?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [cookiecutter/utils.py](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1181/diff?src=pr&el=tree#diff-Y29va2llY3V0dGVyL3V0aWxzLnB5) | `96% <0%> (-4%)` | :arrow_down: |\n| [cookiecutter/repository.py](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1181/diff?src=pr&el=tree#diff-Y29va2llY3V0dGVyL3JlcG9zaXRvcnkucHk=) | `100% <0%> (ø)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1181?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1181?src=pr&el=footer). Last update [9007ae5...d1cefe2](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1181?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
      "On the pytest warning `\\(` --> `\\\\(`\r\n\r\n4     C901 'generate_files' is too complex (16)\r\n2     E121 continuation line under-indented for hanging indent\r\n6     E122 continuation line missing indentation or outdented\r\n59    E265 block comment should start with '# '\r\n1     E302 expected 2 blank lines, found 1\r\n1     E305 expected 2 blank lines after class or function definition, found 1\r\n1     E401 multiple imports on one line\r\n1     E402 module level import not at top of file\r\n1     F811 redefinition of unused 'sys' from line 14\r\n2     W605 invalid escape sequence '\\('\r\n78",
      "@cclauss I would be more than happy to make another PR to fix the warnings noted by you. At the same time lets remember that these warnings are not caused by that PR code itself.\r\n\r\nI cannot update this PR myself, that is why I am trying to see it merged sooner we already wasted weeks trying to get someone to merge fixes for a broken CI.",
      "Weeks?!?  #1085 was open for a year before it was closed in favor of this effort.",
      "Hi @insspb! 👋\r\n\r\nCan you please update your commit to also give credit to @jamescurtin for their work on #1178?",
      "Thanks to you and @jamescurtin (#1178) for all the work done on this PR!"
    ],
    "commit_messages": [
      "Merged #1178 Remove EOL Python Versions , with python 3.3 and setup.py fix. (#1181)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db3aac254a19ac29e6bd",
    "number": 1178,
    "body": "According to the [Python release schedule](https://devguide.python.org/#status-of-python-branches), Python 3.4 is past end of life, and Python 3.7 has entered into bugfix status. This PR updates the package to reflect this.",
    "head_branch": "remove-eol-pyversions",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/audreyr/cookiecutter/pull/1178?src=pr&el=h1) Report\n> Merging [#1178](https://codecov.io/gh/audreyr/cookiecutter/pull/1178?src=pr&el=desc) into [master](https://codecov.io/gh/audreyr/cookiecutter/commit/3bc7b987e4ae9dcee996ae0b00375c1325b8d866?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/audreyr/cookiecutter/pull/1178/graphs/tree.svg?width=650&token=8kF8iLUMJE&height=150&src=pr)](https://codecov.io/gh/audreyr/cookiecutter/pull/1178?src=pr&el=tree)\n\n```diff\n@@          Coverage Diff           @@\n##           master   #1178   +/-   ##\n======================================\n  Coverage     100%    100%           \n======================================\n  Files          18      18           \n  Lines         783     783           \n======================================\n  Hits          783     783\n```\n\n\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/audreyr/cookiecutter/pull/1178?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/audreyr/cookiecutter/pull/1178?src=pr&el=footer). Last update [3bc7b98...f7015df](https://codecov.io/gh/audreyr/cookiecutter/pull/1178?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
      "# [Codecov](https://codecov.io/gh/audreyr/cookiecutter/pull/1178?src=pr&el=h1) Report\n> Merging [#1178](https://codecov.io/gh/audreyr/cookiecutter/pull/1178?src=pr&el=desc) into [master](https://codecov.io/gh/audreyr/cookiecutter/commit/3bc7b987e4ae9dcee996ae0b00375c1325b8d866?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/audreyr/cookiecutter/pull/1178/graphs/tree.svg?width=650&token=8kF8iLUMJE&height=150&src=pr)](https://codecov.io/gh/audreyr/cookiecutter/pull/1178?src=pr&el=tree)\n\n```diff\n@@          Coverage Diff           @@\n##           master   #1178   +/-   ##\n======================================\n  Coverage     100%    100%           \n======================================\n  Files          18      18           \n  Lines         783     783           \n======================================\n  Hits          783     783\n```\n\n\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/audreyr/cookiecutter/pull/1178?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/audreyr/cookiecutter/pull/1178?src=pr&el=footer). Last update [3bc7b98...f7015df](https://codecov.io/gh/audreyr/cookiecutter/pull/1178?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
      "Everything looks correct. I leave this comment just to see when it will be answered by the core team or merged. Unfortunately, core development looks dead.",
      "HI, @ssbarnea, I do not have write access to this repo. Please merge if you can. Thanks!",
      "@pydanny safe to merge.",
      "https://img.shields.io/pypi/pyversions/cookiecutter.svg change should be checked too after this merged.",
      "Closed as a duplicate to speed up the review process. Everything from here merged to #1181 "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db3aac254a19ac29e6be",
    "number": 1177,
    "body": "This project has been moved into the `cookiecutter-flask` group.",
    "head_branch": "update-flask-template-url",
    "is_a_fork": true,
    "comments": [
      "Should be merged after #1178 ",
      "Local tox test with merged #1181:\r\n```text\r\n___________________________________________________________________________________________________________ summary ___________________________________________________________________________________________________________\r\n  py27: commands succeeded\r\n  py35: commands succeeded\r\n  py36: commands succeeded\r\n  py37: commands succeeded\r\nERROR:   pypy: InterpreterNotFound: pypy\r\n  flake8: commands succeeded\r\n```\r\n\r\nMerge required to start #1179",
      "We are no longer maintaining a list of templates inside README file and instead we use github topics feature. Please read https://github.com/cookiecutter/cookiecutter#a-pantry-full-of-cookiecutters and add the needed topics to your repository and people will be able to find your template. The most important one is ``cookiecutter-template``.\r\n\r\nWe are also going to remove most of already listed templates from there, in order not avoid being biased."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db3bac254a19ac29e6bf",
    "number": 1175,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "run in python3 ",
      "# [Codecov](https://codecov.io/gh/audreyr/cookiecutter/pull/1175?src=pr&el=h1) Report\n> Merging [#1175](https://codecov.io/gh/audreyr/cookiecutter/pull/1175?src=pr&el=desc) into [master](https://codecov.io/gh/audreyr/cookiecutter/commit/3bc7b987e4ae9dcee996ae0b00375c1325b8d866?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/audreyr/cookiecutter/pull/1175/graphs/tree.svg?width=650&token=8kF8iLUMJE&height=150&src=pr)](https://codecov.io/gh/audreyr/cookiecutter/pull/1175?src=pr&el=tree)\n\n```diff\n@@          Coverage Diff           @@\n##           master   #1175   +/-   ##\n======================================\n  Coverage     100%    100%           \n======================================\n  Files          18      18           \n  Lines         783     783           \n======================================\n  Hits          783     783\n```\n\n\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/audreyr/cookiecutter/pull/1175?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/audreyr/cookiecutter/pull/1175?src=pr&el=footer). Last update [3bc7b98...d6d347a](https://codecov.io/gh/audreyr/cookiecutter/pull/1175?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
      "We are no longer maintaining a list of templates inside README file and instead we use github topics feature. Please read https://github.com/cookiecutter/cookiecutter#a-pantry-full-of-cookiecutters and add the needed topics to your repository and people will be able to find your template. The most important one is ``cookiecutter-template``.\r\n\r\nWe are also going to remove most of already listed templates from there, in order not avoid being biased."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db3cac254a19ac29e6c0",
    "number": 1173,
    "body": "One of the missing feature of cookiecutter is the ability to update a project created with an old version of a template to the latest version.\r\n\r\nThis PR attempts to make this possible with some existing limitations.\r\nThis new feature would be used with the `-u path/to/project` and expect to have the `--no-input` option used, otherwise stops.\r\n\r\nThis feature also assumes the existence of a couple of items in the project to update:\r\n * a branch named `cookiecutter` with the latest cookiecutter change. This one should be as close as possible to the original content of the old template (with rendering).\r\nThis branch will contains commits that reflect the cookiecutter updates in time. There is only one commit per update, and it is not dangerous if the update brings changes redondant (because there were manually added later in the project).\r\n * a `.cookiecutter.json` file that will contains all the rendering to do, note the leading dot. Any `cookiecutter.json` in the template will be ignored.\r\n * So far this feature assume the changes to be merged into `master` and will not work for any other branch name.\r\nThe strategy is to let git perform a `cherry-pick` of the update commit. Should this command were to fail, cookiecutter would restore the state before the update in `master` (but the `cookiecutter` branch would still have the update commit).\r\nCookiecutter would then display the command to manually apply the update on master and the user could fix any conflicts.\r\n\r\nThis PR is linked to the issue #784 \r\n",
    "head_branch": "feature/update",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/audreyr/cookiecutter/pull/1173?src=pr&el=h1) Report\n> Merging [#1173](https://codecov.io/gh/audreyr/cookiecutter/pull/1173?src=pr&el=desc) into [master](https://codecov.io/gh/audreyr/cookiecutter/commit/3bc7b987e4ae9dcee996ae0b00375c1325b8d866?src=pr&el=desc) will **decrease** coverage by `1.02%`.\n> The diff coverage is `93%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/audreyr/cookiecutter/pull/1173/graphs/tree.svg?width=650&token=8kF8iLUMJE&height=150&src=pr)](https://codecov.io/gh/audreyr/cookiecutter/pull/1173?src=pr&el=tree)\n\n```diff\n@@            Coverage Diff             @@\n##           master    #1173      +/-   ##\n==========================================\n- Coverage     100%   98.97%   -1.03%     \n==========================================\n  Files          18       19       +1     \n  Lines         783      880      +97     \n==========================================\n+ Hits          783      871      +88     \n- Misses          0        9       +9\n```\n\n\n| [Impacted Files](https://codecov.io/gh/audreyr/cookiecutter/pull/1173?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [cookiecutter/generate.py](https://codecov.io/gh/audreyr/cookiecutter/pull/1173/diff?src=pr&el=tree#diff-Y29va2llY3V0dGVyL2dlbmVyYXRlLnB5) | `100% <100%> (ø)` | :arrow_up: |\n| [cookiecutter/exceptions.py](https://codecov.io/gh/audreyr/cookiecutter/pull/1173/diff?src=pr&el=tree#diff-Y29va2llY3V0dGVyL2V4Y2VwdGlvbnMucHk=) | `100% <100%> (ø)` | :arrow_up: |\n| [cookiecutter/main.py](https://codecov.io/gh/audreyr/cookiecutter/pull/1173/diff?src=pr&el=tree#diff-Y29va2llY3V0dGVyL21haW4ucHk=) | `100% <100%> (ø)` | :arrow_up: |\n| [cookiecutter/utils.py](https://codecov.io/gh/audreyr/cookiecutter/pull/1173/diff?src=pr&el=tree#diff-Y29va2llY3V0dGVyL3V0aWxzLnB5) | `96.36% <100%> (-3.64%)` | :arrow_down: |\n| [cookiecutter/cli.py](https://codecov.io/gh/audreyr/cookiecutter/pull/1173/diff?src=pr&el=tree#diff-Y29va2llY3V0dGVyL2NsaS5weQ==) | `100% <100%> (ø)` | :arrow_up: |\n| [cookiecutter/update.py](https://codecov.io/gh/audreyr/cookiecutter/pull/1173/diff?src=pr&el=tree#diff-Y29va2llY3V0dGVyL3VwZGF0ZS5weQ==) | `89.85% <89.85%> (ø)` | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/audreyr/cookiecutter/pull/1173?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/audreyr/cookiecutter/pull/1173?src=pr&el=footer). Last update [3bc7b98...fbad7f7](https://codecov.io/gh/audreyr/cookiecutter/pull/1173?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
      "oops I realize I forgot to run lint...\r\nI'll re-push a proper version",
      "What's the status of this PR? This will be a great feature. I may have some time to help with this work -- just let me know.",
      "I just want to echo what @barrywhart said.  I would love to see this feature make its way into Cookiecutter!  ",
      "Hey! Thanks for the interest, somehow it fell a bit in the crack on my hand.\r\nI will update it in a bit to fix the build issue.\r\n\r\nIn the meantime, if you have some reviews to make on the code or its architecture, any comment is welcome :)",
      "I'm trying out this PR on a new project at work.\r\n\r\nMy overall reaction is: Wow, I had a great first experience using this feature! 💯🎉 \r\n\r\nA few thoughts about output... the tool does a lot, making changes in multiple branches. Currently, there is no output. When I ran it, I first thought, \"did it do anything\"? Did it work? To help with that, could we consider offering (at least optionally) some output explaining what happened, e.g.:\r\n  * Summary of the commit to the `cookiecutter` branch (files added/changed/removed)\r\n  * Summary of the merge to `master` branch\r\n\r\nThe tool makes the changes (to two branches), but does not push them upstream. This is reasonable for the main branch (e.g. `master`), but it will be easy to forget to push the changes to the `cookiecutter` branch, and as a result those changes could be lost. What could we do to reduce this risk?\r\n\r\nAs noted earlier, I'd really like the ability to control which branch the cookiecutter changes are merged to (i.e. ability to override using `master`).",
      "@quetzai thank you for putting the time into working on this, this is a feature that the cookiecutter community is desperate for! \r\nI just wanted to follow up on this PR to see if there had been any progress and what still needed doing in order to get this feature into the main project? ",
      "Hey @glitchedcat and all the others\r\nSorry for being away from this work for so long, I'm currently rebasing it on master and making sure tests with all python versions passes.\r\nI'll reply to comments during the week.\r\n\r\nAgain, sorry for the delay, let's work on this to be merged o/",
      "FWIW, we developed a bash wrapper script to work around this feature not being available. One advantage of that is in being able to include other command-line tools' output in the same commit as the cookiecutter updates, e.g. a separate tool that manages encryption of sensitive data such as cloud credentials.",
      "@quetzai \r\nWould you like some help on this PR?\r\nWhat can I do to help get this merged for 2.0 release?\r\n\r\n@barrywhart You may find #784 relevant.\r\n\r\nThis is the 3rd time I have searched for a solution for this issue. Many have their custom in-house scripts; some converted them to python scripts, this PR came about to consolidate and work on the ideas discussed; and there is even a [currently maintained package](https://github.com/rambler-digital-solutions/scaraplate) out of many (seemingly abandoned) projects for this issue.\r\n\r\nI personally believe that we just need to push this feature in 2.0 release. I am sure we will have to iterate a few times to get the UX/DX right. But once it's part of the core, I am hoping it'll gain traction and people will use/file issues/send PRs.",
      "I agree it's a useful enough feature to build into the package. I offered to help finish it a year ago. We might still use it if we build new templates, but I finally gave up on it for this one.😿",
      "@ssbarnea and other maintainers : are we still interested in making this happen? I can whip out a PR based on this version and we can give it a shot?\r\n\r\nI hope @barrywhart will be happy to review/test it :-)",
      "Ha ha. I used the current PR for a few months before rolling our own. IIRC, my only minor complaint was not being able to control which branch it wrote to. We always use feature branches and PRs, so I wanted to specify a branch, and currently it always writes to `master`.\r\n\r\nAs I recall, there were also a few tests failing. I suspect it wouldn't take much work to revive this work and get it over the finish line (unless the underlying code has diverged significantly).",
      "I'd be happy to test it! It'd let us retire some bash code. 🎉 🎉",
      "Sounds good - I will spend some time on this in the coming week.",
      "Hi, great to see activity here. I am also looking forward to see this feature implemented!\r\n\r\nWhat is the advantage to use git cherry-pick instead of merge? For me the [cupper](https://github.com/senseyeio/cupper) approach works quite well now.",
      "I have wondered about cherry pick vs merge as well. We've been using cherry pick since our procedure is based on this PR, but my guess is that either would work fine. I confirm that cherry pick handles normal automated updates as well as the occasional conflict, which can be manually resolved with the usual conflict markers, etc.\r\n\r\nIIUC, cherry pick can be used when the two branches do not share a common base, but I'm no expert in this area.",
      "Ho wow, this PR is really cursed for me, every time I try to tackle it, life throws something insane at me. I can't stress out how sorry and ashamed I am...\r\nPity aside, I want to help this feature go mainline anyway I can.\r\n@wadkar if you are taking this work to the finished line, I can offer my help.\r\n@barrywhart I can't find any reason to choose cherry-pick over merge.\r\nI've also find a very interesting example of this done using diff, which makes the all git dependance go away",
      "I really like the use of git, whether it's cherry-pick or merge, because I'm so familiar with how to find and resolve conflicts. I could see some people wanting the option to not depend on git, though.",
      "@quetzai it's totally fine! Please do not apologize!! This is open source work and we are all volunteering our time and work!!! Please don't feel obliged. On the other hand, thank you very much for taking the lead and setting the foundation for this PR. I hope I can build on your work and produce an acceptable outcome :-)\r\n\r\nWhile I am not claiming to be expert in git plumbing, my understanding is that cherry-pick can happen without any consideration of branches. Branch merges would go all the way back to root/common parent while executing merge strategy.\r\n\r\nI think we should think of the developer experience for this: it might be a simple mental model, and helpful for the REFLOG to try the git merge strategy. I will try it out first and see what makes sense.\r\n\r\nHopefully I will have a new PR over the weekend.",
      "I'm closing this PR due to its age, and due to the complexity of getting this right and supporting it moving forward."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db3dac254a19ac29e6c1",
    "number": 1170,
    "body": "Create cross-platform command-line interface (CLI), programs in Node.js on the fly.\r\n\r\nhttps://github.com/Jnchi/cookiecutter-nodejs-cli",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Local tox test with merged #1181:\r\n```text\r\n___________________________________________________________________________________________________________ summary ___________________________________________________________________________________________________________\r\n  py27: commands succeeded\r\n  py35: commands succeeded\r\n  py36: commands succeeded\r\n  py37: commands succeeded\r\nERROR:   pypy: InterpreterNotFound: pypy\r\n  flake8: commands succeeded\r\n```\r\n\r\nMerge required to start #1179",
      "We are no longer maintaining a list of templates inside README file and instead we use github topics feature. Please read https://github.com/cookiecutter/cookiecutter#a-pantry-full-of-cookiecutters and add the needed topics to your repository and people will be able to find your template. The most important one is ``cookiecutter-template``.\r\n\r\nWe are also going to remove most of already listed templates from there, in order not avoid being biased."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db3eac254a19ac29e6c2",
    "number": 1168,
    "body": "Fixes #1167 ",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1168?src=pr&el=h1) Report\n> Merging [#1168](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1168?src=pr&el=desc) into [master](https://codecov.io/gh/cookiecutter/cookiecutter/commit/5c282f020a8db7e5e7c4e7b51b010556ca31fb7f?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1168/graphs/tree.svg?width=650&token=8kF8iLUMJE&height=150&src=pr)](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1168?src=pr&el=tree)\n\n```diff\n@@          Coverage Diff           @@\n##           master   #1168   +/-   ##\n======================================\n  Coverage     100%    100%           \n======================================\n  Files          18      18           \n  Lines         783     783           \n======================================\n  Hits          783     783\n```\n\n\n| [Impacted Files](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1168?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [cookiecutter/prompt.py](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1168/diff?src=pr&el=tree#diff-Y29va2llY3V0dGVyL3Byb21wdC5weQ==) | `100% <ø> (ø)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1168?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1168?src=pr&el=footer). Last update [5c282f0...f475181](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1168?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
    ],
    "commit_messages": [
      "Merge pull request #1168 from rly/master\n\nPrevent click API v7.0 from showing choices when already shown"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db3eac254a19ac29e6c3",
    "number": 1164,
    "body": "Hi 👋\r\n\r\nThis is template for `aiohttp`\r\n\r\n## Features\r\n\r\n- [aiohttp](https://aiohttp.readthedocs.io/en/stable/) - the best python framework :)\r\n- [mypy](https://mypy.readthedocs.io/en/latest/) - for optional static typing\r\n- [pytest](https://pytest.readthedocs.io/en/latest/) - for run unit tests\r\n- [black](https://black.readthedocs.io/en/latest/) - for code formatter\r\n- [flake8](https://flake8.readthedocs.io/en/latest/) - for linting\r\n- [trafaret](https://trafaret.readthedocs.io/en/latest/) - for validation input data\r\n- [aio devtools](https://github.com/aio-libs/aiohttp-devtools) - helpful tool for develop\r\n- [aiohttp debug toolbar](https://github.com/aio-libs/aiohttp-debugtoolbar) - helpful tool for debugging\r\n- [postgres](https://www.postgresql.org/) - storage\r\n- [alembic](https://alembic.sqlalchemy.org/en/latest/tutorial.html) - tool for create migration\r\n- [sqlAlchemy](https://www.sqlalchemy.org/) - orm\r\n- [sphinx](http://www.sphinx-doc.org/en/master/) - for generate docs\r\n- [docker-compose](https://docs.docker.com/compose/) - for running develop environment and deploy",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/audreyr/cookiecutter/pull/1164?src=pr&el=h1) Report\n> Merging [#1164](https://codecov.io/gh/audreyr/cookiecutter/pull/1164?src=pr&el=desc) into [master](https://codecov.io/gh/audreyr/cookiecutter/commit/3bc7b987e4ae9dcee996ae0b00375c1325b8d866?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/audreyr/cookiecutter/pull/1164/graphs/tree.svg?width=650&token=8kF8iLUMJE&height=150&src=pr)](https://codecov.io/gh/audreyr/cookiecutter/pull/1164?src=pr&el=tree)\n\n```diff\n@@          Coverage Diff           @@\n##           master   #1164   +/-   ##\n======================================\n  Coverage     100%    100%           \n======================================\n  Files          18      18           \n  Lines         783     783           \n======================================\n  Hits          783     783\n```\n\n\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/audreyr/cookiecutter/pull/1164?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/audreyr/cookiecutter/pull/1164?src=pr&el=footer). Last update [3bc7b98...f1d25ac](https://codecov.io/gh/audreyr/cookiecutter/pull/1164?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
      "We are no longer maintaining a list of templates inside README file and instead we use github topics feature. Please read https://github.com/cookiecutter/cookiecutter#a-pantry-full-of-cookiecutters and add the needed topics to your repository and people will be able to find your template. The most important one is ``cookiecutter-template``.\r\n\r\nWe are also going to remove most of already listed templates from there, in order not avoid being biased."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db3fac254a19ac29e6c4",
    "number": 1162,
    "body": "i create a cookiecutter template for flask with below features:\r\n- peewee orm and simple migration\r\n- pytest for unit test and black flake8 for code format\r\n- html5-boilerplate for jinjia template\r\n- docker-compose to deploy \r\n- gitlab-ci for auto update code for vps (WIP)\r\n- per-commit for source control\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/audreyr/cookiecutter/pull/1162?src=pr&el=h1) Report\n> Merging [#1162](https://codecov.io/gh/audreyr/cookiecutter/pull/1162?src=pr&el=desc) into [master](https://codecov.io/gh/audreyr/cookiecutter/commit/3bc7b987e4ae9dcee996ae0b00375c1325b8d866?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/audreyr/cookiecutter/pull/1162/graphs/tree.svg?width=650&token=8kF8iLUMJE&height=150&src=pr)](https://codecov.io/gh/audreyr/cookiecutter/pull/1162?src=pr&el=tree)\n\n```diff\n@@          Coverage Diff           @@\n##           master   #1162   +/-   ##\n======================================\n  Coverage     100%    100%           \n======================================\n  Files          18      18           \n  Lines         783     783           \n======================================\n  Hits          783     783\n```\n\n\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/audreyr/cookiecutter/pull/1162?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/audreyr/cookiecutter/pull/1162?src=pr&el=footer). Last update [3bc7b98...9dfc2e9](https://codecov.io/gh/audreyr/cookiecutter/pull/1162?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
      "Local tox test with merged #1181:\r\n```text\r\n___________________________________________________________________________________________________________ summary ___________________________________________________________________________________________________________\r\n  py27: commands succeeded\r\n  py35: commands succeeded\r\n  py36: commands succeeded\r\n  py37: commands succeeded\r\nERROR:   pypy: InterpreterNotFound: pypy\r\n  flake8: commands succeeded\r\n```\r\n\r\nMerge required to start #1179",
      "@ssbarnea @insspb are you folks following https://github.com/cookiecutter/cookiecutter/blob/master/docs/core_committer_guide.rst#process-accepting-template-pull-requests when approving cookiecutters? (mainly checking that you're _actually_ generating projects with the candidate templates)",
      "@michaeljoseph Nope, just did a visual inspection that it points to what it looks as a valid template. \r\nNow considering that we do not have CI for this I wonder if it would not be better to completly remove remove the list of templates and replace it with a github link to https://github.com/topics/cookiecutter-template\r\n\r\nAny template author could use this topic on his project, making it visible and github \"social\" features will take care of the rest. This way we woud outsource this never-ending source of PRs.\r\n\r\nAlso, even if a template generates a project, it does not mean that is usable or not even malicious. Thus I propose to scrap that section completely.\r\n\r\n@pydanny What do you think about that? There are already 134 repositories using this topic.\r\n\r\nAlready raise it as https://github.com/cookiecutter/cookiecutter/issues/1182",
      "I'm 👍 on moving cookiecutters out of the README to reduce the maintenance load.\r\n( 👀 #296)",
      "We are no longer maintaining a list of templates inside README file and instead we use github topics feature. Please read https://github.com/cookiecutter/cookiecutter#a-pantry-full-of-cookiecutters and add the needed topics to your repository and people will be able to find your template. The most important one is ``cookiecutter-template``.\r\n\r\nWe are also going to remove most of already listed templates from there, in order not avoid being biased."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db40ac254a19ac29e6c5",
    "number": 1159,
    "body": "Hello! I've seen that this [issue](https://github.com/audreyr/cookiecutter/issues/405) was still open, and I decided to fix it detecting the original file ending style and applying it to the rendered new file.\r\n\r\nI've also added a .gitattributes file to set CRLF to files that ends with *crlf.txt.",
    "head_branch": "detect-original-line-endings",
    "is_a_fork": true,
    "comments": [
      "This solves my problem with Windows, any way this could be merge?",
      "I think this is bitting several Windows users for some of the Cookiecutter project generators I have: https://github.com/tiangolo/full-stack-fastapi-couchbase/issues/8, https://github.com/tiangolo/full-stack-fastapi-postgresql/issues/13\r\n\r\nI guess this is probably bitting many more users of other Cookiecutters.\r\n\r\nIs there a chance a maintainer can take a look at this PR? Is there any help we can provide?",
      "We are also affected by this. This would solve many problems with generated unix files on windows.",
      "@franciscomoma \r\nThank you for contribution. \r\n\r\nMerged to #1407 \r\nWill be in 2.0",
      "> @franciscomoma\r\n> Thank you for contribution.\r\n> \r\n> Merged to #1407\r\n> Will be in 2.0\r\n\r\nThank you so much!"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db41ac254a19ac29e6c6",
    "number": 1158,
    "body": "",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [
      "We are no longer maintaining a list of templates inside README file and instead we use github topics feature. Please read https://github.com/cookiecutter/cookiecutter#a-pantry-full-of-cookiecutters and add the needed topics to your repository and people will be able to find your template. The most important one is ``cookiecutter-template``.\r\n\r\nWe are also going to remove most of already listed templates from there, in order not avoid being biased.",
      "Very well, thank you for the update!"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db42ac254a19ac29e6c7",
    "number": 1155,
    "body": "Love this project! Thought I would add a template that I use for AWS Lambda functions in Python",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/audreyr/cookiecutter/pull/1155?src=pr&el=h1) Report\n> Merging [#1155](https://codecov.io/gh/audreyr/cookiecutter/pull/1155?src=pr&el=desc) into [master](https://codecov.io/gh/audreyr/cookiecutter/commit/3bc7b987e4ae9dcee996ae0b00375c1325b8d866?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/audreyr/cookiecutter/pull/1155/graphs/tree.svg?width=650&token=8kF8iLUMJE&height=150&src=pr)](https://codecov.io/gh/audreyr/cookiecutter/pull/1155?src=pr&el=tree)\n\n```diff\n@@          Coverage Diff           @@\n##           master   #1155   +/-   ##\n======================================\n  Coverage     100%    100%           \n======================================\n  Files          18      18           \n  Lines         783     783           \n======================================\n  Hits          783     783\n```\n\n\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/audreyr/cookiecutter/pull/1155?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/audreyr/cookiecutter/pull/1155?src=pr&el=footer). Last update [3bc7b98...36290be](https://codecov.io/gh/audreyr/cookiecutter/pull/1155?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
      "Local tox test with merged #1181:\r\n```text\r\n___________________________________________________________________________________________________________ summary ___________________________________________________________________________________________________________\r\n  py27: commands succeeded\r\n  py35: commands succeeded\r\n  py36: commands succeeded\r\n  py37: commands succeeded\r\nERROR:   pypy: InterpreterNotFound: pypy\r\n  flake8: commands succeeded\r\n```\r\n\r\nMerge required to start #1179",
      "We are no longer maintaining a list of templates inside README file and instead we use github topics feature. Please read https://github.com/cookiecutter/cookiecutter#a-pantry-full-of-cookiecutters and add the needed topics to your repository and people will be able to find your template. The most important one is ``cookiecutter-template``.\r\n\r\nWe are also going to remove most of already listed templates from there, in order not avoid being biased."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db42ac254a19ac29e6c8",
    "number": 1154,
    "body": "Add a link and description for [Rainist/python](https://github.com/Rainist/python)",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Local tox test\r\n```bash\r\n___________________________________________________________________________________________________________ summary ___________________________________________________________________________________________________________\r\n  py27: commands succeeded\r\n  py35: commands succeeded\r\n  py36: commands succeeded\r\n  py37: commands succeeded\r\nERROR:   pypy: InterpreterNotFound: pypy\r\n  flake8: commands succeeded\r\n```",
      "We are no longer maintaining a list of templates inside README file and instead we use github topics feature. Please read https://github.com/cookiecutter/cookiecutter#a-pantry-full-of-cookiecutters and add the needed topics to your repository and people will be able to find your template. The most important one is ``cookiecutter-template``.\r\n\r\nWe are also going to remove most of already listed templates from there, in order not avoid being biased."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db43ac254a19ac29e6c9",
    "number": 1151,
    "body": "Using an extended version of the rendering context, including the repository dir variable `_repo_dir`",
    "head_branch": "feature/repo-dir-in-context",
    "is_a_fork": true,
    "comments": [
      "@andresaco thank you for contribution. \r\nBut it will not be merged. This is not correct place to extend context. Check issue #1034 for correct implementation.\r\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db44ac254a19ac29e6ca",
    "number": 1148,
    "body": "This project is both js and python, therefore put it in both categories.",
    "head_branch": "add_cookiecutter-react-flask",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/audreyr/cookiecutter/pull/1148?src=pr&el=h1) Report\n> Merging [#1148](https://codecov.io/gh/audreyr/cookiecutter/pull/1148?src=pr&el=desc) into [master](https://codecov.io/gh/audreyr/cookiecutter/commit/3bc7b987e4ae9dcee996ae0b00375c1325b8d866?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/audreyr/cookiecutter/pull/1148/graphs/tree.svg?width=650&token=8kF8iLUMJE&height=150&src=pr)](https://codecov.io/gh/audreyr/cookiecutter/pull/1148?src=pr&el=tree)\n\n```diff\n@@          Coverage Diff           @@\n##           master   #1148   +/-   ##\n======================================\n  Coverage     100%    100%           \n======================================\n  Files          18      18           \n  Lines         783     783           \n======================================\n  Hits          783     783\n```\n\n\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/audreyr/cookiecutter/pull/1148?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/audreyr/cookiecutter/pull/1148?src=pr&el=footer). Last update [3bc7b98...52f25ef](https://codecov.io/gh/audreyr/cookiecutter/pull/1148?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
      "Local tox test with merged #1181:\r\n```text\r\n___________________________________________________________________________________________________________ summary ___________________________________________________________________________________________________________\r\n  py27: commands succeeded\r\n  py35: commands succeeded\r\n  py36: commands succeeded\r\n  py37: commands succeeded\r\nERROR:   pypy: InterpreterNotFound: pypy\r\n  flake8: commands succeeded\r\n```\r\n\r\nMerge required to start #1179",
      "We are no longer maintaining a list of templates inside README file and instead we use github topics feature. Please read https://github.com/cookiecutter/cookiecutter#a-pantry-full-of-cookiecutters and add the needed topics to your repository and people will be able to find your template. The most important one is ``cookiecutter-template``.\r\n\r\nWe are also going to remove most of already listed templates from there, in order not avoid being biased."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db45ac254a19ac29e6cb",
    "number": 1147,
    "body": "When running cookiecutter from other python scripts, I get warnings about unclosed filehandles. This PR uses the io.open contextmanager to close the handle once the read is complete.",
    "head_branch": "feature/close_filehandle",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1147?src=pr&el=h1) Report\n> Merging [#1147](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1147?src=pr&el=desc) into [master](https://codecov.io/gh/cookiecutter/cookiecutter/commit/3bc7b987e4ae9dcee996ae0b00375c1325b8d866?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1147/graphs/tree.svg?width=650&token=8kF8iLUMJE&height=150&src=pr)](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1147?src=pr&el=tree)\n\n```diff\n@@          Coverage Diff           @@\n##           master   #1147   +/-   ##\n======================================\n  Coverage     100%    100%           \n======================================\n  Files          18      18           \n  Lines         783     784    +1     \n======================================\n+ Hits          783     784    +1\n```\n\n\n| [Impacted Files](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1147?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [cookiecutter/hooks.py](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1147/diff?src=pr&el=tree#diff-Y29va2llY3V0dGVyL2hvb2tzLnB5) | `100% <100%> (ø)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1147?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1147?src=pr&el=footer). Last update [3bc7b98...97c6d3a](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1147?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
      "LGTM",
      "Thank you for your contribution @jcb91! 🍪 "
    ],
    "commit_messages": [
      "Merge pull request #1147 from jcb91/feature/close_filehandle\n\nuse context to close file nicely"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db45ac254a19ac29e6cc",
    "number": 1146,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "We are no longer maintaining a list of templates inside README file and instead we use github topics feature. Please read https://github.com/cookiecutter/cookiecutter#a-pantry-full-of-cookiecutters and add the needed topics to your repository and people will be able to find your template. The most important one is ``cookiecutter-template``.\r\n\r\nWe are also going to remove most of already listed templates from there, in order not avoid being biased."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db46ac254a19ac29e6cd",
    "number": 1145,
    "body": "Request to add my template (cookiecutter-pypackage-poetry) to the list.",
    "head_branch": "cookiecutter-pypackage-poetry",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/audreyr/cookiecutter/pull/1145?src=pr&el=h1) Report\n> Merging [#1145](https://codecov.io/gh/audreyr/cookiecutter/pull/1145?src=pr&el=desc) into [master](https://codecov.io/gh/audreyr/cookiecutter/commit/3bc7b987e4ae9dcee996ae0b00375c1325b8d866?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/audreyr/cookiecutter/pull/1145/graphs/tree.svg?width=650&token=8kF8iLUMJE&height=150&src=pr)](https://codecov.io/gh/audreyr/cookiecutter/pull/1145?src=pr&el=tree)\n\n```diff\n@@          Coverage Diff           @@\n##           master   #1145   +/-   ##\n======================================\n  Coverage     100%    100%           \n======================================\n  Files          18      18           \n  Lines         783     783           \n======================================\n  Hits          783     783\n```\n\n\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/audreyr/cookiecutter/pull/1145?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/audreyr/cookiecutter/pull/1145?src=pr&el=footer). Last update [3bc7b98...579478c](https://codecov.io/gh/audreyr/cookiecutter/pull/1145?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
      "Local tox test with merged #1181:\r\n```text\r\n___________________________________________________________________________________________________________ summary ___________________________________________________________________________________________________________\r\n  py27: commands succeeded\r\n  py35: commands succeeded\r\n  py36: commands succeeded\r\n  py37: commands succeeded\r\nERROR:   pypy: InterpreterNotFound: pypy\r\n  flake8: commands succeeded\r\n```\r\n\r\nMerge required to start #1179",
      "We are no longer maintaining a list of templates inside README file and instead we use github topics feature. Please read https://github.com/cookiecutter/cookiecutter#a-pantry-full-of-cookiecutters and add the needed topics to your repository and people will be able to find your template. The most important one is ``cookiecutter-template``.\r\n\r\nWe are also going to remove most of already listed templates from there, in order not avoid being biased."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db47ac254a19ac29e6ce",
    "number": 1144,
    "body": "Closes #1143 \r\n\r\nTo fix issue #1143 I split repo_url in ':' and get the last part. I rename 'tail' to 'repo_name' which I think is more meaningfull.",
    "head_branch": "fix/clone_gitolite_repo",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1144?src=pr&el=h1) Report\n> Merging [#1144](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1144?src=pr&el=desc) into [master](https://codecov.io/gh/cookiecutter/cookiecutter/commit/3bc7b987e4ae9dcee996ae0b00375c1325b8d866?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1144/graphs/tree.svg?width=650&token=8kF8iLUMJE&height=150&src=pr)](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1144?src=pr&el=tree)\n\n```diff\n@@          Coverage Diff           @@\n##           master   #1144   +/-   ##\n======================================\n  Coverage     100%    100%           \n======================================\n  Files          18      18           \n  Lines         783     806   +23     \n======================================\n+ Hits          783     806   +23\n```\n\n\n| [Impacted Files](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1144?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [cookiecutter/vcs.py](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1144/diff?src=pr&el=tree#diff-Y29va2llY3V0dGVyL3Zjcy5weQ==) | `100% <100%> (ø)` | :arrow_up: |\n| [cookiecutter/environment.py](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1144/diff?src=pr&el=tree#diff-Y29va2llY3V0dGVyL2Vudmlyb25tZW50LnB5) | `100% <0%> (ø)` | :arrow_up: |\n| [cookiecutter/replay.py](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1144/diff?src=pr&el=tree#diff-Y29va2llY3V0dGVyL3JlcGxheS5weQ==) | `100% <0%> (ø)` | :arrow_up: |\n| [cookiecutter/exceptions.py](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1144/diff?src=pr&el=tree#diff-Y29va2llY3V0dGVyL2V4Y2VwdGlvbnMucHk=) | `100% <0%> (ø)` | :arrow_up: |\n| [cookiecutter/hooks.py](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1144/diff?src=pr&el=tree#diff-Y29va2llY3V0dGVyL2hvb2tzLnB5) | `100% <0%> (ø)` | :arrow_up: |\n| [cookiecutter/extensions.py](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1144/diff?src=pr&el=tree#diff-Y29va2llY3V0dGVyL2V4dGVuc2lvbnMucHk=) | `100% <0%> (ø)` | :arrow_up: |\n| [cookiecutter/main.py](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1144/diff?src=pr&el=tree#diff-Y29va2llY3V0dGVyL21haW4ucHk=) | `100% <0%> (ø)` | :arrow_up: |\n| [cookiecutter/prompt.py](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1144/diff?src=pr&el=tree#diff-Y29va2llY3V0dGVyL3Byb21wdC5weQ==) | `100% <0%> (ø)` | :arrow_up: |\n| [cookiecutter/cli.py](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1144/diff?src=pr&el=tree#diff-Y29va2llY3V0dGVyL2NsaS5weQ==) | `100% <0%> (ø)` | :arrow_up: |\n| ... and [1 more](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1144/diff?src=pr&el=tree-more) | |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1144?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1144?src=pr&el=footer). Last update [3bc7b98...8233837](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1144?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
      "Hi @javiersanp! 👋 \r\n\r\nThank you for your contribution to cookiecutter. 🍪 ",
      "@javiersanp Thank you for contribution, excuse us for long time waiting.\r\nI removed duplicate test and will merge it now."
    ],
    "commit_messages": [
      "Fixed: Fail with gitolite repositories (#1144)\n\n* Fix fail with gitolite repositories\r\n\r\n* Remove duplicate tests #1144\r\n\r\nCo-authored-by: Andrey Shpak <ashpak@ashpak.ru>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db48ac254a19ac29e6cf",
    "number": 1142,
    "body": "#1141 ",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/audreyr/cookiecutter/pull/1142?src=pr&el=h1) Report\n> Merging [#1142](https://codecov.io/gh/audreyr/cookiecutter/pull/1142?src=pr&el=desc) into [master](https://codecov.io/gh/audreyr/cookiecutter/commit/3bc7b987e4ae9dcee996ae0b00375c1325b8d866?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/audreyr/cookiecutter/pull/1142/graphs/tree.svg?width=650&token=8kF8iLUMJE&height=150&src=pr)](https://codecov.io/gh/audreyr/cookiecutter/pull/1142?src=pr&el=tree)\n\n```diff\n@@          Coverage Diff           @@\n##           master   #1142   +/-   ##\n======================================\n  Coverage     100%    100%           \n======================================\n  Files          18      18           \n  Lines         783     783           \n======================================\n  Hits          783     783\n```\n\n\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/audreyr/cookiecutter/pull/1142?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/audreyr/cookiecutter/pull/1142?src=pr&el=footer). Last update [3bc7b98...08bb8ef](https://codecov.io/gh/audreyr/cookiecutter/pull/1142?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
      "Local tox test with merged #1181:\r\n```text\r\n___________________________________________________________________________________________________________ summary ___________________________________________________________________________________________________________\r\n  py27: commands succeeded\r\n  py35: commands succeeded\r\n  py36: commands succeeded\r\n  py37: commands succeeded\r\nERROR:   pypy: InterpreterNotFound: pypy\r\n  flake8: commands succeeded\r\n```\r\n\r\nMerge required to start #1179",
      "We have dropped those courses. As much as @audreyr and I like the idea of making a living as instructors, at heart we are builders of things.\r\n\r\nIn any case, thank you @whoophee for looking out for us. ❤️ "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db49ac254a19ac29e6d0",
    "number": 1140,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/audreyr/cookiecutter/pull/1140?src=pr&el=h1) Report\n> Merging [#1140](https://codecov.io/gh/audreyr/cookiecutter/pull/1140?src=pr&el=desc) into [master](https://codecov.io/gh/audreyr/cookiecutter/commit/3bc7b987e4ae9dcee996ae0b00375c1325b8d866?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/audreyr/cookiecutter/pull/1140/graphs/tree.svg?width=650&token=8kF8iLUMJE&height=150&src=pr)](https://codecov.io/gh/audreyr/cookiecutter/pull/1140?src=pr&el=tree)\n\n```diff\n@@          Coverage Diff           @@\n##           master   #1140   +/-   ##\n======================================\n  Coverage     100%    100%           \n======================================\n  Files          18      18           \n  Lines         783     783           \n======================================\n  Hits          783     783\n```\n\n\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/audreyr/cookiecutter/pull/1140?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/audreyr/cookiecutter/pull/1140?src=pr&el=footer). Last update [3bc7b98...1014525](https://codecov.io/gh/audreyr/cookiecutter/pull/1140?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
      "We are no longer maintaining a list of templates inside README file and instead we use github topics feature. Please read https://github.com/cookiecutter/cookiecutter#a-pantry-full-of-cookiecutters and add the needed topics to your repository and people will be able to find your template. The most important one is ``cookiecutter-template``.\r\n\r\nWe are also going to remove most of already listed templates from there, in order not avoid being biased."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db4aac254a19ac29e6d1",
    "number": 1139,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/audreyr/cookiecutter/pull/1139?src=pr&el=h1) Report\n> Merging [#1139](https://codecov.io/gh/audreyr/cookiecutter/pull/1139?src=pr&el=desc) into [master](https://codecov.io/gh/audreyr/cookiecutter/commit/3bc7b987e4ae9dcee996ae0b00375c1325b8d866?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/audreyr/cookiecutter/pull/1139/graphs/tree.svg?width=650&token=8kF8iLUMJE&height=150&src=pr)](https://codecov.io/gh/audreyr/cookiecutter/pull/1139?src=pr&el=tree)\n\n```diff\n@@          Coverage Diff           @@\n##           master   #1139   +/-   ##\n======================================\n  Coverage     100%    100%           \n======================================\n  Files          18      18           \n  Lines         783     783           \n======================================\n  Hits          783     783\n```\n\n\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/audreyr/cookiecutter/pull/1139?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/audreyr/cookiecutter/pull/1139?src=pr&el=footer). Last update [3bc7b98...699807e](https://codecov.io/gh/audreyr/cookiecutter/pull/1139?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
      "@insspb any action needed from my side to merge this?",
      "Hi @pgorzelany \r\nAt this moment this PR is on internal approval sequence. It looks good for me, but another maintainer should check it too. \r\nBut after a whole day of templates PR checking we are considering moving this list out of readme.rst completely. In this case there will be only one link to https://github.com/topics/cookiecutter-template\r\nTo be there you need to add keywords to you repo. \r\nYou can also joint this question discussion here: #1182 ",
      "We are no longer maintaining a list of templates inside README file and instead we use github topics feature. Please read https://github.com/cookiecutter/cookiecutter#a-pantry-full-of-cookiecutters and add the needed topics to your repository and people will be able to find your template. The most important one is ``cookiecutter-template``.\r\n\r\nWe are also going to remove most of already listed templates from there, in order not avoid being biased."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db4aac254a19ac29e6d2",
    "number": 1138,
    "body": "Add ruby section to readme and two ruby cookiecutters",
    "head_branch": "ruby_cookiecutters",
    "is_a_fork": true,
    "comments": [
      "We are no longer maintaining a list of templates inside README file and instead we use github topics feature. Please read https://github.com/cookiecutter/cookiecutter#a-pantry-full-of-cookiecutters and add the needed topics to your repository and people will be able to find your template. The most important one is ``cookiecutter-template``.\r\n\r\nWe are also going to remove most of already listed templates from there, in order not avoid being biased."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db4bac254a19ac29e6d3",
    "number": 1136,
    "body": "This PR addresses #970.\r\nIf a ```cookiecutter.yml``` is present and a ```cookiecutter.json``` file is absent, it will read the config from the yaml file.  If the json file is present, it will be used for config even if the yaml file exists.  AFAICT, the only foreseeable problem with this PR is that pyyaml is inluded in the requirements in ```setup.py```.  If you can accept an \"optional requirements\" file, I can move the dependency to that and add instructions in the readme.  Except for the requirement being listed, I have tried to make this feature as optional as possible.  There is also an ```import yaml``` statement in ```generate.py`` ` that can be placed in a \"try except\" statement if desired.\r\n\r\nI have been using this branch for the last year successfully and just rebased from current master before making this PR.  All of the templates that I have created are using yaml for config and they have been working just fine.\r\n\r\n",
    "head_branch": "use-yaml",
    "is_a_fork": true,
    "comments": [
      "The problem with this PR is that it's reliant on PyYAML. As of a few years ago, PyYAML could not be reliably installed on all platforms, something that is an absolute requirement for Cookiecutter. This is what predicated the creation of Poyo, a simple and pure python YAML parser.\r\n\r\nIf the installation issues for PyYAML on windows have been resolved, then we can consider this PR.",
      "@pydanny PyYAML had a period where it lacked maintenance and that is why runamel was also created but those times are now gone. Considering https://github.com/hackebrot/poyo/issues/23 I am inclined to support more the use of pyyaml as is more mature.\r\n\r\nPure Python is a benefit but only when both projects are actively maintained. If we are to count popularity I would say that Pyyam is about 8x more popular.\r\n\r\nLets see if there are any installation issues on Windows with pyyaml.",
      "(_Very_) minor comment but the recommended extension for YAML files is `.yaml`, as opposed to `.yml` (reference: https://yaml.org/faq.html).",
      "Hi @umeboshi2  and thank you for contribution. \r\nit will be greate to include it in nearest cookiecutter release, as it will be major refactoring.\r\nCan you do three things with it:\r\n\r\n1. Rebase to current master\r\n2. Write documentation example with template in yaml. \r\n3. Write some tests. ",
      "@umeboshi2 Yep, keep it fresh and it will happen very soon. Many things changed with cookiecutter maintenance since you originally raised it.",
      "I'm closing this PR due to its age."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db4cac254a19ac29e6d4",
    "number": 1133,
    "body": "TODO: Put description here\r\n\r\nFixes: #1134",
    "head_branch": "feature/cookie-pick",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1133?src=pr&el=h1) Report\n> Merging [#1133](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1133?src=pr&el=desc) into [master](https://codecov.io/gh/cookiecutter/cookiecutter/commit/db14e06a1dcc0187beeafde72685c3acef93eb68?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1133/graphs/tree.svg?width=650&token=8kF8iLUMJE&height=150&src=pr)](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1133?src=pr&el=tree)\n\n```diff\n@@          Coverage Diff           @@\n##           master   #1133   +/-   ##\n======================================\n  Coverage     100%    100%           \n======================================\n  Files          18      19    +1     \n  Lines         783     843   +60     \n======================================\n+ Hits          783     843   +60\n```\n\n\n| [Impacted Files](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1133?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [cookiecutter/cookie\\_pick.py](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1133/diff?src=pr&el=tree#diff-Y29va2llY3V0dGVyL2Nvb2tpZV9waWNrLnB5) | `100% <100%> (ø)` | |\n| [cookiecutter/main.py](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1133/diff?src=pr&el=tree#diff-Y29va2llY3V0dGVyL21haW4ucHk=) | `100% <100%> (ø)` | :arrow_up: |\n| [cookiecutter/cli.py](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1133/diff?src=pr&el=tree#diff-Y29va2llY3V0dGVyL2NsaS5weQ==) | `100% <100%> (ø)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1133?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1133?src=pr&el=footer). Last update [db14e06...29f0ccb](https://codecov.io/gh/cookiecutter/cookiecutter/pull/1133?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
      "Closing this for several reasons: outdated, never got attention from anyone and maybe the most important aspect: it does not solve an existing bug or feature request. By having a bried look at this change I say \"that is a lot of code added for something that looks like a corner case\".\r\n\r\nIf you really want this to happen, you should better start with a feature request that describes very well the use case. If it manages to get the buy-in from few others, it worth creating a PR to fix it.",
      "Maybe the look was too brief. The PR solves the linked feature request #1134. On top of that the added documentation gives details about the use case.\r\nThis exact use case of migrating cookiecutter changes came up again and again over the years (f.e. #784 and #1173).\r\n\r\nThat being said, I'm just interested in the functionality to go into cookiecutter. So I'll leave it to the newer PR.",
      "@nalch I know, the project lacked active maintenance for a very long time but hopefully this we are going to revive its community. Few months ago I was ready to scrap it from other projects where I was using due to this but recently I become core and I can help a little bit keeping it afloat.\r\n\r\nAs you mentioned the original feature request, I added it to the description and also added a comment there. I will also reopen this until we can make a decision.",
      "No worries. Let's take the newer pull request instead to get the functionality in."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db4dac254a19ac29e6d5",
    "number": 1132,
    "body": "Hi! I stumbled across cookiecutter in a list of must-have console apps and it seemed cool but I couldn't find any packages. I work on [Snapcraft](https://github.com/snapcore/snapcraft), so I took the opportunity to make a snapcraft.yaml of it. If you build it locally and push to the [Snap Store](https://snapcraft.io/store) then the millions of Linux users who get Spotify, Slack, etc this way can also get cookiecutter.\r\n\r\nTo build:\r\n`snap install snapcraft` from Ubuntu, or [install Multipass](https://github.com/CanonicalLtd/multipass/releases) then `brew install snapcraft` on MacOS. Run `snapcraft`.\r\n\r\nTo publish:\r\n[Create an account](https://snapcraft.io/account), then:\r\n```\r\nsnapcraft login\r\nsnapcraft register cookiecutter\r\nsnapcraft push --release=stable *.snap\r\n```\r\n\r\nCheers!",
    "head_branch": "snapcraft",
    "is_a_fork": true,
    "comments": [
      "@evandandrea thank you for this. In this case we will need to add it to our CI/CD to exclude manual work with it on updates.",
      "I will try to resolve this because it looks like a good distribution channel and snapcraft has CI integration, so we can test it. So I initiated two actions:\r\n\r\n* requested activation of snapcraft bot on cookiecutter, probably @pydanny will need to approve\r\n* requested access to \"cookiecutter\" reserved name on https://snapcraft.io for ssbarnea in order to test and activate the integrations.\r\n\r\nOnce these are done I will be able to test, without any need to configure credentails or new travis jobs, everything will be taken care of snapcraft/canonical.",
      "@evandandrea Can you please rebase it and push it again? Travis is still confused since the project move and close/reopen did not fix it.\r\n\r\nI already got a manual publication at https://snapcraft.io/cookiecutter/releases \r\n\r\nAlso add this to `.gitignore`:\r\n```\r\n# Snaps\r\n*.snap\r\nparts/\r\nprime/\r\nsnap/\r\nstage/\r\n```",
      "Closing due to lack of time to work on. I will reopen when I have time.",
      "I am closing this because there are some distribution issues with snaps that prevent them from accessing data from $HOME. That prevented me from creating official snaps for two other projects. Is not that I am against it, but for the moment it does not make sense to keep it open."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db4eac254a19ac29e6d6",
    "number": 1130,
    "body": "I shared, on my Github, my Cookiecutter project template for mobile C++ apps.\r\n\r\nI just updated the README.rst to add my template to the C++ cookiecutters list.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "We are no longer maintaining a list of templates inside README file and instead we use github topics feature. Please read https://github.com/cookiecutter/cookiecutter#a-pantry-full-of-cookiecutters and add the needed topics to your repository and people will be able to find your template. The most important one is ``cookiecutter-template``.\r\n\r\nWe are also going to remove most of already listed templates from there, in order not avoid being biased."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db4eac254a19ac29e6d7",
    "number": 1129,
    "body": "I've created a pyspark cookie cutter based on:\r\nhttps://developerzen.com/best-practices-writing-production-grade-pyspark-jobs-cb688ac4d20f",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "We are no longer maintaining a list of templates inside README file and instead we use github topics feature. Please read https://github.com/cookiecutter/cookiecutter#a-pantry-full-of-cookiecutters and add the needed topics to your repository and people will be able to find your template. The most important one is ``cookiecutter-template``.\r\n\r\nWe are also going to remove most of already listed templates from there, in order not avoid being biased."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db4fac254a19ac29e6d8",
    "number": 1128,
    "body": "Thanks for your work on this! It's a great project.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "We are no longer maintaining a list of templates inside README file and instead we use github topics feature. Please read https://github.com/cookiecutter/cookiecutter#a-pantry-full-of-cookiecutters and add the needed topics to your repository and people will be able to find your template. The most important one is ``cookiecutter-template``.\r\n\r\nWe are also going to remove most of already listed templates from there, in order not avoid being biased."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db50ac254a19ac29e6d9",
    "number": 1127,
    "body": "When running tests on travis with python 3.6, I got the following\r\ndeprecationwarning in cookiecutter/repository.py:19:\r\n\r\n    DeprecationWarning: Flags not at the start of the expression '\\n(?x)\\n((((git|hg)\\\\+)' (truncated)\r\n    \"\"\")\r\n\r\nPython 3.6 prefers the flags right at the start, so it doesn't allow a newline\r\nin front of it.\r\nI fixed it by adding the flag at the end, which is more clear/verbose in any\r\ncase. Which is fitting as the flag is `re.VERBOSE` :-)",
    "head_branch": "reinout-fix-deprecation-warning",
    "is_a_fork": true,
    "comments": [
      "Note: the regular expression is tested in detail, so I haven't added an extra test. The existing tests are proof enough that the regex is still treated as a *verbose* regular expression.",
      "Hm, I see the travis tests are failing. I saw the same two failures locally when running on a clean fork of master. I hoped those tests would be OK on travis, but apparently not.\r\n\r\nSo: I guess my PR is fine (as those tests still run fine), but master needs some fixing?",
      "The last time the master tests ran, everything was OK. I suspect the \"click\" dependency myself: it had an update recently and it deals with the output we're seeing the error in.\r\n\r\nThe output is now `Invalid value for \"[EXTRA_CONTEXT]\"` instead of the expected `Invalid value for \"extra_context\"`.\r\n\r\nPerhaps someone can fire off master's travis tests again just to be sure?",
      "Can we get this fixed and have a new release? ... last one was in 2017.\r\n\r\n```\r\n.tox/py37-ansible28-unit/lib/python3.7/site-packages/cookiecutter/repository.py:19\r\n  /Users/ssbarnea/os/molecule/.tox/py37-ansible28-unit/lib/python3.7/site-packages/cookiecutter/repository.py:19: DeprecationWarning: Flags not at the start of the expression '\\n(?x)\\n((((git|hg)\\\\+)' (truncated)\r\n    \"\"\")\r\n```",
      "I checked the \"click\" library: as far as I can see, the parts dealing with this error's formatting are all three or five years old. So that probably isn't the reason.\r\n\r\nOur error message:\r\n\r\n    Invalid value for \"[EXTRA_CONTEXT]...\": EXTRA_CONTEXT should contain \r\n\r\nThis matches the error format here:\r\n\r\nhttps://github.com/pallets/click/blame/master/click/exceptions.py#L106\r\n\r\nAnd here is the `make_metavar()` that does the uppercasing, the square brackets and the dots:\r\n\r\nhttps://github.com/pallets/click/blob/master/click/core.py#L1891",
      "I can confirm that after this patch local tests works well, as travis should too. \r\nThis suspends deprecation warning. \r\nHere is tox report from local test, no warnings:\r\n\r\n````bash\r\n(venv) insspb@insspb-notebook:~/cookiecutter$ tox\r\nGLOB sdist-make: /home/insspb/cookiecutter/setup.py\r\npy27 inst-nodeps: /home/insspb/cookiecutter/.tox/dist/cookiecutter-1.6.0.zip\r\npy27 installed: DEPRECATION: Python 2.7 will reach the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 won't be maintained after that date. A future version of pip will drop support for Python 2.7.,arrow==0.14.2,atomicwrites==1.3.0,attrs==19.1.0,backports.functools-lru-cache==1.5,binaryornot==0.4.4,certifi==2019.6.16,chardet==3.0.4,Click==7.0,configparser==3.7.4,contextlib2==0.5.5,cookiecutter==1.6.0,coverage==4.5.3,freezegun==0.3.12,funcsigs==1.0.2,future==0.17.1,idna==2.8,importlib-metadata==0.18,Jinja2==2.10.1,jinja2-time==0.2.0,MarkupSafe==1.1.1,mock==3.0.5,more-itertools==5.0.0,packaging==19.0,pathlib2==2.3.4,pkg-resources==0.0.0,pluggy==0.12.0,poyo==0.4.2,py==1.8.0,pyparsing==2.4.0,pytest==4.6.4,pytest-catchlog==1.2.2,pytest-cov==2.7.1,pytest-mock==1.10.4,python-dateutil==2.8.0,requests==2.22.0,scandir==1.10.0,six==1.12.0,urllib3==1.25.3,wcwidth==0.1.7,whichcraft==0.5.2,zipp==0.5.1\r\npy27 runtests: PYTHONHASHSEED='3448090936'\r\npy27 runtests: commands[0] | pytest --cov=cookiecutter tests\r\n/home/insspb/cookiecutter/.tox/py27/local/lib/python2.7/site-packages/_pytest/config/__init__.py:316: PytestConfigWarning: pytest-catchlog plugin has been merged into the core, please remove it from your requirements.\r\n  name.replace(\"_\", \"-\")\r\n=============================================================================================== test session starts ===============================================================================================\r\nplatform linux2 -- Python 2.7.15+, pytest-4.6.4, py-1.8.0, pluggy-0.12.0\r\nrootdir: /home/insspb/cookiecutter, inifile: setup.cfg, testpaths: tests\r\nplugins: cov-2.7.1, catchlog-1.2.2, mock-1.10.4\r\ncollected 261 items                                                                                                                                                                                               \r\n\r\ntests/test_abort_generate_on_hook_error.py ..                                                                                                                                                               [  0%]\r\ntests/test_cli.py ...........................                                                                                                                                                               [ 11%]\r\ntests/test_cookiecutter_invocation.py ..                                                                                                                                                                    [ 11%]\r\ntests/test_cookiecutter_local_no_input.py .......                                                                                                                                                           [ 14%]\r\ntests/test_cookiecutter_local_with_input.py ..                                                                                                                                                              [ 15%]\r\ntests/test_custom_extensions_in_hooks.py ..                                                                                                                                                                 [ 16%]\r\ntests/test_default_extensions.py .                                                                                                                                                                          [ 16%]\r\ntests/test_environment.py ..                                                                                                                                                                                [ 17%]\r\ntests/test_exceptions.py .                                                                                                                                                                                  [ 17%]\r\ntests/test_find.py ..                                                                                                                                                                                       [ 18%]\r\ntests/test_generate_context.py ..........                                                                                                                                                                   [ 22%]\r\ntests/test_generate_copy_without_render.py .                                                                                                                                                                [ 22%]\r\ntests/test_generate_file.py .....                                                                                                                                                                           [ 24%]\r\ntests/test_generate_files.py ..................                                                                                                                                                             [ 31%]\r\ntests/test_generate_hooks.py ........                                                                                                                                                                       [ 34%]\r\ntests/test_get_config.py .....                                                                                                                                                                              [ 36%]\r\ntests/test_get_user_config.py .........                                                                                                                                                                     [ 39%]\r\ntests/test_hooks.py ..........                                                                                                                                                                              [ 43%]\r\ntests/test_log.py ...                                                                                                                                                                                       [ 44%]\r\ntests/test_main.py ..                                                                                                                                                                                       [ 45%]\r\ntests/test_output_folder.py ..                                                                                                                                                                              [ 46%]\r\ntests/test_preferred_encoding.py s                                                                                                                                                                          [ 46%]\r\ntests/test_prompt.py .........................                                                                                                                                                              [ 56%]\r\ntests/test_read_repo_password.py .                                                                                                                                                                          [ 56%]\r\ntests/test_read_user_choice.py .....                                                                                                                                                                        [ 58%]\r\ntests/test_read_user_dict.py .......                                                                                                                                                                        [ 61%]\r\ntests/test_read_user_variable.py .                                                                                                                                                                          [ 61%]\r\ntests/test_read_user_yes_no.py .                                                                                                                                                                            [ 62%]\r\ntests/test_repo_not_found.py .                                                                                                                                                                              [ 62%]\r\ntests/test_specify_output_dir.py ..                                                                                                                                                                         [ 63%]\r\ntests/test_utils.py .........                                                                                                                                                                               [ 66%]\r\ntests/replay/test_dump.py .....                                                                                                                                                                             [ 68%]\r\ntests/replay/test_load.py ....                                                                                                                                                                              [ 70%]\r\ntests/replay/test_replay.py ......                                                                                                                                                                          [ 72%]\r\ntests/repository/test_abbreviation_expansion.py .......                                                                                                                                                     [ 75%]\r\ntests/repository/test_determine_repo_dir_clones_repo.py .....                                                                                                                                               [ 77%]\r\ntests/repository/test_determine_repo_dir_finds_existing_cookiecutter.py .                                                                                                                                   [ 77%]\r\ntests/repository/test_determine_repository_should_use_local_repo.py ...                                                                                                                                     [ 78%]\r\ntests/repository/test_is_repo_url.py .............                                                                                                                                                          [ 83%]\r\ntests/repository/test_repository_has_cookiecutter_json.py ...                                                                                                                                               [ 84%]\r\ntests/vcs/test_clone.py ..........                                                                                                                                                                          [ 88%]\r\ntests/vcs/test_identify_repo.py .............                                                                                                                                                               [ 93%]\r\ntests/vcs/test_is_vcs_installed.py ....                                                                                                                                                                     [ 95%]\r\ntests/zipfile/test_unzip.py .............                                                                                                                                                                   [100%]\r\n\r\n---------- coverage: platform linux2, python 2.7.15-final-0 ----------\r\nName                          Stmts   Miss  Cover\r\n-------------------------------------------------\r\ncookiecutter/__init__.py          2      0   100%\r\ncookiecutter/__main__.py          3      0   100%\r\ncookiecutter/cli.py              50      0   100%\r\ncookiecutter/config.py           52      0   100%\r\ncookiecutter/environment.py      21      0   100%\r\ncookiecutter/exceptions.py       24      0   100%\r\ncookiecutter/extensions.py        9      0   100%\r\ncookiecutter/find.py             18      0   100%\r\ncookiecutter/generate.py        166      0   100%\r\ncookiecutter/hooks.py            61      0   100%\r\ncookiecutter/log.py              22      0   100%\r\ncookiecutter/main.py             31      0   100%\r\ncookiecutter/prompt.py           90      0   100%\r\ncookiecutter/replay.py           30      0   100%\r\ncookiecutter/repository.py       39      0   100%\r\ncookiecutter/utils.py            50      2    96%\r\ncookiecutter/vcs.py              54      0   100%\r\ncookiecutter/zipfile.py          61      0   100%\r\n-------------------------------------------------\r\nTOTAL                           783      2    99%\r\n\r\n\r\n====================================================================================== 260 passed, 1 skipped in 4.84 seconds ======================================================================================\r\npy35 inst-nodeps: /home/insspb/cookiecutter/.tox/dist/cookiecutter-1.6.0.zip\r\npy35 installed: arrow==0.14.2,atomicwrites==1.3.0,attrs==19.1.0,binaryornot==0.4.4,certifi==2019.6.16,chardet==3.0.4,Click==7.0,cookiecutter==1.6.0,coverage==4.5.3,freezegun==0.3.12,future==0.17.1,idna==2.8,importlib-metadata==0.18,Jinja2==2.10.1,jinja2-time==0.2.0,MarkupSafe==1.1.1,more-itertools==7.1.0,packaging==19.0,pathlib2==2.3.4,pkg-resources==0.0.0,pluggy==0.12.0,poyo==0.4.2,py==1.8.0,pyparsing==2.4.0,pytest==5.0.0,pytest-catchlog==1.2.2,pytest-cov==2.7.1,pytest-mock==1.10.4,python-dateutil==2.8.0,requests==2.22.0,six==1.12.0,urllib3==1.25.3,wcwidth==0.1.7,whichcraft==0.5.2,zipp==0.5.1\r\npy35 runtests: PYTHONHASHSEED='3448090936'\r\npy35 runtests: commands[0] | pytest --cov=cookiecutter tests\r\n/home/insspb/cookiecutter/.tox/py35/lib/python3.5/site-packages/_pytest/config/__init__.py:297: PytestConfigWarning: pytest-catchlog plugin has been merged into the core, please remove it from your requirements.\r\n  name.replace(\"_\", \"-\")\r\n=============================================================================================== test session starts ===============================================================================================\r\nplatform linux -- Python 3.5.7, pytest-5.0.0, py-1.8.0, pluggy-0.12.0\r\nrootdir: /home/insspb/cookiecutter, inifile: setup.cfg, testpaths: tests\r\nplugins: cov-2.7.1, catchlog-1.2.2, mock-1.10.4\r\ncollected 261 items                                                                                                                                                                                               \r\n\r\ntests/test_abort_generate_on_hook_error.py ..                                                                                                                                                               [  0%]\r\ntests/test_cli.py ...........................                                                                                                                                                               [ 11%]\r\ntests/test_cookiecutter_invocation.py ..                                                                                                                                                                    [ 11%]\r\ntests/test_cookiecutter_local_no_input.py .......                                                                                                                                                           [ 14%]\r\ntests/test_cookiecutter_local_with_input.py ..                                                                                                                                                              [ 15%]\r\ntests/test_custom_extensions_in_hooks.py ..                                                                                                                                                                 [ 16%]\r\ntests/test_default_extensions.py .                                                                                                                                                                          [ 16%]\r\ntests/test_environment.py ..                                                                                                                                                                                [ 17%]\r\ntests/test_exceptions.py .                                                                                                                                                                                  [ 17%]\r\ntests/test_find.py ..                                                                                                                                                                                       [ 18%]\r\ntests/test_generate_context.py ..........                                                                                                                                                                   [ 22%]\r\ntests/test_generate_copy_without_render.py .                                                                                                                                                                [ 22%]\r\ntests/test_generate_file.py .....                                                                                                                                                                           [ 24%]\r\ntests/test_generate_files.py ..................                                                                                                                                                             [ 31%]\r\ntests/test_generate_hooks.py ........                                                                                                                                                                       [ 34%]\r\ntests/test_get_config.py .....                                                                                                                                                                              [ 36%]\r\ntests/test_get_user_config.py .........                                                                                                                                                                     [ 39%]\r\ntests/test_hooks.py ..........                                                                                                                                                                              [ 43%]\r\ntests/test_log.py ...                                                                                                                                                                                       [ 44%]\r\ntests/test_main.py ..                                                                                                                                                                                       [ 45%]\r\ntests/test_output_folder.py ..                                                                                                                                                                              [ 46%]\r\ntests/test_preferred_encoding.py .                                                                                                                                                                          [ 46%]\r\ntests/test_prompt.py .........................                                                                                                                                                              [ 56%]\r\ntests/test_read_repo_password.py .                                                                                                                                                                          [ 56%]\r\ntests/test_read_user_choice.py .....                                                                                                                                                                        [ 58%]\r\ntests/test_read_user_dict.py .......                                                                                                                                                                        [ 61%]\r\ntests/test_read_user_variable.py .                                                                                                                                                                          [ 61%]\r\ntests/test_read_user_yes_no.py .                                                                                                                                                                            [ 62%]\r\ntests/test_repo_not_found.py .                                                                                                                                                                              [ 62%]\r\ntests/test_specify_output_dir.py ..                                                                                                                                                                         [ 63%]\r\ntests/test_utils.py .........                                                                                                                                                                               [ 66%]\r\ntests/replay/test_dump.py .....                                                                                                                                                                             [ 68%]\r\ntests/replay/test_load.py ....                                                                                                                                                                              [ 70%]\r\ntests/replay/test_replay.py ......                                                                                                                                                                          [ 72%]\r\ntests/repository/test_abbreviation_expansion.py .......                                                                                                                                                     [ 75%]\r\ntests/repository/test_determine_repo_dir_clones_repo.py .....                                                                                                                                               [ 77%]\r\ntests/repository/test_determine_repo_dir_finds_existing_cookiecutter.py .                                                                                                                                   [ 77%]\r\ntests/repository/test_determine_repository_should_use_local_repo.py ...                                                                                                                                     [ 78%]\r\ntests/repository/test_is_repo_url.py .............                                                                                                                                                          [ 83%]\r\ntests/repository/test_repository_has_cookiecutter_json.py ...                                                                                                                                               [ 84%]\r\ntests/vcs/test_clone.py ..........                                                                                                                                                                          [ 88%]\r\ntests/vcs/test_identify_repo.py .............                                                                                                                                                               [ 93%]\r\ntests/vcs/test_is_vcs_installed.py ....                                                                                                                                                                     [ 95%]\r\ntests/zipfile/test_unzip.py .............                                                                                                                                                                   [100%]\r\n\r\n----------- coverage: platform linux, python 3.5.7-final-0 -----------\r\nName                          Stmts   Miss  Cover\r\n-------------------------------------------------\r\ncookiecutter/__init__.py          2      0   100%\r\ncookiecutter/__main__.py          3      0   100%\r\ncookiecutter/cli.py              50      0   100%\r\ncookiecutter/config.py           52      0   100%\r\ncookiecutter/environment.py      21      0   100%\r\ncookiecutter/exceptions.py       24      0   100%\r\ncookiecutter/extensions.py        9      0   100%\r\ncookiecutter/find.py             18      0   100%\r\ncookiecutter/generate.py        166      0   100%\r\ncookiecutter/hooks.py            61      0   100%\r\ncookiecutter/log.py              22      0   100%\r\ncookiecutter/main.py             31      0   100%\r\ncookiecutter/prompt.py           90      0   100%\r\ncookiecutter/replay.py           30      0   100%\r\ncookiecutter/repository.py       39      0   100%\r\ncookiecutter/utils.py            50      2    96%\r\ncookiecutter/vcs.py              54      0   100%\r\ncookiecutter/zipfile.py          61      2    97%\r\n-------------------------------------------------\r\nTOTAL                           783      4    99%\r\n\r\n\r\n=========================================================================================== 261 passed in 6.38 seconds ============================================================================================\r\npy36 inst-nodeps: /home/insspb/cookiecutter/.tox/dist/cookiecutter-1.6.0.zip\r\npy36 installed: arrow==0.14.2,atomicwrites==1.3.0,attrs==19.1.0,binaryornot==0.4.4,certifi==2019.6.16,chardet==3.0.4,Click==7.0,cookiecutter==1.6.0,coverage==4.5.3,freezegun==0.3.12,future==0.17.1,idna==2.8,importlib-metadata==0.18,Jinja2==2.10.1,jinja2-time==0.2.0,MarkupSafe==1.1.1,more-itertools==7.1.0,packaging==19.0,pkg-resources==0.0.0,pluggy==0.12.0,poyo==0.4.2,py==1.8.0,pyparsing==2.4.0,pytest==5.0.0,pytest-catchlog==1.2.2,pytest-cov==2.7.1,pytest-mock==1.10.4,python-dateutil==2.8.0,requests==2.22.0,six==1.12.0,urllib3==1.25.3,wcwidth==0.1.7,whichcraft==0.5.2,zipp==0.5.1\r\npy36 runtests: PYTHONHASHSEED='3448090936'\r\npy36 runtests: commands[0] | pytest --cov=cookiecutter tests\r\n/home/insspb/cookiecutter/.tox/py36/lib/python3.6/site-packages/_pytest/config/__init__.py:297: PytestConfigWarning: pytest-catchlog plugin has been merged into the core, please remove it from your requirements.\r\n  name.replace(\"_\", \"-\")\r\n=============================================================================================== test session starts ===============================================================================================\r\nplatform linux -- Python 3.6.8, pytest-5.0.0, py-1.8.0, pluggy-0.12.0\r\nrootdir: /home/insspb/cookiecutter, inifile: setup.cfg, testpaths: tests\r\nplugins: cov-2.7.1, catchlog-1.2.2, mock-1.10.4\r\ncollected 261 items                                                                                                                                                                                               \r\n\r\ntests/test_abort_generate_on_hook_error.py ..                                                                                                                                                               [  0%]\r\ntests/test_cli.py ...........................                                                                                                                                                               [ 11%]\r\ntests/test_cookiecutter_invocation.py ..                                                                                                                                                                    [ 11%]\r\ntests/test_cookiecutter_local_no_input.py .......                                                                                                                                                           [ 14%]\r\ntests/test_cookiecutter_local_with_input.py ..                                                                                                                                                              [ 15%]\r\ntests/test_custom_extensions_in_hooks.py ..                                                                                                                                                                 [ 16%]\r\ntests/test_default_extensions.py .                                                                                                                                                                          [ 16%]\r\ntests/test_environment.py ..                                                                                                                                                                                [ 17%]\r\ntests/test_exceptions.py .                                                                                                                                                                                  [ 17%]\r\ntests/test_find.py ..                                                                                                                                                                                       [ 18%]\r\ntests/test_generate_context.py ..........                                                                                                                                                                   [ 22%]\r\ntests/test_generate_copy_without_render.py .                                                                                                                                                                [ 22%]\r\ntests/test_generate_file.py .....                                                                                                                                                                           [ 24%]\r\ntests/test_generate_files.py ..................                                                                                                                                                             [ 31%]\r\ntests/test_generate_hooks.py ........                                                                                                                                                                       [ 34%]\r\ntests/test_get_config.py .....                                                                                                                                                                              [ 36%]\r\ntests/test_get_user_config.py .........                                                                                                                                                                     [ 39%]\r\ntests/test_hooks.py ..........                                                                                                                                                                              [ 43%]\r\ntests/test_log.py ...                                                                                                                                                                                       [ 44%]\r\ntests/test_main.py ..                                                                                                                                                                                       [ 45%]\r\ntests/test_output_folder.py ..                                                                                                                                                                              [ 46%]\r\ntests/test_preferred_encoding.py .                                                                                                                                                                          [ 46%]\r\ntests/test_prompt.py .........................                                                                                                                                                              [ 56%]\r\ntests/test_read_repo_password.py .                                                                                                                                                                          [ 56%]\r\ntests/test_read_user_choice.py .....                                                                                                                                                                        [ 58%]\r\ntests/test_read_user_dict.py .......                                                                                                                                                                        [ 61%]\r\ntests/test_read_user_variable.py .                                                                                                                                                                          [ 61%]\r\ntests/test_read_user_yes_no.py .                                                                                                                                                                            [ 62%]\r\ntests/test_repo_not_found.py .                                                                                                                                                                              [ 62%]\r\ntests/test_specify_output_dir.py ..                                                                                                                                                                         [ 63%]\r\ntests/test_utils.py .........                                                                                                                                                                               [ 66%]\r\ntests/replay/test_dump.py .....                                                                                                                                                                             [ 68%]\r\ntests/replay/test_load.py ....                                                                                                                                                                              [ 70%]\r\ntests/replay/test_replay.py ......                                                                                                                                                                          [ 72%]\r\ntests/repository/test_abbreviation_expansion.py .......                                                                                                                                                     [ 75%]\r\ntests/repository/test_determine_repo_dir_clones_repo.py .....                                                                                                                                               [ 77%]\r\ntests/repository/test_determine_repo_dir_finds_existing_cookiecutter.py .                                                                                                                                   [ 77%]\r\ntests/repository/test_determine_repository_should_use_local_repo.py ...                                                                                                                                     [ 78%]\r\ntests/repository/test_is_repo_url.py .............                                                                                                                                                          [ 83%]\r\ntests/repository/test_repository_has_cookiecutter_json.py ...                                                                                                                                               [ 84%]\r\ntests/vcs/test_clone.py ..........                                                                                                                                                                          [ 88%]\r\ntests/vcs/test_identify_repo.py .............                                                                                                                                                               [ 93%]\r\ntests/vcs/test_is_vcs_installed.py ....                                                                                                                                                                     [ 95%]\r\ntests/zipfile/test_unzip.py .............                                                                                                                                                                   [100%]\r\n\r\n----------- coverage: platform linux, python 3.6.8-final-0 -----------\r\nName                          Stmts   Miss  Cover\r\n-------------------------------------------------\r\ncookiecutter/__init__.py          2      0   100%\r\ncookiecutter/__main__.py          3      0   100%\r\ncookiecutter/cli.py              50      0   100%\r\ncookiecutter/config.py           52      0   100%\r\ncookiecutter/environment.py      21      0   100%\r\ncookiecutter/exceptions.py       24      0   100%\r\ncookiecutter/extensions.py        9      0   100%\r\ncookiecutter/find.py             18      0   100%\r\ncookiecutter/generate.py        166      0   100%\r\ncookiecutter/hooks.py            61      0   100%\r\ncookiecutter/log.py              22      0   100%\r\ncookiecutter/main.py             31      0   100%\r\ncookiecutter/prompt.py           90      0   100%\r\ncookiecutter/replay.py           30      0   100%\r\ncookiecutter/repository.py       39      0   100%\r\ncookiecutter/utils.py            50      2    96%\r\ncookiecutter/vcs.py              54      0   100%\r\ncookiecutter/zipfile.py          61      2    97%\r\n-------------------------------------------------\r\nTOTAL                           783      4    99%\r\n\r\n\r\n=========================================================================================== 261 passed in 5.49 seconds ============================================================================================\r\npy37 inst-nodeps: /home/insspb/cookiecutter/.tox/dist/cookiecutter-1.6.0.zip\r\npy37 installed: arrow==0.14.2,atomicwrites==1.3.0,attrs==19.1.0,binaryornot==0.4.4,certifi==2019.6.16,chardet==3.0.4,Click==7.0,cookiecutter==1.6.0,coverage==4.5.3,freezegun==0.3.12,future==0.17.1,idna==2.8,importlib-metadata==0.18,Jinja2==2.10.1,jinja2-time==0.2.0,MarkupSafe==1.1.1,more-itertools==7.1.0,packaging==19.0,pkg-resources==0.0.0,pluggy==0.12.0,poyo==0.4.2,py==1.8.0,pyparsing==2.4.0,pytest==5.0.0,pytest-catchlog==1.2.2,pytest-cov==2.7.1,pytest-mock==1.10.4,python-dateutil==2.8.0,requests==2.22.0,six==1.12.0,urllib3==1.25.3,wcwidth==0.1.7,whichcraft==0.5.2,zipp==0.5.1\r\npy37 runtests: PYTHONHASHSEED='3448090936'\r\npy37 runtests: commands[0] | pytest --cov=cookiecutter tests\r\n/home/insspb/cookiecutter/.tox/py37/lib/python3.7/site-packages/_pytest/config/__init__.py:297: PytestConfigWarning: pytest-catchlog plugin has been merged into the core, please remove it from your requirements.\r\n  name.replace(\"_\", \"-\")\r\n=============================================================================================== test session starts ===============================================================================================\r\nplatform linux -- Python 3.7.3, pytest-5.0.0, py-1.8.0, pluggy-0.12.0\r\nrootdir: /home/insspb/cookiecutter, inifile: setup.cfg, testpaths: tests\r\nplugins: cov-2.7.1, catchlog-1.2.2, mock-1.10.4\r\ncollected 261 items                                                                                                                                                                                               \r\n\r\ntests/test_abort_generate_on_hook_error.py ..                                                                                                                                                               [  0%]\r\ntests/test_cli.py ...........................                                                                                                                                                               [ 11%]\r\ntests/test_cookiecutter_invocation.py ..                                                                                                                                                                    [ 11%]\r\ntests/test_cookiecutter_local_no_input.py .......                                                                                                                                                           [ 14%]\r\ntests/test_cookiecutter_local_with_input.py ..                                                                                                                                                              [ 15%]\r\ntests/test_custom_extensions_in_hooks.py ..                                                                                                                                                                 [ 16%]\r\ntests/test_default_extensions.py .                                                                                                                                                                          [ 16%]\r\ntests/test_environment.py ..                                                                                                                                                                                [ 17%]\r\ntests/test_exceptions.py .                                                                                                                                                                                  [ 17%]\r\ntests/test_find.py ..                                                                                                                                                                                       [ 18%]\r\ntests/test_generate_context.py ..........                                                                                                                                                                   [ 22%]\r\ntests/test_generate_copy_without_render.py .                                                                                                                                                                [ 22%]\r\ntests/test_generate_file.py .....                                                                                                                                                                           [ 24%]\r\ntests/test_generate_files.py ..................                                                                                                                                                             [ 31%]\r\ntests/test_generate_hooks.py ........                                                                                                                                                                       [ 34%]\r\ntests/test_get_config.py .....                                                                                                                                                                              [ 36%]\r\ntests/test_get_user_config.py .........                                                                                                                                                                     [ 39%]\r\ntests/test_hooks.py ..........                                                                                                                                                                              [ 43%]\r\ntests/test_log.py ...                                                                                                                                                                                       [ 44%]\r\ntests/test_main.py ..                                                                                                                                                                                       [ 45%]\r\ntests/test_output_folder.py ..                                                                                                                                                                              [ 46%]\r\ntests/test_preferred_encoding.py .                                                                                                                                                                          [ 46%]\r\ntests/test_prompt.py .........................                                                                                                                                                              [ 56%]\r\ntests/test_read_repo_password.py .                                                                                                                                                                          [ 56%]\r\ntests/test_read_user_choice.py .....                                                                                                                                                                        [ 58%]\r\ntests/test_read_user_dict.py .......                                                                                                                                                                        [ 61%]\r\ntests/test_read_user_variable.py .                                                                                                                                                                          [ 61%]\r\ntests/test_read_user_yes_no.py .                                                                                                                                                                            [ 62%]\r\ntests/test_repo_not_found.py .                                                                                                                                                                              [ 62%]\r\ntests/test_specify_output_dir.py ..                                                                                                                                                                         [ 63%]\r\ntests/test_utils.py .........                                                                                                                                                                               [ 66%]\r\ntests/replay/test_dump.py .....                                                                                                                                                                             [ 68%]\r\ntests/replay/test_load.py ....                                                                                                                                                                              [ 70%]\r\ntests/replay/test_replay.py ......                                                                                                                                                                          [ 72%]\r\ntests/repository/test_abbreviation_expansion.py .......                                                                                                                                                     [ 75%]\r\ntests/repository/test_determine_repo_dir_clones_repo.py .....                                                                                                                                               [ 77%]\r\ntests/repository/test_determine_repo_dir_finds_existing_cookiecutter.py .                                                                                                                                   [ 77%]\r\ntests/repository/test_determine_repository_should_use_local_repo.py ...                                                                                                                                     [ 78%]\r\ntests/repository/test_is_repo_url.py .............                                                                                                                                                          [ 83%]\r\ntests/repository/test_repository_has_cookiecutter_json.py ...                                                                                                                                               [ 84%]\r\ntests/vcs/test_clone.py ..........                                                                                                                                                                          [ 88%]\r\ntests/vcs/test_identify_repo.py .............                                                                                                                                                               [ 93%]\r\ntests/vcs/test_is_vcs_installed.py ....                                                                                                                                                                     [ 95%]\r\ntests/zipfile/test_unzip.py .............                                                                                                                                                                   [100%]\r\n\r\n----------- coverage: platform linux, python 3.7.3-final-0 -----------\r\nName                          Stmts   Miss  Cover\r\n-------------------------------------------------\r\ncookiecutter/__init__.py          2      0   100%\r\ncookiecutter/__main__.py          3      0   100%\r\ncookiecutter/cli.py              50      0   100%\r\ncookiecutter/config.py           52      0   100%\r\ncookiecutter/environment.py      21      0   100%\r\ncookiecutter/exceptions.py       24      0   100%\r\ncookiecutter/extensions.py        9      0   100%\r\ncookiecutter/find.py             18      0   100%\r\ncookiecutter/generate.py        166      0   100%\r\ncookiecutter/hooks.py            61      0   100%\r\ncookiecutter/log.py              22      0   100%\r\ncookiecutter/main.py             31      0   100%\r\ncookiecutter/prompt.py           90      0   100%\r\ncookiecutter/replay.py           30      0   100%\r\ncookiecutter/repository.py       39      0   100%\r\ncookiecutter/utils.py            50      2    96%\r\ncookiecutter/vcs.py              54      0   100%\r\ncookiecutter/zipfile.py          61      2    97%\r\n-------------------------------------------------\r\nTOTAL                           783      4    99%\r\n\r\n\r\n=========================================================================================== 261 passed in 5.22 seconds ============================================================================================\r\npypy create: /home/insspb/cookiecutter/.tox/pypy\r\nERROR: InterpreterNotFound: pypy\r\nflake8 inst-nodeps: /home/insspb/cookiecutter/.tox/dist/cookiecutter-1.6.0.zip\r\nflake8 installed: arrow==0.14.2,binaryornot==0.4.4,certifi==2019.6.16,chardet==3.0.4,Click==7.0,cookiecutter==1.6.0,flake8==3.5.0,future==0.17.1,idna==2.8,Jinja2==2.10.1,jinja2-time==0.2.0,MarkupSafe==1.1.1,mccabe==0.6.1,pkg-resources==0.0.0,poyo==0.4.2,pycodestyle==2.3.1,pyflakes==1.6.0,python-dateutil==2.8.0,requests==2.22.0,six==1.12.0,urllib3==1.25.3,whichcraft==0.5.2\r\nflake8 runtests: PYTHONHASHSEED='3448090936'\r\nflake8 runtests: commands[0] | flake8 cookiecutter tests setup.py\r\n_____________________________________________________________________________________________________ summary _____________________________________________________________________________________________________\r\n  py27: commands succeeded\r\n  py35: commands succeeded\r\n  py36: commands succeeded\r\n  py37: commands succeeded\r\nERROR:   pypy: InterpreterNotFound: pypy\r\n  flake8: commands succeeded\r\n\r\n```",
      "tested with merged #1181",
      "Thanks!\r\n\r\nUnrelated to this PR, but perhaps of interest: https://www.youtube.com/watch?v=xuPGdxQOJ1s\r\nI gave a talk about it at the Dutch PyGrunn conference (some 300 people attending).\r\nI used my model railway as an illustration :-)",
      "When is this going to be released?"
    ],
    "commit_messages": [
      "Fix for deprecationwarning on python 3.6 (#1127)\n\nWhen running tests on travis with python 3.6, I got the following\r\ndeprecationwarning in cookiecutter/repository.py:19:\r\n\r\n    DeprecationWarning: Flags not at the start of the expression '\\n(?x)\\n((((git|hg)\\\\+)' (truncated)\r\n    \"\"\")\r\n\r\nPython 3.6 prefers the flags right at the start, so it doesn't allow a newline\r\nin front of it.\r\nI fixed it by adding the flag at the end, which is more clear/verbose in any\r\ncase. Which is fitting as the flag is `re.VERBOSE` :-)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db51ac254a19ac29e6da",
    "number": 1126,
    "body": "FIX: https://github.com/audreyr/cookiecutter/issues/1062\r\n\r\nadd missing dependencies",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "@lumega thank you for your contribution to cookiecutter. Unfortunately, it was not merged in time and current required packages list changes. \r\nWe are making big efforts to reformat our documentation, and I invite you to review this work here: #1216 \r\nDuring working on #1216 I was able to serve docs with new config. \r\nThis PR closed as outdated. Excuse us for long reply."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db51ac254a19ac29e6db",
    "number": 1125,
    "body": "When overwrite_if_exists is specified, make _copy_without_render work\nwith existing target directories.\n\nThis is an alternative to #1030, which took a different approach,\nremoving the target directory before copying.  This PR does not remove\ncontent when overwrite_if_exists is specified.\n\nReplaces shutil.copytree with a version that accepts an exist_ok\nkeyword argument.  The exist_ok keyword argument is passed to\nos.makedirs.  The function is based on shutils, with unused keyword\narguments removed.\n\nCloses #1029",
    "head_branch": "1029-handle-overwrite-if-exists-for-copy-without-render",
    "is_a_fork": true,
    "comments": [
      "I'd love to see this PR merged!\r\n\r\n_Here's my use case:_\r\n\r\nMy cookiecutter project contains a folder with many [Ansible](https://docs.ansible.com/ansible/latest/index.html) roles.\r\n\r\nAnsible syntax itself uses Jinja2 templating (i.e. `{{ ansible-variable }}`) , so by default,  when `cookiecutter` is executed it thinks `{{ ansible-variable }}` is a Cookiecutter variable when it is not.\r\n\r\nTo avoid this issue, I've added my Ansible folder to `\"_copy_without_render\"` in my `cookiecutter.json` which works great.\r\n\r\nHowever there's a big caveat: As I keep adding new roles to my Ansible folder, I'd like to re-run `cookiecutter` on already cut projects to pickup the newest roles, but when I do I get bitten by #1029\r\n\r\nI know that instead of using `\"_copy_without_render\"` in my `cookiecutter.json` I can wrap all my Ansible files with `{% raw %}` and `{% endraw %}`, since then `cookicutter` has no issues overwriting files if they exist and `overwrite_if_exists` is provided, but this has several drawbacks:\r\n\r\n- Wrapping the files Error prone\r\n- Wrapping hundreds of Ansible files is unpleasant.\r\n- Once I add the `raw` / `endraw` I loose YAML syntax validation in my code editor.\r\n\r\n ",
      "I'm closing this PR due to its age."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db52ac254a19ac29e6dc",
    "number": 1124,
    "body": "Apparently Jinja2 docs moved elsewhere, so the old link got broken. This links to hopefully right part of the docs. Feel free to change the link here.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "We are no longer maintaining a list of templates inside README file and instead we use github topics feature. Please read https://github.com/cookiecutter/cookiecutter#a-pantry-full-of-cookiecutters and add the needed topics to your repository and people will be able to find your template. The most important one is ``cookiecutter-template``.\r\n\r\nWe are also going to remove most of already listed templates from there, in order not avoid being biased."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db53ac254a19ac29e6dd",
    "number": 1122,
    "body": "",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [
      "We are no longer maintaining a list of templates inside README file and instead we use github topics feature. Please read https://github.com/cookiecutter/cookiecutter#a-pantry-full-of-cookiecutters and add the needed topics to your repository and people will be able to find your template. The most important one is ``cookiecutter-template``.\r\n\r\nWe are also going to remove most of already listed templates from there, in order not avoid being biased."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db54ac254a19ac29e6de",
    "number": 1121,
    "body": "",
    "head_branch": "patch-5",
    "is_a_fork": true,
    "comments": [
      "We are no longer maintaining a list of templates inside README file and instead we use github topics feature. Please read https://github.com/cookiecutter/cookiecutter#a-pantry-full-of-cookiecutters and add the needed topics to your repository and people will be able to find your template. The most important one is ``cookiecutter-template``.\r\n\r\nWe are also going to remove most of already listed templates from there, in order not avoid being biased.",
      "Added topics for pyramid-* and substanced cookiecutters."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db55ac254a19ac29e6df",
    "number": 1120,
    "body": "Added a minimal python template with amanita flavor.",
    "head_branch": "amanita-template",
    "is_a_fork": true,
    "comments": [
      "Target removed. Link broken. "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db55ac254a19ac29e6e0",
    "number": 1119,
    "body": "Note that failing tests are fixed in #1111, I did not want to backport them but can do it if requested :)",
    "head_branch": "fix-warnings",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db56ac254a19ac29e6e1",
    "number": 1117,
    "body": "- Added docstrings for all functions.\r\n- Added descriptions of each step in a function.\r\n- Improved module docstring to comply with flake8.\r\n\r\nFixes #742 \r\n\r\n",
    "head_branch": "flake8-replay",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db57ac254a19ac29e6e2",
    "number": 1114,
    "body": "Add [cookiecutter-docker-latex](https://github.com/jun-harashima/cookiecutter-docker-latex), a minimal template for compiling LaTeX file using Docker.",
    "head_branch": "add-docker-latex",
    "is_a_fork": true,
    "comments": [
      "We are no longer maintaining a list of templates inside README file and instead we use github topics feature. Please read https://github.com/cookiecutter/cookiecutter#a-pantry-full-of-cookiecutters and add the needed topics to your repository and people will be able to find your template. The most important one is ``cookiecutter-template``.\r\n\r\nWe are also going to remove most of already listed templates from there, in order not avoid being biased."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db58ac254a19ac29e6e3",
    "number": 1113,
    "body": "Hi\r\n\r\nI've had a lot of fun playing with cookiecutter! I'd like to adda link to a simple template I have been working on in README.rst to create new TM1 instances. \r\n\r\nCheers\r\nAlexander",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db58ac254a19ac29e6e4",
    "number": 1112,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Both files currently pass pep257 check. Declined."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db59ac254a19ac29e6e5",
    "number": 1111,
    "body": "While working on\r\n- https://github.com/audreyr/cookiecutter/pull/1106\r\n- https://github.com/audreyr/cookiecutter/pull/1107\r\n\r\nI noticed that the tests are failing on unrelated issues. Created the PR here with vanilla `master` first and verified that the tests fail already there.\r\n\r\nSeems that `click` v7.0 introduces some new error reporting. So I think either we change the tests like this or figure out a nice way to freeze the click dependency at `v6`.",
    "head_branch": "unbreak_tests",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/audreyr/cookiecutter/pull/1111?src=pr&el=h1) Report\n> Merging [#1111](https://codecov.io/gh/audreyr/cookiecutter/pull/1111?src=pr&el=desc) into [master](https://codecov.io/gh/audreyr/cookiecutter/commit/db14e06a1dcc0187beeafde72685c3acef93eb68?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/audreyr/cookiecutter/pull/1111/graphs/tree.svg?width=650&token=8kF8iLUMJE&height=150&src=pr)](https://codecov.io/gh/audreyr/cookiecutter/pull/1111?src=pr&el=tree)\n\n```diff\n@@          Coverage Diff           @@\n##           master   #1111   +/-   ##\n======================================\n  Coverage     100%    100%           \n======================================\n  Files          18      18           \n  Lines         783     783           \n======================================\n  Hits          783     783\n```\n\n\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/audreyr/cookiecutter/pull/1111?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/audreyr/cookiecutter/pull/1111?src=pr&el=footer). Last update [db14e06...44c5b76](https://codecov.io/gh/audreyr/cookiecutter/pull/1111?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
      "@hackebrot @pydanny Merge this please?",
      "This is a duplicate of #1110 ",
      "Thanks @HaraldNordgren, but @jairideout got there first... "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db5aac254a19ac29e6e6",
    "number": 1110,
    "body": "Fixed two unit tests that fail with Click 7.0 (see #1109 for details).\r\n\r\nFixes #1109.\r\n\r\nThe tests now pass with Click 7.0, but will fail with older versions of Click due to small differences in usage error messages. Do the tests need to pass with all supported versions of Click (>=5.0) or is it sufficient to have them pass with the latest supported version of Click?",
    "head_branch": "issue-1109",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/audreyr/cookiecutter/pull/1110?src=pr&el=h1) Report\n> Merging [#1110](https://codecov.io/gh/audreyr/cookiecutter/pull/1110?src=pr&el=desc) into [master](https://codecov.io/gh/audreyr/cookiecutter/commit/db14e06a1dcc0187beeafde72685c3acef93eb68?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/audreyr/cookiecutter/pull/1110/graphs/tree.svg?width=650&token=8kF8iLUMJE&height=150&src=pr)](https://codecov.io/gh/audreyr/cookiecutter/pull/1110?src=pr&el=tree)\n\n```diff\n@@          Coverage Diff           @@\n##           master   #1110   +/-   ##\n======================================\n  Coverage     100%    100%           \n======================================\n  Files          18      18           \n  Lines         783     783           \n======================================\n  Hits          783     783\n```\n\n\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/audreyr/cookiecutter/pull/1110?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/audreyr/cookiecutter/pull/1110?src=pr&el=footer). Last update [db14e06...877f4f1](https://codecov.io/gh/audreyr/cookiecutter/pull/1110?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
      "Thanks @jairideout! 🍪  "
    ],
    "commit_messages": [
      "Merge pull request #1110 from jairideout/issue-1109\n\nUpdate unit tests for Click 7.0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db5bac254a19ac29e6e7",
    "number": 1108,
    "body": "I'm adding links to two full stack project generators I created with Cookiecutter :smile:\r\n\r\nThey include Docker, Flask, Celery, automatic HTTPS with Traefik, Docker based testing, and a bunch of other features. One is based on PostgreSQL and the other on CouchDB. \r\n\r\nThey are being actively used in the company I work for and the previous one too.",
    "head_branch": "add-full-stack",
    "is_a_fork": true,
    "comments": [
      "I'm seeing errors that I understand are not related to the docs changes. What should I do?",
      "@tiangolo Everything fine, keep it going. I will mark it as reviewed after local test.\r\n",
      "We are no longer maintaining a list of templates inside README file and instead we use github topics feature. Please read https://github.com/cookiecutter/cookiecutter#a-pantry-full-of-cookiecutters and add the needed topics to your repository and people will be able to find your template. The most important one is ``cookiecutter-template``.\r\n\r\nWe are also going to remove most of already listed templates from there, in order not avoid being biased.",
      "Good idea, I'll check it to update the topics. Thanks!"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db5cac254a19ac29e6e8",
    "number": 1107,
    "body": "From running `pep257 .` the only errors left now are\r\n\r\nFor several files, missing docstrings:\r\n\r\n        D100: Missing docstring in public module\r\n        D101: Missing docstring in public class\r\n        D102: Missing docstring in public method\r\n        D103: Missing docstring\r\n        D104: Missing docstring in public package\r\n        D105: Missing docstring in magic method\r\n\r\nOn line 1 for several files, for the encoding string: `# -*- coding: utf-8 -*-`:\r\n\r\n        D205: 1 blank line required between summary line and description (found 0)\r\n        D400: First line should end with a period (not 't')\r\n\r\nFixes https://github.com/audreyr/cookiecutter/issues/742.",
    "head_branch": "decrease_pep257_warnings",
    "is_a_fork": true,
    "comments": [
      "Note: there's a PR for `prompt.py` in #1105."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db5cac254a19ac29e6e9",
    "number": 1106,
    "body": "Updates https://github.com/audreyr/cookiecutter/issues/275.",
    "head_branch": "test__extra_context",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db5dac254a19ac29e6ea",
    "number": 1105,
    "body": "Updated prompt.py to match pep257 guidelines as described in #742.",
    "head_branch": "issue-742-prompt",
    "is_a_fork": true,
    "comments": [
      "The test failures are unrelated to the changes in this PR. See #1109 for a description of the tests failing on master branch, and #1110 for a potential fix.",
      "# [Codecov](https://codecov.io/gh/audreyr/cookiecutter/pull/1105?src=pr&el=h1) Report\n> Merging [#1105](https://codecov.io/gh/audreyr/cookiecutter/pull/1105?src=pr&el=desc) into [master](https://codecov.io/gh/audreyr/cookiecutter/commit/3bc7b987e4ae9dcee996ae0b00375c1325b8d866?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/audreyr/cookiecutter/pull/1105/graphs/tree.svg?width=650&token=8kF8iLUMJE&height=150&src=pr)](https://codecov.io/gh/audreyr/cookiecutter/pull/1105?src=pr&el=tree)\n\n```diff\n@@          Coverage Diff           @@\n##           master   #1105   +/-   ##\n======================================\n  Coverage     100%    100%           \n======================================\n  Files          18      18           \n  Lines         783     783           \n======================================\n  Hits          783     783\n```\n\n\n| [Impacted Files](https://codecov.io/gh/audreyr/cookiecutter/pull/1105?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [cookiecutter/prompt.py](https://codecov.io/gh/audreyr/cookiecutter/pull/1105/diff?src=pr&el=tree#diff-Y29va2llY3V0dGVyL3Byb21wdC5weQ==) | `100% <100%> (ø)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/audreyr/cookiecutter/pull/1105?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/audreyr/cookiecutter/pull/1105?src=pr&el=footer). Last update [3bc7b98...85d5955](https://codecov.io/gh/audreyr/cookiecutter/pull/1105?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
      "I reran the CI builds now that #1109 is fixed and the builds are passing. Is anyone available to review this PR?",
      "Thank you for your contribution, @jairideout! 🍪 "
    ],
    "commit_messages": [
      "Merge pull request #1105 from jairideout/issue-742-prompt\n\nUpdate prompt.py to match pep257 guidelines."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db5eac254a19ac29e6eb",
    "number": 1103,
    "body": "Very similar to pytest cookiecutter to help creating plugins for tox.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Thank you @obestwalter! 🍪"
    ],
    "commit_messages": [
      "Merge pull request #1103 from obestwalter/patch-1\n\nAdd tox plugin cookiecutter"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db5fac254a19ac29e6ec",
    "number": 1100,
    "body": "Added cookiecutter-mocha-template in JS section of readme. This template can be used for setting up mocha as test framework for testing node.js apps and apis.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/audreyr/cookiecutter/pull/1100?src=pr&el=h1) Report\n> Merging [#1100](https://codecov.io/gh/audreyr/cookiecutter/pull/1100?src=pr&el=desc) into [master](https://codecov.io/gh/audreyr/cookiecutter/commit/c88902ef45135ea22e98e16e9d1eee6f11f29df0?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/audreyr/cookiecutter/pull/1100/graphs/tree.svg?width=650&token=8kF8iLUMJE&height=150&src=pr)](https://codecov.io/gh/audreyr/cookiecutter/pull/1100?src=pr&el=tree)\n\n```diff\n@@          Coverage Diff           @@\n##           master   #1100   +/-   ##\n======================================\n  Coverage     100%    100%           \n======================================\n  Files          18      18           \n  Lines         783     783           \n======================================\n  Hits          783     783\n```\n\n\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/audreyr/cookiecutter/pull/1100?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/audreyr/cookiecutter/pull/1100?src=pr&el=footer). Last update [c88902e...6a73cfc](https://codecov.io/gh/audreyr/cookiecutter/pull/1100?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
      "Local tox test with merged #1181:\r\n```text\r\n___________________________________________________________________________________________________________ summary ___________________________________________________________________________________________________________\r\n  py27: commands succeeded\r\n  py35: commands succeeded\r\n  py36: commands succeeded\r\n  py37: commands succeeded\r\nERROR:   pypy: InterpreterNotFound: pypy\r\n  flake8: commands succeeded\r\n```\r\n\r\nMerge required to start #1179",
      "We are no longer maintaining a list of templates inside README file and instead we use github topics feature. Please read https://github.com/cookiecutter/cookiecutter#a-pantry-full-of-cookiecutters and add the needed topics to your repository and people will be able to find your template. The most important one is ``cookiecutter-template``.\r\n\r\nWe are also going to remove most of already listed templates from there, in order not avoid being biased."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db60ac254a19ac29e6ed",
    "number": 1096,
    "body": "This is a re-implementation of #916 since that seems to have died due to lack of test coverage.\r\n\r\n\r\nAdds new command: cookiecutter --list\r\n\r\nThis lists locally available templates, for example:\r\n\r\nuser$ cookiecutter --list\r\n7 installed templates: \r\n * cookiecutter-bottle\r\n * cookiecutter-pyramid-talk-python-starter\r\n * cookiecutter-sublime-text-3-plugin\r\n * cookiecutter-template\r\n * puppet-openstack-cookiecutter\r\n * pyramid-cookiecutter-starter\r\n * python-macon-template",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "The Travis failures do not appear to be related to my change.\r\n\r\n> Unable to download 3.4 archive. The archive may not exist. Please consider a different version.\r\n> Unable to download 3.5 archive. The archive may not exist. Please consider a different version.",
      "Any chance of this being merged soon?",
      "> Any chance of this being merged soon?\r\n\r\nI've not heard anything from the maintainers.",
      "Okay.  By the way, I installed this PR from source and found that when you\nwrite —list, you have to put a string in for TEMPLATE since it’s an\nargument. Maybe this would work if TEMPLATE was a click option? Thanks for\nworking on this!\n\nOn Sun, Jan 27, 2019 at 8:06 PM Chris <notifications@github.com> wrote:\n\n> Any chance of this being merged soon?\n>\n> I've not heard anything from the maintainers.\n>\n> —\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/audreyr/cookiecutter/pull/1096#issuecomment-457949593>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AYu3R7zySZf66rQOrFGHjP1W7PanLB1tks5vHga6gaJpZM4V7nfQ>\n> .\n>\n",
      "@marcosfelt can you please resolve conflicts and assure it passes CI? If green I will merge it, if not updated I will closet the PR.",
      "@chrisbrake @mikeckennedy Thank you for contribution. I updated this to last codebase version and merged to master. \r\nIt will be available in cookiecutter 2.0 or you can use it in current master. \r\nBy the way. Please, never use same variables names like build-in defaults (was `list`).\r\n\r\n@marcosfelt \r\nIt will be available in cookiecutter 2.0 or you can use it in current master. ",
      "Very cool. Thank you."
    ],
    "commit_messages": [
      "Added: --list-installed cli option, listing already downloaded cookiecutter packages (#1096)\n\n* Added list command line option\r\n\r\n* Fixed a bug in a test that caused it to only work on a system with templates available.\r\n\r\n* Adjusted formatting\r\n\r\n* Fixed docstring\r\n\r\n* Linting\r\n\r\n* Fix naming\r\n\r\n* Make template not required, fix tests.\r\n\r\nCo-authored-by: Andrey Shpak <ashpak@ashpak.ru>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db60ac254a19ac29e6ee",
    "number": 1095,
    "body": "",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/audreyr/cookiecutter/pull/1095?src=pr&el=h1) Report\n> Merging [#1095](https://codecov.io/gh/audreyr/cookiecutter/pull/1095?src=pr&el=desc) into [master](https://codecov.io/gh/audreyr/cookiecutter/commit/c88902ef45135ea22e98e16e9d1eee6f11f29df0?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/audreyr/cookiecutter/pull/1095/graphs/tree.svg?src=pr&token=8kF8iLUMJE&width=650&height=150)](https://codecov.io/gh/audreyr/cookiecutter/pull/1095?src=pr&el=tree)\n\n```diff\n@@          Coverage Diff           @@\n##           master   #1095   +/-   ##\n======================================\n  Coverage     100%    100%           \n======================================\n  Files          18      18           \n  Lines         783     783           \n======================================\n  Hits          783     783\n```\n\n\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/audreyr/cookiecutter/pull/1095?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/audreyr/cookiecutter/pull/1095?src=pr&el=footer). Last update [c88902e...75d589a](https://codecov.io/gh/audreyr/cookiecutter/pull/1095?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
      "We are no longer maintaining a list of templates inside README file and instead we use github topics feature. Please read https://github.com/cookiecutter/cookiecutter#a-pantry-full-of-cookiecutters and add the needed topics to your repository and people will be able to find your template. The most important one is ``cookiecutter-template``.\r\n\r\nWe are also going to remove most of already listed templates from there, in order not avoid being biased."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db61ac254a19ac29e6ef",
    "number": 1094,
    "body": "Currently the branch is only switched if we clone the repo. Error checking for both sub-commands of clone + checkout are handled in the one try/except block.\r\n\r\nThis branch breaks that apart, and handles both actions separately, each in their own try/except block.",
    "head_branch": "feaure/cjm/fix-clone-checkout",
    "is_a_fork": true,
    "comments": [
      "I'm closing this PR. It currently seems reasonable to me that a repo should have to be re-cloned before attempting to switch branches."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db62ac254a19ac29e6f0",
    "number": 1093,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/audreyr/cookiecutter/pull/1093?src=pr&el=h1) Report\n> Merging [#1093](https://codecov.io/gh/audreyr/cookiecutter/pull/1093?src=pr&el=desc) into [master](https://codecov.io/gh/audreyr/cookiecutter/commit/c88902ef45135ea22e98e16e9d1eee6f11f29df0?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/audreyr/cookiecutter/pull/1093/graphs/tree.svg?width=650&height=150&src=pr&token=8kF8iLUMJE)](https://codecov.io/gh/audreyr/cookiecutter/pull/1093?src=pr&el=tree)\n\n```diff\n@@          Coverage Diff           @@\n##           master   #1093   +/-   ##\n======================================\n  Coverage     100%    100%           \n======================================\n  Files          18      18           \n  Lines         783     783           \n======================================\n  Hits          783     783\n```\n\n\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/audreyr/cookiecutter/pull/1093?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/audreyr/cookiecutter/pull/1093?src=pr&el=footer). Last update [c88902e...6b7554c](https://codecov.io/gh/audreyr/cookiecutter/pull/1093?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
      "@hackebrot merge possible?",
      "Local tox test with merged #1181:\r\n```text\r\n___________________________________________________________________________________________________________ summary ___________________________________________________________________________________________________________\r\n  py27: commands succeeded\r\n  py35: commands succeeded\r\n  py36: commands succeeded\r\n  py37: commands succeeded\r\nERROR:   pypy: InterpreterNotFound: pypy\r\n  flake8: commands succeeded\r\n```\r\n\r\nMerge required to start #1179"
    ],
    "commit_messages": [
      "Merge pull request #1093 from mashrikt/master\n\nadded cookiecutter-django-dokku to README.rst"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db63ac254a19ac29e6f1",
    "number": 1092,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db63ac254a19ac29e6f2",
    "number": 1091,
    "body": "The idea is being able to use Cookiecutter for completing parts of a projects, or for adding content to an existing project (as optional feature)",
    "head_branch": "inplace-feature",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/audreyr/cookiecutter/pull/1091?src=pr&el=h1) Report\n> Merging [#1091](https://codecov.io/gh/audreyr/cookiecutter/pull/1091?src=pr&el=desc) into [master](https://codecov.io/gh/audreyr/cookiecutter/commit/c88902ef45135ea22e98e16e9d1eee6f11f29df0?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/audreyr/cookiecutter/pull/1091/graphs/tree.svg?token=8kF8iLUMJE&width=650&src=pr&height=150)](https://codecov.io/gh/audreyr/cookiecutter/pull/1091?src=pr&el=tree)\n\n```diff\n@@          Coverage Diff           @@\n##           master   #1091   +/-   ##\n======================================\n  Coverage     100%    100%           \n======================================\n  Files          18      18           \n  Lines         783     787    +4     \n======================================\n+ Hits          783     787    +4\n```\n\n\n| [Impacted Files](https://codecov.io/gh/audreyr/cookiecutter/pull/1091?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [cookiecutter/main.py](https://codecov.io/gh/audreyr/cookiecutter/pull/1091/diff?src=pr&el=tree#diff-Y29va2llY3V0dGVyL21haW4ucHk=) | `100% <ø> (ø)` | :arrow_up: |\n| [cookiecutter/cli.py](https://codecov.io/gh/audreyr/cookiecutter/pull/1091/diff?src=pr&el=tree#diff-Y29va2llY3V0dGVyL2NsaS5weQ==) | `100% <100%> (ø)` | :arrow_up: |\n| [cookiecutter/generate.py](https://codecov.io/gh/audreyr/cookiecutter/pull/1091/diff?src=pr&el=tree#diff-Y29va2llY3V0dGVyL2dlbmVyYXRlLnB5) | `100% <100%> (ø)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/audreyr/cookiecutter/pull/1091?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/audreyr/cookiecutter/pull/1091?src=pr&el=footer). Last update [c88902e...07b0415](https://codecov.io/gh/audreyr/cookiecutter/pull/1091?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db64ac254a19ac29e6f3",
    "number": 1090,
    "body": "",
    "head_branch": "dja_cookiecutter",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/audreyr/cookiecutter/pull/1090?src=pr&el=h1) Report\n> Merging [#1090](https://codecov.io/gh/audreyr/cookiecutter/pull/1090?src=pr&el=desc) into [master](https://codecov.io/gh/audreyr/cookiecutter/commit/c88902ef45135ea22e98e16e9d1eee6f11f29df0?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/audreyr/cookiecutter/pull/1090/graphs/tree.svg?height=150&width=650&token=8kF8iLUMJE&src=pr)](https://codecov.io/gh/audreyr/cookiecutter/pull/1090?src=pr&el=tree)\n\n```diff\n@@          Coverage Diff           @@\n##           master   #1090   +/-   ##\n======================================\n  Coverage     100%    100%           \n======================================\n  Files          18      18           \n  Lines         783     783           \n======================================\n  Hits          783     783\n```\n\n\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/audreyr/cookiecutter/pull/1090?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/audreyr/cookiecutter/pull/1090?src=pr&el=footer). Last update [c88902e...a9b8b85](https://codecov.io/gh/audreyr/cookiecutter/pull/1090?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
      "We are no longer maintaining a list of templates inside README file and instead we use github topics feature. Please read https://github.com/cookiecutter/cookiecutter#a-pantry-full-of-cookiecutters and add the needed topics to your repository and people will be able to find your template. The most important one is ``cookiecutter-template``.\r\n\r\nWe are also going to remove most of already listed templates from there, in order not avoid being biased."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db65ac254a19ac29e6f4",
    "number": 1089,
    "body": "Implements #1088",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "is possible to merge this, I need to set `keep_trailing_newline=True` in jinja",
      "Can somebody from the maintainer team take a look at this? With my recommendation (to remove the new mixin), I think this serves as a bug fix to allow using custom delimiters properly.",
      "Any update on this? ",
      "See #1339 for an alternative implementation.\r\n\r\nPersonally, I like the alternative one more, because it keeps a flat hierarchy and you can group related derived things together, i.e.:\r\n\r\n```\r\n{\r\n\"project_name\": \"Enter name here\",\r\n\"__project_name\":  \"{{ cookiecutter.project_name|replace(' ', '_')|replace('.','_')|replace('-','_')  }}\",\r\n\"author_name\": \"John Doe\",\r\n\"__author_name\": \"{{ cookiecutter.author_name.lower() | regex_replace('^([a-z]).* ([^ ]+)$', '\\\\\\\\1\\\\\\\\2') or 'unknown'}}\r\n}\r\n```",
      "bump",
      "I'm closing this PR due to its age."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db66ac254a19ac29e6f5",
    "number": 1087,
    "body": "I merged the [cookie-cookie](https://github.com/NathanUrwin/cookie-cookie) features into [cookiecutter-git](https://github.com/NathanUrwin/cookiecutter-git), so I discontinued `cookie-cookie` and am looking to delete the repo. I also fixed the `cookiecutter-git` link, and updated some descriptions. Thanks in advance for your time! :slightly_smiling_face: ",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/audreyr/cookiecutter/pull/1087?src=pr&el=h1) Report\n> Merging [#1087](https://codecov.io/gh/audreyr/cookiecutter/pull/1087?src=pr&el=desc) into [master](https://codecov.io/gh/audreyr/cookiecutter/commit/580479391687e8ed96ac8d6ef9b5ff355c1415c1?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/audreyr/cookiecutter/pull/1087/graphs/tree.svg?width=650&height=150&src=pr&token=8kF8iLUMJE)](https://codecov.io/gh/audreyr/cookiecutter/pull/1087?src=pr&el=tree)\n\n```diff\n@@          Coverage Diff           @@\n##           master   #1087   +/-   ##\n======================================\n  Coverage     100%    100%           \n======================================\n  Files          18      18           \n  Lines         783     783           \n======================================\n  Hits          783     783\n```\n\n\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/audreyr/cookiecutter/pull/1087?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/audreyr/cookiecutter/pull/1087?src=pr&el=footer). Last update [5804793...3c0c559](https://codecov.io/gh/audreyr/cookiecutter/pull/1087?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n"
    ],
    "commit_messages": [
      "Remove cookie-cookie from README.rst (#1087)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db67ac254a19ac29e6f6",
    "number": 1085,
    "body": "Travis CI must run Python 3.7 with sudo on xenial as described at https://github.com/travis-ci/travis-ci/issues/9069\r\n\r\nTox: Removed the hardcoding of flake8 version because if the linter improves then we want our testing to benefit from those improvements.\r\n\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/audreyr/cookiecutter/pull/1085?src=pr&el=h1) Report\n> Merging [#1085](https://codecov.io/gh/audreyr/cookiecutter/pull/1085?src=pr&el=desc) into [master](https://codecov.io/gh/audreyr/cookiecutter/commit/580479391687e8ed96ac8d6ef9b5ff355c1415c1?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n[![Impacted file tree graph](https://codecov.io/gh/audreyr/cookiecutter/pull/1085/graphs/tree.svg?width=650&token=8kF8iLUMJE&height=150&src=pr)](https://codecov.io/gh/audreyr/cookiecutter/pull/1085?src=pr&el=tree)\n\n```diff\n@@          Coverage Diff           @@\n##           master   #1085   +/-   ##\n======================================\n  Coverage     100%    100%           \n======================================\n  Files          18      18           \n  Lines         783     783           \n======================================\n  Hits          783     783\n```\n\n\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/audreyr/cookiecutter/pull/1085?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/audreyr/cookiecutter/pull/1085?src=pr&el=footer). Last update [5804793...512774c](https://codecov.io/gh/audreyr/cookiecutter/pull/1085?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
      "@hugovk Your review please...  Did I miss anything?",
      "A few extra places:\r\n\r\n* Add 3.7 to https://github.com/audreyr/cookiecutter#features, or just put 3.4+\r\n* Add py37 to https://github.com/audreyr/cookiecutter/blob/master/tox.ini#L2\r\n* Add 3.7 to https://github.com/audreyr/cookiecutter/blob/master/setup.py#L77",
      "Hi @cclauss! Thank you for this PR 🍪 \r\n\r\nHappy to merge this - @michaeljoseph thoughts?",
      "@hackebrot @michaeljoseph Shall we merge this?",
      "[Travis are now recommending removing the __sudo__ tag](https://blog.travis-ci.com/2018-11-19-required-linux-infrastructure-migration).\r\n\r\n\"_If you currently specify __sudo: false__ in your __.travis.yml__, we recommend removing that configuration_\"",
      "@cclauss thank you for work. Unfortunately this was not merged in time. Currently, everything same will be merged with #1181 with python 3.4 drop.\r\nAs we are working hard to clean issues and PR queue I will close it as duplicate. "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db67ac254a19ac29e6f7",
    "number": 1083,
    "body": "Added https://github.com/DerekCL/cookiecutter-typescript-webpack to readme for typescript support.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "Local tox test with merged #1181:\r\n```text\r\n___________________________________________________________________________________________________________ summary ___________________________________________________________________________________________________________\r\n  py27: commands succeeded\r\n  py35: commands succeeded\r\n  py36: commands succeeded\r\n  py37: commands succeeded\r\nERROR:   pypy: InterpreterNotFound: pypy\r\n  flake8: commands succeeded\r\n```\r\n\r\nMerge required to start #1179",
      "We are no longer maintaining a list of templates inside README file and instead we use github topics feature. Please read https://github.com/cookiecutter/cookiecutter#a-pantry-full-of-cookiecutters and add the needed topics to your repository and people will be able to find your template. The most important one is ``cookiecutter-template``.\r\n\r\nWe are also going to remove most of already listed templates from there, in order not avoid being biased.",
      "Thanks's for the update I have added the topic to my repo"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db6dac254a19ac29e6f8",
    "number": 1081,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "@ConradPacesa Any news here? I'm interested in it.",
      "We are no longer maintaining a list of templates inside README file and instead we use github topics feature. Please read https://github.com/cookiecutter/cookiecutter#a-pantry-full-of-cookiecutters and add the needed topics to your repository and people will be able to find your template. The most important one is ``cookiecutter-template``.\r\n\r\nWe are also going to remove most of already listed templates from there, in order not avoid being biased."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db6eac254a19ac29e6f9",
    "number": 1080,
    "body": "Create new Android specific section.\r\nAdd new cookie cutter template.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "We are no longer maintaining a list of templates inside README file and instead we use github topics feature. Please read https://github.com/cookiecutter/cookiecutter#a-pantry-full-of-cookiecutters and add the needed topics to your repository and people will be able to find your template. The most important one is ``cookiecutter-template``.\r\n\r\nWe are also going to remove most of already listed templates from there, in order not avoid being biased."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db6fac254a19ac29e6fa",
    "number": 1076,
    "body": "This PR is useful for the following scenario:\r\n\r\nI've already setup a project, but I would like to have some cookiecutter for additional modules.\r\n\r\nBasically I can't achieve the above scenario by just having \"overwrite_if_exists\",\r\nbecause the existing files will be reset if it happened to be in the cookiecutter template-files.\r\n\r\nThis PR intends to skip the existing files when doing overwrite_if_exists.\r\n\r\n\r\n",
    "head_branch": "hsiao.skip-if-file-exists",
    "is_a_fork": true,
    "comments": [
      "@chhsiao1981 thank you for contribution. Contribution mention restored in #1345 ",
      "@insspb \r\n\r\nThank you so much for merging this pull-request!\r\n"
    ],
    "commit_messages": [
      "Add skip-if-file-exists (#1076)\n\nCo-authored-by: Sorin Sbarnea <ssbarnea@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db70ac254a19ac29e6fb",
    "number": 1074,
    "body": "I'm having problems getting these [pytest-cookies tests](https://github.com/hackebrot/pytest-cookies/pull/22) to pass, see [CI build log](https://travis-ci.org/hackebrot/pytest-cookies/jobs/374734814#L574).\r\n\r\n```python\r\n# -*- coding: utf-8 -*-\r\n\r\nimport collections\r\n\r\ndef test_bake_project(cookies):\r\n    result = cookies.bake(extra_context=collections.OrderedDict([\r\n        ('repo_name', 'cookies'),\r\n        ('short_description', '{{cookiecutter.repo_name}} is awesome'),\r\n    ]))\r\n\r\n    assert result.exit_code == 0\r\n    assert result.exception is None\r\n    assert result.project.basename == 'cookies'\r\n    assert result.project.isdir()\r\n\r\n    assert result.context == {\r\n        'repo_name': 'cookies',\r\n        'short_description': 'cookies is awesome',\r\n    }\r\n\r\n    assert str(result) == '<Result {}>'.format(result.project)\r\n```\r\n\r\nWe do load ``cookiecutter.json`` into an ``OrderedDict``, but use that to update a regular Python dict in ``generate_context()``. So we can't rely on the order of items in the returned context.\r\n\r\n\r\n",
    "head_branch": "fix-issue-with-generate-context",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/audreyr/cookiecutter/pull/1074?src=pr&el=h1) Report\n> Merging [#1074](https://codecov.io/gh/audreyr/cookiecutter/pull/1074?src=pr&el=desc) into [master](https://codecov.io/gh/audreyr/cookiecutter/commit/0730981cadb6be1e164ba32e60397a9fc5e024e5?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `100%`.\n\n[![Impacted file tree graph](https://codecov.io/gh/audreyr/cookiecutter/pull/1074/graphs/tree.svg?src=pr&token=8kF8iLUMJE&width=650&height=150)](https://codecov.io/gh/audreyr/cookiecutter/pull/1074?src=pr&el=tree)\n\n```diff\n@@          Coverage Diff           @@\n##           master   #1074   +/-   ##\n======================================\n  Coverage     100%    100%           \n======================================\n  Files          18      18           \n  Lines         781     783    +2     \n======================================\n+ Hits          781     783    +2\n```\n\n\n| [Impacted Files](https://codecov.io/gh/audreyr/cookiecutter/pull/1074?src=pr&el=tree) | Coverage Δ | |\n|---|---|---|\n| [cookiecutter/config.py](https://codecov.io/gh/audreyr/cookiecutter/pull/1074/diff?src=pr&el=tree#diff-Y29va2llY3V0dGVyL2NvbmZpZy5weQ==) | `100% <100%> (ø)` | :arrow_up: |\n| [cookiecutter/cli.py](https://codecov.io/gh/audreyr/cookiecutter/pull/1074/diff?src=pr&el=tree#diff-Y29va2llY3V0dGVyL2NsaS5weQ==) | `100% <100%> (ø)` | :arrow_up: |\n| [cookiecutter/generate.py](https://codecov.io/gh/audreyr/cookiecutter/pull/1074/diff?src=pr&el=tree#diff-Y29va2llY3V0dGVyL2dlbmVyYXRlLnB5) | `100% <100%> (ø)` | :arrow_up: |\n| [cookiecutter/prompt.py](https://codecov.io/gh/audreyr/cookiecutter/pull/1074/diff?src=pr&el=tree#diff-Y29va2llY3V0dGVyL3Byb21wdC5weQ==) | `100% <100%> (ø)` | :arrow_up: |\n\n------\n\n[Continue to review full report at Codecov](https://codecov.io/gh/audreyr/cookiecutter/pull/1074?src=pr&el=continue).\n> **Legend** - [Click here to learn more](https://docs.codecov.io/docs/codecov-delta)\n> `Δ = absolute <relative> (impact)`, `ø = not affected`, `? = missing data`\n> Powered by [Codecov](https://codecov.io/gh/audreyr/cookiecutter/pull/1074?src=pr&el=footer). Last update [0730981...d06ce70](https://codecov.io/gh/audreyr/cookiecutter/pull/1074?src=pr&el=lastupdated). Read the [comment docs](https://docs.codecov.io/docs/pull-request-comments).\n",
      "I found the source of the problem: It was in pytest-cookies itself, see https://github.com/hackebrot/pytest-cookies/pull/22/files#diff-9cbfe99b542c5a61bb30e16dd1b7a45bR37\r\n\r\nIt's probably a good idea to merge this anyways...\r\n\r\nWhat do you think?\r\n\r\n",
      "ping @pydanny 👋 ",
      ":+1: \r\n",
      "Thanks :smile: "
    ],
    "commit_messages": [
      "Use OrderedDict in generate_context() (#1074)\n\n* Use OrderedDict in generate_context()\r\n\r\n* Use OrderedDict in prompt_for_config()\r\n\r\n* Use collections.OrderedDict for all context values\r\n\r\n* Update error message in tests/test_cli.py\r\n\r\n* Fix flake8 issue in tests/test_cli.py"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db71ac254a19ac29e6fc",
    "number": 1073,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db71ac254a19ac29e6fd",
    "number": 1072,
    "body": "I forked @audreyr's cookiecutter-pypackage so that it now uses Pipenv and Pipfile instead of pip and requirements.txt. In addition, I updated the docs to recommend using pipsi instead of manually installing Cookiecutter or Pipenv into virtualenvs. Other than a few further changes to the docs, this is substantially similar to the cookiecutter-pypackage.\r\n\r\nI'd love it if you would add the link to my forked template. 😀",
    "head_branch": "cookiecutter-pipenv",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db72ac254a19ac29e6fe",
    "number": 1066,
    "body": "Hi,\r\n\r\nThis is the cookiecutter I use everytime I need to create a python module. I started using pipenv a months ago, and combined with PBR and a proper tooling (doing here around a Makefile), it applies very well to library and application use cases. It is generic, that is does not bootstrap the code, only the tooling and build system.\r\n\r\nPBR and pipenv handles pretty much all key things:\r\n- dependencies declaration\r\n- requirements.txt generation (for library) to support services such as readthedocs that does not support properly Pipfile yet\r\n- library tracks only Pipfile, PBR handle the injection into setup.py properly\r\n- application tracks both Pipfile and Pipfile.lock to maximize reproductibility\r\n- PBR allows semantic commit (\"sem-ver: feature\" in the commit message means a jump of minor versioning, \"sem-ver: api-break\" means a jump of major version)\r\n- of course \"make tag-pbr\" can automatically create the right tag according to the latest semantic commit.\r\n- travis.yml secret automatically retrieved from travis\r\n- travis pushes to pypi on successful tag build\r\n- yapf/isort formatting (enforcing 1 import per line to simplify merges)\r\n- test with pytest of course\r\n- fancy classic stuff: coverage report, editorconfig, dockerfile, ...\r\n\r\nTo see its usages:\r\n- library: https://github.com/gsemet/cfgtree\r\n- application: https://github.com/Guake/guake\r\n\r\nplanned: backport the automatic release note generation using OpenStack's reno project.",
    "head_branch": "dev/gsemet",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db73ac254a19ac29e6ff",
    "number": 1063,
    "body": "Allows to specify a subfolder in the repo in which to search for the template.\r\n\r\n## Usage\r\nAt Bloomberg we find it convenient to keep the templates in one repo (like templates belonging to the same team, or grouped by any other criteria), i.e.:\r\n```sh\r\n.\r\n|-- cookiecutter-pipproject\r\n|   |-- README.md\r\n|   |-- cookiecutter.json\r\n|   |-- tasks.py\r\n|   `-- {{cookiecutter.app_name}}\r\n`-- cookiecutter-python-app\r\n    |-- LICENSE\r\n    |-- README.rst\r\n    |-- cookiecutter.json\r\n    |-- requirements.txt\r\n    |-- tests\r\n    `-- {{cookiecutter.project_slug}}\r\n```\r\nUnfortunately, `cookiecutter` doesn't allow you to have such a configuration easily.\r\n\r\nThis patch makes it possible with `cookiecutter' using the following syntax:\r\n\r\n```sh\r\ncookiecutter --subfolder cookiecutter-python-app <YOU REPO>\r\n```\r\nwhere `<YOU REPO>` is the git repo where the templates are and `cookiecutter-python-app` is the name of the template inside the repo (as in the example above) to be used for generating the code.\r\n\r\nI hope all the guidelines have been followed, but please feel free to point me out to any problem with the PR!\r\n\r\nMany thanks",
    "head_branch": "support_subfolder",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db74ac254a19ac29e700",
    "number": 1057,
    "body": "This PR adds a small improvement to the documentation based on my experience writing a hook for the first time.\r\n\r\nThis adds a new section to `hooks.rst` called \"Writing hooks\" that includes topics related to writing pre/post-generate hooks:\r\n\r\n- exit status (restructured from an original note)\r\n- current working directory of a script when its run\r\n- highlight that Cookiecutter evaluates jinja syntax in the scripts",
    "head_branch": "docs-for-writing-hooks",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Improve user docs for writing hooks (#1057)\n\nThis PR adds documentation based on my experience writing a hook for\r\nthe first time.\r\n\r\nThis adds a new section to hooks.rst called \"Writing hooks\" that\r\nincludes topics related to writing pre/post-generate hooks:\r\n\r\n- exit status (restructured from a note)\r\n- current working directory of a script when its run\r\n- highlight that Cookiecutter evaluates jinja syntax in the scripts"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db75ac254a19ac29e701",
    "number": 1056,
    "body": "https://github.com/chrisvoncsefalvay/cookiecutter-flask-ask for https://github.com/johnwheeler/flask-ask",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1056 from machinekoder/master\n\nAdd cookiecutter-flask-ask to README"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db76ac254a19ac29e702",
    "number": 1052,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1052 from mjhea0/patch-1\n\nadded another flask starter project"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db76ac254a19ac29e703",
    "number": 1051,
    "body": "- add cookiecutter-awesome to section \"Other\"\r\n\r\n- also add link to awesome in description",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1051 from Pawamoy/patch-2\n\nAdd cookiecutter-awesome to section Other"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db77ac254a19ac29e704",
    "number": 1050,
    "body": "- add cookiecutter-cookiecutter in meta section\r\n- reorder bullets and links to be consistent with other sections' formatting",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db78ac254a19ac29e705",
    "number": 1048,
    "body": "",
    "head_branch": "recurse-git-submodules",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db79ac254a19ac29e706",
    "number": 1047,
    "body": "",
    "head_branch": "test-requirements-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db7aac254a19ac29e707",
    "number": 1045,
    "body": "",
    "head_branch": "feature/update-cookiecutter-to-use-different-delimiters",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db7aac254a19ac29e708",
    "number": 1044,
    "body": "trivial fix\n\n<!-- Reviewable:start -->\n---\nThis change is [<img src=\"https://reviewable.io/review_button.svg\" height=\"34\" align=\"absmiddle\" alt=\"Reviewable\"/>](https://reviewable.io/reviews/audreyr/cookiecutter/1044)\n<!-- Reviewable:end -->\n",
    "head_branch": "remove-ds-stores",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db7bac254a19ac29e709",
    "number": 1042,
    "body": "Note:  The name appears to be spelt correctly; it's just the GitHub username that needs to be updated.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixed broken link in `AUTHORS.rst`. (#1042)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db7cac254a19ac29e70a",
    "number": 1040,
    "body": "Add [cookiecutter-docker-science](https://github.com/docker-science/cookiecutter-docker-science), a template for experiments in Docker containers.",
    "head_branch": "add-cookiecutter-docker-science",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1040 from takahi-i/add-cookiecutter-docker-science\n\nAdd cookiecutter-docker-science to README.rst"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db7dac254a19ac29e70b",
    "number": 1039,
    "body": "Add a link and description for https://github.com/n-fisher/cookiecutter-rimworld-mod-development",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db7dac254a19ac29e70c",
    "number": 1038,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1038 from cclauss/patch-1\n\nUpdate flake8==3.5.0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db7eac254a19ac29e70d",
    "number": 1037,
    "body": "Cookiecutter should ignore the pyc files in hooks as it leads to decoding errors:\r\n\r\n```\r\nUnicodeDecodeError: 'utf8' codec can't decode byte 0xf3 in position 1: invalid continuation byte\r\n```\r\n\r\nI'm getting this error on python 2.7",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db7fac254a19ac29e70e",
    "number": 1034,
    "body": "trying to add `output_dir` to `context` object - just like a `_template`",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added: _output_dir to cookiecutter context (#1034)\n\n* adding output_dir to context, related to #1033\r\n\r\n* Restore files permissions\r\n\r\n* Fix tests\r\n\r\n* Renaming\r\n\r\nCo-authored-by: Andrey Shpak <insspb@users.noreply.github.com>\r\nCo-authored-by: Andrey Shpak <ashpak@ashpak.ru>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db80ac254a19ac29e70f",
    "number": 1032,
    "body": "Adds a new link to the LaTeX section of the cookiecutter pantry.\r\n\r\n[https://github.com/seclinch/sigchiproceedings-cookiecutter](https://github.com/seclinch/sigchiproceedings-cookiecutter)",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db81ac254a19ac29e710",
    "number": 1030,
    "body": "Resolves #1029\r\n\r\nThis highlights the issue, and provides a fix and updated test fixture to catch the issue going forward:\r\n\r\nOn base: \r\n\r\n```\r\ntox  -- -v tests/test_generate_copy_without_render.py::test_generate_copy_without_render_extensions\r\n```\r\n\r\nyields:\r\n\r\n```\r\ntests/test_generate_copy_without_render.py::test_generate_copy_without_render_extensions[True] FAILED\r\ntests/test_generate_copy_without_render.py::test_generate_copy_without_render_extensions[False] PASSED\r\n```\r\n\r\nOn nicain/cookiecutter@1029:\r\n\r\n```\r\ntests/test_generate_copy_without_render.py::test_generate_copy_without_render_extensions[True] PASSED\r\ntests/test_generate_copy_without_render.py::test_generate_copy_without_render_extensions[False] PASSED\r\n```\r\n  ",
    "head_branch": "1029",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db81ac254a19ac29e711",
    "number": 1028,
    "body": "Fixes some of the issue related to pep257 standard in cookiecutter/utils.py",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db82ac254a19ac29e712",
    "number": 1026,
    "body": "issue #742\r\n\r\nhey. i edited cookiecutter/utils.py to meet the pydocstyle requirements.\r\nfirst contribution, i hope everything is in order.",
    "head_branch": "pydocstyle_utils.py",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1026 from dornheimer/pydocstyle_utils.py\n\npydocstyle for utils.py"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db83ac254a19ac29e713",
    "number": 1025,
    "body": "Adding more context on how cookiecutter finds the template file\r\n\r\ncloses #942",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1025 from accraze/patch-1\n\nUpdating tutorial1"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db84ac254a19ac29e714",
    "number": 1024,
    "body": "Fixes https://github.com/audreyr/cookiecutter/issues/1017.\r\n\r\nAlso add `python_requires` to setup.py to help pip, and PyPI Python version badges to READMEs.",
    "head_branch": "rm-3.3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1024 from hugovk/rm-3.3\n\nDrop support for EOL Python 3.3"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db85ac254a19ac29e715",
    "number": 1023,
    "body": "",
    "head_branch": "add_test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db85ac254a19ac29e716",
    "number": 1022,
    "body": "Thanks for this project!\r\n\r\nThis PR deals with #851. Pre and post python hooks become modules that implement the `hook` functions.\r\n\r\nAdd a file named `python_gen_project.py` in the `hooks/` directory containing\r\n\r\n```python\r\ndef pre_gen_project(project_dir, context):\r\n    context['some_key'] = 'abc'\r\n\r\ndef post_gen_project(project_dir, context):\r\n    pass\r\n```\r\n\r\n`some_key` will be available while templating files",
    "head_branch": "dynamic-hooks",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db86ac254a19ac29e717",
    "number": 1020,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1020 from JAStark/patch-1\n\nadd cookie cutter template"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db87ac254a19ac29e718",
    "number": 1019,
    "body": "",
    "head_branch": "TOXENV",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1019 from asottile/TOXENV\n\nUse tox's TOXENV environ variable"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db88ac254a19ac29e719",
    "number": 1018,
    "body": "vue-cli, a templating utility for Vue.js projects, led me to Metalsmith, the engine which performs the manipulations.  I believe Metalsmith is similar enough to cookiecutter to be mentioned in the similar projects section.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db89ac254a19ac29e71a",
    "number": 1016,
    "body": "Added the option to install Unix commands on Windows",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1016 from Nythiennzo/patch-2\n\nUpdate installation.rst with Unix on Windows"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db89ac254a19ac29e71b",
    "number": 1015,
    "body": "I added all PR numbers in commits from the beginning.\r\nI did not add those with failed checks.\r\nI added everything at the top of other changes\r\nHope it helps.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db8aac254a19ac29e71c",
    "number": 1013,
    "body": "* Add support to Python 2.7\r\n* Reduce the chance that `module_name` value leads to a syntax error\r\n* Report issue to error output",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db8bac254a19ac29e71d",
    "number": 1011,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1011 from jubrilissa/patch-1\n\nUpdate choice_variables.rst"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db8cac254a19ac29e71e",
    "number": 1009,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add a Code of Conduct to the project (#1009)\n\nAdd the 'Code of Conduct' as a file"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db8dac254a19ac29e71f",
    "number": 1008,
    "body": "For your consideration - an implementation of version 2 context format as specified by [hackebrot's pull request 848](https://github.com/audreyr/cookiecutter/pull/848) and using hackebrot's context.py module from [his new context format branch here](https://github.com/hackebrot/cookiecutter/tree/new-context-format).\r\n\r\nMy detailed dev notes on the implementation are [available here](http://cookiecutter-v2-fork-docs.readthedocs.io/en/latest/index.html) along with [Travis](https://www.travis-ci.org/eruber/cookiecutter) and [AppVeyor](https://ci.appveyor.com/project/eruber/cookiecutter) reports. The [dev notes](http://cookiecutter-v2-fork-docs.readthedocs.io/en/latest/index.html) cover implementation goals, implementation details, and testing.\r\n\r\nThe high-altitude summary is - one new file added, two existing files modified, and created 48 new tests for code coverage. Currently not passing Python 2.7, but 3.3 - 3.6 are green. I might need help with 2.7. Assuming of course, this pull request gains traction.\r\n\r\nAdded a [ReadTheDocs](http://cookiecutter-version-2-template-format.readthedocs.io/en/latest/index.html) project that documents the version 2 Cookiecutter template format that this rull requests supports.\r\n\r\nAlso, I have a [repo](https://github.com/eruber/cookiecutter-template-converter) containing a command line utility that will convert a version 1 template file to a version 2 file.\r\n\r\n\r\n\r\n\r\n",
    "head_branch": "new-2.0-context",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db8dac254a19ac29e720",
    "number": 1007,
    "body": "Cookiecutter for creating applications with Django and VueJS (+ docker, webpack, yarn and more!)",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db8eac254a19ac29e721",
    "number": 1006,
    "body": "This fixes #1005 by no longer stringifying context. This, however also may break json serialization so it adds an option, `no_dump`, to disable json serialization of context (which is used for replays). You should set this if you are passing non-json-serializable context.\r\n\r\nThis would most likely be a breaking change for many if people are assuming that non-strings in context get stringified (some of my existing cookiecutter code did).\r\n\r\nLet me know if there is a better way to handle this.",
    "head_branch": "allow-non-json-serializable-context",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db8fac254a19ac29e722",
    "number": 1003,
    "body": "Add [cookiecutter-python-cli](https://github.com/xuanluong/cookiecutter-python-cli), a template for creating a Python CLI application using [click](https://github.com/pallets/click).\r\n",
    "head_branch": "add-cookiecutter-python-cli",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1003 from xuanluong/add-cookiecutter-python-cli\n\nAdd cookiecutter-python-cli"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db90ac254a19ac29e723",
    "number": 1000,
    "body": "This is for #742\r\nI changed the format of the docstrings for cookiecutter/main.py to follow pep257 style",
    "head_branch": "pep257-main.py",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #1000 from meahow/pep257-main.py\n\npyocstyle for main.py"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db91ac254a19ac29e724",
    "number": 999,
    "body": "This is for #742\r\nI changed the format of the docstrings for cookiecutter/log.py to follow pep257 style",
    "head_branch": "pep257-log.py",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #999 from meahow/pep257-log.py\n\npydocstyle for log.py"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db91ac254a19ac29e725",
    "number": 998,
    "body": "This is for #742\r\nI changed the format of the docstrings for cookiecutter/__init__.py to follow pep257 style",
    "head_branch": "pep257-init.py",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #998 from meahow/pep257-init.py\n\npydocstyle for __init__.py"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db92ac254a19ac29e726",
    "number": 997,
    "body": "This is for #742\r\nI changed the format of the docstrings for cookiecutter/exceptions.py.\r\nFew of the docstrings required minimal rewording to fit pep257 style.\r\nI hope this is fine.",
    "head_branch": "pep257-exceptions.py-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db93ac254a19ac29e727",
    "number": 996,
    "body": "This is for #742\r\nI changed the format of the docstrings for cookiecutter/extentions.py to followe pep257 style",
    "head_branch": "pep257-extensions.py",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #996 from meahow/pep257-extensions.py\n\npydocstyle corections on extentions.py for #742"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db94ac254a19ac29e728",
    "number": 995,
    "body": "This is for #742 \r\nI changed the format of the docstrings for cookiecutter/exceptions.py.\r\nFew of the docstrings required minimal rewording to fit pep257 style.\r\nI hope this is fine.",
    "head_branch": "pep257-exceptions.py",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db95ac254a19ac29e729",
    "number": 994,
    "body": " I created a template for RAML documents creation. Hope it's helpful.\r\n\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #994 from genzj/master\n\nAdd link to cookiecutter-raml template"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db95ac254a19ac29e72a",
    "number": 993,
    "body": "",
    "head_branch": "allow_jinja_kwargs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db96ac254a19ac29e72b",
    "number": 992,
    "body": "In some cases we want to generate the cookiecutters without running the\r\nhooks. This patch adds a CLI switch which allows that behavior.\r\n\r\nThe documentation and the unit tests were updated to reflect this\r\nchange.\r\n\r\nDrive-by:\r\n* Update .gitgnore file",
    "head_branch": "ignore-hooks-switch",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added: CLI option to ignore hooks (#992)\n\n* Add CLI option to ignore hooks\r\n\r\nIn some cases we want to generate the cookiecutters without running the\r\nhooks, or ask the user to confirm whether to run them. This patch adds\r\na CLI switch which allows that behavior.\r\n\r\nThe documentation and the unit tests were updated to reflect this\r\nchange.\r\n\r\nDrive-by:\r\n* Update .gitgnore file\r\n* Update tox.ini to add fail fast option to pytest\r\n\r\n* Fix tests\r\n\r\n* Fix linting.\r\n\r\nCo-authored-by: Rémy Greinhofer <rgreinhofer@rexchange.com>\r\nCo-authored-by: Andrey Shpak <ashpak@ashpak.ru>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db97ac254a19ac29e72c",
    "number": 991,
    "body": "",
    "head_branch": "molteanu-patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #991 from molteanu/molteanu-patch-1\n\nAdd cookiecutter-devenv"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db98ac254a19ac29e72d",
    "number": 990,
    "body": "Adds new link into `Python-Django` section.\r\n\r\nhttps://github.com/wemake-services/wemake-django-template",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #990 from sobolevn/patch-1\n\nAdds wemake-django-template"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db99ac254a19ac29e72e",
    "number": 989,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db99ac254a19ac29e72f",
    "number": 988,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #988 from franckbret/patch-1\n\nAdd https://github.com/AnyBlok/cookiecutter-anyblok-project"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db9aac254a19ac29e730",
    "number": 986,
    "body": "Hi there,\r\nI’ve added my project template to the list. It may be yet another Python project template, but PyPT has a few fun things, like sophisticated release automation, AUR packaging magic, and some more.\r\nThanks for an awesome piece of software!",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add Kwpolska/python-project-template to list of Cookiecutters (#986)\n\nSigned-off-by: Chris Warrick <kwpolska@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db9bac254a19ac29e731",
    "number": 984,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #984 from Ars2014/patch-1\n\nAdded cookiecutter-telegram-bot to README.rst"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db9cac254a19ac29e732",
    "number": 982,
    "body": "This allows your templates to use relative or absolute symlinks and have the symlink reproduced in the generated project. This change copies the link-target directly, so if you have a relative link it will wind up relative to the final location, while absolute references will continue to be absolute.\r\n\r\nIt is *possible* that people are doing strange things in their templates where the rely on symlinks being copied as files, but at least in our case it was surprising to discover that our symlinks were not being reproduced in the final project. It was also surprising to find the cookiecutter crashing when the symlinks were to locations not on the development machine.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db9dac254a19ac29e733",
    "number": 980,
    "body": "Added **hooks** folder to PYTHONPATH so that the hooks can reference the current folder",
    "head_branch": "#824",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db9dac254a19ac29e734",
    "number": 977,
    "body": "This is a template to bootstrap production-ready Flask projects, but with no additional dependencies other than Flask itself. This is tested in a clean environment and works fine.",
    "head_branch": "add_cookiecutter-flask-minimal",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #977 from candidtim/add_cookiecutter-flask-minimal\n\nAdd cookiecutter-flask-minimal to README.rst"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db9eac254a19ac29e735",
    "number": 976,
    "body": "Fixes #975 ",
    "head_branch": "issue_975",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621db9fac254a19ac29e736",
    "number": 974,
    "body": "I've added support for multiple hook types in the same project (both _sh_ and _py_)\r\n#973",
    "head_branch": "multiple_hooks",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Changed: Generated projects can use multiple type hooks at same time. (sh + py) (#974)\n\n* Added support for multiple hooks in a single project\r\n\r\n* Added tests for Pull #974\r\n\r\n* Fix linting\r\n\r\nCo-authored-by: Nimrod Moli <nimrodm@traxretail.com>\r\nCo-authored-by: Andrey Shpak <ashpak@ashpak.ru>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dba0ac254a19ac29e737",
    "number": 971,
    "body": "Adds support for the XDG spec as per #104 and (sort of) #510. \r\n\r\nUsers can specify a location for the config file and through the config file specify locations for cookiecutter related data, which I assume is new since the above mentioned issues were broached; however, it is somewhat roundabout and it would be preferable to explicitly support the \"official\" locations given by each platform for where an application is supposed to store its stuff.  Therefore, this patch implements the following behavior:\r\n\r\nThe user configuration file is searched for in the directories given by:\r\n\r\n1.  `$COOKIECUTTER_CONFIG`: if set, always takes priority\r\n2.  `~/.cookiecutterrc`: dotfiles in homedir take priority\r\n2.  `$XDG_CONFIG_HOME/cookiecutter/config`: mostly Linux, I imagine, although I've heard of some OS X devs setting this envvar to aid Linux-native apps.\r\n3.  `%APPDATA%\\cookiecuttter\\config`: Windows\r\n4.  `~/.config/cookiecutter/config`:  this is for lazy-Linux; fairly often the env vars specified by XDG are not actually set, applications running on Linux just behave as though they were.\r\n5.  `~/Library/Application\\ Support/cookiecutter/config`: OS X specific; probably won't see much use\r\n\r\nSimilarly, the locations of `cookiecutters_dir` and `cookiecutter_replay` can now be overridden via the environment (`$COOKIECUTTERS_DIR` and `$COOKIECUTTER_REPLAY` respectively) and are searched for in the following list:\r\n\r\n1.  The directory given by the appropriate environment var\r\n2.  `$XDG_DATA_HOME/cookiecutter/<dir>`\r\n3.  `%APPDATA%\\<dir>`\r\n4.  `~/.local/share/cookiecutter/<dir>` - see above note about lazy-Linux\r\n5.  `~/Library/Application\\ Support/cookiecutter/<dir>`\r\n6.  The existing default locations of `~/.cookiecutters_dir/` and `.cookiecutter_replay`\r\n\r\nIn both cases the first location that exists is used.\r\n\r\n**NOTE:** In order to preserve backwards compatibility and a seamless user experience, if the pre-existing default location for a file or dir is already populated, cookiecutter returns that path immediately instead of searching past item no. 1 on the above lists (i.e., this change _should_ only affect new installs and users who explicitly decide to move their config and/or data).\r\n\r\nThe existing test suite has been fixed to work with these changes.  Some work remains but I've decided to open this now for feedback, in case anyone has any. What remains is to:\r\n\r\n1. ~Write tests that exercise the configuration / data directory finding functions _per platform_ - probably  by mocking out `sys.platform`~ done\r\n2. Update the documentation appropriately.\r\n\r\nI could also whip up a quick CLI command to dump where cookiecutter thinks its config and data dirs are located if you think it would be helpful. ",
    "head_branch": "xdg-support",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dba1ac254a19ac29e738",
    "number": 969,
    "body": "HI all,\r\n\r\nI've added cookiecutter-conda-python to the README under the Python section. It's a template that helps users create Python applications that can be built into Conda packages. \r\n\r\nI've tested the template with pytest-cookies and all looks well. Please let me know if you have any questions.\r\n\r\nThanks,\r\nMandeep",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #969 from mandeep/master\n\nAdded cookiecutter-conda-python template in Python section"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dba1ac254a19ac29e739",
    "number": 968,
    "body": "  * `contructed    -> constructed`\r\n  * `supressing    -> suppressing`\r\n  * `overriden     -> overridden`\r\n  * `documention   -> documentation`\r\n  * `tempate_name  -> template_name`\r\n  * `conerted      -> converted`\r\n  * `processer     -> processor`\r\n  * `compatability -> compatibility`\r\n  * `Booststrap    -> Bootstrap`\r\n  * `concatination -> concatenation`\r\n  * `scientifc     -> scientific`\r\n",
    "head_branch": "fix_typos",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #968 from delirious-lettuce/fix_typos\n\nFix typos"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dba2ac254a19ac29e73a",
    "number": 967,
    "body": "Resolve #966 ",
    "head_branch": "fix-missing-builtin-abbreviations",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #967 from hackebrot/fix-missing-builtin-abbreviations\n\nFix missing builtin abbreviations"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dba3ac254a19ac29e73b",
    "number": 964,
    "body": "If a generated output directory already exists, we don't delete it on project generation failure.\r\n\r\nSupersedes #684.\r\nFixes #629. ",
    "head_branch": "629-preserve-existing-directory-on-failure",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "DRY test directory removal"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dba4ac254a19ac29e73c",
    "number": 963,
    "body": "Nothing much to add here 😁 \r\n\r\nI think we should support a GitLab abbreviation.\r\n\r\nPlease let me know your thoughts! Ty 🍪 ",
    "head_branch": "add-gitlab-shorthand",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #963 from hackebrot/add-gitlab-shorthand\n\nAdd gitlab shorthand"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dba5ac254a19ac29e73d",
    "number": 961,
    "body": "There are two reasons to add this feature:\r\n\r\nFirstly, zip files are a convenient way to distribute a large number of files in a fixed structure. This means a cookiecutter can literally be a single file, rather than a directory, making it easier to distribute.\r\n\r\nSecondly, this can be used to address #845 without cookiecutter itself needing to incorporate commercialisation features. The potential commercialisation path is as follows:\r\n* Developer uploads a Zip file to a private S3 bucket.\r\n* Developer deploys a website to sell their template.\r\n* User buys a license from the website\r\n* Developer website provides the user a public url, protected by username/password or access credentials of some kind\r\n* Any attempt to access the public URL is validated against the sales database. This can limit template uses to a particular count, or only allow access for a period of time, or any other scheme that the developer chooses.\r\n\r\nOf course, this won't stop a malicious user from copying the template from the cache or anything like that - but from a \"make it easy to do the right thing\" perspective, this would be sufficient to monetise a template.",
    "head_branch": "zipfile",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #961 from freakboy3742/zipfile\n\nAdd option to use templates from Zip files or Zip URLs"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dba6ac254a19ac29e73e",
    "number": 958,
    "body": "⚠️ DO NOT MERGE ⚠️ \r\n\r\nJust testing if our tests actually run on both x86 and x64.",
    "head_branch": "update-appveyor-config",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dba6ac254a19ac29e73f",
    "number": 957,
    "body": "[This is a project ](https://github.com/mckaymatt/cookiecutter-pypackage-rust-cross-platform-publish)I've been working on for a few weeks now. It allows you to publish wheels to Pypi with Rust binary modules. \r\n\r\nAn example of the output can be seen at https://github.com/mckaymatt/rust_pypi_example/releases or with `pip install rust_pypi_example`",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #957 from mckaymatt/patch-1\n\nAdd cookiecutter-pypackage-rust-cross-platform-publish"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dba7ac254a19ac29e740",
    "number": 956,
    "body": "I've added a template for creating Sublime Text packages containing snippets to the README. I've created a `Sublime Text` section for it and moved the one other sublime text related template into this new section as well.\r\n\r\nThanks!",
    "head_branch": "adding_subl_snippet_template",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #956 from fhightower/adding_subl_snippet_template\n\nAdding sublime-snippet-package-template"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dba8ac254a19ac29e741",
    "number": 954,
    "body": "Molecule[1] is the defacto test suite for Ansible.  This PR simply\r\npoints users to the Molecule managed cookiecutter templates.\r\n\r\n[1] http://molecule.readthedocs.io/en/v2/",
    "head_branch": "molecule",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #954 from retr0h/molecule\n\nAdded Molecule templates"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dba9ac254a19ac29e742",
    "number": 952,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbaaac254a19ac29e743",
    "number": 951,
    "body": "I created my own version of [cookiecutter-template](https://github.com/eviweb/cookiecutter-template) based on my [cookiecutter-git](https://github.com/tuxredux/cookiecutter-git) project for automatic remote repository creation! I also transferred **cookiecutter-git** from the `webevllc` namespace to `tuxredux`, so I went ahead and fixed the broken link in `README.rst`. Thanks in advance for your time!",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #951 from tuxredux/master\n\nAdd cookie-cookie to README.rst"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbaaac254a19ac29e744",
    "number": 950,
    "body": "Yay! 💵 🍪 ",
    "head_branch": "update-sponsoring-section-add-backers",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update sponsoring section add backers (#950)\n\n* Add BACKERS.rst\r\n\r\n* Update 'Support This Project' section and add 'Backers' in README.rst"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbabac254a19ac29e745",
    "number": 949,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #949 from mathagician/master\n\nFix doc string for pep257 in is_copy_only_path"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbacac254a19ac29e746",
    "number": 946,
    "body": "See the rationale behind this PR: https://github.com/audreyr/cookiecutter/issues/637#issuecomment-262207477\r\n\r\nThis PR fixes #704. ",
    "head_branch": "jinja2-environment",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbadac254a19ac29e747",
    "number": 945,
    "body": "Tox is great. Although, a lot of people are used to the simpler `pip install -r test_requirements.txt` and `pytest` workflow, including me.\r\n\r\nAdding this `test_requirements.txt` file doesn't cost much and makes things easier for new developers and for rapid testing.\r\n\r\nThis PR is related to #377.",
    "head_branch": "test_requirements",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #945 from numberly/test_requirements\n\nAdd test_requirements.txt (fix #377)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbadac254a19ac29e748",
    "number": 944,
    "body": "This commit permits users to define custom Jinja extensions to be used in the `cookiecutter.json` file.\r\n\r\nFor example, with something like this in `template/helpers.py`: \r\n```python\r\nfrom jinja2.ext import Extension\r\n\r\n\r\ndef get_app_slug(app_name):\r\n    return app_name.lower()\r\n\r\n\r\nclass HelpersExtension(Extension):\r\n\r\n    def __init__(self, environment):\r\n        super(Extension, self).__init__()\r\n        environment.filters[\"get_app_slug\"] = get_app_slug\r\n\r\n__all__ = [\"HelpersExtension\"]\r\n```\r\n\r\nIt allows to use that Jinja filter directly:\r\n```json\r\n{\r\n    \"app_name\": \"ExampleProject\",\r\n    \"app_slug\": \"{{cookiecutter.app_name|get_app_slug}}\",\r\n    \"_extensions\": [\"helpers.HelpersExtension\"]\r\n}\r\n``` \r\n\r\nThis is really just a dumb example, but I'm pretty confident that it could be a powerful feature.\r\n\r\nI'm kinda new to Cookiecutter, so please point me to the right direction if there's already another way to achieve something like this that I'm not aware of.",
    "head_branch": "python-path",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbaeac254a19ac29e749",
    "number": 941,
    "body": "There's a few beefs I have with using `python-future`, notably:\r\n\r\n- It installs the \"new\" module names in python2 (has some negative\r\n  compatibility with libraries that poorly detect python2 / python3).\r\n- Introduces `newbytes` and `newstr` whick leak out of modules into code which\r\n  doesn't understand how to handle their types (often leads to errors in\r\n  python 2 where `str(x)` causes `\"b'...'\"`).\r\n- These are summarized in more detail\r\n  [here][1]\r\n\r\nSome other useful links from changes made in this PR:\r\n\r\n- I dropped `iteritems(...)`, it's not going to make a performance difference\r\n  here.  If you want an additional read on this, openstack has a nice\r\n  [writeup][2] on this.\r\n\r\n[1]: https://github.com/Yelp/yelp_clog/pull/18#issue-143837308\r\n[2]: http://lists.openstack.org/pipermail/openstack-dev/2015-June/066391.html",
    "head_branch": "factor_out_python_future",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use a more lightweight python porting library.\n\nThere's a few beefs I have with using `python-future`, notably:\n\n- It installs the \"new\" module names in python2 (has some negative\n  compatibility with libraries that poorly detect python2 / python3).\n- Introduces `newbytes` and `newstr` whick leak out of modules into code which\n  doesn't understand how to handle their types (often leads to errors in\n  python 2 where `str(x)` causes `\"b'...'\"`).\n- These are summarized in more detail\n  [here][1]\n\nSome other useful links from changes made in this PR:\n\n- I dropped `iteritems(...)`, it's not going to make a performance difference\n  here.  If you want an additional read on this, openstack has a nice\n  [writeup][2] on this.\n\n[1]: https://github.com/Yelp/yelp_clog/pull/18#issue-143837308\n[2]: http://lists.openstack.org/pipermail/openstack-dev/2015-June/066391.html"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbafac254a19ac29e74a",
    "number": 940,
    "body": "This pull request is for an update of a broken link to Py.test documentation referenced in Issue #939\r\nCheers",
    "head_branch": "939_fix_broken_link",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #940 from devstrat/939_fix_broken_link\n\nFix the py.test documentation broken link, resolve #939"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbb0ac254a19ac29e74b",
    "number": 938,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #938 from eyalev/patch-1\n\nRemove unnecessary word in copy_without_render.rst"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbb1ac254a19ac29e74c",
    "number": 935,
    "body": "",
    "head_branch": "tbates-pep257-742-generate",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbb1ac254a19ac29e74d",
    "number": 934,
    "body": "~~This is in place of PR #868, which also include fixes for Windows that seem too messy to be worth pulling in to maintain.~~\r\n\r\n~~Caveat: Symlinks will _not_ work as expected on Windows with Python versions < 3.2 (but, they don't now anyway...)~~\r\n\r\nUpdated PR to support symlinks in templates across platforms now that we don't support older versions of Python.",
    "head_branch": "posix-symlink",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbb2ac254a19ac29e74e",
    "number": 933,
    "body": "Hi! Thanks Audrey for thus ",
    "head_branch": "fix/typo-in-readme",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Changed link title for cookiecutter-django-paas (#933)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbb3ac254a19ac29e74f",
    "number": 932,
    "body": "",
    "head_branch": "tbates-pep257-742-exceptions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbb4ac254a19ac29e750",
    "number": 931,
    "body": "",
    "head_branch": "tbates-pep257-742-config",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #931 from terryjbates/tbates-pep257-742-config\n\nImplement pep257 on config.py"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbb5ac254a19ac29e751",
    "number": 930,
    "body": "I have been using this ``Makefile`` format in other projects for a while and really like it. If there are no objections, I'd like to use it for cookiecutter too.\r\n\r\nPlease note that I have also updated several rules. For instance **release** does not run ``python setup.py upload`` any longer. It is recommended to use twine over this.\r\n\r\nPlease let me know your thoughts!\r\n\r\n```\r\n$ make\r\nclean-build      Remove build artifacts\r\nclean-pyc        Remove Python file artifacts\r\nclean-tox        Remove tox testing artifacts\r\nclean            Remove all file artifacts\r\ncontributing     Generate CONTRIBUTING.rst\r\ncoverage         Check code coverage quickly with the default Python\r\ndocs             Generate Sphinx HTML documentation, including API docs\r\nlint             Check code style with flake8\r\nrelease          Package and upload release\r\nsdist            Build sdist distribution\r\nservedocs        Rebuild docs automatically\r\nsubmodules       Pull and update git submodules recursively\r\ntest-all         Run tests on every Python version with tox\r\ntest             Run tests quickly with the default Python\r\nwheel            Build bdist_wheel distribution\r\n``` ",
    "head_branch": "self-documenting-makefile",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #930 from hackebrot/self-documenting-makefile\n\nRe-implement Makefile and update several make rules"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbb5ac254a19ac29e752",
    "number": 929,
    "body": "This change addresses issues with dereferencing symlinks. See https://github.com/audreyr/cookiecutter/issues/865#issuecomment-293891002 for details.",
    "head_branch": "feature/copytree-symlinks",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbb6ac254a19ac29e753",
    "number": 927,
    "body": "Adds a link to painless-continuous-delivery cookiecutter template in new section",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #927 from bittner/patch-1\n\nAdd section \"Continuous Delivery\""
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbb7ac254a19ac29e754",
    "number": 926,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #926 from bdcaf/patch-1\n\nadd cookiecutter_dotfile"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbb8ac254a19ac29e755",
    "number": 925,
    "body": "one more template for data analysis",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "add cookiecutter-r-data-analysis (#925)\n\n* add cookiecutter-r-data-analysis\r\n\r\n* cookiecutter_dotfile"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbb9ac254a19ac29e756",
    "number": 923,
    "body": "A common requirement - at least in our projects - is to generate new variables on the fly based on user input.\r\nNow you can use `get_render_context` to generate the context and manipulate it before passing it to cookiecutter.\r\nExample:\r\n```\r\nfrom cookiecutter.main import cookiecutter, get_render_context\r\nfrom cookiecutter.config import get_user_config\r\n\r\nconfig_dict = get_user_config()\r\ncontext_file = os.path.join(template_path, 'cookiecutter.json')\r\n# this triggers questions prompt\r\nrender_context = get_render_context(context_file, config_dict)\r\nrender_context['cookiecutter']['whatever_you_want_to_render'] = 'oh yeah!'\r\ncookiecutter(template_path, render_context=render_context)\r\n```\r\nTODO: update tests and docs.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbb9ac254a19ac29e757",
    "number": 922,
    "body": "",
    "head_branch": "tbates-pep257-742-cli",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #922 from terryjbates/tbates-pep257-742-cli\n\nImplement pep257 on cli.py"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbbaac254a19ac29e758",
    "number": 921,
    "body": "This is a follow-up of PR #883 ! I renamed the repository, so I thought it would be best to create a new pull request (also as a way to reduce commit history bloat). I added bitbucket.org support like I said I would, and I also created a few official releases. I also named and added the **Git** category, as per @michaeljoseph 's suggestion. Thank you in advance for your time! :smile: ",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #921 from tuxredux/master\n\nAdd cookiecutter-git to README"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbbbac254a19ac29e759",
    "number": 917,
    "body": " If the YAML config file does not end with a single blank line a `cookiecutter.exceptions.InvalidConfiguration` exception is thrown with an indecipherable error. This pull request fixes that error by adding a trivial newline to the config YAML file if it is missing.",
    "head_branch": "mikeckennedy/forgiving_yaml_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbbcac254a19ac29e75a",
    "number": 916,
    "body": "Adds new command: `cookiecutter installed`\r\n\r\nThis lists locally available templates, for example:\r\n\r\n```\r\nuser$ cookiecutter installed\r\n7 installed templates: \r\n * cookiecutter-bottle\r\n * cookiecutter-pyramid-talk-python-starter\r\n * cookiecutter-sublime-text-3-plugin\r\n * cookiecutter-template\r\n * puppet-openstack-cookiecutter\r\n * pyramid-cookiecutter-starter\r\n * python-macon-template\r\n```\r\n\r\nI was not able to integrate it into click without breaking the existing functionality. Someone who knows click better than me please adjust this if possible.\r\n\r\nI’d like to see just `cookiecutter —installed` as the command (so it would be listed in help output) but I only get a missing template error and all attempts to add the command as an option met with my lack of experience with click. \r\n",
    "head_branch": "mikeckennedy/installed_feature",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbbdac254a19ac29e75b",
    "number": 915,
    "body": "This PR adds my [cookiecutter-pyramid-talk-python-starter](https://github.com/mikeckennedy/cookiecutter-pyramid-talk-python-starter) to the Python Pyramid cookiecutter templates.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #915 from mikeckennedy/master\n\nAdds cookiecutter-pyramid-talk-python-starter"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbbdac254a19ac29e75c",
    "number": 914,
    "body": "Fixes: #846\r\n\r\nThis is missing a test, I'm not sure how this could be tested, someone could give a hint?",
    "head_branch": "git-pull",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbbeac254a19ac29e75d",
    "number": 912,
    "body": "I ran into a broken link and this should fix it. ",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #912 from coreysnyder04/patch-1\n\nFixes broken link to \"Copy without render\""
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbbfac254a19ac29e75e",
    "number": 911,
    "body": "This PR replaces PR #910.",
    "head_branch": "patch-6",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #911 from stevepiercy/patch-6\n\nadd mako to pyramid-cookiecutter-starter"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbc0ac254a19ac29e75f",
    "number": 910,
    "body": "We've added an option to pyramid-cookiecutter-starter for the user to select Chameleon for templating language in addition to Jinja2",
    "head_branch": "patch-5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbc1ac254a19ac29e760",
    "number": 908,
    "body": "I patched cookiecutter main function to return both result of `generate_files` function and generated context. Indeed the generated context is really useful for my application which using cookiecutter as Python module.\r\n\r\nAn example of usage: https://github.com/rmedaer/milhoja/blob/b1207e79/milhoja/milhoja.py#L178",
    "head_branch": "pr/return_context",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbc1ac254a19ac29e761",
    "number": 907,
    "body": "The following commit implements a new feature: stripping the template directory.\r\nWhen you create your project based on cookiecutter template, it's using the first \"jinja formatted\" directory as template directory and render it.\r\nEven if you specify an output directory it will always create a sub-rendered-directory.\r\n\r\nThe strip option skip this first template directory and render the boilerplate in output directory.\r\n\r\nBasically this allows to specify the output rendered directory:\r\n```\r\ncookiecutter --strip -o my-output-directory my-cookiecutter-template\r\n```\r\nor to render in working directory:\r\n```\r\ncookiecutter --strip -f -o . my-cookiecutter-template\r\n```\r\n\r\nThe \"strip\" name is inspired from `tar` tool where `--strip-components` option _strip NUMBER leading components from file_.",
    "head_branch": "pr/strip_dir",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbc2ac254a19ac29e762",
    "number": 906,
    "body": "This adds an option to `main.cookiecutter` and the CLI to specify a json file to read the replay data from.\r\n\r\nThe motivation for this is to provide a way to run the same replay over different machines, i.e. store the replay in a git repo.",
    "head_branch": "replay_file",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added: --replay-file cli option, for replay file distributing (#906)\n\n* Add the option to specify a replay file.\r\n\r\n* Document the --replay-file option & add entry in HISTORY.rst\r\n\r\n* Write tests for the --replay-file option\r\n\r\n* Don't double add '.json' file extension if provided in --replay-file\r\n\r\n* Fix flake8 error\r\n\r\n* Update docs\r\n\r\n* Fix tests\r\n\r\n* Linting\r\n\r\nCo-authored-by: Stuart Mumford <stuart@cadair.com>\r\nCo-authored-by: Bruno Alla <alla.brunoo@gmail.com>\r\nCo-authored-by: Andrey Shpak <ashpak@ashpak.ru>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbc3ac254a19ac29e763",
    "number": 905,
    "body": "Subprocess returns a bytestring, so comparisons with strings in python\r\n3.x throw unexpected errors. This patch decodes bytestrings to strings\r\nand updates tests to return realistic output.\r\n\r\nHere's some sample output when the target repo isn't found:\r\n\r\n```\r\n(cookiecutter)jmcarp@Joshuas-MBP-3|~/code/cookiecutter on master!\r\n± cookiecutter https://github.com/not/exists\r\nTraceback (most recent call last):\r\n  File \"/Users/jmcarp/miniconda/envs/cookiecutter/lib/python3.6/site-packages/cookiecutter/vcs.py\", line 123, in clone\r\n    stderr=subprocess.STDOUT,\r\n  File \"/Users/jmcarp/miniconda/envs/cookiecutter/lib/python3.6/subprocess.py\", line 336, in check_output\r\n    **kwargs).stdout\r\n  File \"/Users/jmcarp/miniconda/envs/cookiecutter/lib/python3.6/subprocess.py\", line 418, in run\r\n    output=stdout, stderr=stderr)\r\nsubprocess.CalledProcessError: Command '['git', 'clone', 'https://github.com/not/exists']' returned non-zero exit status 128.\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Users/jmcarp/miniconda/envs/cookiecutter/bin/cookiecutter\", line 11, in <module>\r\n    load_entry_point('cookiecutter==1.5.1', 'console_scripts', 'cookiecutter')()\r\n  File \"/Users/jmcarp/miniconda/envs/cookiecutter/lib/python3.6/site-packages/click/core.py\", line 722, in __call__\r\n    return self.main(*args, **kwargs)\r\n  File \"/Users/jmcarp/miniconda/envs/cookiecutter/lib/python3.6/site-packages/click/core.py\", line 697, in main\r\n    rv = self.invoke(ctx)\r\n  File \"/Users/jmcarp/miniconda/envs/cookiecutter/lib/python3.6/site-packages/click/core.py\", line 895, in invoke\r\n    return ctx.invoke(self.callback, **ctx.params)\r\n  File \"/Users/jmcarp/miniconda/envs/cookiecutter/lib/python3.6/site-packages/click/core.py\", line 535, in invoke\r\n    return callback(*args, **kwargs)\r\n  File \"/Users/jmcarp/miniconda/envs/cookiecutter/lib/python3.6/site-packages/cookiecutter/cli.py\", line 123, in main\r\n    default_config=default_config,\r\n  File \"/Users/jmcarp/miniconda/envs/cookiecutter/lib/python3.6/site-packages/cookiecutter/main.py\", line 63, in cookiecutter\r\n    no_input=no_input,\r\n  File \"/Users/jmcarp/miniconda/envs/cookiecutter/lib/python3.6/site-packages/cookiecutter/repository.py\", line 84, in determine_repo_dir\r\n    no_input=no_input,\r\n  File \"/Users/jmcarp/miniconda/envs/cookiecutter/lib/python3.6/site-packages/cookiecutter/vcs.py\", line 132, in clone\r\n    if 'not found' in clone_error.output.lower():\r\nTypeError: a bytes-like object is required, not 'str'\r\n```",
    "head_branch": "handle-subproc-output",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #905 from jmcarp/handle-subproc-output\n\nHandle subprocess output."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbc4ac254a19ac29e764",
    "number": 903,
    "body": "I added a dedicated Ansible section and a cookiecutter-ansible-role template. It's a fork of the existing one with additional features (mainly a test infrastructure and various lint checks) that were rejected by upstream.",
    "head_branch": "add-ansible-test-kitchen-cookiecutter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #903 from ferrarimarco/add-ansible-test-kitchen-cookiecutter\n\nAdd Ansible section + ferrarimarco/cookiecutter-ansible-role"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbc5ac254a19ac29e765",
    "number": 901,
    "body": "Added README entries for cookiecutters for C++ code kata practice",
    "head_branch": "add-cpp-cookiecutters",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #901 from 13coders/add-cpp-cookiecutters\n\nAdded two C++ cookiecutters to the pantry listing"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbc5ac254a19ac29e766",
    "number": 896,
    "body": "Useful for e.g. getting a handle on the template being used in a pre_gen_project hook.\r\n\r\nFixes #706",
    "head_branch": "feature/add-repo-dir-to-context",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbc6ac254a19ac29e767",
    "number": 895,
    "body": "``cookiecutter-lux-python`` cookiecutter was added.",
    "head_branch": "axk-cookiecutter-lux-python",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #895 from alexkey/axk-cookiecutter-lux-python\n\nGroup minimal Python projects on top and add the new one"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbc7ac254a19ac29e768",
    "number": 894,
    "body": "The following commit implements a new feature: stripping the template directory.\r\nWhen you create your project based on cookiecutter template, it's using the first jinja directory as template directory and render it.\r\nEven if you specify an output directory it will always create a sub-rendered-directory.\r\n\r\nThe strip option skip this first template directory and render the boilerplate in output directory.\r\n\r\nBasically this allows to specify the output rendered directory:\r\n```\r\ncookiecutter --strip -o my-output-directory my-cookiecutter-template\r\n```\r\nor to render in working directory:\r\n```\r\ncookiecutter --strip -f -o . my-cookiecutter-template\r\n``` ",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbc8ac254a19ac29e769",
    "number": 893,
    "body": "For our newest version of the beat generator we use an in house built python script and not cookiecutter anymore.",
    "head_branch": "remove-beat-generator",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #893 from ruflin/remove-beat-generator\n\nRemove beat-generator from README"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbc9ac254a19ac29e76a",
    "number": 892,
    "body": "This commit permits users to define custom Jinja extensions to be used in the `cookiecutter.json` file.\r\n\r\nFor example, with something like this in `template/helpers.py`: \r\n```python\r\nfrom jinja2.ext import Extension\r\n\r\n\r\ndef get_app_slug(app_name):\r\n    return app_name.lower()\r\n\r\n\r\nclass HelpersExtension(Extension):\r\n\r\n    def __init__(self, environment):\r\n        super(Extension, self).__init__()\r\n        environment.filters[\"get_app_slug\"] = get_app_slug\r\n\r\n__all__ = [\"HelpersExtension\"]\r\n```\r\n\r\nIt allows to use that Jinja filter directly:\r\n```json\r\n{\r\n    \"app_name\": \"ExampleProject\",\r\n    \"app_slug\": \"{{cookiecutter.app_name|get_app_slug}}\",\r\n    \"_extensions\": [\"helpers.HelpersExtension\"]\r\n}\r\n``` \r\n\r\nThis is really just a dumb example, but I'm pretty confident that it could be a powerful feature.\r\n\r\nI'm kinda new to Cookiecutter, so please point me to the right direction if there's already another way to achieve something like this that I'm not aware of.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbc9ac254a19ac29e76b",
    "number": 890,
    "body": "Adds documentation on Android template.",
    "head_branch": "feature/android",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #890 from alexfu/feature/android\n\nAdd Android template"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbcaac254a19ac29e76c",
    "number": 889,
    "body": "Partially addresses #888",
    "head_branch": "build-docs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #889 from stevepiercy/build-docs\n\nFix miscellaneous issues with building docs"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbcbac254a19ac29e76d",
    "number": 887,
    "body": "- break apart platforms for better context while reading narrative\r\n- Previous instructions were not adequately tested on Windows, but now they are, using a VM.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix Windows installation instructions (#887)\n\n- break apart platforms for better context while reading narrative\r\n- Previous instructions were not adequately tested on Windows, but now they are, using a VM."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbccac254a19ac29e76e",
    "number": 885,
    "body": "Pull request for issue #35 \r\n\r\nI imagine people might have quite a lot of opinions about how this should be implemented. But I really want this feature, so I'll throw up a strawman for people to have opinions on.\r\n\r\nThe approach here is to add a `_target` setting to `cookiecutter.json` which gets rendered to a directory into which files get copied.\r\n\r\nDemonstrating I've read the contributing file: \r\n\r\n* Can someone add a please-help tag to this request I don't have the permissions?\r\n* It is definitely possible to implement this outside of cookiecutter... but it's slightly perverse to have a separate utility for expanding a specific type of template.\r\n* I've written tests and run them with tox they pass for py27 and py35. If someone can tell me how to easily install 7 versions of python that would be useful.\r\n\r\nSome thorny issues that people might have opinions on:\r\n\r\n* How file overwriting should work. I overwrite nothign unless the `-f` flag is given\r\n* Are we actually happy with relative paths\r\n* It's a bit perverse that you have to use a directory name like '{{cookiecutter.source}}' in the template which then gets ignored.\r\n\r\nI've written some documentation but was unable to get make the documentation run, `make servedocs` hangs with\r\n\r\n```\r\npython -c \"$BROWSER_PYSCRIPT\" docs/_build/html/index.html\r\nwatchmedo shell-command -p '*.rst' -c 'make -C docs html' -R -D .\r\n``` \r\nand no ports are listened on.\r\n\r\n",
    "head_branch": "talwrii--freestanding-files--issue-35--2017-01-06",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbccac254a19ac29e76f",
    "number": 884,
    "body": "Resolve #882 ",
    "head_branch": "fix-dict-prompt-for-default-value",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #884 from hackebrot/fix-dict-prompt-for-default-value\n\nFix dict prompt for default value"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbcdac254a19ac29e770",
    "number": 883,
    "body": "I added [cookiecutter-bare](https://github.com/webevllc/cookiecutter-bare) to the **Cookiecutter (Meta)** category, because it is a _programming language agnostic_ project. Decline this pull request, and let me know if I should create a new category instead! Thanks in advance for your time!",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbceac254a19ac29e771",
    "number": 880,
    "body": "ref: #869\r\n- Add Prerequisites section\r\n- remove sudo\r\n- use --user install option\r\n- use --upgrade for consistency",
    "head_branch": "docs-installation-no-sudo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #880 from stevepiercy/docs-installation-no-sudo\n\nUpdate installation.rst instructions"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbcfac254a19ac29e772",
    "number": 879,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #879 from m-x-k/master\n\nCookiecutter examples for Java and Elm"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbd0ac254a19ac29e773",
    "number": 878,
    "body": "",
    "head_branch": "rest-syntax",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #878 from stevepiercy/rest-syntax\n\nreST fixes for contributors files"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbd0ac254a19ac29e774",
    "number": 877,
    "body": "",
    "head_branch": "rest-syntax",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbd1ac254a19ac29e775",
    "number": 876,
    "body": "",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #876 from stevepiercy/patch-4\n\nupdate description for pyramid-cookiecutter-starter"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbd2ac254a19ac29e776",
    "number": 873,
    "body": "added a new project to the pantry in the readme file",
    "head_branch": "golang",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #873 from lacion/golang\n\ncookiecutter-golang in pantry"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbd3ac254a19ac29e777",
    "number": 872,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #872 from mjhea0/patch-1\n\nadded a golang resource"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbd4ac254a19ac29e778",
    "number": 871,
    "body": "Currently we get errors when generating the ``long_description`` for PyPI as there are duplicate explicit target names for **README.rst** and **HISTORY.rst** for a number of template repositories.",
    "head_branch": "remove-history-from-long-description",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove HISTORY.rst from long_description in setup.py (#871)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbd4ac254a19ac29e779",
    "number": 870,
    "body": "",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #870 from stevepiercy/patch-3\n\nupdate descriptions of Pyramid cookiecutters"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbd5ac254a19ac29e77a",
    "number": 868,
    "body": " - Support copying symlinks as symlinks for both rendered and\r\nnon-rendered directories\r\n - Support symlinks that link to a rendered directory\r\n - Support symlinks that get rendered",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbd6ac254a19ac29e77b",
    "number": 867,
    "body": "Updated first line of docstring on function is_copy_only_path in generate.py to satisfy pep257 and line length for flake.",
    "head_branch": "pep257_update",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbd7ac254a19ac29e77c",
    "number": 866,
    "body": "Fixed doc string in function is_copy_only_path. First line - added , to end of 'being'",
    "head_branch": "pep257_update",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbd8ac254a19ac29e77d",
    "number": 864,
    "body": "ref: #863\r\n\r\n@hackebrot here it is. Thoughts?",
    "head_branch": "modify/docs-extra-context-863",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #864 from karantan/modify/docs-extra-context-863\n\nModify documentation on the Injecting Extra Context."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbd8ac254a19ac29e77e",
    "number": 862,
    "body": "Address code review comments of #729 and use ``@pytest.skipif``.\r\n\r\n⬆️ @michaeljoseph @jcarbaugh\r\n\r\nResolves #632 ",
    "head_branch": "handle-empty-hook-files",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #862 from hackebrot/handle-empty-hook-files\n\nHandle empty hook files"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbd9ac254a19ac29e77f",
    "number": 861,
    "body": "This is an alternative implementation for #800 to make kwargs deterministic.\r\n\r\nI personally prefer a ``default_config=False`` flag over ``config_file=object()`` 🙊 \r\n\r\nPlease let me know your thoughts, @lamby. I should also mention that you will get credit for your contribution to cookiecutter regardless of whether we decide to use this PR instead of #800!",
    "head_branch": "reproducible-build-with-default-config",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #861 from hackebrot/reproducible-build-with-default-config\n\nReproducible build with default config"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbdaac254a19ac29e780",
    "number": 860,
    "body": "Fixes #850 \r\n\r\nStrictEnvironment is used instead of Template when processing the pre-hook. I changed the hooks for the tests because strings weren't getting returned.",
    "head_branch": "custom-extension-in-pre-hooks",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #860 from cheungnj/custom-extension-in-pre-hooks\n\nload custom extensions in pre-hook"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbdbac254a19ac29e781",
    "number": 859,
    "body": "I'm not sure if this is something we want, but wanted to at least discuss it.\r\n\r\n```text\r\n$ cookiecutter --help\r\nUsage: cookiecutter [OPTIONS] TEMPLATE [EXTRA_CONTEXT]...\r\n\r\n  Create a project from a Cookiecutter project template (TEMPLATE).\r\n\r\n  Cookiecutter is free and open source software, developed and managed by\r\n  volunteers. If you would like to help out or fund the project, please get\r\n  in touch at https://github.com/audreyr/cookiecutter.\r\n\r\nOptions:\r\n  -V, --version              Show the version and exit.\r\n  --no-input                 Do not prompt for parameters and only use\r\n                             cookiecutter.json file content\r\n  -c, --checkout TEXT        branch, tag or commit to checkout after git clone\r\n  -v, --verbose              Print debug information\r\n  --replay                   Do not prompt for parameters and only use\r\n                             information entered previously\r\n  -f, --overwrite-if-exists  Overwrite the contents of the output directory if\r\n                             it already exists\r\n  -o, --output-dir PATH      Where to output the generated project dir into\r\n  --config-file PATH         User configuration file\r\n  --default-config           Do not load a config file. Use the defaults\r\n                             instead\r\n  --debug-file PATH          File to be used as a stream for DEBUG logging\r\n  -h, --help                 Show this message and exit.\r\n```",
    "head_branch": "extend-cli-help-message",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #859 from hackebrot/extend-cli-help-message\n\nExtend CLI help message"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbdcac254a19ac29e782",
    "number": 858,
    "body": "Follow-up for #815. This PR uses a click feature to prompt the user for a valid JSON dict and asks again if they enter anything else. Currently an exception would be raised for non dict values.\r\n\r\n```text\r\n$ cookiecutter -o foooo/ tests/fake-repo-dict/\r\nproject_slug [fake-project-dict]: helloworld\r\nfile_types [default]: nope!\r\nError: Unable to decode to JSON.\r\nfile_types [default]: [1, 2, 3]\r\nError: Requires JSON dict.\r\nfile_types [default]: {\"png\":{\"name\":\"Portable Network Graphic\",\"library\":\"libpng\",\"apps\":[\"GIMP\"]}}\r\n```\r\n\r\nPlease let me know your thoughts! I would like to include this in the next release 😄 \r\n\r\n@audreyr @pydanny @michaeljoseph @freakboy3742 ",
    "head_branch": "use-click-to-process-dict-variable",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #858 from hackebrot/use-click-to-process-dict-variable\n\nUse click to process dict variable"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbdcac254a19ac29e783",
    "number": 856,
    "body": "Adds two tests to replicate #850 \r\n\r\nMake sure to remove ``@pytest.mark.xfail`` when this has been fixed.",
    "head_branch": "custom-extensions-in-hooks",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #856 from hackebrot/custom-extensions-in-hooks\n\nTests for custom extensions in hooks"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbddac254a19ac29e784",
    "number": 855,
    "body": "",
    "head_branch": "disable-poyo-logging-for-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #855 from hackebrot/disable-poyo-logging-for-tests\n\nDisable poyo logging for tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbdeac254a19ac29e785",
    "number": 852,
    "body": "A minor change that adds ``# -*- coding: utf-8 -*-`` to python files that didn't have them before.\r\n\r\nFixes #814",
    "head_branch": "fix/consistently_use_encoding_declarations",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #852 from andytom/fix/consistently_use_encoding_declarations\n\nConsistently use encoding declarations"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbdfac254a19ac29e786",
    "number": 849,
    "body": "😄 ",
    "head_branch": "extend-py-artifact-cleanup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #849 from hackebrot/extend-py-artifact-cleanup\n\nRemove pycache directories in make clean-pyc"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbe0ac254a19ac29e787",
    "number": 848,
    "body": "This is a proof-of-concept implementation for loading a new format for **cookiecutter.json** 😄 \r\n\r\nThere are a number of features missing from this, but it should be sufficient to allow feedback on the specification. You can run the example via ``$ python cookiecutter/context.py``. Nothing will be generated, but the prompting is done (hardcoded to *verbose*) and the resulting context as an OrderedDict is pprinted.\r\n\r\n@audreyr @pydanny @michaeljoseph 👋 \r\n\r\nPlease let me know your thoughts and I'll happily make changes to the spec.\r\n",
    "head_branch": "new-context-format",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbe1ac254a19ac29e788",
    "number": 847,
    "body": "pyqt4 application with logging",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #847 from aeroaks/master\n\nAdd template for pyqt4 gui"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbe1ac254a19ac29e789",
    "number": 844,
    "body": "Fix python3.6 travis-ci and tox configuration\n",
    "head_branch": "fix-python3.6-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #844 from luzfcb/fix-python3.6-tests\n\nFix python3.6 travis-ci and tox configuration"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbe2ac254a19ac29e78a",
    "number": 843,
    "body": "I am not the owner of the original repo, however after stumbling around for a Terraform Module I found this one by DualSpark. https://github.com/DualSpark/cookiecutter-tf-module I'd love to include it in the Docs. \n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #843 from VDuda/master\n\nAdded TF Module CookieCutter by DualSpark"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbe3ac254a19ac29e78b",
    "number": 842,
    "body": "- Fix python3.6 travis-ci and tox configuration\n- Add python3.7 travis-ci and tox configuration\n\nps: the build will fail with `tox==2.4.1`, however, this error has been fixed (https://github.com/tox-dev/tox/pull/382) and will be shipped with the next `tox` version \n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbe4ac254a19ac29e78c",
    "number": 840,
    "body": "CICADA uses Cookiecutter and a custom script to automatically populate an AngularJS frontend that connects to your Django REST backend. This template makes some assumptions about your backend, namely that it is a Django DRF-based backend with JWT authentication. Such a template for a backend can be easily created with the cc-automated-drf-template.\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #840 from elenimijalis/patch-2\n\nadded CookIeCutter Automated DRF Angular (CICADA)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbe5ac254a19ac29e78d",
    "number": 839,
    "body": "This pull-request ensures paths variables are rendered when using `_copy_without_render`.\n\nIt should fix #456.\n\nIt does not keep the existing behavior as it was inconsistent, different for files and directories (matched files had their path rendered but not the matched directories).\nIf this behavior should be kept, I'll update this pull-request with a boolean option like `_copy_without_render_paths`.\n",
    "head_branch": "render_copy_without_render",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Render path templates in copy_wihtout_render (fix #456) (#839)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbe5ac254a19ac29e78e",
    "number": 837,
    "body": "This is #696 continuation...\n\n@hackebrot sorry, I made a mess trying to bring #696 up to date with master and I ended up with a new PR.\n\n(I am still not sure if somehow I could have just updated the branch to mantain the same PR)\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbe6ac254a19ac29e78f",
    "number": 836,
    "body": "Update README instructions on how to use an already cloned cookiecutter\nRef: Issue #835\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbe7ac254a19ac29e790",
    "number": 834,
    "body": "Fixes #769.\n",
    "head_branch": "improve-find-hooks",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #834 from michaeljoseph/improve-find-hooks\n\nFind the requested hook only"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbe8ac254a19ac29e791",
    "number": 833,
    "body": "",
    "head_branch": "tbates-pep257-742-repository",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #833 from terryjbates/tbates-pep257-742-repository\n\nImplement pep257 on repository.py"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbe9ac254a19ac29e792",
    "number": 832,
    "body": "cc_automated_drf_template uses Cookiecutter and a custom script to automatically populate a Django REST project given a models.py. Just provide your models and cc_automated_drf_template will write your views, serializers, urls, and admin for you.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #832 from elenimijalis/patch-1\n\nAdded cc-automated-drf-template"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbe9ac254a19ac29e793",
    "number": 831,
    "body": "",
    "head_branch": "tbates-pep257-742-vcs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #831 from terryjbates/tbates-pep257-742-vcs\n\nImplement pep257 on vcs.py."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbeaac254a19ac29e794",
    "number": 828,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #828 from mwarkentin/patch-1\n\nFix typo"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbebac254a19ac29e795",
    "number": 827,
    "body": "Pydocstyle pass through on prompt.py and some param and raises adds.\n",
    "head_branch": "pydocstyle-prompt.py",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbecac254a19ac29e796",
    "number": 826,
    "body": "Here's a new template for any transparent and reproducible science project.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #826 from mkrapp/master\n\nAdd cookiecutter-reproducible-science template"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbedac254a19ac29e797",
    "number": 825,
    "body": "Existing cookiecutters in `~/.cookiecutters` can now be referenced by directory name.\n\nFixes #385.\n",
    "head_branch": "use-existing-cookiecutters",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #825 from michaeljoseph/use-existing-cookiecutters\n\nUse existing cookiecutters"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbedac254a19ac29e798",
    "number": 820,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #820 from B3QL/master\n\nUpdate expired link in readme"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbeeac254a19ac29e799",
    "number": 817,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #817 from laerus/master\n\nadds entry for xonsh xontribs template"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbefac254a19ac29e79a",
    "number": 816,
    "body": "I added my cookiecutter project to the README.rst\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbf0ac254a19ac29e79b",
    "number": 815,
    "body": "This adds the ability to specify arbitrarily deep data structures in your cookiecutter JSON file.\n",
    "head_branch": "dict_variables",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Corrected the version number that the feature would be added."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbf0ac254a19ac29e79c",
    "number": 807,
    "body": "I changed the README.rst by adding a Tornado section and added the https://github.com/hkage/cookiecutter-tornado template.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #807 from hkage/master\n\nAdded tornadoweb cookiecutter template"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbf1ac254a19ac29e79d",
    "number": 806,
    "body": "http://stackoverflow.com/q/39143409/647991\n\nWe have the file `cookiecutter.json`, which defines the default context for a template. I would like to specify, via a command flag, something like:\n\n```\ncookiecutter --no-input --context-file cookiecutter.json <cookiecutter-template>\n```\n\nSo that the same template can be used to generate different projects, without having to enter the data manually on the input prompts. There is a workaround to achieve this:\n1. clone the template repo locally\n2. modify the `cookiecutter.json` in the template repo\n3. specify as template the local clone, and not the github clone\n\nThis is less than ideal, because it requires modifying a repository, does not allow for independent storage of the context files, and does not allow to use the same template to easily create different projects.\n\nIs there a way to specify the context to cookiecutter, on the command line?\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbf2ac254a19ac29e79e",
    "number": 804,
    "body": "and Updated description of Wagtail Cookiecutter foundation\n\nProject link: https://github.com/Parbhat/cookiecutter-django-foundation\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbf3ac254a19ac29e79f",
    "number": 802,
    "body": "Resolve #741 😸 \n\ncc @audreyr \n",
    "head_branch": "rename-copy-without-render",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #802 from hackebrot/rename-copy-without-render\n\nRename copy_without_render() check"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbf4ac254a19ac29e7a0",
    "number": 801,
    "body": "Please let me know your thoughts! 😄 \n",
    "head_branch": "allow-default-config-from-main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbf4ac254a19ac29e7a1",
    "number": 800,
    "body": "Whilst working on the Reproducible Builds effort [0], I noticed\nthat cookiecutter could not be built reproducibly.\n\nAs USER_CONFIG_PATH is pased on expanding ~ this varies between different\nsystems, meaning that building the documentation on a different machine (or\nwith a different $HOME) ends up with a different result:\n- [..] config_file=u'/nonexistent/first-build/.cookiecutterrc' [..]\n- [..] config_file=u'/nonexistent/second-build/.cookiecutterrc' [..]\n\nI would normally just change this to `config_file=None` and set it at\nruntime, but we need to be clever with NOT_PROVIDED to tell the difference\nbetween the case where we _actually_ pass ``None`..\n\n [0] https://reproducible-builds.org/\n\nSigned-off-by: Chris Lamb chris@chris-lamb.co.uk\n",
    "head_branch": "reproducible-build",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbf5ac254a19ac29e7a2",
    "number": 798,
    "body": "",
    "head_branch": "use-better-template-name",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #798 from hackebrot/use-better-template-name\n\nUse repo_dir rather than template to get name"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbf6ac254a19ac29e7a3",
    "number": 797,
    "body": "Cookiecutter-pyqt5 is a cookiecutter template that assists those who are wanting to create PyQt5 GUI applications. The cookiecutter assembles a PyQt5 GUI with tests written in Pytest. The test suite includes fixtures and tests using the Pytest-Qt, Pytest-Mock, and Pytest-Xvfb plugins that show the user how to test their GUI application. The cookiecutter also includes a fully functioning .travis.yml for users to quickly integrate with Travis CI. \n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #797 from mandeepbhutani/master\n\nAdded cookiecutter-pyqt5 template under Python cookiecutter packages"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbf7ac254a19ac29e7a4",
    "number": 796,
    "body": "Don't merge this please 😄 \n\nLet's see if pytest 3.0 behaves as expected 😂 \n",
    "head_branch": "test-pytest-30-pre-release",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbf7ac254a19ac29e7a5",
    "number": 792,
    "body": "This PR adds sophisticated logging to cookiecutter! 😃 \n\n`$ cookiecutter --debug-file generate-plugin.log cookiecutter-pytest-plugin`\n\nRather than using `logging.basicConfig` to set up the root logger and a handler, a `cookiecutter` logger with one or two handlers:\n- `StreamHandler` logging on `DEBUG` or `INFO` based on `--verbose`\n- `FileHandler` logging **always** on `DEBUG`, but only added if a file is provided via `--debug-file=foo.log`\n\nThe idea is to allow users to optionally output information about files/directories generated w/o polluting `stdout`. The format for `DEBUG` logging now also mentions the template as specified by the user to the log messages, which will come in handy especially when using the debug file .\n\nResolves #633 \n\n---\n\nWhile working on [cibopath](https://github.com/hackebrot/cibopath) I noticed side effects of using `logging.basicConfig` which luckily never caused problems in Cookiecutter. This PR solves this problem by explicitly setting up the `cookiecutter` logger.\n\n``` python\n# -*- coding: utf-8 -*-\n\nimport logging\n\n# This causes problems when run before basicConfig\n# Comment out to see different stdout logging\n# or to ``logging.getLogger('foo').info('Before basicConfig')``\nlogging.info('Before basicConfig')\n\nlogging.basicConfig(\n    format=u'%(levelname)s: %(message)s',\n    level=logging.DEBUG\n)\n\nlogging.info('After basicConfig')\nlogging.debug('After basicConfig')\n```\n",
    "head_branch": "improve-logging",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #792 from hackebrot/improve-logging\n\nImprove logging"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbf8ac254a19ac29e7a6",
    "number": 791,
    "body": "This enables a template like this\n\n```\n{{ cookiecutter | jsonify }}\n```\n\nthat renders the a python object as json, as suggested in #784\n",
    "head_branch": "gh/jsonify-extension",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #791 from aroig/gh/jsonify-extension\n\nadd a jsonify filter to jinja default extensions"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbf9ac254a19ac29e7a7",
    "number": 790,
    "body": "This makes it even easier to write CLI tests. 😂 \n\nCurrently:\n\n``` python\nresult = runner.invoke(main, ['--verbose', template])\n```\n\nWith this PR:\n\n``` python\nresult = cli_runner('--verbose', template)\n```\n",
    "head_branch": "improve-cli-testing-setup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #790 from hackebrot/improve-cli-testing-setup\n\nImplement cli_runner fixture for test_cli.py"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbfaac254a19ac29e7a8",
    "number": 789,
    "body": "We've added a couple of **hook backup files** as static files to our tests to make sure that they are not accidentally picked up as hooks in templates, see #768.\n\n```\ntests/hooks-backup-files/hooks/post_gen_project.py~\ntests/hooks-backup-files/hooks/pre_gen_project.py~\n```\n\nThe problem is that `make clean` removes such files and I have to `git reset --hard` to restore them as of now. 😢 \n\nThis PR creates the hook files in a **pytest.yield_fixture** and runs the test against them.\n",
    "head_branch": "fix-files-removed-via-make-clean",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #789 from hackebrot/fix-files-removed-via-make-clean\n\nFix files removed via make clean"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbfbac254a19ac29e7a9",
    "number": 788,
    "body": "With this change you gain at least three ways to execute cookiecutter:\n1. `python -m cookiecutter`\n2. From a checkout: `python .`\n3. From a zip file (that includes all necessary dependencies): `python cookiecutter.zip`\n\nCloses #787\n",
    "head_branch": "main_submodule",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #788 from brettcannon/main_submodule\n\nAdd support for executing cookiecutter using -m or from a checkout/zip file"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbfbac254a19ac29e7aa",
    "number": 786,
    "body": "",
    "head_branch": "tbates-pep257-742-exceptions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbfcac254a19ac29e7ab",
    "number": 782,
    "body": "",
    "head_branch": "ensure-repos-have-context",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #782 from michaeljoseph/ensure-repos-have-context\n\nEnsure cookiecutter repositories have json context"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbfdac254a19ac29e7ac",
    "number": 781,
    "body": "This PR adds the official Jupyter widget-cookiecutter to the README\n",
    "head_branch": "jupyter-widget",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #781 from willingc/jupyter-widget\n\nAdd jupyter widget-cookiecutter to README"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbfeac254a19ac29e7ad",
    "number": 780,
    "body": "I'm at SciPy this week and have heard/seen several talks speak about cookiecutter.\n\nHere's a PR adding to the README.\n",
    "head_branch": "condaforge",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbffac254a19ac29e7ae",
    "number": 779,
    "body": "This PR fixes some of pep257 warnings in _generate.py_. \n",
    "head_branch": "pep257-fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dbffac254a19ac29e7af",
    "number": 778,
    "body": "Fixes #776 \n",
    "head_branch": "vcs-error-messages",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #778 from michaeljoseph/vcs-error-messages\n\nFriendly error messages for VCS failures"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc00ac254a19ac29e7b0",
    "number": 777,
    "body": "In preparation for improving how we handle template references: #385.\n",
    "head_branch": "identify-cookiecutter-template",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #777 from michaeljoseph/identify-cookiecutter-template\n\nRefactor cookiecutter template identification"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc01ac254a19ac29e7b1",
    "number": 774,
    "body": "This is one use case: Have a make target in the rendered project that\npulls changes from the template source, renders the up-to-date template\nwith the same context used to create the project, and then merges the\nchanges back into the rendered project.\n",
    "head_branch": "gh/template-in-context",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #774 from aroig/gh/template-in-context\n\nInclude template directory or url in the context dictionary"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc02ac254a19ac29e7b2",
    "number": 773,
    "body": "",
    "head_branch": "tbates-pep257-742-prompt",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc02ac254a19ac29e7b3",
    "number": 772,
    "body": "",
    "head_branch": "tbates-pep257-742-main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix module summary and 'expand_abbreviations' docstring as per pep257"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc03ac254a19ac29e7b4",
    "number": 770,
    "body": "This adds a list of options to be bypassed so that some options can be bypassed even with no_input=False. This adds flexibility when triggering a cookiecutter project in a post_gen hook of another cookiecutter project. \n\nCurrently, the no_input parameter controls whether the user will be prompted for all or none of the options. This PR makes it so the user can be prompted for another percentage of the options.\n",
    "head_branch": "bypass_options",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc04ac254a19ac29e7b5",
    "number": 768,
    "body": "Resolve #767\n",
    "head_branch": "ignore-backup-files-of-hooks",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #768 from hackebrot/ignore-backup-files-of-hooks\n\nIgnore backup files of hooks"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc05ac254a19ac29e7b6",
    "number": 766,
    "body": "Work related to issue #742. \n",
    "head_branch": "tbates-pep257-742-hooks",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #766 from terryjbates/tbates-pep257-742-hooks\n\nRan pep8 and pep257 on hooks.py."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc06ac254a19ac29e7b7",
    "number": 765,
    "body": "Cookiecutter-simple-django-cn added to the Django Cookiecutters list.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #765 from shenyushun/master\n\nAdded new cookiecutter template"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc06ac254a19ac29e7b8",
    "number": 764,
    "body": "Work wrt issue #742.\n",
    "head_branch": "tbates-pep257-742-generate",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #764 from terryjbates/tbates-pep257-742-generate\n\nRan pep257 on generate.py."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc07ac254a19ac29e7b9",
    "number": 763,
    "body": "",
    "head_branch": "remove-shebangs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #763 from michaeljoseph/remove-shebangs\n\nRemove unnecessary shebangs"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc08ac254a19ac29e7ba",
    "number": 762,
    "body": "Working on #742.\n",
    "head_branch": "tbates-pep257-742-exceptions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc09ac254a19ac29e7bb",
    "number": 761,
    "body": "Working on #742. \n",
    "head_branch": "tbates-pep257-742",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #761 from terryjbates/tbates-pep257-742\n\nRan pep257 on find.py."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc0aac254a19ac29e7bc",
    "number": 760,
    "body": "Link to the beat generator had to be updated as the generator is now part of the beats repository.\n",
    "head_branch": "beat-generator-updates",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc0aac254a19ac29e7bd",
    "number": 759,
    "body": "@michaeljoseph This should be a less problematic PR, wrt #742!\n",
    "head_branch": "tbates-pep257-742-environment",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #759 from terryjbates/tbates-pep257-742-environment\n\nRan pep257 and pep8 on environment.py."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc0bac254a19ac29e7be",
    "number": 758,
    "body": "Working #742. Applied pep8 and pep257 to environment.py.\n",
    "head_branch": "tbates-pep257-issue_742-environment",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc0cac254a19ac29e7bf",
    "number": 757,
    "body": "Working on #742. Simplified module docstring. Changed verbiage of version_msg. Added docstring for validate_extra_context. \n",
    "head_branch": "tbates-pep257-742",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc0dac254a19ac29e7c0",
    "number": 756,
    "body": "Simplified module docstring. Changed verbiage of version_msg. Added docstring for validate_extra_context.\n",
    "head_branch": "tbates-pep257-742",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc0eac254a19ac29e7c1",
    "number": 754,
    "body": "Previous one doesn't work anymore.\n",
    "head_branch": "fix-djangotemplate-link",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #754 from purplediane/fix-djangotemplate-link\n\nUpdate link to Django template reference"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc0eac254a19ac29e7c2",
    "number": 753,
    "body": "See #752 \n",
    "head_branch": "fix-replay-template-name",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #753 from hackebrot/fix-replay-template-name\n\nFix replay template name"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc0fac254a19ac29e7c3",
    "number": 751,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #751 from Plippe/patch-1\n\nAdd another scala template"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc10ac254a19ac29e7c4",
    "number": 749,
    "body": "Removed the advanced_usage.rst file after separating the sections within into their own files in the advanced directory per #744 .\n",
    "head_branch": "advanced-usage-docs-split",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #749 from zzzirk/advanced-usage-docs-split\n\nAdvanced usage docs split"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc11ac254a19ac29e7c5",
    "number": 747,
    "body": "Updated copyright in documentation from 2013-2015 to 2013-2016 per #731.\n",
    "head_branch": "update-copyright",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #747 from zzzirk/update-copyright\n\nUpdated copyright on docs"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc11ac254a19ac29e7c6",
    "number": 746,
    "body": "Related to #740 #732\n",
    "head_branch": "update-submodules-make-rule",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #746 from hackebrot/update-submodules-make-rule\n\nAdd a make rule to update git submodules"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc12ac254a19ac29e7c7",
    "number": 745,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #745 from stevepiercy/patch-1\n\nAdd Pyramid cookiecutters"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc13ac254a19ac29e7c8",
    "number": 740,
    "body": "#732\n\nAdded submodule to Bruce's tutorial and restructured tutorial section to learning cookiecutter and learning to make cookiecutter project templates\n\nLink to blog on git submodules\nhttp://fmarco76.github.io/git%20and%20related%20services/readthedocs/\n",
    "head_branch": "tutorial_restructure",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "restructured tutorial section"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc14ac254a19ac29e7c9",
    "number": 739,
    "body": "Attempting to resolve issue #722.\n",
    "head_branch": "tbates-fix-parens-issue-722",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #739 from terryjbates/tbates-fix-parens-issue-722\n\nAdded missing paren in usage.rst."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc15ac254a19ac29e7ca",
    "number": 738,
    "body": "Debian package installation steps added to docs/installation.rst.\n\nv2: Now with added note indicating the debian YAML package is a patched package rather than  development YAML.\n",
    "head_branch": "debian-installation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #738 from ivanlyon/debian-installation\n\nDebian installation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc15ac254a19ac29e7cb",
    "number": 737,
    "body": "Installation instructions updated with debian package installation.\n",
    "head_branch": "debian-installation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc16ac254a19ac29e7cc",
    "number": 736,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #736 from BruceEckel/patch-1\n\nAdd link to my tutorial"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc17ac254a19ac29e7cd",
    "number": 735,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #735 from pydanny/master\n\nAdd first case study per #708"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc18ac254a19ac29e7ce",
    "number": 734,
    "body": "Since naming the project template directory 'repo_name' is no longer required, I changed occurrences of it to 'project_slug' (matching the current `cookiecutter-pypackage`) and clarified that this is a templated value. I also updated the `cookiecutter-pypackage/cookiecutter.json` in the tutorial to match the current version.\n",
    "head_branch": "update-docs-cc-repo-name",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #734 from palmerev/update-docs-cc-repo-name\n\nUpdate overview, tutorials, advanced usage -- change occurrences of 'repo_name'"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc18ac254a19ac29e7cf",
    "number": 730,
    "body": "One new entry/link for cookiecutter-py3tkinter added to README.rst\n",
    "head_branch": "py3tkinter_link",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #730 from ivanlyon/py3tkinter_link\n\nProposed addition of cookiecutter-py3tkinter to README.rst"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc19ac254a19ac29e7d0",
    "number": 729,
    "body": "Took a guess at the right way to test based on the existing tests. Let me know if anything needs to be changed!\n\nFixes #632.\n",
    "head_branch": "632-empty-hook-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Don't test errno=8 on windows\n\nAlso added comment with justification"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc1aac254a19ac29e7d1",
    "number": 728,
    "body": "Adding 3.6-dev test support to travis ci. \n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #728 from suledev/master\n\nissue #707"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc1bac254a19ac29e7d2",
    "number": 727,
    "body": "Closes #719 \n\nCreates a document acknowledging individuals who participated in the 2016 PyCon sprints, and adds this doc to the index\n",
    "head_branch": "people",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #727 from phoebebauer/people\n\nAdd a sprint contributor doc"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc1cac254a19ac29e7d3",
    "number": 726,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc1dac254a19ac29e7d4",
    "number": 725,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc1dac254a19ac29e7d5",
    "number": 724,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc1eac254a19ac29e7d6",
    "number": 720,
    "body": "",
    "head_branch": "ddc-new-issue-544",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #720 from purplediane/ddc-new-issue-544\n\nAdd mention of PyCon US 2016 sponsorship to README - Issue 544"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc1fac254a19ac29e7d7",
    "number": 718,
    "body": "As per [their blog post of the 27th April](https://blog.readthedocs.com/securing-subdomains/) ‘Securing subdomains’:\n\n> Starting today, Read the Docs will start hosting projects from subdomains on the domain readthedocs.io, instead of on readthedocs.org. This change addresses some security concerns around site cookies while hosting user generated data on the same domain as our dashboard.\n\nTest Plan: Manually visited all the links I’ve modified.\n",
    "head_branch": "readthedocs.io",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #718 from adamchainz/readthedocs.io\n\nConvert readthedocs links for their .org -> .io migration for hosted projects"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc20ac254a19ac29e7d8",
    "number": 716,
    "body": "Adding 3.6 alpha support for continuous integration. \n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc20ac254a19ac29e7d9",
    "number": 715,
    "body": "",
    "head_branch": "3.6-alpha-ci",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc21ac254a19ac29e7da",
    "number": 714,
    "body": "Fixes #711.\n",
    "head_branch": "doc-change",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #714 from tephyr/doc-change\n\nUpdate data science link"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc22ac254a19ac29e7db",
    "number": 713,
    "body": "Adding in PEP 484 style type annotations and a [mypy](http://mypy.readthedocs.io/en/latest/) test step.\n\nTicket: #712 \n\n/cc @hackebrot @audreyr @pydanny \n",
    "head_branch": "type_annotations",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc23ac254a19ac29e7dc",
    "number": 705,
    "body": "This works thanks to https://github.com/conda-forge/cookiecutter-feedstock, which works thanks to  @bollwyvl and conda-forge.\n",
    "head_branch": "new-conda-rules",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #705 from pydanny/new-conda-rules\n\nNew conda installation instructions"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc24ac254a19ac29e7dd",
    "number": 702,
    "body": "",
    "head_branch": "docs-url-samples",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #702 from pokoli/docs-url-samples\n\nAdd ssh examples for git and mercurial"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc24ac254a19ac29e7de",
    "number": 701,
    "body": "- Remove the exsitings TODOs\n- Add an example.\n",
    "head_branch": "docs-comanline-no-input",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #701 from pokoli/docs-comanline-no-input\n\nImprove the docs of no_input when using defaults"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc25ac254a19ac29e7df",
    "number": 700,
    "body": "good new Github feature:\nhttps://github.com/blog/2111-issue-and-pull-request-templates\nhttps://help.github.com/articles/helping-people-contribute-to-your-project/\n",
    "head_branch": "github-issue-template",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #700 from luzfcb/github-issue-template\n\nadd github \"ISSUE_TEMPLATE.md\" file"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc26ac254a19ac29e7e0",
    "number": 698,
    "body": "",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #698 from cedk/patch-2\n\nFix URL for Tryton repository"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc27ac254a19ac29e7e1",
    "number": 697,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #697 from nicoe/master\n\nUse new URL of the Tryton cookiecutter"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc28ac254a19ac29e7e2",
    "number": 696,
    "body": "Enables the usage of base templates located outside of the cookiecutter root on internal API.\n\nThis allows to have base templates that are not included on the resulting directory.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc28ac254a19ac29e7e3",
    "number": 695,
    "body": "",
    "head_branch": "beat-generator",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #695 from ruflin/beat-generator\n\nAdd beat-generator to the README file"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc29ac254a19ac29e7e4",
    "number": 694,
    "body": "hi,\nhere is an enhancement of how hooks work.\nThey now receive through the standard input stream, the cookiecutter context object, serialized in JSON .\nThis allows to unserialize this object, and then simply read and/or update some values that can be sent back to the main context, by writing a JSON serialized object to the standard output.     \n\nIt is also possible to disable the hook duplication by adding the setting `\"_no_hookcopy\": \"yes\"` in the `cookiecutter.json`. Hooks are then run directly in place. \nThis should be useful, when a template author does not need to use template variables directly in his/her hooks and want to keep track of the template directory.\nA concrete example is license management. In the documentation - [Choice Variables (1.1+)](https://cookiecutter.readthedocs.io/en/latest/advanced_usage.html#choice-variables-1-1) - it is explained how to manage licenses in one file.\nIt should be easier to get many license file templates in a directory, and then just copy the selected one.\nMore information and examples are available in the updated `Advanced usage` page of the documentation of this PR.\nThis is the start of a proposition and I'm very interesting by getting some feedbacks.\n\nBest regards\n\nEric\n",
    "head_branch": "real-hooks-serialized-context",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc2aac254a19ac29e7e5",
    "number": 693,
    "body": "From #667\n",
    "head_branch": "ratson-master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #693 from pydanny/ratson-master\n\nmerge"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc2bac254a19ac29e7e6",
    "number": 692,
    "body": "Not sure this is the right branch to PR to.  It just adds a cookiecutter for setting up Snakemake analysis pipelines that I have been using for a while.\n",
    "head_branch": "feature/cookiecutter-snakemake-analysis-pipeline",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "added cookiecutter-snakemake-analysis-pipeline to list of cookiecutters."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc2cac254a19ac29e7e7",
    "number": 690,
    "body": "There 2.0.3 has a small bug fix. Thanks! The PyYaml dependency is removed.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc2cac254a19ac29e7e8",
    "number": 689,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #689 from pydanny/master\n\nAdded Natim's change"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc2dac254a19ac29e7e9",
    "number": 688,
    "body": "The latest codecov releases introduce PyYAML as a dependency, which [fails to install on Appveyor (py33 and py34).](https://ci.appveyor.com/project/audreyr/cookiecutter/build/1.0.993/job/o3gey6aarbajrjvi)\n",
    "head_branch": "pin-codecov",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #688 from michaeljoseph/pin-codecov\n\nPin codecov dependency"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc2eac254a19ac29e7ea",
    "number": 687,
    "body": "r? @pydanny \n",
    "head_branch": "readthedocs.io",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #687 from Natim/readthedocs.io\n\nUpdate readthedocs links."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc2fac254a19ac29e7eb",
    "number": 686,
    "body": "",
    "head_branch": "cookiecutters_levit",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add 3 Django cookiecutters"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc2fac254a19ac29e7ec",
    "number": 684,
    "body": "fixes audreyr/cookiecutter#629\n\nRough draft.  Let me know if you don't like this approach for any reason.\n\nNo tests for this change.  I looked at the current tests and didn't see anything test_hooks.py that was checking cleanup functionality.  Is that where the tests for this should go?\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc30ac254a19ac29e7ed",
    "number": 682,
    "body": "",
    "head_branch": "update-whichcraft",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #682 from pydanny/update-whichcraft\n\nBumped whichcraft to 0.3.1"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc31ac254a19ac29e7ee",
    "number": 680,
    "body": "Thanks for the awesome cookiecutter project! We <3 it!\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #680 from pjbull/master\n\nAdd cookiecutter-data-science project"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc32ac254a19ac29e7ef",
    "number": 678,
    "body": "Another bit of documentation. This is the first time I've ever touched this module! \n",
    "head_branch": "doc_prompt_module",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Documented render_variable function in prompt.py"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc33ac254a19ac29e7f0",
    "number": 677,
    "body": "Alas, `Cookiecutter` is forced to have classes because jinja2 requires them. In a better world we could avoid them, but such is how the cookie crumbles. In any case, this pull request documents the `__init__` methods, which is useful because the purpose of those methods (especially the mixin's `__init__`) is not immediately clear.\n",
    "head_branch": "doc_environment_module",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #677 from pydanny/doc_environment_module\n\nDocumented __init__ methods for Environment objects"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc33ac254a19ac29e7f1",
    "number": 675,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "remove .js of url"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc34ac254a19ac29e7f2",
    "number": 674,
    "body": "Explosive growth of cookiecutters is a nice problem to have. Here is a WIP PR for putting the templates and similar projects to the end of the README. An earlier section links to the templates\n\nI added a section for cookiecutter maintained templates but I wasn't sure which were or were not.\n\nAddresses #662 in part.\n",
    "head_branch": "readme-linktemplates",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #674 from willingc/readme-linktemplates\n\nReorganize README to move templates to end"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc35ac254a19ac29e7f3",
    "number": 673,
    "body": "Next submission will be a pull request from my own fork of the project...\n",
    "head_branch": "doc_cli_version_msg",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #673 from audreyr/doc_cli_version_msg\n\nDocuments the last undocumented function in cli.py"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc36ac254a19ac29e7f4",
    "number": 672,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Adds morepath-cookiecutter to cookiecutters list."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc37ac254a19ac29e7f5",
    "number": 670,
    "body": "An alternate take on #669 trying to get 100% coverage counting Windows specific lines, without adding new mocking tests\n",
    "head_branch": "appveyor-coverage",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #670 from ewjoachim/appveyor-coverage\n\nAsking AppVeyor to upload coverage info to codecov"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc38ac254a19ac29e7f6",
    "number": 669,
    "body": "This might look not really useful but it allows being really sure that the callback does what we think it does. For the record, this test makes coverage goes from 99.6% to 100% which is the reason I wrote it.\n",
    "head_branch": "rmtree-callback-test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc38ac254a19ac29e7f7",
    "number": 668,
    "body": "https://github.com/hzdg/cookiecutter-webpack\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add hzdg/cookiecutter-webpack to js projects\n\nhttps://github.com/hzdg/cookiecutter-webpack"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc39ac254a19ac29e7f8",
    "number": 667,
    "body": "Add [ratson/cookiecutter-es6-package](https://github.com/ratson/cookiecutter-es6-package)\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc3aac254a19ac29e7f9",
    "number": 666,
    "body": "Master rebased #400.\nFixes #389.\n\nAllows specifying or overriding variables by adding `key=value` arguments after the template.\n\nE.g.:\n\n```\n[marca@marca-mac2 test-cookiecutter-supervisor]$ cookiecutter --no-input https://github.com/msabramo/cookiecutter-supervisor.git program_name=foobar\nCloning into 'cookiecutter-supervisor'...\nremote: Counting objects: 16, done.\nremote: Compressing objects: 100% (13/13), done.\nremote: Total 16 (delta 5), reused 8 (delta 2), pack-reused 0\nUnpacking objects: 100% (16/16), done.\nChecking connectivity... done.\n\n[marca@marca-mac2 test-cookiecutter-supervisor]$ cat foobar/supervisor.conf\n[program:foobar]\nnumprocs                 = 1\nprocess_name             = %(program_name)s%(process_num)02d\nuser                     = foobaruser\ncommand                  = gunicorn --bind 0.0.0.0:$PORT --paste development.ini\nstartsecs                = 30\npriority                 = 12\nredirect_stderr          = true\nautorestart              = true\nautostart                = true\nstopwaitsecs             = 10\nstopsignal               = QUIT\ndirectory                = /opt/webapp/foobar\nstdout_logfile           = /var/log/sm/foobar-app-out.log\nstdout_logfile_maxbytes  = 10MB\nstdout_logfile_backups   = 0\nstdout_capture_maxbytes  = 1MB\nstderr_logfile           = /var/log/sm/foobar-app-err.log\nstderr_logfile_maxbytes  = 10MB\nstderr_logfile_backups   = 0\nstderr_capture_maxbytes  = 1MB\nenvironment              = NEW_RELIC_CONFIG_FILE=\"/opt/webapp/foobar/etc/newrelic.ini\"\n```\n",
    "head_branch": "extra-context-cli",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #666 from michaeljoseph/extra-context-cli\n\nThis allows specifying context as arguments"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc3bac254a19ac29e7fa",
    "number": 665,
    "body": "I put this under Python because of the tooling, but a new\nDocumentation section might be a good idea.\n",
    "head_branch": "hovercraft-slides2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Link to Hovercraft presentation projects template\n\nI put thisd under Python because of the tooling, but a new\nDocumentation section might be a good idea."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc3bac254a19ac29e7fb",
    "number": 664,
    "body": "",
    "head_branch": "readme",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "add cookiecutter-template to Python templates\n\nSigned-off-by: Eric Villard <dev@eviweb.fr>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc3cac254a19ac29e7fc",
    "number": 663,
    "body": "",
    "head_branch": "dpf-templates",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #663 from SpotlightKid/dpf-templates\n\nAdd links for cookiecutter-dpf-* templates"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc3dac254a19ac29e7fd",
    "number": 661,
    "body": "I put this under Python because of the tooling, but a new\nDocumentation section might be a good idea.\n",
    "head_branch": "hovercraft-slides",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc3eac254a19ac29e7fe",
    "number": 660,
    "body": "",
    "head_branch": "add-cookiecutter-reveal.js",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #660 from keimlink/add-cookiecutter-reveal.js\n\nAdded keimlink/cookiecutter-reveal.js"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc3fac254a19ac29e7ff",
    "number": 659,
    "body": "",
    "head_branch": "readme",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #659 from mdklatt/readme\n\nAdd cookiecutter-python-app to Python templates"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc3fac254a19ac29e800",
    "number": 658,
    "body": "Fixed many of the issues from my last attempt to get this on the list:\n- tests are working\n- documentation links correct\n",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixed Spelling"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc40ac254a19ac29e801",
    "number": 657,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #657 from tokibito/master\n\nadd cookiecutter-funkload-friendly template to python list"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc41ac254a19ac29e802",
    "number": 656,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #656 from luzfcb/patch-1\n\nfix small typo on hook error text"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc42ac254a19ac29e803",
    "number": 655,
    "body": "Resolve #595 and add tests :smile_cat: \n\nLet's get this in #610 \n",
    "head_branch": "fix-repo-urls",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc43ac254a19ac29e804",
    "number": 654,
    "body": "fixes #651 \n",
    "head_branch": "issue651",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc43ac254a19ac29e805",
    "number": 653,
    "body": ":clock1: \n",
    "head_branch": "add-jinja2-time-as-default-extension",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc44ac254a19ac29e806",
    "number": 652,
    "body": "Addresses the stack trace in #385.\n",
    "head_branch": "local-repository-not-found",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc45ac254a19ac29e807",
    "number": 650,
    "body": "`find . -name \"*.py\" | xargs chmod -x`\n",
    "head_branch": "remove-x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #650 from mozillazg/remove-x\n\nremove execute permission on .py files"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc46ac254a19ac29e808",
    "number": 648,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc47ac254a19ac29e809",
    "number": 647,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc47ac254a19ac29e80a",
    "number": 645,
    "body": "",
    "head_branch": "template/mediawiki-extension",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc48ac254a19ac29e80b",
    "number": 644,
    "body": "This is an update of https://github.com/audreyr/cookiecutter/pull/572, merging in the latest master.\n",
    "head_branch": "klortho-custom-prompt",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc49ac254a19ac29e80c",
    "number": 643,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc4aac254a19ac29e80d",
    "number": 642,
    "body": "Resolve #640 \n",
    "head_branch": "expand-config-values",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc4aac254a19ac29e80e",
    "number": 641,
    "body": "New wagtail Cookiecutter added to the Django Cookiecutters list.\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc4bac254a19ac29e80f",
    "number": 639,
    "body": "Resolve #638 \n",
    "head_branch": "set-encoding-when-reading-files-in-setup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc4cac254a19ac29e810",
    "number": 638,
    "body": "Fixes build in C locale. Otherwise I see:\n\nTraceback (most recent call last):\n  File \"setup.py\", line 24, in <module>\n    history = history_file.read().replace('.. :changelog:', '')\n  File \"/usr/pkg/lib/python3.5/encodings/ascii.py\", line 26, in decode\n    return codecs.ascii_decode(input, self.errors)[0]\nUnicodeDecodeError: 'ascii' codec can't decode byte 0xe2 in position 6348: ordinal not in range(128)\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc4dac254a19ac29e811",
    "number": 636,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc4dac254a19ac29e812",
    "number": 635,
    "body": "Added `django-starter` to the list of python-django cookiecutters.\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc4eac254a19ac29e813",
    "number": 634,
    "body": "django-starter - cookiecutter - added to the list of `python-django` cookiecutters\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc4fac254a19ac29e814",
    "number": 631,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc50ac254a19ac29e815",
    "number": 630,
    "body": "Support for current date time in prompt and generation via `{% now 'utc' %}`.\n\nPlease let me know your thoughts! :bow: \n\nRelated to #617 \n",
    "head_branch": "add-jinja2-time",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc51ac254a19ac29e816",
    "number": 626,
    "body": "https://github.com/dolphinkiss/cookiecutter-django-aws-eb\n",
    "head_branch": "django-aws-eb-template",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "adding cookiecutter-django-aws-eb (https://github.com/dolphinkiss/cookiecutter-django-aws-eb) to django cookiecutter list"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc52ac254a19ac29e817",
    "number": 624,
    "body": "I added in a minimal template for python pip installable projects that includes automated parsing of requirements files, and a fairly popular fork of sloria’s flask template that includes a bit more boilerplate, and has a blog extension in progress.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc52ac254a19ac29e818",
    "number": 623,
    "body": "fixes #517 \n\nUse temp directories instead of modifying the file system. \n\nThe tests make use of pytest's `tmpdir` fixture.  Each test works in a unique folder instead of CWD.\n### Modifications to the main `cookiecutter` module\n- `cookiecutter.config`: replaced `USER_CONFIG_PATH` and `DEFAULT_CONFIG` with function call to 'lazy load' the values\n  \n  Reasoning: part of the fix is setting the `HOME` env variable.  However, these static variables are being called in too many places before the earliest test setup function can run.  \n  \n  It could've been monkeypatched I guess, but it would've had to been patched several places--everywhere it's being used, and this seems shady.\n### Changes to the tests\n- New global setup fixture that sets `HOME` env var and changes CWD for the test to the unique test folder.\n- Improved cleanup routine, none.\n  \n  There was a ton of teardown/cleanup fixtures,  I deleted all of that.  With this setup you don't need it.   \n  \n  The concept: Each test gets a unique folder for that test.  Each time you run the tests, each of those unique folders are grouped in a folder for the run.  Pytest automatically preserves the trailing 5 test runs.\n  \n  tldr; pytest does the cleanup.\n- absolute references.\n  The problems created by using `tmpdir` and changing CWD:  references to the \"tests\" folder need to be absolute.   I created a helper function in a new file `tests.utils` called `dir_tests` to make this easier. It's just `os.join` partial.   And I basically did a search and replace  for references to the 'tests' folder.\n  \n  _Note: it was originally called `tests_dir`, which is way more conventional, but pytest was testing it._\n#### Other changes to the tests\n- removed a few gratuitous fixtures. Someone was going fixture happy :smile: \n  \n  For example, there was this one that would return a string: \"some_filename\"  And another that would use that fixture to return \"some_filename.json\".  I think there was a 3rd one that used it, I forget now.\n- In `tests.skipifmarkers`, I added `skipif_no_hg`.  I don't have hg, but I wanted passing tests; hope that's alright.\n### Tests that are still failing\n\nI need some help on these\n- [`test_cli.test_run_cookiecutter_on_overwrite_if_exists_and_replay`](https://github.com/bionikspoon/cookiecutter/blob/fix-tests-fixtures/tests/test_cli.py#L124)\n  \n  `test_cli` was the hardest thing the get working.  `click` creates its own isolated environment.  I got all of them working but this one.  Between not knowing the code base very well and the error message, I have no idea where to start.\n  \n  ``` pytb\n  >       assert result.exit_code == 0\n  E       assert -1 == 0\n  E        +  where -1 = <Result IOError(2, 'No such file or directory')>.exit_code\n  ```\n- [test_hooks](https://github.com/bionikspoon/cookiecutter/blob/fix-tests-fixtures/tests/test_hooks.py)\n  \n  This whole file hieroglyphics to me.  I tried looking at the documentation for [pytest's xunit setup](https://pytest.org/latest/xunit_setup.html) and got nowhere.  I'm wondering if you even need this test.   It looks strikingly similar to [`test_generate_hooks`](https://github.com/bionikspoon/cookiecutter/blob/fix-tests-fixtures/tests/test_generate_hooks.py).  If you do need it, does it have to use that class setup?\n### Conclusion\n\nIt's not complete.  There's a few more tests that need fixed.\n\nI know it's a bit invasive.  I thought it would be few lines here and there to fix, but it turned to be much more than that.\n\nIt does isolate the file system.  It does do what it's supposed to do. \n",
    "head_branch": "fix-tests-fixtures",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc53ac254a19ac29e819",
    "number": 622,
    "body": null,
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc54ac254a19ac29e81a",
    "number": 621,
    "body": "I wrote a YAML parser for simple files. :chicken: \n\nhttps://pypi.python.org/pypi/poyo\n\nIt should be fine for `cookiecutterrc` files and may help us overcome the troubles with **PyYAML** and **ruamel.yaml** (#557, #569). :worried: \n",
    "head_branch": "use-poyo-for-user-rc-files",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc55ac254a19ac29e81b",
    "number": 620,
    "body": "This should fix the problem described in #615.\nThe default interpreter should be the one used to run Tox (https://tox.readthedocs.org/en/latest/config.html?highlight=interpreter#confval-basepython=NAME-OR-PATH) but to be sure, set PATH to contain the correct interpreter. On Windows Tox also searches there (https://github.com/msabramo/tox/blob/master/tox/interpreters.py#L121). \n",
    "head_branch": "bug/use-correct-python-interpreter-with-tox",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc56ac254a19ac29e81c",
    "number": 618,
    "body": "Thank you for merging https://github.com/audreyr/cookiecutter-jquery/pull/2, @audreyr :bow: \n",
    "head_branch": "remove-xfail-from-test-cookiecutters",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc56ac254a19ac29e81d",
    "number": 617,
    "body": "Please see the [docs](https://github.com/audreyr/cookiecutter/compare/master...hackebrot:jinja2-extension-support?expand=1#diff-abec5659ca71b4547a2f66a5023bbc4fR377) :smile_cat: \n",
    "head_branch": "jinja2-extension-support",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc57ac254a19ac29e81e",
    "number": 616,
    "body": "I have done with the new template for the Cookiecutter:\n\nIt comes with the number of useful features (implemented via Makefile facility):\n- Management of Python virtual environments within the project:\n  - Set up which versions of Python interpreter will be used for the project\n  - Set up how a virtual environments will be created\n  - Prepare an environments according to requirement files\n- Support of the development lifecycle:\n  - Work with sources in \"development mode\"\n  - Test the project with Pytest\n  - Build the distribution package (either in wheel of tarball formats)\n  - Clean the project's directory in a Makefile-flavour::\n- Issuing of the project's documentation using Sphinx:\n  - Render documentation as a single PDF document\n- Debian packaging\n  - Configure most valuable parameters for a Debian packaging system via Makefile variables\n  - Build a Debian package containing an isolated virtual environment with installed project and all of the project's requirements\n  - Build a Debian package containing a prefix-based installation of the\n    project\n",
    "head_branch": "axk-add-new-python-template",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc58ac254a19ac29e81f",
    "number": 614,
    "body": "The maintenance of this package has moved to the new location.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc59ac254a19ac29e820",
    "number": 613,
    "body": "Complement #598 \n\nRelated to #610 \n",
    "head_branch": "strict-env-in-prompt",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc5aac254a19ac29e821",
    "number": 612,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc5aac254a19ac29e822",
    "number": 611,
    "body": "The documentation follows the following outline (#600):\n- basic usage describing how to use choice variables in templates\n- providing default values using `.cookiecutterrc`\n",
    "head_branch": "docs/choice-variables",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc5bac254a19ac29e823",
    "number": 609,
    "body": "Resolve #606 \n",
    "head_branch": "drop-disutils-support",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc5cac254a19ac29e824",
    "number": 608,
    "body": "Fix #607 \n",
    "head_branch": "close-file-handle",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc5dac254a19ac29e825",
    "number": 604,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc5eac254a19ac29e826",
    "number": 603,
    "body": "This PR rewrites any test that relies on network access and as such is likely to fail due to outdated reference templates or connectivity issues (see #599).\n\nPlease note that the new tests **DO** use mocks.\n\nI would appreciate a thorough review and look forward to your feedback.Thanks :bow: \n\nResolve #434 \n",
    "head_branch": "remove-external-deps-from-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #603 from hackebrot/remove-external-deps-from-tests\n\nRemove external deps from tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc5eac254a19ac29e827",
    "number": 602,
    "body": "fix #599 appveyor issues\nWhen GIT is invoked within a new virtualenv\nit fails as it cant find the correct ca-bundle.\nTo ensure it finds the right file we set the\nconfiguration beforehand.\n",
    "head_branch": "bug/issue-599-test-that-require-git-break-on-appveyor",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc5fac254a19ac29e828",
    "number": 601,
    "body": "I noticed that travis runs all of the tests (and they pass!) although we use skipif markers to skip certain tests for CI.\n\nThis PR makes sure that the tox testenvs do get the system environment variables `TRAVIS` and `APPVEYOR` so that the skipifs work as expected.\n\nThis is related to #599 \n",
    "head_branch": "extend-and-fix-skipif-markers",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc60ac254a19ac29e829",
    "number": 598,
    "body": "- This PR changes the jinja2 environment to raise an error if cookiecutter tries to render a template that contains an undefined variable.\n- It also improves the overall robustness of the generation as we do solely create templates via the our configured environment (previously jinja2 tried to create an [environment on-the-fly](https://github.com/mitsuhiko/jinja2/blob/master/jinja2/environment.py#L919))\n- Cookiecutter now exists with a user-friendly warning for invalid directory names, file names and files that contain undefined variables\n\n``` no-highlight\nUnable to create project directory '{{cookiecutter.project_slug}}'.\nError message: 'dict object' has no attribute 'project_slug'.\nContext: {u'cookiecutter': {u'project_name': u'Fake Project Templated', u'project_short_description': u'This is a fake project.', u'year': u'2013', u'release_date': u'2013-07-28', u'version': u'0.1', u'full_name': u'Raphael Pierzina', u'github_username': u'hackebrot', u'email': u'raphael@hackebrot.de', u'repo_name': u'fake-project-templated'}}\n```\n\nResolve #111\nResolve #586 \nClose #592 \n",
    "head_branch": "strict-jinja-environment",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc61ac254a19ac29e82a",
    "number": 597,
    "body": "Address the **feature/bug** discussed in #571.\n\n---\n\nVariables which are not specified in **cookiecutter.json** are added to the context unless the according flag (`known_only=True`) is set for `generate.apply_overwrites_to_context()`.\n\nThe rationale of 8f082981fdcb3d1138d2962de88622006070ae91 was to **not** prompt the user for variables which are not declared in **cookiecutter.json** but injected via default context, as the template most probably doesn't use them.\n\nThis is different for extra context though, as it needs to be specified on every single invocation of cookiecutter.\n\nFeedback is greatly appreciated! Thanks :bow: \n\ncc @danielsamuels @pydanny\n\n---\n\nImagine the following **cookiecutter.json**:\n\n``` json\n{\n    \"github_username\": \"hackebrot\",\n    \"plugin_name\": \"foobar\"\n}\n```\n\nA user config file **~/.cookiecutterrc**:\n\n```\ndefault_context:\n    github_username: \"pydanny\"\n    foo: \"bar\"\n```\n\nNow if we specify extra context using the Python API:\n\n``` python\nextra_context = {\n    'unknown_in_extra': 'helloworld'\n}\n```\n\nThe context will look as follows (before user cli overwrites):\n\n``` json\n{\n    \"github_username\": \"pydanny\",\n    \"plugin_name\": \"foobar\",\n    \"unknown_in_extra\": \"helloworld\"\n}\n```\n\nPlease note that the user will be prompted for `unknown_in_extra`!\n",
    "head_branch": "include-unknown-extra-variables",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc62ac254a19ac29e82b",
    "number": 595,
    "body": "The documentation said that you could do git+https:// or git+ssh:// but that was not, in fact, true.\n",
    "head_branch": "fix-repo-urls",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc62ac254a19ac29e82c",
    "number": 594,
    "body": "Change the signature of both `replay.load` and `replay.dump` to require a replay directory opposed to retrieving it from `config.get_user_config()`.\n\nResolve #590 \n",
    "head_branch": "pass-user-config-to-replay",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc63ac254a19ac29e82d",
    "number": 593,
    "body": "https://github.com/mishbahr/cookiecutter-djangocms-plugin returns 404\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc64ac254a19ac29e82e",
    "number": 592,
    "body": "Fixes #586\n",
    "head_branch": "undefined-path-variables",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc65ac254a19ac29e82f",
    "number": 591,
    "body": "This pull request will allow a user to provide a hooks structure such as this:\n\n```\nhooks/\n    pre_gen_project.py\n    pre_gen_project.sh\n```\n\nand have both of those scripts run at the usual point at which a hook is run. This allows a user to combine different script types to achieve their desired project state.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc66ac254a19ac29e830",
    "number": 588,
    "body": "Fixes #587\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc66ac254a19ac29e831",
    "number": 583,
    "body": "Resolve #564 \n\nFYI @eliasdorneles: I copied your doc changes of #562 to the according docs file, so they will be properly generated via `make docs`.\n",
    "head_branch": "update-docs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc67ac254a19ac29e832",
    "number": 582,
    "body": "Enables us to use `bumpversion minor` to lower the risk of missing a version var. :relaxed: \n",
    "head_branch": "set-up-bumpversion",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc68ac254a19ac29e833",
    "number": 580,
    "body": "Resolve #579 \n",
    "head_branch": "test-run-hook-from-repo-dir",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc69ac254a19ac29e834",
    "number": 578,
    "body": "Fixes #577.\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc69ac254a19ac29e835",
    "number": 576,
    "body": ":heart_eyes: :icecream:\n",
    "head_branch": "add-support-section-to-readme",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc6aac254a19ac29e836",
    "number": 575,
    "body": "WIP :raised_hand:\n\nSimple regex parser implementation for [user configs](https://cookiecutter.readthedocs.org/en/latest/advanced_usage.html#user-config-0-7-0) to replace **PyYAML AND ruamel.yaml**. Users on various platforms and Python versions seem to encounter various problems with both libs when installing **Cookiecutter**, which is a huge problem (see #557 :worried: ).\n\nPlease let me know your thoughts!\n\n(Related to #568)\n",
    "head_branch": "drop-yaml-libs-use-custom-parser",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc6bac254a19ac29e837",
    "number": 574,
    "body": "Pytest bug fixed by @nicoddemus via https://github.com/pytest-dev/pytest/pull/865\n",
    "head_branch": "correct-skip-if-reasons",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc6cac254a19ac29e838",
    "number": 573,
    "body": "Quick fix to handle an extra trailing slash on the template url.\n\nFix issue #546.\n",
    "head_branch": "issue_546",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc6dac254a19ac29e839",
    "number": 572,
    "body": "This is an extremely lightweight implementation of custom prompts. It uses an extra `_prompt` key in the json data structure that collects all custom prompts. For example,\n\n```\n{\n    \"full_name\": \"Audrey Roy\",\n    \"email\": \"audreyr@gmail.com\",\n    \"project_name\": \"Complexity\",\n    \"_prompt\": {\n        \"full_name\": \"your full name\",\n        \"email\": \"email address\",\n    }\n}\n```\n\nKeys that do not define a custom prompt use the default (i.e., the keyname).\n\nThe implementation in this patch is an alternative solution to issue #30 than the one provided by pull requests #360 #513, or #173. Its benefit is that it requires minimal change to the code, and is fully compatible with the existing json data structure.\n\nIf there is interest in merging this request in lieu of more fundamental rewrites of the `cookiecutter.json` file format, I could add further documentation and testing.\n",
    "head_branch": "custom-prompt",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc6dac254a19ac29e83a",
    "number": 568,
    "body": "Related to #557\n\ncc @ionelmc \n",
    "head_branch": "fix-conditional-win-dep-in-setup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc6eac254a19ac29e83b",
    "number": 567,
    "body": "This PR will make sure cookiecutter is tested against x86 and x86-64 architecture interpreters on appveyor. The idea was to catch problems if a dependency fails to install on either architecture, like #557. \n\nThis only changes testing on appveyor, as I am not sure whether this is possible on travis-ci without installing the corresponding interpreter from source and without changing `tox.ini`. \nMaybe someone has some insight on this, I am not sure I can have a look at it anytime soon. \n\nDoes this make sense, or is it better to leave the current testing as it is, to make sure testing is identical on both buildservers? \n\nShould documentation be updated? \n",
    "head_branch": "feat/test-all-platforms-on-appveyor",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc6fac254a19ac29e83c",
    "number": 566,
    "body": "…tters\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc70ac254a19ac29e83d",
    "number": 565,
    "body": "Retrieve the user config file from a custom location via:\n\n`$ cookiecutter --config /home/audreyr/my-custom-config.yaml cookiecutter-pypackage`\n\nor\n\n`$ export COOKIECUTTER_CONFIG=/home/audreyr/my-custom-config.yaml`\n\n**`--config` takes precedence over `COOKIECUTTER_CONFIG` over `~/.cookiecutterrc`.**\n\nClose #424, close #258 cc @jhermann @pfmoore \n",
    "head_branch": "specify-user-config-file",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc71ac254a19ac29e83e",
    "number": 563,
    "body": "Fixes #492.\nAdds support for `cookiecutter -h` and `cookiecutter help`.\nTo address `cookiecutter` we'd need to override `click`'s validation of the required `template` argument.\n",
    "head_branch": "cli-help",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc71ac254a19ac29e83f",
    "number": 562,
    "body": "I get annoyed when there is a too long feedback cycle between writing the docs and seeing the change applied. This PR is about fixing that. :)\n\nSummary of changes:\n- use ReadTheDocs theme to build the documentation locally, to make it look like it [the official one](http://cookiecutter.readthedocs.org/)\n- add a `make servedocs` target that uses `watchmedo` (from watchdog) to watch for changes in the doc files and recompile as needed\n- use portable way of opening browser (`open` is Mac-only and fails in my Linux box)\n- add `docs/requirements.txt` with needed dependencies\n- add note in contributing docs recommending this workflow\n\nDoes this look good?\n",
    "head_branch": "improvements-to-docs-workflow",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc72ac254a19ac29e840",
    "number": 560,
    "body": "A template for building plugins for the 3D printer server OctoPrint.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc73ac254a19ac29e841",
    "number": 558,
    "body": "Even if this passes Appveyor/Travis tests, please do not merge this in yet as we're still in the process of testing this fix across several local Windows machines.\n\nTo install via pip (for testers):\n\n`pip install git+ssh://git@github.com/audreyr/cookiecutter.git@ruamel-yaml-557#egg=cookiecutter`\n",
    "head_branch": "ruamel-yaml-557",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc74ac254a19ac29e842",
    "number": 556,
    "body": "It's deprecated and I rather not have people waster their time visiting that project page.\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc75ac254a19ac29e843",
    "number": 555,
    "body": "So, this fixes the tests depending on the the default project name of cookiecutter-pypackage in master -- which changed in the last few commits.\n",
    "head_branch": "fix-tests-using-ck-pypackage",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc75ac254a19ac29e844",
    "number": 554,
    "body": "The idea for this PR, is that cookiecutter can offer some utils that templates can use for executing some common post (or pre?) setup tasks with a minimum of work. Currently setting up virtualenvs is the only added hook utility.\n\nThe rationale for this is that templates can't require dependencies, so having code in a hook that depends on something gets much more difficult when there is no cookiecutter support. \n\nI can imagine having a small number of useful utilities like this to make life easier for template authors. The utils let the developer avoid repeating the same code in various templates. Unless they are needed, they sit harmlessly out of the way, except for required dependencies, which would get pulled when installing cookiecutter. This last thing could be considered a point against this approach.\n",
    "head_branch": "cguardia/hook-utils",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc76ac254a19ac29e845",
    "number": 553,
    "body": "This PR changes `generate_files` to return the rendered project directory instead of None.\n\nBy doing this we _(I am working on best-practices for template testing atm :squirrel:)_ enable a caller to write tests in a convenient and yet simple way with minimal changes to **Cookiecutter** itself.\n\nPlease let me know your thoughts! :bow: \n",
    "head_branch": "return-rendered-project-dir",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc77ac254a19ac29e846",
    "number": 551,
    "body": "... or to remember lazy ssh url\n\nSolution: add ssh@gh to the list of default abbreviations, which expands\nto ssh url for github. cookiecutter ssh@gh:foo/bar no longer asks for\nusername or password.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc78ac254a19ac29e847",
    "number": 550,
    "body": "When running tests without installing cookiecutter, some of them fail\nbecause they try to invoke cookiecutter. Moreover, if cookiecutter is\ninstalled on the system, the tests would use the installed version\ninstead of the one in the build tree.\n\nTo solve both issues, use `python -m cookiecutter.cli` instead of\n`cookiecutter`.\n\nI know that the official way of testing is using tox, but in some cases, tox is not usable because it requires a network access.\n",
    "head_branch": "fix/test-without-installing",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc79ac254a19ac29e848",
    "number": 549,
    "body": "Hey folks,\n\nWould this be an adequate solution to address issue #464 ?\n\nMy use case is handling an invalid package name (see https://github.com/audreyr/cookiecutter-pypackage/issues/6)\n\nThis proposal will stop the project generation if the pre hook script returns with an exit status different from 0 (indicating success).\n\nWith this proposal, we'd be able to handle that case with a `pre_gen_project` hook script like:\n\n```\nimport re, sys\n\nPACKAGE_REGEX = r'^[_a-zA-Z][_a-zA-Z0-9]+$'\n\nrepo_name = '{{ cookiecutter.repo_name }}'\nif not re.match(PACKAGE_REGEX, repo_name):\n    print('ERROR: %s is not a valid package name!' % repo_name)\n    sys.exit(1)\n```\n\nThoughts?\n",
    "head_branch": "stop-build-if-pre-hook-fails",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc7aac254a19ac29e849",
    "number": 548,
    "body": "If the default value of an entry in `cookiecutter.json` is a boolean then preserve further user input as boolean using read_user_yes_no.\n\nFor example, the json:\n\n``` json\n{\n    \"is_foo\": true\n}\n```\n\nwould result in a prompt like\n\n``` sh\nis_foo [True]:\n```\n\nThen if a user input \"false\", \"False\", \"n\", etc it would result in a False value in python.\n\nFixes #126\n",
    "head_branch": "bool-config",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc7aac254a19ac29e84a",
    "number": 542,
    "body": "This PR makes sure to factor in choice variables in templates when using a user config or extra context.\n\nInstead of replacing the list, it will set the _overwrite_ value as the new default for the choice variable.\n\nPlease note that 8f08298 slightly changes the current behavior as it ignores variables which are not used in the template as opposed to `dict.update({})`.\n\nResolve #536 \n",
    "head_branch": "choice-with-default-in-user-config",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc7bac254a19ac29e84b",
    "number": 540,
    "body": "Please See travis-ci/travis-ci#4794 \nIt looks like they wont change anything on their build image soon. This is why I changed the base python version for the travis build job to 3.5, which simply downloads python 3.5 as long as it is not installed (https://travis-ci.org/audreyr/cookiecutter/jobs/82566099).\n",
    "head_branch": "feat/py35-on-travis",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc7cac254a19ac29e84c",
    "number": 539,
    "body": "Resolve #535 \n",
    "head_branch": "increase-development-status",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc7dac254a19ac29e84d",
    "number": 538,
    "body": "Resolve #534 \n",
    "head_branch": "update-readme-to-point-users-to-gitter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc7eac254a19ac29e84e",
    "number": 533,
    "body": "",
    "head_branch": "add-cookiecutter-wagtail",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc7eac254a19ac29e84f",
    "number": 532,
    "body": "This PR changes the regex for `is_repo_url` as local windows paths seemed to be mistaken for remote urls, see #531. :cry: \n\nhttps://ci.appveyor.com/project/audreyr/cookiecutter/build/1.0.656/job/9vjf6xlxxx4sfvj4\n",
    "head_branch": "fix-is-repo-url-for-win-path",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc7fac254a19ac29e850",
    "number": 531,
    "body": "Continue the work of @tony to add support for specifying the output directory (resolve #452).\n\nI also added an according cli option:\n\n``` bash\n$ cookiecutter -o tmp/foobar gh:hackebrot/cookiedozer\n```\n\nor\n\n``` bash\n$ cookiecutter --output-dir tmp/foobar gh:hackebrot/cookiedozer\n```\n\nYou can also use the Python API via:\n\n``` python\nfrom cookiecutter import main\nmain('gh:hackebrot/cookiedozer', output_dir='tmp/foobar')\n```\n\nI also think it would be great to include this in the upcoming **Cookiecutter 1.1.0** release (#530).\n\n_Please note that I did not include the changes to existing tests of #452._\n\ncc @tony, @cabello, @jefftriplett and @davedash \n",
    "head_branch": "specify-output-dir",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc80ac254a19ac29e851",
    "number": 529,
    "body": "Remove `compat.py` and use [future](https://pypi.python.org/pypi/future) for `basestring` and `iteritems`.\n\nResolve #298 with regards to #438. Also resolve #301 cc @michaeljoseph @pydanny \n",
    "head_branch": "use-future-instead-of-custom-compat",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc81ac254a19ac29e852",
    "number": 528,
    "body": "Merge @vaab's changes  and extend the corresponding test.\n\nResolve #378 \n",
    "head_branch": "increase-yaml-error-verbosity",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc82ac254a19ac29e853",
    "number": 527,
    "body": "# Preq\n\nCurrently my box is windows 10 with git bash (not the newest version), ConEmu (as a wrapper to make git bash look good), virtualenvwrapper and git-flow. \n# Desc\n\nWhen testing locally with tox, I noticed that after all tests ran a leftover directory named \"~\" persists in my cookiecutter directory. \n\n```\nrepo/cookiecutter\n                |\n                - ~/\n                |\n                - tests/\n                |\n                - cookiecutter/\n                |\n                - setup.py\n                |\n                - ...\n```\n\nI guess there are multiple tests responsible for this, but I nailed down one test, that reproduces the bug on my machine. \n\n`tox -e py34 -r  -- tests/test_cookiecutter_local_no_input.py::test_cookiecutter_no_input_extra_context`\n\nIt can be reproduced on all Python versions supported. I wasn't sure what the problem is as it does not seem to happen on unix machines and I am still not sure if this is a problem of my environment setup, but throwing in some debugging statements one can find this: \n\n``` python\n> c:\\users\\maiksen\\repos\\cookiecutter\\cookiecutter\\config.py(65)get_user_config()\n-> return copy.copy(DEFAULT_CONFIG)\n(Pdb) l\n 60         # TODO: test on windows...\n 61         USER_CONFIG_PATH = os.path.expanduser('~/.cookiecutterrc')\n 62\n 63         if os.path.exists(USER_CONFIG_PATH):\n 64             return get_config(USER_CONFIG_PATH)\n 65  ->     return copy.copy(DEFAULT_CONFIG)\n[EOF]\n(Pdb) step\n--Call--\n> c:\\python27\\lib\\copy.py(66)copy()\n-> def copy(x):\n(Pdb) args\nx = {u'cookiecutters_dir': u'~/.cookiecutters/', u'replay_dir': u'~/.cookiecutter_replay/', u'default_context': {}}\n(Pdb)\n```\n\nwhere you can see, that no directory got expanded correctly. I also debugged expanduser and it cant find a variable for the mapping to my home. \nI guess this is due to the fact, that tox uses a sandboxed cmd without any `HOME` / `HOMEDIR` variables set. On unix this aint a problem as '~' always leads to the current home, no matter how minimal or sandboxed a shell environment is. \nOn windows though, without a `HOME` set, this leads `os.path.expanduser` to expand '~' to '~', which is relative to the root of cookiecutter. \nA fix is to pass `HOME` with tox. I already tested it locally, which seems to work. I would love for people to also test this locally on their machines to ensure this does not cause any strange behaviours on unix machines. \n",
    "head_branch": "bug/expanduser-bad-behaviour-on-windows-with-tox",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc82ac254a19ac29e854",
    "number": 525,
    "body": "This PR adds a link to the [PyPA Code of Conduct](https://www.pypa.io/en/latest/code-of-conduct/) to our readme.\n",
    "head_branch": "add-code-of-conduct",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc83ac254a19ac29e855",
    "number": 523,
    "body": "Removed explicit version enforcement as discussed in #518. \n",
    "head_branch": "feat/appveyor-remove-explicit-python-version",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc84ac254a19ac29e856",
    "number": 522,
    "body": "Python 3.5 is out and we don't seem to have any incompatibilities :rocket: \n",
    "head_branch": "enable-python-35",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc85ac254a19ac29e857",
    "number": 521,
    "body": "",
    "head_branch": "feat-cookiecutter-es6-boilerplate",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc86ac254a19ac29e858",
    "number": 520,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc86ac254a19ac29e859",
    "number": 519,
    "body": "This PR extend the `flake8` testenv to also validate the `tests` subdir as well as `setup.py`. :triumph: \n",
    "head_branch": "extend-flake8-checks",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc87ac254a19ac29e85a",
    "number": 516,
    "body": "Re-opened to avoid littering the commit log.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc88ac254a19ac29e85b",
    "number": 515,
    "body": "Make sure that `ensure_dir_is_templated` raises a `NonTemplatedInputDirException`. :smiley_cat: \n",
    "head_branch": "test-ensure-dir-is-templated",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc89ac254a19ac29e85c",
    "number": 514,
    "body": "I just created a new CC template, if you'd like to add it.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc8aac254a19ac29e85d",
    "number": 513,
    "body": "The Option class allows for customising the prompt displayed when asking for user input, as well as opening up future possibilities of more complicated features, such as type conversion and validation.\n\nThe tests and documentation have not yet been updated. I would like to discuss this proposal further before investing the time to change the tests.\n\nThe new JSON syntax is backwards compatible with the old syntax, but adds some new features, most of which are covered in the sample `cookiecutter.json` below:\n\n``` json\n{\n    \"old_style_string\": \"with default\",\n    \"old_style_choice\": [\"choice\", \"list\"],\n    \"project_name\": {\n        \"prompt\": \"Project name\"\n    },\n    \"repo_name\": {\n        \"prompt\": \"The name of the git repository on Github, Bitbucket, etc\",\n        \"default\": \"{{ cookiecutter.project_name|lower|replace(' ', '-') }}\"\n    },\n    \"pkg_name\": {\n        \"prompt\": \"The name of the Python package\",\n        \"default\": \"{{ cookiecutter.repo_name|replace('-', '') }}\"\n    },\n    \"port\": {\n        \"prompt\": \"Default port number\",\n        \"default\": 8000,\n        \"type\": \"int\",\n        \"min\": 1024,\n        \"max\": 65530\n    },\n    \"license\": {\n        \"prompt\": \"License\",\n        \"choices\": [\"BSD\", \"GPL\", \"MIT\", \"Apache\", \"CC\"],\n        \"type\": \"choice\"\n    }\n}\n```\n\nAt this point, I have only committed a basic `StringOption` and `ChoiceOption`, to cover the old functionality. I have made an `IntOption` as well though, for testing. It converts its input to an integer, and can validate that it is within a certain range. It is used in the example above, and its implementation is below:\n\n``` python\n@option_types.register\nclass IntOption(Option):\n    type_name = 'int'\n\n    def __init__(self, min=None, max=None, **kwargs):\n        self.min = min\n        self.max = max\n        super(IntOption, self).__init__(**kwargs)\n\n    def clean(self, value):\n        value = super(IntOption, self).clean(value)\n\n        try:\n            value = int(value)\n        except ValueError:\n            raise ValidationException('\"{0}\" is not a valid integer'.format(value))\n\n        if self.min is not None and value < self.min:\n            raise ValidationException('The value must be greater than {0}'.format(\n                self.min))\n\n        if self.max is not None and value > self.max:\n            raise ValidationException('The value must be less than than {0}'.format(\n                self.max))\n\n        return value\n```\n\nWhat do you think?\n",
    "head_branch": "options",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc8aac254a19ac29e85e",
    "number": 508,
    "body": "This will export tox environment variables such as py27, py33, ... to codecov. Codecov will then show these variables when an individual travis build run is selected. This is very handy to see what environment is selected, when a individual environment is selected for coverage results instead of the unified results. Here is an example how this looks in the UI for this PR: https://codecov.io/github/audreyr/cookiecutter?ref=533143d96a2a879b69689ca30b83593fcd7cb7fb&build=1051.2\n",
    "head_branch": "add-env-vars-to-codecov",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc8bac254a19ac29e85f",
    "number": 507,
    "body": "I grew a bit impatient and rebased #495.\n\nIt should have the positional argument also fixed.\n",
    "head_branch": "rebase-pr-495",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc8cac254a19ac29e860",
    "number": 506,
    "body": "Make use of `click.version_option` without changing the current prompt.\n\nThis PR also adds a test for the `--version` cli option.\n\nBased on the feedback to #489.\n",
    "head_branch": "use-click-version",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc8dac254a19ac29e861",
    "number": 503,
    "body": "The reason are explained in this thread:\n https://github.com/PythonCharmers/python-future/issues/22\n\nJust remove unicode_literals from `cookiecutter/cli.py` as it is the\nfirst use of click. However, it should also be removed from\n`cookiecutter/prompt.py`.\n",
    "head_branch": "fix/click-5-unicode",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc8eac254a19ac29e862",
    "number": 501,
    "body": "This PR adds a great feature to **Cookiecutter**! :smile_cat: \n\nUsers can now _replay_ their previous invocation without being prompted for input again by adding `--replay` on the cli or setting the according kwarg when using the api. This feature is comes in handy if you want to create a new project from an updated template. Cookiecutter now dumps a json  to `~/.cookiecutter_replay/` when you call it (it overwrites per name).\n\n``` bash\n[raphael@hackebook ~]$ tree .cookiecutter_replay/\n.cookiecutter_replay/\n├── cookiecutter-django.json\n└── cookiedozer.git.json\n```\n\nCookiecutter uses these _replay files_ if you pass the aforementioned cli option.\n\n@ionelmc and I had a chat on this feature at EuroPython, so I decided to spend some time on it. \n\n**Note**: I am going to update this PR in the upcoming days with an according section in our advanced usage docs.\n\nPlease let me know your thoughts! Any feedback is welcome :bow: \n",
    "head_branch": "add-replay-feature",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc8eac254a19ac29e863",
    "number": 500,
    "body": "Template for Sublime Text 3 plugin.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc8fac254a19ac29e864",
    "number": 499,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc90ac254a19ac29e865",
    "number": 498,
    "body": "Fixes #111.\n",
    "head_branch": "raise_exception_for_undefined_variables",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc91ac254a19ac29e866",
    "number": 496,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc92ac254a19ac29e867",
    "number": 495,
    "body": "Fix issue #493 and allow the user to alter the default behaviour\nbehaviour of not overwriting the contents of the output directory\nif it already exists. Fix issue #475 by removing the conflicting\nuse of 'fail_if_exists' arguments and refactoring it.\n",
    "head_branch": "add_flag_for_overwriting_output_dir",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc92ac254a19ac29e868",
    "number": 494,
    "body": ":cookie: \n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc93ac254a19ac29e869",
    "number": 490,
    "body": "",
    "head_branch": "ca/better_repo_handling",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc94ac254a19ac29e86a",
    "number": 489,
    "body": "This PR makes use of **clicks** feature of printing the package version. It will not break the current format though.\n\n```\nCookiecutter 1.0.0 from /Users/raphael/hackebrot/cookiecutter (Python 2.7)\n```\n\nIf you agree on the following **click** default message, I'll get rid of `version_msg` altogether:\n\n```\ncookiecutter, version 1.0.0\n```\n",
    "head_branch": "leverage-click-version-option",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc95ac254a19ac29e86b",
    "number": 487,
    "body": "This PR adds very basic tests for the cli invocation for cookiecutter introduced in #449.\n\nAlbeit not strictly required, I'd prefer to have a bit of coverage for this. :no_mouth: \n\nPlease let me know your thoughts @vincentbernat @pydanny :bow:\n",
    "head_branch": "add-tests-for-cli-invocation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc96ac254a19ac29e86c",
    "number": 485,
    "body": "I removed `compat.is_exe` as I couldn't find any usage of it.\n\nNamed method was added in 96f04209 by @pydanny and used in `which` back then. The latest changes to the surrounding code seem to be 9927cfec.\n\nAny feedback is highly appreciated! Ty :bow: \n",
    "head_branch": "remove-unused-is-exe",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc97ac254a19ac29e86d",
    "number": 484,
    "body": "This PR adds tests to cover `vcs.identify_repo`.\n\nI think we should try to come up with a better solution rather than simple string analysis to detect repo types in the long run though. Any ideas? We could at least have a regex that validates if we are dealing with a **valid** bitbucket or github link.\n\nFor instance:\n\n``` bash\ncookiecutter https://gitfoo\n```\n\ncauses\n\n``` bash\n...\nsubprocess.CalledProcessError: Command '[u'git', u'clone', u'https://gitfoo']' returned non-zero exit status 128\n```\n\n:worried: \n",
    "head_branch": "implement-tests-for-identify-repo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc97ac254a19ac29e86e",
    "number": 483,
    "body": "This PR fixes all of the `flake8` issues that I discovered while working on #480.\n\nOnce we got both merged, I will enable `flake8` checks for the tests dir in addition to the `cookiecutter` package in `tox.ini`. :triumph: \n\ncc @michaeljoseph \n",
    "head_branch": "fix-flake8-in-tests-dir",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc98ac254a19ac29e86f",
    "number": 482,
    "body": "Looking into the travis logs I saw a hint, that we are running on a legacy infrastructure. This PR should enable the new travis features according to the doc below:\n\nhttp://docs.travis-ci.com/user/migrating-from-legacy/?utm_source=legacy-notice&utm_medium=banner&utm_campaign=legacy-upgrade\n",
    "head_branch": "migrate-to-new-travis-infrastructure",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc99ac254a19ac29e870",
    "number": 481,
    "body": "Template for authoring [pytest](http://pytest.org/latest/) plugins with ease :smirk_cat: \n",
    "head_branch": "add-cookiecutter-pytest-plugin",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc9aac254a19ac29e871",
    "number": 480,
    "body": "This PR introduces a better way of running the test suite. Instead of setting up a `TestCommand` in `setup.py` it leaves the dependency management for testing to `tox`. As a consequence I also removed `mock` from `compat.py` and `setup.py`. From what I know, it was solely used in tests (and `grep` did not report anything else).\n\nThe steps to run the test suite are as follows:\n\n``` bash\n$ git clone https://github.com/audreyr/cookiecutter.git\n$ cd cookiecutter/\n$ mkvirtualenv -a $(pwd) cookiecutter\n$ python setup.py develop\n\n$ pip install tox\n$ tox\n```\n\nI updated the contributor docs to reflect this behavior, which fixes #466.\n\nPlease let me know your thoughts!\n\nBest\nRaphael\n",
    "head_branch": "remove-test-command-in-favor-of-tox",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc9bac254a19ac29e872",
    "number": 476,
    "body": "",
    "head_branch": "wagtail-cookiecutter-foundation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc9bac254a19ac29e873",
    "number": 473,
    "body": "Addresses #472\n",
    "head_branch": "upgrade-click-to-4.0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc9cac254a19ac29e874",
    "number": 471,
    "body": "Fix issue #470 by erroring out if the project output directory\nexists. This will prevent cookiecutter from writing into the existing directories like it does now.\n",
    "head_branch": "470-error-out-if-project-output-dir-exists",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc9dac254a19ac29e875",
    "number": 469,
    "body": "Adding my link here, if that's acceptable, as I think this project aligns with a few others (notably django-cookiecutter), but does the rendering and CLI stuff directly, similar to yours, with a few exceptions (notably inflection, and model type inferences).\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc9eac254a19ac29e876",
    "number": 468,
    "body": "Would introduce a better overview, as a lot of py cookies are made for django fans? :-)\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dc9fac254a19ac29e877",
    "number": 465,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dca0ac254a19ac29e878",
    "number": 463,
    "body": "This allows to use the following (in the cookiecutter-django template):\n\n```\n-    \"now\": \"2015/01/13\",\n-    \"year\": \"{{ cookiecutter.now[:4] }}\",\n+    \"year\": \"{{ cookiecutter._now.strftime('%Y-%m-%d') }}\",\n```\n\nUsing a datetime object (instead of a formatted string) makes it more\nflexible for different use cases.\n\nThis addresses #154 and #155 (which I've found after doing this patch).\n\nUsing the approach from #155 might be better (providing `strftime`).\nIt is mentioned in the docs: https://cookiecutter.readthedocs.org/en/latest/advanced_usage.html#example-injecting-a-timestamp\n",
    "head_branch": "provide-now",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dca0ac254a19ac29e879",
    "number": 460,
    "body": "Hi, let me know if you see any issues with my adding this cookiecutter project.\n",
    "head_branch": "add_csharp_to_obj_cookiecutter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dca1ac254a19ac29e87a",
    "number": 457,
    "body": "I'm not the flask-foundation author, but I found it useful.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dca2ac254a19ac29e87b",
    "number": 455,
    "body": "This PR introduces new functions for prompting the user for input. I decided to let [click](https://github.com/mitsuhiko/click) handle all the compatibility matters and go with its prompt display as I like it better than what we used to have. :smiley: \n\nAdditionally this PR also provides support for list variables (resolves #441).\n\nPlease thoroughly review my changes as I touched some core functions and I want to be certain I did not break anything. :exclamation: Feel free to use https://github.com/hackebrot/cookiecutter-kivy/commit/58d2aa91e819508e99f385316e679a26411c883e for manual testing of the new prompts as well as choices support.\n\nVery much looking forward to your feedback. :bow: \n\n``` bash\n(cookiecutter)[raph@imac hackebrot]$ cookiecutter cookiecutter-kivy/\nfull_name [Raphael Pierzina]: Testing Goat\ngithub_username [hackebrot]: \nproject_name [Kivy Project]: Foo Bar      \nrepo_name [foobar]: \nproject_short_description [Cookiecutter template kivy apps.]: Testing Choices\nrelease_date [2014-05-15]: 2015-05-25 \nyear [2014]: 2015\nversion [0.1.0]: \nminimum_kivy_version [1.8.0]: 1.9.0\nSelect orientation:\n1 - all\n2 - landscape\n3 - portrait\nChoose from 1, 2, 3 [1]: 2\n(cookiecutter)[raph@imac hackebrot]$ \n```\n",
    "head_branch": "click-style-prompts-and-choices",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dca3ac254a19ac29e87c",
    "number": 454,
    "body": "Permission denied when `git clone git@github.com:audreyr/cookiecutter-pypackage.git`\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dca4ac254a19ac29e87d",
    "number": 453,
    "body": "This PR solves a problem with our setup of `tox` and `click` which is explained in great detail over https://gist.github.com/hackebrot/937245251887197ef542\n\nI implement a simple test for PY3 to make sure we keep the new setting in `tox.ini` that comes with this PR. If anyone ever experiences a similar problem with our setup, we should have a good starting point to investigate, I think.\n\nTests are passing now on Mac OS X as well as Ubuntu Trusty Tahr.\n\nMany thanks to @audreyr @pydanny @goodwillcoding and @ionelmc who eventually pointed me into the right direction. :bow: \n",
    "head_branch": "fix-encoding-for-latest-tox",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dca5ac254a19ac29e87e",
    "number": 452,
    "body": "Need this for a cookiecutter project that's tested using [python api](http://cookiecutter.readthedocs.org/en/latest/advanced_usage.html#calling-cookiecutter-functions-from-python).\n\nAlso parametrize output_dir tests and add testcase for cookiecutter python object.\n",
    "head_branch": "output_dir",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dca5ac254a19ac29e87f",
    "number": 451,
    "body": "This PR removes `read_response` from `compat.py` in favor of a re-implementation using [click.prompt](http://click.pocoo.org/4/api/#click.prompt).\n\nI wrote a simple test to make sure that `click.prompt` is being called with the correct arguments so that it mimics the current prompting scheme by leaving the actual prompt generation to `prompt_for_config`.\n\nI will submit another request to change `query_yes_no` and to introduce the choices feature of #441 (and close #443). \n\nPlease let me know your thoughts. :smile: \n",
    "head_branch": "prompt-using-click",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dca6ac254a19ac29e880",
    "number": 449,
    "body": "Without even installing cookiecutter, a user can run it with `python -m\ncookieclutter.cli`.\n\nAnother option would be to allow `python -m cookieclutter` directly.\n",
    "head_branch": "feature/run-python--m",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dca7ac254a19ac29e881",
    "number": 448,
    "body": "Hello, \n\nI created another flask project template, with more out of the box features, but different project structure (that is why I didn't made pull request to `cookiecutter-flask`). \n\nPlease review my pull request.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dca8ac254a19ac29e882",
    "number": 447,
    "body": "This PR changes `test_compat.py` to be more specific about the expected result of `which`.\n",
    "head_branch": "improve-tests-for-compat-which",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dca9ac254a19ac29e883",
    "number": 446,
    "body": "When testing cookiecutter while not having it installed, we get this\nfailure:\n\n```\n=================================== FAILURES ===================================\n____________________________ test_existing_command _____________________________\n\n    def test_existing_command():\n>       assert which('cookiecutter')\nE       assert None\nE        +  where None = which('cookiecutter')\n\ntests/test_compat.py:15: AssertionError\n=============== 1 failed, 74 passed, 16 skipped in 0.43 seconds ================\n```\n\nA command that is almost guaranteed to exist is `date` (both on Unix and\nWindows systems).\n",
    "head_branch": "fix/test-which",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dca9ac254a19ac29e884",
    "number": 445,
    "body": "The `open` command doesn't exist on Linux and other variants. This is a simple way that should work in all UNIXy environments, making the Makefile less OS X-centric\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcaaac254a19ac29e885",
    "number": 444,
    "body": "I added a check if the name of the file which should be generated is empty. If so, we do not generate the file and log this behaviour.\n",
    "head_branch": "issue-267",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcabac254a19ac29e886",
    "number": 443,
    "body": "Add support for choices in a context as suggested in #441.\n\nI noticed that we are using custom methods for retrieving the user input and decided to let `click.prompt` handle the Python2/Python3 compatibility matters. This PR requires thorough reviews and testing before merging it as I touched some core functions and I want to be certain I didn't break anything :exclamation: \n\nThe CI might not detect these errors as most of the `read_response` calls are still `monkeypatched`. I'm afraid we need to do some manual testing to be 100% positive that everyting is working as expected :sweat: \n\nI implemented several tests for the new functionality. :smiley: \n\nPlease let me know your thoughts and I'll be happy to update this PR.\n",
    "head_branch": "feature/choices-in-context",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcacac254a19ac29e887",
    "number": 442,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcacac254a19ac29e888",
    "number": 440,
    "body": "",
    "head_branch": "doc-fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcadac254a19ac29e889",
    "number": 439,
    "body": "",
    "head_branch": "landscape-io-badge",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcaeac254a19ac29e88a",
    "number": 438,
    "body": "Fixes #301\nFixes #298\n",
    "head_branch": "python-future",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcafac254a19ac29e88b",
    "number": 437,
    "body": "I noticed that the latest docs still promise **Python 2.6** support.\n\nThis PR changes the readme as well as the contributor guidelines accordingly.\n\nAdditionally it adds **Python 3.4** to the pull request guidelines.\n",
    "head_branch": "remove-python-26-support-from-docs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcb0ac254a19ac29e88c",
    "number": 432,
    "body": "Found some leftover code in `setup.py` that specifically targets Python 2.6 which is not supported any longer :construction_worker: \n",
    "head_branch": "remove-2.6-support-from-setup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcb0ac254a19ac29e88d",
    "number": 431,
    "body": "Add a section to the core-commiter guide that describes the process for accepting template pull requests. Instructions by @pydanny \n\nClose #421 \n",
    "head_branch": "hackebrot-guide-for-accepting-template-prs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcb1ac254a19ac29e88e",
    "number": 426,
    "body": "You can find the use-case for this [here](https://github.com/Springerle/dh-virtualenv-mold/blob/master/hooks/pre_gen_project.py). It passes information to hooks (and any template) that is either hard to get or unavailable to them right now. If you agree this should be merged, I can add documentation and tests to this PR.\n\nSample output (with v1.0.0):\n\n```\n*** verbose=None\n*** checkout=None\n*** version=None\n*** version_info=()\n*** repo_dir=None\n*** context_file=None\n*** context={u'year': u'2015', …\n…\n```\n\nSample output (with patch):\n\n```\n*** verbose=False\n*** checkout=None\n*** version=1.0.0\n*** version_info=(1, 0, 0)\n*** repo_dir=/home/jhe/src/dh-virtualenv-mold\n*** context_file=/home/jhe/src/dh-virtualenv-mold/cookiecutter.json\n*** context={u'year': u'2015', …}\n*** context[pprint]={u'distro': u'UNRELEASED',\n…\nu'year': u'2015'}\n*** argv=['/tmp/tmpo5TZB5.py']\n*** cwd=/home/jhe/src/gh-commander/debian\n*** ls=['rules', 'changelog', 'pyvenv-foobar.links', 'control', 'copyright', 'pyvenv-foobar.triggers', 'compat', 'pyvenv-foobar.postinst']\n```\n",
    "head_branch": "enriched-context-for-hooks",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcb2ac254a19ac29e88f",
    "number": 425,
    "body": "Continue the work on #132 and #184.\n\nResolving the conflicts was pointless, so I manually merged in the changes. Credit goes to @osantana and @LucianU :bow:\n\nI converted the former test to py.test, fixed flake8 and changed string literals to single quotes.\n\nAccording to the previous PRs we should get failures on appveyor. I'll look into them in the next days. Tests are fine though on Ubuntu and the coverage does not drop. (We need codecov comments :cry: #416)\n\ncc: @audreyr @pydanny \n",
    "head_branch": "hackebrot-merge-copy-without-render",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcb3ac254a19ac29e890",
    "number": 424,
    "body": "Motivation (use-cases):\n- isolate unit tests of cookiecutter templates from user home\n- Selection of different config sets in a CI server or similar\n",
    "head_branch": "add-no-rc-option",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcb4ac254a19ac29e891",
    "number": 423,
    "body": "See also #283\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcb4ac254a19ac29e892",
    "number": 422,
    "body": "See also #283\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcb5ac254a19ac29e893",
    "number": 420,
    "body": "https://python-packaging-user-guide.readthedocs.org/en/latest/current.html\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcb6ac254a19ac29e894",
    "number": 418,
    "body": "Remove `test_get_user_config_nonexistent` as well as the containing module `test_config.py`. The new `py.test` implementation is located at `test_get_user_config.py`.\n\nCherrypick of b7b96f9 of #345 - Cleanup for #410 \n",
    "head_branch": "remove-obsolete-test-config",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcb7ac254a19ac29e895",
    "number": 417,
    "body": "Remove `CookiecutterCleanSystemTestCase` as it is not used anymore by any of the tests. Instead we are using the fixture of `conftest.py` now.\n\nCleanup for #410 \n",
    "head_branch": "remove-unittest-baseclass-in-tests-init",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcb7ac254a19ac29e896",
    "number": 415,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcb8ac254a19ac29e897",
    "number": 414,
    "body": "Split the former classes of `test_vcs.py` into separate modules and convert them to `py.test`:\n- `test_identify_repo.py`\n- `test_is_vcs_installed.py`\n- `test_vcs.py`\n- `test_vcs_prompt.py`\n\nThis PR does not introduce any new concepts. Instead it reuses the `skip_if_markers` of master and `monkeypatch`. I highly recommend running these tests on your local setup due to the skipif markers.\n\nAs this PR is rather large I completely understand if you decide against merging it for #410.\n\nPlease let me know your thoughts! :smiley:\n",
    "head_branch": "convert-test-vcs-to-pytest",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcb9ac254a19ac29e898",
    "number": 413,
    "body": "Convert `test_utils.py` to `py.test` syntax.\n\nApart from using `pytest.raises` this PR only changes the class `unittest` methods to module functions as no setup or teardown code is necessary whatsoever.\n",
    "head_branch": "convert-test-utils-to-pytest",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcbaac254a19ac29e899",
    "number": 412,
    "body": "Convert `test_hooks.py` to `py.test` syntax. \n\nI didn't change the underlying test structure to be able to reuse the helper function `make_test_repo` without drastic changes. So it's only the setup/teardown code and the assert statements that change. :sunglasses: \n",
    "head_branch": "convert-test-hooks-to-pytest",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcbbac254a19ac29e89a",
    "number": 411,
    "body": "There was no reference to Daniels github in `HISTORY.rst` causing multiple broken links.\n\nPlease merge in the course of #410  \n\n@michaeljoseph @pydanny :bell: \n",
    "head_branch": "fix-contributor-ref-in-changelog",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcbbac254a19ac29e89b",
    "number": 408,
    "body": "Otherwise, it will always run all tests even if you the user gives arguments to `py.test`. In fact, it will run the specified tests twice.\n\nThis and #335 fix #333.\n",
    "head_branch": "pytest_ini_remove_tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcbcac254a19ac29e89c",
    "number": 407,
    "body": "Fixes the following version conflict error:\n\n```\n$ rm -rf .tox/flake8\n$ tox -e flake8\n...\n  File \"/Users/marca/dev/git-repos/cookiecutter/.tox/flake8/lib/python2.7/site-packages/pkg_resources.py\", line 643, in resolve\n    raise VersionConflict(dist, req) # XXX put more info here\npkg_resources.VersionConflict: (pep8 1.6.2 (/Users/marca/dev/git-repos/cookiecutter/.tox/flake8/lib/python2.7/site-packages), Requirement.parse('pep8>=1.5.7,<1.6'))\n...\n```\n",
    "head_branch": "fix_flake8_version_conflict",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcbdac254a19ac29e89d",
    "number": 406,
    "body": "This test will fail on Windows for now until #405  is fixed\n",
    "head_branch": "win_crlf",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcbeac254a19ac29e89e",
    "number": 403,
    "body": "and make [AppVeyor tests](https://ci.appveyor.com/project/audreyr/cookiecutter/branch/master) pass again.\n",
    "head_branch": "fix_windows_test_failures",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcbfac254a19ac29e89f",
    "number": 402,
    "body": "Clicking it was taking me to the badge image instead of the actual builds.\n\nCompare clicking the badge at https://github.com/audreyr/cookiecutter/blob/master/README.rst vs. https://github.com/msabramo/cookiecutter/blob/fix_appveyor_badge_link/README.rst\n",
    "head_branch": "fix_appveyor_badge_link",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcbfac254a19ac29e8a0",
    "number": 400,
    "body": "Allows specifying or overriding variables by adding `key=value` arguments after the template.\n\nE.g.:\n\n```\n[marca@marca-mac2 test-cookiecutter-supervisor]$ cookiecutter --no-input https://github.com/msabramo/cookiecutter-supervisor.git program_name=foobar\nCloning into 'cookiecutter-supervisor'...\nremote: Counting objects: 16, done.\nremote: Compressing objects: 100% (13/13), done.\nremote: Total 16 (delta 5), reused 8 (delta 2), pack-reused 0\nUnpacking objects: 100% (16/16), done.\nChecking connectivity... done.\n\n[marca@marca-mac2 test-cookiecutter-supervisor]$ cat foobar/supervisor.conf\n[program:foobar]\nnumprocs                 = 1\nprocess_name             = %(program_name)s%(process_num)02d\nuser                     = foobaruser\ncommand                  = gunicorn --bind 0.0.0.0:$PORT --paste development.ini\nstartsecs                = 30\npriority                 = 12\nredirect_stderr          = true\nautorestart              = true\nautostart                = true\nstopwaitsecs             = 10\nstopsignal               = QUIT\ndirectory                = /opt/webapp/foobar\nstdout_logfile           = /var/log/sm/foobar-app-out.log\nstdout_logfile_maxbytes  = 10MB\nstdout_logfile_backups   = 0\nstdout_capture_maxbytes  = 1MB\nstderr_logfile           = /var/log/sm/foobar-app-err.log\nstderr_logfile_maxbytes  = 10MB\nstderr_logfile_backups   = 0\nstderr_capture_maxbytes  = 1MB\nenvironment              = NEW_RELIC_CONFIG_FILE=\"/opt/webapp/foobar/etc/newrelic.ini\"\n```\n",
    "head_branch": "specify_extra_context_as_arguments",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcc0ac254a19ac29e8a1",
    "number": 396,
    "body": "Hi!\n\nI would be pleased if you would add my template to the list.\n\nI'm currently a student and use this template to write my lab reports/essays and basically anything that I don't do by hand. However, it could be used for anything that makes use of the `article` document class. \n\nThe template can be found at: https://github.com/Kreger51/cookiecutter-latex-article. \n\nAppreciate the utility by the way!\n\nThanks, \n\nSelim\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcc1ac254a19ac29e8a2",
    "number": 395,
    "body": "I get the current roadmap link from the [CONTRIBUTING.rst](https://github.com/audreyr/cookiecutter/blob/master/CONTRIBUTING.rst#process-roadmap)\n",
    "head_branch": "fix-broken-url",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcc2ac254a19ac29e8a3",
    "number": 394,
    "body": "",
    "head_branch": "pep8-W503",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcc3ac254a19ac29e8a4",
    "number": 393,
    "body": "Fixes #391.\n",
    "head_branch": "click-option-documentation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcc3ac254a19ac29e8a5",
    "number": 392,
    "body": "Hi there,\n\nI kindly ask you to accept my latest template :smile:\n\nIt enables our users to create a `Kivy` app which can be deployed to an android device with `Buildozer`.\n\nPlease see the up-to-date readme at https://github.com/hackebrot/cookiedozer\n\nThanks,\nRaphael\n",
    "head_branch": "hackebrot-add-cookiedozer-template",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcc4ac254a19ac29e8a6",
    "number": 390,
    "body": "Fixes `flake8` failures.\n",
    "head_branch": "flake8-ignore-e731",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcc5ac254a19ac29e8a7",
    "number": 388,
    "body": "This cleans up the objections to PR358 which was adding a better error message for json parse errors\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcc6ac254a19ac29e8a8",
    "number": 387,
    "body": "so they don't display with vertical bar in left margin.\n\nSee https://github.com/msabramo/cookiecutter/blob/patch-1/README.rst\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcc7ac254a19ac29e8a9",
    "number": 384,
    "body": "Created an overview of tutorials as suggested by @pydanny via gitter.\n\nPlease let me know if I missed any other tutorials. I'll be happy to add them asap. :smiley:\n",
    "head_branch": "add-tutorials-page-to-docs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcc7ac254a19ac29e8aa",
    "number": 382,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcc8ac254a19ac29e8ab",
    "number": 379,
    "body": "Hum, I've just seen I'm not the first to provide this (see #359 )\n\nI have no preference on which implementation is best.\n",
    "head_branch": "pr-yaml-parser",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcc9ac254a19ac29e8ac",
    "number": 378,
    "body": "We can be more helpful when the main config file throws a parser error.\n",
    "head_branch": "pr-better-error-msg",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dccaac254a19ac29e8ad",
    "number": 376,
    "body": "Hum, this doesn't seem to be a great deal, but it allows for very simple and straightforward usage of an\nuninstalled deployed git repos. Very handy for test or using your git as installed repos.\n\nIf this doesn't make unicorn cry, please consider adding these 2 lines.\n\nAfter this, a simple `ln -sf cookiecutter/cli.py /usr/local/bin/cookiecutter` will work out of the box (if of course, 'cookiecutter' module is accessible in the PYTHONPATH)\n\nNot a very big deal, but nice to have.\n",
    "head_branch": "pr-binary",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dccbac254a19ac29e8ae",
    "number": 374,
    "body": "This new package differs from the `cookiecutter-django` repo, because it is oriented Python 3 only, and has clean optimizations for Heroku only.\n\nCheers\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add the missing reference to a template link"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dccbac254a19ac29e8af",
    "number": 372,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcccac254a19ac29e8b0",
    "number": 370,
    "body": "Fixes #368 \n",
    "head_branch": "handle-non-str-in-json",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dccdac254a19ac29e8b1",
    "number": 369,
    "body": "Fixes #71.\n",
    "head_branch": "codecov-io",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcceac254a19ac29e8b2",
    "number": 365,
    "body": "I would be pleased to see this template on the list :)\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dccfac254a19ac29e8b3",
    "number": 360,
    "body": "Resolves #30 \n\nThis change maintains backwards compatibility with the old format, so a context version isn't really necessary (although it wouldn't hurt if the context supported it).\n\nCurrently only supports one `type` of boolean, so that context parameters can be used in `if` blocks. Without this support you can't really have a default of `True`, and have the user enter `False` (because any value the user enters would be `True`.  I suspect there will  be other types that can be added here.\n",
    "head_branch": "rich_context",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dccfac254a19ac29e8b4",
    "number": 359,
    "body": "Related to #249\n\nI tried to use #269 but it's diverged quite a bit from master. I resolved the conflicts and started trying to get it working again, but it ended up being a lot more work than just starting from scratch.\n\nThis was the smallest change I found that allowed me to read yaml context files, and still maintain backwards compatibility with the json files.\n\nFeedback welcome.\n",
    "head_branch": "support_yaml",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcd0ac254a19ac29e8b5",
    "number": 358,
    "body": "addresses issue #355\n",
    "head_branch": "issue-355-better-decoding-error",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcd1ac254a19ac29e8b6",
    "number": 356,
    "body": "With jinja2<2.7, cookiecutter fails with error:\n\n  File \"/usr/local/lib/python2.7/site-packages/cookiecutter/generate.py\", line 181, in generate_files\n    env = Environment(keep_trailing_newline=True)\nTypeError: **init**() got an unexpected keyword argument 'keep_trailing_newline'\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcd2ac254a19ac29e8b7",
    "number": 351,
    "body": "Convert `test_prompt.py` to `py.test`. \n\nI rebased this branch on top of #347 because `tox` fails otherwise. The named error occurs as a consequence of the test suite being run twice on master. (`py.test` struggles to `monkeypatch` a function twice within the same test session)\n\nLooking forward to your feedback! :smile: \n",
    "head_branch": "hackebrot-convert-test-prompt",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcd3ac254a19ac29e8b8",
    "number": 350,
    "body": "Adding some additional templates to the list that people may find useful.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcd3ac254a19ac29e8b9",
    "number": 349,
    "body": "In reference to Issue #348 \n\nThis is a first-draft, playing around (not a final fix - more of a debug instrumented experiment).\n\nIt doesn't seem to be in the coding style of the repo, but it does capture some parts of my playing around, in the comments - so I hope it will prove useful.\n\nRight as it stands, if you use this, you get:\n\n```\n$ cookiecutter gh:aureyr/cookiecutter-pypackage.git\nUsername for 'https://github.com': yarko\nPassword for 'https://yarko@github.com': \nError: the following failed (returned 128):\n  git clone https://github.com/aureyr/cookiecutter-pypackage.git.git\n```\n\nwhich is a little more informative (not as noisy, no traceback).\nI ended up leaving the `e.output` off, since it (at least for github) did not seem additionally useful,\nalways showing something about \"user\" regardless of where the typo was situated.\n\nComments?\n",
    "head_branch": "yarko-vcs-subprocess",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcd4ac254a19ac29e8ba",
    "number": 347,
    "body": "I implemented a `PyTest` command class in `setup.py` similar to http://pytest.org/latest/goodpractises.html#integration-with-setuptools-test-commands\n\nCurrently `python setup.py test` still uses `unittest` which means some of the re-implementations are not run at all. By changing this the documentation changes to `CONTRIBUTING.rst` of #310 are correct again.\n\nAdditionally I removed `pytest.ini` to address #333. It stopped us from running only specific tests as for instance `py.test tests/test_generate_file.py`. More importantly the suite is not executed twice any longer and the coverage is not calculated when running tests only.\n\nYour feedback is highly appreciated! :kissing_closed_eyes:\n",
    "head_branch": "hackebrot-integrate-pytest-in-setup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcd5ac254a19ac29e8bb",
    "number": 346,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcd6ac254a19ac29e8bc",
    "number": 345,
    "body": "Convert `TestGetConfig`, `TestGetConfigWithDefaults` and `TestGetUserConfig` to `py.test` using fixtures for the existing setup/teardown code.\n\nWhile implementing `back_up_rc` I noticed that the former `unittest.TestCase` does not remove any `~/.cookiecutterrc` that the tests create. I did not change this behaviour in the re-implementation. Please let me know if I shall add this clean-up.\n\nCheers! :bow:\n",
    "head_branch": "hackebrot-convert-test-config",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcd7ac254a19ac29e8bd",
    "number": 341,
    "body": "Convert `test_find.TestFindTemplate` and `test_main.TestFindTemplate2` to `py.test`.\n\nPlease give your attention to 0208a38 as I removed some asserts which seem to be redundant. Since we are testing for equality first (`assert template == 'foo'`), I don't see any way how a subsequent test for inequality should fail (`assert template != 'bar'`) without changing `template`.\n\nLet me know your thoughts!\n",
    "head_branch": "hackebrot-convert-test-find",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcd7ac254a19ac29e8be",
    "number": 340,
    "body": "Convert `test_compat.TestWhich` to `py.test` syntax.\n",
    "head_branch": "hackebrot-convert-test-compat",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcd8ac254a19ac29e8bf",
    "number": 338,
    "body": "This `py.test` re-implementation of `test_main.TestCookiecutterRepoArg` features `setup/teardown` fixtures, `skipif` markers as well as `monkeypatch`. The test itself is pretty much straightforward.\n\nPlease let me know your thoughts. Cheers :smile:\n",
    "head_branch": "hackebrot-convert-test-cookiecutter-repo-arg",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcd9ac254a19ac29e8c0",
    "number": 337,
    "body": "Using a parametrized test for 6 out of 7 tests of `test_main.TestAbbreviationExpansion` and a regular `py.test` exception test for `test_abbreviation_expansion_prefix_not_0_in_braces`.\n\nAlthough the re-implementation seems to be bloated, I think it is easier to read since one needs to understand the actual test just once unlike the original `unittest.TestCase` with 6 independent tests.\n\nPlease let me know your thoughts! Cheers \n",
    "head_branch": "hackebrot-convert-test-abbreviation-expansion",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcdaac254a19ac29e8c1",
    "number": 336,
    "body": "Simply convert `TestArgParsing` of `test_main.py` to `py.test` syntax. No magic involved whatsoever :see_no_evil:\n",
    "head_branch": "hackebrot-test-arg-parsing",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcdbac254a19ac29e8c2",
    "number": 335,
    "body": "Fixes #333.\n",
    "head_branch": "fix-pytest-collection",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcdbac254a19ac29e8c3",
    "number": 334,
    "body": "Convert `test_main.TestCookiecutterLocalWithInput` using `monkeypatch` of `py.test`.\n\nAccording to the name of the original name and the doc string of `test_cookiecutter_input_extra_context` the `no_input` argument needs to be `False`, so I changed the former version.\n\nPlease let me know if this is correct.\n",
    "head_branch": "hackebrot-convert-test-cookiecutter-local-with-input",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcdcac254a19ac29e8c4",
    "number": 332,
    "body": "Convert `test_main.TestCookiecutterLocalNoInput` to `py.test` syntax this time using a parametrized fixture for two of the tests (slash/no-slash).\n",
    "head_branch": "hackebrot-convert-test-cookiecutter-local-no-input",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcddac254a19ac29e8c5",
    "number": 331,
    "body": "I'm in the authors already for a cookiecutter I created some time ago :smiley: #330 \n",
    "head_branch": "hackebrot-fix-duplicate-author-mention",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcdeac254a19ac29e8c6",
    "number": 330,
    "body": "",
    "head_branch": "changelog-process",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcdfac254a19ac29e8c7",
    "number": 329,
    "body": "Warns about #201.\n",
    "head_branch": "26-pending-deprecation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcdfac254a19ac29e8c8",
    "number": 328,
    "body": "Allied with #327 to fix #219.\n",
    "head_branch": "coding-standards",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dce0ac254a19ac29e8c9",
    "number": 327,
    "body": "",
    "head_branch": "absolute-imports",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dce1ac254a19ac29e8ca",
    "number": 326,
    "body": "Coveralls hasn't been getting any data since https://coveralls.io/builds/1448866\n",
    "head_branch": "generate-pytest-coverage",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dce2ac254a19ac29e8cb",
    "number": 325,
    "body": "",
    "head_branch": "0.9.0-changelog",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dce3ac254a19ac29e8cc",
    "number": 324,
    "body": "",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dce3ac254a19ac29e8cd",
    "number": 323,
    "body": "3.4 was added to travis some time ago.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dce4ac254a19ac29e8ce",
    "number": 322,
    "body": "Convert a copy of `CookiecutterCleanSystemTestCase` to `py.test` syntax and use it for a re-implementation of `TestGenerateFiles.test_generate_files_nontemplated_exception` as a proof of concept. #256 \n",
    "head_branch": "hackebrot-convert-tests-to-pytest",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dce5ac254a19ac29e8cf",
    "number": 320,
    "body": "https://github.com/audreyr/cookiecutter/pull/319/files#r20069973\nhttps://github.com/audreyr/cookiecutter/pull/319#discussion_r20069973\n",
    "head_branch": "fix-ci",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dce6ac254a19ac29e8d0",
    "number": 319,
    "body": "",
    "head_branch": "switch_to_pytest",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dce7ac254a19ac29e8d1",
    "number": 318,
    "body": "",
    "head_branch": "rtfd-badge",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dce7ac254a19ac29e8d2",
    "number": 317,
    "body": "And check tests and coverage before submitting.\nFixes #209\n",
    "head_branch": "developer-setup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dce8ac254a19ac29e8d3",
    "number": 316,
    "body": "Note: the original PR (#207) was botched - this is my second attempt.\n\n---\n\nVery simple update (no changes to code execution) and therefor no added tests.\n\nSimply a cleaner config prompt, inspired by bower and npm.\n\nBefore: `full_name (default is \"Your full name\")?`\nAfter: `full_name: (Your full name)`\n\n/cc @michaeljoseph \n\nEDIT: updated prompt preview to reflect discussion below, removed prepended `[?]`.\n",
    "head_branch": "cleaner-config-prompt-v2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dce9ac254a19ac29e8d4",
    "number": 312,
    "body": "",
    "head_branch": "cleanup-strings",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dceaac254a19ac29e8d5",
    "number": 311,
    "body": "",
    "head_branch": "windows-ci-support",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dceaac254a19ac29e8d6",
    "number": 310,
    "body": "To be able to use this configuration one need to run:\n\n```\n# tox -c tox_pytest.ini\n```\n\nThis configuration file setup the pytest-cov plugin and it is an additional dependency. \n\nIt is possible to tests with some versions of python, to do this the command is:\n\n```\n# tox -e py27,py34,pypy -c tox_pytest.ini\n```\n\nWill run py.test with the python2.7, python3.4 nd pypy interpreters, for example.\n",
    "head_branch": "issue_256",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcebac254a19ac29e8d7",
    "number": 309,
    "body": "Fixes #306.\n",
    "head_branch": "click",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcecac254a19ac29e8d8",
    "number": 308,
    "body": "Updated pull-request to implement validation in the input as #175 \n",
    "head_branch": "_issue175_inputvalidation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcedac254a19ac29e8d9",
    "number": 307,
    "body": "",
    "head_branch": "_latexbeamer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dceeac254a19ac29e8da",
    "number": 304,
    "body": "One more.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dceeac254a19ac29e8db",
    "number": 303,
    "body": "- Fixes #149 \n- When user attempts to use `cookiecutter` and calls on `git` or `hg` without them being installed, `cookiecutter` returns a nicely explicit `VCSNotInstalled` exception.\n- Added `test_compat.py` to test against new `which` function.\n- Documented the compat module in `docs/cookiecutter.rst`\n",
    "head_branch": "issue-149-check-vcs-existence",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcefac254a19ac29e8dc",
    "number": 302,
    "body": "Covers #255. \n\nAnother way we can show our ongoing support for Windows.\n",
    "head_branch": "issue-255-appveyor-badge",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcf0ac254a19ac29e8dd",
    "number": 297,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcf1ac254a19ac29e8de",
    "number": 295,
    "body": "Replaces #293 \n",
    "head_branch": "gitter-badge",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcf1ac254a19ac29e8df",
    "number": 294,
    "body": "One more cookiecutter\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcf2ac254a19ac29e8e0",
    "number": 293,
    "body": "### audreyr/cookiecutter now has a Chat Room on Gitter\n\n@michaeljoseph has just created a chat room. You can visit it here: [https://gitter.im/audreyr/cookiecutter](https://gitter.im/audreyr/cookiecutter?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&content=body_link).\n\nThis pull-request adds this badge to your README.md:\n\n[![Gitter](https://badges.gitter.im/Join Chat.svg)](https://gitter.im/audreyr/cookiecutter?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=body_badge)\n\nHappy chatting.\n\nPS: [Click here](https://gitter.im/settings/badger/opt-out) if you would prefer not to receive automatic pull-requests from Gitter in future.\n",
    "head_branch": "gitter-badge",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcf3ac254a19ac29e8e1",
    "number": 292,
    "body": "",
    "head_branch": "flake8-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcf4ac254a19ac29e8e2",
    "number": 291,
    "body": "A feature I have missed from yeoman and paste is the ability to have default values be driven off other default values, and update default values based on input a user has already provided. It seems much more responsive this way, especially if you start with a human-readable name and successively mangle it into various file and class names.\n\nThis 3-liner treats successive prompts for values as Jinja2 templates, rendered in the context of `cookiecutter_dict` up to that point. It requires no additional coding knowledge for a cookiecutter author, as they must know the Jinja syntax, anyway, but has the potential to make life significantly easier for end users.\n\nExample:\n\n``` json\n# cookiecutter.json\n{\n  \"project_name\": \"IPython Custom Widget\",\n  \"repo_name\": \"{{ project_name|replace(' ', '') }}\",\n  \"pkg_name\": \"{{ repo_name|lower }}\"\n} \n```\n\nThus, if the user gives `My Excellent Project` as `project_name`, and then takes the defaults, `repo_name`  will become `MyExcellentProject` and `pkg_name` will become `myexcellentproject`.\n\nThis relies on the OrderedDict behavior of the JSON parsing, but this seems like a reasonably good assumption.\n\nThis should be backwards compatible unless there is someone out there in the wild that is offering unrendered jinja template strings as default values, and then somehow double-renders them... or is generating jinja templates. Not sure if that is even possible. Seems like a stretch, and could be achieved by using a `{%raw%}` block inside a value.\n\nI haven't updated any docs, and would look for input as to whether this would be README material, Advanced Usage or otherwise.\n",
    "head_branch": "cc-json-as-template",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcf5ac254a19ac29e8e3",
    "number": 290,
    "body": "",
    "head_branch": "more-changelog-and-authors",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcf5ac254a19ac29e8e4",
    "number": 289,
    "body": "Fixes #273\n",
    "head_branch": "improve-main-test-coverage",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcf6ac254a19ac29e8e5",
    "number": 288,
    "body": "Fixes #60 via #102 and @dinopetrone\n",
    "head_branch": "jinja-hooks",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcf7ac254a19ac29e8e6",
    "number": 287,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcf8ac254a19ac29e8e7",
    "number": 285,
    "body": "I'm passing the no_input flag down to the delete functionality. Let me know if you hate any of this, I'm happy to change it. \n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcf9ac254a19ac29e8e8",
    "number": 283,
    "body": "https://github.com/Springerle/cookie-jar\n",
    "head_branch": "link-to-springerle",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcf9ac254a19ac29e8e9",
    "number": 282,
    "body": "Superseed #156 \n",
    "head_branch": "add_pep8_checks",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcfaac254a19ac29e8ea",
    "number": 280,
    "body": "This change ensures the file handles are closed properly in setup.py.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcfbac254a19ac29e8eb",
    "number": 278,
    "body": "",
    "head_branch": "cookiecutter-webapp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcfcac254a19ac29e8ec",
    "number": 274,
    "body": "This pull request is my merging-in of #260. It was quite complicated (see my comments in #260 for details), so the purpose of this PR is just to make it clear what exactly the changes are.\n\nSince it was complicated and delicate, can another core committer please give this a quick review?\n",
    "head_branch": "audreyr-extra-context",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcfdac254a19ac29e8ed",
    "number": 271,
    "body": "Link to: @robinandeer :hocho: [cookiecutter-pyvanguard](https://github.com/robinandeer/cookiecutter-pyvanguard)\n",
    "head_branch": "new-template/cookiecutter-pyvanguard",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcfdac254a19ac29e8ee",
    "number": 270,
    "body": "Fixes #246.\n",
    "head_branch": "aliases",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcfeac254a19ac29e8ef",
    "number": 269,
    "body": "This is the initial version of support for a YAML format settings file, to supersede `cookiecutter.json`. Before committing, I would like to refactor this further, to make the \"internal\" format completely encapsulated in `settings.py` so that client code need have no knowledge of how the settings are stored. But the PR is sufficiently complete that it's ready for initial review.\n\nAt the moment, it's only the context data that is in the settings, so the refactoring won't actually impact much, but it establishes the principle that following changes should follow. The main change at this stage will be in the tests, which currently know far too much about how the settings/context is stored.\n",
    "head_branch": "new_config_format",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dcffac254a19ac29e8f0",
    "number": 268,
    "body": "",
    "head_branch": "extra-docs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd00ac254a19ac29e8f1",
    "number": 266,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd01ac254a19ac29e8f2",
    "number": 265,
    "body": "With this changes we can work with mercurial private repos.\n",
    "head_branch": "explicit-repo-names",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd01ac254a19ac29e8f3",
    "number": 263,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd02ac254a19ac29e8f4",
    "number": 262,
    "body": "",
    "head_branch": "input_test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd03ac254a19ac29e8f5",
    "number": 260,
    "body": "Fixes #12\nSynthesizes parts of: #75, #100, #116, #161 and #199.\nThanks @fcurella, @aventurella, @emonty, @schacki, @ryanolson!\n",
    "head_branch": "extra-context",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd04ac254a19ac29e8f6",
    "number": 258,
    "body": "Apart from being useful for users, this will allow us to test more easily, without having to save/restore the user's config as much as we currently do.\n",
    "head_branch": "env_config",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd05ac254a19ac29e8f7",
    "number": 257,
    "body": "",
    "head_branch": "remove_unicode_dir",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd06ac254a19ac29e8f8",
    "number": 253,
    "body": "Fixes #71\n",
    "head_branch": "issue-71-combine-coverage",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd06ac254a19ac29e8f9",
    "number": 252,
    "body": "Fixes #203\n",
    "head_branch": "issue-203-compat",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd07ac254a19ac29e8fa",
    "number": 250,
    "body": "This lets you use abbreviated URLs for templates on common hosting sites, like `gh:audreyr/cookiecutter-pypackage`, as discussed on issue #246. gh expands to Github, and bb to Bitbucket.\n\nI haven't tried to make this configurable by the user at present - that seems rather less useful to me. However, technically it would be fairly straightforward to add those if there's demand.\n",
    "head_branch": "vcs-hosting-abbreviations",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd08ac254a19ac29e8fb",
    "number": 245,
    "body": "This is basically a convenience PR. It adds an extra `tox` configuration file that uses `py.test` to run the tests. The benefit is that the `py.test` output can be easier to read when looking for failure information (which has been a problem while trying to diagnose the Windows failures).\n\nI actually much prefer `py.test` for testing, and I think it would be useful to use it for the actual tests - but that's not what this PR does, the existing tests are unchanged here.\n\nTo use this file, just do `tox -c tox_pytest.ini`.\n",
    "head_branch": "tox_pytest",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd09ac254a19ac29e8fc",
    "number": 244,
    "body": "",
    "head_branch": "utf8_pizza2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd0aac254a19ac29e8fd",
    "number": 242,
    "body": "Also fixes a few resource leaks reported in this test file (unclosed file handles)\n",
    "head_branch": "utf8_pizza",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd0bac254a19ac29e8fe",
    "number": 241,
    "body": "**First Cut Attempt**\n\nThis is an initial attempt to use tox for testing on appveyor. I expect it to fail, but hopefully in a way that will allow the patch to be improved :-)\n",
    "head_branch": "appveyor_and_tox",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd0bac254a19ac29e8ff",
    "number": 239,
    "body": "",
    "head_branch": "hook_docs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd0cac254a19ac29e900",
    "number": 238,
    "body": "A couple of tests in `test_utils` assume a Unix-style filesystem (a `/usr` directory, and that you can't create files in the root directory). Amended the tests to use more suitable directory names on Windows.\n",
    "head_branch": "directory_tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd0dac254a19ac29e901",
    "number": 236,
    "body": "An alternative approach to making the hook tests portable - rather than having separate test repos for Unix and Windows, instead generate the repo at runtime based on `sys.platform`.\n",
    "head_branch": "hooks_tests_2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd0eac254a19ac29e902",
    "number": 234,
    "body": "The `json.load` function in Python's standard library has no documented encoding argument. And although `simplejson.load` does, it's documented as only needed \"If the contents of fp are encoded with an ASCII based encoding other than UTF-8\" - in other words, specifying UTF-8 is redundant.\n",
    "head_branch": "json_encoding",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd0fac254a19ac29e903",
    "number": 233,
    "body": "The original code seems to assume that raw_input in Python 2 takes a byte string and returns a byte string. This isn't right - the prompt and result are always (logically) strings and should need no encoding or decoding - the I/O layer will take care of that.\n",
    "head_branch": "input",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd0fac254a19ac29e904",
    "number": 230,
    "body": "",
    "head_branch": "hooks_tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd10ac254a19ac29e905",
    "number": 229,
    "body": "",
    "head_branch": "unicode_open",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd11ac254a19ac29e906",
    "number": 226,
    "body": "",
    "head_branch": "rmtree",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd12ac254a19ac29e907",
    "number": 224,
    "body": "Fixes #203\n",
    "head_branch": "issue-203-py3-compat",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd13ac254a19ac29e908",
    "number": 220,
    "body": "",
    "head_branch": "document-contributing-generation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd13ac254a19ac29e909",
    "number": 218,
    "body": "Source https://github.com/audreyr/cookiecutter/issues/195#issuecomment-48551225\n",
    "head_branch": "fix-windows-test-prompts",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd14ac254a19ac29e90a",
    "number": 217,
    "body": "",
    "head_branch": "appveyor-integration",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd15ac254a19ac29e90b",
    "number": 214,
    "body": "",
    "head_branch": "readme-dead-links",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd16ac254a19ac29e90c",
    "number": 213,
    "body": "",
    "head_branch": "sphinx-newlines",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd16ac254a19ac29e90d",
    "number": 211,
    "body": "add additional similar projects to readme; cog and argent\n",
    "head_branch": "dreftymac.update.readme",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd17ac254a19ac29e90e",
    "number": 210,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd18ac254a19ac29e90f",
    "number": 207,
    "body": "Very simple update (no changes to code execution) and therefor no added tests.\n\nSimply suggests a _cleaner_ config prompt, inspired by [bower](http://bower.io/) and [npm](https://www.npmjs.org/).\n- Before: `full_name (default is \"Your full name\")?`\n- After: `[?] full_name: (Your full name)`\n\nNot fixing any current issues (that I know of :smile:) but relates to #173 - could be a prior step to adding additional features.\n",
    "head_branch": "visually-cleaner-config-prompt",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd19ac254a19ac29e910",
    "number": 206,
    "body": "If the user issues \"ctrl-C\" during a config prompt, `cookiecutter` will suppress the traceback from the `KeyboardInterrupt` exception.\n\nAlso adds a test case for when `KeyboardInterrupt` is raised and `SystemExit` is thrown in return.\n",
    "head_branch": "gracefully-handle-config-shutdown",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd1aac254a19ac29e911",
    "number": 202,
    "body": "Addresses in part #198, #195, and #123.\n\nWindows **IS NOT** working yet, but many problems in integration have been solved. To summarize:\n- Added @appveyor\n- `EOFErrors` with inputs are caught and handled\n- Path's are normalized to operating systems via `os.path.join()` and a new `utils.fix_path()` function.\n- `shutils.rmtree` now works on Windows thanks to adding `force_delete` to all instances of usage.\n- Command-line prompts now work correctly on Windows\n\nOutstanding issues:\n- 6 failures and 2 errors at https://ci.appveyor.com/project/pydanny/cookiecutter/build/1.0.27 that I can't fix without a more solid understanding of Windows path handling\n- We need to better document how to set up tox, local environment testing, and linting.\n",
    "head_branch": "windows-cleanup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd1bac254a19ac29e912",
    "number": 199,
    "body": "This pull request closes Issue #187 \n",
    "head_branch": "issue_187",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd1bac254a19ac29e913",
    "number": 196,
    "body": "Fixing a few issues I notices running cookiecutter under Python 3.\n- Now when the user issues \"ctrl-C\" the program will suppress the traceback from the `KeyboardInterrupt`.\n- `prompt_for_config` no longer encodes the string to bytes before passing it to `input`. Before the prompt was printed to the console as `b'full_name (default is \"Your full name\")? '`\n- Suggests a cleaner look for the prompt á la [bower](http://bower.io/)/[npm](https://www.npmjs.org/).\n  - Before: `full_name (default is \"Your full name\")?`\n  - After: `[?] full_name: (Your full name)`\n- Also adds a test case for when `KeyboardInterrupt` is raised and `SystemExit` is thrown in return. Note that I only got the _test_ to work in Python 3, perhaps someone with more experience around mock can look into that.\n",
    "head_branch": "upgrading-config-prompt",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd1cac254a19ac29e914",
    "number": 194,
    "body": "",
    "head_branch": "fix-contributing-rst",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd1dac254a19ac29e915",
    "number": 193,
    "body": "docs/contributor_guidelines.rst uses the same header patter as the rest of the contributing documents. This makes it so CONTRIBUTING.rst is rendered by GitHub into HTML.\n",
    "head_branch": "fix-contributing-rst",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd1eac254a19ac29e916",
    "number": 192,
    "body": "Fix for #98.\n\nPython 3 `input()` takes str objects. Encoding the prompt makes it a bytestring, resulting the `b''` format.\n",
    "head_branch": "fix_98",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd1eac254a19ac29e917",
    "number": 191,
    "body": "Fixes https://github.com/audreyr/cookiecutter/issues/92\n",
    "head_branch": "issue-92-bake-cli",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd1fac254a19ac29e918",
    "number": 186,
    "body": "This is more a work-in-progress PR as I wanted to get some opinion about the actual implementation.\n\nUsecase was the following: I needed to write a hook that required access to already set config values. So I'm now forwarding those via environment variables.\n\nI'm not sure if this is the way to go. E.g CasperJS allows context-variables to be passed via command line.\n\nAny concerns?\n\nUnittests etc will be written once we have a concept :)\n",
    "head_branch": "feature/export-context",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd20ac254a19ac29e919",
    "number": 185,
    "body": "Hope you like it.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd21ac254a19ac29e91a",
    "number": 184,
    "body": "This continues the work started in PR #132. Looking forward to your feedback.\n",
    "head_branch": "copy-without-render",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd22ac254a19ac29e91b",
    "number": 183,
    "body": "Currently cookiecutter has a major bug: all newlines at the ends of files are stripped.  This bug makes tools like pep8 and flake8 angry.\n\nThere are already two other pull requests that attempt to fix this bug: #79 and #135.  Here are the problems with the existing pull requests:\n- Pull request #79 introduces a new bug by _always_ adding newlines to the ends of files.\n- Pull request #135 requires that users of cookiecutter decide whether newlines should be maintained.\n\nThis pull request causes cookiecutter to:\n- Generate files with final newline(s) when the source files had newline(s)\n- Generate files without final newline(s) when the source files did not have final newline(s)\n\nThis is technically a backwards-incompatible change because it fixes a bug in functionality.  I doubt existing users will be disappointed by this new behavior because files that are not expected to have final newlines probably already lack final newlines in the source template.\n",
    "head_branch": "maintain-trailing-newlines",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd22ac254a19ac29e91c",
    "number": 182,
    "body": "As mentioned in my comment in #135, I've worked on a patch that allows jinja environment options to be specified in a config file in a cookiecutter template.\n\nI put these options in a separate config file, so that older versions of cookiecutter don't ask for this as an option. I think this is going to break a lot of old versions of cookiecutter anyway if the cookiecutter templates start using these options :( I guess this requires some thought...\n",
    "head_branch": "jinja_options_in_config_file",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd23ac254a19ac29e91d",
    "number": 179,
    "body": "Some fixes in test so they would pass on windows. Tested on Windows 7 (py26, py27). \n",
    "head_branch": "tf",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd24ac254a19ac29e91e",
    "number": 177,
    "body": "UnicodeDecodeError is raised if standard input encoding is not utf-8 (ie. on Windows).\nThis PR is using `sys.stdin.encoding` to decode input.\n",
    "head_branch": "difenc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd25ac254a19ac29e91f",
    "number": 176,
    "body": "simplejson.load() prior 2.1 does not accept `object_pairs_hook` argument\n",
    "head_branch": "feature/issue-174",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd26ac254a19ac29e920",
    "number": 173,
    "body": "extend the prompt capabilities to:\n- variable substitution\n- differentiate prompt/default value and variable name\n- specify type of variable int/bool \n\n```\n{\n    \"project_name\": \"project-name\",\n    \"project_key\": \"{project_name}\",  # <- default value based on previous input\n    \"create_virtualenv\" : {\n        \"default\": \"N\",\n        \"type\": \"bool\",\n        \"prompt\": \"Create virtualenv (`{project_name}`) [yN]\"  # variable subtitution using .format() \n    },\n    \"year\": {\n        \"default\" : \"2014\",\n        \"type\" : \"int\"\n    },\n   'user' : '{$USER}'  # will be os.environ['USER']\n}\n```\n\nthis produce the following dictionary ( if default values accepted):\n\n```\n{  \"project_name\": \"project-name\",\n    \"project_key\": \"project-name\",\n    \"create_virtualenv\" : False,\n    \"year\" : 2014,\n    \"user\": \"username\"\n}\n```\n",
    "head_branch": "feature/better_prompt_support",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd26ac254a19ac29e921",
    "number": 172,
    "body": "provide custom Sphinx directive to read the  ArgumentParser options. Documentation is auto is auto generated from the argument's help text\n\nref. #166\n",
    "head_branch": "feature/Document-the-command-line-options",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd27ac254a19ac29e922",
    "number": 171,
    "body": "This will simply add my cookiecutter for kivy to the list of python templates.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd28ac254a19ac29e923",
    "number": 169,
    "body": "extended prompt implementation \n\n@see #138\n@see #126\n@see #30\n",
    "head_branch": "feature/extended_prompt",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd29ac254a19ac29e924",
    "number": 168,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd2aac254a19ac29e925",
    "number": 167,
    "body": "This is useful when we want to test the package on an environement\nwithout networking. This can happen on some buildbots, like the Debian\nbuilders.\n",
    "head_branch": "fix/disable-network-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge e4348cc93bf81295ab06d5f03eb4d9644878f00f into 738c44cd9514de7b0a2d25a8bfa325db549b5809"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd2bac254a19ac29e926",
    "number": 164,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd2bac254a19ac29e927",
    "number": 163,
    "body": "Having version info is always a good idea.\n\nIn comparison with #89 it uses relative import.\nFixes some flake8 errors too on main.py.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd2cac254a19ac29e928",
    "number": 162,
    "body": "When you try to use cookie cutter from a repo that has been already cloned with the no-input flag. An input is shown. \n\nI fixed it and made a test for the issue. \n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd2dac254a19ac29e929",
    "number": 161,
    "body": "The input_context paramter for main.cookiecutter will override any other values from cookiecutter.json or the user config. This enables you to programmatically create the project, with a set list of context parameters. \n\nIf have added unitt tests and updated the docs.\n",
    "head_branch": "main_cookiecutter_with_input_context",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd2eac254a19ac29e92a",
    "number": 160,
    "body": "Hi.\n\nJust thought it'd be nice to have a slightly more explicit log message when a hook script is not found.\nThis is pretty minor, but I don't know, it's bugged me for some reason and for once I could actually find some time to do a little something =). \n",
    "head_branch": "more-explicit-logging",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "explicitely name unfound hooks in debug logging"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd2fac254a19ac29e92b",
    "number": 159,
    "body": "I've started the link between cookiecutter and diecutter.\n\nPlease have a try here : http://diecutter.io/cookieforms/\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd2fac254a19ac29e92c",
    "number": 158,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd30ac254a19ac29e92d",
    "number": 157,
    "body": "",
    "head_branch": "test_documentation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd31ac254a19ac29e92e",
    "number": 156,
    "body": "",
    "head_branch": "add_pep8_checks",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd32ac254a19ac29e92f",
    "number": 152,
    "body": "This helps when slinging virtualenvs around.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd33ac254a19ac29e930",
    "number": 151,
    "body": "",
    "head_branch": "avr",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd33ac254a19ac29e931",
    "number": 148,
    "body": "This removes a link to existing templates that's no longer working and makes sphinx generate proper parameter lists for some functions. (I know, I know, one pull request for 2 things is meh, but both of them are very small things)\n",
    "head_branch": "doc-fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd34ac254a19ac29e932",
    "number": 146,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge c04c00cf1938aa406c17bc3045cc34ea4c944cd2 into 9b04c23bac3976118629e3f2c9425e0fe6d86d73"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd35ac254a19ac29e933",
    "number": 144,
    "body": "generate_file() ignores the creation of file if its filename is empty.\n",
    "head_branch": "conditional-files",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd36ac254a19ac29e934",
    "number": 143,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd37ac254a19ac29e935",
    "number": 142,
    "body": "added melonjs game framework cookiecutter template\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd37ac254a19ac29e936",
    "number": 140,
    "body": "This is quite useful when making distribution packages. I would need it for Debian since 0.7.0 tarball does not include tests nor documentation. A 0.7.1 release would also be appreciated for this purpose! :)\n",
    "head_branch": "fix/include-doc-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 04344992e82551da7f5ca4d77a8b1e7dbd075c7c into a144fe77ebd4c6a8d43c87f7aba00c48b985d363"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd38ac254a19ac29e937",
    "number": 139,
    "body": "",
    "head_branch": "template-djangocms",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd39ac254a19ac29e938",
    "number": 137,
    "body": "",
    "head_branch": "rtveitch-prompt-accept-json",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd3aac254a19ac29e939",
    "number": 136,
    "body": "Started using [pydanny's](https://github.com/pydanny) [cookiecutter-djangopackage](https://github.com/pydanny/cookiecutter-djangopackage) for my projects about a month back and noticed that it did not include a demo project. I wanted the following directory structure:\n- repo_name\n  - docs\n  - tests\n  - app_name\n  - --- lots of files ---\n  - demo (django project)\n    - demo\n    - **symbolic link to ../app_name**\n\nI failed to implement the above scenario because I did not have access to the cookiecutter context in my hooks and therefore `app_name`. \n\nI looked up the code and found that:\n- `generate.generate_files` function was calling the `hook.run_hook` function\n- `generate.generate_files` function had cookiecutter context that was required in the hooks.\n- Finally, the environment variables passed to the process initiated by the `subprocess.Popen` function can be controlled by setting `os.environ` dictionary - [Reference](http://stackoverflow.com/questions/4906977/python-environment-variables)\n\nThe implementation that followed seems simple and elegant. I am now able to write the symbolic link command that accesses `app_name` from cookiecutter context by extracting it from `os.environ`. All the tests are passing. If you approve, I will update the documentation to reflect this feature.\n\nN. B. This is my first pull-request. I have tried to follow the instructions chalked out in `contribution guide` but there is a chance I may have missed a point or two. I am eager to improve upon this.\n",
    "head_branch": "cookiecutter-context-hooks",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd3bac254a19ac29e93a",
    "number": 135,
    "body": "This adds the command line options '--keep-trailing-newline' (or '-n').\n\nI'm not sure whether 'n' is the right letter to shorten it to and might require some thought.\n\nI added a newline to one of the test samples. I'm not sure whether that would be okay, or whether it would be better to add a new file to check this with.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd3bac254a19ac29e93b",
    "number": 134,
    "body": "I just added my created cookiecutter for C++ Projects using CMake.\nWould be very nice to get it on your list of awesome cookiecutters :smiley: \n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd3cac254a19ac29e93c",
    "number": 132,
    "body": "You can add a key `_ignore_files` in your cookiecutter.json containing\na list of filenames (or a globs) that will be skipped on rendering.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd3dac254a19ac29e93d",
    "number": 131,
    "body": "Adding a template for simple emacs lisp packages\n",
    "head_branch": "el",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd3eac254a19ac29e93e",
    "number": 130,
    "body": "This fixes PR 129: https://github.com/audreyr/cookiecutter/issues/129\n\nI also removed some other warnings while I was in there....\n",
    "head_branch": "ned/fix-docs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd3eac254a19ac29e93f",
    "number": 122,
    "body": "Extended the URL detection in order to support git repositories accessed over ssh. \nA call would the look something like this:\ncookiecutter ssh://user@host/path-to-repo.git\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd3fac254a19ac29e940",
    "number": 118,
    "body": "http://pythonwheels.com/\n@kennethreitz made me do it: https://twitter.com/kennethreitz/status/401282035429699584\n(I am always going to write wheel whee! from now on)\n",
    "head_branch": "whee",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd40ac254a19ac29e941",
    "number": 116,
    "body": "If cookiecutter is used inside of a project creation automation, you\nwant to not only give --no-input, but also supply input values other\nthan the ones in the default file.\n\nAdd a command line option, --context-file, which allows overriding the\ndefault location for default values.\n",
    "head_branch": "take-json-arg",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd41ac254a19ac29e942",
    "number": 115,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd42ac254a19ac29e943",
    "number": 114,
    "body": "Changing easy_install for pip\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd42ac254a19ac29e944",
    "number": 113,
    "body": "Fixes #83\n",
    "head_branch": "clarify-output-directory-in-readme",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd43ac254a19ac29e945",
    "number": 110,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd44ac254a19ac29e946",
    "number": 109,
    "body": "Russell Keith-Magee and Elan Shanker were missing from the authors list, but given credits in the 0.7.0 release notes. This pull request corrects that and places them in the authors file.\n",
    "head_branch": "author-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd45ac254a19ac29e947",
    "number": 103,
    "body": "Simple Jinja Tag Plugin system based on setuptools entry points.\n\nSample plugin implementations are available here:\n\nhttps://github.com/aventurella/cookiecutter_wordpress_secret\nhttps://github.com/aventurella/cookiecutter_django_secret\n",
    "head_branch": "plugins",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd46ac254a19ac29e948",
    "number": 102,
    "body": "You can now run the pre/post hooks through jinja allowing for context variables to be accessed\n",
    "head_branch": "feature_context_jinjad_hooks",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd46ac254a19ac29e949",
    "number": 101,
    "body": "adding ability for pre/post hooks to be run in same virtual env if the suffix of the hook file is .py\n",
    "head_branch": "feature_virtualenv_hooks",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd47ac254a19ac29e94a",
    "number": 100,
    "body": "Allow the initial `config_dict` to be passed as an argument to the `cookiecuter()` function rather than impose the default user config from within `cookiecutter()`. \n\nNote that `main()` still runs though `get_user_config()` for the CLI aspect of Cookiecutter.  For the user that is composing Cookiecutter in a larger python program, they can decide what `config_dict` is when calling `cookiecutter()` from within python assuming they make it conform to the expected keys defined in `config.DEFAULT_CONFIG`\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd48ac254a19ac29e94b",
    "number": 97,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd49ac254a19ac29e94c",
    "number": 96,
    "body": "Added Quokka CMS module cookiecutter\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd4aac254a19ac29e94d",
    "number": 95,
    "body": "",
    "head_branch": "readme-typo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 6032bc7ab3dafc6019dd97d1c929b8301dc30f42 into 9df07d485444c42747bd53044ef2a21ad5c72935"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd4aac254a19ac29e94e",
    "number": 93,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 65434f78b3e9eccf9f9515155c82803425848583 into 5a3a55e9d63ed06ea648512a8f773613819de8ea"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd4bac254a19ac29e94f",
    "number": 91,
    "body": "I put together a template and added it to the list incase it's of interest.  Thanks :)\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 5bdbb38db782528b137f58b4017d16cb918daa4e into f251b5284bd69e5a3d3a5ede80d5afbd8cf94ebc"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd4cac254a19ac29e950",
    "number": 90,
    "body": "This is only for the cookiecutter API, not for the commandline.\n",
    "head_branch": "output_dir",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd4dac254a19ac29e951",
    "number": 89,
    "body": null,
    "head_branch": "version",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 84cd456b184c5501f7134bb0dbfb639b36268467 into 2baa1d393749189dfe9fcae77dc4bad9cd5cfdf5"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621dd4eac254a19ac29e952",
    "number": 79,
    "body": "For whatever reason, the jinja render does not seem to like trailing\nnewlines - which means it generates files with noeol. vim helpfully\nfixes that for people, which means that generated files that are then\nedited get an extra newline added in addition to the first edit.\n\nSimple fix - add newline.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd4eac254a19ac29e953",
    "number": 77,
    "body": "From any hook script you can run `cookiecuttereval -e  VAR` and that will print in stdout the value of the variable. To do this I save the final configuration to an temporary file named `repo_name-cookiecutter.json` while cookiecutter is running. Then that script looks at `COOKIECUTTER_CONTEXT_FILE` for the path to that file and reads the configuration from there. This variable is configured correctly for each hook script being run so you can run the command without worrying about anything else from within any hook.\n\nI tested this as well as I could but there are different scripts cooperating so I have definitely missed some edge cases.\n\nEDIT: Looks like I could not depend on the project having a repo_name so I decided to name the temporary config file `.tmp-cookiecutter.json`. This might cause confusion if running simultaneous cookiecutter instances, but let's go with this one for now.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd4fac254a19ac29e954",
    "number": 75,
    "body": "ref: #12\n",
    "head_branch": "extra_context",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd50ac254a19ac29e955",
    "number": 74,
    "body": "",
    "head_branch": "list-of-cookiecutters2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd51ac254a19ac29e956",
    "number": 72,
    "body": "It now lives on an official OpenStack org.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge f13d179d7054a066bdb1cca95f992140c49c7058 into 0bfef8aac2b3dabccceb63ac071dcc350e6c09b8"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd52ac254a19ac29e957",
    "number": 70,
    "body": "",
    "head_branch": "list-o-cookiecutters",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd52ac254a19ac29e958",
    "number": 69,
    "body": "",
    "head_branch": "0.7_windows_compat",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 9507058389856ad375a03dd3b8ca6ad3358c1725 into 5e6bab7670479afd231c28ffa615e6b03948219b"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd53ac254a19ac29e959",
    "number": 68,
    "body": "This solves #28.\n\nI didn't wanted to apply file permissions at different places (binary vs. non-binary files) so I decided to clean-up the code a bit. It's slightly different to the previous behaviour in the sense that basename of infile itself can now be templated (why shouldn't it?). I looked at the history of these lines and really couldn't figure out why it has been implemented this way. (If there are good reasons not to template the basename of infile, let me know.)\n",
    "head_branch": "apply-file-permissions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 6621ddacb21ac0300a5ec2b8dfbcd8c4240db9c5 into f1054e602347fc1bc80eca589eb73779060743be"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621dd54ac254a19ac29e95a",
    "number": 66,
    "body": "Hi,\n\nI converted my json config reading functions to yaml, as discussed in #34. (This adds the PyYaml libraries to the list of dependencies).\n\nI haven't tried to integrate it into the rest of the code this time, as i still haven't fixed my issues with tox and i remember my previous try breaking a lot of tests (this new pull request might break a few as well, hopefully not too much).\n\nI'm also not sure how to deal with global testing once it's integrated, since most core functions will probably depend on the config file and might mess with the actual user's config when running the tests...\n\nIt's quite useless right now, but I don't want to mess with the rest of the code before i can make sure i'm not trashing too much of what's already there, so here goes. \n",
    "head_branch": "config-yaml",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 68d55195d8d8fec2979e8c4c3d7bb4c6f537c8d4 into 2a72b26f63c81e3ceb64d8fd920f3a1327aa0e13"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621dd55ac254a19ac29e95b",
    "number": 65,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 20f312882615ab9c404990a52a362291c84d1935 into b2ca18b56521ee7f4e3ccd37c53e7ff553e3c43f"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd56ac254a19ac29e95c",
    "number": 62,
    "body": "Fix #61 - use default unicode string\n",
    "head_branch": "fix-unicode-default-input-value",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 38c2ec4926b63ffcf9b92924b7326a0fe44662ab into 1ea2fcca229d03f9418bb4cffa9e8fd29da5d27c"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621dd57ac254a19ac29e95d",
    "number": 57,
    "body": "Fix #56 - UnicodeEncodeError when the prompt string contains non ascii characters.\n",
    "head_branch": "fix-unicode-prompt",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 7320c0e7bf23b27fd246fdca0be2450cd59ae735 into 33c81e1a884a2a86fefae0c1a103dd7ca40c7775"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621dd57ac254a19ac29e95e",
    "number": 54,
    "body": "with this option, cookiecutter now ask for confirming the parameters and copy the repo before appliying the templates and then remove the copy leaving the new repo alone without touching the 'reference local repository'.\n\n(I was not so inspired for the argument name...)\n",
    "head_branch": "localrepo_as_remote",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 5e4bde6a45d7c431c0f13c43c9f79942fd43ba54 into cf1fb097655d0a21494bbfaaf2c70265d60e1f0f"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621dd58ac254a19ac29e95f",
    "number": 53,
    "body": "...yntaxError\n\nThis fixes #50.\n",
    "head_branch": "verbose-template-syntax-error",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 3111b67b6bb7ffba3a42dc996b43467adee5e86c into 1c9d1e0aab1393d023987c42f5d466d23d659e8f"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd59ac254a19ac29e960",
    "number": 52,
    "body": "```\nUse .hg in the end of the repo to indicate that is a mercurial repo.\n\n- Added mercurial for test dependency.\n- Added test for mercurial checkout.\n- Refactored vcs.py to reuse delete code.\n```\n",
    "head_branch": "mercurial_support",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge de1cd76ef2c2ee8cdb672498a4a4a921f4212490 into cf1fb097655d0a21494bbfaaf2c70265d60e1f0f"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621dd5aac254a19ac29e961",
    "number": 51,
    "body": "When using a command such as cookiecutter /path/to/template, Jinja would raise an error complaining that the template file was not found.\n",
    "head_branch": "absolute-paths",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 14eef068885e310ebcdeb7ea3926e123428773c7 into cf1fb097655d0a21494bbfaaf2c70265d60e1f0f"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621dd5bac254a19ac29e962",
    "number": 49,
    "body": "",
    "head_branch": "aptivate-git_branch",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 5e7dd5c43d6701b77433fe9e84714e6bec039429 into baa2c648e2d9d2b9b4bc7cbec9a18681a6c7e902"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd5bac254a19ac29e963",
    "number": 48,
    "body": "I started experimenting with running optional external scripts before and after a project generation, as i suggested in #33. I ignored the initial idea of hooks acting on the context, as this seemed harder to integrate with the current code. I'm thinking the run_hook function could do some dispatching to handle those. The two hooks implemented here could be used to create a virtualenv, initiate a git repo, pip install dependencies...\n\nThe way i'm avoiding copying the `hooks` directory is pretty ugly. This suggests that a more standardized way of ignoring some template files/directories could be handy.\n\nI'm still having trouble running tox, so i hope this doesn't break things under 2.6 or 3.*. The whole suite ran fine under 2.7.\n",
    "head_branch": "hooks",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 19d56c8411ecf2260bf31980871db5c04e388dd5 into cf1fb097655d0a21494bbfaaf2c70265d60e1f0f"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621dd5cac254a19ac29e964",
    "number": 47,
    "body": "- Adds a crypto module with a `get_secret_key()` function.\n- In `main.cookiecutter()` the `crypto.get_secret_key()` function is injected into the cookiecutter context.\n- Included test coverage.\n",
    "head_branch": "add-secret-key-function",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd5dac254a19ac29e965",
    "number": 46,
    "body": "This work adds an optional flag `--checkout` that allows you to specify a branch, tag or commit (ie any valid argument to `git checkout`) that will be used with `git checkout` after the clone but before any other work is done.  This would allow a develop branch etc to be used.\n\nThis would be a solution to issue #21.\n\nThings I'm not sure about:\n- tests - I've added tests for the smaller bits, but not an overall integration test.  That would require a test repository with (say) a file that existed on one branch but not the other.  Do you require an integration test before merging?\n- I've used subprocess so I can use the `cwd` argument. I notice you've used `os.system` elsewhere. Is using subprocess OK?\n- `--branch` might be clearer for the standard use case.  Do you have a preference for which flag name to use?\n",
    "head_branch": "git_branch",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 5ebfd1b4ea790b452992a49de0727a69199bbc41 into cf1fb097655d0a21494bbfaaf2c70265d60e1f0f"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621dd5eac254a19ac29e966",
    "number": 45,
    "body": "I'm not sure if this is wanted but it fixes #40\n",
    "head_branch": "automatic-git-append",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd5fac254a19ac29e967",
    "number": 43,
    "body": "",
    "head_branch": "update-template-names",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 5f4e9b4972bc18164520471f95c7e6914b2eed9d into 8f8c4872594df6efd3f3c35d4041ad91d7f29958"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd5fac254a19ac29e968",
    "number": 41,
    "body": "This solves a problem where files in nested, templated paths would raise an IOError:\ne.g. {{cookiecutter.repo_name}}/{{cookiecutter.repo_name}}/binaryfile\n\nThis also removes the requirements file from tox.ini (since it doesn't exist). Instead, deps are\nspecified explicitly.\n",
    "head_branch": "fix-binary-files-in-nested-paths",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 0314b256807f3de33ec26ca3227ea740aa5e86fb into 081c098762537fa04c245269cbe38b14041e6430"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621dd60ac254a19ac29e969",
    "number": 38,
    "body": "",
    "head_branch": "logo-fix-for-pypi",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 87ad1ddd62dfbde36ac2e531b3cc43c83cbd99cd into 03f22f29195005ddb323eaaa5a8df8c68f8130b1"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd61ac254a19ac29e96a",
    "number": 32,
    "body": "",
    "head_branch": "add-mock-for-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge dfe1d78fcbcc5eb46df3daf68f6732cf234fa170 into 36c5270c44684abe5210641c7241841f8ff5fc9d"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd62ac254a19ac29e96b",
    "number": 31,
    "body": "Hi, i started working on handling a global configuration file. I've settled for a json format, as it should be easy to use and prove consistent with the template's individual config file.\n\nI wrote a couple of helpers to allow comments in the json file - might not be terribly useful, but could help having a more user friendly format. Global configuration is read when generating the context and updated with any values defined by the current template, and an empty one is created if it doesn't already exists (I'm thinking we could prompt the user for the values it will hold).\n\nI've included a \"template_dirs\" value, which isn't used at all at the moment, but could point to some directory holding local templates, as suggested in issue #25.\n\nI could only test it under linux, and under 2.7 (tried to use tox and watched it crash - I'll need to figure out how this works). Hope nothing breaks in other versions.\n\nStill a work in progress but hopefully might inspire more ideas.\n",
    "head_branch": "config",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd63ac254a19ac29e96c",
    "number": 20,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 134b5d5d73f9bf46937e550b25801e1daf71842c into efa0cb93fca2d8c9342ec2b2f84f83befabba6ac"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621dd63ac254a19ac29e96d",
    "number": 17,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 7b7f313ff0be9e08aa1c726c583eb88a4afe0bb5 into a67cb2cca099f11d5100d4c9de2108977f1d95cc"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  }
]