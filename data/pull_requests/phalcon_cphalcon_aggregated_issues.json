[
  {
    "_id": "6621243b18912b45d36a2d21",
    "number": 16564,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #16532 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\Db\\Column::TYPE_BINARY` and `Phalcon\\Db\\Column::TYPE_TINYINTEGER` to have unique values\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T16532-column-corrections",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16564 from niden/T16532-column-corrections\n\nT16532 column corrections"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621243c18912b45d36a2d22",
    "number": 16563,
    "body": "Reverts phalcon/cphalcon#16562\r\n\r\nWrong branch",
    "head_branch": "revert-16562-T16532-column-corrections",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16563 from phalcon/revert-16562-T16532-column-corrections\n\nRevert \"T16532 column corrections\""
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621243e18912b45d36a2d23",
    "number": 16562,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #16532 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\Db\\Column::TYPE_BINARY` and `Phalcon\\Db\\Column::TYPE_TINYINTEGER` to have unique values\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T16532-column-corrections",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16562 from niden/T16532-column-corrections\n\nT16532 column corrections"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621243f18912b45d36a2d24",
    "number": 16561,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #16560 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\Filter\\Validation\\Validator\\StringLength::validate()` to correctly use the `include` parameter\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T16560-min-max-validator",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16561 from niden/T16560-min-max-validator\n\nT16560 min max validator"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621244018912b45d36a2d25",
    "number": 16556,
    "body": "Hello!\r\n\r\n* Type: code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nModifying the way methods are annotated for \\Phalcon\\Filter\\Filter. Specifically, the return type of each method is now placed before the method name rather than after.  This change is consistent across all method annotations in the documentation, enhancing clarity and aligning with a more standard annotation format for PHP methods.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "5.0.x",
    "is_a_fork": true,
    "comments": [
      "Thank you @jturbide "
    ],
    "commit_messages": [
      "Merge pull request #16556 from jturbide/5.0.x\n\nModifying the way methods are annotated for \\Phalcon\\Filter\\Filter"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621244118912b45d36a2d26",
    "number": 16554,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #16551 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Mvc\\Cli\\Router` to extend the `RouterInterface`\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T16551-cli-router",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16554 from niden/T16551-cli-router\n\nT16551 cli router"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621244218912b45d36a2d27",
    "number": 16552,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "add",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16552 from phalcon/add\n\nadd backer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621244318912b45d36a2d28",
    "number": 16550,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "remove",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16550 from phalcon/remove\n\nremove backer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621244418912b45d36a2d29",
    "number": 16548,
    "body": "5.6.2 Release",
    "head_branch": "5.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16548 from phalcon/5.0.x\n\n5.6.2 Release"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621244618912b45d36a2d2a",
    "number": 16547,
    "body": "5.6.2 Prep",
    "head_branch": "5.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16547 from niden/5.0.x\n\n5.6.2 Prep"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621244718912b45d36a2d2b",
    "number": 16545,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #16543 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nChanged `Phalcon\\Mvc\\View\\Engine\\Volt\\Compiler::filter` to use the helper with `upper` and `lower` for UTF-8 characters \r\nChanged `Phalcon\\Di\\AbstractInjectionAware` to extend `stdClass` for PHP 8.2 deprecation warnings \r\n\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T16543-volt-upper",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16545 from niden/T16543-volt-upper\n\nT16543 volt upper"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621244818912b45d36a2d2c",
    "number": 16533,
    "body": "* Type: New Feature\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/16318\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nI have created a new workflow that automatically builds the php_phalcon.dll files for use with all Windows PHP 8.x variants. The compiled extensions are appropriately named, bundled with ``License.txt`` and added as artifacts. The workflow has been tested and confirmed to be working.\r\n\r\nThanks to @niden for his base script as contribution for this fix as well as his guidance to help get this completed.\r\n\r\n",
    "head_branch": "actions-windows-dll",
    "is_a_fork": true,
    "comments": [
      "Thank you @JMoodyFWD "
    ],
    "commit_messages": [
      "Merge pull request #16533 from JMoodyFWD/actions-windows-dll\n\nNew Workflow - Build Windows DLLs"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621244918912b45d36a2d2d",
    "number": 16527,
    "body": "5.6.1 Release",
    "head_branch": "5.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16527 from phalcon/5.0.x\n\n5.6.1 Release"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621244b18912b45d36a2d2e",
    "number": 16526,
    "body": "5.6.1 Prep",
    "head_branch": "5.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16526 from niden/5.0.x\n\n5.6.1 Prep"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621244c18912b45d36a2d2f",
    "number": 16525,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #16263 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed deprecation warning in callables `Use of \"static\" in callables is deprecated` for PHP 8.2+ \r\n\r\nThanks\r\n\r\n",
    "head_branch": "T16263-deprecation-warnings",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16525 from niden/T16263-deprecation-warnings\n\nT16263 deprecation warnings"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621244d18912b45d36a2d30",
    "number": 16524,
    "body": "The HAVE_JSON symbol is removed with PHP 8.4.0+.\r\n\r\nHello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/16523\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThe HAVE_JSON symbol is removed with PHP 8.4.0+ in php_config.h. Perhaps fixing this can be done something like in the pull request, since the PHP 8.0 is the minimum required version for Phalcon since Phalcon 5.6.\r\n\r\nOtherwise, PR needs to be adjusted further.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "patch-json",
    "is_a_fork": true,
    "comments": [
      "@Jeckerson  to review\r\n\r\n@petk Please target 5.0.x branch. We don't commit directly to master.\r\n\r\nThank you!",
      "This is from Zephir side, will try check soon."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621244e18912b45d36a2d31",
    "number": 16521,
    "body": "Aligning Changelog",
    "head_branch": "5.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16521 from niden/5.0.x\n\nAligning Changelog"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621244f18912b45d36a2d32",
    "number": 16520,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/16519\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nI have fixed it, it doesn't look as nice as before, but it works any content type now :)\r\n\r\nThanks\r\n\r\n",
    "head_branch": "issue-16519",
    "is_a_fork": true,
    "comments": [
      "@sinbadxiii Can you please target the v5.0.x branch? I will make another PR to update the 5.4.x branch with the latest changes.",
      "> @sinbadxiii Can you please target the v5.0.x branch? I will make another PR to update the 5.4.x branch with the latest changes.\r\n\r\nexactly! I missed a little :) I have changed the branch",
      "@sinbadxiii we have a conflict - it shows the changelog and a postgres file not being updated properly. Maybe if you pull and rebase?",
      "> @sinbadxiii we have a conflict - it shows the changelog and a postgres file not being updated properly. Maybe if you pull and rebase?\r\n\r\n@niden is it better now?",
      "Perfect. Thank you @sinbadxiii \r\n\r\nI will add a line to the changelog :)"
    ],
    "commit_messages": [
      "Merge pull request #16520 from sinbadxiii/issue-16519\n\nfixed skipping application/x-www-form-urlencoded in getPut()"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621245018912b45d36a2d33",
    "number": 16517,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "add",
    "is_a_fork": false,
    "comments": [
      "Thank you @Arhell "
    ],
    "commit_messages": [
      "Merge pull request #16517 from phalcon/add\n\nadd backer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621245218912b45d36a2d34",
    "number": 16516,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #16514 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\Mvc\\Model::toArray` to ignore getters when the field name is `source`.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T16514-find-with-source",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16516 from niden/T16514-find-with-source\n\nT16514 find with source"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621245318912b45d36a2d35",
    "number": 16509,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n\r\nBased on work from @fbclol\r\n\r\nhttps://github.com/phalcon/cphalcon/pull/16371\r\n\r\nRebased and updated changelog",
    "head_branch": "T16371-postgres-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16509 from niden/T16371-postgres-fix\n\nT16371 postgres fix"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621245418912b45d36a2d36",
    "number": 16508,
    "body": "Reverts phalcon/cphalcon#16507",
    "head_branch": "revert-16507-T16371-postgres-fix",
    "is_a_fork": false,
    "comments": [
      "Wrong branch"
    ],
    "commit_messages": [
      "Merge pull request #16508 from phalcon/revert-16507-T16371-postgres-fix\n\nRevert \"T16371 postgres fix\""
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621245518912b45d36a2d37",
    "number": 16507,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n\r\nBased on work from @fbclol\r\n\r\nhttps://github.com/phalcon/cphalcon/pull/16371\r\n\r\nRebased and updated changelog",
    "head_branch": "T16371-postgres-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16507 from niden/T16371-postgres-fix\n\nT16371 postgres fix"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621245918912b45d36a2d38",
    "number": 16504,
    "body": "5.6.0 Release",
    "head_branch": "5.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16504 from phalcon/5.0.x\n\n5.6.0 Release"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621245a18912b45d36a2d39",
    "number": 16503,
    "body": null,
    "head_branch": "5.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16503 from niden/5.0.x\n\n5.6.0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621245d18912b45d36a2d3a",
    "number": 16501,
    "body": "5.5.1 Release",
    "head_branch": "5.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621245f18912b45d36a2d3b",
    "number": 16500,
    "body": "5.5.1 prep",
    "head_branch": "5.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16500 from niden/5.0.x\n\n5.5.1 prep"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621246018912b45d36a2d3c",
    "number": 16499,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #16498 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\Mvc\\Model::toArray` changing the conditionals for population to remove segfault.\r\n\r\nThanks\r\n\r\n\r\nCredit: @FredericSchwarz",
    "head_branch": "T16498-model-toarray-segfault",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16499 from niden/T16498-model-toarray-segfault\n\nreworking the toarray conditionals"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621246118912b45d36a2d3d",
    "number": 16497,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #16489 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\Storage\\Adapter\\Apcu::phpApcuFetch` to stop producing warnings due to the second parameter.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T16489-apcu-fetch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16497 from niden/T16489-apcu-fetch-2\n\nT16489 apcu fetch 2"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621246318912b45d36a2d3e",
    "number": 16496,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #16489 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\Storage\\Adapter\\Apcu::phpApcuFetch` to stop producing warnings due to the second parameter.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T16489-apcu-fetch",
    "is_a_fork": true,
    "comments": [
      "Closing because of a corrupted `ext`"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621246418912b45d36a2d3f",
    "number": 16495,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nThanks\r\n\r\n",
    "head_branch": "#16489-adjust-apcu_fetch",
    "is_a_fork": false,
    "comments": [
      "Closing after talking with Jeckerson : merging the duplicate one:\r\n\r\nhttps://github.com/phalcon/cphalcon/pull/16496"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621246518912b45d36a2d40",
    "number": 16494,
    "body": "Hello!\r\n\r\n* Type: documentation\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n\r\nSmall description of change:\r\nMy IDE (phpstorm) was getting confused because inside the IDE stubs for the `Phalcon\\Html\\Helper\\Input\\Select` class there are `@property` comments for the class fields (`elementTag`, `inOptGroup` and `selected`) as well as the class fields themselves. My IDE was thinking that each of the fields are actually two fields with the same name but one public and one protected. \\\r\nThis is why I deleted the `@property` comments to solve this confusion of my IDE.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "select-delete-property-comments",
    "is_a_fork": true,
    "comments": [
      "Thank you @kuhler-Stratege "
    ],
    "commit_messages": [
      "Merge pull request #16494 from kuhler-Stratege/select-delete-property-comments\n\nRemoved property comments in Select Helper"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621246618912b45d36a2d41",
    "number": 16493,
    "body": "Hello!\r\n\r\n* Type: documentation\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n\r\nSmall description of change:\r\nIn my IDE-stubs I have seen that the function `getReusableRecord` of the class `Phalcon\\Mvc\\Model\\Manager` is marked as void method. I now added a comment with a return type of `mixed`.\r\n\r\nThanks",
    "head_branch": "manager-return-types",
    "is_a_fork": true,
    "comments": [
      "@kuhler-Stratege Please rebase or merge `5.0.x` branch.",
      "Thank you @kuhler-Stratege "
    ],
    "commit_messages": [
      "Merge pull request #16493 from kuhler-Stratege/manager-return-types\n\nAdded return type for Manager::getReusableRecords"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621246718912b45d36a2d42",
    "number": 16492,
    "body": "Hello!\r\n\r\n* Type: documentation\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThese links redirect to never ending loop.\r\n\r\n\r\n",
    "head_branch": "patch-install-docs",
    "is_a_fork": true,
    "comments": [
      "Thank you @petk - Much appreciated"
    ],
    "commit_messages": [
      "Merge pull request #16492 from petk/patch-install-docs\n\nUpdate docs links to current working URLs"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621246818912b45d36a2d43",
    "number": 16491,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/16490\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [X] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [X] I have checked that another pull request for this purpose does not exist\r\n- [X] I wrote some tests for this PR\r\n- [X] I have updated the relevant CHANGELOG\r\n- [X] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nAdded parameter to Model::toArray to ignore getters in order not to break serialize.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "i16490-model-toarray-serialize",
    "is_a_fork": true,
    "comments": [
      "@rudiservo Thank you for this. Can you please update the changelog also?",
      "Thank you @rudiservo ",
      "Hi guys, \r\n\r\nFirst of all, thank you for your support and quick response.\r\n\r\nWhen can we have this released?"
    ],
    "commit_messages": [
      "Merge pull request #16491 from rudiservo/i16490-model-toarray-serialize\n\nModel::toArray added parameter to ignore getters"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621246c18912b45d36a2d44",
    "number": 16486,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #16474 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nChanged `Phalcon\\Db\\Adapter\\Pdo\\Mysql` to use `PDO::ATTR_EMULATE_PREPARES` and `PDO::ATTR_STRINGIFY_FETCHES` by default for performance reasons\r\nMerged `Phalcon\\Db\\AbstractDb` with `Phalcon\\Db\\Adapter\\AbstractAdapter` since the former was not used\r\n\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T16474-emulate-prepares",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16486 from niden/T16474-emulate-prepares\n\nT16474 emulate prepares"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621246d18912b45d36a2d45",
    "number": 16485,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #16471 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\Mvc\\Model::count` to ignore the `order` parameter (needed for Posgresql)\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T16471-count-orderby",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16485 from niden/T16471-count-orderby\n\nT16471 count orderby"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621246f18912b45d36a2d46",
    "number": 16482,
    "body": "5.5.0 Release",
    "head_branch": "5.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16482 from phalcon/5.0.x\n\n5.5.0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621247018912b45d36a2d47",
    "number": 16479,
    "body": "5.4.0 Prep",
    "head_branch": "5.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16479 from niden/5.0.x\n\n5.5.0 Prep"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621247118912b45d36a2d48",
    "number": 16478,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nThanks\r\n\r\n",
    "head_branch": "#16477-php83",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16478 from phalcon/#16477-php83\n\n#16477 - Add PHP8.3 support"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621247218912b45d36a2d49",
    "number": 16475,
    "body": "Fix image crop bug\r\n\r\nHello!\r\n\r\n* Type: bug fix \r\n* Link to issue:  [Crop image using offset = 0px](https://github.com/phalcon/cphalcon/issues/16156)\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [X] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [X] I have checked that another pull request for this purpose does not exist\r\n- [] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [X] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of the change:\r\n\r\nWhen I constrain the coordinate data for cropping points to numerical values, if no cropping point is set, the default position becomes (0,0), meaning:\r\n\r\n```\r\n$offsetX = 0;\r\n$offsetY = 0;\r\n```\r\n\r\nAnd i found someone brought it up here: https://github.com/phalcon/cphalcon/issues/16156\r\n\r\nYou will notice that the default position for the cropping point is now the center of the image.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "patch-5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621247318912b45d36a2d4a",
    "number": 16472,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "remove",
    "is_a_fork": false,
    "comments": [
      "Thank you @Arhell "
    ],
    "commit_messages": [
      "Merge pull request #16472 from phalcon/remove\n\nremove backer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621247518912b45d36a2d4b",
    "number": 16469,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #16320 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nChanged `Phalcon\\Mvc\\Model::toArray` to use getters if present \r\n\r\nThanks\r\n\r\n",
    "head_branch": "T16320-model-toarray-getter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16469 from niden/T16320-model-toarray-getter\n\nT16320 model toarray getter"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621247618912b45d36a2d4c",
    "number": 16468,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #16467 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\Mvc\\Model\\ResultsetSimple::toArray` to ignore numeric indexes in case results come as not `fetch_assoc`\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T16467-column-0-to-array",
    "is_a_fork": true,
    "comments": [
      "I'm sorry I was a little confused... Where was this fix? in which version?\r\n",
      "@apoca It is in v5. It will be available with the next release which should come out in a few days."
    ],
    "commit_messages": [
      "Merge pull request #16468 from niden/T16467-column-0-to-array\n\nT16467 column 0 to array"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621247718912b45d36a2d4d",
    "number": 16466,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "remove",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16466 from phalcon/remove\n\nremove backer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621247818912b45d36a2d4e",
    "number": 16464,
    "body": "The Http request service cannot invoke filterService from container.\r\n\r\nHello!\r\n\r\n* Type: bug fix\r\n* Link to issue:\r\nbased on the documentation there: https://docs.phalcon.io/5.0/en/request#preset-sanitizers\r\nI implemented sanitizers on my Http request service with the following code:\r\n```php\r\npublic function register(DiInterface $di) : void\r\n    {\r\n        $di->setShared($this->serviceName, function () {\r\n            $request = new Request();\r\n            $request->setParameterFilters(\r\n                        'id',[\\Phalcon\\Filter\\Filter::FILTER_ABSINT],['post']\r\n                    )\r\n                    ->setParameterFilters(\r\n                        'title',\r\n                        [\r\n                            \\Phalcon\\Filter\\Filter::FILTER_TRIM,\r\n                            \\Phalcon\\Filter\\Filter::FILTER_STRIPTAGS\r\n                        ],\r\n                        ['post']\r\n                    )\r\n                    ->setParameterFilters(\r\n                        'email',\r\n                        [\r\n                            \\Phalcon\\Filter\\Filter::FILTER_EMAIL,\r\n                            \\Phalcon\\Filter\\Filter::FILTER_TRIM\r\n                        ],\r\n                        ['post']\r\n                    )\r\n            ;\r\n            return $request;\r\n        });\r\n    }\r\n```\r\nAnd then, i got an exception message, which means the DI container is `null`\r\n```\r\n\"A dependency injection container is required to access the 'filter' service\"\r\n```\r\nin this case, I have updated `getFilterService()` so that the `Request` Service can invoke system `Filter` properly.\r\n\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n\r\nThanks\r\nZike\r\n\r\n",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [
      "@zikezhang Are you using `Di` or `FactoryDefault` for your container?",
      "Hi @niden , I am using `Phalcon\\Di\\FactoryDefault` for the Http container.",
      "I am wondering if we can rename `private filterService = null;` to `private filter = null;` like it's in the `Cookie` component."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621247918912b45d36a2d4f",
    "number": 16462,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #16461 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\Filter\\Validation\\Validator\\Numericality` to return false when input has spaces\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T16461-numericality-spaces",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16462 from niden/T16461-numericality-spaces\n\nT16461 numericality spaces"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621247d18912b45d36a2d50",
    "number": 16457,
    "body": "5.4.0 Release",
    "head_branch": "5.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16457 from phalcon/5.0.x\n\n5.4.0 Release"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621248118912b45d36a2d51",
    "number": 16456,
    "body": "5.4.0 prep",
    "head_branch": "5.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16456 from niden/5.0.x\n\n5.4.0 prep"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621248218912b45d36a2d52",
    "number": 16455,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #16441 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nChanged `Phalcon\\Html\\Helper\\AbstractSeries::__invoke()` to no longer clear the internal store when called\r\nAdded `Phalcon\\Html\\Helper\\AbstractSeries::reset()` to clear the internal store when needed\r\n\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T16441-tag-factory-reset",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16455 from niden/T16441-tag-factory-reset\n\nT16441 tag factory reset"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621248318912b45d36a2d53",
    "number": 16452,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #16451 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nChanged `Phalcon\\DataMapper\\Query\\Select::columns()` to accept an array of columns (keys as aliases) instead of `func_get_args`\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T16451-dm-select",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16452 from niden/T16451-dm-select\n\nT16451 dm select"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621248518912b45d36a2d54",
    "number": 16450,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality\r\n* Link to issue: #16411 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [X] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [X] I have checked that another pull request for this purpose does not exist\r\n- [X] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "i16411",
    "is_a_fork": true,
    "comments": [
      "SqLite tests fail, the tests are fixed in one of the PR I previously made, I will rebase this once they are approved.\r\nfeel free to check and comment."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621248618912b45d36a2d55",
    "number": 16449,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality\r\n* Link to issue: #16409 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [X] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [X] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nGetRelated should reuse already fetched relation inside the model, avoiding more hits to the database.\r\nIf devs need fresh data they can use Model::refresh and with the PR also ResultSet::refresh.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "i16409",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621248718912b45d36a2d56",
    "number": 16448,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nRelated https://github.com/shivammathur/setup-php/issues/770\r\n\r\nThanks\r\n\r\n",
    "head_branch": "macos-12",
    "is_a_fork": false,
    "comments": [
      "@niden Single, second based, test failed, all another things works fine. Merging."
    ],
    "commit_messages": [
      "Merge pull request #16448 from phalcon/macos-12\n\nMacOS 12"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621248918912b45d36a2d57",
    "number": 16447,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: -\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nRedis cache adapter: using new `timeout` option with Redis connection instead of `lifetime`\r\n\r\nThanks\r\n\r\n",
    "head_branch": "redis-timeout-option",
    "is_a_fork": true,
    "comments": [
      "@misantron You probably want to put this to phalcon 5 branch not 4.",
      "@rudiservo no, there is no issue at version 5",
      "I am going to try and rebase this to 4.2.x",
      "Thank you @misantron "
    ],
    "commit_messages": [
      "Merge pull request #16447 from misantron/redis-timeout-option\n\nDo not use lifetime option as Redis connection timeout"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621248a18912b45d36a2d58",
    "number": 16446,
    "body": "Hello!\r\n\r\n* Type: bug\r\n* Link to issue: #16265 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nChanged `Phalcon\\Mvc\\Model::getMessages()` to also filter with an array of fields\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T16265-getmessages-array",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16446 from niden/T16265-getmessages-array\n\nT16265 getmessages array"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621248b18912b45d36a2d59",
    "number": 16445,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #16430 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nAdded the ability to define interpolator characters for the `Phalcon\\Logger\\Formatter\\Line`\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T16430-logger-interpolation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16445 from niden/T16430-logger-interpolation\n\nT16430 logger interpolation"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621248c18912b45d36a2d5a",
    "number": 16444,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #16390 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\Filter\\Validation\\Validator\\Size\\*` validators to correctly detect the size of uploaded files\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T16390-min-max-validation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16444 from niden/T16390-min-max-validation\n\nT16390 min max validation"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621248d18912b45d36a2d5b",
    "number": 16438,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #16437\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [X] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [X] I have checked that another pull request for this purpose does not exist\r\n- [] I wrote some tests for this PR\r\n- [X] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nView on reset() now sets content to the default (\"\") empty string.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "i16437",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16438 from rudiservo/i16437\n\nFix for #16437"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621248e18912b45d36a2d5c",
    "number": 16435,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [X] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [X] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [X] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "i16426",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16435 from rudiservo/i16426\n\nAnnotations emptyString was not working"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621248f18912b45d36a2d5d",
    "number": 16433,
    "body": "5.3.1 Release",
    "head_branch": "5.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16433 from phalcon/5.0.x\n\n5.3.1 Release"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621249118912b45d36a2d5e",
    "number": 16432,
    "body": "Hello!\r\n\r\n* Type: release\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nThanks\r\n\r\n",
    "head_branch": "5.3.1-Prep",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16432 from phalcon/5.3.1-Prep\n\n5.3.1 prep"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621249218912b45d36a2d5f",
    "number": 16431,
    "body": "Hello!\r\n\r\n* Type: bug fix | code quality\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nRequest service is picked for each route inside the routes cycle and is picked as shared service, which in some cases might contain previous request's information.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "router-memory-leak",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16431 from phalcon/router-memory-leak\n\nFix memory leak in `Router::handle()`"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621249318912b45d36a2d60",
    "number": 16429,
    "body": "Hello!\r\n\r\n* Type: enhancement\r\n* Link to issue: #16427 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nAdded interpolation tests for Logger\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T16427-logger-interpolation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16429 from niden/T16427-logger-interpolation\n\nT16427 logger interpolation"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621249418912b45d36a2d61",
    "number": 16424,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature\r\n* Link to issue: #16029 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [X] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [X] I have checked that another pull request for this purpose does not exist\r\n- [X] I wrote some tests for this PR\r\n- [X] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nAdded ORM Multiple fields in relations, also added a lot more tests for relations that where not present\r\n\r\nThanks\r\n\r\n",
    "head_branch": "i16029",
    "is_a_fork": true,
    "comments": [
      "Do not merge yet!",
      "It's ok now."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621249518912b45d36a2d62",
    "number": 16421,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #16420\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [X] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [X] I have checked that another pull request for this purpose does not exist\r\n- [X] I wrote some tests for this PR\r\n- [X] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "i16420",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16421 from rudiservo/i16420\n\nFix #16420, fixed metadata get column from cache adapters, added tests"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621249618912b45d36a2d63",
    "number": 16415,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #16414 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nForced `routeId` in `Phalcon\\Mvc\\Router\\Route` to always return a string\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T16414-route-routeid-type-error",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16415 from niden/T16414-route-routeid-type-error\n\nT16414 route routeid type error"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621249718912b45d36a2d64",
    "number": 16413,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nChanges to simplify logic and investigations of potential memory leaks.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "small-di-refactor",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16413 from phalcon/small-di-refactor\n\nRefactor & simplify Di and Service classes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621249b18912b45d36a2d65",
    "number": 16406,
    "body": "5.3.0 Release",
    "head_branch": "5.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16406 from phalcon/5.0.x\n\n5.3.0 Release"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662124a018912b45d36a2d66",
    "number": 16405,
    "body": "Prep for v5.3.0",
    "head_branch": "5.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16405 from niden/5.0.x\n\n5.3.0 Prep"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662124a118912b45d36a2d67",
    "number": 16404,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix-memory-leak",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16404 from phalcon/fix-memory-leak\n\nFix memory leak in Micro"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662124a218912b45d36a2d68",
    "number": 16402,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/16222\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [X] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [X] I have checked that another pull request for this purpose does not exist\r\n- [X] I wrote some tests for this PR\r\n- [X] I have updated the relevant CHANGELOG\r\n- [X] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nAdded Model::setRelated() for those who want to make a setter for relations or avoid magic __set(), changed the magical __set() to use setRelated()\r\n\r\nThanks\r\n\r\n",
    "head_branch": "i16222",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662124a318912b45d36a2d69",
    "number": 16400,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: [#16343]\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [X] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [X] I have checked that another pull request for this purpose does not exist\r\n- [X] I wrote some tests for this PR\r\n- [X] I have updated the relevant CHANGELOG\r\n- [X] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nEnabled DynamicUpdate system wide with a php config, added relevant logic and tests for DynamicUpdate\r\n\r\nThanks\r\n\r\n",
    "head_branch": "i16343",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16400 from rudiservo/i16343\n\nFix #16343, DynamicUpdate is now enabled system wide"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662124a418912b45d36a2d6a",
    "number": 16399,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: [#16395]\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [X] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [X] I have checked that another pull request for this purpose does not exist\r\n- [X] I wrote some tests for this PR\r\n- [X] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nAdded an array with already visited objects by the save or the SaveRelated chain functions in order to avoid save loops\r\nPerformance Tests where made between SplObjectStorage and the PHP Array.\r\nThere are two function to get a unique ID from a Php object, spl_object_hash and spl_object_id.\r\nUsing spl_object_hash, SplObjectStorage is faster and uses less memory, spl_object_storage is the function SplObjectStorage uses.\r\nUsing the spl_object_id the php Array is faster and uses less memory by a small margin, however since Zephir cannot pass by reference, SplObjectStorage is the better option.\r\n\r\n\r\nThanks\r\n\r\n",
    "head_branch": "i16395",
    "is_a_fork": true,
    "comments": [
      "@rudiservo please rebase this branch.",
      "@Jeckerson I think it's ok now."
    ],
    "commit_messages": [
      "Merge pull request #16399 from rudiservo/i16395\n\nFixed infinite save loop #16395"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662124a518912b45d36a2d6b",
    "number": 16397,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #16396 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nAdded `Phalcon\\Encryption\\Security\\JWT\\Builder::addHeader()` to allow adding custom headers\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T16396-jwt-addheader",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16397 from niden/T16396-jwt-addheader\n\nT16396 jwt addheader"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662124a618912b45d36a2d6c",
    "number": 16392,
    "body": "Hello!\r\n\r\n* Type: new feature | code quality\r\n* Link to issue: [#16391]\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [X] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [X] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [X] I have updated the relevant CHANGELOG\r\n- [X] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nRefactored the Model::doLowUpdate for better seperation of dynamicUpdate from normal full update.\r\nAdded better error reporting adding the class on which it happened.\r\nAdded Model::appendMessagesFrom for code quality and added the model name to the message MetaData\r\nAdded Model and relatedName to Message MetaData in several lines where there was no reference to model and/or relation where the non-exception failure occurred.\r\n\r\n\r\nThanks\r\n\r\n",
    "head_branch": "5.0.x",
    "is_a_fork": true,
    "comments": [
      "@rudiservo Can you split that into much smaller PRs please? Say one for the loader, one for the messages changed/exceptions, one for metadata etc.\r\n\r\nThere are a lot of areas that I do not understand what the goal of the changes are, for instance the keys for metadata are no longer held in lowercase.",
      "@niden sure, I did tried to make seperate pull requests, github just put it into one dont know why.\r\nIf you don't mind giving me a hint on how to make it, and if there is an easy way to just split code from a commit?\r\n\r\nMetadata changes are on their own commit.\r\n\r\nMetadata keys are in lowercase, using get_class_lower(), what they are is no longer concat with the schema and source in case of the actual MetaData, ColumnMap was always lowercase but it used two functions, get_class() and strtolower().\r\n\r\nSchema and source are pulled from the manager, and the manager associates them with the get_class_lower() only, makes no sense to make a metadata key with all that when the information is only associated with the full namespace class itself.\r\n\r\nIn the Model Messages the changes are for better error reporting, many times I do not know where the error is and I have to do a game of var_dump() die() or figuring out where in xdebug trace it failed.\r\n\r\nThe postSaveRelatedRecords is to seperate the logic through from normal, it makes code analysis simpler has well has less checks, maybe slight performance improvement.\r\nThe doLowUpdate is to seperate dynamicUpdate logic from normal full update, this helps a lot also for code analysis and has less checks, it either is or is not, maybe slight performance improvement.\r\nBoth are not behaviour changes, just code reorganization.",
      "And metadata::initialize was overblown with code that was not supposed to be there and the calls to it actually should only call initializeMetadata or InitializeColumnMap, now it's cleaner, probably very very very very very small performance improvement."
    ],
    "commit_messages": [
      "Merge pull request #16392 from rudiservo/5.0.x\n\nRefactored Model, added Loader::isRegistered, fixed Metadata behaviour"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662124a718912b45d36a2d6d",
    "number": 16387,
    "body": "Hello!\r\n\r\n* Type: bug fix maybe\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/16271\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nI added parsing of multipart/form-data from PUT Request, while it is just private method and then it can be used for different cases maybe\r\n\r\nThanks!",
    "head_branch": "issue-16271",
    "is_a_fork": true,
    "comments": [
      "Outstanding. Thank you @sinbadxiii "
    ],
    "commit_messages": [
      "Merge pull request #16387 from sinbadxiii/issue-16271\n\nParse multipart/form-data  from PUT - Issue 16271"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662124a918912b45d36a2d6e",
    "number": 16384,
    "body": "5.2.3 Release",
    "head_branch": "5.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16384 from phalcon/5.0.x\n\n5.2.3 Release"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662124ab18912b45d36a2d6f",
    "number": 16383,
    "body": "Prepping for new version",
    "head_branch": "5.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16383 from niden/5.0.x\n\n5.2.3 Prep"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662124ac18912b45d36a2d70",
    "number": 16381,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #15608 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nChanged all the `encode`/`decode` methods for JSON to use the `Phalcon\\Support\\Helper\\Json\\*` classes\r\nChanged the `Phalcon\\Support\\Helper\\Json\\*` classes to clear up `json_last_error()` before doing any conversions\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15608-json-last-error",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16381 from niden/T15608-json-last-error\n\nT15608 json last error"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662124ad18912b45d36a2d71",
    "number": 16380,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/16373\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nIn the [issue](https://github.com/phalcon/cphalcon/issues/16373) I have suggested different solutions, \r\nthis variant will not break compatibility and allow to have an associative array check.\r\n\r\nThanks!\r\n\r\n",
    "head_branch": "issue-16373",
    "is_a_fork": true,
    "comments": [
      "@sinbadxiii This is great. Can you also add a line to the changelog please?\r\n",
      "> @sinbadxiii This is great. Can you also add a line to the changelog please?\n> \n\nSure, I will do it ",
      "> @sinbadxiii This is great. Can you also add a line to the changelog please?\r\n\r\nDone\r\nI also replaced `json_decode` in **Request::getJsonRawBody** by `Phalcon\\Support\\Helper\\Json\\Decode` as it was written in other similar code in 5.0.x\r\nI hope it was the correct solution :)\r\ntests pass successfully",
      "Thank you @sinbadxiii "
    ],
    "commit_messages": [
      "Merge pull request #16380 from sinbadxiii/issue-16373\n\nIssue 16373"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662124ae18912b45d36a2d72",
    "number": 16379,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #16276 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nCorrected the return type of `Phalcon\\Mvc\\View::getVar()` so that stubs can be accurate.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T16276-view-getvar",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16379 from niden/T16276-view-getvar"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662124af18912b45d36a2d73",
    "number": 16378,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "add",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16378 from phalcon/add\n\nadd backer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662124b018912b45d36a2d74",
    "number": 16377,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #16372 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nAdded a object only in memory cache/storage system using WeakReference.\r\n\r\n\r\nThanks\r\n\r\n",
    "head_branch": "5.0.x",
    "is_a_fork": true,
    "comments": [
      "@rudiservo Don't forget to add a line to the CHANGELOG :)",
      "Thank you @rudiservo "
    ],
    "commit_messages": [
      "Merge pull request #16377 from rudiservo/5.0.x\n\nadded Weak Storage and Cache, for objects only using WeakReference"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662124b118912b45d36a2d75",
    "number": 16376,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #16308 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nExtended `Phalcon\\Di\\Injectable` from `stdClass` to remove the deprecation warning (dynamic properties) for PHP 8.2\r\n\r\nCredit: @escribiendocodigo\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T16308-di-dynamic-properties-4",
    "is_a_fork": true,
    "comments": [
      "@niden does this also fix following deprecation errors?\r\n```\r\nUse of \"static\" in callables is deprecated\r\nUse of \"self\" in callables is deprecated\r\n```",
      "> @niden does this also fix following deprecation errors?\r\n> \r\n> ```\r\n> Use of \"static\" in callables is deprecated\r\n> Use of \"self\" in callables is deprecated\r\n> ```\r\n\r\nNot yet. I am looking at it and it _could_ be that it comes from Zephir than Phalcon. I will have to talk to @Jeckerson when he comes back ",
      "I tried the patch but to no avail for the following... I'm seeing:\r\n\r\n    PHP Deprecated:  Creation of dynamic property OPNsense\\Core\\Api\\MenuController::$request is deprecated in /usr/local/opnsense/mvc/app/controllers/OPNsense/Base/ApiControllerBase.php on line 195\r\n    PHP Deprecated:  Creation of dynamic property OPNsense\\Core\\Api\\MenuController::$session is deprecated in /usr/local/opnsense/mvc/app/controllers/OPNsense/Base/ControllerRoot.php on line 149\r\n    PHP Deprecated:  Creation of dynamic property OPNsense\\Core\\Api\\MenuController::$security is deprecated in /usr/local/opnsense/mvc/app/controllers/OPNsense/Base/ApiControllerBase.php on line 298\r\n\r\nIt looks to be from the Phalcon\\Mvc\\Controller class. Any open ticket that tracks these?\r\n\r\n\r\nCheers,\r\nFranco",
      "@fichtner #16263",
      "@hakimio thanks, subscribed. though there is no collection of individual dynamic variables causing this. if the problem is wide spread it might make sense to record which ones have been reported and which ones have been addressed (by this patch). the situation is not overly transparent unfortunately.",
      "Hi @niden  ! Do you have any updates on this?\r\nI'm experiencing the same using PHP 8.2.11 + Phalcon 5.3.11",
      "Nothing changed to my knowledge. We had to disable deprecation warnings because of this so it’s not a quick check. 😉",
      "You can follow this issue to get progress updates: https://github.com/zephir-lang/zephir/issues/2405"
    ],
    "commit_messages": [
      "Merge pull request #16376 from niden/T16308-di-dynamic-properties-4\n\nT16308 di dynamic properties 4"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662124b318912b45d36a2d76",
    "number": 16375,
    "body": "# Deprecated:  Creation of dynamic property \r\n\r\n* I already have it. After, If I use find/findFirst without columns, joins, etc. I have returned a model object and all is correct here, but If you use joins, columns, etc. you receive a ResultSet with \\Phalcon\\Mvc\\Model\\Row objects, with all properties needed injected, and get a lot of messages like this:  Deprecated:  Creation of dynamic property \\Phalcon\\Mvc\\Model\\Row::$id is deprecated\r\n\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "5.0.x",
    "is_a_fork": true,
    "comments": [
      "@escribiendocodigo  Can you please issue the PR without the `ext/` folder changes? It will mess things up for us when we next release.",
      "Thank you @escribiendocodigo !"
    ],
    "commit_messages": [
      "Merge pull request #16375 from escribiendocodigo/5.0.x\n\nPhalcon\\Mvc\\Model\\Row class that extends from stdClass"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662124b418912b45d36a2d77",
    "number": 16371,
    "body": "// it gives \"{}'::character varying[]\"\r\nwhen we must have\r\n\"'{}'::character varying[]\"\r\nbecause it gives an sql error\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [X] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [X] I have checked that another pull request for this purpose does not exist\r\n- [X] I wrote some tests for this PR\r\n- [X] I have updated the relevant CHANGELOG\r\n- [X] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix",
    "is_a_fork": true,
    "comments": [
      "@niden new MR",
      "> @niden new MR\r\n\r\nCan you please rebase that to the v5.0.x branch? v4 is not supported.\r\n\r\nAlso please add a description of what this PR is for in the CHANGELOG-5.0 file. ",
      "Moved the work to here https://github.com/phalcon/cphalcon/pull/16507 since there was no update on this.\r\n\r\nThank you @fbclol "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662124b518912b45d36a2d78",
    "number": 16370,
    "body": "// it gives \"{}'::character varying[]\"\r\nwhen we must have\r\n\"'{}'::character varying[]\"\r\n\r\nbecause it gives an sql error\r\n\r\nHello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [X] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [X] I have checked that another pull request for this purpose does not exist\r\n- [X] I wrote some tests for this PR\r\n- [X] I have updated the relevant CHANGELOG\r\n- [X] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "@fbclol Thank you for this. Can you please rebase to the v5.0.x branch? v4 is no longer supported\r\n\r\nAlso some tests would be great and a description of the change in the changelog.\r\n\r\nIf you don't know how to, ping me on discord and I will guide you."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662124b618912b45d36a2d79",
    "number": 16369,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #16244 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nTried to reproduce the behavior described in #16244 but had no success.\r\nAdded `getAdapter()` in `Phalcon\\Mvc\\Model\\Metadata` to retrieve the internal cache adapter if necessary.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T16244-metadata-memcached",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16369 from niden/T16244-metadata-memcached\n\nT16244 metadata memcached"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662124b818912b45d36a2d7a",
    "number": 16368,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nThanks\r\n\r\n",
    "head_branch": "#16307-add-test-case",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16368 from phalcon/#16307-add-test-case\n\n#16307 - Add test case"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662124b918912b45d36a2d7b",
    "number": 16366,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "master",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16366 from phalcon/master\n\nrebase"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662124ba18912b45d36a2d7c",
    "number": 16365,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "upd",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16365 from phalcon/upd\n\nupdate backers"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662124bb18912b45d36a2d7d",
    "number": 16361,
    "body": "Release 5.2.2",
    "head_branch": "5.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16361 from phalcon/5.0.x\n\nRelease 5.2.2"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662124bd18912b45d36a2d7e",
    "number": 16360,
    "body": "5.2.2 Prep",
    "head_branch": "5.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16360 from niden/5.0.x\n\n5.2.2 Prep"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662124be18912b45d36a2d7f",
    "number": 16359,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "hash-test-fix",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16359 from phalcon/hash-test-fix\n\nFix hash test"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662124bf18912b45d36a2d80",
    "number": 16358,
    "body": "Hello!\r\n\r\n(new PR to use the 5.0.x branch)\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/15959\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [X] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [X] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nSetting `checked` attribute to an « empty » value doesn't check the checkbox/radio input. « empty » is understand as the return of « empty() » PHP function.\r\n\r\nFor example `0` and the `empty string` are considered empty, but `<input type=\"checkbox\" name=\"test\" value=\"0\" checked=\"checked\"/>` is a valid option that Phalcon 5 doesn't allow.\r\n\r\nThanks",
    "head_branch": "5.0.x",
    "is_a_fork": true,
    "comments": [
      "Thank you @dugwood "
    ],
    "commit_messages": [
      "Merge pull request #16358 from dugwood/5.0.x\n\nFix « empty » checkbox value"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662124c018912b45d36a2d81",
    "number": 16357,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/15959\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [X] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [X] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nSetting `checked` attribute to an « empty » value doesn't check the checkbox/radio input. « empty » is understand as the return of « empty() » PHP function.\r\n\r\nFor example `0` and the `empty string` are considered empty, but `<input type=\"checkbox\" name=\"test\" value=\"0\" checked=\"checked\"/>` is a valid option that Phalcon 5 doesn't allow.\r\n\r\nThanks",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [
      "@dugwood Can you rebase your branch please. I tried to change the base here since we use the 5.0.x branch instead of the master but it seems from the files changed some recent changes will be removed.\r\n\r\nOther than that it is looking good ",
      "I know some of the tests are failing but we are working on that.",
      "@niden sorry I thought it was 5.2.1, as it was the latest.\r\n\r\nI've deleted the branch by trying to rename it. I'll create a new PR from `5.0.x` in a few minutes.",
      "@niden here's the new PR: https://github.com/phalcon/cphalcon/pull/16358\r\n\r\nSorry for the trouble!"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662124c218912b45d36a2d82",
    "number": 16355,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix-ci",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16355 from phalcon/fix-ci\n\nFix CI"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662124c318912b45d36a2d83",
    "number": 16349,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #16348 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Storage\\Adapter\\Stream::get()/set()` to correctly calculate the path if the prefix is present in the key\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T16348-cache-stream",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16349 from niden/T16348-cache-stream\n\nT16348 cache stream"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662124c418912b45d36a2d84",
    "number": 16347,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #16339 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nRemoved `unlikely` from `if` statements from the Stream storage adapter and Json serializer\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T16339-stream-exception",
    "is_a_fork": true,
    "comments": [
      "PR to the correct branch now"
    ],
    "commit_messages": [
      "Merge pull request #16347 from niden/T16339-stream-exception\n\nT16339 stream exception"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662124c518912b45d36a2d85",
    "number": 16346,
    "body": "Reverts phalcon/cphalcon#16345",
    "head_branch": "revert-16345-T16339-stream-exception",
    "is_a_fork": false,
    "comments": [
      "This should have been towards 5.0.x"
    ],
    "commit_messages": [
      "Merge pull request #16346 from phalcon/revert-16345-T16339-stream-exception\n\nRevert \"T16339 stream exception\""
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662124c618912b45d36a2d86",
    "number": 16345,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #16339 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nRemoved `unlikely` from `if` statements from the Stream storage adapter and Json serializer\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T16339-stream-exception",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16345 from niden/T16339-stream-exception\n\nT16339 stream exception"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662124c718912b45d36a2d87",
    "number": 16340,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "add",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16340 from phalcon/add\n\nadd backer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662124c818912b45d36a2d88",
    "number": 16338,
    "body": "Hello!\r\n\r\n* Type: bug fix code quality\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "#16337-validate-signature",
    "is_a_fork": false,
    "comments": [
      "@Jeckerson we need the stubs to generate `Messages | false`. I think the `false` is what throws it off."
    ],
    "commit_messages": [
      "Merge pull request #16338 from phalcon/#16337-validate-signature\n\n#16337 - Adjust Validation:validate() signature"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662124c918912b45d36a2d89",
    "number": 16328,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [X] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [X]  I have checked that another pull request for this purpose does not exist\r\n- [ ]  I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\n\r\nThanks\r\n\r\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [
      "Thank you @zikezhang "
    ],
    "commit_messages": [
      "Merge pull request #16328 from zikezhang/patch-3\n\nUpdate Router.zep"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662124ca18912b45d36a2d8a",
    "number": 16317,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "remove",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662124cc18912b45d36a2d8b",
    "number": 16315,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "remove",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16315 from phalcon/remove\n\nremove backers"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662124cd18912b45d36a2d8c",
    "number": 16314,
    "body": "You can't specify $crypt->setHashAlgorithm('sha256'); because of a wrong use of compare \"hash\" === cipher in function Crypt->checkCipherHashIsAvailable\r\n\r\nHello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fvromera-patch-crypt-wrong-hash-algo",
    "is_a_fork": true,
    "comments": [
      "@fvromera Thank you for this. \r\n\r\nJust a FYI we don't sent PRs to the `master` other than releases. I have rebased your PR to the v5 branch",
      "Oh, I'm so sorry, I didn't know it. Next time I will do it that way.",
      "@fvromera Not a big deal. Thank you for the contribution :)"
    ],
    "commit_messages": [
      "Merge pull request #16314 from fvromera/fvromera-patch-crypt-wrong-hash-algo\n\nFix wrong checkCipherHashIsAvailable compare param"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662124ce18912b45d36a2d8d",
    "number": 16313,
    "body": "Hello!\r\n\r\n* Type: code quality | documentation\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "#16309-stubs",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16313 from phalcon/#16309-stubs\n\n#16309 - Fix namespace of DiInterface in docblock"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662124cf18912b45d36a2d8e",
    "number": 16311,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "upd",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16311 from phalcon/upd\n\nremove backers"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662124d018912b45d36a2d8f",
    "number": 16300,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nremove backers\r\nThanks\r\n\r\n",
    "head_branch": "remove",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16300 from phalcon/remove\n\nremove backers"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662124d118912b45d36a2d90",
    "number": 16298,
    "body": "5.2.1 Release",
    "head_branch": "5.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16298 from phalcon/5.0.x\n\n5.2.1 Release"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662124d518912b45d36a2d91",
    "number": 16297,
    "body": "5.2.1 prep",
    "head_branch": "5.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16297 from niden/5.0.x\n\n5.2.1 prep"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662124d918912b45d36a2d92",
    "number": 16296,
    "body": "Hello!\r\n\r\nType: bug fix\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "#16293-pcre-php8.2",
    "is_a_fork": false,
    "comments": [
      "Thank you @remicollet "
    ],
    "commit_messages": [
      "Merge pull request #16296 from phalcon/#16293-pcre-php8.2\n\n#16293 - Add `ext/pcre/php_pcre.h` header for PHP8.2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662124da18912b45d36a2d93",
    "number": 16291,
    "body": "5.2.0 Release",
    "head_branch": "5.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16291 from phalcon/5.0.x\n\n5.2.0"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662124db18912b45d36a2d94",
    "number": 16290,
    "body": "5.2.0 prep",
    "head_branch": "5.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16290 from niden/5.0.x\n\n5.2.0 prep"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662124dc18912b45d36a2d95",
    "number": 16289,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #16285\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nThanks\r\n\r\n",
    "head_branch": "#16285-cli-handle-fullnamespace-class",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662124de18912b45d36a2d96",
    "number": 16288,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nremove backer\r\nThanks\r\n\r\n",
    "head_branch": "remove",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16288 from phalcon/remove\n\nremove backer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662124df18912b45d36a2d97",
    "number": 16287,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix-win-ci",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16287 from phalcon/fix-win-ci\n\nFix win CI"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662124e018912b45d36a2d98",
    "number": 16284,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #16283 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\Html\\Helper\\Title::prepend` to correctly prepend text in subsequent calls\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T16283-title-prepend",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16284 from niden/T16283-title-prepend\n\nT16283 title prepend"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662124e118912b45d36a2d99",
    "number": 16282,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #15973\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "#15973-php8.2",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16282 from phalcon/#15973-php8.2\n\n#15973 - Add support of  PHP 8.2"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662124e218912b45d36a2d9a",
    "number": 16281,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "upd-backers",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16281 from phalcon/upd-backers"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662124e318912b45d36a2d9b",
    "number": 16280,
    "body": "Hello!\r\n\r\n* Type: code quality | documentation\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nThanks\r\n\r\n",
    "head_branch": "middleware-interface",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16280 from phalcon/middleware-interface\n\nAdd `MiddlewareInterface` into parameter type"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662124e418912b45d36a2d9c",
    "number": 16279,
    "body": "update the description of cli route. previously, it was Mvc route usage.\r\n\r\nIt's not a bug but just something regarding documentation.\r\n\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662124e518912b45d36a2d9d",
    "number": 16270,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nadd backer\r\nThanks\r\n\r\n",
    "head_branch": "add",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16270 from phalcon/add\n\nadd backer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662124e918912b45d36a2d9e",
    "number": 16259,
    "body": "5.1.4 Release",
    "head_branch": "5.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16259 from phalcon/5.0.x\n\n5.1.4 Release"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662124ea18912b45d36a2d9f",
    "number": 16258,
    "body": "5.1.4 prep",
    "head_branch": "5.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16258 from niden/5.0.x\n\n5.1.4 prep"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662124ee18912b45d36a2da0",
    "number": 16257,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #16255 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\Acl\\Adapter\\Memory::isAllowed` to not use the deprecated `ReflectionType::getClass`\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T16255-reflection-getclass",
    "is_a_fork": true,
    "comments": [
      "Hello,\r\n\r\n`Phalcon\\Mvc\\Model\\Binder`  class seems to have the same problem.\r\n\r\n```php\r\nlet reflectionClass = methodParam->getClass();\r\n```\r\n"
    ],
    "commit_messages": [
      "Merge pull request #16257 from niden/T16255-reflection-getclass\n\nT16255 reflection getclass"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662124ef18912b45d36a2da1",
    "number": 16251,
    "body": "add ttl() and pttl() to that developer can get Redis TTL.\r\n\r\nHello!\r\n\r\n* Type: new feature\r\n* Link to issue: [https://github.com/phpredis/phpredis#ttl-pttl](https://github.com/phpredis/phpredis#ttl-pttl)\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n\r\nSmall description of change:\r\nadd ttl(), pttl() for Redis.\r\nThanks\r\n\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "@zikezhang Could you please add some basic tests for theses methods?",
      "> @zikezhang Could you please add some basic tests for theses methods?\r\n\r\nHi @Jeckerson, yes, I will. I am sorry for the inconvenience.  So, one of my project, I need to implement a throttle middleware by updating the value in Redis without changing the TTL. I have to code it like this:\r\n\r\n```php \r\n $ttl  = $hits ? $cache->getAdapter()->getAdapter()->ttl($key) \r\n               :  $minutes * 60;\r\n```\r\n\r\nAs you can see. I have to call ```getAdapter()``` twice to invoke it. \r\nWe might add a similar function on each Adapter and then we can get the TTL by ``` $cache->ttl($key)```",
      "> > @zikezhang Could you please add some basic tests for theses methods?\r\n> \r\n> Hi @Jeckerson, yes, I will. I am sorry for the inconvenience. So, one of my project, I need to implement a throttle middleware by updating the value in Redis without changing the TTL. I have to code it like this:\r\n> \r\n> ```\r\n>  $ttl  = $hits ? $cache->getAdapter()->getAdapter()->ttl($key) \r\n>                :  $minutes * 60;\r\n> ```\r\n> \r\n> As you can see. I have to call `getAdapter()` twice to invoke it. We might add a similar function on each Adapter and then we can get the TTL by ` $cache->ttl($key)`\r\n\r\nAdding this to the Cache layer will alter the interface and we will need to add all these methods to the adapters and relevant interface also\r\n\r\nWe need to explore what the other adapters offer in terms of TTL so as to promote it to the adapter. Also the Cache adapters rely on the Storage namespace so all changes have to happen there first.",
      "apcu has this on https://www.php.net/manual/en/function.apcu-key-info.php\r\n\r\nMemcached has something called MetaCommands, unfortunately php-memcached is heavily reliant on libmemcached that is a bit behind.\r\nAlready submitted an issue on lauchpad  on the libmemcached project.\r\n\r\nThere is a project https://github.com/awesomized/libmemcached that is trying to implement the meta protocol for the past 3 years."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662124f318912b45d36a2da2",
    "number": 16249,
    "body": "5.1.3 Release",
    "head_branch": "5.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16249 from phalcon/5.0.x\n\n5.1.3 Release"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662124f718912b45d36a2da3",
    "number": 16248,
    "body": "5.1.3 prep",
    "head_branch": "5.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16248 from niden/5.0.x\n\n5.1.3 prep"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662124f818912b45d36a2da4",
    "number": 16246,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nremove backer\r\nThanks\r\n\r\n",
    "head_branch": "remove",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16246 from phalcon/remove\n\nremove backer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662124f918912b45d36a2da5",
    "number": 16242,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #15032 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\DI\\Service::resolve` to not call the `get()` from the container and cause an infinite loop\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15032-di-infinite-loop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16242 from niden/T15032-di-infinite-loop\n\nT15032 di infinite loop"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662124fa18912b45d36a2da6",
    "number": 16241,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #16240 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\Mvc\\Micro::handle` to type check an object for the `finish`\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T16240-micro-finish",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16241 from niden/T16240-micro-finish\n\nT16240 micro finish"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662124fb18912b45d36a2da7",
    "number": 16236,
    "body": "5.1.2 Release",
    "head_branch": "5.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16236 from phalcon/5.0.x\n\n5.1.2"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662124fd18912b45d36a2da8",
    "number": 16235,
    "body": "Prep for 5.1.2",
    "head_branch": "5.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16235 from niden/5.0.x\n\nPrep for 5.1.2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662124fe18912b45d36a2da9",
    "number": 16234,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #15822 #16233 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nFixing `Phalcon\\Html\\TagFactory` docblock for autocompletion (https://github.com/phalcon/cphalcon/commit/0129658f3ac468dcc5294d401403e166302a8069)\r\nFixed `Phalcon\\Db\\Profiler` by correctly calculating the seconds (reapplied changes) #15822 \r\nAdded `Phalcon\\Html\\TagFactory` to the `Phalcon\\Di\\FactoryDefault\\Cli` #16233  \r\n\r\nThanks\r\n\r\n",
    "head_branch": "5.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16234 from niden/5.0.x\n\nTagFactory, Profiler, Cil container fixes"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662124ff18912b45d36a2daa",
    "number": 16230,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #16223 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\Support\\Debug` to correctly calculate the documents URL for the hyperlinks\r\n\r\nAlso related: \r\nhttps://github.com/phalcon/assets/commit/12300cb9326b57152731df98f1d57c995199542c \r\nhttps://github.com/phalcon/assets/commit/ba1325d5362d3c3236857fed34c8e5c4d5a3ab81\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T16223-debug-links",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16230 from niden/T16223-debug-links\n\nT16223 debug links"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621250018912b45d36a2dab",
    "number": 16228,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nadd backer\r\nThanks\r\n\r\n",
    "head_branch": "add",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16228 from phalcon/add"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621250118912b45d36a2dac",
    "number": 16221,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nadd backer\r\nThanks\r\n\r\n",
    "head_branch": "add",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16221 from phalcon/add"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621250218912b45d36a2dad",
    "number": 16215,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #16214 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\Mvc\\Model::delete` to clear the reusable cache when deleting records using `getRelated()`\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T16214-delete-getrelated",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16215 from niden/T16214-delete-getrelated\n\nT16214 delete getrelated"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621250418912b45d36a2dae",
    "number": 16206,
    "body": "v5.1.1 Release",
    "head_branch": "5.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16206 from phalcon/5.0.x\n\n5.1.1 Release"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621250518912b45d36a2daf",
    "number": 16205,
    "body": "5.1.1 Prep",
    "head_branch": "5.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16205 from niden/5.0.x\n\n5.1.1 Prep"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621250618912b45d36a2db0",
    "number": 16204,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #16202 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\Html\\Escaper::html` to not return `null` when a zero string is passed\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T16202",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16204 from niden/T16202\n\nT16202 - Escape::html zero string"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621250718912b45d36a2db1",
    "number": 16201,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nremove backer\r\nThanks\r\n\r\n",
    "head_branch": "remove-backer",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16201 from phalcon/remove-backer\n\nremove backer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621250818912b45d36a2db2",
    "number": 16198,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nremove backers\r\nThanks\r\n\r\n",
    "head_branch": "remove",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16198 from phalcon/remove\n\nremove backers"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621250918912b45d36a2db3",
    "number": 16197,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: -\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nHey, I was going after the new version and found that there seems to be an bug when we call `sanitize` with an array `value`, array `sanitizers` and `noRecursive = true`. **The output is always the same as the initial value**.\r\nI think this change should do it as it goes to a [previous way](https://github.com/phalcon/cphalcon/pull/15734/files#diff-c589afb489a0f55dca8b29abf141bcf4d31783462ab3bd4e1780a4a86c8d5f7aL173-L179) to handle this.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "bugfix/fix-no-recursive-filter-value",
    "is_a_fork": true,
    "comments": [
      "@lubatti Thank you for this change but it seems that it double encodes values. See the tests.",
      "> @lubatti Thank you for this change but it seems that it double encodes values. See the tests.\r\n\r\nFixed, and added new test",
      "Thank you @lubatti "
    ],
    "commit_messages": [
      "Merge pull request #16197 from lubatti/bugfix/fix-no-recursive-filter-value\n\nFix no recursive array value with multiple sanitizers in Filter"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621250b18912b45d36a2db4",
    "number": 16193,
    "body": "5.1.0 Release",
    "head_branch": "5.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16193 from phalcon/5.0.x\n\n5.1.0"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621250c18912b45d36a2db5",
    "number": 16192,
    "body": "v5.1.0 prep",
    "head_branch": "5.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16192 from niden/5.0.x\n\n5.1.0 prep"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621250d18912b45d36a2db6",
    "number": 16191,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #15956 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\Form::clear` to correctly clear the elements and not recurse\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15956-clear-form",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16191 from niden/T15956-clear-form\n\nT15956 clear form"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621250f18912b45d36a2db7",
    "number": 16190,
    "body": "Hello!\r\n\r\n* Type: new feature \r\n* Link to issue: #16188 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [x] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nAdded `Phalcon\\Http\\Request::getPatch()` to get a value from a PATCH request \r\nAdded `Phalcon\\Http\\Request::getFilteredPatch()` to get a value filtered from a PATCH request\r\nAdded `Phalcon\\Http\\Request::hasPatch()` to check if a value exist in a PATCH request\r\n\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T16188-cannot-fetch-patch-payload",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16190 from niden/T16188-cannot-fetch-patch-payload\n\nT16188 cannot fetch patch payload"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621251018912b45d36a2db8",
    "number": 16189,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue:  #16186 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nCorrected default values for `Phalcon\\Cli`, `Phalcon\\Dispatcher` and `Phalcon\\Application` components to ensure not `null` values are passed to methods\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T16186-cli-application-throwing-warning-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16189 from niden/T16186-cli-application-throwing-warning-3\n\nT16186 cli application throwing warning"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621251118912b45d36a2db9",
    "number": 16187,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #16097 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\Mvc\\View\\Engine\\Volt\\Compiler::isTagFactory` to correctly detect a `TagFactory` object without throwing an error\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T16097-volt-render-notice-undefined-index-name",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16187 from niden/T16097-volt-render-notice-undefined-index-name\n\nT16097 volt render notice undefined index name"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621251218912b45d36a2dba",
    "number": 16182,
    "body": "v5.0.5 Release",
    "head_branch": "5.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16182 from phalcon/5.0.x\n\n5.0.5 Version"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621251418912b45d36a2dbb",
    "number": 16181,
    "body": "v5.0.5 Prep",
    "head_branch": "5.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16181 from niden/5.0.x\n\n5.0.5"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621251518912b45d36a2dbc",
    "number": 16179,
    "body": "Hello!\r\n\r\n* Type: bug fix / code quality\r\n\r\nSmall description of change:\r\nsince element::label is updated from `array attributes = null` to `array attributes = []` using this method with the default secondary argument will now cause an \"Fatal error: Uncaught TypeError\" to be thrown\r\n\r\nThanks",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Thank you @1RV34 ",
      "@niden one note, this issue seems to have been introduced in 4.0, it would be nice to backport a patch for 4.0 as well",
      "@1RV34 I just pushed the change to the `4.0.x` branch. Sadly we cannot produce installation packages for v4, you will need to compile it from source.\r\n\r\nhttps://github.com/phalcon/cphalcon/tree/4.0.x"
    ],
    "commit_messages": [
      "Merge pull request #16179 from 1RV34/patch-1\n\nadjust default for form::label attributes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621251618912b45d36a2dbd",
    "number": 16178,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nThanks\r\n\r\n",
    "head_branch": "#16177-fetchAll",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16178 from phalcon/#16177-fetchAll\n\n#16177 - Unify args of `fetchAll()` with `PDOStatement::fetchAll()`"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621251718912b45d36a2dbe",
    "number": 16173,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #16170 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\Session\\Manager::setName`, removing the regex check for the name for custom adapters to work with `create_sid()` \r\n\r\nThanks\r\n\r\n",
    "head_branch": "T16170-strict-session-id-syntax",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16173 from niden/T16170-strict-session-id-syntax\n\nT16170 strict session id syntax"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621251818912b45d36a2dbf",
    "number": 16172,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #16171 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\Config\\Config::setData` to pass the `insensitive` flag to child objects\r\nFixed `Phalcon\\Config\\Adapter\\Groupped::__construct` to pass the `insensitive` flag to child objects\r\n\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T16171-config-insensitive",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16172 from niden/T16171-config-insensitive\n\nT16171 config insensitive"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621251918912b45d36a2dc0",
    "number": 16168,
    "body": "Hello!\r\n\r\n* Type: documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThe README.md Link just need to update",
    "head_branch": "fix-version-typo",
    "is_a_fork": true,
    "comments": [
      "Thank you @MilesChou "
    ],
    "commit_messages": [
      "Merge pull request #16168 from MilesChou/fix-version-typo\n\nFix version typo"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621251a18912b45d36a2dc1",
    "number": 16165,
    "body": "Hello!\r\n\r\n* Type: bug fix #16166 \r\n\r\nSmall description of change:\r\n\r\nRFC 7519,  4.1.4.,  The processing of the \"exp\" claim requires that the current date/time MUST be before the expiration date/time listed in the \"exp\" claim. So Validator must produce an error if current timestamp is grater than \"exp\" claim.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "JWT-exp-validator-bugfix",
    "is_a_fork": true,
    "comments": [
      "@edgarsstrods Can you please rebase this to the v5.0.x branch?",
      "The tests need to be adjusted also\r\n",
      "> @edgarsstrods Can you please rebase this to the v5.0.x branch?\r\n\r\nNevermind I rebased it here",
      "Thank you @edgarsstrods "
    ],
    "commit_messages": [
      "Merge pull request #16165 from edgarsstrods/JWT-exp-validator-bugfix\n\nBugfix in JWT \"exp\" (Expiration Time) Claim validation."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621251c18912b45d36a2dc2",
    "number": 16164,
    "body": "Version 5.0.4",
    "head_branch": "5.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16164 from phalcon/5.0.x\n\nv5.0.4"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621251d18912b45d36a2dc3",
    "number": 16163,
    "body": "Prep for 5.0.4",
    "head_branch": "5.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16163 from niden/5.0.x\n\nv5.0.4 Prep"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621251e18912b45d36a2dc4",
    "number": 16162,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #16161 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\Mvc\\Model\\Manager::notifyEvent` to return `true` instead of `null` on success\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T16161-mvc-model-fireevent-return-value-must-be-of-type-bool-null-returned",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16162 from niden/T16161-mvc-model-fireevent-return-value-must-be-of-type-bool-null-returned\n\nT16161 mvc model fireevent return value must be of type bool null returned"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621251f18912b45d36a2dc5",
    "number": 16159,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nThanks\r\n\r\n",
    "head_branch": "#16127-macos",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16159 from phalcon/#16127-macos\n\n#16127 - Fix MacOS"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621252018912b45d36a2dc6",
    "number": 16158,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #16157 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\Db\\Adapter\\Pdo\\Mysql::describeIndexes` to assign an empty string in the index type of `null` and remove warnings \r\nFixed `Phalcon\\Db\\Adapter\\Pdo\\Sqlite::describeIndexes` to assign an empty string in the index type of `null` and remove warnings \r\n\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T16157-mysql-descripe-indexes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16158 from niden/T16157-mysql-descripe-indexes\n\nT16157 mysql descripe indexes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621252218912b45d36a2dc7",
    "number": 16154,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #16153 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\Encryption\\Security` to take into account the `workFactor` in the cost calculation\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T16153-security-workfactor-not-calculated",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16154 from niden/T16153-security-workfactor-not-calculated"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621252318912b45d36a2dc8",
    "number": 16149,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nadd backers\r\nThanks\r\n\r\n",
    "head_branch": "upd-backer",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16149 from phalcon/upd-backer\n\nadd backers"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621252418912b45d36a2dc9",
    "number": 16147,
    "body": "registertDirectories to registerDirectories\r\nregistertFiles to registerFile\r\n\r\nHello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [x] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [
      "Thank you @jturbide "
    ],
    "commit_messages": [
      "Merge pull request #16147 from jturbide/patch-2\n\nFix typo in changelog 5.0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621252518912b45d36a2dca",
    "number": 16145,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nupdate links (http=>https)\r\nThanks\r\n\r\n",
    "head_branch": "upd",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16145 from phalcon/upd\n\nupdate links (http=>https)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621252618912b45d36a2dcb",
    "number": 16143,
    "body": "Generated optimized files",
    "head_branch": "5.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16143 from niden/5.0.x\n\n5.0.3 - optimized build files"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621252718912b45d36a2dcc",
    "number": 16142,
    "body": "Version v5.0.3",
    "head_branch": "5.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16142 from phalcon/5.0.x\n\nv5.0.3"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621252918912b45d36a2dcd",
    "number": 16141,
    "body": "registertNamespaces to registerNamespaces\r\n\r\nHello!\r\n\r\n* Type: documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Thank you @jturbide !",
      "The PR should have gone to v5.0.x - we don't send PRs to `master` unless there is a release. Since we are releasing a new version today I will merge this. (fyi for the future :) )\r\n"
    ],
    "commit_messages": [
      "Merge pull request #16141 from jturbide/patch-1\n\nFix typo from Loader registerNamespaces"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621252a18912b45d36a2dce",
    "number": 16140,
    "body": "Prepping for v5.0.3",
    "head_branch": "5.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16140 from niden/5.0.x\n\nv5.0.3 Prep"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621252b18912b45d36a2dcf",
    "number": 16138,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #16135 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nAdded flags for `htmlspecialchars()` for the StringVal filter.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T16135-stringval-flags",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16138 from niden/T16135-stringval-flags\n\nT16135 stringval flags"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621252c18912b45d36a2dd0",
    "number": 16137,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nupdate backers\r\nThanks\r\n\r\n",
    "head_branch": "upd-backers",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16137 from phalcon/upd-backers\n\nupdate backers"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621252d18912b45d36a2dd1",
    "number": 16136,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #16134 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Escaper::attributes()` to take into account the `$flags` property\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T16134-escaper-flags",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16136 from niden/T16134-escaper-flags\n\nT16134 escaper flags"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621252f18912b45d36a2dd2",
    "number": 16133,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nupdate tests & resources links\r\nThanks\r\n\r\n",
    "head_branch": "upd-links",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621253018912b45d36a2dd3",
    "number": 16132,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nupdate links\r\nThanks\r\n\r\n",
    "head_branch": "upd",
    "is_a_fork": false,
    "comments": [
      "@Arhell `ext/` directory is generated from `phalcon/` directory, check URLs also inside `phalcon/`.",
      "> @Arhell `ext/` directory is generated from `phalcon/` directory, check URLs also inside `phalcon/`.\r\n\r\nremove update from `ext/` & add updates for `phalcon/` directory"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621253118912b45d36a2dd4",
    "number": 16128,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nadd backer\r\nThanks\r\n\r\n",
    "head_branch": "upd",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16128 from phalcon/upd\n\nadd backer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621253218912b45d36a2dd5",
    "number": 16125,
    "body": "v5.0.2 prep",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16125 from niden/master\n\nv5.0.2 prep"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621253418912b45d36a2dd6",
    "number": 16124,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #16123 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\Html\\Escaper::attributes()` to accept any value and transform it to string \r\nFixed `Phalcon\\Logger\\AbstractLogger::getLevelNumber()` to better check for string levels\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T16123-html-attributes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16124 from niden/T16123-html-attributes\n\nT16123 html attributes"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621253518912b45d36a2dd7",
    "number": 16119,
    "body": "5.0.1 Release",
    "head_branch": "5.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16119 from phalcon/5.0.x\n\n5.0.1 Release"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621253618912b45d36a2dd8",
    "number": 16118,
    "body": "v 5.0.1 prep",
    "head_branch": "5.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16118 from niden/5.0.x\n\n5.0.1 Prep"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621253718912b45d36a2dd9",
    "number": 16116,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #16115 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\Encryption\\Security\\JWT\\Token\\Token::validate()` to correctly call validator methods\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T16115-jwt-validate",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16116 from niden/T16115-jwt-validate\n\nT16115 jwt validate"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621253918912b45d36a2dda",
    "number": 16112,
    "body": ":dancing_men: :dancing_women: :dancers: :man_dancing: ",
    "head_branch": "5.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16112 from phalcon/5.0.x\n\n5.0.0 Stable"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621253b18912b45d36a2ddb",
    "number": 16111,
    "body": "v5 Stable yay!",
    "head_branch": "5.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16111 from niden/5.0.x\n\nv5.0.0 Stable"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621253c18912b45d36a2ddc",
    "number": 16110,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nThanks\r\n\r\n",
    "head_branch": "model-property",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16110 from phalcon/model-property\n\nMake `Phalcon\\Mvc\\Model:uniqueTypes` always array"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621253d18912b45d36a2ddd",
    "number": 16109,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #16108 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nChanged `Phalcon\\Html\\Escaper::attributes()` to also accept an array of attributes\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T16108-escaper-attributes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16109 from niden/T16108-escaper-attributes\n\nT16108 escaper attributes"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621253e18912b45d36a2dde",
    "number": 16107,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nThanks\r\n\r\n",
    "head_branch": "reflection-get-doc-comment",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16107 from phalcon/reflection-get-doc-comment\n\nAdjust condition of `getDocComment()`"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621253f18912b45d36a2ddf",
    "number": 16106,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nThanks\r\n\r\n",
    "head_branch": "reflection-refactor",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16106 from phalcon/reflection-refactor"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621254018912b45d36a2de0",
    "number": 16105,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "code-improvements",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16105 from phalcon/code-improvements\n\nImprove and refactor code"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621254118912b45d36a2de1",
    "number": 16104,
    "body": "This PR adds explicit [permissions section](https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#permissions) to workflows. This is a security best practice because by default workflows run with [extended set of permissions](https://docs.github.com/en/actions/security-guides/automatic-token-authentication#permissions-for-the-github_token) (except from `on: pull_request` [from external forks](https://securitylab.github.com/research/github-actions-preventing-pwn-requests/)). By specifying any permission explicitly all others are set to none. By using the principle of least privilege the damage a compromised workflow can do (because of an [injection](https://securitylab.github.com/research/github-actions-untrusted-input/) or compromised third party tool or action) is restricted.\r\nIt is recommended to have [most strict permissions on the top level](https://github.com/ossf/scorecard/blob/main/docs/checks.md#token-permissions) and grant write permissions on [job level](https://docs.github.com/en/actions/using-jobs/assigning-permissions-to-jobs) case by case.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Thank you!"
    ],
    "commit_messages": [
      "Merge pull request #16104 from sashashura/patch-1\n\nGitHub Workflows security hardening"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621254218912b45d36a2de2",
    "number": 16103,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #16102 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nChanged getters and setters from shorthand format to full methods\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T16102-get-set-short",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16103 from niden/T16102-get-set-short\n\nT16102 get set short"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621254318912b45d36a2de3",
    "number": 16101,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nupdate backers\r\nThanks\r\n\r\n",
    "head_branch": "upd",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16101 from phalcon/upd\n\nupdate backers"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621254418912b45d36a2de4",
    "number": 16100,
    "body": "Hello!\r\n\r\n* Type: bug fix | code quality\r\n* Link to issue: #16096\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nNow there is unit test to mock all possible Phalcon classes:\r\n```\r\nPhalcon\\Acl\\Adapter\\AbstractAdapter\r\nPhalcon\\Acl\\Adapter\\Memory\r\nPhalcon\\Acl\\Component\r\nPhalcon\\Acl\\Enum\r\nPhalcon\\Acl\\Exception\r\nPhalcon\\Acl\\Role\r\nPhalcon\\Annotations\\Adapter\\AbstractAdapter\r\nPhalcon\\Annotations\\Adapter\\Apcu\r\nPhalcon\\Annotations\\Adapter\\Memory\r\nPhalcon\\Annotations\\Adapter\\Stream\r\nPhalcon\\Annotations\\Annotation\r\nPhalcon\\Annotations\\AnnotationsFactory\r\nPhalcon\\Annotations\\Collection\r\nPhalcon\\Annotations\\Exception\r\nPhalcon\\Annotations\\Reader\r\nPhalcon\\Annotations\\Reflection\r\nPhalcon\\Application\\AbstractApplication\r\nPhalcon\\Application\\Exception\r\nPhalcon\\Assets\\Asset\r\nPhalcon\\Assets\\Asset\\Css\r\nPhalcon\\Assets\\Asset\\Js\r\nPhalcon\\Assets\\Collection\r\nPhalcon\\Assets\\Exception\r\nPhalcon\\Assets\\Filters\\Cssmin\r\nPhalcon\\Assets\\Filters\\Jsmin\r\nPhalcon\\Assets\\Filters\\None\r\nPhalcon\\Assets\\Inline\r\nPhalcon\\Assets\\Inline\\Css\r\nPhalcon\\Assets\\Inline\\Js\r\nPhalcon\\Assets\\Manager\r\nPhalcon\\Autoload\\Exception\r\nPhalcon\\Autoload\\Loader\r\nPhalcon\\Cache\\AbstractCache\r\nPhalcon\\Cache\\AdapterFactory\r\nPhalcon\\Cache\\Adapter\\Apcu\r\nPhalcon\\Cache\\Adapter\\Libmemcached\r\nPhalcon\\Cache\\Adapter\\Memory\r\nPhalcon\\Cache\\Adapter\\Redis\r\nPhalcon\\Cache\\Adapter\\Stream\r\nPhalcon\\Cache\\Cache\r\nPhalcon\\Cache\\CacheFactory\r\nPhalcon\\Cache\\Exception\\Exception\r\nPhalcon\\Cache\\Exception\\InvalidArgumentException\r\nPhalcon\\Cli\\Console\r\nPhalcon\\Cli\\Console\\Exception\r\nPhalcon\\Cli\\Dispatcher\r\nPhalcon\\Cli\\Dispatcher\\Exception\r\nPhalcon\\Cli\\Router\r\nPhalcon\\Cli\\Router\\Exception\r\nPhalcon\\Cli\\Router\\Route\r\nPhalcon\\Cli\\Task\r\nPhalcon\\Config\\Adapter\\Grouped\r\nPhalcon\\Config\\Adapter\\Ini\r\nPhalcon\\Config\\Adapter\\Json\r\nPhalcon\\Config\\Adapter\\Php\r\nPhalcon\\Config\\Adapter\\Yaml\r\nPhalcon\\Config\\Config\r\nPhalcon\\Config\\ConfigFactory\r\nPhalcon\\Config\\Exception\r\nPhalcon\\DataMapper\\Pdo\\Connection\r\nPhalcon\\DataMapper\\Pdo\\ConnectionLocator\r\nPhalcon\\DataMapper\\Pdo\\Connection\\AbstractConnection\r\nPhalcon\\DataMapper\\Pdo\\Connection\\Decorated\r\nPhalcon\\DataMapper\\Pdo\\Exception\\CannotDisconnect\r\nPhalcon\\DataMapper\\Pdo\\Exception\\ConnectionNotFound\r\nPhalcon\\DataMapper\\Pdo\\Exception\\Exception\r\nPhalcon\\DataMapper\\Pdo\\Profiler\\MemoryLogger\r\nPhalcon\\DataMapper\\Pdo\\Profiler\\Profiler\r\nPhalcon\\DataMapper\\Query\\AbstractConditions\r\nPhalcon\\DataMapper\\Query\\AbstractQuery\r\nPhalcon\\DataMapper\\Query\\Bind\r\nPhalcon\\DataMapper\\Query\\Delete\r\nPhalcon\\DataMapper\\Query\\Insert\r\nPhalcon\\DataMapper\\Query\\QueryFactory\r\nPhalcon\\DataMapper\\Query\\Select\r\nPhalcon\\DataMapper\\Query\\Update\r\nPhalcon\\Db\\AbstractDb\r\nPhalcon\\Db\\Adapter\\AbstractAdapter\r\nPhalcon\\Db\\Adapter\\PdoFactory\r\nPhalcon\\Db\\Adapter\\Pdo\\AbstractPdo\r\nPhalcon\\Db\\Adapter\\Pdo\\Mysql\r\nPhalcon\\Db\\Adapter\\Pdo\\Postgresql\r\nPhalcon\\Db\\Adapter\\Pdo\\Sqlite\r\nPhalcon\\Db\\Column\r\nPhalcon\\Db\\Dialect\r\nPhalcon\\Db\\Dialect\\Mysql\r\nPhalcon\\Db\\Dialect\\Postgresql\r\nPhalcon\\Db\\Dialect\\Sqlite\r\nPhalcon\\Db\\Enum\r\nPhalcon\\Db\\Exception\r\nPhalcon\\Db\\Index\r\nPhalcon\\Db\\Profiler\r\nPhalcon\\Db\\Profiler\\Item\r\nPhalcon\\Db\\RawValue\r\nPhalcon\\Db\\Reference\r\nPhalcon\\Db\\Result\\PdoResult\r\nPhalcon\\Di\\AbstractInjectionAware\r\nPhalcon\\Di\\Di\r\nPhalcon\\Di\\Exception\r\nPhalcon\\Di\\Exception\\ServiceResolutionException\r\nPhalcon\\Di\\FactoryDefault\r\nPhalcon\\Di\\FactoryDefault\\Cli\r\nPhalcon\\Di\\Injectable\r\nPhalcon\\Di\\Service\r\nPhalcon\\Di\\Service\\Builder\r\nPhalcon\\Dispatcher\\AbstractDispatcher\r\nPhalcon\\Dispatcher\\Exception\r\nPhalcon\\Domain\\Payload\\Payload\r\nPhalcon\\Domain\\Payload\\PayloadFactory\r\nPhalcon\\Domain\\Payload\\Status\r\nPhalcon\\Encryption\\Crypt\r\nPhalcon\\Encryption\\Crypt\\Exception\\Exception\r\nPhalcon\\Encryption\\Crypt\\Exception\\Mismatch\r\nPhalcon\\Encryption\\Crypt\\PadFactory\r\nPhalcon\\Encryption\\Crypt\\Padding\\Ansi\r\nPhalcon\\Encryption\\Crypt\\Padding\\Iso10126\r\nPhalcon\\Encryption\\Crypt\\Padding\\IsoIek\r\nPhalcon\\Encryption\\Crypt\\Padding\\Noop\r\nPhalcon\\Encryption\\Crypt\\Padding\\Pkcs7\r\nPhalcon\\Encryption\\Crypt\\Padding\\Space\r\nPhalcon\\Encryption\\Crypt\\Padding\\Zero\r\nPhalcon\\Encryption\\Security\r\nPhalcon\\Encryption\\Security\\Exception\r\nPhalcon\\Encryption\\Security\\JWT\\Builder\r\nPhalcon\\Encryption\\Security\\JWT\\Exceptions\\UnsupportedAlgorithmException\r\nPhalcon\\Encryption\\Security\\JWT\\Exceptions\\ValidatorException\r\nPhalcon\\Encryption\\Security\\JWT\\Signer\\AbstractSigner\r\nPhalcon\\Encryption\\Security\\JWT\\Signer\\Hmac\r\nPhalcon\\Encryption\\Security\\JWT\\Signer\\None\r\nPhalcon\\Encryption\\Security\\JWT\\Token\\AbstractItem\r\nPhalcon\\Encryption\\Security\\JWT\\Token\\Enum\r\nPhalcon\\Encryption\\Security\\JWT\\Token\\Item\r\nPhalcon\\Encryption\\Security\\JWT\\Token\\Parser\r\nPhalcon\\Encryption\\Security\\JWT\\Token\\Signature\r\nPhalcon\\Encryption\\Security\\JWT\\Token\\Token\r\nPhalcon\\Encryption\\Security\\JWT\\Validator\r\nPhalcon\\Encryption\\Security\\Random\r\nPhalcon\\Events\\AbstractEventsAware\r\nPhalcon\\Events\\Event\r\nPhalcon\\Events\\Exception\r\nPhalcon\\Events\\Manager\r\nPhalcon\\Factory\\AbstractConfigFactory\r\nPhalcon\\Factory\\AbstractFactory\r\nPhalcon\\Factory\\Exception\r\nPhalcon\\Filter\\Exception\r\nPhalcon\\Filter\\Filter\r\nPhalcon\\Filter\\FilterFactory\r\nPhalcon\\Filter\\Sanitize\\AbsInt\r\nPhalcon\\Filter\\Sanitize\\Alnum\r\nPhalcon\\Filter\\Sanitize\\Alpha\r\nPhalcon\\Filter\\Sanitize\\BoolVal\r\nPhalcon\\Filter\\Sanitize\\Email\r\nPhalcon\\Filter\\Sanitize\\FloatVal\r\nPhalcon\\Filter\\Sanitize\\IntVal\r\nPhalcon\\Filter\\Sanitize\\Lower\r\nPhalcon\\Filter\\Sanitize\\LowerFirst\r\nPhalcon\\Filter\\Sanitize\\Regex\r\nPhalcon\\Filter\\Sanitize\\Remove\r\nPhalcon\\Filter\\Sanitize\\Replace\r\nPhalcon\\Filter\\Sanitize\\Special\r\nPhalcon\\Filter\\Sanitize\\SpecialFull\r\nPhalcon\\Filter\\Sanitize\\StringVal\r\nPhalcon\\Filter\\Sanitize\\StringValLegacy\r\nPhalcon\\Filter\\Sanitize\\Striptags\r\nPhalcon\\Filter\\Sanitize\\Trim\r\nPhalcon\\Filter\\Sanitize\\Upper\r\nPhalcon\\Filter\\Sanitize\\UpperFirst\r\nPhalcon\\Filter\\Sanitize\\UpperWords\r\nPhalcon\\Filter\\Sanitize\\Url\r\nPhalcon\\Filter\\Validation\r\nPhalcon\\Filter\\Validation\\AbstractCombinedFieldsValidator\r\nPhalcon\\Filter\\Validation\\AbstractValidator\r\nPhalcon\\Filter\\Validation\\AbstractValidatorComposite\r\nPhalcon\\Filter\\Validation\\Exception\r\nPhalcon\\Filter\\Validation\\ValidatorFactory\r\nPhalcon\\Filter\\Validation\\Validator\\Alnum\r\nPhalcon\\Filter\\Validation\\Validator\\Alpha\r\nPhalcon\\Filter\\Validation\\Validator\\Between\r\nPhalcon\\Filter\\Validation\\Validator\\Callback\r\nPhalcon\\Filter\\Validation\\Validator\\Confirmation\r\nPhalcon\\Filter\\Validation\\Validator\\CreditCard\r\nPhalcon\\Filter\\Validation\\Validator\\Date\r\nPhalcon\\Filter\\Validation\\Validator\\Digit\r\nPhalcon\\Filter\\Validation\\Validator\\Email\r\nPhalcon\\Filter\\Validation\\Validator\\Exception\r\nPhalcon\\Filter\\Validation\\Validator\\ExclusionIn\r\nPhalcon\\Filter\\Validation\\Validator\\File\r\nPhalcon\\Filter\\Validation\\Validator\\File\\AbstractFile\r\nPhalcon\\Filter\\Validation\\Validator\\File\\MimeType\r\nPhalcon\\Filter\\Validation\\Validator\\File\\Resolution\\Equal\r\nPhalcon\\Filter\\Validation\\Validator\\File\\Resolution\\Max\r\nPhalcon\\Filter\\Validation\\Validator\\File\\Resolution\\Min\r\nPhalcon\\Filter\\Validation\\Validator\\File\\Size\\Equal\r\nPhalcon\\Filter\\Validation\\Validator\\File\\Size\\Max\r\nPhalcon\\Filter\\Validation\\Validator\\File\\Size\\Min\r\nPhalcon\\Filter\\Validation\\Validator\\Identical\r\nPhalcon\\Filter\\Validation\\Validator\\InclusionIn\r\nPhalcon\\Filter\\Validation\\Validator\\Ip\r\nPhalcon\\Filter\\Validation\\Validator\\Numericality\r\nPhalcon\\Filter\\Validation\\Validator\\PresenceOf\r\nPhalcon\\Filter\\Validation\\Validator\\Regex\r\nPhalcon\\Filter\\Validation\\Validator\\StringLength\r\nPhalcon\\Filter\\Validation\\Validator\\StringLength\\Max\r\nPhalcon\\Filter\\Validation\\Validator\\StringLength\\Min\r\nPhalcon\\Filter\\Validation\\Validator\\Uniqueness\r\nPhalcon\\Filter\\Validation\\Validator\\Url\r\nPhalcon\\Flash\\AbstractFlash\r\nPhalcon\\Flash\\Direct\r\nPhalcon\\Flash\\Exception\r\nPhalcon\\Flash\\Session\r\nPhalcon\\Forms\\Element\\AbstractElement\r\nPhalcon\\Forms\\Element\\Check\r\nPhalcon\\Forms\\Element\\Date\r\nPhalcon\\Forms\\Element\\Email\r\nPhalcon\\Forms\\Element\\File\r\nPhalcon\\Forms\\Element\\Hidden\r\nPhalcon\\Forms\\Element\\Numeric\r\nPhalcon\\Forms\\Element\\Password\r\nPhalcon\\Forms\\Element\\Radio\r\nPhalcon\\Forms\\Element\\Select\r\nPhalcon\\Forms\\Element\\Submit\r\nPhalcon\\Forms\\Element\\Text\r\nPhalcon\\Forms\\Element\\TextArea\r\nPhalcon\\Forms\\Exception\r\nPhalcon\\Forms\\Form\r\nPhalcon\\Forms\\Manager\r\nPhalcon\\Html\\Attributes\r\nPhalcon\\Html\\Breadcrumbs\r\nPhalcon\\Html\\Escaper\r\nPhalcon\\Html\\EscaperFactory\r\nPhalcon\\Html\\Escaper\\Exception\r\nPhalcon\\Html\\Exception\r\nPhalcon\\Html\\Helper\\AbstractHelper\r\nPhalcon\\Html\\Helper\\AbstractList\r\nPhalcon\\Html\\Helper\\AbstractSeries\r\nPhalcon\\Html\\Helper\\Anchor\r\nPhalcon\\Html\\Helper\\Base\r\nPhalcon\\Html\\Helper\\Body\r\nPhalcon\\Html\\Helper\\Button\r\nPhalcon\\Html\\Helper\\Close\r\nPhalcon\\Html\\Helper\\Doctype\r\nPhalcon\\Html\\Helper\\Element\r\nPhalcon\\Html\\Helper\\Form\r\nPhalcon\\Html\\Helper\\Img\r\nPhalcon\\Html\\Helper\\Input\\AbstractInput\r\nPhalcon\\Html\\Helper\\Input\\Checkbox\r\nPhalcon\\Html\\Helper\\Input\\Color\r\nPhalcon\\Html\\Helper\\Input\\Date\r\nPhalcon\\Html\\Helper\\Input\\DateTime\r\nPhalcon\\Html\\Helper\\Input\\DateTimeLocal\r\nPhalcon\\Html\\Helper\\Input\\Email\r\nPhalcon\\Html\\Helper\\Input\\File\r\nPhalcon\\Html\\Helper\\Input\\Hidden\r\nPhalcon\\Html\\Helper\\Input\\Image\r\nPhalcon\\Html\\Helper\\Input\\Input\r\nPhalcon\\Html\\Helper\\Input\\Month\r\nPhalcon\\Html\\Helper\\Input\\Numeric\r\nPhalcon\\Html\\Helper\\Input\\Password\r\nPhalcon\\Html\\Helper\\Input\\Radio\r\nPhalcon\\Html\\Helper\\Input\\Range\r\nPhalcon\\Html\\Helper\\Input\\Search\r\nPhalcon\\Html\\Helper\\Input\\Select\r\nPhalcon\\Html\\Helper\\Input\\Submit\r\nPhalcon\\Html\\Helper\\Input\\Tel\r\nPhalcon\\Html\\Helper\\Input\\Text\r\nPhalcon\\Html\\Helper\\Input\\Textarea\r\nPhalcon\\Html\\Helper\\Input\\Time\r\nPhalcon\\Html\\Helper\\Input\\Url\r\nPhalcon\\Html\\Helper\\Input\\Week\r\nPhalcon\\Html\\Helper\\Label\r\nPhalcon\\Html\\Helper\\Link\r\nPhalcon\\Html\\Helper\\Meta\r\nPhalcon\\Html\\Helper\\Ol\r\nPhalcon\\Html\\Helper\\Script\r\nPhalcon\\Html\\Helper\\Style\r\nPhalcon\\Html\\Helper\\Title\r\nPhalcon\\Html\\Helper\\Ul\r\nPhalcon\\Html\\Link\\AbstractLink\r\nPhalcon\\Html\\Link\\AbstractLinkProvider\r\nPhalcon\\Html\\Link\\EvolvableLink\r\nPhalcon\\Html\\Link\\EvolvableLinkProvider\r\nPhalcon\\Html\\Link\\Link\r\nPhalcon\\Html\\Link\\LinkProvider\r\nPhalcon\\Html\\Link\\Serializer\\Header\r\nPhalcon\\Html\\TagFactory\r\nPhalcon\\Http\\Cookie\r\nPhalcon\\Http\\Cookie\\Exception\r\nPhalcon\\Http\\Request\r\nPhalcon\\Http\\Request\\Exception\r\nPhalcon\\Http\\Request\\File\r\nPhalcon\\Http\\Response\r\nPhalcon\\Http\\Response\\Cookies\r\nPhalcon\\Http\\Response\\Exception\r\nPhalcon\\Http\\Response\\Headers\r\nPhalcon\\Image\\Adapter\\AbstractAdapter\r\nPhalcon\\Image\\Adapter\\Gd\r\nPhalcon\\Image\\Adapter\\Imagick\r\nPhalcon\\Image\\Enum\r\nPhalcon\\Image\\Exception\r\nPhalcon\\Image\\ImageFactory\r\nPhalcon\\Logger\\AbstractLogger\r\nPhalcon\\Logger\\AdapterFactory\r\nPhalcon\\Logger\\Adapter\\AbstractAdapter\r\nPhalcon\\Logger\\Adapter\\Noop\r\nPhalcon\\Logger\\Adapter\\Stream\r\nPhalcon\\Logger\\Adapter\\Syslog\r\nPhalcon\\Logger\\Enum\r\nPhalcon\\Logger\\Exception\r\nPhalcon\\Logger\\Formatter\\AbstractFormatter\r\nPhalcon\\Logger\\Formatter\\Json\r\nPhalcon\\Logger\\Formatter\\Line\r\nPhalcon\\Logger\\Item\r\nPhalcon\\Logger\\Logger\r\nPhalcon\\Logger\\LoggerFactory\r\nPhalcon\\Messages\\Exception\r\nPhalcon\\Messages\\Message\r\nPhalcon\\Messages\\Messages\r\nPhalcon\\Mvc\\Application\r\nPhalcon\\Mvc\\Application\\Exception\r\nPhalcon\\Mvc\\Controller\r\nPhalcon\\Mvc\\Dispatcher\r\nPhalcon\\Mvc\\Dispatcher\\Exception\r\nPhalcon\\Mvc\\Micro\r\nPhalcon\\Mvc\\Micro\\Collection\r\nPhalcon\\Mvc\\Micro\\Exception\r\nPhalcon\\Mvc\\Micro\\LazyLoader\r\nPhalcon\\Mvc\\Model\r\nPhalcon\\Mvc\\Model\\Behavior\r\nPhalcon\\Mvc\\Model\\Behavior\\SoftDelete\r\nPhalcon\\Mvc\\Model\\Behavior\\Timestampable\r\nPhalcon\\Mvc\\Model\\Binder\r\nPhalcon\\Mvc\\Model\\Criteria\r\nPhalcon\\Mvc\\Model\\Exception\r\nPhalcon\\Mvc\\Model\\Manager\r\nPhalcon\\Mvc\\Model\\MetaData\r\nPhalcon\\Mvc\\Model\\MetaData\\Apcu\r\nPhalcon\\Mvc\\Model\\MetaData\\Libmemcached\r\nPhalcon\\Mvc\\Model\\MetaData\\Memory\r\nPhalcon\\Mvc\\Model\\MetaData\\Redis\r\nPhalcon\\Mvc\\Model\\MetaData\\Strategy\\Annotations\r\nPhalcon\\Mvc\\Model\\MetaData\\Strategy\\Introspection\r\nPhalcon\\Mvc\\Model\\MetaData\\Stream\r\nPhalcon\\Mvc\\Model\\Query\r\nPhalcon\\Mvc\\Model\\Query\\Builder\r\nPhalcon\\Mvc\\Model\\Query\\Lang\r\nPhalcon\\Mvc\\Model\\Query\\Status\r\nPhalcon\\Mvc\\Model\\Relation\r\nPhalcon\\Mvc\\Model\\Resultset\r\nPhalcon\\Mvc\\Model\\Resultset\\Complex\r\nPhalcon\\Mvc\\Model\\Resultset\\Simple\r\nPhalcon\\Mvc\\Model\\Row\r\nPhalcon\\Mvc\\Model\\Transaction\r\nPhalcon\\Mvc\\Model\\Transaction\\Exception\r\nPhalcon\\Mvc\\Model\\Transaction\\Failed\r\nPhalcon\\Mvc\\Model\\Transaction\\Manager\r\nPhalcon\\Mvc\\Model\\ValidationFailed\r\nPhalcon\\Mvc\\Router\r\nPhalcon\\Mvc\\Router\\Annotations\r\nPhalcon\\Mvc\\Router\\Exception\r\nPhalcon\\Mvc\\Router\\Group\r\nPhalcon\\Mvc\\Router\\Route\r\nPhalcon\\Mvc\\Url\r\nPhalcon\\Mvc\\Url\\Exception\r\nPhalcon\\Mvc\\View\r\nPhalcon\\Mvc\\View\\Engine\\AbstractEngine\r\nPhalcon\\Mvc\\View\\Engine\\Php\r\nPhalcon\\Mvc\\View\\Engine\\Volt\r\nPhalcon\\Mvc\\View\\Engine\\Volt\\Compiler\r\nPhalcon\\Mvc\\View\\Engine\\Volt\\Exception\r\nPhalcon\\Mvc\\View\\Exception\r\nPhalcon\\Mvc\\View\\Simple\r\nPhalcon\\Paginator\\Adapter\\AbstractAdapter\r\nPhalcon\\Paginator\\Adapter\\Model\r\nPhalcon\\Paginator\\Adapter\\NativeArray\r\nPhalcon\\Paginator\\Adapter\\QueryBuilder\r\nPhalcon\\Paginator\\Exception\r\nPhalcon\\Paginator\\PaginatorFactory\r\nPhalcon\\Paginator\\Repository\r\nPhalcon\\Session\\Adapter\\AbstractAdapter\r\nPhalcon\\Session\\Adapter\\Libmemcached\r\nPhalcon\\Session\\Adapter\\Noop\r\nPhalcon\\Session\\Adapter\\Redis\r\nPhalcon\\Session\\Adapter\\Stream\r\nPhalcon\\Session\\Bag\r\nPhalcon\\Session\\Exception\r\nPhalcon\\Session\\Manager\r\nPhalcon\\Storage\\AdapterFactory\r\nPhalcon\\Storage\\Adapter\\AbstractAdapter\r\nPhalcon\\Storage\\Adapter\\Apcu\r\nPhalcon\\Storage\\Adapter\\Libmemcached\r\nPhalcon\\Storage\\Adapter\\Memory\r\nPhalcon\\Storage\\Adapter\\Redis\r\nPhalcon\\Storage\\Adapter\\Stream\r\nPhalcon\\Storage\\Exception\r\nPhalcon\\Storage\\SerializerFactory\r\nPhalcon\\Storage\\Serializer\\AbstractSerializer\r\nPhalcon\\Storage\\Serializer\\Base64\r\nPhalcon\\Storage\\Serializer\\Igbinary\r\nPhalcon\\Storage\\Serializer\\Json\r\nPhalcon\\Storage\\Serializer\\MemcachedIgbinary\r\nPhalcon\\Storage\\Serializer\\MemcachedJson\r\nPhalcon\\Storage\\Serializer\\MemcachedPhp\r\nPhalcon\\Storage\\Serializer\\Msgpack\r\nPhalcon\\Storage\\Serializer\\None\r\nPhalcon\\Storage\\Serializer\\Php\r\nPhalcon\\Storage\\Serializer\\RedisIgbinary\r\nPhalcon\\Storage\\Serializer\\RedisJson\r\nPhalcon\\Storage\\Serializer\\RedisMsgpack\r\nPhalcon\\Storage\\Serializer\\RedisNone\r\nPhalcon\\Storage\\Serializer\\RedisPhp\r\nPhalcon\\Support\\Collection\r\nPhalcon\\Support\\Collection\\Exception\r\nPhalcon\\Support\\Collection\\ReadOnlyCollection\r\nPhalcon\\Support\\Debug\r\nPhalcon\\Support\\Debug\\Dump\r\nPhalcon\\Support\\Debug\\Exception\r\nPhalcon\\Support\\Exception\r\nPhalcon\\Support\\HelperFactory\r\nPhalcon\\Support\\Helper\\Arr\\AbstractArr\r\nPhalcon\\Support\\Helper\\Arr\\Blacklist\r\nPhalcon\\Support\\Helper\\Arr\\Chunk\r\nPhalcon\\Support\\Helper\\Arr\\Filter\r\nPhalcon\\Support\\Helper\\Arr\\First\r\nPhalcon\\Support\\Helper\\Arr\\FirstKey\r\nPhalcon\\Support\\Helper\\Arr\\Flatten\r\nPhalcon\\Support\\Helper\\Arr\\Get\r\nPhalcon\\Support\\Helper\\Arr\\Group\r\nPhalcon\\Support\\Helper\\Arr\\Has\r\nPhalcon\\Support\\Helper\\Arr\\IsUnique\r\nPhalcon\\Support\\Helper\\Arr\\Last\r\nPhalcon\\Support\\Helper\\Arr\\LastKey\r\nPhalcon\\Support\\Helper\\Arr\\Order\r\nPhalcon\\Support\\Helper\\Arr\\Pluck\r\nPhalcon\\Support\\Helper\\Arr\\Set\r\nPhalcon\\Support\\Helper\\Arr\\SliceLeft\r\nPhalcon\\Support\\Helper\\Arr\\SliceRight\r\nPhalcon\\Support\\Helper\\Arr\\Split\r\nPhalcon\\Support\\Helper\\Arr\\ToObject\r\nPhalcon\\Support\\Helper\\Arr\\ValidateAll\r\nPhalcon\\Support\\Helper\\Arr\\ValidateAny\r\nPhalcon\\Support\\Helper\\Arr\\Whitelist\r\nPhalcon\\Support\\Helper\\Exception\r\nPhalcon\\Support\\Helper\\File\\Basename\r\nPhalcon\\Support\\Helper\\Json\\Decode\r\nPhalcon\\Support\\Helper\\Json\\Encode\r\nPhalcon\\Support\\Helper\\Number\\IsBetween\r\nPhalcon\\Support\\Helper\\Str\\AbstractStr\r\nPhalcon\\Support\\Helper\\Str\\Camelize\r\nPhalcon\\Support\\Helper\\Str\\Concat\r\nPhalcon\\Support\\Helper\\Str\\CountVowels\r\nPhalcon\\Support\\Helper\\Str\\Decapitalize\r\nPhalcon\\Support\\Helper\\Str\\Decrement\r\nPhalcon\\Support\\Helper\\Str\\DirFromFile\r\nPhalcon\\Support\\Helper\\Str\\DirSeparator\r\nPhalcon\\Support\\Helper\\Str\\Dynamic\r\nPhalcon\\Support\\Helper\\Str\\EndsWith\r\nPhalcon\\Support\\Helper\\Str\\FirstBetween\r\nPhalcon\\Support\\Helper\\Str\\Friendly\r\nPhalcon\\Support\\Helper\\Str\\Humanize\r\nPhalcon\\Support\\Helper\\Str\\Includes\r\nPhalcon\\Support\\Helper\\Str\\Increment\r\nPhalcon\\Support\\Helper\\Str\\Interpolate\r\nPhalcon\\Support\\Helper\\Str\\IsAnagram\r\nPhalcon\\Support\\Helper\\Str\\IsLower\r\nPhalcon\\Support\\Helper\\Str\\IsPalindrome\r\nPhalcon\\Support\\Helper\\Str\\IsUpper\r\nPhalcon\\Support\\Helper\\Str\\KebabCase\r\nPhalcon\\Support\\Helper\\Str\\Len\r\nPhalcon\\Support\\Helper\\Str\\Lower\r\nPhalcon\\Support\\Helper\\Str\\PascalCase\r\nPhalcon\\Support\\Helper\\Str\\Prefix\r\nPhalcon\\Support\\Helper\\Str\\Random\r\nPhalcon\\Support\\Helper\\Str\\ReduceSlashes\r\nPhalcon\\Support\\Helper\\Str\\SnakeCase\r\nPhalcon\\Support\\Helper\\Str\\StartsWith\r\nPhalcon\\Support\\Helper\\Str\\Suffix\r\nPhalcon\\Support\\Helper\\Str\\Ucwords\r\nPhalcon\\Support\\Helper\\Str\\Uncamelize\r\nPhalcon\\Support\\Helper\\Str\\Underscore\r\nPhalcon\\Support\\Helper\\Str\\Upper\r\nPhalcon\\Support\\Version\r\nPhalcon\\Tag\r\nPhalcon\\Tag\\Exception\r\nPhalcon\\Tag\\Select\r\nPhalcon\\Test\\Unit\\MassMockCest\r\nPhalcon\\Translate\\Adapter\\AbstractAdapter\r\nPhalcon\\Translate\\Adapter\\Csv\r\nPhalcon\\Translate\\Adapter\\Gettext\r\nPhalcon\\Translate\\Adapter\\NativeArray\r\nPhalcon\\Translate\\Exception\r\nPhalcon\\Translate\\InterpolatorFactory\r\nPhalcon\\Translate\\Interpolator\\AssociativeArray\r\nPhalcon\\Translate\\Interpolator\\IndexedArray\r\nPhalcon\\Translate\\TranslateFactory\r\n.                                                                   1 / 1 (100%)\r\n\r\nTime: 00:00.231, Memory: 30.00 MB\r\n\r\nOK (1 test, 494 assertions)\r\n```\r\n\r\nThanks\r\n\r\n",
    "head_branch": "#16096-mock-seg-fault",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16100 from phalcon/#16096-mock-seg-fault\n\n#16096 - Fix seg faults on class mock"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621254618912b45d36a2de5",
    "number": 16095,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #16094 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [x] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nAdded `Phalcon\\Encryption\\Security\\JWT\\Token::validate()` to validate a token's claims \r\nAdded `Phalcon\\Encryption\\Security\\JWT\\Token::verify()` to verify a token's signature \r\nAdded `Phalcon\\Encryption\\Security\\JWT\\Validator::getErrors()` to return any errors with the validation as an array\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T16094",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16095 from niden/T16094\n\nT16094 JWT verify"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621254718912b45d36a2de6",
    "number": 16085,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nThanks\r\n\r\n",
    "head_branch": "#16080-seg-fault",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16085 from phalcon/#16080-seg-fault\n\n#16080 - Fix segmentation fault"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621254818912b45d36a2de7",
    "number": 16077,
    "body": "Hello!\r\n\r\n* Type: code quality | documentation\r\n* Link to issue: #16076\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nCorrecting docblock\r\nMinor reorganization of if statements in volt compiler\r\n\r\nThanks\r\n\r\n",
    "head_branch": "5.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16077 from niden/5.0.x\n\nMinor fixes"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621254918912b45d36a2de8",
    "number": 16073,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #16072 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nChanged `Phalcon\\Logger\\Adapter\\Stream::process` to open the log file, check for locks, write contents and close the stream\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T16072-logger-stream-no-lock",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16073 from niden/T16072-logger-stream-no-lock\n\nT16072 logger stream no lock"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621254a18912b45d36a2de9",
    "number": 16071,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #16070 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\Filter\\Validation\\Validator\\Numericality` to correctly detect illegal characters within string numbers\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T16070-numericality",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16071 from niden/T16070-numericality\n\nT16070 numericality"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621254b18912b45d36a2dea",
    "number": 16069,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #16063 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\Flash\\AbstractFlash::outputMessage` to return the message (implicitFlush)\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T16063-implicit-flush",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16069 from niden/T16063-implicit-flush\n\nT16063 implicit flush"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621254c18912b45d36a2deb",
    "number": 16068,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #16064 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\Filter\\Validation\\Validator\\Digit` to use only strings for `ctype_*` calls\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T16064-ctype-null",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16068 from niden/T16064-ctype-null\n\nT16064 ctype null"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621254e18912b45d36a2dec",
    "number": 16067,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: https://github.com/phalcon/ide-stubs/issues/77\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixing docblock in TagFactory for autocomplete\r\n\r\nThanks\r\n\r\n",
    "head_branch": "5.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16067 from niden/5.0.x\n\nFixing docblock for autocompletion"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621254f18912b45d36a2ded",
    "number": 16066,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature\r\n* Link to issue: #16023\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nThanks\r\n\r\n",
    "head_branch": "#16023-event-getter",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16066 from phalcon/#16023-event-getter\n\n#16023 - Improve object return type"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621255018912b45d36a2dee",
    "number": 16054,
    "body": "Hello!\r\n\r\nType: bug fix bug fix\r\nLink to issue: [setcookie() Passing null to parameter #2 ($value) - issue 16053](https://github.com/phalcon/cphalcon/issues/16053)\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\n\r\n\r\n\r\n\r\nsetcookie() Passing null to parameter #2 ($value) of type string is deprecated\r\n\r\n",
    "head_branch": "issue-16053",
    "is_a_fork": true,
    "comments": [
      "Thank you @sinbadxiii "
    ],
    "commit_messages": [
      "Merge pull request #16054 from sinbadxiii/issue-16053\n\nsetcookie() Passing null to parameter #2 ($value) of type string"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621255418912b45d36a2def",
    "number": 16047,
    "body": "Relase: v5.0.0RC4",
    "head_branch": "5.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16047 from phalcon/5.0.x\n\nv5.0.0RC4"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621255918912b45d36a2df0",
    "number": 16046,
    "body": "Prep for 5.0.0RC4",
    "head_branch": "5.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16046 from niden/5.0.x\n\n5.0.0RC4"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621255a18912b45d36a2df1",
    "number": 16044,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #15977 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nReorganized code in the image adapters\r\nSimplified various areas, speeding up processing\r\nRemoved `getInternalImImage()` (same as `getImage()`) for `Phalcon\\Image\\Adapter\\Imagick`\r\nAdded better support for webm images\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15977-gd-webm-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16044 from niden/T15977-gd-webm-2\n\nT15977 gd webm 2"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621255b18912b45d36a2df2",
    "number": 16043,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/16042\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nwhen the parameters include a group, it will return a simple result instead of an int.\r\n\r\nThis is currently getting type cast to int which will return 1 for simple result.\r\n`call_user_func([modelClass, \"count\"], parameters);`\r\n\r\nNow it will check if it's an object and if it is get the count from that.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "v5/bugfix/paginator-Model-Adapter-Incorrect-total-items-when-grouped",
    "is_a_fork": true,
    "comments": [
      "Thank you @LlamaDuckGoose "
    ],
    "commit_messages": [
      "Merge pull request #16043 from LlamaDuckGoose/v5/bugfix/paginator-Model-Adapter-Incorrect-total-items-when-grouped\n\n[BUG]: Paginator Model Adapter Incorrect total items when grouped"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621255c18912b45d36a2df3",
    "number": 16041,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/16040\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nSince AbstractSerializer isSuccess is initiated with the class and is set as true and is only is updated to false, if it fails to unserialize one bit of data the rest will also return isSuccess as false but getData will return valid data.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "v5/bugfix/AbstractSerializer-isSuccess-never-getting-reset-to-true",
    "is_a_fork": true,
    "comments": [
      "Thank you @LlamaDuckGoose "
    ],
    "commit_messages": [
      "Merge pull request #16041 from LlamaDuckGoose/v5/bugfix/AbstractSerializer-isSuccess-never-getting-reset-to-true\n\n[BUG]: AbstractSerializer isSuccess never getting reset to true"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621255d18912b45d36a2df4",
    "number": 16038,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/16037\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nI've updated the changed check on the Model.zep to have a separate comparison variable instead of overwriting the value, overwriting the value with the `value->getValue()` is turning it into a string and causing issues deeper in the update at `phalcon\\Db\\Adapter\\AbstractAdapter.zep:1198-1202`\r\n\r\nInstead of the placeholders[] being something like:\r\n```'`last_updated` = now()'```\r\n\r\nIt's passing:\r\n```'`last_updated` = ?'``` and then passing `'now()'` in the bind parameters \r\n\r\nThanks\r\n\r\n",
    "head_branch": "v5/bugfix/RawValue-no-longer-supports-mysql-functions",
    "is_a_fork": true,
    "comments": [
      "Thank you @LlamaDuckGoose !!"
    ],
    "commit_messages": [
      "Merge pull request #16038 from LlamaDuckGoose/v5/bugfix/RawValue-no-longer-supports-mysql-functions\n\n[BUG]: RawValue no longer supports mysql functions"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621255e18912b45d36a2df5",
    "number": 16036,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/16035\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nThis fixes the double unserializing in the complex resultset, the function `__unserialize(array data)` takes an array and tries to unserialize it again, this can be removed since it's already unserialized by this point\r\n\r\nI've also cleaned up the function `serialize` to have a data variable\r\n\r\nThanks\r\n\r\n",
    "head_branch": "v5/bugfix/Complex-Resultset-double-unserializing",
    "is_a_fork": true,
    "comments": [
      "This will fail in PHP8.1. As there are no tests against `Complex` class so CI passes...",
      "@Jeckerson I think the new changes made to this PR should work with both 7.4-8.0 and 8.1",
      "Thank you!"
    ],
    "commit_messages": [
      "Merge pull request #16036 from LlamaDuckGoose/v5/bugfix/Complex-Resultset-double-unserializing\n\n[BUG] Complex Resultset double unserializing"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621255f18912b45d36a2df6",
    "number": 16031,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #16030 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed \r\n  - `Phalcon\\Cli\\Router::getMatchedRoute()` \r\n  - `Phalcon\\Cli\\RouterInterface::getMatchedRoute()` \r\n  - `Phalcon\\Mvc\\Router::getMatchedRoute()` \r\n  - `Phalcon\\Mvc\\RouterInterface::getMatchedRoute()` to return `RouterInterface` or `null` \r\n\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T16030-router-getmatchedroute",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16031 from niden/T16030-router-getmatchedroute\n\nT16030 router getmatchedroute"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621256118912b45d36a2df7",
    "number": 16027,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #15977 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed rendering for `webp` images for `Phalcon\\Image\\Adapter\\Gd`\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15977-gd-webm",
    "is_a_fork": true,
    "comments": [
      "Incorrect implementation"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621256218912b45d36a2df8",
    "number": 16024,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #16019 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nReverted to single quotes when volt code generates PHP code.\r\nAny `tag` helpers only accept parameters with double quotes\r\nAdded more tests for all helpers\r\nRenamed `Phalcon\\Tag::form()` to `Phalcon\\Tag::formLegacy` (helper `form_legacy`)\r\n\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T16019-volt-double-quotes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16024 from niden/T16019-volt-double-quotes\n\nT16019 volt double quotes"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621256318912b45d36a2df9",
    "number": 16018,
    "body": "Fix on the date",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16018 from niden/master\n\nMinor fix"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621256518912b45d36a2dfa",
    "number": 16016,
    "body": "5.0.0RC3 Release",
    "head_branch": "5.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16016 from phalcon/5.0.x\n\n5.0.0RC3 Release"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621256618912b45d36a2dfb",
    "number": 16014,
    "body": "Preparing for 5.0.0RC3 release",
    "head_branch": "5.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16014 from niden/5.0.x\n\n5.0.0RC3 Release prep"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621256718912b45d36a2dfc",
    "number": 16013,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nadd backer\r\nThanks\r\n\r\n",
    "head_branch": "backer",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16013 from phalcon/backer\n\nadd backer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621256818912b45d36a2dfd",
    "number": 16009,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #15997 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\Dispatcher\\DispatcherInterface::setModuleName()` to accept `null`\r\nFixed `Phalcon\\Dispatcher\\AbstractDispatcher::setModuleName()` to accept `null`\r\nFixed `Phalcon\\Dispatcher\\AbstractDispatcher::getModuleName()` to also return `null`\r\n\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15997-dispatcher-null",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16009 from niden/T15997-dispatcher-null\n\nT15997 dispatcher null"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621256918912b45d36a2dfe",
    "number": 16008,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #15966 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nAdded `Phalcon\\Mvc\\Model\\ManagerInterface::getBuilder()` to return the existing builder (created by `createBuilder()`)\r\nAdded `Phalcon\\Mvc\\Model\\Manager::getBuilder()` to return the existing builder (created by `createBuilder()`)\r\n\r\nThanks\r\n\r\n",
    "head_branch": "5.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16008 from niden/5.0.x\n\nAdded getBuilder() in Mvc\\Model\\Manager"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621256b18912b45d36a2dff",
    "number": 16006,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #16005  \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\Mvc\\View\\Engine\\Volt\\Compiler::expression()` to use double quotes instead of single ones \r\nFixed `Phalcon\\Support\\Version::getPart()` to always return string values\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T16005-volt-double-quotes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16006 from niden/T16005-volt-double-quotes\n\nT16005 volt double quotes"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621256c18912b45d36a2e00",
    "number": 16004,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #15984 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\Html\\Helper\\Title` to properly use indent and delimiter \r\nFixed `Phalcon\\Mvc\\View\\Engine\\Volt::isIncluded` and `Phalcon\\Mvc\\View\\Engine\\Volt::length` to check for null values before calls to php methods \r\n\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15984-php8-null-methods",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #16004 from niden/T15984-php8-null-methods\n\nT15984 php8 null methods"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621256d18912b45d36a2e01",
    "number": 15998,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nThanks\r\n\r\n",
    "head_branch": "micro-events-manager",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15998 from phalcon/micro-events-manager\n\nSimplify `eventsManager` condition in MVC Micro class"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621256e18912b45d36a2e02",
    "number": 15995,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #15992 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed \r\n - `Phalcon/Filter/Validation/Validator/Alnum`\r\n - `Phalcon/Filter/Validation/Validator/Alpha`\r\n - `Phalcon/Filter/Validation/Validator/Confirmation`\r\n - `Phalcon/Filter/Validation/Validator/CreditCard`\r\n - `Phalcon/Filter/Validation/Validator/StringLength/Max`\r\n - `Phalcon/Filter/Validation/Validator/StringLength/Min`\r\n \r\nto check if the value is `null` before calling internal PHP methods \r\n\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15992-validation-length",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15995 from niden/T15992-validation-length\n\nT15992 validation length"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621256f18912b45d36a2e03",
    "number": 15993,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #15992 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\Tag::textArea()` to check if the value is `null` before calling `htmlspecialchars`\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15992-tag-htmlspecialchars",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15993 from niden/T15992-tag-htmlspecialchars\n\nT15992 tag htmlspecialchars"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621257018912b45d36a2e04",
    "number": 15989,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #15977 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nAdded support for `webp` images for `Phalcon\\Image\\Adapter\\Gd`\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15977-gd-webm",
    "is_a_fork": true,
    "comments": [
      "@niden can you check again that format is supported, because ive get error in RC3 too? Sorry!",
      "@borisdelev Can you send me your webm file if you can please (team@phalcon.io). The test I wrote in this PR I got it from the internet.",
      "@niden Done. Thanks again for double check!"
    ],
    "commit_messages": [
      "Merge pull request #15989 from niden/T15977-gd-webm\n\nT15977 gd webm"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621257218912b45d36a2e05",
    "number": 15987,
    "body": "5.0.0RC2 Release",
    "head_branch": "5.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15987 from phalcon/5.0.x\n\n5.0.0RC2"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621257318912b45d36a2e06",
    "number": 15986,
    "body": "Prep for 5.0.0RC2",
    "head_branch": "RC2-prep",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15986 from niden/RC2-prep\n\n5.0.0RC2 prep"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621257418912b45d36a2e07",
    "number": 15985,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #15984 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\Http\\Response::getQualityHeader()` to check if the server variable is `null` before performing `preg_split`\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15984-null-arguments-deprecation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15985 from niden/T15984-null-arguments-deprecation\n\nT15984 null arguments deprecation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621257518912b45d36a2e08",
    "number": 15983,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #15978 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nCorrected the `StringVal` filter to now use `htmlspecialchars()`. Added `StringValLegacy` filter with the same functionality as before for PHP < 8.1\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15978-html-string-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15983 from niden/T15978-html-string-3\n\nT15978 html string 3"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621257618912b45d36a2e09",
    "number": 15980,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nremove backer\r\nThanks\r\n\r\n",
    "head_branch": "remove",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15980 from phalcon/remove\n\nremove backer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621257818912b45d36a2e0a",
    "number": 15975,
    "body": "5.0.0RC1 Release",
    "head_branch": "5.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15975 from phalcon/5.0.x\n\n5.0.0RC1"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621257d18912b45d36a2e0b",
    "number": 15974,
    "body": "Release 5.0.0RC1",
    "head_branch": "5.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15974 from niden/5.0.x\n\n5.0.0 RC1 Release"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621257e18912b45d36a2e0c",
    "number": 15970,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/15919\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nAdded support to class constants annotations\r\n\r\n```php\r\n    class MyClass\r\n    {\r\n          /**\r\n           * @Simple\r\n           */\r\n          const MY_CONST = \"test\";\r\n    }\r\n    \r\n    \r\n    use \\Phalcon\\Annotations\\Adapter\\Memory;\r\n    use \\Phalcon\\Annotations\\Reader;\r\n    use \\Phalcon\\Annotations\\Reflection;  \r\n    \r\n    // Reader now returns constants array list that have annotations in docblock comments\r\n    $reader = new Reader();\r\n    $data = $reader->parse(MyClass::class);\r\n    var_dump($data);\r\n\r\n    // Reflection has a new method for getting constants annotations\r\n    $reflection = new Reflection($data);\r\n    var_dump($reflection->getConstantsAnnotations());\r\n\r\n\r\n    // Annotation adapters has 2 new methods for getting constants annotations\r\n    $memory = new Memory();\r\n    var_dump($memory->getConstants(MyClass::class));                  // returns array\r\n    var_dump($memory->getConstant(MyClass::class, 'TEST2'));     // returns Collection\r\n```\r\n\r\nThanks\r\n\r\n",
    "head_branch": "5.0.x",
    "is_a_fork": true,
    "comments": [
      "@ustmaestro Just update the changelog and this is ready!!",
      "Thank you @ustmaestro !",
      "Thank @ustmaestro "
    ],
    "commit_messages": [
      "Merge pull request #15970 from ustmaestro/5.0.x\n\n5.0.x"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621257f18912b45d36a2e0d",
    "number": 15969,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/15971\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [x] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "php8.0-fixes",
    "is_a_fork": true,
    "comments": [
      "Changed the base branch from `master` to `5.0.x`.",
      "And please update the CHANGELOG5",
      "@niden CHANGELOG5 updated",
      "> @niden CHANGELOG5 updated\r\n\r\nAlso have a look at my previous comment. The `Manager` methods need to be updated also. ",
      "@VladKuch example (Manager.zep)\r\n\r\n```\r\n    public function addHasOne(<ModelInterface> model, var fields, string! referencedModel,\r\n        var referencedFields, var options = null) -> <RelationInterface>\r\n```\r\nbecomes\r\n```\r\n    public function addHasOne(<ModelInterface> model, var fields, string! referencedModel,\r\n        var referencedFields, array options = []) -> <RelationInterface>\r\n```\r\n",
      "> > @niden CHANGELOG5 updated\r\n> \r\n> Also have a look at my previous comment. The `Manager` methods need to be updated also.\r\n\r\nSorry, I missed it. Done.",
      "@VladKuch Looking great! Thank you"
    ],
    "commit_messages": [
      "Merge pull request #15969 from VladKuch/php8.0-fixes\n\nPHP 8.0 Issue - Model relations: set options as array by default"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621258018912b45d36a2e0e",
    "number": 15968,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #15902 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nAdded `Phalcon\\Translate\\Adapter\\Csv::toArray()` and `Phalcon\\Translate\\Adapter\\NativeArray::toArray()` to return the translation array back \r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15902-nativearray",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15968 from niden/T15902-nativearray\n\nT15902 nativearray"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621258118912b45d36a2e0f",
    "number": 15964,
    "body": "Hello!\r\n\r\n* Type: bug fix | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nCode cleanup, namespaces fixes, add missing interface\r\n\r\nThanks\r\n\r\n",
    "head_branch": "5.0.x",
    "is_a_fork": true,
    "comments": [
      "Looking good. I will merge as soon as the test suite is done!\r\n\r\nThank you @ustmaestro !\r\n"
    ],
    "commit_messages": [
      "Merge pull request #15964 from ustmaestro/5.0.x\n\n5.0.x"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621258218912b45d36a2e10",
    "number": 15963,
    "body": "Hello!\r\n\r\n* Type: bug fix | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nAdd missing interface Phalcon\\Session\\BagInterface\r\nFix classes php docs, correct docs namespaces\r\n\r\nThanks\r\n\r\n",
    "head_branch": "5.0.x",
    "is_a_fork": true,
    "comments": [
      "@ustmaestro Why did you close the PR?\r\n",
      "Hi, it was closed automatically when I rebased branches.\r\nI will create new one in few minutes\r\n@niden ",
      "@niden The new one is here https://github.com/phalcon/cphalcon/pull/15964"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621258418912b45d36a2e11",
    "number": 15962,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #15929 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nRemoved PSR-7 from Phalcon (and other Psr references). PSR will be available either from the `proxy-*` repos or v6\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15929-http-message-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15962 from niden/T15929-http-message-2\n\nT15929 http message 2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621258518912b45d36a2e12",
    "number": 15961,
    "body": "Fix php docs for Config class\r\n\r\nHello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [
      "Thank you!"
    ],
    "commit_messages": [
      "Merge pull request #15961 from ustmaestro/patch-3\n\nUpdate Config.zep"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621258918912b45d36a2e13",
    "number": 15950,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix-ci",
    "is_a_fork": false,
    "comments": [
      "~Related https://github.com/shivammathur/setup-php/issues/591~",
      "@niden Stubs CI depends on PSR removal."
    ],
    "commit_messages": [
      "Merge pull request #15950 from phalcon/fix-ci\n\nFix CI"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621258a18912b45d36a2e14",
    "number": 15947,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #15928 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nRemoved `Phalcon\\Container\\Container` and moved it to the `proxy-psr11` repository\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15928-psr-container",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15947 from niden/T15928-psr-container\n\nT15928 psr container"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621258b18912b45d36a2e15",
    "number": 15945,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: N/A\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [*] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [*] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nAdjustments Required For Phalcon Migrations to Work with 5.0.x.\r\n\r\nRelates To https://github.com/phalcon/migrations/pull/131\r\n\r\nThanks\r\n\r\n",
    "head_branch": "5.0.x-migration",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621258c18912b45d36a2e16",
    "number": 15944,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #15930 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nRemoved PSR dependency from `Phalcon\\Html\\Link\\*`. Added interfaces based on PSR but with stricter types, added Abstract classes to be used by the `proxy-psr13` repo.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15930-psr-link",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15944 from niden/T15930-psr-link\n\nT15930 psr link"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621258d18912b45d36a2e17",
    "number": 15942,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #15927 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nRemoved dependencies to PSR from `Phalcon\\Cache\\Cache`, added `AbstractCache` to be also used in the `proxy-psr16` repo and added `CacheInterface` based on the PSR one but with stricter types.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15927-psr-cache",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15942 from niden/T15927-psr-cache\n\nT15927 psr cache"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621258f18912b45d36a2e18",
    "number": 15941,
    "body": "Hello!\r\n\r\n* Type: new feature \r\n* Link to issue: #15925 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nRemoved PSR-3 dependency from Phalcon. Created new interfaces with stricter types and `Phalcon\\Logger\\AbstractLogger` class to be used with the `proxy-psr3` repo\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15925-psr-logger",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15941 from niden/T15925-psr-logger\n\nT15925 psr logger"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621259018912b45d36a2e19",
    "number": 15939,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nremove backer\r\nThanks\r\n\r\n",
    "head_branch": "upd",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15939 from phalcon/upd"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621259118912b45d36a2e1a",
    "number": 15938,
    "body": "Fix php docs for `setDefaultAction` function\r\n\r\nHello!\r\n\r\n* Type: code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [
      "Thank you @ustmaestro "
    ],
    "commit_messages": [
      "Merge pull request #15938 from ustmaestro/patch-2\n\nUpdate AbstractAdapter.zep"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621259218912b45d36a2e1b",
    "number": 15937,
    "body": "A fix for ide-stubs, as mentioned in https://github.com/phalcon/ide-stubs#read-before-create-pr-with-fix\r\n\r\nHello!\r\n\r\nMy (almost)first PR (and live on git), for a small doc fix, I hope I've finally done all in the right way.\r\n\r\n* Type: documentation\r\n* Link to issue: none\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change: some documentation change for fixing ide-stubs\r\n\r\nThanks\r\n\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Thanks!"
    ],
    "commit_messages": [
      "Merge pull request #15937 from pse-nltjtt/patch-1\n\nFix @param issue for query parameter"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621259318912b45d36a2e1c",
    "number": 15936,
    "body": "A fix for ide-stubs, as mentioned in https://github.com/phalcon/ide-stubs#read-before-create-pr-with-fix\r\n\r\nHello!\r\n\r\nMy first PR (and live on git), for a small doc fix, I hope I've done all in the right way.\r\n\r\n* Type:  documentation\r\n* Link to issue: none\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change: some documentation change for fixing ide-stubs\r\n\r\nThanks\r\n\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Sorry I failed by making a PR on master !",
      "@pse-nltjtt please use `v5.0.x` branch instead of master",
      "=> https://github.com/phalcon/cphalcon/pull/15937"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621259518912b45d36a2e1d",
    "number": 15923,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #15904 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nChanged `Phalcon\\Session\\Bag::__construct()` to accept a `Phalcon\\Session\\Manager` as the first parameter and `name` as the second one\r\nFixed `Phalcon\\Storage\\Adapter\\*` to correctly store `null` values\r\nAdded `Phalcon\\Storage\\Serializer\\MemcachedIgbinary`, `Phalcon\\Storage\\Serializer\\MemcachedJson`, `Phalcon\\Storage\\Serializer\\MemcachedPhp`, `Phalcon\\Storage\\Serializer\\RedisIgbinary`, `Phalcon\\Storage\\Serializer\\RedisJson`, `Phalcon\\Storage\\Serializer\\RedisMsgpack`, `Phalcon\\Storage\\Serializer\\RedisNone`, `Phalcon\\Storage\\Serializer\\RedisPhp` to be used if adapter serialization is required\r\n\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15904-cache-2",
    "is_a_fork": true,
    "comments": [
      "Some errors in closures, did you generated latest Zephir code?",
      "> Some errors in closures, did you generated latest Zephir code?\r\n\r\nI did ... odd",
      "Great job!"
    ],
    "commit_messages": [
      "Merge pull request #15923 from niden/T15904-cache-2\n\nT15904 cache"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621259618912b45d36a2e1e",
    "number": 15922,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "upd",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15922 from phalcon/upd\n\nremove backer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621259718912b45d36a2e1f",
    "number": 15916,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: N/A\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nI find myself constantly adding a method of 'initialize' to most everything, and calling it either in the service creation or through some other means. This PR adds an interface to allow the DIC to call it automatically given the class implements the interface in the same way the InjectionAwareInterface works. \r\n\r\nThanks\r\n\r\n",
    "head_branch": "5.0.x-initialization",
    "is_a_fork": true,
    "comments": [
      "Thank you @Fenikkusu !"
    ],
    "commit_messages": [
      "Merge pull request #15916 from twistersfury/5.0.x-initialization\n\nAdding InitializationAwareInterface"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621259818912b45d36a2e20",
    "number": 15911,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nadd backer\r\nThanks\r\n\r\n",
    "head_branch": "upd",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15911 from phalcon/upd\n\nadd backer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621259918912b45d36a2e21",
    "number": 15905,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #15900\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nRemoving leftover `$` characters in variables\r\n\r\nThanks\r\n\r\n",
    "head_branch": "5.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15905 from niden/5.0.x\n\nremoving $ characters"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621259a18912b45d36a2e22",
    "number": 15899,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #15896 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\Html\\Helper\\Input\\Numeric` to produce correct elements\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15896-numeric-input",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15899 from niden/T15896-numeric-input\n\nT15896 numeric input"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621259b18912b45d36a2e23",
    "number": 15895,
    "body": "Hello!\r\n\r\n* Type: new feature \r\n* Link to issue: #15879 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nAdded `Phalcon\\Encryption\\Crypt::isValidDecryptLength($input)` to allow checking for the length of the decryption string \r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15879-crypt-length",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15895 from niden/T15879-crypt-length\n\nT15879 crypt length"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621259c18912b45d36a2e24",
    "number": 15894,
    "body": "Hello!\r\n\r\n* Type: CI\r\n* Link to issue: #15814\r\n\r\nSmall description of change:\r\n\r\n- Replaced win-2016 with win-2019 for Windows builds\r\n- Added simple release notes parser test\r\n- Simplified build matrix\r\n\r\nThanks\r\n\r\n",
    "head_branch": "win-builds-enhancements",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15894 from phalcon/win-builds-enhancements\n\nWin builds enhancements"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621259d18912b45d36a2e25",
    "number": 15892,
    "body": "Release",
    "head_branch": "5.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15892 from phalcon/5.0.x\n\n5.0.0beta3"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621259f18912b45d36a2e26",
    "number": 15891,
    "body": "Release 5.0.0beta3",
    "head_branch": "5.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15891 from niden/5.0.x\n\n5.0.0beta3 Release"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662125a018912b45d36a2e27",
    "number": 15890,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #15883 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\Mvc\\Model::findFirst()` to return `mixed` or `null` \r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15883-model-extend",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15890 from niden/T15883-model-extend\n\nT15883 model extend"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662125a118912b45d36a2e28",
    "number": 15881,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #15880 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\Mvc\\Router\\Route::getName()` and `Phalcon\\Mvc\\Router\\Route::getHostname()` to also return `null`\r\nFixed `Phalcon\\Mvc\\Router\\RouteInterface::getName()` and `Phalcon\\Mvc\\Router\\RouteInterface::getHostname()` to also return `null` \r\n\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15880-route-getname",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15881 from niden/T15880-route-getname\n\nT15880 route getname"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662125a218912b45d36a2e29",
    "number": 15878,
    "body": "Updating mustache to 2.14+",
    "head_branch": "5.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15878 from niden/5.0.x\n\nDependencies update (mustache)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662125a418912b45d36a2e2a",
    "number": 15877,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #15874 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nRenamed `Phalcon\\Db\\Result\\Pdo` to `Phalcon\\Db\\Result\\PdoResult` to avoid collisions with `\\PDO` \r\nThanks\r\n\r\n",
    "head_branch": "T15874-rename-result-pdo-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15877 from niden/T15874-rename-result-pdo-2\n\nT15874 rename result pdo 2"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662125a518912b45d36a2e2b",
    "number": 15876,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "Arhell-patch-1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15876 from phalcon/Arhell-patch-1\n\nUpdate BACKERS.md"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662125a618912b45d36a2e2c",
    "number": 15875,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #15850 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nCorrected the delimiters for `Phalcon\\Support\\Helper\\SnakeCase` and `Phalcon\\Support\\Helper\\KamelCase` \r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15850-camelize-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15875 from niden/T15850-camelize-fix\n\nT15850 camelize fix"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662125a718912b45d36a2e2d",
    "number": 15872,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "Arhell-patch-1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15872 from phalcon/Arhell-patch-1\n\nUpdate BACKERS.md"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662125a818912b45d36a2e2e",
    "number": 15871,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "Arhell-patch-1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15871 from phalcon/Arhell-patch-1\n\nUpdate BACKERS.md"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662125a918912b45d36a2e2f",
    "number": 15870,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nThanks\r\n\r\n",
    "head_branch": "#15869-update-mustache",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15870 from phalcon/#15869-update-mustache\n\n#15869 - Update Mustache"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662125aa18912b45d36a2e30",
    "number": 15868,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "Arhell-patch-1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15868 from phalcon/Arhell-patch-1\n\nUpdate BACKERS.md"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662125ab18912b45d36a2e31",
    "number": 15867,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #15866 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nRemoved `$separator` from `Phalcon\\Html\\Helper\\Title::__invoke()`\r\nAdded `Phalcon\\Html\\Helper\\Title::setSeparator()`\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15866-title-separator",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15867 from niden/T15866-title-separator\n\nT15866 title separator"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662125ac18912b45d36a2e32",
    "number": 15864,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nremove\r\nThanks\r\n\r\n",
    "head_branch": "Arhell-patch-1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15864 from phalcon/Arhell-patch-1\n\nUpdate BACKERS.md"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662125ad18912b45d36a2e33",
    "number": 15862,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nremove backer\r\nThanks\r\n\r\n",
    "head_branch": "Arhell-patch-1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15862 from phalcon/Arhell-patch-1\n\nremove backer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662125ae18912b45d36a2e34",
    "number": 15861,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nremove backer\r\nThanks\r\n\r\n",
    "head_branch": "Arhell-patch-1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15861 from phalcon/Arhell-patch-1\n\nremove backer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662125af18912b45d36a2e35",
    "number": 15860,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nremove backer\r\nThanks\r\n\r\n",
    "head_branch": "Arhell-patch-1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15860 from phalcon/Arhell-patch-1\n\nremove backer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662125b018912b45d36a2e36",
    "number": 15859,
    "body": "Corrected constant to use with example\r\n\r\nHello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "@diplopito can you change your branch to 5.0.x please\r\n",
      "Changed",
      "Thank you @diplopito "
    ],
    "commit_messages": [
      "Merge pull request #15859 from diplopito/patch-1\n\nUpdate AbstractPdo.zep"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662125b118912b45d36a2e37",
    "number": 15858,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #14547 (reintroduced)\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\Logger\\AbstractAdapter::getFormattedItem()` to not add `PHP_EOL` at the end of the message and added it to the `Phalcon\\Logger\\Adapter\\Stream` (reintroduced bug)\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14547-syslog-phpeol",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15858 from niden/T14547-syslog-phpeol\n\nT14547 syslog phpeol"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662125b318912b45d36a2e38",
    "number": 15855,
    "body": "5.0.0 beta 2 release",
    "head_branch": "5.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15855 from phalcon/5.0.x\n\n5.0.0beta2"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662125b418912b45d36a2e39",
    "number": 15854,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #15853 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nCorrected `Phalcon\\Mvc\\View\\Engine\\Volt::escape_attr` filter to use the correct method on the escaper\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15853-escaper-volt",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15854 from niden/T15853-escaper-volt\n\nT15853 escaper volt"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662125b518912b45d36a2e3a",
    "number": 15852,
    "body": "\r\nHi all, \r\n\r\nI am using Phalcon v4.1.2 and we encounter the issue fixed by\r\nhttps://github.com/phalcon/cphalcon/pull/15702\r\n\r\nI wanted to wait until Phalcon 5 was out of alpha/beta before upgrading, so I cherry-picked the change back into here.  Note \r\n\r\n\r\n\r\n\r\n\r\n* Type: bug fix\r\n* Link to issue: [BUG]: Model virtual FK query not saving new value after execution #15649 https://github.com/phalcon/cphalcon/issues/15649\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nPorted fixed to  `Phalcon\\Mvc\\Model::getRelated()` to correctly return relationships (cached or not) when the foreign key has changed.\r\n\r\nThank you to @niden for the actual fix.  I am just hoping to have this ported into the 4.1 \r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15649-getrelated-fk",
    "is_a_fork": true,
    "comments": [
      "Thank you @aforward "
    ],
    "commit_messages": [
      "Merge pull request #15852 from aforward/T15649-getrelated-fk\n\nPorted the fix for \"T15649 getrelated fk\" from release 5.x.x into 4.1.x"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662125b618912b45d36a2e3b",
    "number": 15851,
    "body": "Hello!\r\n\r\n* Type: bug fix / enhancement\r\n* Link to issue: #15850 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nChanged `Phalcon\\Support\\Helper\\Str\\Camelize` to accept a third boolean parameter indicating whether the result will have the first letter capitalized or not\r\nAdded `Phalcon\\Support\\Helper\\Str\\KebabCase`, `Phalcon\\Support\\Helper\\Str\\PascalCase` and `Phalcon\\Support\\Helper\\Str\\SnakeCase` helpers\r\n\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15850-camelize-lowercase",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15851 from niden/T15850-camelize-lowercase\n\nT15850 camelize lowercase"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662125b718912b45d36a2e3c",
    "number": 15849,
    "body": "Hello!\r\n\r\n* Type: bug fix / enhancement\r\n* Link to issue: #15847 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nAdded options for where the `tagFactory` comes from in `AbstractElement`\r\nMade `assets` and `tag` services shared.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15847-forms-tagfactory",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15849 from niden/T15847-forms-tagfactory\n\nT15847 forms tagfactory"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662125b818912b45d36a2e3d",
    "number": 15846,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nremove backer\r\nThanks\r\n\r\n",
    "head_branch": "upd",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15846 from phalcon/upd\n\nremove backer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662125b918912b45d36a2e3e",
    "number": 15845,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #15844 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nRemoved references to `sha1` in favor of `hash(\"sha256\", $data)` to ensure that there are never any collisions.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15844-sha1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662125bb18912b45d36a2e3f",
    "number": 15843,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #15842 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nCorrected Volt Compiler `functionCall` to first check for the container object before checking for the `tag` service.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15842-volt-compiler",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15843 from niden/T15842-volt-compiler\n\nT15842 volt compiler"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662125be18912b45d36a2e40",
    "number": 15840,
    "body": "5.0.0beta1 Release",
    "head_branch": "5.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15840 from phalcon/5.0.x\n\n5.0.0beta1 Release"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662125bf18912b45d36a2e41",
    "number": 15839,
    "body": "Hello!\r\n\r\n* Type: enhancement\r\n* Link to issue: #15836 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nMinor adjustments (mostly cosmetic) and adding tests for #15836 \r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15836-response-code",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15839 from niden/T15836-response-code\n\nT15836 response code"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662125c018912b45d36a2e42",
    "number": 15838,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #15148 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nOriginal work from @gponcon here: https://github.com/phalcon/cphalcon/pull/15203\r\n\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15148-related-records",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15838 from niden/T15148-related-records\n\nT15148 related records"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662125c118912b45d36a2e43",
    "number": 15835,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #15831 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nCorrected the `load()` method in the `LoggerFactory` to use the key of the adapters array as the name of the adapter.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15831-logger-name",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15835 from niden/T15831-logger-name\n\nT15831 logger name"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662125c218912b45d36a2e44",
    "number": 15834,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nAttempts to make Phalcon PHP8.1 compatible.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "#15598-php8.1",
    "is_a_fork": false,
    "comments": [
      "Great job buddy!!"
    ],
    "commit_messages": [
      "Merge pull request #15834 from phalcon/#15598-php8.1\n\n#15598 - Add PHP8.1 support"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662125c418912b45d36a2e45",
    "number": 15833,
    "body": "Hello!\r\n\r\n* Type: refactoring\r\n* Link to issue: #15801 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSecond iteration of removing `Tag` from the framework. Because of backwards compatibility, the class must stay as is for now because of Volt and the `Tag\\Select`. The changes for the users will be massive so we need to take this very slowly.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15801-remove-tag-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15833 from niden/T15801-remove-tag-2\n\nT15801 remove tag 2"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662125c518912b45d36a2e46",
    "number": 15832,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nremove backer\r\nThanks\r\n\r\n",
    "head_branch": "upd",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15832 from phalcon/upd"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662125c618912b45d36a2e47",
    "number": 15826,
    "body": "Hello!\r\n\r\n* Type: enhancement\r\n* Link to issue: #15801 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nRemoved references to `Phalcon\\Tag` from the framework in favor of `Phalcon\\Html\\TagFactory`\r\n`Phalcon\\Forms\\Form` requires a `Phalcon\\Html\\TagFactory` to be set before it can render elements\r\n`Phalcon\\Di\\FactoryDefault` will now return a `Phalcon\\Html\\TagFactory` for the `tag` service\r\n\r\nThis PR does most of the work for the refactoring but does not remove `Phalcon\\Tag`. Once tests are fixed with the new `codeception-phalcon5` module, `Tag` will also be removed and tests adjusted. Aiming for beta2\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15801-tag-remove",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15826 from niden/T15801-tag-remove\n\nT15801 tag remove"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662125c718912b45d36a2e48",
    "number": 15825,
    "body": "Hello!\r\n\r\n* Type: refactor\r\n* Link to issue: #15799 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nMoved `Phalcon\\Di` to `Phalcon\\Di\\Di`\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15799-di",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15825 from niden/T15799-di\n\nT15799 di"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662125c818912b45d36a2e49",
    "number": 15824,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nadd backer\r\nThanks\r\n\r\n",
    "head_branch": "upd",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15824 from phalcon/upd\n\nadd backer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662125c918912b45d36a2e4a",
    "number": 15823,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nupdate backers\r\nThanks\r\n\r\n",
    "head_branch": "upd",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15823 from phalcon/upd\n\nupdate backers"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662125ca18912b45d36a2e4b",
    "number": 15821,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nAdd logotype\r\nThanks\r\n\r\n",
    "head_branch": "add-logotype",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15821 from phalcon/add-logotype\n\nAdd logotype"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662125cc18912b45d36a2e4c",
    "number": 15820,
    "body": "Hello!\r\n\r\n* Type: refactoring\r\n* Link to issue: #15797 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nMoved `Phalcon\\Loader` to `Phalcon\\Autoload\\Loader`\r\nAdded `Phalcon\\Autoload\\Loader::getDebug()` to collect debugging information from the loader (enabled from the constructor) \r\n\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15797-loader-move",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15820 from niden/T15797-loader-move\n\nT15797 loader move"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662125cd18912b45d36a2e4d",
    "number": 15819,
    "body": "Hello!\r\n\r\n* Type: refactor\r\n* Link to issue: #15816 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nMoved `Phalcon\\Validation\\*` under `Phalcon\\Filter`\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15816-validation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15819 from niden/T15816-validation\n\nT15816 validation"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662125ce18912b45d36a2e4e",
    "number": 15815,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #15798\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nMoved `Phalcon\\Url` to `Phalcon\\Mvc\\Url`\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15798-url-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15815 from niden/T15798-url-2\n\nT15798 url 2"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662125cf18912b45d36a2e4f",
    "number": 15813,
    "body": "Hello!\r\n\r\n* Type: refactoring\r\n* Link to issue: #15798 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nMoved `Phalcon\\Url` to `Phalcon\\Mvc\\Url`\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15798-url",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15812 from niden/T15802-registry\n\nT15802 registry"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662125d018912b45d36a2e50",
    "number": 15812,
    "body": "Hello!\r\n\r\n* Type: refactoring\r\n* Link to issue: #15802 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nMoved `Phalcon\\Registry` to `Phalcon\\Support\\Registry`\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15802-registry",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15812 from niden/T15802-registry\n\nT15802 registry"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662125d118912b45d36a2e51",
    "number": 15811,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #15370 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nChanged the `Phalcon\\Support\\Collection::get()` to return the default value if the key does not exist or the value is `null` to mirror the behavior of v3\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15370-config",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15811 from niden/T15370-config\n\nT15370 config"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662125d218912b45d36a2e52",
    "number": 15806,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nAdded missing helpers from HelperFactory\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15805-missing-helpers",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15806 from niden/T15805-missing-helpers\n\nT15805 missing helpers"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662125d418912b45d36a2e53",
    "number": 15804,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #15800 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nRemoved `Phalcon\\Exception`\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15800-remove-exception",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15804 from niden/T15800-remove-exception\n\nT15800 remove exception"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662125d518912b45d36a2e54",
    "number": 15803,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #15796 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nMoved `Phalcon\\Container` to its own namespace.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15796-move-container",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15803 from niden/T15796-move-container\n\nT15796 move container"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662125d618912b45d36a2e55",
    "number": 15795,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #15603 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nTests confirming the fix\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15603-before-execute-route",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15795 from niden/T15603-before-execute-route\n\nT15603 before execute route"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662125d718912b45d36a2e56",
    "number": 15794,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #15603\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nFixed `Phalcon\\Dispatcher\\Dispatcher::setParams()` not updating params during dispatch loop if using events case\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15603-fix-dispatchet-setparams",
    "is_a_fork": true,
    "comments": [
      "Thank you @BeMySlaveDarlin "
    ],
    "commit_messages": [
      "Merge pull request #15794 from BeMySlaveDarlin/T15603-fix-dispatchet-setparams\n\nT15603 Fix dispatcher setParams during dispatch loop"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662125d818912b45d36a2e57",
    "number": 15793,
    "body": "Hello!\r\n\r\n* Type: enhancement\r\n* Link to issue: #15785 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nMarked as deprecated:\r\n  - `Phalcon\\Mvc\\Model::existsBelongsTo()`\r\n  - `Phalcon\\Mvc\\Model::existsHasMany()`\r\n  - `Phalcon\\Mvc\\Model::existsHasOne()`\r\n  - `Phalcon\\Mvc\\Model::existsHasOneThrough()`\r\n  - `Phalcon\\Mvc\\Model::existsHasManyToMany()`\r\n  - `Phalcon\\Translate\\Adapter\\Csv::exists()`\r\n  - `Phalcon\\Translate\\Adapter\\Gettext::exists()`\r\n  - `Phalcon\\Translate\\Adapter\\NativeArray::exists()`\r\n\r\nAdded:\r\n    - `Phalcon\\Mvc\\Model::hasBelongsTo()`\r\n    - `Phalcon\\Mvc\\Model::hasHasMany()`\r\n    - `Phalcon\\Mvc\\Model::hasHasOne()`\r\n    - `Phalcon\\Mvc\\Model::hasHasOneThrough()`\r\n    - `Phalcon\\Mvc\\Model::hasHasManyToMany()`\r\n    - `Phalcon\\Translate\\Adapter\\Csv::has()`\r\n    - `Phalcon\\Translate\\Adapter\\Gettext::has()`\r\n    - `Phalcon\\Translate\\Adapter\\NativeArray::has()`\r\n\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15785-change-exists-to-has",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15793 from niden/T15785-change-exists-to-has\n\nT15785 change exists to has"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662125dc18912b45d36a2e58",
    "number": 15788,
    "body": "5.0.0alpha7 release",
    "head_branch": "5.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15788 from phalcon/5.0.x\n\n5.0.0alpha7"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662125de18912b45d36a2e59",
    "number": 15787,
    "body": "Prep for v5.0.0alpha7 release",
    "head_branch": "5.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15787 from niden/5.0.x\n\nRelease Prep"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662125e018912b45d36a2e5a",
    "number": 15786,
    "body": "Hello!\r\n\r\n* Type: bug fix/enhancement\r\n* Link to issue: #15381 #15776 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nRemoved `Phalcon\\Text`\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15776-text-helper-str",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15786 from niden/T15776-text-helper-str\n\nT15776 text helper str"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662125e118912b45d36a2e5b",
    "number": 15781,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Closes #15413\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15413-Fix-RawValue-bug-in-lowupdate",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15781 from BeMySlaveDarlin/T15413-Fix-RawValue-bug-in-lowupdate\n\nT15413 Fixed raw value bug in lowupdate"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662125e218912b45d36a2e5c",
    "number": 15780,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Closes #15571\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nNow internal `dirtyState` of `Phalcon\\Mvc\\Model` included to serialization and unserialization.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15571-add-serialization-models-dirty-state",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15780 from BeMySlaveDarlin/T15571-add-serialization-models-dirty-state\n\nT15571 Add serialization of models dirty state"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662125e318912b45d36a2e5d",
    "number": 15774,
    "body": "Fixes for tests that I broke",
    "head_branch": "5.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15774 from niden/5.0.x\n\nTest fixes"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662125e418912b45d36a2e5e",
    "number": 15772,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #15515\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nFixed usage of `allowEmpty` option in common validation.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "issue/15515-fix-allow-empty-validation",
    "is_a_fork": true,
    "comments": [
      "Thank you @BeMySlaveDarlin "
    ],
    "commit_messages": [
      "Merge pull request #15772 from BeMySlaveDarlin/issue/15515-fix-allow-empty-validation\n\nT15515 Fix allow empty validation"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662125e518912b45d36a2e5f",
    "number": 15771,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #15572\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nRemoved relation type restrictions on save model relations. Now you can save master records from child relations.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "issue/15572-removed-relation-type-restrictions",
    "is_a_fork": true,
    "comments": [
      "Can not be implemented due to infinite save loop and bunch of test fails."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662125e618912b45d36a2e60",
    "number": 15770,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #15067 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nString format router definition processing is different for controller name because of uncamelize of this option.\r\nRemoved uncamelize.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "issue/15067-fix-controller-name-parsing-router",
    "is_a_fork": true,
    "comments": [
      "Thank you @BeMySlaveDarlin "
    ],
    "commit_messages": [
      "Merge pull request #15770 from BeMySlaveDarlin/issue/15067-fix-controller-name-parsing-router\n\nT15067 Fix controller name parsing route"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662125e718912b45d36a2e61",
    "number": 15769,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14928 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nPassed additional messages to `Phalcon\\Validation\\Validator\\File` composition.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "issue/14928-fix-allow-empty-file-validation",
    "is_a_fork": true,
    "comments": [
      "Thank you @BeMySlaveDarlin "
    ],
    "commit_messages": [
      "Merge pull request #15769 from BeMySlaveDarlin/issue/14928-fix-allow-empty-file-validation\n\nT14928 Fixed allow empty file validation"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662125e818912b45d36a2e62",
    "number": 15768,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nChanged `Phalcon\\Support\\Collection\\ReadOnly` to `Phalcon\\Support\\Collection\\ReadOnlyCollection` to avoid conflicts with the read-only feature in PHP 8.1\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15767-readonly-php-81",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15768 from niden/T15767-readonly-php-81\n\nrenamed support/collection/readonly to support/collection/readonlycol…"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662125e918912b45d36a2e63",
    "number": 15766,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nChanged `Phalcon\\Encryption\\Security::hash()` to also use `password_hash()` and accept `ARGON2*` algorithms \r\nAdded `Phalcon\\Encryption\\Security::getHashInformation()` to return information for a hash\r\nAdded constants `Phalcon\\Encryption\\Security::CRYPT_ARGON2I` and `Phalcon\\Encryption\\Security::CRYPT_ARGON2ID`\r\n\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15731-password-hash",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15766 from niden/T15731-password-hash\n\nT15731 password hash"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662125ea18912b45d36a2e64",
    "number": 15764,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #15361 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nFixed `Phalcon\\Db\\Adapter\\Pdo\\Mysql` to not use `PDO::ATTR_EMULATE_PREPARES` and `PDO::ATTR_STRINGIFY_FETCHES` by default. This allows numbers to be returned with resultsets instead of strings for numeric fields\r\n\r\n",
    "head_branch": "T15361-find-toarray",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15764 from niden/T15361-find-toarray\n\nT15361 find toarray"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662125eb18912b45d36a2e65",
    "number": 15760,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nConfirming #15739 and #15356 \r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15739-assign",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15760 from niden/T15739-assign\n\nT15739 and T15356"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662125ed18912b45d36a2e66",
    "number": 15759,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #15438\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nAdded `Phalcon\\Forms\\Form::getFilteredValue()` to get filtered value without providing entity\r\n\r\nThanks\r\n\r\n",
    "head_branch": "issue/15438-added-form-get-filtered-value",
    "is_a_fork": true,
    "comments": [
      "Thank you @BeMySlaveDarlin "
    ],
    "commit_messages": [
      "Merge pull request #15759 from BeMySlaveDarlin/issue/15438-added-form-get-filtered-value\n\nT15438 Added Phalcon\\Forms\\Form::getFilteredValue()"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662125ee18912b45d36a2e67",
    "number": 15758,
    "body": "Hello!\r\n\r\n* Type: refactor\r\n* Link to issue: #15757\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nChanges to `Phalcon\\Escaper`\r\n  - Moved `Phalcon\\Escaper` to `Phalcon\\Html\\Escaper`\r\n  - Moved `Phalcon\\Escaper\\EscaperInterface` to `Phalcon\\Html\\Escaper\\EscaperInterface`\r\n  - Moved `Phalcon\\Escaper\\Exception` to `Phalcon\\Html\\Escaper\\Exception`\r\n  - Deprecated methods (to be removed at a future version)\r\n    - `escapeCss()` becomes `css()`\r\n    - `escapeJs()`, becomes `js()`\r\n    - `escapeHtml()` becomes `html()`\r\n    - `escapeHtmlAttr()` becomes `attributes()`\r\n    - `escapeUrl()` becomes `url()`\r\n    - `setHtmlQuoteType()` becomes `setFlags()`\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15757-refactor-escaper",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15758 from niden/T15757-refactor-escaper\n\nT15757 refactor escaper"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662125ef18912b45d36a2e68",
    "number": 15752,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #14203\r\n* **POSSIBLY BREAKS BACKWARD COMPATIBILITY**\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\n- `Phalcon\\Validation::getValue()` seeks through `this->data` if not found in `this->entity`;\r\n- `Phalcon\\Forms\\Form::isValid()` signature was changed: added 3rd argument `whitelist`;\r\n- Added setter and getter for `whitelist` in `Phalcon\\Forms\\Form`.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "issue/14203-fix-form-validator-get-value",
    "is_a_fork": true,
    "comments": [
      "Rebased due to fix conflicts",
      "Other than the above changes, this is looking good. If you can please add a test or two.",
      "Fixed all comments. Rebased to 5.0.x resolving conflicts",
      "Rebased due to fix conflicts\r\nDraft until all tests passes\r\n\r\nUPD: Success",
      "Thank you @BeMySlaveDarlin "
    ],
    "commit_messages": [
      "Merge pull request #15752 from BeMySlaveDarlin/issue/14203-fix-form-validator-get-value\n\nT14203 fix form validator get value"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662125f018912b45d36a2e69",
    "number": 15751,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #15485 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nAdded `setForever()` for cache/storage adapters\r\nSetting a key with 0 or negative TTL will delete the key (expired)\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15485-cache-ttl",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15751 from niden/T15485-cache-ttl\n\nT15485 cache ttl"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662125f118912b45d36a2e6a",
    "number": 15750,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #15637 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nRenamed `Phalcon\\Db\\Adapter\\AbstractAdapter::getSqlVariables()` to `Phalcon\\Db\\Adapter\\AbstractAdapter::getSQLVariables()` to align with the rest of the `getSQL*` methods\r\n\r\nFixed `Phalcon\\Db\\Adapter\\AbstractAdapter::getSQLVariables()` to return an empty array when initialized\r\n\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15637-sql-variables-array",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15750 from niden/T15637-sql-variables-array\n\nT15637 sql variables array"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662125f218912b45d36a2e6b",
    "number": 15749,
    "body": "Hello!\r\n\r\n* Type: refactoring\r\n* Link to issue: #15727 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nMoved `Logger` under the `Logger` namespace; Added more tests/coverage\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15727-refactor-logger",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15749 from niden/T15727-refactor-logger\n\nT15727 refactor logger"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662125f418912b45d36a2e6c",
    "number": 15748,
    "body": "Hello!\r\n\r\n* Type: refactror\r\n* Link to issue: #15729 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nMoving `Crypt` and `Security` under `Encryption`\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15729-crypt-security2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15748 from niden/T15729-crypt-security2\n\nT15729 crypt security2"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662125f518912b45d36a2e6d",
    "number": 15747,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nadd backer\r\nThanks\r\n\r\n",
    "head_branch": "add",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15747 from phalcon/add"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662125f618912b45d36a2e6e",
    "number": 15745,
    "body": "Hello!\r\n\r\n* Type: bug fix - refactoring\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\n\r\nMoved `Phalcon\\Cache` to `Phalcon\\Cache\\Cache`\r\n\r\nChanged `Phalcon\\Factory\\AdapterFactory` to define the factory exception in `getExceptionClass()` instead of a property. \r\n\r\nFixed `Phalcon\\Storage\\Adapter\\Redis::getAdapter()` and `Phalcon\\Cache\\Adapter\\Redis::getAdapter()` to accept the connection timeout in the constructor `options` \r\n\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15728-refactor-cache",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15745 from niden/T15728-refactor-cache\n\nT15728 refactor cache"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662125f718912b45d36a2e6f",
    "number": 15740,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #15738 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nRefactored `Helper` classes. Moved the logic in `Support\\Helper` and created a new factory to easily instantiate them. Increased code coverage\r\n\r\nIn the near future the `Helper` namespace will be deprecated\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15738-refactor-helper",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15740 from niden/T15738-refactor-helper\n\nT15738 refactor helper"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662125f818912b45d36a2e70",
    "number": 15737,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #15269 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\n`resultset_prefetch_records` is now visible in `phpinfo` - string global settings supported; added test\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15269-settings-string",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15737 from niden/T15269-settings-string\n\nT15269 settings string"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662125f918912b45d36a2e71",
    "number": 15736,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #15562 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nChanged `Phalcon\\Mvc\\Model::getPreparedQuery()` to return `QueryInterface` instead of `Query` \r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15562-getpreparedquery",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15736 from niden/T15562-getpreparedquery\n\nchanged the getPreparedQuery return type to QueryInterface"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662125fa18912b45d36a2e72",
    "number": 15735,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #15119 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nChanged `Phalcon\\Db\\Adapter\\AdapterInterface::getInternalHandler()` and `Phalcon\\Db\\Adapter\\Pdo\\AbstractPdo::getInternalHandler()` to return `var` instead of `\\PDO` for custom adapters with different engines\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15119-db-getinternalhandler",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15735 from niden/T15119-db-getinternalhandler\n\nT15119 db getinternalhandler"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662125fc18912b45d36a2e73",
    "number": 15734,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #15726 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nAligned `Flash` with `phalcon` repository; more tests\r\nMoved `Filter` to the `Filter` namespace; more tests; minor refactoring\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15726-align-flash-filter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15734 from niden/T15726-align-flash-filter\n\nT15726 align flash filter"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662125fd18912b45d36a2e74",
    "number": 15725,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #15724 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nAligning `Translate` with `phalcon/phalcon`. Test corrections, docblock corrections.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15724-align-translate",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15725 from niden/T15724-align-translate\n\nT15724 align translate"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662125fe18912b45d36a2e75",
    "number": 15723,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #15720 #14705 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nRefactored `Phalcon\\Config`\r\n- Moved `Phalcon\\Config` to `Phalcon\\Config\\Config`\r\n- Changed `Phalcon\\Config\\Config::path` by making the `delimiter` parameter a `string` \r\n- Changed `Phalcon\\Config\\Adapter\\Ini::__construct` to not accept `null` as the mode. The default is now `INI_SCANNER_NORMAL` (2)\r\n- Refactored the code for more efficiency and speed\r\n- Fixed `Phalcon\\Config\\Config::merge` to retain numeric indexes in deep merges\r\n\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15720-config-merge",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15723 from niden/T15720-config-merge\n\nT15720 config merge"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662125ff18912b45d36a2e76",
    "number": 15719,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #15276\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nDue to behavior of get_object_vars call in object scope (linked via $this), we couldn't detect public props after them being unsetted. Solved by initiating clean model instance.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "issue/15276-fix-unset-model-property",
    "is_a_fork": true,
    "comments": [
      "Thank you @BeMySlaveDarlin "
    ],
    "commit_messages": [
      "Merge pull request #15719 from BeMySlaveDarlin/issue/15276-fix-unset-model-property\n\nT15276 fix unset model property"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621260118912b45d36a2e77",
    "number": 15718,
    "body": "Hello!\r\n\r\n* Type: new feature/refactor\r\n* Link to issue: #15717 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nRefactored Phalcon\\Crypt\r\n- Moved `Phalcon\\Crypt` to `Phalcon\\Crypt\\Crypt`\r\n- Moved `Phalcon\\Crypt\\Exception` to `Phalcon\\Crypt\\Exception\\Exception`\r\n- Moved `Phalcon\\Crypt\\Mismatch` to `Phalcon\\Crypt\\Exception\\Mismatch`\r\n- Added `Phalcon\\Crypt\\Padding\\PadInteface` and padding adapters\r\n  - `Phalcon\\Crypt\\Padding\\Ansi`\r\n  - `Phalcon\\Crypt\\Padding\\Iso10126`\r\n  - `Phalcon\\Crypt\\Padding\\IsoIek`\r\n  - `Phalcon\\Crypt\\Padding\\Noop`\r\n  - `Phalcon\\Crypt\\Padding\\PadInterface`\r\n  - `Phalcon\\Crypt\\Padding\\Pkcs7`\r\n  - `Phalcon\\Crypt\\Padding\\Space`\r\n  - `Phalcon\\Crypt\\Padding\\Zero`\r\n- Added `Phalcon\\Crypt\\PadFactory` to easily create padding adapters\r\n- Added more tests increasing coverage\r\n- Changed the ccm/gcm modes to store the `authTag` with the encryption string and process it with the decryption string\r\n\r\nSpecial credit to @zachleigh for his help with the previous PR and the implementation of the `authTag` in AEAD mode.\r\n\r\nhttps://github.com/phalcon/cphalcon/pull/15271#issuecomment-769034496",
    "head_branch": "T15717-refactor-crypt",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15718 from niden/T15717-refactor-crypt\n\nT15717 refactor crypt"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621260218912b45d36a2e78",
    "number": 15716,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nadd backer\r\nThanks\r\n\r\n",
    "head_branch": "upd",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15716 from phalcon/upd\n\nadd backer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621260318912b45d36a2e79",
    "number": 15713,
    "body": "Hello!\r\n\r\n* Type: new feature | CI\r\n* Link to issue: #15462 \r\n\r\nSmall description of change:\r\n\r\n- Created reusable workflow for stubs, create pecl, install from build, phpcs\r\n- Totally reworked main workflow to unify builds\r\n\r\nThanks\r\n\r\n",
    "head_branch": "feature/unify-builds",
    "is_a_fork": false,
    "comments": [
      "We have tests with DB into `integration-test`. It's separate flow by the reason of github actions limitation for docker in Window/macOS.",
      "Stellar work @AlexNDRmac "
    ],
    "commit_messages": [
      "Merge pull request #15713 from phalcon/feature/unify-builds\n\nFeature | Unify builds"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621260418912b45d36a2e7a",
    "number": 15712,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nadd backer\r\nThanks\r\n\r\n",
    "head_branch": "upd",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15712 from phalcon/upd\n\nadd backer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621260518912b45d36a2e7b",
    "number": 15710,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #15133 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nChanged `Phalcon\\Events\\Event::construct()` to allow `source` to be nullable \r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15133-event-source-null",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15710 from niden/T15133-event-source-null\n\nT15133 event source null"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621260618912b45d36a2e7c",
    "number": 15709,
    "body": "Hello!\r\n\r\n* Type: CI\r\n* Link to issue: #15462 \r\n\r\nSmall description of change:\r\n\r\n- removed `[ci skip]` already implemented by github\r\n- renamed matrix\r\n- replaced scripting madness to set up Windows Deb tools with `php-sdk-action`\r\n\r\nThanks\r\n\r\n",
    "head_branch": "builds/php-sdk-action",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15709 from phalcon/builds/php-sdk-action\n\nBuilds | Implement php-sdk-action"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621260718912b45d36a2e7d",
    "number": 15707,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #15154 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nAdded `Phalcon\\Acl\\Adapter\\AdapterInterface::getInheritedRoles()` and `Phalcon\\Acl\\Adapter\\Memory::getInheritedRoles()` that returns the inherited roles based on a passed role name (or all if no parameter supplied)\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15154-acl-getinheritedroles",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15707 from niden/T15154-acl-getinheritedroles\n\nT15154 acl getinheritedroles"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621260818912b45d36a2e7e",
    "number": 15706,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #15494 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nChanged `Phalcon\\Session\\Bag::construct` to accept a container instead of internally calling the default\r\nChanged `Phalcon\\Session\\Bag::construct` to throw an exception if the container is not specified\r\nChanged `Phalcon\\Session\\Bag::init` to store the data in the session [#15494]\r\n\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15494-sessionbag-init",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15706 from niden/T15494-sessionbag-init\n\nT15494 sessionbag init"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621260918912b45d36a2e7f",
    "number": 15703,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #15632 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\Db\\Adapter\\Pdo\\*`, `Phalcon\\Mvc\\Model` and `Phalcon\\Mvc\\Model\\MetaData\\Strategy\\Annotations` to treat `BIGINT` numbers as string \r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15632-bigint-not-int",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15703 from niden/T15632-bigint-not-int\n\nT15632 bigint not int"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621260a18912b45d36a2e80",
    "number": 15702,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #15649 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\Mvc\\Model::getRelated()` to correctly return relationships (cached or not) when the foreign key has changed.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15649-getrelated-fk",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15702 from niden/T15649-getrelated-fk\n\nT15649 getrelated fk"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621260b18912b45d36a2e81",
    "number": 15701,
    "body": "Hello!\r\n\r\n* Type:  enhancement\r\n* Link to issue: #15700 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\n`Phalcon\\Collection` has been renamed to `Phalcon\\Support\\Collection` and relevant files moved under the `Support` namesapce.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15700-move-collection-to-support",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15701 from niden/T15700-move-collection-to-support\n\nT15700 move collection to support"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621260c18912b45d36a2e82",
    "number": 15698,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #15489 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nUpdated `Phalcon\\Loader` to use `require_once` instead of `require` so as to avoid collisions with other loaders when loading files. \r\nUpdated `Phalcon\\Mvc\\Application` and `Phalcon\\Cli\\Console` to use `require_once` for a bit of extra performance.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15489-loader-require-once",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15698 from niden/T15489-loader-require-once\n\nT15489 loader require once"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621260e18912b45d36a2e83",
    "number": 15697,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue: #15691 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nAligning tests for `Phalcon\\Acl` with `phalcon/phalcon`. Added more coverage, corrected interface names\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15691-align-tests-phalcon",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15697 from niden/T15691-align-tests-phalcon\n\nT15691 align Acl tests phalcon"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621260f18912b45d36a2e84",
    "number": 15686,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #15553 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n`Phalcon\\Mvc\\Model\\Query::getExpression()` return type missmatch fixed\r\n\r\nThanks\r\n\r\n",
    "head_branch": "issue/15553-fix-return-type",
    "is_a_fork": true,
    "comments": [
      "Thank you @BeMySlaveDarlin "
    ],
    "commit_messages": [
      "Merge pull request #15686 from BeMySlaveDarlin/issue/15553-fix-return-type\n\n#15553 - Fix Query::getExpression return type"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621261018912b45d36a2e85",
    "number": 15680,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nThanks\r\n\r\n",
    "head_branch": "#15678-zephir-parser",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15680 from phalcon/#15678-zephir-parser\n\n#15678 - Update Zephir parser installation process and CI workflows"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621261118912b45d36a2e86",
    "number": 15679,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nremove backer\r\nThanks\r\n\r\n",
    "head_branch": "remove",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15679 from phalcon/remove\n\nremove backer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621261218912b45d36a2e87",
    "number": 15674,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nadd backer\r\nThanks\r\n\r\n",
    "head_branch": "add",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15674 from phalcon/add\n\nadd backer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621261318912b45d36a2e88",
    "number": 15668,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "psr-version-win",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15668 from phalcon/psr-version-win\n\nBump PSR_VERSION to `1.1.0` in win builds"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621261718912b45d36a2e89",
    "number": 15667,
    "body": "5.0.0 alpha 6 release",
    "head_branch": "5.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15667 from phalcon/5.0.x\n\n5.0.0alpha6"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621261818912b45d36a2e8a",
    "number": 15666,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nThanks\r\n\r\n",
    "head_branch": "#15665-update-package.xml",
    "is_a_fork": false,
    "comments": [
      "/cc @remicollet "
    ],
    "commit_messages": [
      "Merge pull request #15666 from phalcon/#15665-update-package.xml\n\n#15665 - Update package.xml"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621261918912b45d36a2e8b",
    "number": 15660,
    "body": "Hello!\r\n\r\n* Type: bug fix | code quality\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "adjust-db-adapter-interface",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15660 from phalcon/adjust-db-adapter-interface\n\n#15659 - Adjust db adapter interface"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621261a18912b45d36a2e8c",
    "number": 15658,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue: #15439 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nAdded more tests to validate the bug.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15439-model-redis-private-properties",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15658 from niden/T15439-model-redis-private-properties\n\nT15439 model redis private properties"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621261b18912b45d36a2e8d",
    "number": 15657,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #15656 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nAdded `Phalcon\\Security\\JWT\\Builder::addClaim` for custom JWT claims.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15656-custom-jwt",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15657 from niden/T15656-custom-jwt\n\nT15656 custom jwt"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621261c18912b45d36a2e8e",
    "number": 15654,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #15480 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15480-storage-prefix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15654 from niden/T15480-storage-prefix\n\nT15480 storage prefix"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621262018912b45d36a2e8f",
    "number": 15651,
    "body": "Release v5.0.0alpha5\r\n",
    "head_branch": "5.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15651 from phalcon/5.0.x\n\nRelease v5.0.0alpha5"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621262118912b45d36a2e90",
    "number": 15650,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #15643 \r\n\r\nSmall description of change:\r\n\r\n- Added ability to skip OS specific build via commit message (e.g. [win skip], [linux skip], [mac skip])\r\n- Fixed release assets upload action\r\n\r\nThanks\r\n\r\n",
    "head_branch": "release-action-fix",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15650 from phalcon/release-action-fix\n\nRelease action fix"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621262518912b45d36a2e91",
    "number": 15648,
    "body": "Hello!\r\n\r\n* Type: bug fix | code quality\r\n* Link to issue: #15647\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "#15647-fix-psr-ce",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15648 from phalcon/#15647-fix-psr-ce\n\n#15647 - Fix PSR Class entries"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621262618912b45d36a2e92",
    "number": 15646,
    "body": "Fix #15645 \r\n",
    "head_branch": "issue-15645",
    "is_a_fork": true,
    "comments": [
      "Will be fixed in https://github.com/phalcon/cphalcon/issues/15647\r\n\r\nClosing."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621262718912b45d36a2e93",
    "number": 15644,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nremove backer\r\nThanks\r\n\r\n",
    "head_branch": "remove",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15644 from phalcon/remove\n\nremove backer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621262f18912b45d36a2e94",
    "number": 15641,
    "body": "Release 5.0.0alpha4",
    "head_branch": "5.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15641 from phalcon/5.0.x\n\nRelease 5.0.0alpha4"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621263018912b45d36a2e95",
    "number": 15640,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nadd backer\r\nThanks\r\n\r\n",
    "head_branch": "add",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15640 from phalcon/add\n\nadd backer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621263218912b45d36a2e96",
    "number": 15639,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #15638 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\Logger\\Adapter\\*` to not allow serialization of the object. Added an exception when destroying the object while in transaction mode\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15638-logger-adapter-serialize-5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15639 from niden/T15638-logger-adapter-serialize-5\n\nT15638 logger adapter serialize 5"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621263318912b45d36a2e97",
    "number": 15629,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nRelated: https://github.com/phalcon/cphalcon/pull/15629\r\nCredit: https://github.com/stijn1989\r\n\r\nThanks",
    "head_branch": "set-default-di",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15629 from phalcon/set-default-di\n\nSet default di in `getDI()`"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621263418912b45d36a2e98",
    "number": 15627,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "#15625-add-test-case-v4.1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15627 from phalcon/#15625-add-test-case-v4.1\n\n#15625 - Add test case v4.1"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621263518912b45d36a2e99",
    "number": 15626,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "#15625-add-test-case",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15626 from phalcon/#15625-add-test-case\n\n#15625 - Add test case"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621263618912b45d36a2e9a",
    "number": 15624,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nremove backer\r\nThanks\r\n\r\n",
    "head_branch": "remove",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15624 from Arhell/remove\n\nremove backer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621263718912b45d36a2e9b",
    "number": 15623,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nadd bcker\r\nThanks\r\n\r\n",
    "head_branch": "add",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15623 from Arhell/add\n\nadd backer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621263818912b45d36a2e9c",
    "number": 15618,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #15292 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nAdded `setCssIconClasses` in `Phalcon\\Flash\\*` to allow setting icons in the flash messages (bootstrap related).\r\n\r\nCredit: @escribiendocodigo\r\nOriginal PR: https://github.com/phalcon/cphalcon/issues/15292\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15292-flash-css-classes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15618 from niden/T15292-flash-css-classes\n\nT15292 flash css classes"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621263918912b45d36a2e9d",
    "number": 15616,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #15615 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nAdded interfaces with constants for methods and status codes for the HTTP namespace. (see PHP-FIG)\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15615-http-method-status-constants",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15616 from niden/T15615-http-method-status-constants\n\nT15615 http method status constants"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621263a18912b45d36a2e9e",
    "number": 15610,
    "body": "Hello!\r\n\r\n* Type: new feature | code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "improve-psr-via-zephir",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15610 from phalcon/improve-psr-via-zephir\n\nImprove PSR detection via Zephir's Dynamic Class Entries detection"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621263b18912b45d36a2e9f",
    "number": 15596,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change: Fixed the same grammar error in three places in the repository. The word \"then\" was misused instead of the word \"than\" for a comparison.\r\n\r\nThanks,\r\nRobin van der Vliet",
    "head_branch": "fix-grammar-error",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15596 from RobinvanderVliet/fix-grammar-error\n\nFix grammar error (then -> than)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621263c18912b45d36a2ea0",
    "number": 15586,
    "body": "\r\n\r\n\r\n* Type: bug fix\r\n\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [x] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nparamters -> parameters\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15586 from eltociear/patch-1\n\nFix typo in Tag.zep"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621263d18912b45d36a2ea1",
    "number": 15585,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nupdate backers\r\nThanks\r\n\r\n",
    "head_branch": "upd",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15585 from Arhell/upd\n\nupdate backers"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621263e18912b45d36a2ea2",
    "number": 15582,
    "body": "Hello!\r\n\r\n* Type: bug fix  \r\n* Link to issue: #15489\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nChanged the `require` in the loader to use `require_once` so as not to interfere with other loader components\r\nMoved the `Phalcon\\Loader` to its own namespace\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15489-loader-enhancements",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621263f18912b45d36a2ea3",
    "number": 15581,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue: Closes #15580\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [X] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [X] I have checked that another pull request for this purpose does not exist\r\n\r\nSmall description of change:\r\n\r\n- Fixed release notes parser script\r\n- Fixed release action workflow\r\n\r\nThanks\r\n\r\n",
    "head_branch": "bugfix/release-action",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15581 from phalcon/bugfix/release-action\n\nBugfix | Release action"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621264018912b45d36a2ea4",
    "number": 15573,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #15421\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "BumpZephir",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15573 from ruudboon/BumpZephir\n\nBump zephir"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621264218912b45d36a2ea5",
    "number": 15570,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/15569\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n`Model\\ManagerInterface::createBuilder` only specifies a string as a supported type, although an array is also supported. The Model\\Manager::createBuilder itself does not have a type specified, therefore in the PHPDoc it is indicated as \"mixed\". \r\n\r\nThanks\r\n",
    "head_branch": "createbuilder-phpdoc",
    "is_a_fork": true,
    "comments": [
      "Rebased. Just to clarify, do we really need an entry in the changelog if this change is only in the PHPDoc and not in the php data types?",
      "> Rebased. Just to clarify, do we really need an entry in the changelog if this change is only in the PHPDoc and not in the php data types?\r\n\r\nActually you are right :)\r\n",
      "Thank you @StudioMaX "
    ],
    "commit_messages": [
      "Merge pull request #15570 from StudioMaX/createbuilder-phpdoc\n\nT15569 Indicate that ManagerInterface::createBuilder can accept array"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621264318912b45d36a2ea6",
    "number": 15568,
    "body": "* Type: bug fix \r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/15567\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [x] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nAssign the form entity to the entity variable in the isValid method if no entity is provided.\r\n\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "@stijn1989 Could you write a test case with scenario that you described in a changelog?",
      "> @stijn1989 Could you write a test case with scenario that you described in a changelog?\r\n\r\nWhat do you mean by testcase? A unit test or a real life example? I provided an example in the issue.",
      "Unit test",
      "> Unit test\r\n\r\nUnit test is added to the branch.",
      "@stijn1989 Your test is failing, could you please check?",
      "> @stijn1989 Your test is failing, could you please check?\r\n\r\nYeah I'm not great in writing tests. I forgot to create a DI container in the test.",
      "Thank you @stijn1989 "
    ],
    "commit_messages": [
      "Merge pull request #15568 from stijn1989/patch-1\n\nT15567 Form entity not passed with validation"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621264418912b45d36a2ea7",
    "number": 15566,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "ci-improvements",
    "is_a_fork": false,
    "comments": [
      "Blocked by https://github.com/shivammathur/setup-php/issues/471"
    ],
    "commit_messages": [
      "Merge pull request #15566 from phalcon/ci-improvements\n\nImprove MacOS CI"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621264618912b45d36a2ea8",
    "number": 15564,
    "body": "5.0.0 alpha 3 release\r\n",
    "head_branch": "5.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15564 from phalcon/5.0.x\n\n5.0.0alpha3"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621264818912b45d36a2ea9",
    "number": 15563,
    "body": "The uniqueness validator fails when using an entity in a form. In this form I assign a validator object. One of the rules in the validator is that the \"name\" field must be unique.\r\n\r\nWorks great but when I use this form to edit, it has a persisted entity. So the uniqueness validator checks that their is no record of that name and doesn't belong to the primary key field. \r\n\r\nOnly problem is that the validator doesn't receive the entity object that is assigned to the form. It receives the entity that is passed to the method \"isValid($data, $entity)\". \r\n\r\nThis one line added to the isValid function, passes the form entity as the entity to validation.\r\n\r\nHello!\r\n\r\n* Type: bug fix\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [
      "> Three things:\r\n> \r\n> * First thank you for the bug fix. Really appreciated\r\n> * You need to create an issue and reference this PR to that issue (the issue we explain what is wrong)\r\n> * You need to update the `CHANGELOG`\r\n> \r\n> Other than that this looks good !\r\n\r\nChange CHANGELOG or CHANGELOG-5.0?\r\n",
      "> > Three things:\r\n> > \r\n> > * First thank you for the bug fix. Really appreciated\r\n> > * You need to create an issue and reference this PR to that issue (the issue we explain what is wrong)\r\n> > * You need to update the `CHANGELOG`\r\n> > \r\n> > Other than that this looks good !\r\n> \r\n> Change CHANGELOG or CHANGELOG-5.0?\r\n\r\nNo actually put a line in the CHANGELOG-5.0 (sorry my typo above) that explains what you did and links to the original issue.",
      "Also you need to rebase and target the 5.0.x branch. `master` is only for releases."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621264918912b45d36a2eaa",
    "number": 15561,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nExtensions and composer cache is temporary disabled due some bug in external action.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix-mac-os-ci",
    "is_a_fork": false,
    "comments": [
      "Related https://github.com/shivammathur/setup-php/issues/471"
    ],
    "commit_messages": [
      "Merge pull request #15561 from phalcon/fix-mac-os-ci\n\nFix macOS CI"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621264a18912b45d36a2eab",
    "number": 15560,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nadd backer\r\nThanks\r\n\r\n",
    "head_branch": "add",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15560 from Arhell/add\n\nadd backer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621264b18912b45d36a2eac",
    "number": 15557,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #15556 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\Mvc\\View\\Engine\\Volt\\Compiler` for a use case when a block will return null vs an array for `statementList` in PHP 8 (type error)\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15556-volt-compiler-block",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15557 from niden/T15556-volt-compiler-block\n\nT15556 volt compiler block"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621264c18912b45d36a2ead",
    "number": 15551,
    "body": "Fixed comment in http response headers delete method\r\n\r\nHello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "5.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15551 from fvromera/5.0.x\n\nFixed comment in http response headers"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621264d18912b45d36a2eae",
    "number": 15547,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nadd DigitalOcean\r\nThanks\r\n\r\n",
    "head_branch": "add",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15547 from Arhell/add\n\nadd DigitalOcean"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621264e18912b45d36a2eaf",
    "number": 15544,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fvromera-patch-helper-html-select-addplaceholder-fixed-comment",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15544 from fvromera/fvromera-patch-helper-html-select-addplaceholder-fixed-comment\n\nFixed comment in html select helper addPlaceholder"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621264f18912b45d36a2eb0",
    "number": 15540,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nremove\r\nThanks\r\n\r\n",
    "head_branch": "remove",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15540 from Arhell/remove\n\nremove backer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621265018912b45d36a2eb1",
    "number": 15534,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [x] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fvromera-patch-html-without-rel-comment-typo",
    "is_a_fork": true,
    "comments": [
      "Thank you @fvromera "
    ],
    "commit_messages": [
      "Merge pull request #15534 from fvromera/fvromera-patch-html-without-rel-comment-typo\n\nFix html without rel comment typo"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621265118912b45d36a2eb2",
    "number": 15533,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [x] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fvromera-patch-html-form-typo",
    "is_a_fork": true,
    "comments": [
      "Thank you @fvromera "
    ],
    "commit_messages": [
      "Merge pull request #15533 from fvromera/fvromera-patch-html-form-typo\n\nFvromera patch html form typo"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621265218912b45d36a2eb3",
    "number": 15532,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [x] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fvromera-patch-flash-exception-comment-typo",
    "is_a_fork": true,
    "comments": [
      "Thank you @fvromera "
    ],
    "commit_messages": [
      "Merge pull request #15532 from fvromera/fvromera-patch-flash-exception-comment-typo\n\nFixed comment typo in flash exception"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621265318912b45d36a2eb4",
    "number": 15531,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [x] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fvromera-patch-flash-exception-comment-typo",
    "is_a_fork": true,
    "comments": [
      "@fvromera can you rebase that to v5 please?"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621265418912b45d36a2eb5",
    "number": 15506,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #15504 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nUpgraded PSR to 1.1.x and corrected `Phalcon\\Container` interface\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15504-psr-1.1",
    "is_a_fork": true,
    "comments": [
      "Converting to draft and putting it on hold until pecl releases psr 1.1.1 (with container 1.1.1)",
      "`psr/container 1.1.1` is already included in `PHP-PSR 1.1.0` - https://pecl.php.net/package/psr/1.1.0\r\n> - Update psr/container to 1.1.1",
      "Blocked by https://github.com/phalcon/cphalcon/pull/15610"
    ],
    "commit_messages": [
      "Merge pull request #15506 from niden/T15504-psr-1.1\n\nT15504 psr 1.1"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621265518912b45d36a2eb6",
    "number": 15490,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nadd backer\r\nThanks\r\n\r\n",
    "head_branch": "upd-backers",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15490 from Arhell/upd-backers\n\nadd backer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621265618912b45d36a2eb7",
    "number": 15488,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #15486\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "#15486-fix-fatal",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15488 from phalcon/#15486-fix-fatal\n\n#15486 - Change `bindCounts` argument to array type"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621265718912b45d36a2eb8",
    "number": 15487,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #15484 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\Storage\\Adapter\\Redis::getAdapter` to use passed `connectionTimeout`, `retryInterval` and `readTimeout` options for the connection\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15484-redis-connect-timeout",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15487 from niden/T15484-redis-connect-timeout\n\nT15484 redis connect timeout"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621265818912b45d36a2eb9",
    "number": 15481,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #15469 \r\n\r\nSmall description of change:\r\n\r\n- Fixed paths for release action\r\n- Added automatic release notes publishing from CHANGELOG\r\n\r\nThanks\r\n\r\n",
    "head_branch": "bugfix/release-action",
    "is_a_fork": false,
    "comments": [
      "@niden in this PR also added automatic release notes publishing from CHANGELOG... but needs to check it :)",
      "Win builds seems to fail...",
      "Yes... failed because too long cmd line in batch... it must be reworked. I'll try to sort out with it ASAP",
      "@Jeckerson, Windows builds – fixed"
    ],
    "commit_messages": [
      "Merge pull request #15481 from phalcon/bugfix/release-action\n\nBugfix | Release action"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621265918912b45d36a2eba",
    "number": 15479,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\n\r\nThanks",
    "head_branch": "#15363-fix-db-delete",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15479 from phalcon/#15363-fix-db-delete\n\n#15363 - Fix db delete with passed `bindTypes`"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621265a18912b45d36a2ebb",
    "number": 15478,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #15471 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nChanged:\r\n    - `Phalcon\\Mvc\\Model\\Resultset\\Complex::__construct` now accepts `Psr\\SimpleCache\\CacheInterface` for the cache\r\n    - `Phalcon\\Mvc\\Model\\Resultset\\Simple::__construct` now accepts `Psr\\SimpleCache\\CacheInterface` for the cache\r\n    - `Phalcon\\Mvc\\Model\\Resultset::__construct` now accepts `Psr\\SimpleCache\\CacheInterface` for the cache\r\n    - `Phalcon\\Mvc\\Model\\Resultset::getCache` now returns `Psr\\SimpleCache\\CacheInterface|null`\r\n\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15471-models-cache",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15478 from niden/T15471-models-cache\n\nT15471 models cache"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621265b18912b45d36a2ebc",
    "number": 15477,
    "body": "Hello!\r\n\r\n* Type: bug fix | code quality\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nThanks\r\n\r\n",
    "head_branch": "#15476-improve-stubs",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15477 from phalcon/#15476-improve-stubs\n\n#15476 - Improve stubs"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621265c18912b45d36a2ebd",
    "number": 15475,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "add-workflow-for-docker",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15475 from phalcon/add-workflow-for-docker\n\nAdd workflow for docker"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621265d18912b45d36a2ebe",
    "number": 15470,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/15421\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nChanged the version format to reflect to PECL format. ",
    "head_branch": "5.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15470 from ruudboon/5.0.x\n\n5.0.x"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621266218912b45d36a2ebf",
    "number": 15467,
    "body": "Release 5.0.0-alpha.2",
    "head_branch": "5.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15467 from phalcon/5.0.x\n\nRelease 5.0.0-alpha.2"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621266318912b45d36a2ec0",
    "number": 15465,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #15449 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nUpdating changelog for 4.1.x\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15449-changelog",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15465 from niden/T15449-changelog\n\nfix(changelog): updated 4.1.2 changelog"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621266418912b45d36a2ec1",
    "number": 15461,
    "body": "Hello!\r\n\r\n* Type: small refactoring\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nThanks\r\n\r\n",
    "head_branch": "unify-builds-refactoring",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15461 from phalcon/unify-builds-refactoring\n\nUnify builds refactoring"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621266c18912b45d36a2ec2",
    "number": 15457,
    "body": "Hello!\r\n\r\n* Type: new feature | code quality\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nThanks\r\n\r\n",
    "head_branch": "#15456-unify-builds-php-versions",
    "is_a_fork": false,
    "comments": [
      "@remicollet Could you please take a look?",
      "> @remicollet Could you please take a look?\r\n\r\n```\r\n$ phpize\r\nCannot find config.m4. \r\n```\r\n\r\nTested from the pecl archive generated frm this branch",
      "@remicollet So `config.*` files must be in the **root** of pecl archive and not inside `build/phalcon/safe` directory?\r\n\r\n![image](https://user-images.githubusercontent.com/3289702/116995408-f1372f00-acd1-11eb-9746-b768beaffbb6.png)\r\n",
      "> @remicollet So config.* files must be in the root of pecl archive and not inside build/phalcon/safe directory?\r\n\r\nYes\r\n\r\nMy test\r\n```\r\npecl package\r\nmv phalcon-5.0.0.tgz /tmp\r\ncd /tmp\r\ntar xvf phalcon-5.0.0.tgz\r\ncd phalcon-5.0.0\r\nphpize\r\n...\r\n\r\n```",
      "@Jeckerson for multi builds usually use next logic: build/{os}/{build type}/{arch}...\r\nSo, all build artefacts must be in destination folder. Main purpose of this approach - is avoiding to rebuild artifacts by build with other (os/build type/arch..) configuration.",
      "BTW... pecl seems able to detect proper location...\r\n\r\n```\r\n# pecl install --force ./phalcon-5.0.0.tgz  \r\n5 source files, building\r\nrunning: phpize\r\nConfiguring for:\r\nPHP Api Version:         20190902\r\nZend Module Api No:      20190902\r\nZend Extension Api No:   320190902\r\nbuilding in /var/tmp/pear-build-rootggwrDP/phalcon-5.0.0\r\nrunning: /var/tmp/phalcon/build/phalcon/safe/configure --with-php-config=/usr/bin/php-config\r\nchecking for grep that handles long lines and -e... /usr/bin/grep\r\n...\r\n\r\n```\r\n\r\n\r\nP.S. confirmed by https://github.com/pear/pear-core/blob/master/PEAR/Builder.php#L345"
    ],
    "commit_messages": [
      "Merge pull request #15457 from phalcon/#15456-unify-builds-php-versions\n\n#15456 - Unify builds of PHP 7 and 8 versions"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621266d18912b45d36a2ec3",
    "number": 15455,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nThanks\r\n\r\n",
    "head_branch": "#15074-paginator-items",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15455 from phalcon/#15074-paginator-items\n\n#15074 - Change return from `array` to `ResultsetInterface` in Model Paginator"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621266e18912b45d36a2ec4",
    "number": 15454,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14764 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nChanged the signature of setLocale in `Translate\\Adapter\\Gettext` to allow multiple locale declarations if necessary. Aligns with `setlocale`\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14764-gettext-setlocale-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15454 from niden/T14764-gettext-setlocale-2\n\nT14764 gettext setlocale 2"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621266f18912b45d36a2ec5",
    "number": 15453,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/15070\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix-15070",
    "is_a_fork": true,
    "comments": [
      "Thank you @Izopi4a ",
      "there is a potential people using the Form::bind method in a \"abusive way\" because you can bind values without having such elements. \r\nIf people were doing that it would be wrong, but in case of reports, we could alter the changes in a way that we only filter the bindData when whitelist is provided instead of always \r\n\r\nbefore you can \r\n\r\n```\r\n$form = new Form();\r\n$form->add(new Text('el1'));\r\n$form->bind([\r\n    \"el1\" => \"value\",\r\n    \"el2\"=>  \"value2\"\r\n]);\r\n```\r\nand do `$form->getValue(\"el2\")` will return the value, altho you have no such element. After this change this will no longer be possible. \r\n",
      "Thank you @Izopi4a \r\n\r\nWe will add a note in the documentation for sure about this  (your last comment)"
    ],
    "commit_messages": [
      "Merge pull request #15453 from Izopi4a/fix-15070\n\nFix form::bind with whitelist not ignoring bad data values"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621267018912b45d36a2ec6",
    "number": 15437,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #15436 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nUpgrading tests/code to Zephir 0.13.4\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15436-upgrade-zephir",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15437 from niden/T15436-upgrade-zephir\n\nT15436 upgrade zephir"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621267118912b45d36a2ec7",
    "number": 15434,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nadd backer\r\nThanks\r\n\r\n",
    "head_branch": "add",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15434 from Arhell/add\n\nadd backer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621267218912b45d36a2ec8",
    "number": 15432,
    "body": "Hello!\r\n\r\n* Type: new feature request\r\n* Link to issue: #15051 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nAdded `Phalcon\\Validation\\Validator\\File\\AbstractFile::checkIsUploadedFile()` method to allow overriding when adding files to the `$_FILES` array directly (not uploading).\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15051-validator-uploaded-file",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15432 from niden/T15051-validator-uploaded-file\n\nT15051 validator uploaded file"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621267418912b45d36a2ec9",
    "number": 15431,
    "body": "4.1.2 release",
    "head_branch": "4.1.2-release",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15431 from phalcon/4.1.2-release\n\n4.1.2 release"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621267518912b45d36a2eca",
    "number": 15430,
    "body": "Hello!\r\n\r\nHereby the updated package.xml to be able to release on Pecl.",
    "head_branch": "4.1.2-release",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15430 from ruudboon/4.1.2-release\n\nFixed package.xml for 4.1.2 release"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621267618912b45d36a2ecb",
    "number": 15429,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: Fixes #15334 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nAdded `Phalcon\\Http\\Response\\Cookies::isSent()` and `Phalcon\\Http\\Response\\Headers::isSent()`; Added logic to not send the headers or cookies twice.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15334-headers-sent-twice",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15429 from niden/T15334-headers-sent-twice\n\nT15334 headers sent twice"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621267718912b45d36a2ecc",
    "number": 15428,
    "body": "Trying to make things simpler for pecl, and allowing to use same package for both PHP 7 and 8\r\n\r\nnotice: config.w32 blindly written (inspired from zip ext by @cmb69)\r\n\r\nSide effect: \"phpize; ./configure; make\" work in top directory ",
    "head_branch": "issue-pecl",
    "is_a_fork": true,
    "comments": [
      "Notice: the phalcon 5.x master tree seems really not ready\r\n\r\nin **php_phalcon.h** \r\n\r\n- PHP_PHALCON_VERSION still 4.1.0\r\n\r\nin **package.xml**\r\n\r\n- version is 5.0.0 (instead of 5.0.0alpha1)\r\n- stability still \"stable\" (instead of alpha)\r\n- max version 8.0.3 doesn't seems to make sense\r\n- pear min version can be set to 1.10 (required for PHP > 7)\r\n",
      "PHP 7 failure (missing` #include <ext/session/php_session.h>`) doesn't seems related to this PR\r\n",
      "> Notice: the phalcon 5.x master tree seems really not ready\r\n\r\nYes, there were no plans to release 1st alpha to the pecl, nor have Win builds.\r\n\r\n> allowing to use same package for both PHP 7 and 8\r\n\r\nProbably we can resolve it via Zephir with version checks in `phalcon.c` and unify all into single folder. @remicollet what it your opinion about that?",
      "\r\n> Probably we can resolve it via Zephir with version checks in `phalcon.c` and unify all into single folder. @remicollet what it your opinion about that?\r\n\r\nI don't have any opinion ;)\r\n\r\nVarious extensions already use the multiple tree way (zip, event, ...)\r\n",
      "Already implemented, closing."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621267818912b45d36a2ecd",
    "number": 15426,
    "body": "Hello!\r\n\r\n* Type: enhancement\r\n* Link to issue: #14817 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nMoved `Debug` under `Support`\r\nUpdated css/js assets\r\n\r\nRelated: https://github.com/phalcon/assets/pull/70\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14817-debug-styling-new-home",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15426 from niden/T14817-debug-styling-new-home\n\nT14817 debug styling new home"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621267a18912b45d36a2ece",
    "number": 15425,
    "body": "4.1.1 Release",
    "head_branch": "4.1.1-release",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15425 from phalcon/4.1.1-release\n\n4.1.1 release"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621267b18912b45d36a2ecf",
    "number": 15423,
    "body": "Hello!\r\n\r\n* Type: enhancement\r\n* Link to issue: Fixes #15422 #15424 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\n`Phalcon\\Version` is not moved to `Phalcon\\Support\\Version`\r\n    - `_getSpecialVersion` and `_getVersion` have been removed (marked deprecated in v4)\r\n    - The class is no longer static; it has to be instantiated first\r\n    - References to `Phalcon\\Debug` and the Volt compiler have been adjusted \r\nCorrected `Phalcon\\Cache` to cast keys as strings before sending them to adapters\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15422-version-top-level",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15423 from niden/T15422-version-top-level\n\nT15422 version top level"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621267c18912b45d36a2ed0",
    "number": 15419,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: Fixes #15241 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nCorrected `Phalcon\\Db\\Adapter\\Pdo\\AbstractPdo::connect` to take into account the `persistent` option for relevant connections\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15241-db-persistent-flag",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15419 from niden/T15241-db-persistent-flag\n\nT15241 - db persistent flag"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621267d18912b45d36a2ed1",
    "number": 15418,
    "body": "Refs [#15188]\r\n\r\nHello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #15188 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\n--\r\n\r\nCorrected `Phalcon\\Image\\Adapter\\Gd::processText` to correctly call `imagettfbbox` when a font is specified\r\n\r\n",
    "head_branch": "T15188-gd-text",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15418 from niden/T15188-gd-text\n\ntest(image/adapter/gd): added test for text with font"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621267e18912b45d36a2ed2",
    "number": 15417,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #15188 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15188-gd-text",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621267f18912b45d36a2ed3",
    "number": 15416,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: Fixes #15415 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nCorrected `Phalcon\\Mvc\\Model\\Query\\BuilderInterface::orderBy` to use `var` instead of `string`\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15415-orderby-interface-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15416 from niden/T15415-orderby-interface-2\n\nT15415 orderby interface 2"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621268018912b45d36a2ed4",
    "number": 15414,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: Fixes #14927 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nAdded `BINARY` and `VARBINARY` support for `Phalcon\\Db\\Adapter\\Mysql`\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14927-binary-varbinary-mysql",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15414 from niden/T14927-binary-varbinary-mysql\n\nT14927 binary varbinary mysql"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621268118912b45d36a2ed5",
    "number": 15412,
    "body": "Hello!\r\n\r\n* Type: bug fix - enhancement\r\n* Link to issue: Fixes #15411 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nChanges to the `Phalcon\\Logger`:\r\n    - Renamed `Phalcon\\Logger\\Item::getName` to `Phalcon\\Logger\\Item::getLevelName`   \r\n    - Renamed `Phalcon\\Logger\\Item::getType` to `Phalcon\\Logger\\Item::getLevel`\r\n    - Changed the logger timestamp to be `DateTimeImmutable` on a per item basis - more accurate timing\r\n    - Changed `Phalcon\\Logger` to accept a `DateTimeZone` in the constructor \r\n    - Changed placeholder `%type%` to `%level%` to align with the variables [#15411](https://github.com/phalcon/cphalcon/issues/15411)\r\n\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15411-logger-enhancements",
    "is_a_fork": true,
    "comments": [
      "Phalcon isn't ready for `0.13.2` Zephir atm.",
      "This is on hold until a new version of Zephir is released to correctly handle `DateTimeImmutable` and `DateTimeZone`.\r\n\r\ncc @Jeckerson ",
      "Error in pgsql tests occur due passing empty string schema, instead of null."
    ],
    "commit_messages": [
      "Merge pull request #15412 from niden/T15411-logger-enhancements\n\nT15411 logger enhancements"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621268218912b45d36a2ed6",
    "number": 15404,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nadd backers\r\nThanks\r\n\r\n",
    "head_branch": "upd",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15404 from Arhell/upd\n\nadd backers"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621268318912b45d36a2ed7",
    "number": 15401,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #15375 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nWrote test to identify if this is an issue or not\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15375-logger-type",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15401 from niden/T15375-logger-type\n\ntest(logger/formatter/line): added test with a different line format"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621268418912b45d36a2ed8",
    "number": 15397,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [X] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [X] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [X] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\n- Added licenses to win artifact builds\r\n- Fixed broken macOS CI workflow\r\n\r\nThanks\r\n\r\n",
    "head_branch": "feature/license-in-artifacts",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15397 from phalcon/feature/license-in-artifacts\n\nFeature | license in artifacts"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621268518912b45d36a2ed9",
    "number": 15395,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: Fixes #14764 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nChanged the signature of setLocale in `Translate\\Adapter\\Gettext` to allow multiple locale declarations if necessary. Aligns with `setlocale`\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14764-gettext-setlocale",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621268618912b45d36a2eda",
    "number": 15392,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #15390\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [X] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [X] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [X] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\n- Removed Travis CI build\r\n- Removed AppVeyour CI builds\r\n- Added Github Action for Releases creation\r\n\r\nThanks\r\n\r\n",
    "head_branch": "feature/github-actions-only",
    "is_a_fork": false,
    "comments": [
      "@niden needs to stop builds (close project) in AppVeyour account.",
      "@AlexNDRmac `appveyor` webhooks are now disabled.",
      "~Also please add `x32` to matrix.~",
      "Thank you @AlexNDRmac "
    ],
    "commit_messages": [
      "Merge pull request #15392 from phalcon/feature/github-actions-only\n\nFeature | GitHub actions only"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621268818912b45d36a2edb",
    "number": 15389,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #15344 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [X] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [X] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [X] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n- Fixed windows CI build for Phalcon v5.x\r\n\r\nThanks\r\n\r\n",
    "head_branch": "bugfix/windows-builds",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15389 from phalcon/bugfix/windows-builds\n\nBugfix | Windows builds"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621268a18912b45d36a2edc",
    "number": 15388,
    "body": "I think you were really close in the `bugfix/windows-builds` branch, but I think some code generation somewhere may have been blowing some of your changes away. Possibly missing `ADD_EXTENSION_DEP` in `./build/_resource/config/config.w32`.\r\n\r\nThis is a rough patch but hopefully it'll fix it or put you on the right track.",
    "head_branch": "bugfix/windows-builds-3",
    "is_a_fork": true,
    "comments": [
      "(It's still failing, but now it's some issue with imagick)",
      "Woah, very nice, thank you!\r\n\r\nThere is still no imagick for PHP8.0 on pecl :( Only via manual compilation."
    ],
    "commit_messages": [
      "Merge pull request #15388 from jbboehr/bugfix/windows-builds-3\n\nPossible fix for PSR linkage on windows builds"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621268b18912b45d36a2edd",
    "number": 15385,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: Fixes #15249 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nIntroduced two new methods to get the nano and microseconds from the profiler item; corrected seconds calculation\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15249-profiler-time",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15385 from niden/T15249-profiler-time\n\nT15249 profiler time"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621268c18912b45d36a2ede",
    "number": 15384,
    "body": "Reverts phalcon/cphalcon#15383\r\n\r\nWrong branch ugh!",
    "head_branch": "revert-15383-T15249-profiler-time",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15384 from phalcon/revert-15383-T15249-profiler-time\n\nRevert \"T15249 profiler time\""
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621268d18912b45d36a2edf",
    "number": 15383,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: Fixes #15249 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nIntroduced two new methods to get the nano and microseconds from the profiler item; corrected seconds calculation\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15249-profiler-time",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15383 from niden/T15249-profiler-time\n\nT15249 profiler time"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621268e18912b45d36a2ee0",
    "number": 15380,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: Fixes #15286 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nCorrected the population of arrays from superglobals\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15286-serverrequestfactory-load-parameters",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15380 from niden/T15286-serverrequestfactory-load-parameters\n\nT15286 serverrequestfactory load parameters"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621268f18912b45d36a2ee1",
    "number": 15376,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #14933 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nTrying to reproduce #14933 \r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14933-session-handler-set-get-adapter",
    "is_a_fork": true,
    "comments": [
      "Has this, or Is this going to be merged into Phalcon 4.1.x? I am having this issue as will with PHP 7.4 and Phalcon 4.1",
      "> Has this, or Is this going to be merged into Phalcon 4.1.x? I am having this issue as will with PHP 7.4 and Phalcon 4.1\r\n\r\nThis has been merged into v5, soon to become stable. v4 and v5 have some differences, mainly interface changes due to misalignments of the past (interface was different than the actual class). \r\n\r\nOnce we release v5 stable you can easily upgrade to that and also have support for PHP 8.0"
    ],
    "commit_messages": [
      "Merge pull request #15376 from niden/T14933-session-handler-set-get-adapter\n\nT14933 session handler set get adapter"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621269018912b45d36a2ee2",
    "number": 15369,
    "body": "PDO exception on $db->delete(statement,null,null) OR $db->delete(statement)\r\nto work has to pass $db->delete(statement,[],[]);\r\n\r\nchanged the delete accepted params  for placeholders and bindTypes\r\n\r\nhttps://github.com/phalcon/cphalcon/issues/15363",
    "head_branch": "fix-issue-15363",
    "is_a_fork": true,
    "comments": [
      "@tidytrax could you fix tests?",
      "Closing in favour https://github.com/phalcon/cphalcon/pull/15479"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621269118912b45d36a2ee3",
    "number": 15367,
    "body": "I`m pretty sure that has some way to do it better, but i have compile here and worked fine\r\n\r\n#15363\r\n\r\ndb->delete(statement) fail\r\ndb->delete(statemente,null) fail\r\ndb->delete(statement,null,null)fail\r\n\r\n$db->delete(statemente,[],[])\r\nworks.\r\n\r\nnow $db->delete(statement) also works\r\n$db->delete(statement,null,null)",
    "head_branch": "issue-15363",
    "is_a_fork": true,
    "comments": [
      "> @tidytrax thank you for this contribution.\r\n> \r\n> A couple of changes please. First target the 5.0.0 branch. We do not send anything to master unless we do a full release.\r\n> \r\n> Second, we need some tests for this. There are multiple adapters that this needs to be tested on.\r\n> \r\n> Thanks again\r\n\r\nHi, yes I did talk to @Jeckerson  he did say it for the branch I did target wrong, for the test i will do soon.\r\nand i will improve this code, @Jeckerson has show me the path!\r\n\r\nthanks!\r\n\r\nI will close it for now, and soon i will pull a new one!"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621269218912b45d36a2ee4",
    "number": 15366,
    "body": "I`m pretty sure that has some way to do it better, but i have compile here and worked fine\r\n\r\nhttps://github.com/phalcon/cphalcon/issues/15363\r\n\r\n`db->delete(statement) fail`\r\n`db->delete(statemente,null) fail`\r\n`db->delete(statement,null,null)fail`\r\n\r\n`$db->delete(statemente,[],[]) ` \r\nworks.\r\n\r\nnow $db->delete(statement) also works\r\n$db->delete(statement,null,null)",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621269318912b45d36a2ee5",
    "number": 15362,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "#15343-improve-stubs",
    "is_a_fork": false,
    "comments": [
      "Below psalm errorLevel 5 is blocked by https://github.com/zephir-lang/zephir/issues/2239"
    ],
    "commit_messages": [
      "Merge pull request #15362 from phalcon/#15343-improve-stubs\n\n#15343 - Improve stubs"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621269418912b45d36a2ee6",
    "number": 15360,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nremove backer\r\nThanks\r\n\r\n",
    "head_branch": "remove",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15360 from Arhell/remove\n\nremove backer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621269818912b45d36a2ee7",
    "number": 15357,
    "body": "Yay!",
    "head_branch": "5.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15357 from phalcon/5.0.x\n\n5.0.0-alpha.1 release"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621269918912b45d36a2ee8",
    "number": 15353,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/15204\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nI am basically reverting the changes on Flash\\Session::has() from this PR https://github.com/phalcon/cphalcon/pull/13994/files\r\n\r\nI don't agree with the way funtion is changed, feels like just a bug\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix-15204",
    "is_a_fork": true,
    "comments": [
      "i will check to see what is wrong, probably i broke something , changed the MR name to wip",
      "ok, so if the declarion in zephir is as followed:\r\n\r\n```\r\npublic function test(string test = null) {\r\n    var_dump(test);\r\n}\r\n\r\ntest(); // will output string \"\"\r\n```",
      "@Izopi4a Yep, just simulated in Zephir. For now we can specify `var` and check type if is string.\r\n\r\nhttps://github.com/zephir-lang/zephir/issues/2180",
      "Fixes https://github.com/phalcon/cphalcon/pull/15353#pullrequestreview-625438556\r\n\r\n@Izopi4a Thank you!"
    ],
    "commit_messages": [
      "Merge pull request #15353 from Izopi4a/fix-15204\n\nfixing Flash\\Session::has() returning always true"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621269a18912b45d36a2ee9",
    "number": 15352,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/14946\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix-14946",
    "is_a_fork": true,
    "comments": [
      "Thank you @Izopi4a "
    ],
    "commit_messages": [
      "Merge pull request #15352 from Izopi4a/fix-14946\n\nupdate ValidationInterface - add dockblock"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621269b18912b45d36a2eea",
    "number": 15351,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #15345 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nRenamed all methods that start with an underscore to the same name without it, so as to abide with PSR-12. Also removed underscored methods that were acting as proxies - keeping backwards compatibility.\r\n\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15345-underscore-methods",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15351 from niden/T15345-underscore-methods\n\nT15345 underscore methods"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621269c18912b45d36a2eeb",
    "number": 15350,
    "body": "\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/15125\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThis is adding some overhead to each request  to the Cache Storage as now we check if the key exists before we proceed unserializing the data. \r\nThe problem is because we have `$defaultValue` as a param when we request data from the StorageAdapter. \r\nThat means when we call [`getSerializedData`](https://github.com/phalcon/cphalcon/blob/5.0.x/phalcon/Storage/Adapter/AbstractAdapter.zep#L206)  and if the value of `content` is false, we don't know if someone stored false in the storage or the key is just missing in the storage. \r\nFrom what I tested, no matter which adapter you are using, they all return false when key doesn't exists\r\n```\r\n$redis->get(\"some-non-existing-key\") // will output FALSE\r\n```\r\n\r\n\r\n",
    "head_branch": "fix-15125",
    "is_a_fork": true,
    "comments": [
      "Thank you @Izopi4a "
    ],
    "commit_messages": [
      "Merge pull request #15350 from Izopi4a/fix-15125\n\nStorage adapters returning wrong data when data is emptry array Fixes #15125"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621269d18912b45d36a2eec",
    "number": 15349,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nadd backer\r\nThanks\r\n\r\n",
    "head_branch": "add",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15349 from Arhell/add\n\nadd backer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621269e18912b45d36a2eed",
    "number": 15348,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue: #15010\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix-15010",
    "is_a_fork": true,
    "comments": [
      "Thank you @Izopi4a "
    ],
    "commit_messages": [
      "Merge pull request #15348 from Izopi4a/fix-15010\n\nupdate declarions of function getEventsManager() to allow null return"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621269f18912b45d36a2eee",
    "number": 15347,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/15252\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nchanged how we compare strings in Confirmation validator\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix-15252",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/15347?src=pr&el=h1) Report\n> :exclamation: No coverage uploaded for pull request base (`5.0.x@f49e176`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).\n> The diff coverage is `n/a`.\n\n> :exclamation: Current head 084b39d differs from pull request most recent head bceebc8. Consider uploading reports for the commit bceebc8 to get more accurate results\n\n```diff\n@@           Coverage Diff            @@\n##             5.0.x   #15347   +/-   ##\n========================================\n  Coverage         ?        0           \n========================================\n  Files            ?        0           \n  Lines            ?        0           \n  Branches         ?        0           \n========================================\n  Hits             ?        0           \n  Misses           ?        0           \n  Partials         ?        0           \n```\n",
      "Thank you @Izopi4a "
    ],
    "commit_messages": [
      "Merge pull request #15347 from Izopi4a/fix-15252\n\nfix #15252 - compare 000012345 and 12345"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662126a018912b45d36a2eef",
    "number": 15342,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: Fixes #15240 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nCorrected igbinary serailzer to handle `is_numeric` and `bool` values properly\r\n\r\n",
    "head_branch": "T15240-igbinary-serialize-numbers",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15342 from niden/T15240-igbinary-serialize-numbers\n\nT15240 igbinary serialize numbers"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662126a118912b45d36a2ef0",
    "number": 15337,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nadd github backer\r\n\r\nThanks\r\n\r\n",
    "head_branch": "add",
    "is_a_fork": true,
    "comments": [
      "cc @Jeckerson"
    ],
    "commit_messages": [
      "Merge pull request #15337 from Arhell/add\n\nadd backers"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662126a218912b45d36a2ef1",
    "number": 15329,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue:\r\n\r\nSmall description of change:\r\n\r\nFix missing PSR headers during Phalcon build for Windows\r\n\r\nThanks\r\n\r\n",
    "head_branch": "bugfix/windows-ci",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/15329?src=pr&el=h1) Report\n> Merging [#15329](https://codecov.io/gh/phalcon/cphalcon/pull/15329?src=pr&el=desc) (2ebe699) into [php-8-compile-test](https://codecov.io/gh/phalcon/cphalcon/commit/5bafb490d37618a44559c60e961f90674a039099?el=desc) (5bafb49) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@             Coverage Diff             @@\n##   php-8-compile-test   #15329   +/-   ##\n===========================================\n===========================================\n\n```\n"
    ],
    "commit_messages": [
      "Merge pull request #15329 from AlexNDRmac/bugfix/windows-ci\n\nBugfix/windows ci"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662126a318912b45d36a2ef2",
    "number": 15323,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: Fixes #15322 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nChanged `setClaims` to be protected so that the `Phalcon\\Security\\JWT\\Builder` class can be properly extended.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15322-jwt-inheritance",
    "is_a_fork": false,
    "comments": [
      "@Jeckerson have a look please"
    ],
    "commit_messages": [
      "Merge pull request #15323 from phalcon/T15322-jwt-inheritance\n\nT15322 jwt inheritance"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662126a518912b45d36a2ef3",
    "number": 15320,
    "body": "Here's a patch to validate session IDs before opening the PHP session. Before this patch, sessions with invalid characters could be created and used.\r\n\r\nThis patch ensures that sessions IDs are alphanumeric. When a session ID doesn't match that criteria, it's unset and then the function `session_start()` will generate a new ID for the session.\r\n\r\n**Concerns:**\r\nThis patch could possibly break user implemented Session Adapters if they implemented the method `create_sid()` from `SessionIdInterface`. This would happen if their code were to generate an ID that is not alphanumeric.\r\n\r\n**Other Changes:**\r\nI changed the method `getName()` in `Session\\Manager` as it wouldn't get the session name unless you had previously set a session name in the manager.\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [X] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [X] I have checked that another pull request for this purpose does not exist\r\n- [X] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nThanks\r\n\r\n",
    "head_branch": "4.2.x",
    "is_a_fork": true,
    "comments": [
      "Thank you @davidofferman "
    ],
    "commit_messages": [
      "Merge pull request #15320 from davidofferman/4.2.x\n\nUpdate Session/Manager to validate session IDs before starting session"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662126a618912b45d36a2ef4",
    "number": 15313,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nupdate backers\r\nThanks\r\n\r\n",
    "head_branch": "add",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15313 from Arhell/add\n\nupdate backers"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662126a718912b45d36a2ef5",
    "number": 15309,
    "body": "Hello!\r\n\r\n* Type: documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nTom from Codecov here. I thought I would go ahead and add the Codecov badge here in case it's useful!\r\n\r\nI wasn't quite sure which branch to merge into, happy to change if `master` doesn't make sense.",
    "head_branch": "codecov-badge",
    "is_a_fork": true,
    "comments": [
      "@niden done!",
      "@thomasrockhu Thank you!"
    ],
    "commit_messages": [
      "Merge pull request #15309 from thomasrockhu/codecov-badge\n\nAdd Codecov badge to README"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662126a818912b45d36a2ef6",
    "number": 15294,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nadd backer\r\nThanks\r\n\r\n",
    "head_branch": "upd",
    "is_a_fork": true,
    "comments": [
      "cc @ruudboon \r\ncc @niden "
    ],
    "commit_messages": [
      "Merge pull request #15294 from Arhell/upd\n\nadd github backer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662126a918912b45d36a2ef7",
    "number": 15293,
    "body": "Hello!\r\n\r\n[NFR] add setIconCssClasses() method for flash messages\r\n\r\n```php\r\n$flash->setIconCssClasses([\r\n        'error'   => 'fas fa-exclamation-triangle',\r\n        'success' => 'fas fa-check-circle',\r\n        'notice'  => 'fas fa-info-circle',\r\n        'warning' => 'fas fa-exclamation-triangle'\r\n]);\r\n\r\n```\r\n\r\nFull example\r\n\r\n```php\r\n\r\n<?php\r\n\r\nuse Phalcon\\Escaper;\r\nuse Phalcon\\Flash\\Direct;\r\n\r\n\r\n$escaper = new Escaper();\r\n$flash   = new Direct($escaper);\r\n\r\n$customTemplate = '<div class=\"%cssClass%\">\r\n                       <i class=\"%iconCssClass%\"></i>\r\n                       %message%\r\n                       <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n                   </div>';\r\n\r\n\r\n\r\n$flash->setCustomTemplate($customTemplate);\r\n$flash->setCssClasses([\r\n        'error'   => 'alert alert-danger alert-dismissible',\r\n        'success' => 'alert alert-success alert-dismissible',\r\n        'notice'  => 'alert alert-info alert-dismissible',\r\n        'warning' => 'alert alert-warning alert-dismissible'\r\n]);\r\n$flash->setIconCssClasses([\r\n        'error'   => 'fas fa-exclamation-triangle',\r\n        'success' => 'fas fa-check-circle',\r\n        'notice'  => 'fas fa-info-circle',\r\n        'warning' => 'fas fa-exclamation-triangle'\r\n]);\r\n\r\n\r\n$flash->error('Something went wrong');\r\n\r\n```\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15292-NFR-add-setIconCssClasses-method-for-Flash-Messages",
    "is_a_fork": true,
    "comments": [
      "Closing in favor of https://github.com/phalcon/cphalcon/pull/15618"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662126b118912b45d36a2ef8",
    "number": 15287,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "php-8-compile-test",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15287 from phalcon/php-8-compile-test\n\nPHP 8 compile test"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662126b218912b45d36a2ef9",
    "number": 15271,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #15270 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nAdded exception when no authData is present and gcm/ccm modes are selected\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15270-crypt-exception-with-gcm",
    "is_a_fork": false,
    "comments": [
      "Wouldn't it be better to manage the auth data internally? The sixth param of openssl_encrypt is passed by reference and set by PHP so requiring the user to pass it in and manage that themselves doesn't really makes sense to me. If the tag was included in the returned encryption string and had a known length it could then be parsed when decrypting. Then the entire tag system could be done behind the scenes and the code would work as documented.",
      "> If the tag was included in the returned encryption string and had a known length it could then be parsed when decrypting. Then the entire tag system could be done behind the scenes and the code would work as documented.\r\n\r\nHow would you do that? Return an array? I am not versed in cryptography and I have very little knowledge of the openssl method (other than reading the manual)",
      "https://github.com/phalcon/phalcon/blob/v5.0.x/src/Crypt/Crypt.php#L226\r\n\r\nThis is the same method but only in PHP (Phalcon v5). If you have any suggestions on the implementation of what you are discussing let me know.",
      "For a gcm only implementation you could do something like this:\r\n```php\r\npublic function encrypt($value)\r\n{\r\n    // these three set in settings or on the object\r\n    $key = 'some random string of bits';\r\n    $cipher = 'aes-256-gcm';\r\n    $tagLength = 16;\r\n\r\n    $ivLength = openssl_cipher_iv_length($cipher);\r\n    $iv = openssl_random_pseudo_bytes($ivLength);\r\n\r\n    $cipherText = openssl_encrypt(\r\n        $value,\r\n        $cipher,\r\n        $key,\r\n        0,\r\n        $iv,\r\n        $tag,\r\n        '',\r\n        $tagLength\r\n    );\r\n\r\n    return base64_encode($iv.$cipherText.$tag);\r\n}\r\n\r\npublic function decrypt($value)\r\n{\r\n    // these three set in settings or on the object\r\n    $key = 'some random string of bits';\r\n    $cipher = 'aes-256-gcm';\r\n    $tagLength = 16;\r\n\r\n    $ivLength = openssl_cipher_iv_length($cipher);\r\n\r\n    $encrypted = base64_decode($value);\r\n\r\n    $iv = substr($encrypted, 0, $ivLength);\r\n    $cipherText = substr($encrypted, $ivLength, -$tagLength);\r\n    $tag = substr($encrypted, -$tagLength);\r\n\r\n    return openssl_decrypt($cipherText, $cipher, $key, 0, $iv, $tag);\r\n}\r\n```",
      "Thank you for these snippets.\r\n\r\nFor the `encrypt` in your example, it seems that `$tag` is not defined. Is it supplied? Also the second to last parameter is empty. Shouldn't that be `authData`?",
      "Yes, `$tag` is passed by reference and is set by PHP internally, like the `$matches` parameter in the [preg_match](https://www.php.net/manual/en/function.preg-match.php) function. \r\n\r\nThe second to last parameter is for AAD (additional authentication data). This is optional and can be any string. If it is passed it needs to be the same for both encryption and decryption. In the examples I gave, the AAD would need to be passed by the user.",
      "Closing in favor of https://github.com/phalcon/cphalcon/issues/15717"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662126b318912b45d36a2efa",
    "number": 15258,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "4.1.x",
    "is_a_fork": true,
    "comments": [
      "How to solve this problem？\r\n` [PDOException] SQLSTATE[08006] [7] FATAL:  sorry, too many clients already `\r\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662126b518912b45d36a2efb",
    "number": 15242,
    "body": "\r\n\r\n\r\n",
    "head_branch": "defender-php8.0",
    "is_a_fork": true,
    "comments": [
      "Hello! You are trying to edit generated C code from Zephir code.\r\n\r\nThere is open CR for PHP8 in Zephir - https://github.com/phalcon/zephir/pull/2113"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662126b618912b45d36a2efc",
    "number": 15235,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #15214 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nCorrected `log` method to recognize all log levels\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15214-logger-log-psr",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15235 from phalcon/T15214-logger-log-psr\n\nT15214 logger log psr"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662126b718912b45d36a2efd",
    "number": 15234,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix-ci",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15234 from phalcon/fix-ci\n\nUpdate Zephir Parser version to the latest"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662126b818912b45d36a2efe",
    "number": 15231,
    "body": "Hello!\r\n\r\nSmall description of change:\r\nremove backer\r\nThanks\r\n\r\n",
    "head_branch": "remove-backer",
    "is_a_fork": true,
    "comments": [
      "cc @Jeckerson"
    ],
    "commit_messages": [
      "Merge pull request #15231 from Arhell/remove-backer\n\nremove github backer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662126b918912b45d36a2eff",
    "number": 15227,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nfix backer\r\nThanks\r\n\r\n",
    "head_branch": "fix-backer",
    "is_a_fork": true,
    "comments": [
      "cc @Jeckerson"
    ],
    "commit_messages": [
      "Merge pull request #15227 from Arhell/fix-backer\n\nfix github backer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662126ba18912b45d36a2f00",
    "number": 15225,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nremove backer\r\nThanks\r\n\r\n",
    "head_branch": "remove-backer",
    "is_a_fork": true,
    "comments": [
      "cc @Jeckerson"
    ],
    "commit_messages": [
      "Merge pull request #15225 from Arhell/remove-backer\n\nremove github backer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662126bb18912b45d36a2f01",
    "number": 15224,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue: #15194\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "#15194-composer-provide",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15224 from phalcon/#15194-composer-provide\n\n#15194 - Remove provide section in composer.json"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662126bc18912b45d36a2f02",
    "number": 15221,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nadd backer\r\nThanks\r\n\r\n",
    "head_branch": "add-backer",
    "is_a_fork": true,
    "comments": [
      "cc @Jeckerson"
    ],
    "commit_messages": [
      "Merge pull request #15221 from Arhell/add-backer\n\nAdd backer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662126bd18912b45d36a2f03",
    "number": 15220,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "4.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15220 from Jeckerson/4.1.x\n\nChange signature of findFirst() method"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662126be18912b45d36a2f04",
    "number": 15219,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nremove backer\r\nThanks\r\n\r\n",
    "head_branch": "remove-backer",
    "is_a_fork": true,
    "comments": [
      "cc @niden ",
      "cc @ruudboon"
    ],
    "commit_messages": [
      "Merge pull request #15219 from Arhell/remove-backer\n\nremove github backer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662126bf18912b45d36a2f05",
    "number": 15217,
    "body": "Hello!\r\n\r\n* Type: bug fix | code quality\r\n* Link to issue: #15216 \r\n\r\nSmall description of change:\r\n- Fixed `set-env` deprecated command for GitHub actions\r\n\r\nThanks\r\n\r\n",
    "head_branch": "buffix/github-actions-set-env",
    "is_a_fork": true,
    "comments": [
      "@ruudboon - fix for failed CI.",
      "Thanks!",
      "Ahh Perfect. Already did some work on my own repo but great that you picked this up. I'll merge it. ",
      "Haha @Jeckerson was faster."
    ],
    "commit_messages": [
      "Merge pull request #15217 from AlexNDRmac/buffix/github-actions-set-env\n\nBugfix | GitHub actions set env"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662126c018912b45d36a2f06",
    "number": 15215,
    "body": "Hello!\r\n\r\n* Type: bug | code quality | documentation\r\n* Link to issue: #14946\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] ~~I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change~~ _The documentation [already](https://github.com/phalcon/docs/blob/4.0/en/validation.md#methods) presents it as a mixed type_\r\n\r\nSmall description of change:\r\n\r\nThe first argument of `add` in the `ValidationInterface` can also be an array, not just a string.\r\n\r\nhttps://github.com/phalcon/cphalcon/blob/3241d96e4bb01dc7746b74c9ce586250b8887c46/phalcon/Validation.zep#L67-L89\r\n\r\nThanks,\r\nRobin van der Vliet",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Please update your branch with `4.1.x` with CI fixes.",
      "Related #14946",
      "Will be fixed in `v5`. Closing."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662126c118912b45d36a2f07",
    "number": 15211,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nadd backer\r\nThanks\r\n\r\n",
    "head_branch": "add-backer",
    "is_a_fork": true,
    "comments": [
      "cc @niden ",
      "Thank you!"
    ],
    "commit_messages": [
      "Merge pull request #15211 from Arhell/add-backer\n\nadd github backer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662126c218912b45d36a2f08",
    "number": 15207,
    "body": "To not allow 8.0.0 (and all beta/RC), as \"max\" is allowed\r\n\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [
      "Thank you @remicollet "
    ],
    "commit_messages": [
      "Merge pull request #15207 from remicollet/patch-2\n\nFix max allowed version"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662126c318912b45d36a2f09",
    "number": 15205,
    "body": "Fix function name for get sql statement\r\n\r\n* Type: documentation\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Thank you @chipco "
    ],
    "commit_messages": [
      "Merge pull request #15205 from chipco/patch-1\n\nUpdate CHANGELOG-4.1.md"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662126c418912b45d36a2f0a",
    "number": 15203,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/15148\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change: \r\n\r\nModels: with a relation `belongsTo()` - `hasMany()`, the related records need to be saved in `preSaveRelatedRecords()`. This fix update the dirtyState of related records to trigger related records save.",
    "head_branch": "fix-related-belongs-record",
    "is_a_fork": true,
    "comments": [
      "Note that this fix may not be perfect because when you access a linked record it seems to be saved anyway.\r\n\r\nAccording to my tests:\r\n\r\n```php\r\n$invoice = Invoices::findFirst();\r\n$invoice->customer->name = \"name\";\r\n$invoice->save(); // customer is saved 👍 \r\n\r\n$invoice = Invoices::findFirst();\r\n$invoice->save(); // customer is not saved 👍 \r\n\r\n$invoice = Invoices::findFirst();\r\necho $invoice->customer->name;\r\n$invoice->save(); // customer is saved 👎 \r\n```\r\n\r\nMaybe there is something to do in `__set()` or somewhere else?",
      "> ```php\r\n> $invoice = Invoices::findFirst();\r\n> echo $invoice->customer->name;\r\n> $invoice->save(); // customer is saved 👎 \r\n> ```\r\n> \r\n> Maybe there is something to do in `__set()` or somewhere else?\r\n\r\nWe don't have knowledge about the state of the properties in (related) models.\r\nIf the a relatation has been accessed in any way, we will have to save that record, because it could have been modified since the query.\r\nTo eliminate this, we would have to enforce using snapshots (which is not a possibility) and compare them to their current state before each action.\r\n\r\n`dirtyState` does not reflect on property changes, it only indicates if the record is saved to the database.\r\n",
      "> > $invoice = Invoices::findFirst();\r\n> > $invoice->save(); // customer is not saved 👍\r\n> \r\n> What do you expect to be saved for `customer` in this case?\r\n\r\n`customer` is not saved because it hasn't been accessed, which sounds pretty good.",
      "> (...)\r\n> We don't have knowledge about the state of the properties in (related) models.\r\n> If the a relatation has been accessed in any way, we will have to save that record, because it could have been modified since the query.\r\n> To eliminate this, we would have to enforce using snapshots (which is not a possibility) and compare them to their current state before each action.\r\n> \r\n> `dirtyState` does not reflect on property changes, it only indicates if the record is saved to the database.\r\n\r\nThank you for this clarification. Indeed, I did not know how to deal with `dirtyState` for this resolution.",
      "@gponcon Thank you so much for the bug fix. Could you please change your target branch to be `5.0.x`? We never send PRs to master unless it is a release\r\n\r\nIt is looking good",
      "@niden I modified the target branch as requested. Let me know if it is correct, I am at your disposal.",
      "@gponcon Can you please rebase to the latest 5.0.x branch and add an entry to the changelog? Then we can merge this\r\n",
      "Closing in favor of https://github.com/phalcon/cphalcon/pull/15838. Original work preserved"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662126c618912b45d36a2f0b",
    "number": 15202,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nsycn https://github.com/phalcon/cphalcon/pull/15200\r\nThanks\r\n\r\n",
    "head_branch": "sync-backer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "sync backers"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662126c718912b45d36a2f0c",
    "number": 15200,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nadd github backer\r\nThanks\r\n\r\n",
    "head_branch": "add-backer",
    "is_a_fork": true,
    "comments": [
      "Merged https://github.com/phalcon/cphalcon/pull/15202 into `4.1.x`\r\nClosing this"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662126c818912b45d36a2f0d",
    "number": 15198,
    "body": "",
    "head_branch": "4.1.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15198 from phalcon/4.1.x\n\nci: fix windows builds"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662126d018912b45d36a2f0e",
    "number": 15196,
    "body": "4.1.0 Release",
    "head_branch": "4.1.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15196 from phalcon/4.1.x\n\n4.1.0"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662126d118912b45d36a2f0f",
    "number": 15195,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: closes #15148 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nFixed `Phalcon\\Mvc\\Model` to save the modified properties of previously queried single related records.\r\nAdded new method `Model::collectRelatedToSave()`\r\n\r\nThanks,\r\nzsilbi\r\n\r\n",
    "head_branch": "T15148-related-dirtystate",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "ci: turn off dotreporter for mysql tests"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662126d218912b45d36a2f10",
    "number": 15193,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n\r\nSmall description of change:\r\n\r\nReverted composer to use the latest Codeception 4.x.\r\nFixed JWT tests to be compatible with Codeception 4.1.9\r\n\r\nThanks,\r\nzsilbi\r\n\r\n",
    "head_branch": "codeception-jwt-test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix: JWT test fixed"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662126d318912b45d36a2f11",
    "number": 15192,
    "body": "Hello!\r\n\r\n* Type: code quality and bug fix\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n\r\nSmall description of change:\r\n\r\n> Deprecation Notice: Class `ClassName` located in `class.php` does not comply with psr-4 autoloading standard. It will not autoload anymore in Composer v2.0.\r\n\r\nTravis error log: https://api.travis-ci.org/v3/job/739690369/log.txt\r\n\r\nMoved a lot of classes to their correct directories.\r\nFixed cli tests.\r\nRemoved unused traits.\r\nAdded `@todo` to the renamed `Refactor-` classes and/or moved to `..\\Refactor` namespace.\r\n\r\nThanks,\r\nzsilbi\r\n",
    "head_branch": "ci-travis-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix: zephir optimizers"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662126d418912b45d36a2f12",
    "number": 15191,
    "body": "Hello!\r\n\r\n* Type: ci fix\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n\r\nSmall description of change:\r\nUpdated Xcode version\r\n\r\nThanks,\r\nzsilbi\r\n\r\n",
    "head_branch": "ci-fixes-macos-php74",
    "is_a_fork": true,
    "comments": [
      "Thank you @shivammathur"
    ],
    "commit_messages": [
      "fix(codeception): use 4.1.8"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662126d518912b45d36a2f13",
    "number": 15187,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14968\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "#14968-pgsql-small-int",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15187 from phalcon/#14968-pgsql-small-int\n\n#14968 - Add support of smallint in Postgresql"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662126d618912b45d36a2f14",
    "number": 15185,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #15184 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nFixed `Phalcon\\Session\\Adapter\\Redis` and `Phalcon\\Session\\Adapter\\Libmemcached` to utilize the prefix option\r\n\r\nThanks,\r\nzsilbi\r\n\r\n",
    "head_branch": "T15184-session-adapter-prefix",
    "is_a_fork": true,
    "comments": [
      "@shivammathur Wondering if you have any ideas on why this one started failing all of a sudden. It seems to have something to do with PHP 7.4.10 and above\r\n\r\nhttps://github.com/phalcon/cphalcon/runs/1297417458\r\n\r\nAny thoughts more than appreciated.",
      "@niden \r\n\r\n`PHP 7.4.11` was built using `Xcode 12`, so switch Xcode version before building.\r\nI'm not sure why it fails with `Xcode 11.7`, but switching to `Xcode 12` should fix the error.\r\n```diff\r\n       - name: Install Package\r\n         run: |\r\n+          sudo xcode-select -s /Applications/Xcode_12.app\r\n+          xcodebuild -version\r\n           export MAKEFLAGS=\"-j$(getconf _NPROCESSORS_ONLN)\"\r\n           sudo pecl -v install phalcon-pecl/phalcon-pecl.tgz\r\n```\r\n\r\nOther fixes required in the workflow.\r\n\r\n- For `Windows`, replace `msgpack-beta` with `msgpack` in extensions as it is stable now.\r\n- `set-env` is deprecated, you can replace it with appending to environment files.\r\n   https://github.com/actions/toolkit/blob/main/docs/commands.md#environment-files",
      "@shivammathur Thank you so much. You are a superstar!"
    ],
    "commit_messages": [
      "docs: changelog"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662126d718912b45d36a2f15",
    "number": 15183,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14904-revert",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "#14904 - Skip tests"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662126d818912b45d36a2f16",
    "number": 15182,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #15180\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nAdded `Phalcon\\Db\\Adapter\\AdapterInterface::getDefaultValue()` and `supportsDefaultValue()` methods to properly support the `DEFAULT` keyword\r\nAdded `Phalcon\\Db\\Adapter\\AbstractAdapter::supportsDefaultValue()` method to properly support the `DEFAULT` keyword\r\nFixed `Phalcon\\Mvc\\Model` to skip columns with default values when the `DEFAULT` keyword is not supported by the database adapter (SQLite)\r\n\r\nThanks,\r\nzsilbi",
    "head_branch": "T15180-sqlite-adapter-default-notnull",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "docs: changelog"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662126da18912b45d36a2f17",
    "number": 15179,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue: #14924\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n\r\nSmall description of change:\r\n\r\nAdded test for issue: #14924\r\n\r\nThanks,\r\nzsilbi\r\n\r\n",
    "head_branch": "T14924-updating-row-default-values",
    "is_a_fork": true,
    "comments": [
      "Related: https://github.com/phalcon/cphalcon/issues/15180",
      "Merged in: #15182"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662126db18912b45d36a2f18",
    "number": 15178,
    "body": "Hello!\r\n\r\n* Type: bugfix\r\n* Link to issue: #14926\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n - [x] I have updated the relevant CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nAdded test for issue #14926\r\nFixed `Phalcon\\Mvc\\Router` to handle numeric routes properly\r\n\r\nThanks,\r\nzsilbi\r\n\r\n",
    "head_branch": "T14926-router-notfound-numeric",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "docs: changelog"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662126dc18912b45d36a2f19",
    "number": 15177,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue: #15065 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n\r\nSmall description of change:\r\n\r\nAdded test for issue: #15065\r\n\r\nThanks,\r\nzsilbi\r\n",
    "head_branch": "T15065-resultset-second-iteration",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "test(model): fixed pgsql problem"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662126dd18912b45d36a2f1a",
    "number": 15176,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue: #15117\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n\r\nSmall description of change:\r\n\r\nAdded test to confirm that this issue has already been fixed.\r\n\r\nThanks,\r\nzsilbi\r\n\r\n",
    "head_branch": "T15117-controller-init-skip",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "test(application): added test for issue\n\nRefs #15117"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662126de18912b45d36a2f1b",
    "number": 15175,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue: #13482\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n\r\nSmall description of change:\r\n\r\nAdded test for issue #13482\r\n\r\nThanks,\r\nzsilbi",
    "head_branch": "T13482-dispatch-beforeexception-wipe",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "test(application): added test for issue\n\nRefs #13482"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662126df18912b45d36a2f1c",
    "number": 15174,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue: #14114\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nAdded test to verfiy that this issue has already been fixed.\r\n\r\nThanks,\r\nzsilbi\r\n\r\n",
    "head_branch": "T14114-model-foreignkey-restrict-transaction",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "test(model): added delete test for issue\n\nRefs #14114"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662126e018912b45d36a2f1d",
    "number": 15173,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue: #13938\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n\r\nSmall description of change:\r\n\r\nAdded tests for issue #13938\r\n\r\nThanks,\r\nzsilbi\r\n",
    "head_branch": "T13938-lowercase-alias",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "test(model): modified test"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662126e118912b45d36a2f1e",
    "number": 15172,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nSimilar to this: https://github.com/phalcon/cphalcon/pull/15126\r\nThe model now checks the params in the relation when deleting related records.\r\n\r\nThanks,\r\nzsilbi\r\n\r\n",
    "head_branch": "model-foreignkey-restrict",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "test(model): test for error message"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662126e218912b45d36a2f1f",
    "number": 15171,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14810\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nSeems like this issue still occurs using Zephir 0.12.19\r\nAdded test to verify it.\r\n\r\nThanks,\r\nzsilbi\r\n\r\n",
    "head_branch": "T14810-model-cloneresult-setters",
    "is_a_fork": true,
    "comments": [
      "Will be fixed in v5.0"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662126e318912b45d36a2f20",
    "number": 15167,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nremove backer\r\nThanks\r\n\r\n",
    "head_branch": "remove-backer",
    "is_a_fork": true,
    "comments": [
      "cc @ruudboon "
    ],
    "commit_messages": [
      "Merge pull request #15167 from Arhell/remove-backer\n\nremove github backer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662126e418912b45d36a2f21",
    "number": 15165,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: closes #14822\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nRefactored some older tests to confirm the issue.\r\nFixed `Phalcon\\Mvc\\Model::__set()` to clear `dirtyRelated` when empty array is set.\r\n\r\nThanks,\r\nzsilbi\r\n\r\n",
    "head_branch": "T14822-model-add-remove-related",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "test: limit connections"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662126e518912b45d36a2f22",
    "number": 15164,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: closes #15113 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nUse transaction for aggregated queries (like `Model::sum()`)\r\n\r\nThanks,\r\nzsilbi\r\n",
    "head_branch": "T15113-aggregated-query-transaction",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "test(model): test fix"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662126e618912b45d36a2f23",
    "number": 15163,
    "body": "Hello!\r\n\r\n* Type: bug fix | code quality\r\n* Link to issue: phalcon/phalcon#270\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nI've changed the order of notification events. In that way, I fixed the problem between beforeDelete event and SoftDelete.\r\nI also wrote tests for SoftDelete and Timestampable.\r\n\r\nThanks for the review!\r\n \r\n",
    "head_branch": "T14904_model_before_soft_delete",
    "is_a_fork": true,
    "comments": [
      "@jenovateurs, could you please exclude the  `ext` directory?",
      "@zsilbi Have you a tip to always exclude the ext directory? \r\nAnd do you know the command to exclude the ext directory of this PR?\r\nMaybe a git checkout ext upstream/v4.1.x?",
      "Also please rebase with `4.1.x` branch.",
      "Now I think it's a clean branch ;-). "
    ],
    "commit_messages": [
      "Merge pull request #15163 from les-enovateurs/T14904_model_before_soft_delete\n\nT14904 - Fix Model events order and handle beforeDelete with SoftDelete"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662126e718912b45d36a2f24",
    "number": 15162,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: closes #15102 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nThe `u` flag was removed by accident in https://github.com/phalcon/cphalcon/commit/bded353362da5494644dd140c83a99f63c50802d\r\n\r\nThanks,\r\nzsilbi\r\n\r\n",
    "head_branch": "T15502-router-unicode-support",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15162 from zsilbi/T15502-router-unicode-support\n\nT15102 - Router unicode support"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662126e818912b45d36a2f25",
    "number": 15161,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: closes #14617\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nThe problem was not entirely fixed in #14619\r\nDescribed here: https://github.com/phalcon/cphalcon/issues/14617#issuecomment-690783687\r\n\r\nThanks,\r\nzsilbi\r\n\r\n",
    "head_branch": "T14617-array-flip-model-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15161 from zsilbi/T14617-array-flip-model-2\n\nT14617 - Reverse column map check"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662126e918912b45d36a2f26",
    "number": 15160,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: closes #15118 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I have updated the relevant CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nFixed performance issues.\r\n\r\nThanks,\r\nzsilbi",
    "head_branch": "T15118-crypt-performance",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15160 from zsilbi/T15118-crypt-performance\n\nT15118 - Crypt perfomance issues"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662126eb18912b45d36a2f27",
    "number": 15159,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: closes #15118 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I have updated the relevant CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nFixed performance issues.\r\n\r\nThanks,\r\nzsilbi\r\n\r\n",
    "head_branch": "T15118-crypt-performance",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662126ec18912b45d36a2f28",
    "number": 15158,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [x] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change: https://github.com/phalcon/docs/pull/2787\r\n\r\nSmall description of change:\r\n\r\nModified `Phalcon\\Mvc\\Model\\Relation` to accept callable params for model relations.\r\n\r\nExample use case:\r\n\r\n```php\r\n/**\r\n * @var DiInterface $container\r\n */\r\n$container = $this->getDI();\r\n\r\n$this->hasMany(\r\n    'id', Documents::class, 'customerId', [\r\n        'params' => function() use ($container) {\r\n            /**\r\n             * @var Languages $language\r\n             */\r\n            $language = $container->getShared('language');\r\n\r\n            return [\r\n                'languageId = :languageId:',\r\n                'bind' => [\r\n                    'languageId' => $language->id\r\n                ]\r\n            ];\r\n        }\r\n    ]\r\n);\r\n```\r\n\r\nWhen `language` is changed in the dependency container, the relations will automatically use the new parameter.\r\n\r\nThanks,\r\nzsilbi\r\n\r\n",
    "head_branch": "relation-params",
    "is_a_fork": true,
    "comments": [
      "But isn't it the same, when just pass an array directly inside 'params'?\r\n\r\n```\r\n/**\r\n * @var DiInterface $container\r\n */\r\n$container = $this->getDI();\r\n\r\n/**\r\n  * @var Languages $language\r\n  */\r\n$language = $container->getShared('language');\r\n\r\n$this->hasMany(\r\n    'id', Documents::class, 'customerId', [\r\n        'params' => [\r\n                'languageId = :languageId:',\r\n                'bind' => [\r\n                    'languageId' => $language->id\r\n                ]\r\n            ]\r\n    ]\r\n);\r\n```",
      "@Jeckerson \n\nThe models are only initialized once and I need a way to keep these parameters up to date.\n\nThat function is evaluated every time before the relations are accessed, so if the language changes between queries in the container, the languageId in the params will be updated."
    ],
    "commit_messages": [
      "Merge pull request #15158 from zsilbi/relation-params\n\nFeature: callable relation params"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662126ed18912b45d36a2f29",
    "number": 15155,
    "body": "Hello!\r\n\r\n* Type: bug fix and documentation\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nNanobox boxfiles were outdated: \r\n - `intl` and `sqlite3` extension were missing\r\n - Packages for the `igbinary` extension were not available for PHP 7.3+, had to have them compiled manually.\r\n \r\nRunning msgpack integration tests (for example `php vendor/bin/codecept run tests/integration/Storage/Serializer/Msgpack/SerializeCest.php`) were outputting special characters to the console and froze it inside nanobox, so I had to remove the `@dataProvider` to fix this.\r\n\r\nUpdated README.md with some fixes and clarifications.\r\n\r\nAlso created a PR in https://github.com/phalcon/docs/pull/2783 for the 4.0 branch as it still applies to the current stuff.\r\n\r\nThanks,\r\nzsilbi\r\n",
    "head_branch": "nanobox-fixes",
    "is_a_fork": true,
    "comments": [
      "I ran all the tests and found out that the `gd` extension configuration has changed for PHP 7.4:\r\n\r\n> To enable support for jpeg add --with-jpeg-dir=DIR. Jpeg 6b, 7 or 8 are supported. As of PHP 7.4.0, use --with-jpeg instead.\r\n\r\nSource: https://www.php.net/manual/en/image.installation.php\r\n\r\nNanobox don't officially support PHP 7.2+ yet, so my workaround would be to skip tests that rely on `gd` JPEG Support for now.\r\n\r\n\r\n\r\n\r\n",
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/15155?src=pr&el=h1) Report\n> :exclamation: No coverage uploaded for pull request head (`nanobox-fixes@387950c`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-head-commit).\n> The diff coverage is `n/a`.\n"
    ],
    "commit_messages": [
      "Merge pull request #15155 from zsilbi/nanobox-fixes\n\nTesting environment fixes + PHP 7.4 for nanobox"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662126ee18912b45d36a2f2a",
    "number": 15153,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue: #15077\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nThanks\r\n\r\n",
    "head_branch": "#15077-update-changelog",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15153 from phalcon/#15077-update-changelog\n\n#15077 - Update missed fix in CHANGELOG-4.1.md"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662126ef18912b45d36a2f2b",
    "number": 15152,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #15142 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "#15142-fix-cookies-options",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15152 from phalcon/#15142-fix-cookies-options\n\n#15142 - Fix cookies options"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662126f018912b45d36a2f2c",
    "number": 15150,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: fixes #15129 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nFixed `Phalcon\\Http\\Response\\Cookies::set()` to utilize the options parameter correctly.\r\nThank you @michalzielanski, for your suggestions https://github.com/phalcon/cphalcon/issues/15129#issuecomment-686486393.\r\n\r\nThanks,\r\nzsilbi",
    "head_branch": "T15129-cookie-options",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15150 from zsilbi/T15129-cookie-options\n\nT15129 - Cookies::set() options parameter fixed"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662126f118912b45d36a2f2d",
    "number": 15149,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nadd github backer\r\nThanks\r\n\r\n",
    "head_branch": "add-backer",
    "is_a_fork": true,
    "comments": [
      "cc @ruudboon "
    ],
    "commit_messages": [
      "Merge pull request #15149 from Arhell/add-backer\n\nadd backer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662126f218912b45d36a2f2e",
    "number": 15147,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #15123\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I have updated the relevant CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nRemoved unused property `Phalcon\\Mvc\\Router::uriSource`.\r\n\r\nThanks,\r\nzsilbi\r\n\r\n",
    "head_branch": "T15123-router-urisource",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15147 from zsilbi/T15123-router-urisource\n\nT15123 Remove Mvc\\Router::uriSource"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662126f318912b45d36a2f2f",
    "number": 15146,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #15144\r\n \r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I have updated the relevant CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nFixed `Phalcon\\Mvc\\Model\\CriteriaInterface::where()` parameters.`\r\n\r\nThanks,\r\nzsilbi",
    "head_branch": "T15144-model-criteriainterface",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15146 from zsilbi/T15144-model-criteriainterface\n\nT15144 CriteriaInterface params fixed"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662126f418912b45d36a2f30",
    "number": 15143,
    "body": "Hello!\r\n\r\n* Type: code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] ~~I wrote some tests for this PR~~ (Not applicable)\r\n- [ ] ~~I have updated the relevant CHANGELOG~~ (Not applicable)\r\n- [ ] ~~I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change~~ (Not applicable)\r\n\r\nSmall description of change: \r\n\r\nFIx some irrevelent docblock comments.",
    "head_branch": "fix-docblock",
    "is_a_fork": true,
    "comments": [
      "Please change destination branch to `4.1.x`",
      "I rebase the PR"
    ],
    "commit_messages": [
      "Merge pull request #15143 from jdecool/fix-docblock\n\nFix docblock comments. Thank you @jdecool"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662126f518912b45d36a2f31",
    "number": 15140,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nadd github backer\r\n\r\nThanks\r\n\r\n",
    "head_branch": "add-backer",
    "is_a_fork": true,
    "comments": [
      "cc @ruudboon "
    ],
    "commit_messages": [
      "Merge pull request #15140 from Arhell/add-backer\n\nadd backer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662126f618912b45d36a2f32",
    "number": 15136,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nadd github backers\r\n\r\nThanks\r\n\r\n",
    "head_branch": "add-backer",
    "is_a_fork": true,
    "comments": [
      "cc @ruudboon "
    ],
    "commit_messages": [
      "Merge pull request #15136 from Arhell/add-backer\n\nadd backer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662126f818912b45d36a2f33",
    "number": 15134,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/14281\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nReplace deprecated settimeout function with expire\r\nThanks\r\n\r\n",
    "head_branch": "3.4.x",
    "is_a_fork": true,
    "comments": [
      "Branch `3.4.x` is deprecated and not supported. Please change destination branch to `4.1`",
      "@DestinyHunter thank you for the pull. Changing the C files won't work. We need to change the source zephir files for this.\r\nWe're not going to release a new 3.4.x but I wouldn't mind merging this for people who build from the branch. \r\nLet me know if you will change your pull otherwise I would like to close it."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662126f918912b45d36a2f34",
    "number": 15131,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nadd github backer\r\n\r\nThanks\r\n\r\n",
    "head_branch": "add-backer",
    "is_a_fork": true,
    "comments": [
      "cc @ruudboon "
    ],
    "commit_messages": [
      "Merge pull request #15131 from Arhell/add-backer\n\nadd backer. thank you @Arhell"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662126fa18912b45d36a2f35",
    "number": 15130,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nWhen no container is set in the Injectable class, it always call the function Di::getDefault(). When you call the __get() a lot, this is just a repeated call. So my proposal is to set the container property to the default DI when not DI is set. \r\n\r\nIt's a little bit extra performance.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Thnx for the pull.\r\nWe're not accepting pulls on the master. Our current working branch is 4.1.x\r\nLooks like we're not changing behaviour and not breaking BC. I think we can merge this if you rebase. @niden Can you double check this pull to confirm I didn't miss anything?\r\n",
      "> \r\n> \r\n> Thnx for the pull.\r\n> We're not accepting pulls on the master. Our current working branch is 4.1.x\r\n> Looks like we're not changing behaviour and not breaking BC. I think we can merge this if you rebase. @niden Can you double check this pull to confirm I didn't miss anything?\r\n\r\nHow can I rebase this from master to 4.1.x?",
      "@stijn1989 \r\n> How can I rebase this from master to 4.1.x?\r\n\r\nIf your remote is called `upstream` you can:\r\n\r\n```cmd\r\ngit fetch upstream\r\ngit rebase upstream/4.1.x\r\n",
      "Closing in favour https://github.com/phalcon/cphalcon/pull/15629",
      "Resolved in https://github.com/phalcon/cphalcon/pull/15629\r\n\r\nThank you @stijn1989 "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662126fb18912b45d36a2f36",
    "number": 15126,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/15098\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nModified `Mvc\\Model::_checkForeignKeysReverseCascade()` to use `Models\\Manager::getRelationRecords()` when deleting related records.\r\nAdded tests for: `Mvc\\Model::getRelated()` and `Mvc\\Model::delete()` to ensure the `params` option is used properly when accessing and deleting related models.\r\n\r\nThanks,\r\nzsilbi\r\n\r\n",
    "head_branch": "T15098-related-cascade-delete-4.1.x",
    "is_a_fork": true,
    "comments": [
      "I have a fix for this (#15098) for the 4.0.x branch as well, you can find it here: https://github.com/zsilbi/cphalcon/tree/T15098-related-cascade-delete"
    ],
    "commit_messages": [
      "Merge pull request #15126 from zsilbi/T15098-related-cascade-delete-4.1.x\n\nT15098 Mvc\\Model delete cascade relations with params"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662126fc18912b45d36a2f37",
    "number": 15124,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/14933\r\n\r\nSmall description of change: This just adds a test for this issue.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "4.0.x-test-manager-construct",
    "is_a_fork": true,
    "comments": [
      "This looks like zephir issue, will try to add test later, any idea? @sergeyklay @AlexNDRmac @dreamsxin ",
      "I'll try to check this with test in Zephir",
      "@sergeyklay In zephir_update_property_zval\r\n```C\r\nif (!ZEPHIR_PROPERTY_IS_PRIVATE(object, property_name)\r\n#if PHP_VERSION_ID >= 70100\r\n\told_scope = EG(fake_scope);\r\n#else\r\n\told_scope = EG(scope);\r\n#endif\r\n}\r\n```",
      "@Jurigag Can you target this to 4.1?",
      "Sure, will do it later.",
      "@Jurigag could you also check this one?\r\nThank you",
      "@AlexNDRmac any news?",
      "Need to check with latest Zephir version.",
      "Already fixed."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662126fd18912b45d36a2f38",
    "number": 15116,
    "body": "see https://github.com/phalcon/cphalcon/blob/634e7233a86780c9509614a8d835b188c8be76e5/phalcon/Dispatcher/AbstractDispatcher.zep#L338\r\nThis should also be merged into the 3.4 branch",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "Hello, thanks for contribution\r\n\r\nThere are some action points that need to be in consideration, before current PR can be merged:\r\n* Destination need to be changed to `4.1.x` branch\r\n* Version `3.4` is deprecated and it not supported\r\n* There need to be fixed tests\r\n* There need to be example case (with code) to simulate when method `initialize()` is really skipped. You can make it via tests",
      "I am not able to complete this pull request, I have submitted an issue to record this.\r\nhttps://github.com/phalcon/cphalcon/issues/15117"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662126fe18912b45d36a2f39",
    "number": 15115,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue:https://github.com/phalcon/cphalcon/issues/13378\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change: This is basic concept of autowire component for Phalcon's Di. How it works:\r\n\r\nWhen creating `Phalcon\\Di` there is optional argument implementing interface `Phalcon\\Di\\AutowireInterface`:\r\n\r\n```php\r\n$di = new \\Phalcon\\Di(new \\Phalcon\\Di\\Autowire());\r\n```\r\n\r\nWhich is used by `Phalcon\\Di->get()` when called with string(class name) like this:\r\n\r\n```php\r\n$di->get(\\Test\\TestService::class); // or:\r\n$di->set('testService', \\Test\\TestService::class);\r\n$di->get('testService');\r\n```\r\n\r\nIt analyzes constructor arguments and if they are classes tries to automatically get them from container and then creates new instance.\r\n\r\nIt also adds way to bind classes or interfaces, it will allow to either bind implementations to interfaces or add autowiring using currently written services to new projects. It also supports multiple implementations for one interfaces, to use then different implementation for different service developer needs to tell which exactly implementation he wants to use.\r\n\r\n**Case with interface:**\r\n\r\nClasses:\r\n\r\n```php\r\nnamespace Test;\r\n\r\ninterface TestInterface\r\n{\r\n    public function test();\r\n}\r\n\r\nclass TestService\r\n{\r\n    protected $testClass;\r\n\r\n    public function __construct(TestInterface $test, $xyz)\r\n    {\r\n        $this->testClass = $test;\r\n    }\r\n}\r\n\r\nclass TestClass implements TestInterface\r\n{\r\n    protected $test;\r\n\r\n    public function __construct()\r\n    {\r\n        $this->test = rand();\r\n    }\r\n\r\n    public function test()\r\n    {\r\n        // TODO: Implement test() method.\r\n    }\r\n}\r\n```\r\n\r\nCode:\r\n\r\n```php\r\n$di->bind(\\Test\\TestInterface::class, \\Test\\TestClass::class, true); // 3rd argument is to tell that this should be resolved as shared, so it will always return the same instance\r\nvar_dump($di->get(\\Test\\TestService::class));\r\nvar_dump($di->get(\\Test\\TestService::class));\r\n```\r\n\r\nOutput:\r\n\r\n```\r\nobject(Test\\TestService)#10 (1) {\r\n  [\"testClass\":protected]=>\r\n  object(Test\\TestClass)#8 (1) {\r\n    [\"test\":protected]=>\r\n    int(601129658)\r\n  }\r\n}\r\nobject(Test\\TestService)#10 (1) {\r\n  [\"testClass\":protected]=>\r\n  object(Test\\TestClass)#8 (1) {\r\n    [\"test\":protected]=>\r\n    int(601129658)\r\n  }\r\n}\r\n```\r\n\r\nWhen class we try to resolve has some other parameters like:\r\n\r\n```\r\nclass TestService\r\n{\r\n    protected $testClass;\r\n\r\n    public function __construct(TestInterface $test, $xyz)\r\n    {\r\n        $this->testClass = $test;\r\n    }\r\n}\r\n```\r\n\r\nThis service then can be resolved like this:\r\n\r\n```php\r\n$di->get(\\Test\\TestService::class, ['xyz' => '123'])\r\n```\r\n\r\nDefault parameters will be used if they exists, can be overridden the same way via second argument of get.\r\n\r\n**Case with existing service**(you can also bind existing service to class name, and use then class name in __construct, it will automatically resolve to your existing service):\r\n\r\nCode:\r\n\r\n```php\r\n$di->set('xyz', function () {\r\n    return new \\Test\\TestClass();\r\n}, true);\r\n$di->bind(\\Test\\TestInterface::class, 'xyz', true);\r\nvar_dump($di->get(\\Test\\TestService::class));\r\nvar_dump($di->get(\\Test\\TestService::class));\r\n```\r\n\r\nOutput:\r\n\r\n```\r\n object(Test\\TestService)#10 (1) {\r\n  [\"testClass\":protected]=>\r\n  object(Test\\TestClass)#8 (1) {\r\n    [\"test\":protected]=>\r\n    int(601129658)\r\n  }\r\n}\r\nobject(Test\\TestService)#10 (1) {\r\n  [\"testClass\":protected]=>\r\n  object(Test\\TestClass)#8 (1) {\r\n    [\"test\":protected]=>\r\n    int(601129658)\r\n  }\r\n}\r\n```\r\n\r\n**Case with multiple implementations:**\r\n\r\nAdditional implementation:\r\n\r\n```php\r\nclass TestClassOther implements TestInterface\r\n{\r\n    public function test()\r\n    {\r\n        // TODO: Implement test() method.\r\n    }\r\n}\r\n```\r\n\r\nCode:\r\n\r\n```php\r\n$di->bind(\\Test\\TestInterface::class, \\Test\\TestClass::class, true);\r\n$di->bind(\\Test\\TestInterface::class, \\Test\\TestClassOther::class, true);\r\n$di->set('testService', \\Test\\TestService::class)\r\n    ->setAutowireTypes([\\Test\\TestInterface::class => \\Test\\TestClass::class]);\r\n$di->set('testServiceOther', \\Test\\TestService::class)\r\n    ->setAutowireTypes([\\Test\\TestInterface::class => \\Test\\TestClassOther::class]);\r\nvar_dump($di->get('testService'));\r\nvar_dump($di->get('testServiceOther'));\r\n```\r\n\r\nOutput:\r\n\r\n```\r\nobject(Test\\TestService)#15 (1) {\r\n  [\"testClass\":protected]=>\r\n  object(Test\\TestClass)#13 (1) {\r\n    [\"test\":protected]=>\r\n    int(1528930295)\r\n  }\r\n}\r\nobject(Test\\TestService)#12 (1) {\r\n  [\"testClass\":protected]=>\r\n  object(Test\\TestClassOther)#15 (0) {\r\n  }\r\n}\r\n```\r\n\r\nThings to consider(let me know what you think about these):\r\n\r\n- automatically resolve multiple implementations of interface based on parameter name and/or resolved class name, not sure if it would be anyhow usefull and also it would add some bottleneck, need to figure out how it should work\r\n- add interface `Phalcon\\Di\\AutowireAwareInterface` so only classes implementing it will be auto wired(though empty interface doing nothing feels kind of weird)\r\n- add way to set non-class parameters for nested services - currently when resolving you can set non-class parameters only for resolving class, for nested classes it would need more work, either set them using bind, or add method to ServiceInterface to set constructor parameters for example\r\n- component itself adds option to set Autowire to resolve not defined classes via set/bind as shared - not sure if this should be kept or not\r\n- ~caching - needs tests how exactly it affects performance~ - not worth it, performance hit is really low, and any caching is not required, just localCache storing in property already resolved parameters for methods\r\n- `Phalcon\\Di::set` method is also changed, when definition is a class it will automatically bind it so it will be ready for autowire - it's just way to make it work if someone already uses calls like `$di->set('xyz', Class::class)`, it's to avoid unnecessary bind calls by developer\r\n- add some kind of method like updateBinds to container - which will fetch all defined services, check if their definition is class/object not being closure and will add them to bind so autowire will resolve it with ease(we might also store it in some cache)\r\n- since bind calls are pretty much pair of strings and bool add way to also implement cache for it to avoid method calls - what im thinking is it could be good for example add new method to `ServiceProviderInterface` in 5.0, for now create interface like maybe `ServiceProviderProvisionInterface` or `ServiceProviderCacheInterface` - which will be called only if container cache was empty\r\n- ~resolve onConstruct methods called in a framework~ - **DONE**\r\n- ~when using bind method with class as first argument(not interface) fetch also interfaces which class implements and add them as well(so either we will use interface or class in `__construct` it will get resolved)~ - implemented as option to enable, disabled by default\r\n- is BindDefinition class necessary - we could just operate only on arrays and reduce memory usage\r\n- add method resolver for autowire and implement it in dispatcher - so when user typehint class in action it will get resolved(separated feature request if this will get implemented and added?) - method resolver is done pretty much\r\n\r\nThanks\r\n\r\n",
    "head_branch": "4.1.x-autowire",
    "is_a_fork": true,
    "comments": [
      "@Jurigag Could you please add msgpack to fix CI issue:\r\n```\r\n  Problem 1\r\n    - The requested PHP extension ext-msgpack * is missing from your system. Install or enable PHP's msgpack extension.\r\n```",
      "I checked caching performance on PHP 7.2 and caching in redis/memcached/apcu seems useless, it's few times slower actually. Reflection Api is pretty fast, at least in PHP 7.2, will need to recheck it in PHP 7/7.1, if results will be similar i will remove it.\r\n\r\nStoring parsed reflections in property gives around 2 times boost - so i will keep this.\r\n\r\nTested it on around 11 arguments constructor. I guess i will create later even bigger test case maybe with multiple dependencies.",
      "I added way to resolve method calls. So `onConstruct` is autowired as well.",
      "I moved binding logic from Di to Autowire component, though i will keep methods in Di - I feel it's more convenient to use them from di.",
      "Can you provide some config file based examples?\r\n4e:\r\n```php\r\n[\r\n    'container' => [\r\n        DispatcherInterface::class => Dispatcher::class,\r\n    ]\r\n]\r\n```",
      "> Can you provide some config file based examples?\r\n> 4e:\r\n> \r\n> ```\r\n> [\r\n>     'container' => [\r\n>         DispatcherInterface::class => Dispatcher::class,\r\n>     ]\r\n> ]\r\n> ```\r\n\r\nGood idea, implemented it. Now you can just pass array with your binds to `Phalcon\\Di\\Autowire::__construct`. It accepts exactly the construction like you provided, array looking like this:\r\n\r\n```\r\n[\r\n    DispatcherInterface::class => Dispatcher::class,\r\n]\r\n```\r\n\r\nOr:\r\n\r\n```php\r\n[\r\n    DispatcherInterface::class => new BindDefinition(DispatcherInterface::class, Dispatcher::class, true),\r\n]\r\n```\r\n\r\nIt can also be array providing multiple implementations. All happens in addBinds method.\r\n\r\nAlso added setBinds/getBinds method if someone want to rawly set it, without checks and other unnecessary logic and other stuff, keep in mind then you need to provide it like this:\r\n\r\n```\r\n[\r\n    DispatcherInterface::class => [\r\n        Dispatcher::class => new BindDefinition(DispatcherInterface::class, Dispatcher::class, true)\r\n    ]\r\n]\r\n```\r\n",
      "Added unit tests for autowire component, later will add integration tests and unit tests for Di.",
      "@niden i heard you want to replace current DI with new one based on PSR-11, if it was supposed to be done for 5.0 i think this could still be added for 4.1.0 and something from here could be reused in 5.0, since PSR-11 is just container, it doesn't tell anyhow how autowiring should work.",
      "Closing, all further work with Di will be done in `v5`."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662126ff18912b45d36a2f3a",
    "number": 15114,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/15106\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n- Added `Phalcon\\Collection\\CollectionInterface` and `Phalcon\\Config\\ConfiInterface`.\r\n- Replaced all `Phalcon\\Collection` typehints by `Phalcon\\Collection\\CollectionInterface`.\r\n- Replaced all `Phalcon\\Config` typehints by `Phalcon\\Config\\ConfiInterface`.\r\n- Replaced instanceof checks to interfaces.\r\n\r\nWhy?\r\nFor example if you create your custom classes of config or collection, and pass to core services (ex: `Phalcon\\Di::loadFromConfig()`), it will fail on typecheck. But implementing interface can give some flexible way of extending config or collection\r\n\r\nThanks\r\n\r\n",
    "head_branch": "f/config-interface",
    "is_a_fork": true,
    "comments": [
      "Only question: shall i move all base php interfaces implementation call from Collection to CollectionInterface and extend?",
      "@phalcon/core-team any chances it will be approved?",
      "Solid work. Thank you @BeMySlaveDarlin "
    ],
    "commit_messages": [
      "Added Phalcon\\Collection\\CollectionInterface and Phalcon\\Config\\ConfigInterface"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621270018912b45d36a2f3b",
    "number": 15110,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nadd backer\r\n\r\nThanks\r\n\r\n",
    "head_branch": "add-backer",
    "is_a_fork": true,
    "comments": [
      "thnx @Arhell "
    ],
    "commit_messages": [
      "Merge pull request #15110 from Arhell/add-backer\n\nadd backer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621270218912b45d36a2f3c",
    "number": 15105,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/15104\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nThanks\r\n\r\n",
    "head_branch": "4.0.x-csrf",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621270318912b45d36a2f3d",
    "number": 15103,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nadd backer\r\n\r\nThanks\r\n\r\n",
    "head_branch": "backer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15103 from Arhell/backer\n\nadd backer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621270418912b45d36a2f3e",
    "number": 15095,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nadd backer\r\n\r\nThanks\r\n\r\n",
    "head_branch": "add-backer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15095 from Arhell/add-backer\n\nadd backer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621270518912b45d36a2f3f",
    "number": 15093,
    "body": "Hello!\r\n\r\nType: new feature\r\nLink to issue:\r\ndi support custom adapter ，compatibly to swoole context of coroutine or recover context\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\ndi support custom adapter ，compatibly to swoole context of coroutine or recover context\r\n\r\n\r\n",
    "head_branch": "feature/di-adapter",
    "is_a_fork": true,
    "comments": [
      "Could you add some tests for it? Also rebase to resolve changelog conflict. Also why exactly would someone need it for swoole? Can you show any example of code when other adapter would be required?",
      "@Jurigag OK，is support the swoole coroutine。like  run phalcon in coroutine ，i need get di \r\n\r\n```\r\n       $coroutineId = SwooleCoroutine::getCid();\r\n        //协程情况下使用进程ID区分上下文\r\n        if ($coroutineId > 0) {\r\n            return !empty($this->_default[$coroutineId]);\r\n        } else {\r\n            return !empty($this->_default);\r\n        }\r\n```\r\n ",
      "Oh, so each coroutine can have their own DI instance? Makes sense then. So rebase it if you can and add maybe some tests?",
      "ok, please give me a moment 。",
      "@Jurigag hi,this test case is ok? but windows install packages is error！",
      "![image](https://user-images.githubusercontent.com/3038490/89113733-4a560600-d4a7-11ea-97c7-9abfea537847.png)\r\n![image](https://user-images.githubusercontent.com/3038490/89113742-5c37a900-d4a7-11ea-9b4b-80136e9ceb5f.png)\r\n",
      "Yea looks good, windows error is not related and needs to be fixed.",
      "> Yea looks good, windows error is not related and needs to be fixed.\r\n\r\nDo i need to do something？",
      "@ruudboon Do we want to merge it?"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621270718912b45d36a2f40",
    "number": 15092,
    "body": "Hello!\r\n\r\n* Type:  new feature \r\n* Link to issue:\r\n     di support custom adapter ，compatibly to swoole context of coroutine or recover context\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "feature/di-adapter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621270818912b45d36a2f41",
    "number": 15091,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: [#15074 ](https://github.com/phalcon/cphalcon/issues/15074)\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nItem object result can give us ORM compatibility after make paging results.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [
      "This will break backwards compatibility and we can't do that in 4.1. We could implement this but it should be in a backwards compatible way.  Rest of @phalcon/core-team what do you guys think? \r\n\r\nBesides that we need some tests for this.",
      "I agree with @ruudboon ",
      "But in Phalcon 3.4.x model adapter for paginator returns a resultset object, and that helps us to call-related model.",
      "Yea but for phalcon 4 it seems it was changed. We would need to add some Model setup option i guess to add option to change this behavior, but keep old as default to avoid breaking backwards compability and add this way without returning both array and object to avoid memory usage.",
      "Thank you @maulanasatyaadi but this breaks BC so we have to revisit this issue later."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621270918912b45d36a2f42",
    "number": 15087,
    "body": "Hello!\r\n\r\n* Type: documentation\r\n* Link to issue: -\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nUpdate `Manager::enablePriorities` documentation\r\n\r\nThanks\r\n\r\n",
    "head_branch": "events-managerdocs",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15087 from phalcon/events-managerdocs\n\nUpdate Manager::enablePriorities documentation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621270a18912b45d36a2f43",
    "number": 15086,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "feature/dialect-support-comment",
    "is_a_fork": true,
    "comments": [
      "Linked: https://github.com/phalcon/cphalcon/pull/15085",
      "As I mentioned before, the`tests\\tocheck-database` aren't part of the CI yet and need to be refactored to the format in `tests\\database`. See for example https://github.com/phalcon/cphalcon/pull/15076\r\n\r\nIf you are putting in effort to the tests in tocheck-database it would be great if you can directly move those files to tests\\tocheck-database and refactor them to use the new structure.",
      "@ruudboon Sorry, I don't quite understand what you mean! You mean move tests\\tocheck-database change to tests\\database?",
      "> @ruudboon Sorry, I don't quite understand what you mean! You mean move tests\\tocheck-database change to tests\\database?\r\n\r\nYes, you can move them to there but they need to be adjusted to have the new structure. The pull I mentioned is a good example how to refactoring needs to be done. If you can refactor the tests you are now touching it would be great.  ",
      "@ruudboon CI has issue？ Do you need to reopen? or I am change？",
      "@cq-z could you rebase this please? \r\nWe would like to include this in 4.1",
      "ok，but have there an example ？",
      "> ok，but have there an example ？\r\n\r\nI am not sure what you mean, but you can do a rebase like this:\r\nIf your remote is called upstream:\r\n\r\n```\r\ngit fetch upstream\r\ngit rebase upstream/4.1.x\r\n```",
      "Sorry, misunderstanding. Is it OK now?",
      "@cq-z there are still some requested changes left, could you please address them?",
      "@zsilbi Is it OK now?",
      "Thank you @cq-z "
    ],
    "commit_messages": [
      "Merge pull request #15086 from cq-z/feature/dialect-support-comment\n\nFeature/dialect support comment"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621270b18912b45d36a2f44",
    "number": 15085,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "feature/dialect-support-comment",
    "is_a_fork": true,
    "comments": [
      "@cq-z Thnx for the pull! Looks like a nice addition to me but would like to check with the rest of the @phalcon/core-team as well. Maybe you can explain the use-case for this in the pull. If we accept this NFR we need to have the following things in place.\r\n\r\n- target branch should be 4.1.x\r\n- changelog should be updated as well\r\n- tests/tocheck-database/* must be refactored to tests/database with new structure\r\n\r\nThe target branch and changelog is something you can fix. Test tocheck-database tests aren't currently running on our CI, we are in the process of refactoring them. Before we merge this I want them in place. Would be great if you can refactor those tests as well, but we can also keep this pull pending and wait for the refactoring (when it's in you should adjust some tests before merging).\r\n",
      "This is what phalcon migrations is lacking atm... \r\n\r\nGood addition, but please fix action points in comment of Ruud. This feature is required good dedication.",
      "Ok! At night I merged to 4.1.x",
      "@cq-z You can change your target branch in the pull and just rebase you local branch. That way you can keep your pull open. \r\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621270c18912b45d36a2f45",
    "number": 15081,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/ide-stubs/pull/53\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nCorrect return type Item::getContext()\r\n\r\nThanks\r\n\r\n",
    "head_branch": "item-return-type-annotation",
    "is_a_fork": false,
    "comments": [
      "Thnx"
    ],
    "commit_messages": [
      "Merge pull request #15081 from phalcon/item-return-type-annotation\n\nCorrect return type Item::getContext()"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621270d18912b45d36a2f46",
    "number": 15080,
    "body": "Hello!\r\n\r\n* Type: bug fix  | code quality\r\n* Link to issue: #15077\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\n",
    "head_branch": "fix/#15077-findFirst-return-type",
    "is_a_fork": false,
    "comments": [
      "The problem, is that this needed to be changed back in `4.0.0`.",
      "Why can't we keep it as null and update the docs?",
      "The docs are already updated.",
      "Hmm now I see. We do break BC so if we approach it purely like that we should do it in v5. On the other hand I think it was intended to have it like this in v4 so you could see this as a bug that we need we need to fix and address it in v4.1"
    ],
    "commit_messages": [
      "#15077 - Fix return type from 'bool' to 'null' in findFirst() method signature"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621270e18912b45d36a2f47",
    "number": 15079,
    "body": "Update description\r\nCloses https://github.com/phalcon/cphalcon/pull/15066\r\n\r\nHello!\r\n\r\n* Type:  documentation\r\n* Link to issue: https://github.com/phalcon/cphalcon/pull/15066\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "ruudboon-patch-1",
    "is_a_fork": false,
    "comments": [
      "Can be merged if you ask me"
    ],
    "commit_messages": [
      "Merge pull request #15079 from phalcon/ruudboon-patch-1\n\nUpdate Bag.zep"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621270f18912b45d36a2f48",
    "number": 15076,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue: #13655 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nRefactored UniquenessCest",
    "head_branch": "refactor-db-tests",
    "is_a_fork": true,
    "comments": [
      "@niden If you have time can you ping me to check how we can solve the sql db-lock? https://github.com/phalcon/cphalcon/runs/747581338?check_suite_focus=true#step:17:180\r\n",
      "Sqlite does not like group statements, where etc. Anything \"fast\" i.e. tests running seems to lock the sqlite database.",
      "Ok, let's leave it open then. I will try to fix it or remove sqlite from these tests. ",
      "Looks like connection to db is still open (maybe caused by a transaction?) \r\nI'm wondering if `PRAGMA journal_mode = wal;` could solve our sqlite issues. \r\n",
      "@jenovateurs Do you have an idea what is causing this error?https://github.com/phalcon/cphalcon/pull/15076/checks?check_run_id=752726095#step:19:27",
      "Hi @ruudboon, I think it's a type trouble. PostgreSQL is very strict about that.\r\nIn your case, `obj_name` it's a varchar and `obj_type` is a smallint, so two differents types but in the SQL request there is no differences.\r\nSo I think you discovered a new Phalcon bug. I don't understand why Phalcon check `obj_name` and `obj_type` with the same parameters, it makes no sense to me.\r\nI think it's work with MySQL because there is no strong check about the type and it doesn't affect the result with the keyword OR.\r\nThe problem might be here : \r\nhttps://github.com/phalcon/cphalcon/blob/6f9ce5c4af4486f6b40413571182408732dc617c/phalcon/Validation/Validator/Uniqueness.zep#L373\r\nThese days, I have too much work to do. I haven't the time to debug line by line this code.\r\n",
      "@jenovateurs Thnx for your feedback. I expected some schema issues. But this is great feeback I will look into this. Thnx."
    ],
    "commit_messages": [
      "Merge pull request #15076 from ruudboon/refactor-db-tests\n\nRefactor db tests"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621271018912b45d36a2f49",
    "number": 15075,
    "body": "Let the result items output as an object, because sometimes we still need ORM feature to fetch another related data.\r\n\r\nType: bug fix\r\nLink to issue: [https://github.com/phalcon/cphalcon/issues/15074](15074)",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "We're not accepting any pull's on the master. Our working branch is 4.1.x now. \r\nThis change can cause refactoring for our users that are expecting an array. I do see the the need for having an option to return objects but maybe we can implement it in a backwards compatible way. \r\nBesides that we need to adjust/add tests, and changelog as well. \r\n\r\n@phalcon/core-team What do you guys think?",
      "In general I don't see the real issue and can't get why we need this by design.",
      "Gonna close this one. We need some more info why we need this and need it in a BC compatible if we agree upon this. Let's start with a NFR on the repo and let's work from there. "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621271118912b45d36a2f4a",
    "number": 15072,
    "body": "* Type: bug fix | new feature\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/15053\r\n\r\n\r\n\r\n",
    "head_branch": "fix/validator-message-unset-4.1",
    "is_a_fork": true,
    "comments": [
      "@ivan-zolotavin Thnx for your contribution! Can you mentioned the fix in our CHANGELOG-4.1.md ? ",
      "Done.",
      "@ivan-zolotavin Please resolve conflicts.",
      "Done.",
      "@ivan-zolotavin Thank you! Will merge it when tests finish."
    ],
    "commit_messages": [
      "Merge pull request #15072 from ivan-zolotavin/fix/validator-message-unset-4.1\n\nSave custom validator message option in object"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621271318912b45d36a2f4b",
    "number": 15071,
    "body": "Hello!\r\n\r\nNeed this functional for change only default message\r\n\r\n* Type: bug fix | new feature\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/15053",
    "head_branch": "fix/validation-message-unset",
    "is_a_fork": true,
    "comments": [
      "Thnx @ivan-zolotavin Can you drop this to our 4.1.x branch? Our next release will be a 4.1 release."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621271418912b45d36a2f4c",
    "number": 15066,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [
      "Thnx! Can you drop this to our 4.1.x branch. ",
      "@adamharley closing this in favour of #15079 Thnx for reporting!"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621271618912b45d36a2f4d",
    "number": 15063,
    "body": "Hello!\r\n\r\n* Type new feature\r\n* Link to issue: Upgraded to Zephir 0.12.19\r\n\r\nThis will break our branch but I wouldn't mind merging it and fix it step by step with separate pull requests. \r\n\r\n",
    "head_branch": "upgrade-zephir",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15063 from ruudboon/upgrade-zephir\n\nUpgrade zephir"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621271818912b45d36a2f4e",
    "number": 15062,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue: -\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSync with 4.0.x\r\n\r\nThanks\r\n\r\n",
    "head_branch": "merge-4.1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[merge] - Regenerating ext"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621271918912b45d36a2f4f",
    "number": 15059,
    "body": "Hello!\r\n\r\n* Type:  code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nReading this discussion I think we shouldn't be sending the UTF-8 charset.\r\n\r\nhttps://stackoverflow.com/questions/13096259/can-charset-parameter-be-used-with-application-json-content-type-in-http-1-1\r\n\r\nAnd this note: https://tools.ietf.org/html/rfc7159#page-11\r\n\r\n",
    "head_branch": "remove-utf8-json",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added changelog"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621271a18912b45d36a2f50",
    "number": 15058,
    "body": "This reverts commit 39f51ec5\r\n\r\nFix issue templates detection.",
    "head_branch": "fix-issue-templates",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Partial Revert \"Lowercase .github files tree [ci skip]\"\n\nThis reverts commit 39f51ec5"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621271b18912b45d36a2f51",
    "number": 15052,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nadd backer\r\n\r\nThanks\r\n\r\n",
    "head_branch": "add-backer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15052 from Arhell/add-backer\n\nadd backer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621271c18912b45d36a2f52",
    "number": 15045,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: [#13322](https://github.com/phalcon/cphalcon/issues/13322)\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nThere is a note in [docs](https://docs.phalcon.io/4.0/en/events), saying that you can attach callable to events manager as event handler, but that doesn't works properly. [Issue](https://github.com/phalcon/cphalcon/issues/13322) describing it.\r\nFixed in this PR. Now you can pass callable as event handler.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "f/events-manager-fix",
    "is_a_fork": true,
    "comments": [
      "> Please change the branch to 4.1.x\r\n> 4.0.6 was the last\r\n\r\nDone",
      "@BeMySlaveDarlin Thank you for the contribution!"
    ],
    "commit_messages": [
      "updated CHANGELOG"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621271d18912b45d36a2f53",
    "number": 15044,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nUpd resources\r\nThanks\r\n\r\n",
    "head_branch": "upd-res",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15044 from Arhell/upd-res\n\nUpd resources"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621271f18912b45d36a2f54",
    "number": 15043,
    "body": ":dancer:",
    "head_branch": "4.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Updated optimized versions"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621272018912b45d36a2f55",
    "number": 15041,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Fixes #15040 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nChanged the visibility of methods and properties in `Phalcon\\Http\\Message\\Response`, `Phalcon\\Http\\Message\\ServerRequest` and `Phalcon\\Http\\Message\\Uri` to work with `clone`.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15040-clone-2",
    "is_a_fork": true,
    "comments": [
      "> Changes look good. Not sure if we can do this in 4.0 due to semver.\r\n> On the other hand I don't think a lot of people are affected by this so ok by me.\r\n\r\nIt really does not affect people since we went from private to protected in visibility. "
    ],
    "commit_messages": [
      "[#15040] - Updating changelog"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621272118912b45d36a2f56",
    "number": 15039,
    "body": "Hello!\r\n\r\n* Type: enhancement\r\n* Link to issue: #15038 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nChanged `Phalcon\\Factory\\AbstractFactory` to expose `getService` which will throw an exception if it does not exist. Removed `checkService` and adjusted all references in `newInstance()` calls. [\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T15038-factory-newinstance",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[#15038] - Updated changelog"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621272218912b45d36a2f57",
    "number": 15037,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/15036\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nRemoved `Phalcon\\Translate\\InterpolatorFactory::$mapper` as well as `Phalcon\\Translate\\InterpolatorFactory::$services` in favor of `Phalcon\\Factory\\AbstractFactory` ones.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix/interpolator-mapper",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15037 from phalcon/fix/interpolator-mapper\n\nRemoved InterpolatorFactory::${mapper,services}"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621272418912b45d36a2f58",
    "number": 15033,
    "body": "Hello!\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nremove backer\r\n\r\nThanks\r\n\r\n",
    "head_branch": "remove-backer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "remove backers (github)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621272518912b45d36a2f59",
    "number": 15030,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/14942\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `SerializerInterface` usage for `Phalcon\\Mvc\\Model\\Resultset\\Complex::unserialize` as well as `Phalcon\\Mvc\\Model\\Resultset\\Complex::unserialize`\r\n\r\nThanks",
    "head_branch": "fix/resultset-complex-unserialize",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15030 from phalcon/fix/resultset-complex-unserialize\n\nFixed SerializerInterface usage for result-sets"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621272618912b45d36a2f5a",
    "number": 15029,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/14657\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nRollback the regression changes made in https://github.com/phalcon/cphalcon/pull/13663 for `Phalcon\\Mvc\\Model\\Query::_prepareSelect` to properly prepare a SQL `SELECT` statement from a PHQL one.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix/issue-14657",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15029 from phalcon/fix/issue-14657\n\nRollback the regression changes for Phalcon\\Mvc\\Model\\Query::_prepareSelect"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621272718912b45d36a2f5b",
    "number": 15028,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/15027\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed return type hint for `Phalcon\\Mvc\\Model\\Resultset::getFirst` and `Phalcon\\Mvc\\Model\\ResultsetInterface::getFirst` to reflect original behavior\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix/resultset-get-first-return-type-hint",
    "is_a_fork": false,
    "comments": [
      "Thanks buddy"
    ],
    "commit_messages": [
      "Regenerate C code\n\nSee: https://github.com/phalcon/cphalcon/pull/15025"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621272818912b45d36a2f5c",
    "number": 15026,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/15024\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed return type hint for `Phalcon\\Mvc\\Model\\Manager::executeQuery` and `Phalcon\\Mvc\\Model\\Manager::ManagerInterface` to reflect original behavior\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix/models-manager-execute-query-return-type-hint",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15026 from phalcon/fix/models-manager-execute-query-return-type-hint\n\nFixed return type hint for Manager::executeQuery"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621272918912b45d36a2f5d",
    "number": 15025,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14936 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nChanged `Phalcon\\Http\\Request::getJsonRawBody` to use `json_decode` instead of `Phalcon\\Json::decode` \r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14936-json-decode",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15025 from niden/T14936-json-decode\n\nT14936 json decode"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621272a18912b45d36a2f5e",
    "number": 15023,
    "body": "",
    "head_branch": "merge/4.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15023 from phalcon/merge/4.0.x\n\nMerge 4.0.x into 4.1.x"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621272b18912b45d36a2f5f",
    "number": 15022,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/15021\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed return type hint for `Phalcon\\Db\\Column::getAfterPosition` and `Phalcon\\Db\\ColumnInterface::getAfterPosition` to reflect original behavior\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix/column-get-after-position-return-type-hint",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15022 from phalcon/fix/column-get-after-position-return-type-hint\n\nFixed return type hint for Column::getAfterPosition"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621272d18912b45d36a2f60",
    "number": 15020,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/15019\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed return type hint for `Phalcon\\Db\\Column::getSize` and `Phalcon\\Db\\ColumnInterface::getSize` to reflect original behavior \r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix/column-get-size-return-type-hint",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15020 from phalcon/fix/column-get-size-return-type-hint\n\nFixed return type hint for Column::getSize"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621272e18912b45d36a2f61",
    "number": 15018,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/15017\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed return type hint for `Phalcon\\Mvc\\Model\\CriteriaInterface::getColumns` and `Phalcon\\Mvc\\Model\\Criteria::getColumns` to reflect original behavior\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix/criteria-get-column",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15018 from phalcon/fix/criteria-get-column\n\nFixed return type for CriteriaInterface::getColumns"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621272f18912b45d36a2f62",
    "number": 15016,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/15015\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\n- Fixed return type hint for `Phalcon\\Mvc\\Model\\MetaData::getColumnMap` and `Phalcon\\Mvc\\Model\\MetaData::getReverseColumnMap` to reflect original behavior\r\n\r\n- Fixed return type hint for `Phalcon\\Mvc\\Model\\MetaDataInterface::getColumnMap`  and `Phalcon\\Mvc\\Model\\MetaDataInterface::getReverseColumnMap` to reflect original behavior\r\n\r\nThanks",
    "head_branch": "fix/metadata-columnmap-type-hint",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15016 from phalcon/fix/metadata-columnmap-type-hint\n\nFixed return type hint for MetaData"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621273018912b45d36a2f63",
    "number": 15014,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/15013\r\n\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed return type hint for `Phalcon\\Mvc\\Model::average` and `Phalcon\\Mvc\\ModelInterface::average` to reflect original behavior\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix/model-average-return-type-hint",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15014 from phalcon/fix/model-average-return-type-hint\n\nFixed return type hint for ModelInterface::average"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621273118912b45d36a2f64",
    "number": 15012,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/15011\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nChanged `Phalcon\\Mvc\\Model\\MetaData::getDI` so that now it will throw a `Phalcon\\Mvc\\Model\\Exception` if there is no `DiInterface` instance.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "metadata/getdi-throws-exception",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15012 from phalcon/metadata/getdi-throws-exception\n\nChanged MetaData::getDI to throw exception"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621273218912b45d36a2f65",
    "number": 15009,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/15008\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\n- Changed return type hint for `Phalcon\\Mvc\\Model\\Manager::getCustomEventsManager` to return NULL instead of boolean FALSE if there is no special events manager\r\n- Fixed return type hint for `Phalcon\\Mvc\\Model::getEventsManager` to reflect original behavior\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix/model-events-manager-return-type-hint",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15009 from phalcon/fix/model-events-manager-return-type-hint\n\nChanged return type hint for Model::getEventsManager"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621273318912b45d36a2f66",
    "number": 15007,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/15006\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed return type hint for `Phalcon\\Mvc\\Model::count` and `Phalcon\\Mvc\\ModelInterface::count` to reflect original behavior.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix/model-count-return-type-hint",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15007 from phalcon/fix/model-count-return-type-hint\n\nFixed return type hint for ModelInterface::count"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621273418912b45d36a2f67",
    "number": 15005,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/15004\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\n- Changed return type for `Phalcon\\Mvc\\Model\\Criteria::getLimit` so that integer, NULL or array will be returned\r\n- Fixed return type hint for `Phalcon\\Mvc\\Model\\CriteriaInterface::getLimit` and `Phalcon\\Mvc\\Model\\Criteria::getLimit` to follow documentation and original purpose\r\nThanks\r\n\r\n",
    "head_branch": "fix/criteria-limit",
    "is_a_fork": false,
    "comments": [
      "LGTM"
    ],
    "commit_messages": [
      "Merge pull request #15005 from phalcon/fix/criteria-limit\n\nFixed return type for CriteriaInterface::getLimit"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621273518912b45d36a2f68",
    "number": 15003,
    "body": "Hello!\r\n\r\n* Type: bug fix | code quality | documentation\r\n* Link to issue: -\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\n- Correct database tests\r\n- Update documentation\r\n- Code cleanup\r\n\r\nThanks",
    "head_branch": "fix/correct-database-tests",
    "is_a_fork": false,
    "comments": [
      "All tests are passed. The failed one on macOS is not related. Possible the same as in #14981"
    ],
    "commit_messages": [
      "Merge pull request #15003 from phalcon/fix/correct-database-tests\n\nCorrect database tests"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621273618912b45d36a2f69",
    "number": 15001,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/15000\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\n- Changed return type hint for `Phalcon\\Mvc\\ModelInterface::sum`\r\n- Fixed return type hint for `Phalcon\\Mvc\\Model::sum`\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix/model-sum-return-type-hint",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #15001 from phalcon/fix/model-sum-return-type-hint\n\nFixed return type hint for Phalcon\\Mvc\\Model::sum"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621273718912b45d36a2f6a",
    "number": 14998,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: -\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\n- Fixed `QueryCest` (incorrect migration)\r\n- Refactor `AbstractMigration`\r\n- Fixed `CustomersMigration` to correct insert data in Postgres\r\n \r\nThanks\r\n\r\n",
    "head_branch": "test-resulset-for-4.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14998 from phalcon/test-resulset-for-4.0.x\n\nFixed Phalcon\\Test\\Database\\Mvc\\Model\\QueryCest"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621273818912b45d36a2f6b",
    "number": 14997,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/14996\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed return type hint for `Phalcon\\Translate\\InterpolatorFactory::newInstance`\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix/interpolator-factory-return-type-hint",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14997 from phalcon/fix/interpolator-factory-return-type-hint\n\nFixed return type hint for InterpolatorFactory::newInstance"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621273918912b45d36a2f6c",
    "number": 14995,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/14994\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nChanged return type hints of the following `Phalcon\\Flash\\FlashInterface`'s methods: \r\n- `Phalcon\\Flash\\FlashInterface::error`\r\n- `Phalcon\\Flash\\FlashInterface::message`\r\n- `Phalcon\\Flash\\FlashInterface::notice`\r\n- `Phalcon\\Flash\\FlashInterface::success`\r\n- `Phalcon\\Flash\\FlashInterface::warning`\r\n\r\nFixed return type hints of the following `Phalcon\\Flash\\AbstractFlash`'s methods:\r\n- `Phalcon\\Flash\\AbstractFlash::error`\r\n- `Phalcon\\Flash\\AbstractFlash::notice`\r\n- `Phalcon\\Flash\\AbstractFlash::success`\r\n- `Phalcon\\Flash\\AbstractFlash::warning`\r\n\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix/flash-methods-return-type",
    "is_a_fork": false,
    "comments": [
      "All tests are passed. The failed one is not related (canceled build). The same as in https://github.com/phalcon/cphalcon/pull/14981"
    ],
    "commit_messages": [
      "Merge pull request #14995 from phalcon/fix/flash-methods-return-type\n\nChanged return type hints for FlashInterface methods"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621273a18912b45d36a2f6d",
    "number": 14993,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/14992\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\n- Fixed return type hint for `Phalcon\\Di::getInternalEventsManager`\r\n- Changed default value for `Phalcon\\Di::getInternalEventsManager:$services` to empty array\r\n- Changed default value for `Phalcon\\Di::getInternalEventsManager:$sharedInstances` to empty array\r\n- Adjusted tests\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix/di-internal-events-manager",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14993 from phalcon/fix/di-internal-events-manager\n\nFixed return type hint for Di::getInternalEventsManager"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621273b18912b45d36a2f6e",
    "number": 14991,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/14989\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix/crypt-key-default-value",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14991 from phalcon/fix/crypt-key-default-value\n\nFixed default value of Crypt::$key"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621273c18912b45d36a2f6f",
    "number": 14988,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/14987\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed return type hints for the following methods:\r\n  - `Phalcon\\Dispatcher\\AbstractDispatcher::dispatch`\r\n  - `Phalcon\\Dispatcher\\DispatcherInterface::dispatch`\r\n  - `Phalcon\\Filter::get`\r\n  - `Phalcon\\Http\\Message\\AbstractCommon::cloneInstance`\r\n  - `Phalcon\\Http\\Message\\AbstractCommon::processWith`\r\n  - `Phalcon\\Http\\Message\\AbstractMessage::withAddedHeader`\r\n  - `Phalcon\\Http\\Message\\AbstractMessage::withBody`\r\n  - `Phalcon\\Http\\Message\\AbstractMessage::withHeader`\r\n  - `Phalcon\\Http\\Message\\AbstractMessage::withProtocolVersion`\r\n  - `Phalcon\\Http\\Message\\AbstractMessage::withoutHeader`\r\n  - `Phalcon\\Http\\Message\\AbstractRequest::withMethod`\r\n  - `Phalcon\\Http\\Message\\AbstractRequest::withRequestTarget`\r\n  - `Phalcon\\Http\\Message\\AbstractRequest::withUri`\r\n  - `Phalcon\\Mvc\\Model\\Binder::findBoundModel`\r\n  - `Phalcon\\Validation::getEntity`\r\n  - `Phalcon\\Validation\\ValidationInterface::getEntity`\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix/object-return-type",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14988 from phalcon/fix/object-return-type\n\nDo not use `object` return type hint"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621273e18912b45d36a2f70",
    "number": 14986,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/14978\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nFixed return type hints for the following methods:\r\n- `Phalcon\\Config\\ConfigFactory::load`\r\n- `Phalcon\\Config\\ConfigFactory::newInstance`\r\n\r\nto explicitly indicate the return type as `Phalcon\\Config`.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix/config-factory-load",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14986 from phalcon/fix/config-factory-load\n\nFixed incorrect return type hints for ConfigFactory"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621273f18912b45d36a2f71",
    "number": 14985,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14983\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nChanged the way `Phalcon\\Http\\Response::__construct` checks `content` data type.\r\nNow a `TypeError` will be thrown if incompatible data type was passed.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix/response-incorrect-content-type",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14985 from phalcon/fix/response-incorrect-content-type\n\nImproved content type check for Response::__construct"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621274018912b45d36a2f72",
    "number": 14984,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14982\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nFixed incorrect return type hint for `Phalcon\\Http\\Response\\Cookies::setSignKey`\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix/cookies-set-signKey",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14984 from phalcon/fix/cookies-set-signKey\n\nFixed incorrect return type hint for setSignKey"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621274118912b45d36a2f73",
    "number": 14981,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/14980\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\n`Phalcon\\Assets\\Asset::getRealSourcePath` always returns string, not boolean FALSE.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix/asset-tests",
    "is_a_fork": false,
    "comments": [
      "All tests are passed. The failed one is not related (canceled build)."
    ],
    "commit_messages": [
      "Merge pull request #14981 from phalcon/fix/asset-tests\n\nFixed Assets tests"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621274218912b45d36a2f74",
    "number": 14979,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/14977\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nFixed default value of the following `Phalcon\\Annotations\\Annotation`'s properties:\r\n\r\n- `Phalcon\\Annotations\\Annotation::$arguments`\r\n- `Phalcon\\Annotations\\Annotation::$exprArguments`\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix/annotation-property-types",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14979 from phalcon/fix/annotation-property-types\n\nFixed default type of the Annotation properties and return type hints of the Annotation methods"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621274318912b45d36a2f75",
    "number": 14976,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/14975\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nFixed return type hints of the following `Phalcon\\Acl\\AbstractAdapter`'s methods:\r\n- `getActiveAccess`\r\n- `getActiveRole`\r\n- `getActiveComponent`\r\n\r\nChanged the default ACL access level from boolean `FALSE` to `Enum::DENY`.\r\n\r\nThanks",
    "head_branch": "fix/acl-return-type-hints",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14976 from phalcon/fix/acl-return-type-hints\n\nFixed return type hints of the ACL methods"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621274418912b45d36a2f76",
    "number": 14974,
    "body": "Hello!\r\n\r\n* Type: bug fix | code quality\r\n* Link to issue: #14888\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nCurrent PR fixes previous PRs (#14888) behavior, when it wasn't possible to specify `NULL` in column definition, as some of types requires it, if column need to be nullable.\r\nFor example:\r\nThis is NOT NULL\r\n```\r\nupdated_at TIMESTAMP\r\n```\r\n\r\nThis is NULL, with default NULL\r\n```\r\nupdated_at TIMESTAMP NULL\r\n```\r\n\r\nThis is also NULL, with default NULL\r\n```\r\nupdated_at TIMESTAMP NULL DEFAULT NULL\r\n```\r\n\r\nTwo last examples was not possible to generate before this PR.\r\n\r\n<hr/>\r\n\r\nAlso, moved `NULL/NOT NULL` before `DEFAULT`.\r\n\r\nBefore:\r\n```\r\nupdated_at` TIMESTAMP DEFAULT NULL NULL\r\n```\r\n\r\nAfter\r\n```\r\nupdated_at` TIMESTAMP NULL DEFAULT NULL\r\n```\r\n\r\n\r\nPrevious branch - #14973\r\n\r\nThanks\r\n\r\n",
    "head_branch": "mysql-default-null",
    "is_a_fork": false,
    "comments": [
      "Added link of previous PR (#14888) in the description.",
      "Updated explanation into description.",
      "Thank you"
    ],
    "commit_messages": [
      "Merge pull request #14974 from phalcon/mysql-default-null\n\nReview MySQL default null and nullable column definition"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621274618912b45d36a2f77",
    "number": 14973,
    "body": "Hello!\r\n\r\n* Type: bug fix | code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix/mysql-default-null",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621274718912b45d36a2f78",
    "number": 14972,
    "body": "Hello!\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nadd backer\r\n\r\nThanks\r\n\r\n",
    "head_branch": "add-backer",
    "is_a_fork": true,
    "comments": [
      "Thank you"
    ],
    "commit_messages": [
      "Merge pull request #14972 from Arhell/add-backer\n\nadd backers (github)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621274818912b45d36a2f79",
    "number": 14971,
    "body": "Hello!\r\n\r\n* Type: new feature | code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nRemoved underscores in protected and extendable (not final) methods to be PSR-12 compliant.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "remove-methods-underscore-prefix",
    "is_a_fork": false,
    "comments": [
      "/cc @phalcon/core-team ",
      "We cannot do this now. It breaks backwards compatibility. If it was only private methods that would be fine but since it touches protected methods it will break applications that extend these classes and use those methods.\r\n\r\nWe can put a @todo on this for v5",
      "Is there any place where we can start collect things for v5?",
      "@Jeckerson If you have time can you rebase and have look at the requested changes?",
      "Will try to add it during today.",
      "I think this is going to break BC this way, because the logic is not quite right.\r\n\r\nFor example, if someone had custom a `_postSaveRelatedRecords()` implemented in their `Model` before, it's not going to be ever called by the `Model` itself after a save because it will only call the new function (`postSaveRelatedRecords()`) instead. \r\n\r\n```php\r\nnamespace My;\r\n\r\nclass Model extends \\Phalcon\\Mvc\\Model {\r\n   /**\r\n    * My custom _postSaveRelatedRecords implementation\r\n    */\r\n   protected function _postSaveRelatedRecords(AdapterInterface $connection, $related): bool {\r\n      // This won't be ever called by Model\r\n\r\n      return parent::_postSaveRelatedRecords($connection, $related);\r\n   }\r\n}\r\n```\r\n\r\nFollowing this example, this solution only applies to those, who originally had `Model::_postSaveRelatedRecords()` calls in their `Model` for some reason.\r\n\r\n\r\n```php\r\nnamespace My;\r\n\r\nclass Model extends \\Phalcon\\Mvc\\Model {\r\n   /**\r\n     * My custom function\r\n     * \r\n     * @throws Exception\r\n     * @throws Model\\Exception\r\n     */\r\n    public function doSomething(): void\r\n    {\r\n        // This will work, thanks to the proxy function\r\n        $this->_postSaveRelatedRecords(\r\n            $this->getWriteConnection(),\r\n            $this->dirtyRelated\r\n        );\r\n    }\r\n}\r\n```"
    ],
    "commit_messages": [
      "Merge branch '4.1.x' into remove-methods-underscore-prefix\n\n* 4.1.x:\n  Update Manager::enablePriorities documentation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621274918912b45d36a2f7a",
    "number": 14970,
    "body": "- Remove redundant code\r\n- Update action versions\r\n- Use the same script to install Zephir & Parser for both Travis and Actions\r\n- Code cleanup",
    "head_branch": "feature/rethink-ci",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14970 from phalcon/feature/rethink-ci\n\nRefactor workflows"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621274a18912b45d36a2f7b",
    "number": 14969,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\nTo not forget before release :)\r\n\r\n",
    "head_branch": "bump-version-4.0.6",
    "is_a_fork": false,
    "comments": [
      "Thank you"
    ],
    "commit_messages": [
      "Merge pull request #14969 from phalcon/bump-version-4.0.6\n\nBump version to 4.0.6"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621274b18912b45d36a2f7c",
    "number": 14965,
    "body": "Hello!\r\n\r\n* Type: documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nUpdated url for api docs.\r\n\r\n",
    "head_branch": "fix-api-docs-links",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix link api docs"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621274c18912b45d36a2f7d",
    "number": 14964,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/14535\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nPHQL now supports the use of any printable characters from the extended ASCII table for escaped identifiers. The exception characters are `[` and `]`:\r\n\r\n```sql\r\nSELECT\r\n  People.firstName AS [Fìrst Nàmè],\r\n  People.lastName  AS [Làst Nàmè]\r\nFROM\r\n  [Acme\\Models\\People]\r\n```\r\n\r\nTo use `[` and `]` escape they:\r\n\r\n```sql\r\nSELECT\r\n  People.firstName AS [\\[Fìrst Nàmè\\]],\r\n  People.lastName  AS [\\[Làst Nàmè\\]]\r\nFROM\r\n  [Acme\\Models\\People]\r\n```\r\n\r\n**Note:** In some cases, this _may_ lead to problems. For example, when a user uses spaces for aliases:\r\n\r\n```php\r\n$phql = \"\r\n    SELECT \r\n        inv_id AS [Invoice ID]\r\n    FROM \r\n        Invoices\";\r\n\r\n$invoices = $this\r\n    ->modelsManager\r\n    ->executeQuery($phql);\r\n\r\nforeach ($invoices as $invoice) {\r\n    echo $invoice->Invoice ID; // Impossible\r\n}\r\n```\r\n\r\nBut something like this now is possible:\r\n```php\r\n$query = Customers::query();\r\n$query->columns(\r\n    [\r\n        'Customer ID' => 'cst_id',\r\n        'Stätûs'      => 'cst_status_flag',\r\n    ]\r\n);\r\n\r\n$query->limit(1, 0);\r\n$resultsets = $query->execute();\r\n\r\nisset($resultsets[0]['Customer ID']); // TRUE\r\nisset($resultsets[0]['Stätûs']); // TRUE\r\n```\r\n\r\nReferences:\r\n- https://en.wikipedia.org/wiki/Extended_ASCII\r\n- https://www.ascii-code.com\r\n\r\nThanks",
    "head_branch": "fix/phql-escape-id",
    "is_a_fork": false,
    "comments": [
      "**Do not merge. Work in progress**"
    ],
    "commit_messages": [
      "Merge pull request #14964 from phalcon/fix/phql-escape-id\n\nAllow any chars from the Extended ASCII table for escaped IDs"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621274d18912b45d36a2f7e",
    "number": 14963,
    "body": "Hello!\r\n\r\n* Type:  documentation\r\n* Link to issue: https://github.com/phalcon/ide-stubs/pull/45\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nAdded suggested doc to source.\r\n\r\n",
    "head_branch": "ide-stubs-45",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14963 from ruudboon/ide-stubs-45\n\nAdded comments"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621274e18912b45d36a2f7f",
    "number": 14962,
    "body": "",
    "head_branch": "merge/4.0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14962 from phalcon/merge/4.0\n\nMerge 4.0.x branch"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621274f18912b45d36a2f80",
    "number": 14961,
    "body": "Hello!\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nremove backers\r\n\r\nThanks\r\n\r\n",
    "head_branch": "remove-backers",
    "is_a_fork": true,
    "comments": [
      "Thank you @Arhell "
    ],
    "commit_messages": [
      "remove backers (github)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621275118912b45d36a2f81",
    "number": 14952,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/ide-stubs/pull/44\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nCorrect PhpDoc for `Phalcon\\Db\\Adapter\\AbstractAdapter`.\r\n`Phalcon\\Db\\Adapter\\AdapterInterface` issue related to Zephir.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix/phpdoc",
    "is_a_fork": false,
    "comments": [
      "@shivammathur Could you please check macos builds? There is an issue https://github.com/phalcon/cphalcon/pull/14952/checks?check_run_id=593826610#step:8:1",
      "@sergeyklay Fixed in shivammathur/homebrew-php@1644502. Please restart the workflow.",
      "@shivammathur Thank you!"
    ],
    "commit_messages": [
      "Merge pull request #14952 from phalcon/fix/phpdoc\n\nCorrect PhpDoc for Phalcon\\Db\\Adapter\\AbstractAdapter"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621275218912b45d36a2f82",
    "number": 14951,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [-] I have updated the relevant CHANGELOG\r\n- [-] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed the [issues that Travis reports on in its config file](https://travis-ci.org/github/phalcon/cphalcon/builds/673583763/config).\r\n",
    "head_branch": "travis-config",
    "is_a_fork": true,
    "comments": [
      "This looks OK to me - not that well versed with Travis\r\n\r\n@sergeyklay any thoughts on this?\r\n\r\n(Thanks @SidRoberts )"
    ],
    "commit_messages": [
      "Fixed issues with Travis config"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621275318912b45d36a2f83",
    "number": 14949,
    "body": "Hello!\r\n\r\n* Type: documentation\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix-docs-Timestampable",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Update Timestampable behavior key"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621275418912b45d36a2f84",
    "number": 14947,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #14837 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nUpdated the tests in anticipation of PHPUnit 9\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14837-phpunit-9",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[#14837] - PHPCS"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621275518912b45d36a2f85",
    "number": 14945,
    "body": "* Type: bug fix\r\n* Link to issue: #14944 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [yes] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [yes] I have checked that another pull request for this purpose does not exist\r\n- [no] I wrote some tests for this PR\r\n- [no] I have updated the relevant CHANGELOG\r\n- [no] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of the change:\r\n\r\ncheck if the session service has registered before getting its instance\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [
      "Please change branch from 'phalcon:master' to 'phalcon:4.1.x'\r\nI think that it's not serious bug",
      "sorry, I find the  phalcon:4.1.x has already fixed this problem. close this."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621275618912b45d36a2f86",
    "number": 14939,
    "body": "Fixes: https://github.com/phalcon/ide-stubs/pull/43",
    "head_branch": "feturn-mixed-from-config-path",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Return 'mixed' from  Config::path\n\nSee: https://github.com/phalcon/ide-stubs/pull/43"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621275718912b45d36a2f87",
    "number": 14937,
    "body": "Hello!\r\n\r\n- [X] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [X] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nremove backer\r\n\r\nThanks\r\n\r\n",
    "head_branch": "remove-backer",
    "is_a_fork": true,
    "comments": [
      "Thank you @Arhell "
    ],
    "commit_messages": [
      "remove backer (github)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621275818912b45d36a2f88",
    "number": 14935,
    "body": "Hello!\r\n\r\n* Type: bug fix | code quality\r\n* Link to issue: https://github.com/phalcon/cphalcon/pull/14922\r\n\r\nSmall description of change:\r\n\r\nWhen a new PHP is released and our upstream php Github action isn't updated yet we should fetch the windows downloads from the archive instead of the latest.\r\n\r\n- Refactored powershell scripts\r\n- Added fallback function for no longer existing php dist (zip files)\r\n\r\nThanks\r\n\r\n",
    "head_branch": "bugfix/windows-ci",
    "is_a_fork": true,
    "comments": [
      "Fixed!\r\n@ruudboon @sergeyklay",
      "Thank you"
    ],
    "commit_messages": [
      "Merge pull request #14935 from AlexNDRmac/bugfix/windows-ci\n\nBugfix/windows ci"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621275918912b45d36a2f89",
    "number": 14929,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14816\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFor a detailed explanation of the problem, refer to #14816\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix/volt/in-operator-precedence",
    "is_a_fork": false,
    "comments": [
      "/cc @phalcon/core-team "
    ],
    "commit_messages": [
      "Merge pull request #14929 from phalcon/fix/volt/in-operator-precedence\n\nFixed ‘IN’ operator precedence in Volt"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621275a18912b45d36a2f8a",
    "number": 14925,
    "body": "Hello!\r\n\r\n* Type: testing\r\n* Link to issue: #13655 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nAdded more tests with the community during the hangout!!\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T13655-tests-hangout",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[#13655] - Added more tests"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621275b18912b45d36a2f8b",
    "number": 14922,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue: https://github.com/phalcon/cphalcon/pull/14921\r\n\r\nWhen a new PHP is released and our upstream php Github action isn't updated yet we should fetch the windows downloads from the archive instead of the latest.\r\nAdded a fallback to check the archive when first download fails.\r\n\r\n\r\n",
    "head_branch": "fix-ci",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621275c18912b45d36a2f8c",
    "number": 14921,
    "body": "Hello!\r\n\r\n* Type: Testing\r\n* Link to issue: #13655  \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nAdded Request tests\r\n\r\nThanks\r\n\r\n",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[4.0.x] - Minor refector"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621275d18912b45d36a2f8d",
    "number": 14919,
    "body": "Hello!\r\n\r\n* Type: tests\r\n* Link to issue: #14639 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nAdded more tests to confirm functionality\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14639-undefined-index-di-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[#14639] - Added test for model paginate"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621276018912b45d36a2f8e",
    "number": 14917,
    "body": "Updating 4.1",
    "head_branch": "4.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge branch '4.1.x' of https://github.com/niden/cphalcon into niden-4.1.x\n\n* '4.1.x' of https://github.com/niden/cphalcon: (407 commits)\n  [4.1.x] - Corrected test\n  [4.1.x] - Regenerating ext/\n  [4.1.x] - Corrected method name\n  [4.1.x] - Fixed friendlyTitle; Line endings for Windows tests\n  [4.1.x] - Fixing namespaces\n  Regenerate C code for ext dir [ci skip]\n  [#14871] - Removed generated files\n  [#14871] - Minor change to the test\n  [#14871] - PHPCS\n  [#14871] - Add lazy loader handler get\n  [#14871] - Updated test\n  [#14871] - Add test for get active handler with lazy loader\n  [#14679] - Correction for empty values\n  [#14679] - Updated changelog\n  [#14679] - Added warning when a filter does not exist during sanitize\n  [#14734] - Minor change to the factory\n  [#14734] - Removed crypt tests (error in merging)\n  [#14734] - PSR correction and type for log level\n  [#14734] - Corrected crypt test\n  [#14734] - PHPCS and corrected class name in tests\n  ..."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621276218912b45d36a2f8f",
    "number": 14916,
    "body": "Updating 4.1.x branch",
    "head_branch": "4.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621276318912b45d36a2f90",
    "number": 14914,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #14907 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed the Volt compiler to no longer parse `cache` fragments and thus searching for the `viewCache` service (deprecated for v4)\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14907-view-cache-remove",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[#14907] - Updated changelog"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621276418912b45d36a2f91",
    "number": 14913,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14912 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nChanged `Volt::convertEncoding` to no longer using `iconv` for a fallback since it causes issues with macOS\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14912-iconv",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[#14912] - Updated changelog [ci-skip]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621276518912b45d36a2f92",
    "number": 14911,
    "body": "Hello!\r\n\r\n* Type: code cleanup\r\n* Link to issue: #14341\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThis addition was introduced in https://github.com/phalcon/cphalcon/pull/14341 and over time it became clear that this is not the most popular solution:\r\n\r\n- This solution based on Dockerfile which is not part of the Phalcon core\r\n- The Makefile contains hardcoded versions, paths and 3rd party Docker images\r\n- There is at least one bug when we was forced to [create workaround](https://github.com/phalcongelist/packagecloud/blob/af5362bb95aee7446466fddf1609bd21437c5981/ci/regenerate-build.sh#L18-L21)\r\n- This solution seems to be used by only one person (@Fenikkusu)\r\n- Environment configuration shouldn't be a part of the framework (I propose create a separate repo with all sort of configurations)\r\n\r\nThanks\r\n\r\n/cc @phalcon/core-team \r\n",
    "head_branch": "cleanup",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Deleted Makefile\n\nThis addition was introduced in https://github.com/phalcon/cphalcon/pull/14341\nand over time it became clear that this is not the most popular solution:\n\n- This solution based on Dockerfile which is not part of the Phalcon core\n- The Makefile contains hardcoded versions, paths and 3rd party Docker images\n- There is at least one bug when we was forced to create workaround\n- This solution seems to be used by only one person\n- Environment configuration shouldn't be a part of the framework"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621276618912b45d36a2f93",
    "number": 14910,
    "body": "Hello!\r\n\r\n* Type: tests\r\n* Link to issue: #14476\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nCovered comments from https://github.com/phalcon/cphalcon/issues/14476\r\n\r\nThanks",
    "head_branch": "tests/add-volt-tests",
    "is_a_fork": false,
    "comments": [
      "/cc @phalcon/core-team "
    ],
    "commit_messages": [
      "Merge pull request #14910 from phalcon/tests/add-volt-tests\n\nAmended tests for Volt"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621276718912b45d36a2f94",
    "number": 14909,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14476\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThis fix will return the possibility to use Volt's operators inside echo mode (`{{ ... }}`):\r\n\r\n```volt\r\n{{ foo is defined ? 'yes' : 'no' }}\r\n```\r\nThanks\r\n\r\n",
    "head_branch": "fix/volt-operators-echo-2",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Fixed misspelling"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621276818912b45d36a2f95",
    "number": 14908,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14476\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThis fix will return the possibility to use Volt's operators inside echo mode (`{{ ... }}`):\r\n\r\n```volt\r\n{{ foo is defined ? 'yes' : 'no' }}\r\n```\r\nThanks\r\n\r\n",
    "head_branch": "fix/volt-operators-echo",
    "is_a_fork": false,
    "comments": [
      "Close in favor of https://github.com/phalcon/cphalcon/pull/14909"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621276918912b45d36a2f96",
    "number": 14906,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14866 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Tag::friendlyTitle` to correctly convert titles under MacOS and Windows \r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14866-friendly-title",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[#14866] - Enabling tests"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621276a18912b45d36a2f97",
    "number": 14900,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix-win-build",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14900 from phalcon/fix-win-build\n\nTry to fix WIN builds"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621276b18912b45d36a2f98",
    "number": 14899,
    "body": "Hello!\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nupdate resources\r\nThanks\r\n\r\n",
    "head_branch": "resource-upd",
    "is_a_fork": true,
    "comments": [
      "Thanks @Arhell "
    ],
    "commit_messages": [
      "update resources"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621276d18912b45d36a2f99",
    "number": 14898,
    "body": "Hello team!\r\n\r\nA lot of things in this PR : \r\n- I updated some tests to handle PostgreSQL.\r\n- I updated some Migration classes to create tables in the PostgreSQL database.\r\n- I found one bug with the function getPhql and I hope I have fixed it correctly.\r\n\r\nI discovered the bug by doing the tests \r\n`mvcModelFindFirstStringPrimaryKey (database/Mvc/Model/FindFirstCest.php).`\r\n\r\nThe error was triggered with PostgreSQL.\r\nWhen we do a:\r\n`ModelWithStringPrimary::findFirst('135');`\r\n\r\nThe primary key of ModelWithStringPrimary is a string.\r\nAnd the function findFirst writes the condition like that:\r\n`... where uuid = 135`\r\n\r\nPostgreSQL triggers an error like character varying = integer (there is an error...).\r\n\r\nSo I updated getPhSQL and checked if the type of the simple condition is a string, I put single quotes around the condition.\r\n\r\nThe updated file is phalcon/Mvc/Model/Query/Builder.zep\r\n\r\nThanks for your review/help 🧙.\r\n\r\n* Type: bug fix | code quality\r\n* Link to issue: #14874\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nThanks\r\n\r\n",
    "head_branch": "update_postgres_test",
    "is_a_fork": true,
    "comments": [
      "Thank you @jenovateurs "
    ],
    "commit_messages": [
      "fix: some minor error - Closes #14874"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621276e18912b45d36a2f9a",
    "number": 14897,
    "body": "Hello!\r\n\r\nadd backer (github)\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nadd backer (github)\r\n\r\nThanks\r\n\r\n",
    "head_branch": "add-backer",
    "is_a_fork": true,
    "comments": [
      "Thank you @Arhell "
    ],
    "commit_messages": [
      "add backer (github)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621276f18912b45d36a2f9b",
    "number": 14896,
    "body": "Release 4.0.5",
    "head_branch": "4.0.x",
    "is_a_fork": false,
    "comments": [
      "If AppVeyor passes It's fine by me to merge. We can figure out the windows tests later."
    ],
    "commit_messages": [
      "Merge branch 'master' into 4.0.x\n\n* master:"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621277018912b45d36a2f9c",
    "number": 14893,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14858 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Str::dirFromFile()` to replace `.` with `-` to avoid issues with Windows environments\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14858-folder-name-with-period",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[#14858] - PHPCS"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621277118912b45d36a2f9d",
    "number": 14892,
    "body": "Hello!\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nadd backer\r\n\r\nThanks\r\n\r\n",
    "head_branch": "add-backer",
    "is_a_fork": true,
    "comments": [
      "Thank you @Arhell "
    ],
    "commit_messages": [
      "add backer (github)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621277318912b45d36a2f9e",
    "number": 14888,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n\r\n- [X] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [X] I have checked that another pull request for this purpose does not exist\r\n- [X] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\n- In Mysql, column manipulation is generating some lonely NULL at the end of a definition (compare to valid NOT NULL. This could mess up with some parsers.\r\n- Remove quotes around numerical default Mysql column value",
    "head_branch": "fix-mysql-column-numeric-default",
    "is_a_fork": true,
    "comments": [
      "Sorry 2 PR to fix 2 different problems. Either we could merge this one with both solved, or do I remove the first commit from this one ? ",
      "@pfz Do you mind rebasing this branch with 4.0.x? I don't see why the test should fail from the current v4 code.\r\n\r\nAnd yes we can close the other PR if this one fixes everything.",
      "Thank you for the contribution!",
      "I've rebased with the new branch... The tests are erratics, sometimes they pass, sometimes not. They pass on branch, and here, on the PR, it fails on weird states, for db tests not concerns by my fix.\r\nNow on windows.",
      "> I've rebased with the new branch... The tests are erratics, sometimes they pass, sometimes not. They pass on branch, and here, on the PR, it fails on weird states, for db tests not concerns by my fix.\r\n> Now on windows.\r\n\r\nThanks @pfz Yeah we know about the Windows tests. We will fix them in the next few days. Not sure what happened there, they used to work fine. The db issue you saw was related to a namespace, nothing to do with your branch.",
      "Ack forgot. @pfz Do you mind adding an entry in the CHANGELOG-4.0 please with this fix? Dont forget to add your name to get credit for this.\r\n\r\nOther than that this is ready to be merged. Solid work! Thanks",
      "Solid work. Thank you @pfz ",
      "Unfortunately I skipped sawing this, and it broke again migrations...\r\n\r\n@pfz This was introduced:\r\n```\r\nelse {\t\r\n    let sql .= \" NULL\";\t\r\n}\r\n```\r\n\r\nBecause it is not possible to create nullable columns in Phalcon. Will create new PR with more tests",
      "@Jeckerson Sorry I think I don't quite understand your statement. Do you mean that this was introduced (actually re-introduced) on purpose ?\r\n\r\nI made this PR because this broke my own migration path. I use a schema diff from `SHOW CREATE TABLE` to what Phalcon is providing. With at least Mysql 5.7+/ mariadb 10.1+ (prior to that I cannot tell), fields are NULL by default if type allows it. You must add `NOT NULL` to enforce that a value is always set. Also with a default value, adding `NULL` is irrelevant, as you always can set to this column to NULL as long as `NOT NULL` is not specified. And with a NULL default, I ended up with a strange `DEFAULT NULL NULL`.\r\nAlso phalcon can handle nullable columns, depends on how you manage your schema, I inherit my schema migration from a script I made since Phalcon 1.\r\nYou may have a better insight on this matter, and I could be all wrong. I'm neither a DBA nor Phalcon expert."
    ],
    "commit_messages": [
      "update changelog"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621277418912b45d36a2f9f",
    "number": 14887,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nExample:\r\n```\r\n`updated_date` TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP\r\n```\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix-default-on-update",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14887 from phalcon/fix-default-on-update\n\nFix MySQL default value with ON UPDATE expression"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621277518912b45d36a2fa0",
    "number": 14886,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n\r\n- [X] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [X] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nIn Mysql, column manipulation is generating some lonely `NULL` at the end of a definition (compare to valid `NOT NULL`. This could mess up with some parsers.",
    "head_branch": "fix-mysql-column-null-default",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621277618912b45d36a2fa1",
    "number": 14885,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nPartially testing the waters here. Not sure I'll finish this unless the community thinks I should.\r\n\r\nI was working on a personal zephir project that leverages phalcon and kept getting errors when trying to access the `persistent` object. After digging into it, I realized it was related to missing the 'sessionBag' element in the dependency injector. This is an attempt to bridge the gap, along with giving some additional functionality (initialization of persistent).\r\n\r\nNote: I've not run any the QA tools yet. As I said, testing the waters.\r\n\r\nThanks",
    "head_branch": "4.0.x-persistent",
    "is_a_fork": true,
    "comments": [
      "It occurs to me, Interestingly enough, I never received the 'service not defined' error from the DIC...may need to dig into that further...",
      "@Fenikkusu do you mind rebasing this with 4.0.x ? I cannot see in the current v4 code why this test would fail...",
      "@niden , I've rebase the PR. Unfortunately I didn't see the e-mail come through on this or I would of done it sooner.",
      "@Fenikkusu Sorry to be a pain buddy, but can you change the base of this to point to v4.1.x please? \r\n\r\nAlso we will need a clear view on what we will do with this, and an issue explaining what we are changing here. I know you wrote that you are testing the waters here so we need to figure this out :)\r\n\r\nAlso changelog entry :)",
      "@Fenikkusu if you plan to complete this please let us know.\r\nI have to close this for the time being."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621277718912b45d36a2fa2",
    "number": 14883,
    "body": "Hello!\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nadd backer (github)\r\n\r\nThanks\r\n\r\n",
    "head_branch": "backer",
    "is_a_fork": true,
    "comments": [
      "Closing this for now until we identify if the backer is a real person or not."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621277818912b45d36a2fa3",
    "number": 14881,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14880\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix/#14880-column-default-curr-timestamp",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14881 from phalcon/fix/#14880-column-default-curr-timestamp\n\n#14880 - Fix column default ON UPDATE"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621277918912b45d36a2fa4",
    "number": 14879,
    "body": "Hello!\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nadd backer\r\n\r\nThanks\r\n\r\n",
    "head_branch": "add-backer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14879 from Arhell/add-backer\n\nadd backer (github) [ci skip]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621277a18912b45d36a2fa5",
    "number": 14878,
    "body": "Hello team!\r\n\r\nI created the private schema for PostgreSQL tests.\r\nI update two tests to be compatible with MySQL and PostgreSQL.\r\n\r\n* Type: code quality\r\n* Link to issue: #14876 and #14874 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nThanks\r\n\r\n",
    "head_branch": "workflow_postgres",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14878 from les-enovateurs/workflow_postgres\n\nAdd private schema on PostgreSQL tests and update two tests"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621277b18912b45d36a2fa6",
    "number": 14876,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14862\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix/#14862-pgsql-null-columns",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14876 from phalcon/fix/#14862-pgsql-null-columns\n\n#14862 - Swap condition if column allows null values in PostgreSQL"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621277c18912b45d36a2fa7",
    "number": 14875,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "enable-integration-tests-win",
    "is_a_fork": false,
    "comments": [
      "@Jeckerson We don't have Redis and Memcache available under windows runners\r\n\r\nhttps://github.com/actions/virtual-environments/blob/master/images/win/Windows2016-Readme.md"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621277d18912b45d36a2fa8",
    "number": 14872,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #14871\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change: It adds getHandler method to LazyLoader so we can real handler. Right now it's not possible.\r\n\r\nOriginal work from @Jurigag in https://github.com/phalcon/cphalcon/pull/14746\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14871-lazy-loader",
    "is_a_fork": true,
    "comments": [
      "@Jurigag Please review",
      "Looks good, thanks."
    ],
    "commit_messages": [
      "Merge pull request #14872 from niden/T14871-lazy-loader\n\nT14871 lazy loader"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621277e18912b45d36a2fa9",
    "number": 14870,
    "body": "Hello!\r\n\r\n* Type: enhancement\r\n* Link to issue: #14679 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nChanged `Phalcon\\Filter::sanitize` to throw a `E_USER_NOTICE` when a filter does not exist.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14679-filter-non-existing-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[#14679] - Correction for empty values"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621278018912b45d36a2faa",
    "number": 14869,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #13321 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\Db::fetchAll` to correctly return data when `Enum::FETCH_COLUMN` is supplied. \r\n\r\nThanks\r\n\r\n",
    "head_branch": "T13321-fetch-column",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[#13321] - Corrected suite"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621278118912b45d36a2fab",
    "number": 14867,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14866\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nUsed PHP \\Normalizer::normalize to normalise the string. \r\n",
    "head_branch": "fix-friendly-url",
    "is_a_fork": true,
    "comments": [
      "Hmm, I see some issues under 7.2. Before fixing this, can we use the `intl` extensions? Not sure if this already a Phalcon dependency. ",
      "I don't think intl is a requirement. I would prefer we did not add one more dependency :/",
      "I agree. Will look for a different solution to translate the characters. "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621278218912b45d36a2fac",
    "number": 14865,
    "body": "Hello!\r\n\r\n* Type: testing\r\n* Link to issue: #13655 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nTests and more tests\r\n\r\nThanks\r\n\r\n",
    "head_branch": "unit-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[unit] - PHPCS"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621278318912b45d36a2fad",
    "number": 14863,
    "body": "Hello!\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nAdd backer (github)\r\n\r\nThanks\r\n\r\n",
    "head_branch": "add-backer",
    "is_a_fork": true,
    "comments": [
      "Thank you @Arhell "
    ],
    "commit_messages": [
      "add backer (github)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621278418912b45d36a2fae",
    "number": 14860,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14858\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix/#14858-dir-from-file-tests",
    "is_a_fork": false,
    "comments": [
      "@Jeckerson can you rebase so we can merge this?"
    ],
    "commit_messages": [
      "Merge pull request #14860 from phalcon/fix/#14858-dir-from-file-tests\n\n#14858 - Check folder name ending with period"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621278518912b45d36a2faf",
    "number": 14859,
    "body": "Hello!\r\n\r\n* Type: new feature, bug fix\r\n* Issues: [#14861](https://github.com/phalcon/cphalcon/issues/14861),  [#14687](https://github.com/phalcon/cphalcon/issues/14687)\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change (will be added if this gets all approves)\r\n\r\nFor #14861: now it is available attaching callable `[class|object, method]` to event manager:\r\n```php\r\n$eventsManager->attach(\"dispatcher:beforeException\", [BeforeExceptionListener::class, \"handle\"]);\r\n```\r\n\r\nFor #14861: now it is available attaching invokable objects to event manager, because now it is possible to pass callable (class with __invoke accepts as callable):\r\n```php\r\nnamespace Listeners\\Dispatcher;\r\n\r\nuse Phalcon\\Events\\Event;\r\n\r\nclass BeforeExceptionListener extends ListenerInterface\r\n{\r\n    public function __invoke(Event $event, $dispatcher);\r\n}\r\n\r\n$eventsManager->attach(\"dispatcher:beforeException\", new  BeforeExceptionListener());\r\n```\r\n\r\nFor #14861: possibility of using Event Providers.\r\n\r\n`$listeners` property in Provider contains list of Listeners which will be attached to Events Manager in one loop (at current implementation there is no option to set each Listener call priority) as shown below.\r\n\r\nFor #14687: `$options` property contains list of events (namespace or full event name) with array of configurations.\r\nThere is option for events named `strict`. If set `true`, event loop breaks on first false Listener result.\r\n\r\n```php\r\nuse Phalcon\\Events\\Provider as PhalconProvider;\r\n\r\nclass Provider extends PhalconProvider\r\n{\r\n    protected $listeners = [\r\n          'router:notMatchedRoute' => NotMatchedRoute::class,\r\n          'router:notMatchedRoute' => function($event, $router) { return true; }\r\n          'router:notMatchedRoute' => [\r\n              'class' => NotMatchedRoute::class,\r\n              'method' => 'handle',\r\n          ],\r\n          'router:notMatchedRoute' => [\r\n              NotMatchedRoute::class,\r\n              function($event, $router) { return true; },\r\n          ],\r\n          'router:notMatchedRoute' => [\r\n              [\r\n                  'class' => NotMatchedRoute::class,\r\n                  'method' => 'handle',\r\n              ],\r\n              function($event, $router) { return true; },\r\n          ],\r\n    ];\r\n\r\n    protected $options = [\r\n        'dispatch:beforeException' => [\r\n            'strict' => true,\r\n            'cancelable' => true,\r\n        ],\r\n        'dispatch' => [\r\n            'strict' => true,\r\n        ],\r\n    ];\r\n}\r\n\r\n$eventsManager->registerProvider(new Provider());\r\n```\r\n\r\nThanks\r\n\r\n",
    "head_branch": "f/event-manager-listener-tweaks",
    "is_a_fork": true,
    "comments": [
      "> LGTM. But consider 4.1.x branch for this.\r\n\r\nThe reason of requesting it on 4.0.x is just i want it asap, cos this blocks further logic of Event Provider feature development =)",
      "> > LGTM. But consider 4.1.x branch for this.\r\n> \r\n> The reason of requesting it on 4.0.x is just i want it asap, cos this blocks further logic of Event Provider feature development =)\r\n\r\nWe will break semver if we add this to 4.0 so if we accept this new feature we should add it to 4.1. Besides that we need a pull for docs as well.\r\nTechnically looks good to me. We need to investigate if this is a feature that will help a broad audience and aligns with our future plans. ",
      "> We will break semver if we add this to 4.0 so if we accept this new feature we should add it to 4.1. Besides that we need a pull for docs as well.\r\n> Technically looks good to me. We need to investigate if this is a feature that will help a broad audience and aligns with our future plans.\r\n\r\nNo prob, will recreate pr to 4.1 after this one pass all approves",
      "@BeMySlaveDarlin you can change the target branch in your pull. It’s on the top in github.",
      "> @BeMySlaveDarlin you can change the target branch in your pull. It’s on the top in github.\r\n\r\nRebased and fixed.\r\nI probably will add Event Provider part right in this PR while its going to 4.1",
      "A couple of points on this.\r\n\r\nFirst of all, thank you for the contribution and enthusiasm. It is highly appreciated.\r\n\r\nHowever, there is no issue attached to this PR. Also, the (missing) issue has not been requested by the community as something that is necessary etc. etc. That deviates from how NFRs are processed.\r\n\r\nPutting that aside. The code looks solid but I have no idea why we even need this - at all. \r\n\r\nThis PR introduces 3 ways of doing exactly the same thing. Why? \r\n\r\nIt also increases the complexity of the framework which I do not think is necessary.\r\n\r\nThe goal for v4 was to simplify the framework not add more ways of doing the same thing.",
      "_del_\r\n**Updated topic to add some clarity.**",
      "Sorry but this does not get my blessing. Just because an issue was created after my comment does not mean that the community wants this or that it is necessary for the framework. It could very well be but there is a process we follow and this is not it.\r\n\r\nI understand the problem you are trying to solve and this pretty much solves it but there was already a plan to rework and expand the events manager here:\r\n\r\nhttps://github.com/phalcon/cphalcon/issues/14687\r\n\r\nIf the others are OK with it this - feel free to merge it.\r\n",
      "> Sorry but this does not get my blessing. Just because an issue was created after my comment does not mean that the community wants this or that it is necessary for the framework. It could very well be but there is a process we follow and this is not it.\r\n> \r\n> I understand the problem you are trying to solve and this pretty much solves it but there was already a plan to rework and expand the events manager here:\r\n> \r\n> #14687\r\n> \r\n> If the others are OK with it this - feel free to merge it.\r\n\r\nNp. Can i at least get rid of **final** on `Phalcon\\Events\\Manager::fireQueue`?)",
      "> > Sorry but this does not get my blessing. Just because an issue was created after my comment does not mean that the community wants this or that it is necessary for the framework. It could very well be but there is a process we follow and this is not it.\r\n> > I understand the problem you are trying to solve and this pretty much solves it but there was already a plan to rework and expand the events manager here:\r\n> > #14687\r\n> > If the others are OK with it this - feel free to merge it.\r\n> \r\n> Np. Can i at least get rid of **final** on `Phalcon\\Events\\Manager::fireQueue`?)\r\n\r\nYes, if it will be declared in the interface Events Manager implements.\r\n",
      "> Yes, if it will be declared in the interface Events Manager implements.\r\n\r\nIt can break backward compatibility, if i declare it in ManagerInterface.\r\n",
      "@niden Concerning [#14687](https://github.com/phalcon/cphalcon/issues/14687) and other expectations, made some update commits, can you please check it closely?"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621278618912b45d36a2fb0",
    "number": 14856,
    "body": "Hello team!\r\n\r\nI remove some \"robot\" classes that I added yesterday. To replace the robots, I added Product and OrderProducts. \r\nI hope @niden that was you have in mind. If not we can discuss about that 😉.\r\nI also delete the other public schema and just keep the private schema.\r\n\r\n* Type: code quality\r\n* Link to issue: #14854 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nThanks\r\n\r\n",
    "head_branch": "clean_db_test",
    "is_a_fork": true,
    "comments": [
      "@jenovateurs That is great work. Thank you. I had something slightly different in mind but this gets us very close to that. \r\n\r\nBased on this: https://docs.phalcon.io/4.0/en/use-case\r\n\r\nWe already have `co_invoices`. Also there is a `inv_cst_id` field that links to `co_customers`.\r\n\r\nNow we can have `co_orders` (prefix `ord`) and `co_products` (prefix `prd`). The cross table between them would be `co_orders_x_products` (`x` dictating that this is a cross table) with \r\n\r\n`oxp_ord_id` and `oxp_prd_id`\r\n\r\nThe methodology I had in mind is that every table has a 3 letter unique prefix - even cross tables so as to be able to identify the field where it comes from. The `co_` in tables is `core`. We can utilize that prefix for special cases that we might want to cover.\r\n\r\nWe don't need to have the full schema as one would expect for products and orders. For now the link ids and name or title would be fine, perhaps quantity in products also. As we move through the fields we can add more fields as need by.\r\n\r\nSend me a message on discord if you need to discuss more or have additional input \r\n\r\nGreat work so far!",
      "Thanks  @niden for ypur review.\r\nYou've thought through the structure of the database and the methodology of creating tables and names.\r\nThus we will have a great schema to run efficient tests. \r\nI hope this new update matches you have in mind. I've put the quantity of product order in the cross table.\r\n\r\nIf you need new updates, tell me.\r\n\r\nThanks for your help and your ideas. ",
      "@jenovateurs great work. Thnx"
    ],
    "commit_messages": [
      "Merge pull request #14856 from les-enovateurs/clean_db_test\n\nClean db test (Robots/RobotsPart/RobotsPartToPart) -> Products"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621278718912b45d36a2fb1",
    "number": 14855,
    "body": "Hello!\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nresources update\r\n\r\nThanks\r\n\r\n",
    "head_branch": "res",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14855 from Arhell/res\n\nresources update [ci skip]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621278818912b45d36a2fb2",
    "number": 14854,
    "body": "Hello team!\r\nI created a test for the PR #14716 .\r\nI added new table in the schema.sql.\r\nI added new models with different schema.\r\nI fix an error in .env.exemple of nanobox.\r\n\r\n* Type: code quality\r\n* Link to issue: #14716\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nThanks\r\n\r\n",
    "head_branch": "test_many_to_many_multiple_schemas",
    "is_a_fork": true,
    "comments": [
      "@jenovateurs Thank you! I cancelled Appveyor to give priority to the release. I will restart it afterwards\r\n",
      "@ruudboon No problem, thanks for the info ;-).",
      "@jenovateurs Use fixtures migration classes instead of raw SQL.\r\n\r\nExample here: `tests/_data/fixtures/Migrations/InvoicesMigration.php`",
      "@Jeckerson No problem about fixtures migration. Should I delete my raw SQL in the schemas files ?",
      "@jenovateurs yes, you can delete the sql files you've added. We will move everything to the migrations soon. After that we can fully clean up. \r\n",
      "What can I do about that: \r\n\r\n```\r\nIn Db.php line 278:\r\n                                                                               \r\n  Db: SQLSTATE[42000]: Syntax error or access violation: 1044 Access denied f  \r\n  or user 'phalcon'@'%' to database 'hardware'                                 \r\n  SQL query being executed:                                                    \r\n  CREATE SCHEMA IF NOT EXISTS hardware  \r\n```",
      "@jenovateurs Did you rebased with 4.0.x?",
      "@Jeckerson I've just rebased now but I still have the same issue. ",
      "@jenovateurs I can have a look at it tomorrow. Must be something related to permissions on the github actions.",
      "@ruudboon I think the problem is here : \r\nhttps://github.com/phalcon/cphalcon/blob/4.0.x/tests/_envs/pgsql.yml\r\nIn the database, I haven't got the permission to create a new schema.\r\nI can create the new schema in the file environnement or add more privileges. \r\nWe will see tomorrow, no problem ;-).",
      "@jenovateurs If you have a better understanding and knowledge about Postgres make any necessary changes that are needed. \r\n\r\nOther than the area that you pointed regarding the schema creation, I think the rest of the database tests could run on postgres without major hitches (provided that the migrations are created)",
      "@jenovateurs Probably your latest commit will fail because you don't have permissions. \r\nTo fix this we have a few options.\r\n- Run tests as root\r\n- Initialise permissions on starting of mysql/postgres containers.\r\n\r\nBesides that I would like to use schema's that will be used for the full suite. This could be `hardware` but maybe we could go for something more general like `app` or `private` (we already have the `public` I think)",
      "Let’s run the suite as root for now. Looks like we need to extend the mysql and postgres containers otherwise. \r\nCan you change the example env and actions env to use the root user?",
      "It's the sqlite test that trigger the error. Because I haven't the SQL script. I don't know if it's possible to create a schema with sqlite.",
      "I skiped sqlite for this special test so if you have another idea... I'm all ears (or eyes) :-).",
      "I wish I had seen this earlier. Nothing you did Jeremy but the goal is to move away from the Robots and related tables and use a more realistic schema such as invoices/customers/products etc. Also by doing this we ensure that we use only models we need and not throw one model/table here just for one test.\r\n\r\nGreat work nonetheless. Thank you for taking the initiative on this.\r\n\r\nAlso for the future if you do not want a test to run for a particular RDBMs you can use the `getDriver()` method from the database helper."
    ],
    "commit_messages": [
      "Merge pull request #14854 from les-enovateurs/test_many_to_many_multiple_schemas\n\nTest ManyToMany with multiple schemas. Thnx @jenovateurs"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621278b18912b45d36a2fb3",
    "number": 14853,
    "body": "* Type: release\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nReleasing 4.0.4\r\n\r\nThanks\r\n\r\n",
    "head_branch": "4.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14853 from phalcon/4.0.x\n\n4.0.4 Release"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621278d18912b45d36a2fb4",
    "number": 14852,
    "body": "* Type: release\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nReleasing 4.0.4\r\n\r\nThanks\r\n\r\n",
    "head_branch": "4.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621278f18912b45d36a2fb5",
    "number": 14851,
    "body": "* Type: release\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nReleasing 4.0.4\r\n\r\nThanks\r\n\r\n",
    "head_branch": "4.0.x",
    "is_a_fork": false,
    "comments": [
      "New PR will come up shortly"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621279018912b45d36a2fb6",
    "number": 14850,
    "body": "Hello!\r\n\r\n* Type:  code quality\r\n* Link to issue: #14849\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "prepare-4.0.4-release",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621279118912b45d36a2fb7",
    "number": 14848,
    "body": "Hi team!\r\nI have a new delivery of test. \r\nAssets/Collection is done.\r\nBut I have 3 problems : \r\n- GitHub display a message : \" Can’t automatically merge. Don’t worry, you can still create the pull request. \" - I don't know how to solved it.\r\n- The test Assets/Collection/CurrentCest trigger an error because the variable \"position\" is not initialize in Phalcon (Error : phalcon/Assets/Collection.zep on line 261)\r\n- I have the same problem with Asset/Collection/ValidCest, I can't valid my CSS file because \"position\" is not initialize.\r\n\r\nThanks for your help ;-)\r\n\r\n* Type: code quality\r\n* Link to issue: #13655\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nThanks\r\n\r\n",
    "head_branch": "update_assets_collection",
    "is_a_fork": true,
    "comments": [
      "> \" Can’t automatically merge. Don’t worry, you can still create the pull request. \" - I don't know how to solved it.\r\n\r\nYou need to rebase your branch with latest commits from `4.0.x`",
      "> The test Assets/Collection/CurrentCest trigger an error because the variable \"position\" is not initialize in Phalcon (Error : phalcon/Assets/Collection.zep on line 261)\r\n\r\nYou can try to set default value:\r\n`protected position = 0 { get };`\r\n\r\nhttps://github.com/phalcon/cphalcon/blob/master/phalcon/Assets/Collection.zep#L74",
      "@Jeckerson Thanks for your help ;-)"
    ],
    "commit_messages": [
      "Merge pull request #14848 from les-enovateurs/update_assets_collection\n\n#13655 - Assets/Collection - Tests finished. Thank you @jenovateurs"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621279218912b45d36a2fb8",
    "number": 14847,
    "body": "Hello!\r\n\r\n* Type code quality\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/14775\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nAllowing failing windows or osx test to break the build. ",
    "head_branch": "enable-windows-osx-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14847 from ruudboon/enable-windows-osx-tests\n\nEnable windows osx tests"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621279318912b45d36a2fb9",
    "number": 14846,
    "body": "Hello!\r\n\r\n* Type: code quality \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nAdded my first unit test,\r\nUpdated readme\r\nThanks\r\n\r\n",
    "head_branch": "unittest",
    "is_a_fork": true,
    "comments": [
      "Thank you @andejong . Merging once the suite runs",
      "@andejong I've just saw your PR, I have finished tests about Asset / Collection. I hope you didn't work on this new tests."
    ],
    "commit_messages": [
      "Merge pull request #14846 from andejong/unittest\n\nUnittest"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621279418912b45d36a2fba",
    "number": 14845,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "upgrade-zephir-0.12.17",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14845 from ruudboon/upgrade-zephir-0.12.17\n\nUpgrade Zephir to 0.12.17"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621279518912b45d36a2fbb",
    "number": 14844,
    "body": "Hello!\r\n\r\n* Type: code quality \r\n\r\nUpgrade Zephir to 0.12.17\r\n",
    "head_branch": "upgrade-zephir-0.12.17",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621279618912b45d36a2fbc",
    "number": 14843,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nAs discussed internally we decided to place the JWT module under security. \r\n\r\n",
    "head_branch": "change-namespace-JWT",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14843 from ruudboon/change-namespace-JWT\n\nChange namespace jwt"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621279818912b45d36a2fbd",
    "number": 14842,
    "body": "Merged changes of 4.0 into 4.1.\r\n",
    "head_branch": "sync-with-4.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14842 from ruudboon/sync-with-4.0\n\nSync with 4.0"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621279918912b45d36a2fbe",
    "number": 14841,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nCurrent test serves for example with PHP 7.4 and nullable model's property.\r\n> Uncaught Error: Typed property Model::$id must not be accessed before initialization\r\n\r\nExample: `public ?int $id = null;`\r\n\r\nThanks\r\n\r\n",
    "head_branch": "tests-assign-model",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14841 from phalcon/tests-assign-model\n\nAdd test case in AssignCest class [PHP 7.4]"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621279a18912b45d36a2fbf",
    "number": 14839,
    "body": "Hello!\r\n\r\nSome small improvements to speedup our CI",
    "head_branch": "speedup-actions",
    "is_a_fork": true,
    "comments": [
      "Rebased"
    ],
    "commit_messages": [
      "Merge pull request #14839 from ruudboon/speedup-actions\n\nUse prestissimo to speed-up composer packages downloading"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621279b18912b45d36a2fc0",
    "number": 14838,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue: #14775 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nAdjusted tests to work on windows as well.\r\nForce to use PHPUnit 8 (see #14837) \r\n\r\n",
    "head_branch": "fixes/windows-line-enters",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14838 from ruudboon/fixes/windows-line-enters\n\nFixes/windows line enters"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621279c18912b45d36a2fc1",
    "number": 14836,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue: #14763\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nTest are already in place and are currently failing under OSX.\r\n",
    "head_branch": "fixes/char-issue-request-2058",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14836 from ruudboon/fixes/char-issue-request-2058\n\nFixed MacOS char issue"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621279d18912b45d36a2fc2",
    "number": 14835,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fixes/issue-14763",
    "is_a_fork": true,
    "comments": [
      "Closing this. Need to be fixed upstream first (see https://github.com/phalcon/zephir/pull/2058)"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621279e18912b45d36a2fc3",
    "number": 14834,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: phalcon/phalcon#280\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\n**Q1**: **What does that mean?**\r\n**A1**: This means that already existing services in the container can be modified.\r\n\r\n**Q2**: **Are there any differences in modification between shared and non shared services?**\r\n**A2**: Yes. \r\n\r\n1. Non shared services can be changed even after they have been resolved.\r\n\r\n2. Shared services cannot be changed even after they have been resolved. That is, when creating a shared service, we polls all registered binders and passes this shared service to them. Once a shared service has passed into the container cache, it can no longer be modified by the binders.\r\n\r\n**Q3**: **How it differs from the chain of methods ->remove(), ->get(), ->set().**\r\n**A3**: My implementation does not create/delete services, but only adds \"handlers\" that will be called when the service is created. In this way, we can avoid additional overhead.\r\n\r\n**Q4**: **Will it be useful in real projects**\r\n**Q4**: Yes.\r\n\r\n**Q5**: **How can I use this?**\r\n**Q5**: Very simply.\r\n\r\n**PersistentJsonResponseServiceProvider.php**\r\n```php\r\nuse Phalcon\\Di;\r\nuse Phalcon\\Http\\Response;\r\n\r\nclass PersistentJsonResponseBinder implements \\Phalcon\\Di\\ServiceProviderInterface\r\n{\r\n    public function register(Di $di): void\r\n    {\r\n        $di->rebind('response', function (Di $di, Response $response) {\r\n            $response->setJsonContent(['ok' => true]);\r\n        });\r\n    }\r\n}\r\n```\r\n\r\n_...I will not describe how to register a provider..._\r\n\r\n**IndexController.php**\r\n```php\r\nclass IndexController extends \\Phalcon\\Mvc\\Controller\r\n{\r\n    public function indexAction()\r\n    {\r\n        return $this->response; // { \"ok\": true }\r\n    }\r\n}\r\n```\r\n\r\nThanks\r\n**P.S** I apologize for my English.",
    "head_branch": "rebinder-4.1.x",
    "is_a_fork": true,
    "comments": [
      "Hmmm, why exactly we need this? I guess something new is always nice but I don't feel it, do you maybe have some examples of this feature existing in other frameworks or containers? ",
      "> Hmmm, why exactly we need this? I guess something new is always nice but I don't feel it, do you maybe have some examples of this feature existing in other frameworks or containers?\r\n\r\nYes. Laravel for example.\r\nhttps://github.com/laravel/framework/blob/6.x/src/Illuminate/Container/Container.php#L516",
      "Oh, finally",
      "In general I would like to see any real use case. Right now there is just example _how_ to use it but nothing about _why_ I should use it.",
      "@sergeyklay \r\n\r\n1. You can install some specific service in the container, and in the needed HMVC module you can extend this service without creating it. (Setting the headers in the service response, сhanging the template directory of the module Phalcon/Mvc/View etc)\r\n2. When you have some resource dependent unresolved service and you do not know if it will be called in the needed module. In this case, it can be extended instead of the usual replacement.\r\n3. Some custom service provider can extend the module provided from the Phalcon box instead of recreating it",
      "For example:\r\n\r\n**index.php**:\r\n```php\r\n$di = new Di();\r\n\r\n//common DI\r\n$di->setShared('volt', function () use ($di) {\r\n    $view = new \\Phalcon\\Mvc\\View\\Simple();\r\n    $view->setViewsDir('/path/to/common/template/directory');\r\n    return $view;\r\n});\r\n\r\n```\r\n\r\n**AdminModule.php**\r\n```php\r\nclass Module implements Phalcon\\Mvc\\ModuleDefinitionInterface\r\n{\r\n    public function registerServices($di)\r\n    {\r\n        // this will be done without resolving\r\n        $di->rebind('view', function ($di, \\Phalcon\\Mvc\\View\\Simple $view) {\r\n            $view->setViewsDir('/path/to/admin/templates/directory');\r\n        });\r\n    }\r\n}\r\n\r\n```",
      "I've run into a perfect use case for this today. So I have a **shared** `user` service in my DI. This service will return the user model of the current user, and this works well on the web front. \r\n\r\nA long time ago, I wrote a bunch of business logic that relied upon this user service. Now we have new features/tools that require CLI tasks that also need to be able to execute this same business logic.\r\n\r\nThe trouble is, these CLI tasks need to work across multiple users at a time, not just one user per process like the web application. Naturally, you'd assume you could just create a new method that does something like this.\r\n\r\n```php\r\npublic static function setUser(int $user_id): void\r\n{\r\n    $app = self::getInstance();        \r\n    $app->getDI()->setShared('user', function () use ($user_id) {\r\n        return UserModel::findFirstById($user_id);\r\n    });\r\n}\r\n```\r\n\r\nHowever, this doesn't reset the DI's`_sharedServices` cache. Now I totally get that we can just call `$app->getDI()->remove('user');`, but if I could have called `setShared` in the first place without having to remove it first, that'd have been far more convenient from the start. \r\n\r\nI've also only just gotten this far and read the code for this PR. I think calling `this->remove(name)` before we set the service (by calling `this->set`) is a far cleaner solution.\r\n\r\n",
      "Thank you @TimurFlush but I have to close this for now as we won't be able to include this in 4.1\r\nWhen we will refactor the DI this will be taken into consideration."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621279f18912b45d36a2fc4",
    "number": 14833,
    "body": "…con/issues/14783#issuecomment-583866414)\r\n\r\nHello!\r\n\r\n* Type: code quality \r\n* Link to issue: #14783\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nAdjusted tests to approach examples of issue\r\n\r\n",
    "head_branch": "fixes/issue-14783",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14833 from ruudboon/fixes/issue-14783\n\nAdjusted test according to feedback (#14783)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662127a018912b45d36a2fc5",
    "number": 14831,
    "body": "#14829",
    "head_branch": "segfault-check-4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662127a118912b45d36a2fc6",
    "number": 14830,
    "body": "#14829",
    "head_branch": "segfault-check-4.0.x",
    "is_a_fork": true,
    "comments": [
      "You sent this to master @TimurFlush This needs to go either to 4.0.x or 4.1.x",
      "> You sent this to master @TimurFlush This needs to go either to 4.0.x or 4.1.x\r\n\r\nI'm sorry, it's my code fail"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662127a318912b45d36a2fc7",
    "number": 14828,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [x] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\Storage\\Adapter\\*` to no longer accept the `serializer` option as it was clashing with the factory\r\n\r\nThanks\r\n\r\n",
    "head_branch": "cache-serializer-options",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[cache] - Updated changelog"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662127a418912b45d36a2fc8",
    "number": 14827,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #14734 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nAdded new Query Builder, as well as a factory, for the Data Mapper implementation supporting CRUD with bound parameters\r\n  - `Phalcon\\DataMapper\\Query\\Bind`\r\n  - `Phalcon\\DataMapper\\Query\\Delete`\r\n  - `Phalcon\\DataMapper\\Query\\Insert`\r\n  - `Phalcon\\DataMapper\\Query\\Select`\r\n  - `Phalcon\\DataMapper\\Query\\Update`\r\n  - `Phalcon\\DataMapper\\Query\\QueryFactory`\r\nThis component can be used to create SQL statements using a fluent interface. Optionally the statements can be executed from the builder itself using the `DataMapper\\Pdo` connection. \r\n\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14734-dm-query",
    "is_a_fork": true,
    "comments": [
      "@sergeyklay I made a merge mistake and the crypt tests came in here. I will remove them and create a separate PR for them."
    ],
    "commit_messages": [
      "[#14734] - Minor change to the factory"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662127a518912b45d36a2fc9",
    "number": 14825,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue: #14783\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nOnly a test to prove issue #14783. ",
    "head_branch": "fixes/issue-14783",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14825 from ruudboon/fixes/issue-14783\n\nFixes/issue 14783"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662127a618912b45d36a2fca",
    "number": 14824,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #14733 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nAdded new PDO wrapper for the Data Mapper implementation, with decorated instance, locator and profiler\r\n  - `DM\\Connection`\r\n  - `DM\\Connection\\Decorated`\r\n  - `DM\\Profiler\\Profiler`\r\n  - `DM\\Profiler\\MemoryLogger`\r\n  - `DM\\ConnectionLocator`\r\nThis component will be used in the Data Mapper implementation but can be used as a stand alone component for PDO connections.\r\n\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14733-dm-connection-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[#14733] - Renaming DM to DataMapper"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662127a718912b45d36a2fcb",
    "number": 14821,
    "body": "Hello!\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nAdd new backer (github)\r\n\r\nThanks\r\n\r\n",
    "head_branch": "backers-upd",
    "is_a_fork": true,
    "comments": [
      "@Arhell thnx!"
    ],
    "commit_messages": [
      "Merge pull request #14821 from Arhell/backers-upd\n\nadd backer (github) [ci skip]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662127a818912b45d36a2fcc",
    "number": 14820,
    "body": "Hello team!\r\nI finished tests about Phalcon/Assets/Asset/*.\r\n\r\n\r\n* Type: code quality\r\n* Link to issue: #13655\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nThanks\r\n\r\n",
    "head_branch": "update_test_asset_css",
    "is_a_fork": true,
    "comments": [
      "Thnx @jenovateurs Will merge if all test pass."
    ],
    "commit_messages": [
      "Merge pull request #14820 from les-enovateurs/update_test_asset_css\n\nFinish test Phalcon/Assets/Asset/*"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662127a918912b45d36a2fcd",
    "number": 14819,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nAdded method to set callback handler to pre-format action name in Annotation Router.\r\n**Default behavior** of action name processing:\r\n`PostsController::getLastUpdatedAction()` equals to uri `/posts/getlastupdated` via strtolower formatting.\r\n**New behavior** allows to set callback, which does user defined pre-format to action name:\r\n`PostsController::getLastUpdatedAction()` equals to uri `/posts/get-last-updated` via uncamelize passed as callback\r\n\r\nThanks\r\n\r\n",
    "head_branch": "f/annotations-router-custom-action-preformat",
    "is_a_fork": true,
    "comments": [
      "> @BeMySlaveDarlin could you please update the 4.1 changelog with this functionality?\r\n> \r\n> Other than that this is ready\r\n\r\nLooks like it was lost through rebase. Added.",
      "Thank you @BeMySlaveDarlin "
    ],
    "commit_messages": [
      "Updated CHANGELOG-4.1"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662127aa18912b45d36a2fce",
    "number": 14812,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #14794 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\n**This PR duplicates PR #14799** \r\n\r\nThanks\r\n\r\n",
    "head_branch": "debug-4.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "New feature #14794"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662127ab18912b45d36a2fcf",
    "number": 14811,
    "body": "Recompiled ext\r\nRemoved obsolete header files.",
    "head_branch": "4.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Updating ext"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662127ac18912b45d36a2fd0",
    "number": 14809,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/14801\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\n**This PR is a replacement for the following PRs: #14802, #14808**\r\n\r\nThanks\r\n",
    "head_branch": "blacklist-4.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Test for the blackList() method #14801"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662127ad18912b45d36a2fd1",
    "number": 14808,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/14801\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nThanks\r\n\r\n",
    "head_branch": "blacklist-4.1.x",
    "is_a_fork": true,
    "comments": [
      "See #14802 as well",
      "Can you sent it to the 4.1.x branch?",
      "> Can you sent it to the 4.1.x branch?\r\n\r\nOh my god, i'm sorry\r\nOne moment please\r\n\r\n> See #14802 as well\r\n\r\nThere's a lot of conflict.",
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14808?src=pr&el=h1) Report\n> Merging [#14808](https://codecov.io/gh/phalcon/cphalcon/pull/14808?src=pr&el=desc) into [master](https://codecov.io/gh/phalcon/cphalcon/commit/d234b7b422b264e513959c2ecf7b75f1523be125?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##           master   #14808      +/-   ##\n==========================================\n+ Coverage   67.99%      68%   +<.01%     \n==========================================\n  Files         483      483              \n  Lines      111463   111479      +16     \n==========================================\n+ Hits        75789    75808      +19     \n+ Misses      35674    35671       -3\n```\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662127ae18912b45d36a2fd2",
    "number": 14805,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nAdded method to set callback handler to pre-format action name in Annotation Router.\r\nDefault behavior of action name processing:\r\n`PostsController::getLastUpdatedAction()` equals to uri `/posts/getlastupdated` via strtolower formatting.\r\nNew feature allows to set callback, which does user defined pre-format to action name:\r\n`PostsController::getLastUpdatedAction()` equals to uri `/posts/get-last-updated` via uncamelize passed as callback\r\n\r\nThanks\r\n\r\n",
    "head_branch": "f/annotations-router-custom-action-preformat",
    "is_a_fork": true,
    "comments": [
      "Looks good to me. @BeMySlaveDarlin thnx",
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14805?src=pr&el=h1) Report\n> :exclamation: No coverage uploaded for pull request base (`4.1.x@51960bd`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).\n> The diff coverage is `68.56%`.\n\n\n```diff\n@@           Coverage Diff            @@\n##             4.1.x   #14805   +/-   ##\n========================================\n  Coverage         ?   68.04%           \n========================================\n  Files            ?      480           \n  Lines            ?   111866           \n  Branches         ?        0           \n========================================\n  Hits             ?    76123           \n  Misses           ?    35743           \n  Partials         ?        0\n```\n",
      "> There are not related failures (due to PHP setup on Travis). But in general looks good to me\r\n\r\nFixed all issues, build successfull",
      "Can you rebase your pull @BeMySlaveDarlin ",
      "> Can you rebase your pull @BeMySlaveDarlin\r\n\r\nDone",
      "Actually, there is a mixup with the rebase. The tests fail because there are two declarations of `insert` within the `InvoicesMigration`. @BeMySlaveDarlin Do you mind rebasing again and having a look on where the duplication is?",
      "Messed up fork with rebase over 67 commits, recreating PR, sorry =)"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662127af18912b45d36a2fd3",
    "number": 14804,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14804\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nIt is not possible to create table with **NULL** columns.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix/add-null-column",
    "is_a_fork": false,
    "comments": [
      "@Jeckerson Travis failed but don't think it's caused by your changes. I restarted the build let's wait for that."
    ],
    "commit_messages": [
      "Updated CHANGELOG-4.0.md [ci skip]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662127b118912b45d36a2fd4",
    "number": 14803,
    "body": "Hello!\r\n\r\n* Type: enhancement - tests\r\n* Link to issue: #14779 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nCreated `database` suite to be run with `--env mysql` parameter against the target RDBMS\r\nKept integration tests where they are unless they access the database\r\nMoved potential db tests in a `tocheck` folder so that we can slowly work and enable them.\r\nSuite runs `sqlite` and `mysql` tests. `pgsql` suite needs work (tables are not created? not sure for now)\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14783-integration-suite-rework",
    "is_a_fork": true,
    "comments": [
      "Few lines of feedback. But in general great work @niden ",
      "@ruudboon I will check those tonight maybe tomorrow. I have a bit more refactoring to do with the services of the DiTrait and this would be done"
    ],
    "commit_messages": [
      "PHPCS"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662127b818912b45d36a2fd5",
    "number": 14802,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/14801\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nThanks\r\n\r\n",
    "head_branch": "black-list-4.1.x",
    "is_a_fork": true,
    "comments": [
      "@ruudboon Is it normal that test have failed? ",
      "Looks like something is messed up in the 4.1.x branch. Will try to make some time this weekend to sync 4.1 with 4.0 if you can rebase after that we can check again.",
      "@ruudboon, I'll try",
      "@TimurFlush wait a bit. We will merge 4.0 -> 4.1 (hopefully) today or tomorrow and then you can rebase. \r\n",
      "@niden okay"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662127b918912b45d36a2fd6",
    "number": 14800,
    "body": "Hello!\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nsynchronization changelog\r\n\r\nThanks\r\n\r\n",
    "head_branch": "upd-res",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14800 from Arhell/upd-res\n\nresources update"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662127ba18912b45d36a2fd7",
    "number": 14799,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/14794\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\n**I'm waiting for your review or approval (:**\r\n\r\nThanks\r\n\r\n",
    "head_branch": "debug-pr-fresh-rep",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662127bb18912b45d36a2fd8",
    "number": 14798,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14797\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix/#14797-create-table-default",
    "is_a_fork": false,
    "comments": [
      "Code looks good to me. Can be merged if tests pass",
      "Not sure why that windows build failed.."
    ],
    "commit_messages": [
      "Merge pull request #14798 from phalcon/fix/#14797-create-table-default\n\n#14797 - Column default value"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662127bc18912b45d36a2fd9",
    "number": 14796,
    "body": "Hello team!\r\nI've got some tests for you. I complete the Annotation/Collection part.\r\n\r\n* Type: code quality\r\n* Link to issue: #13655 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nThanks\r\n\r\n",
    "head_branch": "annotation_collection",
    "is_a_fork": true,
    "comments": [
      "Thank you @jenovateurs "
    ],
    "commit_messages": [
      "#13655 - Add test Annotation/Collection/*"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662127c318912b45d36a2fda",
    "number": 14793,
    "body": "…cacheLevel to one, add method to return current model setup\r\n\r\nHello!\r\n\r\n* Type: bug fix | new feature\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nIt does a few things:\r\n- removes global `ast_cache` which is not used anywhere in a code\r\n- add way to set `cacheLevel` in `Phalcon\\Mvc\\Model::setup()` - it was documented but wouldn't be set at all\r\n- add method to destroy internal parser cache - for debugging purposes mostly\r\n- add `Phalcon\\Mvc\\Model::getModelSetup()` to return current setup\r\n\r\nThanks\r\n\r\n",
    "head_branch": "4.1.x-model-setup-fixes",
    "is_a_fork": true,
    "comments": [
      "@sergeyklay Can you check this please?",
      "Please take into account this:\r\nhttps://github.com/phalcon/cphalcon/blob/d234b7b422b264e513959c2ecf7b75f1523be125/config.json#L55-L62",
      "> Please take into account this:\r\n> https://github.com/phalcon/cphalcon/blob/d234b7b422b264e513959c2ecf7b75f1523be125/config.json#L55-L62\r\n\r\nDidn't change there anything, what you mean? I left it as it is. Only removed anything relations to ast_cache from `phalcon_orm_destroy_cache`",
      "> > Please take into account this:\r\n> > https://github.com/phalcon/cphalcon/blob/d234b7b422b264e513959c2ecf7b75f1523be125/config.json#L55-L62\r\n> \r\n> Didn't change there anything, what you mean? I left it as it is. Only removed anything relations to ast_cache from `phalcon_orm_destroy_cache`\r\n\r\nNvm, my bad",
      "I will look on fails at evening or at weekend.",
      "@Jurigag Can you rebase and have look at the requested changes?\r\n",
      "@Jurigag could you please revisit this in the next few days so we can include this in the next release?"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662127c418912b45d36a2fdb",
    "number": 14792,
    "body": "Hello!\r\n\r\n* Type: bug fix | code quality\r\n* Link to issue:https://github.com/phalcon/cphalcon/issues/14791\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "4.0.x-test-phql-collision",
    "is_a_fork": true,
    "comments": [
      "We will include this in 5.0"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662127c518912b45d36a2fdc",
    "number": 14790,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/14787\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I have updated the relevant CHANGELOG\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix",
    "is_a_fork": true,
    "comments": [
      "Thank you @TimurFlush . "
    ],
    "commit_messages": [
      "Bugfix #14787"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662127c618912b45d36a2fdd",
    "number": 14789,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [X] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [X] I have checked that another pull request for this purpose does not exist\r\n- [X] I wrote some tests for this PR - https://github.com/shivammathur/test-setup-php/actions/runs/32727545\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change: This PR adds steps to cache required PHP extensions in macos build.\r\nWithout cache: https://github.com/phalcon/cphalcon/runs/415927082\r\nWith cache: https://github.com/phalcon/cphalcon/runs/415959493\r\n\r\nThanks\r\n",
    "head_branch": "4.0.x-macos-cache-extensions",
    "is_a_fork": true,
    "comments": [
      "You're a hero!\r\n",
      "@shivammathur Looks like the key needs some work",
      "Yes, I thought it would accept a `csv`, but it does not.",
      "@shivammathur Maybe we can create a hash based on the list?",
      "Yes, doing that",
      "Great work! Thnx @shivammathur "
    ],
    "commit_messages": [
      "Merge pull request #14789 from shivammathur/4.0.x-macos-cache-extensions\n\nCache extensions on macOS build."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662127c818912b45d36a2fde",
    "number": 14785,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue: #14775\r\n\r\nOur first step into moving our CI to Github Actions.\r\nThis pull adds\r\n- Codeception 4 upgrade + Codeception phalcon 4 module\r\n- Builds for PHP 7.2, 7,3 & 7.4 on Linux, MacOs & Windows (ts & nts)\r\n- Full testsuite run on Linux\r\n- Unit test & Cli on MacOS & Windows\r\n- Codecoverage\r\n- Docker-compose file for running tests locally\r\n\r\nWe keep AppVeyor and Travis running until we're sure all is working fine and all our features are implemented in Github actions. I would like to merge this so we can abandon the ci-tests branch and prevent sync'n every-time.\r\n \r\n\r\n\r\n",
    "head_branch": "4.0.x-ci-and-tests",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14784 from ruudboon/4.0.x-ci-and-tests\n\n4.0.x ci and tests"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662127c918912b45d36a2fdf",
    "number": 14784,
    "body": "Fixed Travis\r\nCleanup code \r\n",
    "head_branch": "4.0.x-ci-and-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14784 from ruudboon/4.0.x-ci-and-tests\n\n4.0.x ci and tests"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662127ca18912b45d36a2fe0",
    "number": 14782,
    "body": "Fixed codecoverage\r\ndd dll's to Artifacts\r\nFixed a few windows tests\r\nContinue on failure for osx and windows\r\nSetup tests on travis\r\n\r\nSee: #14775",
    "head_branch": "4.0.x-ci-and-tests",
    "is_a_fork": true,
    "comments": [
      "Merging this so that we can move forward with Actions. \r\n\r\nAs mentioned before next tasks:\r\n- Fix tests for osx/windows #14763 \r\n- Create stack trace on failure\r\n- Reduce the size of DLLs\r\n- Restructure the integration suite to run on a per driver #14779 \r\n\r\nPostgres tests fail on Travis but that is fine for now.\r\n\r\nGreat work buddy!\r\n"
    ],
    "commit_messages": [
      "Workaround"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662127cb18912b45d36a2fe1",
    "number": 14781,
    "body": "Fix of the issue, related by me\r\n\r\nBoolean is treat as isNumeric\r\n\r\nDoes not occur on phalcon 3.4.\r\n\r\nhttps://github.com/phalcon/cphalcon/issues/14722\r\n\r\nFix for now on php is describe here\r\n\r\nhttps://github.com/phalcon/cphalcon/issues/14722#issuecomment-578501004\r\n",
    "head_branch": "issue-14722",
    "is_a_fork": true,
    "comments": [
      "Excellent investigation. Thank you @tidytrax !",
      "I will add the CHANGELOG entry",
      "> Excellent investigation. Thank you @tidytrax !\r\n\r\nThanks, i will keep testing v4."
    ],
    "commit_messages": [
      "Fix Boolean Type\n\nRemove is numeric for boolean type\r\nRelated to this bug.\r\nhttps://github.com/phalcon/cphalcon/issues/14722"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662127cc18912b45d36a2fe2",
    "number": 14780,
    "body": "Fixed codecoverage\r\ndd dll's to Artifacts\r\nFixed a few windows tests\r\n",
    "head_branch": "4.0.x-ci-and-tests",
    "is_a_fork": true,
    "comments": [
      "Once this passes I think we should merge it and move forward. OSX/Windows tests can fail (for now) and we can start working on fixing them or adjusting the run. \r\n\r\nAlso this would help us with the #14779 to enable integration tests on a per RDBMs"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662127d318912b45d36a2fe3",
    "number": 14777,
    "body": "Release",
    "head_branch": "4.0.x",
    "is_a_fork": false,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14777?src=pr&el=h1) Report\n> Merging [#14777](https://codecov.io/gh/phalcon/cphalcon/pull/14777?src=pr&el=desc) into [master](https://codecov.io/gh/phalcon/cphalcon/commit/3d633fa8f5a302e16d14575ecc3bf312637dcd77?src=pr&el=desc) will **increase** coverage by `0.01%`.\n> The diff coverage is `64.73%`.\n\n\n```diff\n@@            Coverage Diff             @@\n##           master   #14777      +/-   ##\n==========================================\n+ Coverage   67.98%   67.99%   +0.01%     \n==========================================\n  Files         483      483              \n  Lines      111435   111463      +28     \n==========================================\n+ Hits        75758    75789      +31     \n+ Misses      35677    35674       -3\n```\n"
    ],
    "commit_messages": [
      "Optimized build files for 4.0.3"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662127d518912b45d36a2fe4",
    "number": 14776,
    "body": "More typos, uppercase acronyms, consistency with technology names (all uppercase now).",
    "head_branch": "typos2",
    "is_a_fork": true,
    "comments": [
      "Love these type of commits. Thnx! Will check this after our release.",
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14776?src=pr&el=h1) Report\n> Merging [#14776](https://codecov.io/gh/phalcon/cphalcon/pull/14776?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/0c073e5d74a9fd7d1fc3aa20e73d0aa9ec0424b9?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@           Coverage Diff           @@\n##            4.0.x   #14776   +/-   ##\n=======================================\n  Coverage   67.99%   67.99%           \n=======================================\n  Files         483      483           \n  Lines      111463   111463           \n=======================================\n  Hits        75789    75789           \n  Misses      35674    35674\n```\n",
      "Thank you @Deathamns - Much appreciate the work"
    ],
    "commit_messages": [
      "More acronym fixes: SQL"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662127d718912b45d36a2fe5",
    "number": 14774,
    "body": "Hello!\r\n\r\n* Type: | code quality\r\n* Link to issue: #14772\r\n\r\nUpdated Pecl package to new release\r\n\r\n",
    "head_branch": "pecl-package-release",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14774?src=pr&el=h1) Report\n> Merging [#14774](https://codecov.io/gh/phalcon/cphalcon/pull/14774?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/9ce47d0b859c4dcecb592e7b957a784764de4f30?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@           Coverage Diff           @@\n##            4.0.x   #14774   +/-   ##\n=======================================\n  Coverage   67.99%   67.99%           \n=======================================\n  Files         483      483           \n  Lines      111463   111463           \n=======================================\n  Hits        75789    75789           \n  Misses      35674    35674\n```\n"
    ],
    "commit_messages": [
      "Merge pull request #14774 from ruudboon/pecl-package-release\n\nUpdated package to 4.0.3 and added release notes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662127d818912b45d36a2fe6",
    "number": 14773,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14705\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\n",
    "head_branch": "issue-config-14705",
    "is_a_fork": true,
    "comments": [
      "Closing this for now. Needs some more investigation to behave in the same way PHP does."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662127d918912b45d36a2fe7",
    "number": 14771,
    "body": "Hello!\r\n\r\n* Type: code quality \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nBumped Zephir to latest\r\n",
    "head_branch": "bump-zephir",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14771?src=pr&el=h1) Report\n> Merging [#14771](https://codecov.io/gh/phalcon/cphalcon/pull/14771?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/9ce47d0b859c4dcecb592e7b957a784764de4f30?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@           Coverage Diff           @@\n##            4.0.x   #14771   +/-   ##\n=======================================\n  Coverage   67.99%   67.99%           \n=======================================\n  Files         483      483           \n  Lines      111463   111463           \n=======================================\n  Hits        75789    75789           \n  Misses      35674    35674\n```\n"
    ],
    "commit_messages": [
      "Merge pull request #14771 from ruudboon/bump-zephir\n\nBump Zephir to 0.12.16"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662127da18912b45d36a2fe8",
    "number": 14770,
    "body": "phalcon/docs#2643\r\n\r\nAdded some changes to make it work on Win too.",
    "head_branch": "source-links",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14770?src=pr&el=h1) Report\n> Merging [#14770](https://codecov.io/gh/phalcon/cphalcon/pull/14770?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/e0c99ab6426498681b5f30a8fc267b4db94a120f?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@           Coverage Diff           @@\n##            4.0.x   #14770   +/-   ##\n=======================================\n  Coverage   67.99%   67.99%           \n=======================================\n  Files         483      483           \n  Lines      111463   111463           \n=======================================\n  Hits        75786    75786           \n  Misses      35677    35677\n```\n",
      "Thnx. Looks good to me. Unfortunately not able to test it (running on linux and MacOS) ",
      "Sadly I don't have Windows either. Wondering if anyone can help test this",
      "The GitHub links were the main issue here, Win fixes are just an extra, but they were necessary for me to test, as I used Win. Meaning, it shouldn't hold you back, as you won't lose anything, since it didn't work before.",
      "@Deathamns I can test it this afternoon. So I leave it open for a few more hours. "
    ],
    "commit_messages": [
      "Merge pull request #14770 from Deathamns/source-links\n\nFix [Source on GitHub] links. Looks like it's working"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662127db18912b45d36a2fe9",
    "number": 14768,
    "body": "phalcon/docs#2644",
    "head_branch": "typos",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14768?src=pr&el=h1) Report\n> Merging [#14768](https://codecov.io/gh/phalcon/cphalcon/pull/14768?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/e0c99ab6426498681b5f30a8fc267b4db94a120f?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@           Coverage Diff           @@\n##            4.0.x   #14768   +/-   ##\n=======================================\n  Coverage   67.99%   67.99%           \n=======================================\n  Files         483      483           \n  Lines      111463   111463           \n=======================================\n  Hits        75786    75786           \n  Misses      35677    35677\n```\n"
    ],
    "commit_messages": [
      "Merge pull request #14768 from Deathamns/typos\n\nTypos fixed"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662127dc18912b45d36a2fea",
    "number": 14762,
    "body": "Hello team!\r\nI'm happy to tell you that I have tested Annotation class.\r\nBut I have some problems about constants. \r\nI can't get the value of PHANNOT_T_ARRAY, PHANNOT_T_STRING, ... \r\nThese constants come from https://github.com/phalcon/cphalcon/blob/a48b31967a1ce27c10cbed61bee42e0c90addc86/ext/phalcon/annotations/scanner.h\r\nI have made a private property to handle this but I'm not proud of it.\r\nAny ideas ?\r\nThanks\r\n\r\n* Type: code quality\r\n* Link to issue: #13655\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nThanks\r\n\r\n",
    "head_branch": "annotations_test",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14762?src=pr&el=h1) Report\n> Merging [#14762](https://codecov.io/gh/phalcon/cphalcon/pull/14762?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/33608c423e9d3d3078648d131bacda4aaef757e5?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14762      +/-   ##\n==========================================\n+ Coverage   67.97%   67.98%   +<.01%     \n==========================================\n  Files         483      483              \n  Lines      111435   111434       -1     \n==========================================\n+ Hits        75752    75760       +8     \n+ Misses      35683    35674       -9\n```\n",
      "Great work @jenovateurs I think we need to rewrite some constants later but let's establish some standards for that first",
      "Thank you @jenovateurs ",
      "Thanks @ruudboon and @niden :-)"
    ],
    "commit_messages": [
      "Merge pull request #14762 from les-enovateurs/annotations_test\n\n#13655 - All tests for Annotations\\Annotation"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662127dd18912b45d36a2feb",
    "number": 14761,
    "body": "Sync with 4.0 branch",
    "head_branch": "4.0.x-ci-and-tests",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14761?src=pr&el=h1) Report\n> Merging [#14761](https://codecov.io/gh/phalcon/cphalcon/pull/14761?src=pr&el=desc) into [4.0.x-ci-and-tests](https://codecov.io/gh/phalcon/cphalcon/commit/a5f40088856f528b62cf35a72b78d5f5daf42795?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@                  Coverage Diff                   @@\n##           4.0.x-ci-and-tests   #14761      +/-   ##\n======================================================\n+ Coverage               67.97%   67.98%   +<.01%     \n======================================================\n  Files                     483      483              \n  Lines                  111435   111434       -1     \n======================================================\n+ Hits                    75752    75757       +5     \n+ Misses                  35683    35677       -6\n```\n"
    ],
    "commit_messages": [
      "Merge pull request #14761 from ruudboon/4.0.x-ci-and-tests\n\nSync with 4.0 branch"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662127de18912b45d36a2fec",
    "number": 14759,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #14694\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nDuring writing we lock the file and during reading we wait for the file to be unlocked.\r\n",
    "head_branch": "fix-session-issue-14694",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14759?src=pr&el=h1) Report\n> Merging [#14759](https://codecov.io/gh/phalcon/cphalcon/pull/14759?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/fdaa9c3604d0832535fe6dec66f06d7048b175f4?src=pr&el=desc) will **decrease** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14759      +/-   ##\n==========================================\n- Coverage   67.99%   67.99%   -0.01%     \n==========================================\n  Files         483      483              \n  Lines      111464   111463       -1     \n==========================================\n- Hits        75787    75786       -1     \n  Misses      35677    35677\n```\n"
    ],
    "commit_messages": [
      "Merge branch '4.0.x' into fix-session-issue-14694"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662127df18912b45d36a2fed",
    "number": 14758,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14730\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nRelated - phalcon/docs#2647\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix/#14730-primary-key-string",
    "is_a_fork": false,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14758?src=pr&el=h1) Report\n> Merging [#14758](https://codecov.io/gh/phalcon/cphalcon/pull/14758?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/c00700985fd93f44e755536a701b2e635d4c9427?src=pr&el=desc) will **decrease** coverage by `<.01%`.\n> The diff coverage is `64.67%`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14758      +/-   ##\n==========================================\n- Coverage   67.99%   67.99%   -0.01%     \n==========================================\n  Files         483      483              \n  Lines      111709   111461     -248     \n==========================================\n- Hits        75962    75789     -173     \n+ Misses      35747    35672      -75\n```\n",
      "Related - phalcon/docs#2647",
      "Btw, PR title doesn't reflects actual changes",
      "Title changed"
    ],
    "commit_messages": [
      "Merge pull request #14758 from phalcon/fix/#14730-primary-key-string\n\n#14730 - Add tests for findFirst() with primary key as a string"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662127e018912b45d36a2fee",
    "number": 14757,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: Fixed #14756\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nWithout doing a file exists check we aren't able to detect if extension is set.\r\nI would like to make the users responsibility to not add the extension like it's described in the docs. \r\n",
    "head_branch": "fix-14756-ini",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14757?src=pr&el=h1) Report\n> Merging [#14757](https://codecov.io/gh/phalcon/cphalcon/pull/14757?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/6839a15d8dfe3e877c18f55143c44389d4462df3?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14757      +/-   ##\n==========================================\n+ Coverage   67.97%   67.98%   +<.01%     \n==========================================\n  Files         483      483              \n  Lines      111435   111434       -1     \n==========================================\n+ Hits        75752    75757       +5     \n+ Misses      35683    35677       -6\n```\n"
    ],
    "commit_messages": [
      "Merge pull request #14757 from ruudboon/fix-14756-ini\n\nFixed issue 14756 - File not found if path contains ."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662127e118912b45d36a2fef",
    "number": 14752,
    "body": "Sync with 4.0.x branch",
    "head_branch": "test-on-github-actions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662127e218912b45d36a2ff0",
    "number": 14751,
    "body": "Hello team!\r\nSome more tests units.\r\n\r\n* Type: code quality\r\n* Link to issue: #13655\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "annotation_apcu",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14751?src=pr&el=h1) Report\n> Merging [#14751](https://codecov.io/gh/phalcon/cphalcon/pull/14751?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/33608c423e9d3d3078648d131bacda4aaef757e5?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14751      +/-   ##\n==========================================\n+ Coverage   67.97%   67.98%   +<.01%     \n==========================================\n  Files         483      483              \n  Lines      111435   111435              \n==========================================\n+ Hits        75752    75758       +6     \n+ Misses      35683    35677       -6\n```\n",
      "@jenovateurs Thnx! If test passes we can merge this.",
      "Thank you @jenovateurs "
    ],
    "commit_messages": [
      "delete useless delete file and check if content exist in Apcu"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662127e318912b45d36a2ff1",
    "number": 14750,
    "body": "Hello!\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\ngithub sponsors upd\r\n\r\nThanks\r\n\r\n",
    "head_branch": "upd-github-sponsors",
    "is_a_fork": true,
    "comments": [
      "~If we're updating. Maybe we can add some more? I see 11 in Github and how are the Opencollective ones added?~",
      "~@Arhell Can we update the links to Github as well? Since people are already on Github the probably will easier make the step to back us. https://github.com/sponsors/phalcon~"
    ],
    "commit_messages": [
      "Merge pull request #14750 from Arhell/upd-github-sponsors\n\nupd github sponsors [ci skip]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662127e418912b45d36a2ff2",
    "number": 14749,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nFixed issue with non existing interface used\r\n",
    "head_branch": "stubs-errors",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14749?src=pr&el=h1) Report\n> Merging [#14749](https://codecov.io/gh/phalcon/cphalcon/pull/14749?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/224a25bbf7c0e59b662ff98a0d778cc4f7a44138?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14749      +/-   ##\n==========================================\n+ Coverage   67.97%   67.98%   +<.01%     \n==========================================\n  Files         483      483              \n  Lines      111435   111435              \n==========================================\n+ Hits        75752    75758       +6     \n+ Misses      35683    35677       -6\n```\n"
    ],
    "commit_messages": [
      "Merge branch '4.0.x' into stubs-errors"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662127e518912b45d36a2ff3",
    "number": 14748,
    "body": "Hello team!\r\nI hope that this bug fix will work:\r\n\r\n- I check if the logString is in the log file.\r\n\r\n- I also check if the level of the log is present.\r\n\r\n- Then I get the time in the log file and compare it with the time when the log is triggered.\r\n\r\nIf the difference between the two is less than 60, the test is passed.\r\n\r\n* Type: bug fix\r\n* Link to issue: #14717\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nThanks\r\n\r\n",
    "head_branch": "update_log_test",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14748?src=pr&el=h1) Report\n> Merging [#14748](https://codecov.io/gh/phalcon/cphalcon/pull/14748?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/33608c423e9d3d3078648d131bacda4aaef757e5?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@           Coverage Diff           @@\n##            4.0.x   #14748   +/-   ##\n=======================================\n  Coverage   67.97%   67.97%           \n=======================================\n  Files         483      483           \n  Lines      111435   111435           \n=======================================\n  Hits        75752    75752           \n  Misses      35683    35683\n```\n",
      "@jenovateurs Thnx!"
    ],
    "commit_messages": [
      "Merge pull request #14748 from les-enovateurs/update_log_test\n\n#14717 - Log Test - Compare seconds"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662127e618912b45d36a2ff4",
    "number": 14747,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #14743 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\Mvc\\Model\\Binder` to now correctly call `has` and `set` on the cache object\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14743-binder-cache",
    "is_a_fork": true,
    "comments": [
      "@niden Phpcs was a Github hick-up. Maybe someone flooded it a bit ;)",
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14747?src=pr&el=h1) Report\n> Merging [#14747](https://codecov.io/gh/phalcon/cphalcon/pull/14747?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/33608c423e9d3d3078648d131bacda4aaef757e5?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@           Coverage Diff           @@\n##            4.0.x   #14747   +/-   ##\n=======================================\n  Coverage   67.97%   67.97%           \n=======================================\n  Files         483      483           \n  Lines      111435   111435           \n=======================================\n  Hits        75752    75752           \n  Misses      35683    35683\n```\n"
    ],
    "commit_messages": [
      "[#14743] - Updated the changelog"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662127e818912b45d36a2ff5",
    "number": 14746,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #14871 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change: It adds `getHandler` method to `LazyLoader` so we can real handler. Right now it's not possible. \r\n\r\nThanks\r\n\r\n",
    "head_branch": "4.1.x-lazy-loader-get-handler",
    "is_a_fork": true,
    "comments": [
      "Any idea why this certain test fails?",
      "> Any idea why this certain test fails?\r\n\r\nHmm not directly. Currently working on a backup laptop so can't easily test it for you. Maybe you stumbled on a bug as well?",
      "Maybe, will check this when have a time to compile phalcon 4 and run a test. But it seems that whole Micro then isn't working as expected.",
      "Closing in favor of https://github.com/phalcon/cphalcon/pull/14872"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662127e918912b45d36a2ff6",
    "number": 14745,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change: It adds `getHandler` method on `Phalcon\\Mvc\\Micro\\LazyLoader`. This way you can return an actual object handling your endpoint. Since people mostly uses controllers as handlers it could be viable to clear controllers after any action(like added properties to controllers from injectable class).\r\n\r\nThanks\r\n\r\n",
    "head_branch": "4.0.x-add-lazy-loader-handler-get",
    "is_a_fork": true,
    "comments": [
      "@Jurigag Thank you for this. Can you please rebase this and send it to the 4.1 branch? "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662127ea18912b45d36a2ff7",
    "number": 14744,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n\r\nMerge master to 4.0.x so changelog changes are synced",
    "head_branch": "master",
    "is_a_fork": false,
    "comments": [
      "Can you rebase please. After that it is good to go. There are entries in 4.0.3 (fixes)"
    ],
    "commit_messages": [
      "Update change log"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662127eb18912b45d36a2ff8",
    "number": 14742,
    "body": "Hello!\r\n\r\n* Type: bug fix | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\n![image](https://user-images.githubusercontent.com/3289702/72801375-45cfab80-3c41-11ea-9bb5-be82aa12c08d.png)\r\n\r\n![image](https://user-images.githubusercontent.com/3289702/72801390-4f591380-3c41-11ea-89f3-09a85c087445.png)\r\n\r\n![image](https://user-images.githubusercontent.com/3289702/72801410-5b44d580-3c41-11ea-8bc2-59ade58d5a2b.png)\r\n\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix-comments-gen-api-docs",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Update generate-api-docs.php [ci skip]"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662127ec18912b45d36a2ff9",
    "number": 14740,
    "body": "Hello!\r\nDelete tests useless and empty.\r\nAdd new tests unit.\r\n\r\n* Type: code quality\r\n* Link to issue: #13655\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nThanks\r\n\r\n",
    "head_branch": "tests_4.0.x",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14740?src=pr&el=h1) Report\n> Merging [#14740](https://codecov.io/gh/phalcon/cphalcon/pull/14740?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/04a62075d69b117a567d5f805681b24d0e09d958?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14740      +/-   ##\n==========================================\n+ Coverage   67.97%   67.97%   +<.01%     \n==========================================\n  Files         483      483              \n  Lines      111435   111435              \n==========================================\n+ Hits        75749    75752       +3     \n+ Misses      35686    35683       -3\n```\n",
      "thnx @jenovateurs "
    ],
    "commit_messages": [
      "Merge pull request #14740 from les-enovateurs/tests_4.0.x\n\nDelete useless test because GetSet exists and add some test for GetSetEventManager. thnx @jenovateurs"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662127ed18912b45d36a2ffa",
    "number": 14739,
    "body": "Hello!\r\nDelete tests useless and empty.\r\nAdd new tests unit.\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nThanks\r\n\r\n",
    "head_branch": "add_new_test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662127ee18912b45d36a2ffb",
    "number": 14738,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nAs of support for php 7.x and introduction of \\Throwable, Phalcon Debug method of `onUncaughtException` should accept `\\Throwable` instead of `\\Exception`\r\n\r\nThanks\r\n",
    "head_branch": "fix-on-uncaught-exception-to-accept-throwable-instead-of-exception",
    "is_a_fork": true,
    "comments": [
      "@janisbiz can you rebase your branch please. It seems the checks did not pass also.",
      "@niden thanks for noting. As it turns out my local fork was from 2017, so everything was really outdated. Should be fine now.",
      "Thank you @janisbiz Once the tests are done I will merge this. Could you also be so kind as to update the changelog ? This will be in the 4.0.3 section",
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14738?src=pr&el=h1) Report\n> Merging [#14738](https://codecov.io/gh/phalcon/cphalcon/pull/14738?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/04a62075d69b117a567d5f805681b24d0e09d958?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@           Coverage Diff           @@\n##            4.0.x   #14738   +/-   ##\n=======================================\n  Coverage   67.97%   67.97%           \n=======================================\n  Files         483      483           \n  Lines      111435   111435           \n=======================================\n  Hits        75749    75749           \n  Misses      35686    35686\n```\n",
      "Thank you @janisbiz "
    ],
    "commit_messages": [
      "Update changelog"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662127f618912b45d36a2ffc",
    "number": 14732,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14723 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nChanged methods internally to use `mbstring` equivalent ones (`strtolower`, etc.) making `mbstring` a prerequisite\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14723-mbstring",
    "is_a_fork": true,
    "comments": [
      "Please add mbstring to the list of the required extension https://github.com/phalcon/cphalcon/blob/ef31ca8fdfdcbaeef24bd93a32107a43b6c1ba6b/config.json#L17-L26",
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14732?src=pr&el=h1) Report\n> :exclamation: No coverage uploaded for pull request base (`4.1.x@e252cfa`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).\n> The diff coverage is `n/a`.\n\n\n```diff\n@@           Coverage Diff            @@\n##             4.1.x   #14732   +/-   ##\n========================================\n  Coverage         ?   67.81%           \n========================================\n  Files            ?      480           \n  Lines            ?   111765           \n  Branches         ?        0           \n========================================\n  Hits             ?    75799           \n  Misses           ?    35966           \n  Partials         ?        0\n```\n",
      "Closing this. We need to run more tests since this impacts performance especially in the HTTP layer"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662127fd18912b45d36a2ffd",
    "number": 14731,
    "body": "Rebase from v4.0.x",
    "head_branch": "4.1.x",
    "is_a_fork": true,
    "comments": [
      "Closing - need proper rebase...",
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14731?src=pr&el=h1) Report\n> Merging [#14731](https://codecov.io/gh/phalcon/cphalcon/pull/14731?src=pr&el=desc) into [4.1.x](https://codecov.io/gh/phalcon/cphalcon/commit/4be361dbb81e5a0bbb14f317f90dec082c9259dc?src=pr&el=desc) will **increase** coverage by `0.25%`.\n> The diff coverage is `68.57%`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.1.x   #14731      +/-   ##\n==========================================\n+ Coverage   67.78%   68.03%   +0.25%     \n==========================================\n  Files         480      480              \n  Lines      111847   111805      -42     \n==========================================\n+ Hits        75819    76071     +252     \n+ Misses      36028    35734     -294\n```\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662127fe18912b45d36a2ffe",
    "number": 14729,
    "body": "Hello!\r\n\r\n* Type: new feature | code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFirst setup for running Tests on github.\r\n",
    "head_branch": "test-on-github-actions",
    "is_a_fork": true,
    "comments": [
      "@niden @sergeyklay Can you guys have a look to check if this is good enough to go into the phalcon:4.0.x-ci-and-tests branch?\r\nFrom there I would like to.\r\n- Fix tests\r\n- Optimise caching / performance\r\n- Better error handeling\r\n- Segfault backtrace (?)\r\n- Release automation (?)\r\n- Remove Travis / AppVeyor",
      "Approving this for now so that we can work on tests"
    ],
    "commit_messages": [
      "Merge pull request #14729 from ruudboon/test-on-github-actions\n\nGonna merge this into the branch so more people can work on it"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662127ff18912b45d36a2fff",
    "number": 14728,
    "body": "Hello!\r\n\r\n* Type: documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nDocblock updates\r\n\r\nThanks\r\n\r\n",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14728?src=pr&el=h1) Report\n> Merging [#14728](https://codecov.io/gh/phalcon/cphalcon/pull/14728?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/773fc812c6e52474cc474bab0f4435185e406d52?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@           Coverage Diff           @@\n##            4.0.x   #14728   +/-   ##\n=======================================\n  Coverage   67.97%   67.97%           \n=======================================\n  Files         483      483           \n  Lines      111435   111435           \n=======================================\n  Hits        75749    75749           \n  Misses      35686    35686\n```\n"
    ],
    "commit_messages": [
      "[4.0.x] - Docblock updates"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621280018912b45d36a3000",
    "number": 14727,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "4.0.x-test-cookie-construct",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621280118912b45d36a3001",
    "number": 14726,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "ws/3.4.x-test-cookie-construct",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621280318912b45d36a3002",
    "number": 14721,
    "body": "Hello!\r\n\r\n* Type: code quality | enhancement | bugfix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/14725\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nI could not reproduce this problem(https://github.com/phalcon/cphalcon/issues/14714), but I think this will solve it.\r\n\r\nEven if this does not help, I think this improvement will not be superfluous :)\r\n\r\nThanks\r\n\r\n",
    "head_branch": "stream-storage-getKeys",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14721?src=pr&el=h1) Report\n> Merging [#14721](https://codecov.io/gh/phalcon/cphalcon/pull/14721?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/8fbfa729cfc318ae27d39ec38b6abe79f221232a?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14721      +/-   ##\n==========================================\n+ Coverage   67.97%   67.97%   +<.01%     \n==========================================\n  Files         483      483              \n  Lines      111473   111435      -38     \n==========================================\n- Hits        75773    75749      -24     \n+ Misses      35700    35686      -14\n```\n",
      "@ekmst Can you add a test for this?",
      "@ruudboon Existing tests pass and I did not add.\r\n\r\nOk, add later",
      "I caught another bug when writing tests.\r\nIf we call the `Stream::getKeys()` method with empty data and using a prefix, we get an exception. The following is an example for this behavior:\r\n\r\n```php\r\n$serializer = new \\Phalcon\\Storage\\SerializerFactory();\r\n\r\n$adapter = new \\Phalcon\\Cache\\Adapter\\Stream(\r\n    $serializer,\r\n    [\r\n        'storageDir' => '/tmp/',\r\n        'prefix'     => 'pref-',       // The '/tmp/pref-' directory will not be created until we have written any data\r\n    ]\r\n);\r\n$adapter->getKeys();  // Throws an exception\r\n```\r\n\r\nWe get an exception:\r\n```\r\nFatal error: Uncaught UnexpectedValueException: RecursiveDirectoryIterator::__construct(/tmp/pref-/): failed to open dir: No such file or directory in ...\r\n```",
      "> I caught another mistake when writing tests.\r\n> If we call the `Stream::getKeys()` method with empty data and using a prefix, we get an exception. The following is an example for this behavior:\r\n> \r\n> ```\r\n> $serializer = new \\Phalcon\\Storage\\SerializerFactory();\r\n> \r\n> $adapter = new \\Phalcon\\Cache\\Adapter\\Stream(\r\n>     $serializer,\r\n>     [\r\n>         'storageDir' => '/tmp/',\r\n>         'prefix'     => 'pref-',       // The '/tmp/pref-' directory will not be created until we have written any data\r\n>     ]\r\n> );\r\n> $adapter->getKeys();  // Throws an exception\r\n> ```\r\n> \r\n> We get an exception:\r\n> \r\n> ```\r\n> Fatal error: Uncaught UnexpectedValueException: RecursiveDirectoryIterator::__construct(/tmp/pref-/): failed to open dir: No such file or directory in ...\r\n> ```\r\nLet's handle that in a new issue.\r\n",
      "> Let's handle that in a new issue.\r\n\r\n@ruudboon \r\nDone\r\n",
      "Please don't merge this yet. Looks like Travis missed this pull",
      "@ruudboon \r\nIn the last commit, only the change log was updated, so I explicitly skipped the building(`[skip ci]`).\r\n\r\nThe build was in the previous commit\r\nhttps://ci.appveyor.com/project/sergeyklay/cphalcon/builds/30181621\r\nand\r\nhttps://travis-ci.org/phalcon/cphalcon/builds/638377382?utm_source=github_status&utm_medium=notification\r\n\r\n",
      "@ekmst Sorry. I was sleeping ;)",
      "@ruudboon no problem :) ",
      "Thank you @ekmst !"
    ],
    "commit_messages": [
      "Updated changelog [skip ci]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621280418912b45d36a3003",
    "number": 14720,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #12196 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nChanged `Phalcon\\Db\\Adapter\\*::getRawSQLStatement()` to return the full SQL query with parameters\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T12196-raw-sql-statement",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14720?src=pr&el=h1) Report\n> Merging [#14720](https://codecov.io/gh/phalcon/cphalcon/pull/14720?src=pr&el=desc) into [4.1.x](https://codecov.io/gh/phalcon/cphalcon/commit/065082d51bfd9fdaee0c3027a5ad05d756144e3b?src=pr&el=desc) will **decrease** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.1.x   #14720      +/-   ##\n==========================================\n- Coverage   67.78%   67.78%   -0.01%     \n==========================================\n  Files         480      480              \n  Lines      111738   111847     +109     \n==========================================\n+ Hits        75746    75819      +73     \n- Misses      35992    36028      +36\n```\n"
    ],
    "commit_messages": [
      "[#12196] - Removed duplicate line"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621280518912b45d36a3004",
    "number": 14718,
    "body": "I create a regex to check date in the log entries. With the regex, I considered that the instruction may take a few seconds.\r\n\r\nHello team!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14717\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nThanks\r\n\r\n",
    "head_branch": "patch-12",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14718?src=pr&el=h1) Report\n> Merging [#14718](https://codecov.io/gh/phalcon/cphalcon/pull/14718?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/5f3ade1d482d15458f87c87abf7a8d9c048b1e4f?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@           Coverage Diff           @@\n##            4.0.x   #14718   +/-   ##\n=======================================\n  Coverage   67.97%   67.97%           \n=======================================\n  Files         483      483           \n  Lines      111473   111473           \n=======================================\n  Hits        75773    75773           \n  Misses      35700    35700\n```\n",
      "Thank you @jenovateurs "
    ],
    "commit_messages": [
      "Update runLoggerFile - Avoid seconds\n\nI create a regex to check date in the log entries. With the regex, I considered that the instruction may take a few seconds."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621280618912b45d36a3005",
    "number": 14716,
    "body": "Hello!\r\n\r\nSame bug fix PR as \r\nhttps://github.com/phalcon/cphalcon/pull/14715\r\nJust for v4.0.x\r\n\r\nThanks\r\n\r\n",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14716?src=pr&el=h1) Report\n> Merging [#14716](https://codecov.io/gh/phalcon/cphalcon/pull/14716?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/1e00affde3234e8ab8c83650d7fce4cd42ae2f22?src=pr&el=desc) will **decrease** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14716      +/-   ##\n==========================================\n- Coverage   67.97%   67.96%   -0.01%     \n==========================================\n  Files         483      483              \n  Lines      111461   111465       +4     \n==========================================\n  Hits        75761    75761              \n- Misses      35700    35704       +4\n```\n",
      "@alrieckert Thank you. Could you add a test for this as well?",
      "> @alrieckert Thank you. Could you add a test for this as well?\r\n\r\nMy lacking knowledge with codeception is letting me down. \r\n\r\nI've tried to setup the test environment and it also seems that nanobox is only available for registered users. New users can't sign up to download and install nanobox currently.\r\n\r\nUnfortunately I won't be able to provide a test for this",
      "@alrieckert No problem. Thnx for the pull. \r\n@niden @Jeckerson I wanna try to get this in for 4.0.3. Besides change log we need a test for this. Probably I can do this tomorrow. But if somebody else has time... :D",
      "@alrieckert Could you provide some code example?",
      "> @alrieckert Could you provide some code example?\r\n\r\nHi Jeckerson,\r\n\r\nPlease see below a stripped down version of my models and a simple select query.\r\n\r\nBasically I have 2 DB schemas:\r\n\r\n**Schema: hardware**\r\nContains all the hardware and hardware related tables\r\n\r\n**Schema: app**\r\nContains all my application specific tables\r\n\r\nFor this example, I have various _devices_ in the hardware schema that links to _sites_ in the app schema via the _device_to_site_ table in the app schema\r\n\r\n```php\r\nnamespace App\\Model\\Device;\r\n\r\nuse App\\Model\\Site\\Site;\r\nuse App\\Model\\Device\\DeviceToSite;\r\n\r\nclass Device extends \\Phalcon\\Mvc\\Model\r\n{\r\n    public function columnMap()\r\n    {\r\n        return [\r\n            'device_id'                 => 'id',\r\n            'device_serial'             => 'serial',\r\n            'device_name'               => 'name'\r\n        ];\r\n    }\r\n\r\n    public function initialize()\r\n    {\r\n        $this->setSource('device');\r\n        $this->setSchema('hardware');\r\n\r\n        $this->hasMany('id', DeviceToSite::class, 'device_id');\r\n        $this->hasManyToMany('id', DeviceToSite::class, 'device_id', 'site_id', Site::class, 'id');\r\n    }\r\n}\r\n```\r\n```php\r\nnamespace App\\Model\\Device;\r\n\r\nuse App\\Model\\Device\\Device;\r\nuse App\\Model\\Site\\Site;\r\n\r\nclass DeviceToSite extends \\Phalcon\\Mvc\\Model\r\n{\r\n    public function columnMap()\r\n    {\r\n        return [\r\n            'device_id'         => 'device_id',\r\n            'site_id'           => 'site_id'\r\n        ];\r\n    }\r\n\r\n    public function initialize()\r\n    {\r\n        $this->setSource('device_to_site');\r\n        $this->setSchema('app');\r\n\r\n        $this->belongsTo('device_id', Device::class, 'id');\r\n        $this->belongsTo('site_id', Site::class, 'id');\r\n    }\r\n}\r\n```\r\n\r\n```php\r\nnamespace App\\Model\\Site;\r\n\r\nclass Site extends \\Phalcon\\Mvc\\Model\r\n{\r\n    public function columnMap()\r\n    {\r\n        return [\r\n            'site_id'           => 'id',\r\n            'site_name'         => 'name'\r\n        ];\r\n    }\r\n\r\n    public function initialize()\r\n    {\r\n        $this->setSource('site');\r\n        $this->setSchema('app');\r\n    }\r\n}\r\n```\r\n\r\nMy MySQL connector points to the **hardware** schema by default\r\n```php\r\nuse Phalcon\\Db\\Adapter\\Pdo\\Mysql;\r\n\r\n$config = [\r\n    \"host\"     => \"localhost\",\r\n    \"dbname\"   => \"hardware\",\r\n    \"port\"     => 3306,\r\n    \"username\" => \"demo\",\r\n    \"password\" => \"demo\",\r\n];\r\n\r\n$connection = new Mysql($config);\r\n```\r\n\r\nA sample query would then look like this to get all the devices belonging to the site with ID 1\r\n\r\n```php\r\nuse App\\Model\\Device\\Device;\r\nuse App\\Model\\Device\\DeviceToSite;\r\nuse App\\Model\\Site\\Site;\r\n\r\n$devices = $this\r\n    ->modelsManager\r\n    ->createBuilder()\r\n    ->from(Device::class)\r\n    ->join(Site::class, '[' . Site::class . '].id = 1')\r\n    ->getQuery()\r\n    ->execute();    \r\n```\r\n\r\nEverything is working fine when the tables are in the same schema. Only when the tables are spread across multiple schemas, the query doesn't fully reference the intermediate model's schema, but rather uses the default schema as setup in the config\r\n\r\nThis PR seems to fix the issue in my application \r\n\r\nPlease let me know should you require more code or examples\r\n\r\n",
      "@Jeckerson if you have some time can you set up a test for this so that we can merge this?\r\n\r\n@alrieckert Thank you for the contribution",
      "I'm on it ;-)"
    ],
    "commit_messages": [
      "Merge pull request #14716 from alrieckert/4.0.x\n\nFix ManyToMany select query across multiple schemas. Test is in place so we can merge this. https://github.com/phalcon/cphalcon/pull/14854"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621280718912b45d36a3006",
    "number": 14715,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n\r\nWhen creating a ManyToMany relationship between models that are in different schemas on the same MySQL database, the select query doesn't fully reference the intermediate model's schema\r\n\r\nFor example, \r\n\r\n```\r\nSCHEMA: hardware\r\n===============\r\ncreate robot\r\n(\r\n    robot_id          int(10) auto_increment  primary key,\r\n    robot_name        varchar(100) null\r\n);\r\n\r\ncreate robot_part\r\n(\r\n    robot_part_id      int(10)  auto_increment  primary key,\r\n    robot_part_name    varchar(100) null\r\n);\r\n```\r\n```\r\nSCHEMA: app\r\n===============\r\ncreate table robot_to_robot_part\r\n(\r\n    robot_id          int(10) primary key,\r\n    robot_part_id     int(10) primary key,\r\n);\r\n\r\n```\r\n```\r\nclass Robot extends Model\r\n{\r\n    public function initialize()\r\n    {\r\n        $this->setSchema('hardware');\r\n        $this->setSource('robot');\r\n\r\n        $this->hasManyToMany(\r\n        $this->hasManyToMany(\r\n            'robot_id',\r\n            RobotToRobotPart::class,\r\n            'robot_id',\r\n            'robot_part_id',\r\n            RobotPart::class,\r\n            'robot_part_id'\r\n        );\r\n    }\r\n}\r\n\r\nclass RobotPart extends Model\r\n{\r\n    public function initialize()\r\n    {\r\n        $this->setSchema('hardware');\r\n        $this->setSource('robot_part');\r\n    }\r\n}\r\n\r\nclass RobotToRobotPart extends Model\r\n{\r\n    public function initialize()\r\n    {\r\n        $this->setSchema('app');\r\n        $this->setSource('robot_to_robot_part');\r\n    }\r\n}\r\n```\r\n\r\nNow doing a query\r\n```\r\n    $builder = $di->get(Services::MODELS_MANAGER)->createBuilder();\r\n    $builder->from(Robot::class);\r\n    $builder->join(RobotPart::class);\r\n    print_r($builder->getQuery()->getSql());\r\n```\r\n\r\nThe query is \r\n```\r\nSELECT \r\n    * \r\nFROM \r\n    `hardware`.`robot`  \r\nINNER JOIN \r\n    `robot_to_robot_part` ON `robot`.`robot_id` = `robot_to_robot_part`.`robot_id` \r\nINNER JOIN \r\n    `hardware`.`robot_part` ON `robot_to_robot_part`.`robot_part_id` = `robot_part`.`robot_part_id`\r\n```\r\n\r\nExpected query should reference the app schema as follow\r\n```\r\nSELECT \r\n    * \r\nFROM \r\n    `hardware`.`robot`  \r\nINNER JOIN \r\n    `app`. `robot_to_robot_part` ON `robot`.`robot_id` = `robot_to_robot_part`.`robot_id` \r\nINNER JOIN \r\n    `hardware`.`robot_part` ON `robot_to_robot_part`.`robot_part_id` = `robot_part`.`robot_part_id`\r\n```\r\n\r\nThis pull request fixes the intermediate model referencing when building the query\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.4.x",
    "is_a_fork": true,
    "comments": [
      "@alrieckert Thank you for this contribution and sorry for the delay.\r\n\r\nv3 is no longer supported. We can merge this so long as people need to understand that they will have to build the extension from the `ext` folder.\r\n\r\nAlso this needs tests in order to be merged.",
      "Probably make sense to close, as fix was merged in `4.0.x` branch."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621280818912b45d36a3007",
    "number": 14712,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14711 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\Mvc\\View\\Engine\\Volt` to produce the correct order of variables for the `join` filter \r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14771-volt-join",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14712?src=pr&el=h1) Report\n> Merging [#14712](https://codecov.io/gh/phalcon/cphalcon/pull/14712?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/1e00affde3234e8ab8c83650d7fce4cd42ae2f22?src=pr&el=desc) will **decrease** coverage by `0.02%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14712      +/-   ##\n==========================================\n- Coverage   67.97%   67.94%   -0.03%     \n==========================================\n  Files         483      483              \n  Lines      111461   111473      +12     \n==========================================\n- Hits        75761    75738      -23     \n- Misses      35700    35735      +35\n```\n"
    ],
    "commit_messages": [
      "Merge pull request #14712 from niden/T14771-volt-join\n\nT14711 volt join"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621280918912b45d36a3008",
    "number": 14710,
    "body": "Hello!\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nresources CHANGELOG-4.0.md update\r\n\r\nThanks\r\n\r\n",
    "head_branch": "resources-upd",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14710?src=pr&el=h1) Report\n> Merging [#14710](https://codecov.io/gh/phalcon/cphalcon/pull/14710?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/cc6366ce7aa5f75fee77c3e9cc3367dfdbbdd5b3?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@           Coverage Diff           @@\n##            4.0.x   #14710   +/-   ##\n=======================================\n  Coverage   67.96%   67.96%           \n=======================================\n  Files         483      483           \n  Lines      111483   111483           \n=======================================\n  Hits        75774    75774           \n  Misses      35709    35709\n```\n"
    ],
    "commit_messages": [
      "resources update"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621280a18912b45d36a3009",
    "number": 14709,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14708\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nFixed that tinyint is handled as int instead of boolean under MySQL \r\n",
    "head_branch": "fix-issue-14708-tinyint",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14709?src=pr&el=h1) Report\n> Merging [#14709](https://codecov.io/gh/phalcon/cphalcon/pull/14709?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/cc6366ce7aa5f75fee77c3e9cc3367dfdbbdd5b3?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14709      +/-   ##\n==========================================\n+ Coverage   67.96%   67.97%   +<.01%     \n==========================================\n  Files         483      483              \n  Lines      111483   111461      -22     \n==========================================\n- Hits        75774    75761      -13     \n+ Misses      35709    35700       -9\n```\n"
    ],
    "commit_messages": [
      "Update return type"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621280b18912b45d36a300a",
    "number": 14704,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #13128 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nAdded `preload` for Volt, which will send a HTTP/2 preload header\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T13128-http2-preload-2",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14704?src=pr&el=h1) Report\n> Merging [#14704](https://codecov.io/gh/phalcon/cphalcon/pull/14704?src=pr&el=desc) into [4.1.x](https://codecov.io/gh/phalcon/cphalcon/commit/318a19d82f4493e415637aa7e4ec281ee0db56b8?src=pr&el=desc) will **increase** coverage by `0.02%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.1.x   #14704      +/-   ##\n==========================================\n+ Coverage   67.76%   67.78%   +0.02%     \n==========================================\n  Files         480      480              \n  Lines      111654   111738      +84     \n==========================================\n+ Hits        75662    75746      +84     \n  Misses      35992    35992\n```\n"
    ],
    "commit_messages": [
      "[#13128] - Renamed prefetch to preload"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621281218912b45d36a300b",
    "number": 14703,
    "body": "Regenerated ext and build. Update to 4.0.2",
    "head_branch": "4.0.x",
    "is_a_fork": false,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14703?src=pr&el=h1) Report\n> Merging [#14703](https://codecov.io/gh/phalcon/cphalcon/pull/14703?src=pr&el=desc) into [master](https://codecov.io/gh/phalcon/cphalcon/commit/55577fd0831bd488cf34d27f9ef2cfe263270edf?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `68.18%`.\n\n\n```diff\n@@           Coverage Diff           @@\n##           master   #14703   +/-   ##\n=======================================\n  Coverage   67.96%   67.96%           \n=======================================\n  Files         483      483           \n  Lines      111483   111483           \n=======================================\n  Hits        75774    75774           \n  Misses      35709    35709\n```\n"
    ],
    "commit_messages": [
      "Merge pull request #14703 from phalcon/4.0.x\n\nRegenerated ext and build. Update to 4.0.2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621281a18912b45d36a300c",
    "number": 14702,
    "body": "\r\n",
    "head_branch": "4.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14702 from phalcon/4.0.x\n\n4.0.1"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621281b18912b45d36a300d",
    "number": 14701,
    "body": "Hello!\r\n\r\n* Type:  code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nAdded latest changelog to pecl release notes\r\n",
    "head_branch": "update-pecl-changelog",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14701?src=pr&el=h1) Report\n> Merging [#14701](https://codecov.io/gh/phalcon/cphalcon/pull/14701?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/a4745359a67fecc0a5719793f1c28eec763a5181?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@           Coverage Diff           @@\n##            4.0.x   #14701   +/-   ##\n=======================================\n  Coverage   67.96%   67.96%           \n=======================================\n  Files         483      483           \n  Lines      111483   111483           \n=======================================\n  Hits        75774    75774           \n  Misses      35709    35709\n```\n"
    ],
    "commit_messages": [
      "Merge pull request #14701 from ruudboon/update-pecl-changelog\n\nUpdate pecl changelog [skip-ci]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621281c18912b45d36a300e",
    "number": 14698,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #3135 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nAdded `Phalcon\\Http\\Request::getBestLanguageIso()` to return the base language if this is a specific one (`en` vs `en-US`) \r\n\r\nThanks\r\n\r\n",
    "head_branch": "T3135-best-language",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14698?src=pr&el=h1) Report\n> Merging [#14698](https://codecov.io/gh/phalcon/cphalcon/pull/14698?src=pr&el=desc) into [4.1.x](https://codecov.io/gh/phalcon/cphalcon/commit/f3c7f5426dc161b744ed2d2dee0cf70136f7e680?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.1.x   #14698      +/-   ##\n==========================================\n+ Coverage   67.75%   67.76%   +<.01%     \n==========================================\n  Files         480      480              \n  Lines      111629   111654      +25     \n==========================================\n+ Hits        75637    75662      +25     \n  Misses      35992    35992\n```\n"
    ],
    "commit_messages": [
      "[#3135] - Adjusted Changelog"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621281d18912b45d36a300f",
    "number": 14697,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #14696 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nAdded additional HTML helpers under `Phalcon\\Html\\Helper`: `Anchor`, `Base`, `Body`, `Button`, `Close`, `Element`, `Form`, `Img`, `Input\\Color`, `Input\\Date`, `Input\\DateTime`, `Input\\DateTimeLocal`, `Input\\Email`, `Input\\File`, `Input\\Hidden`, `Input\\Image`, `Input\\Input`, `Input\\Month`, `Input\\Numeric`, `Input\\Password`, `Input\\Range`, `Input\\Select`, `Input\\Search`, `Input\\Submit`, `Input\\Tel`, `Input\\Text`, `Input\\Textarea`, `Input\\Time`, `Input\\Url`, `Input\\Week`, `Label`, `Link`, `Meta`, `Ol`, `Script`, `Style`, `Title`, `Ul` \r\n\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14696-html-helpers",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14697?src=pr&el=h1) Report\n> Merging [#14697](https://codecov.io/gh/phalcon/cphalcon/pull/14697?src=pr&el=desc) into [4.1.x](https://codecov.io/gh/phalcon/cphalcon/commit/3ae0c6600a806d2099b51a32a036e08c4f133d6e?src=pr&el=desc) will **increase** coverage by `0.06%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.1.x   #14697      +/-   ##\n==========================================\n+ Coverage   67.69%   67.75%   +0.06%     \n==========================================\n  Files         483      480       -3     \n  Lines      111513   111629     +116     \n==========================================\n+ Hits        75488    75637     +149     \n+ Misses      36025    35992      -33\n```\n",
      "LGTM. Can we prepare the docs as well or add an issue for this in the docs repo? Don't want to get behind with the docs again. What is the moment we start deprecating the tags?",
      "@ruudboon I have the documentation tag on it so that it can be addressed. \r\n\r\nAlso I need to add a `Select` that populates data from a resultset so there is going to be a part 2 of this PR."
    ],
    "commit_messages": [
      "[#14696] - Corrected exception"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621281e18912b45d36a3010",
    "number": 14695,
    "body": "Hello!\r\n\r\n* Type: code quality \r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nEvery night at 2 this will run and cleanup our nightly builds on Packagecloud for packages older then 30 days. (max 100 per run, due to api limit)\r\nI think schedule only runs on default branch so this could be only working after merging to master.\r\n",
    "head_branch": "cleanup-packages",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14695?src=pr&el=h1) Report\n> Merging [#14695](https://codecov.io/gh/phalcon/cphalcon/pull/14695?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/003f3d4da809a0ca444ed230eebcf872d9d6a561?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@           Coverage Diff           @@\n##            4.0.x   #14695   +/-   ##\n=======================================\n  Coverage   67.96%   67.96%           \n=======================================\n  Files         483      483           \n  Lines      111483   111483           \n=======================================\n  Hits        75774    75774           \n  Misses      35709    35709\n```\n"
    ],
    "commit_messages": [
      "Close curl"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621281f18912b45d36a3011",
    "number": 14692,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14691\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nFixed ENUM detection on MySQL when using an option that matches a column name like **int**ernal\r\n\r\n",
    "head_branch": "issue-14691",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14692?src=pr&el=h1) Report\n> Merging [#14692](https://codecov.io/gh/phalcon/cphalcon/pull/14692?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/88af1412a46358f37c7929703f32451341eaca4d?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@           Coverage Diff           @@\n##            4.0.x   #14692   +/-   ##\n=======================================\n  Coverage   67.96%   67.96%           \n=======================================\n  Files         483      483           \n  Lines      111483   111483           \n=======================================\n  Hits        75774    75774           \n  Misses      35709    35709\n```\n"
    ],
    "commit_messages": [
      "Merge pull request #14692 from ruudboon/issue-14691\n\nResolved #14691"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621282018912b45d36a3012",
    "number": 14689,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14688 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\Session\\Manager::getUniqueKey` to prefix the key only if `uniqueId` is present\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14688-session-key-unique",
    "is_a_fork": true,
    "comments": [
      "Thnx. Looks good to me.",
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14689?src=pr&el=h1) Report\n> Merging [#14689](https://codecov.io/gh/phalcon/cphalcon/pull/14689?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/aef0e988bad12224b8582b0243bc1b33fbe10d7e?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14689      +/-   ##\n==========================================\n+ Coverage   67.92%   67.92%   +<.01%     \n==========================================\n  Files         483      483              \n  Lines      111477   111483       +6     \n==========================================\n+ Hits        75724    75730       +6     \n  Misses      35753    35753\n```\n"
    ],
    "commit_messages": [
      "[#14688] - Updated changelog"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621282118912b45d36a3013",
    "number": 14686,
    "body": "Hello team!\r\n\r\n* Type: code quality\r\n* Link to issue: #14685\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nI did the missing tests of Phalcon\\Translate\\Adapter\\Gettext\r\n\r\nI add one more expression in en_us and compile .mo to test nquery.\r\n\r\n;-)\r\nThanks\r\n\r\n",
    "head_branch": "test_gettext_4.0.x",
    "is_a_fork": true,
    "comments": [
      "@jenovateurs if you run `vendor/bin/phpcbf ` inside your project it should fix it for you.",
      "@ruudboon thanks for the tip :-)",
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14686?src=pr&el=h1) Report\n> Merging [#14686](https://codecov.io/gh/phalcon/cphalcon/pull/14686?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/aef0e988bad12224b8582b0243bc1b33fbe10d7e?src=pr&el=desc) will **increase** coverage by `0.03%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14686      +/-   ##\n==========================================\n+ Coverage   67.92%   67.96%   +0.03%     \n==========================================\n  Files         483      483              \n  Lines      111477   111477              \n==========================================\n+ Hits        75724    75768      +44     \n+ Misses      35753    35709      -44\n```\n",
      "Thank you @jenovateurs "
    ],
    "commit_messages": [
      "Merge pull request #14686 from les-enovateurs/test_gettext_4.0.x\n\nAll functions of GetText tested. @jenovateurs thank you"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621282218912b45d36a3014",
    "number": 14685,
    "body": "Hello team!\r\n\r\n* Type: code quality\r\n* Link to issue: #13655\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [ x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ x] I have checked that another pull request for this purpose does not exist\r\n- [ x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nNow Http\\Response\\Cookies is tested automatically.\r\n;-)\r\nThanks\r\n\r\n",
    "head_branch": "new_test_4.0.x",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14685?src=pr&el=h1) Report\n> Merging [#14685](https://codecov.io/gh/phalcon/cphalcon/pull/14685?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/3aeb32a305c81b155c1b0c50d1ab2383891c18a2?src=pr&el=desc) will **increase** coverage by `0.07%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14685      +/-   ##\n==========================================\n+ Coverage   67.85%   67.92%   +0.07%     \n==========================================\n  Files         483      483              \n  Lines      111477   111477              \n==========================================\n+ Hits        75640    75724      +84     \n+ Misses      35837    35753      -84\n```\n",
      "Thank you @jenovateurs "
    ],
    "commit_messages": [
      "Merge pull request #14685 from les-enovateurs/new_test_4.0.x\n\nAll functions of Http\\Response\\Cookies tested. @jenovateurs Thnx!"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621282318912b45d36a3015",
    "number": 14684,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue: #14680 #13654 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nMore tests for the CLI suite - research on #14680 \r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14680-route-delimiter",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14684?src=pr&el=h1) Report\n> Merging [#14684](https://codecov.io/gh/phalcon/cphalcon/pull/14684?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/83c14c609038a9b983f03217c9f672151cc3b7c0?src=pr&el=desc) will **increase** coverage by `0.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14684      +/-   ##\n==========================================\n+ Coverage   67.84%   67.85%   +0.01%     \n==========================================\n  Files         483      483              \n  Lines      111477   111477              \n==========================================\n+ Hits        75626    75640      +14     \n+ Misses      35851    35837      -14\n```\n"
    ],
    "commit_messages": [
      "Merge pull request #14684 from niden/T14680-route-delimiter\n\nT14680 route delimiter"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621282518912b45d36a3016",
    "number": 14683,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #14627 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nChanged `Phalcon\\Http\\Cookie::send` and `Phalcon\\Http\\Cookie::delete` to allow for `samesite` to be passed in the `options` when using PHP > 7.3\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14627-cookie-same-site",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14683?src=pr&el=h1) Report\n> Merging [#14683](https://codecov.io/gh/phalcon/cphalcon/pull/14683?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/8c1f8aab6bd41ac57d6fe3584e25e0272576fdae?src=pr&el=desc) will **increase** coverage by `0.15%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14683      +/-   ##\n==========================================\n+ Coverage   67.68%   67.84%   +0.15%     \n==========================================\n  Files         483      483              \n  Lines      111385   111477      +92     \n==========================================\n+ Hits        75391    75626     +235     \n+ Misses      35994    35851     -143\n```\n"
    ],
    "commit_messages": [
      "[#14627] - Updated changelog"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621282618912b45d36a3017",
    "number": 14682,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nWhen building with zephir, these `return type` don't constrain with it's `parent class` or `interface`.\r\n\r\n...  and then these errors will be raised in runtime:\r\n\r\n```\r\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Router::setDefaultModule(string $moduleName): Phalcon\\Mvc\\RouterInterface must be compatible with Phalcon\\Mvc\\RouterInterface::setDefaultModule(string $moduleName): void in Unknown on line 0\r\nPHP Fatal error:  Declaration of Phalcon\\Mvc\\Router::setDefaultController(string $controllerName): Phalcon\\Mvc\\RouterInterface must be compatible with Phalcon\\Mvc\\RouterInterface::setDefaultController(string $controllerName): void in Unknown on line 0\r\n```\r\n\r\n- phalcon: 3.4.5\r\n- php 7.3.9\r\n- zephir parser: 1.3.3\r\n- zephir: 0.12.15\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.4.x",
    "is_a_fork": true,
    "comments": [
      "@sergeyklay done, is that right place for this changelog ?",
      "@sergeyklay are we going to allow this for v3? Also is this necessary for v4?",
      "In any case @guweigang thank you for the contribution",
      "I wondering if this is happening because zephir 0.12.15 is used. 3.4.x is builded upon 0.10.15",
      " @ruudboon  I never noticed that. As I knew，Phalcon 3.4.x supports until PHP 7.3 even though we hope it can support 7.4. And zephir initially support PHP 7.3 from 0.11.1. Is there any special reason to prevent to use higher version？",
      "@guweigang For Phalcon 3.4 we need to support PHP 5.x. 0.12.15 doesn't support PHP 5.X",
      "@niden I  have checked, these `return type` issues were all fixed in v4. The differences are in `\\Phalcon\\Flash\\*` related classes. In v4, `message()` return `string | null` . And my commits just remove  these `return type` constraint.",
      "@guweigang Did you try compiling with Zephir 0.10.16 to see if you errors are still there?",
      "@ruudboon Tried it, no errors with `Zephir 0.10.16`.  Because this version ignore `return type` for mainly supporting PHP 5.x.  \r\n\r\nBelow is class reflections of  `Phalcon\\Flash\\Direct`:  It should have a `string`  return-type constraint, but nothing here.\r\n```\r\nClass [ <internal:phalcon> class Phalcon\\Flash\\Direct extends Phalcon\\Flash implements Phalcon\\Di\\InjectionAwareInterface, Phalcon\\FlashInterface ] {\r\n\r\n- Methods [18] {\r\n    Method [ <internal:phalcon, overwrites Phalcon\\FlashInterface, prototype Phalcon\\FlashInterface> public method message ] {\r\n\r\n      - Parameters [2] {\r\n        Parameter #0 [ <required> $type ]\r\n        Parameter #1 [ <required> $message ]\r\n      }\r\n    }\r\n\r\n}\r\n```\r\n\r\nBut If I want to use `Phalcon 3.4.x` and advanced features of `PHP 7.x`, I have to build it with higher version of Zephir myself.",
      "I apologize @guweigang for completely overlooking this. But at the moment it seems good to me. I will keep this open for a some short time to allow other contributors a chance to speak up, and to take a fresh look at it later. Thank you for the patch. Unfortunately we will not plan to release Phalcon from the 3.4.x branch, at least soon. I'm going to merge this into 3.4.x branch. Do you need any help on how to prepare the build yourself and install the framework from the source code? So thanks again for catching this mistake and fixing it, and again I am sorry about the delay.",
      "@sergeyklay You are so kind. Thank you for the open mind to this :)",
      "Merging this to v3 with the understanding that people will need to build the extension from the `ext` branch.\r\n\r\nThank you again @guweigang "
    ],
    "commit_messages": [
      "fix ulong in php7.4, use zend_ulong instead"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621282718912b45d36a3018",
    "number": 14681,
    "body": "Hello!\r\n\r\n* Type: documentation\r\n* Link to issue: -\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nThanks\r\n\r\n",
    "head_branch": "feature/code-owners",
    "is_a_fork": false,
    "comments": [
      "@ruudboon Should I add PECL for your description section? ",
      "> @ruudboon Should I add PECL for your description section?\r\n\r\nGood idea"
    ],
    "commit_messages": [
      "Add PECL to @ruudboon's description [ci skip]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621282818912b45d36a3019",
    "number": 14677,
    "body": "Hello!\r\n\r\n* Type: code quality \r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/13654\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nImplemented all Cli Dispatchers tests\r\n",
    "head_branch": "cli-tests",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14677?src=pr&el=h1) Report\n> Merging [#14677](https://codecov.io/gh/phalcon/cphalcon/pull/14677?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/a1e3cf9ada965d665385e0faa62bbb52e445c24e?src=pr&el=desc) will **increase** coverage by `0.12%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14677      +/-   ##\n==========================================\n+ Coverage   67.52%   67.64%   +0.12%     \n==========================================\n  Files         483      483              \n  Lines      111379   111379              \n==========================================\n+ Hits        75204    75347     +143     \n+ Misses      36175    36032     -143\n```\n"
    ],
    "commit_messages": [
      "Merge pull request #14677 from ruudboon/cli-tests\n\nImplemented CLI dispatcher and router tests"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621282918912b45d36a301a",
    "number": 14676,
    "body": "* Type: bug fix\r\n* Link to issue: #14658 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nCreated some automation for Pecl package creation. Currently we don't have support for testing the package under windows. The package is manually verified and approved by the Pecl Windows team.\r\n\r\n",
    "head_branch": "ci-pecl",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14676?src=pr&el=h1) Report\n> Merging [#14676](https://codecov.io/gh/phalcon/cphalcon/pull/14676?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/a1e3cf9ada965d665385e0faa62bbb52e445c24e?src=pr&el=desc) will **increase** coverage by `0.15%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14676      +/-   ##\n==========================================\n+ Coverage   67.52%   67.68%   +0.15%     \n==========================================\n  Files         483      483              \n  Lines      111385   111385              \n==========================================\n+ Hits        75216    75391     +175     \n+ Misses      36169    35994     -175\n```\n",
      "Looking good bud!"
    ],
    "commit_messages": [
      "Merge pull request #14676 from ruudboon/ci-pecl\n\nCi Setup for pecl"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621282a18912b45d36a301b",
    "number": 14674,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #14669\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix/#14669-query-builder-column-map",
    "is_a_fork": false,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14674?src=pr&el=h1) Report\n> Merging [#14674](https://codecov.io/gh/phalcon/cphalcon/pull/14674?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/5b150e0df9d6696248b2e6e5932822fb7dec8fe2?src=pr&el=desc) will **increase** coverage by `0.03%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14674      +/-   ##\n==========================================\n+ Coverage   67.52%   67.55%   +0.03%     \n==========================================\n  Files         483      483              \n  Lines      111379   111385       +6     \n==========================================\n+ Hits        75204    75248      +44     \n+ Misses      36175    36137      -38\n```\n"
    ],
    "commit_messages": [
      "Merge pull request #14674 from phalcon/fix/#14669-query-builder-column-map\n\n#14669 - Fix alias columns in Query Builder Column map"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621282b18912b45d36a301c",
    "number": 14672,
    "body": "Hello!\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nAdd github backers & update found links\r\n\r\nThanks\r\n\r\n",
    "head_branch": "upd-backers",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14672?src=pr&el=h1) Report\n> Merging [#14672](https://codecov.io/gh/phalcon/cphalcon/pull/14672?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/5b150e0df9d6696248b2e6e5932822fb7dec8fe2?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@           Coverage Diff           @@\n##            4.0.x   #14672   +/-   ##\n=======================================\n  Coverage   67.52%   67.52%           \n=======================================\n  Files         483      483           \n  Lines      111379   111379           \n=======================================\n  Hits        75204    75204           \n  Misses      36175    36175\n```\n"
    ],
    "commit_messages": [
      "Merge pull request #14672 from Arhell/upd-backers\n\nadd new backers & upd links [skip-ci]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621282c18912b45d36a301d",
    "number": 14671,
    "body": "Hello!\r\n\r\n* Type: new feature | documentation\r\n* Link to issue: -\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nWhile effective code review is essential to every successful project, it’s not always clear who should review files.  Now we can can define exactly which people and teams need to review projects using CODE_OWNERS.TXT file.\r\n\r\nRight now I specified the \"description\" section for Nikolaos and Ruud as a \"Core Team\" but this is too general and should be changed in the near future. What exactly may be used as a \"description\" section? Well, I guess any isolated part of the framework may be used as a such section, e.g.:\r\n- ORM\r\n- Windows Support\r\n- macOS Support\r\n- Documentation\r\n- HTTP stack\r\n- CLI stack\r\n- Testing\r\n- Phalcon attributes\r\n- \"All parts of Phalcon not covered by someone else\"\r\n- PSR integration\r\n- etc\r\n\r\nPlease note, I didn't add all contributors in this patch. All other contributors will be added privately if need arises.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "feature/code-owners",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14671 from phalcon/feature/code-owners\n\nIntroduce a list of code owners [ci skip]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621283418912b45d36a301e",
    "number": 14664,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue: #14646\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nRegenerated ext dir \r\n",
    "head_branch": "gen-ext",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14664?src=pr&el=h1) Report\n> Merging [#14664](https://codecov.io/gh/phalcon/cphalcon/pull/14664?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/3a1da1f3d824b4d07583cde350bdd643bdb6fc3e?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `70.27%`.\n\n\n```diff\n@@           Coverage Diff           @@\n##            4.0.x   #14664   +/-   ##\n=======================================\n  Coverage   67.52%   67.52%           \n=======================================\n  Files         483      483           \n  Lines      111379   111379           \n=======================================\n  Hits        75204    75204           \n  Misses      36175    36175\n```\n",
      "Thank you"
    ],
    "commit_messages": [
      "Merge pull request #14664 from ruudboon/gen-ext\n\nRegenerated ext dir with Zephir 0.12.15"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621283a18912b45d36a301f",
    "number": 14663,
    "body": "Replace uint -> zend_uint\r\n\r\nHello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14646\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nReplaced uint -> zend_uint\r\nReplaced ulong -> zend_ulong\r\nRegenerated build",
    "head_branch": "fix-uint-ulong",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621283c18912b45d36a3020",
    "number": 14662,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue: #14661\r\n\r\nIssue is already fixed but already made the unit tests.\r\n\r\n",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14662?src=pr&el=h1) Report\n> Merging [#14662](https://codecov.io/gh/phalcon/cphalcon/pull/14662?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/d4b4521aa9c5c9b052921acf6498d9f18b0ec827?src=pr&el=desc) will **increase** coverage by `0.03%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14662      +/-   ##\n==========================================\n+ Coverage   67.48%   67.52%   +0.03%     \n==========================================\n  Files         483      483              \n  Lines      111379   111379              \n==========================================\n+ Hits        75165    75204      +39     \n+ Misses      36214    36175      -39\n```\n"
    ],
    "commit_messages": [
      "Merge pull request #14662 from ruudboon/4.0.x\n\nAdded unit test for delete  cookie"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621283d18912b45d36a3021",
    "number": 14659,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #13518 #13900 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\Mvc\\Model::__isset` to take into account non visible properties by checking the getter if it exists\r\nFixed `Phalcon\\Mvc\\Model::__set` to return a more informative message if we are tying to access a non visible property\r\n\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T13518-isset-private-property",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14659?src=pr&el=h1) Report\n> Merging [#14659](https://codecov.io/gh/phalcon/cphalcon/pull/14659?src=pr&el=desc) into [4.1.x](https://codecov.io/gh/phalcon/cphalcon/commit/484cfd9df8c5be64df6b65b755d4242cee9f5b1c?src=pr&el=desc) will **increase** coverage by `0.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.1.x   #14659      +/-   ##\n==========================================\n+ Coverage   67.47%   67.49%   +0.01%     \n==========================================\n  Files         483      483              \n  Lines      111391   111403      +12     \n==========================================\n+ Hits        75166    75192      +26     \n+ Misses      36225    36211      -14\n```\n",
      "@niden I think we can sent this to 4.0.x branch",
      "Merging here and cherry picking to 4.0.1"
    ],
    "commit_messages": [
      "[#13518] - Re-enabled commented out tests"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621283e18912b45d36a3022",
    "number": 14654,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #13297 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\Db\\Dialect\\Mysql::getColumnDefinition` to recognize `size` for `DATETIME`, `TIME` and `TIMESTAMP` columns\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T13297-datetime-fraction",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14654?src=pr&el=h1) Report\n> Merging [#14654](https://codecov.io/gh/phalcon/cphalcon/pull/14654?src=pr&el=desc) into [4.1.x](https://codecov.io/gh/phalcon/cphalcon/commit/422fa878402f443a81f680977cb3c120922dad16?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.1.x   #14654      +/-   ##\n==========================================\n+ Coverage   67.46%   67.47%   +<.01%     \n==========================================\n  Files         483      483              \n  Lines      111367   111391      +24     \n==========================================\n+ Hits        75139    75166      +27     \n+ Misses      36228    36225       -3\n```\n"
    ],
    "commit_messages": [
      "[#13297] - Updated changelog again"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621283f18912b45d36a3023",
    "number": 14653,
    "body": "Hello!\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nupdate resources v4\r\nThanks\r\n\r\n",
    "head_branch": "upd-res",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14653?src=pr&el=h1) Report\n> Merging [#14653](https://codecov.io/gh/phalcon/cphalcon/pull/14653?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/fe2962c3def19f55fda15f709f0e6c8128c9120f?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@           Coverage Diff           @@\n##            4.0.x   #14653   +/-   ##\n=======================================\n  Coverage   67.46%   67.46%           \n=======================================\n  Files         483      483           \n  Lines      111367   111367           \n=======================================\n  Hits        75139    75139           \n  Misses      36228    36228\n```\n",
      "@Arhell thnx for noticing this! \r\n@niden looks like we're have the changelog in 2 places. Want to keep them manually in sync or should we make it a task on release?",
      "@ruudboon That is fixed. Caught that in a different PR.\r\n\r\nThanks @Arhell "
    ],
    "commit_messages": [
      "update resources v4"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621284018912b45d36a3024",
    "number": 14652,
    "body": "Hello!\r\n\r\nSmall description of change: Corrected shield link to issues\r\n\r\nThanks\r\n\r\n",
    "head_branch": "readme-link",
    "is_a_fork": true,
    "comments": [
      "Thank you @ekmst "
    ],
    "commit_messages": [
      "Corrected shield link to issues [skip ci]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621284118912b45d36a3025",
    "number": 14651,
    "body": "Corrected the stale bot labels",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[4.0.x] - Corrections to the stale bot"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621284218912b45d36a3026",
    "number": 14650,
    "body": "",
    "head_branch": "niden-patch-1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Update issue templates"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621284318912b45d36a3027",
    "number": 14649,
    "body": "Hello!\r\n\r\n* Type: improvement\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/11770\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nRemoved cookie binding to session\r\n`Phalcon\\Http\\Cookie` no longer depends on the session service and data will not be duplicated in the session. This made it difficult to use cookies in stateless applications (SPA).\r\n\r\nThanks\r\n\r\n",
    "head_branch": "cookie-without-session",
    "is_a_fork": true,
    "comments": [
      "@ekmst can you rebase and send this to the `4.1.x` branch please?",
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14649?src=pr&el=h1) Report\n> Merging [#14649](https://codecov.io/gh/phalcon/cphalcon/pull/14649?src=pr&el=desc) into [4.1.x](https://codecov.io/gh/phalcon/cphalcon/commit/55f1504f28a98966c9ea0956867682a84ef48e66?src=pr&el=desc) will **increase** coverage by `0.11%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.1.x   #14649      +/-   ##\n==========================================\n+ Coverage   67.49%    67.6%   +0.11%     \n==========================================\n  Files         483      483              \n  Lines      111403   111414      +11     \n==========================================\n+ Hits        75192    75324     +132     \n+ Misses      36211    36090     -121\n```\n",
      "This will definitely break BC not by means of interfaces but by functionality itself. For instance right now I set my cookies and I know they will go in the session. With this change they will not so I will need to write that code myself. \r\n\r\nThere are plans to completely rewrite the HTTP layer and offer cookie management with different storage engines i.e. files, session etc. but we are not there yet.\r\n\r\n@ruudboon @sergeyklay Thoughts on this? If we are to use this we will need to introduce also some sort of a storage i.e. take the session storage from where it was (see this PR) and put it somewhere else so that people can use it at least for now.",
      "I am currently developing a SPA application where sessions are not used at all. But I need to work with cookies. But since the session is not used, I get errors that the session service was not found. And now I have to use a stub to avoid this.\r\n\r\nI do not quite understand why cookies are also stored in sessions?",
      "@ekmst storing cookies in files or the session are the most common storage engines. \r\n\r\nThis code is really _ancient_ and has never seen much love - we just let it be. Definitely needs to be reworked so what you did I would say is step 1 and we need step 2 to at least have the option to store the cookies in the session (current functionality)\r\n\r\nI will see what I can come up with in the next few days and will ping you so that we can align efforts.",
      "@niden  \r\nCan we save cookies in the session only if the `session` service is defined in the DI container? If the `session` service is not defined, then we work with cookies and we will not throw an exception.\r\n\r\nOr we can enter a flag to explicitly indicate that you want to save cookies in the session.",
      "> @niden\r\n> Can we save cookies in the session only if the `session` service is defined in the DI container? If the `session` service is not defined, then we work with cookies and we will not throw an exception.\r\n> \r\n> Or we can enter a flag to explicitly indicate that you want to save cookies in the session.\r\n\r\nThat is actually a great idea. If we mention this in the documentation it should be fine and most people would not be affected if they already have the `session` service registered.\r\n\r\n@ekmst can you make the adjustments? \r\n\r\nThe above will definitely help and give us time until we redesign the http layer.",
      "@niden \r\nYes, I will try to do it soon.",
      "@ekmst looking good so far. Once you are done make sure the changelog is updated and ping me so that I can merge this",
      "@niden \r\n\r\nDone\r\n",
      "With these changes I wouldn't mind to push this into 4.0.x. Don't think we're breaking anything\r\nThnx ekmst",
      "> With these changes I wouldn't mind to push this into 4.0.x. Don't think we're breaking anything\r\n> Thnx ekmst\r\n\r\nWe will have to cherry pick them because this is a different branch. We can talk about this in TG.",
      "Thank you @ekmst "
    ],
    "commit_messages": [
      "Added tests"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621284418912b45d36a3028",
    "number": 14648,
    "body": "Hello!\r\n\r\n* Type: enhancement\r\n* Link to issue: #2893 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nChanged the logic when logging times for `Phalcon\\Logger` to use `DateTimeImmutable` so as to handle microseconds if necessary.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T2893-logger-date-format",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14648?src=pr&el=h1) Report\n> Merging [#14648](https://codecov.io/gh/phalcon/cphalcon/pull/14648?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/e84dd345862f3ffe28e3178d8844b3bccc9e07a8?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@           Coverage Diff           @@\n##            4.0.x   #14648   +/-   ##\n=======================================\n  Coverage   67.46%   67.46%           \n=======================================\n  Files         483      483           \n  Lines      111370   111370           \n=======================================\n  Hits        75139    75139           \n  Misses      36231    36231\n```\n"
    ],
    "commit_messages": [
      "Merge branch '4.0.x' into T2893-logger-date-format"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621284518912b45d36a3029",
    "number": 14647,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14643 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- x ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\Http\\Cookie::delete` to parse the correct parameters - cannot use alternative syntax until PHP 7.3 \r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14643-setcookie-params",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14647?src=pr&el=h1) Report\n> Merging [#14647](https://codecov.io/gh/phalcon/cphalcon/pull/14647?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/d385e3cfd01e398842738dcf19a1f449a631cdd1?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14647      +/-   ##\n==========================================\n+ Coverage   67.46%   67.46%   +<.01%     \n==========================================\n  Files         483      483              \n  Lines      111369   111366       -3     \n==========================================\n  Hits        75138    75138              \n+ Misses      36231    36228       -3\n```\n"
    ],
    "commit_messages": [
      "[#14643] - Updated changelog"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621284618912b45d36a302a",
    "number": 14645,
    "body": "remove unwanted parenthesis closure for DOUBLE, FLOAT... definitions\r\n",
    "head_branch": "fix-mysql-column-def",
    "is_a_fork": true,
    "comments": [
      "@pfz Would it possible to add a test for this as well?\r\n",
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14645?src=pr&el=h1) Report\n> Merging [#14645](https://codecov.io/gh/phalcon/cphalcon/pull/14645?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/65bfee4da5d3b71368aa81729c4f1636a42dab25?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14645      +/-   ##\n==========================================\n+ Coverage   67.45%   67.46%   +<.01%     \n==========================================\n  Files         483      483              \n  Lines      111370   111369       -1     \n==========================================\n+ Hits        75128    75138      +10     \n+ Misses      36242    36231      -11\n```\n",
      "@pfz Thank you!"
    ],
    "commit_messages": [
      "Merge pull request #14645 from pfz/fix-mysql-column-def\n\nFixed Mysql column definition"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621284718912b45d36a302b",
    "number": 14644,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #13856 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nAdded JWT support\r\n- Token\r\n- Parser\r\n- Builder\r\n- Validator\r\n- Signers (None, HMAC)\r\n- Added Base64 encode/decodeUrl helper class\r\n\r\nThis is fully covered by tests but would like it to be tested in an application so please do not merge yet.\r\n\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T13856-jwt-support",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14644?src=pr&el=h1) Report\n> Merging [#14644](https://codecov.io/gh/phalcon/cphalcon/pull/14644?src=pr&el=desc) into [4.1.x](https://codecov.io/gh/phalcon/cphalcon/commit/9db63a6329d20278f75977ba9ff886dc52ef36db?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@           Coverage Diff           @@\n##            4.1.x   #14644   +/-   ##\n=======================================\n  Coverage   67.46%   67.46%           \n=======================================\n  Files         483      483           \n  Lines      111367   111367           \n=======================================\n  Hits        75139    75139           \n  Misses      36228    36228\n```\n",
      "Could you please send this to 4..1.x branch",
      "Awesome work",
      "@sergeyklay We dont have a 4.1.x branch. Should I create one?\r\n",
      "> @sergeyklay We dont have a 4.1.x branch. Should I create one?\r\n\r\nSounds good to me. And let's merge the fixes from 4.0.x from time to time to make sure we're not too far behind. ",
      "I have one more method to add to verify the signature and this should be ready.",
      "@niden Consider proposed changes, and remove redundant getters"
    ],
    "commit_messages": [
      "[#13856] - Another correction"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621284818912b45d36a302c",
    "number": 14640,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14639\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nFixed issue #14639\r\n",
    "head_branch": "issue-14639-di",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14640?src=pr&el=h1) Report\n> Merging [#14640](https://codecov.io/gh/phalcon/cphalcon/pull/14640?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/8ff6b0093ce6d483ce3d44293f49a6872fefe733?src=pr&el=desc) will **decrease** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14640      +/-   ##\n==========================================\n- Coverage   67.45%   67.45%   -0.01%     \n==========================================\n  Files         483      483              \n  Lines      111368   111370       +2     \n==========================================\n  Hits        75128    75128              \n- Misses      36240    36242       +2\n```\n"
    ],
    "commit_messages": [
      "Merge pull request #14640 from ruudboon/issue-14639-di\n\nAdded missing setDI. Fixes #14639"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621284918912b45d36a302d",
    "number": 14638,
    "body": "Hello!\r\n\r\n* Type code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nThe use is the same name as the class. Looks like this ok with Zephir but gives errors in php/stubs",
    "head_branch": "namespace-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Double names causing issues in stubs"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621284c18912b45d36a302e",
    "number": 14637,
    "body": "",
    "head_branch": "4.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14637 from phalcon/4.0.x\n\nv4.0.0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621284d18912b45d36a302f",
    "number": 14634,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #14633 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [x] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\Http\\Request\\FileInterface` by adding `getError` that was missing.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14633-request-fileinterface",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14634?src=pr&el=h1) Report\n> Merging [#14634](https://codecov.io/gh/phalcon/cphalcon/pull/14634?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/862fae021d8b97bfff33eb782d42c2b54067ca3b?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@           Coverage Diff           @@\n##            4.0.x   #14634   +/-   ##\n=======================================\n  Coverage   67.45%   67.45%           \n=======================================\n  Files         483      483           \n  Lines      111368   111368           \n=======================================\n  Hits        75128    75128           \n  Misses      36240    36240\n```\n"
    ],
    "commit_messages": [
      "Merge pull request #14634 from niden/T14633-request-fileinterface\n\nT14633 request fileinterface"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621284f18912b45d36a3030",
    "number": 14631,
    "body": "Hello!\r\n\r\n* Type: removal\r\n* Link to issue: #14630\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change: \r\nRemoved ACL Firewall component from 4.0.x branch. For details see issue #14630 description.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "remove-firewall",
    "is_a_fork": false,
    "comments": [
      "@sergeyklay Looks like some issue under windows (not the download issue). \r\nhttps://ci.appveyor.com/project/sergeyklay/cphalcon/builds/29635371/job/mhu8eohld4oyxdtg\r\n```\r\nC:\\projects\\phalcon\\build\\php7\\safe\\phalcon.zep.c(72149): error C2065: 'phalcon_firewall_exception_ce': undeclared identifier```",
      "fixed",
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14631?src=pr&el=h1) Report\n> Merging [#14631](https://codecov.io/gh/phalcon/cphalcon/pull/14631?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/9469a740e4e3552d44469d399be58d96477d4dcb?src=pr&el=desc) will **decrease** coverage by `0.39%`.\n> The diff coverage is `75.79%`.\n\n\n```diff\n@@            Coverage Diff            @@\n##            4.0.x   #14631     +/-   ##\n=========================================\n- Coverage   67.85%   67.45%   -0.4%     \n=========================================\n  Files         489      483      -6     \n  Lines      113210   111368   -1842     \n=========================================\n- Hits        76818    75128   -1690     \n+ Misses      36392    36240    -152\n```\n"
    ],
    "commit_messages": [
      "Merge pull request #14631 from phalcon/remove-firewall\n\nRemoved ACL Firewall component from 4.0.x branch. thnx @sergeyklay"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621285018912b45d36a3031",
    "number": 14629,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue: #13654\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed a buch of tests",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14629?src=pr&el=h1) Report\n> Merging [#14629](https://codecov.io/gh/phalcon/cphalcon/pull/14629?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/b5448e14e3790b82df576f27bb532e77848b08e4?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@           Coverage Diff           @@\n##            4.0.x   #14629   +/-   ##\n=======================================\n  Coverage   67.85%   67.85%           \n=======================================\n  Files         488      488           \n  Lines      113207   113207           \n=======================================\n  Hits        76815    76815           \n  Misses      36392    36392\n```\n"
    ],
    "commit_messages": [
      "Merge pull request #14629 from ruudboon/4.0.x\n\n4.0.x"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621285118912b45d36a3032",
    "number": 14628,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [x] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nVarious changes this is a bit of an everything PR\r\n- Expanded the `Phalcon\\Domain\\Payload\\Payload` class to be able to store an exception if necessary and adjusted the interfaces.\r\n\r\n- Expanded the `Phalcon\\Domain\\Payload\\*` interfaces to be able to store an exception if necessary\r\n- Added and corrected docblocks\r\n- Added options array in `Phalcon\\Http\\Cookie` in the constructor as well as `getOptions` and `setOptions` (ref #14627 - future work)\r\n- Added options array in `Phalcon\\Http\\Response\\Cookies` in the `set()` (ref #14627 - future work)\r\n- The SerializerFactory is required now in all Storage/Cache adapters - it will not be auto created\r\n- Added tests\r\n\r\nThanks\r\n\r\n",
    "head_branch": "minor-adjustments-tests",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14628?src=pr&el=h1) Report\n> Merging [#14628](https://codecov.io/gh/phalcon/cphalcon/pull/14628?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/9c835c3bf0a92cf51cc0d9d8ad1b8dd7da753f52?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14628      +/-   ##\n==========================================\n+ Coverage   67.85%   67.85%   +<.01%     \n==========================================\n  Files         488      488              \n  Lines      113192   113207      +15     \n==========================================\n+ Hits        76803    76815      +12     \n- Misses      36389    36392       +3\n```\n"
    ],
    "commit_messages": [
      "[minor] - Updated the changelog"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621285218912b45d36a3033",
    "number": 14626,
    "body": "Hello!\r\n\r\n* Type: documentation\r\n* Link to issue:#14625\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nAdded comments\r\n",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14626?src=pr&el=h1) Report\n> Merging [#14626](https://codecov.io/gh/phalcon/cphalcon/pull/14626?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/6f063edc1b0f1f058724863d71a397564afa7353?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@           Coverage Diff           @@\n##            4.0.x   #14626   +/-   ##\n=======================================\n  Coverage   67.85%   67.85%           \n=======================================\n  Files         488      488           \n  Lines      113192   113192           \n=======================================\n  Hits        76803    76803           \n  Misses      36389    36389\n```\n"
    ],
    "commit_messages": [
      "Added info to STR constants. See #14625"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621285318912b45d36a3034",
    "number": 14624,
    "body": "Hello!\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nupdate supporters block, small re-style & add cloudflare\r\n\r\nThanks\r\n\r\n",
    "head_branch": "upd-supporters",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14624?src=pr&el=h1) Report\n> Merging [#14624](https://codecov.io/gh/phalcon/cphalcon/pull/14624?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/97e8d0e67284d107de19a7013873eac3d4228945?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@           Coverage Diff           @@\n##            4.0.x   #14624   +/-   ##\n=======================================\n  Coverage   67.85%   67.85%           \n=======================================\n  Files         488      488           \n  Lines      113192   113192           \n=======================================\n  Hits        76803    76803           \n  Misses      36389    36389\n```\n",
      "Thank you @Arhell "
    ],
    "commit_messages": [
      "update supporters"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621285418912b45d36a3035",
    "number": 14622,
    "body": "Hello!\r\n\r\n* Type:  code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nMatched our default tagline.\r\n",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [
      "Just for reference:\r\n\r\n- https://docs.travis-ci.com/user/customizing-the-build/#skipping-a-build\r\n- https://www.appveyor.com/docs/how-to/filtering-commits/#skip-directive-in-commit-message",
      "@sergeyklay thnx. Wondering if \"skip ci\" will also work for Github Actions. Will test it next time.",
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14622?src=pr&el=h1) Report\n> Merging [#14622](https://codecov.io/gh/phalcon/cphalcon/pull/14622?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/2be4f933f1f5c6011998577d524f6c3dd305e2cc?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@           Coverage Diff           @@\n##            4.0.x   #14622   +/-   ##\n=======================================\n  Coverage   67.85%   67.85%           \n=======================================\n  Files         488      488           \n  Lines      113192   113192           \n=======================================\n  Hits        76803    76803           \n  Misses      36389    36389\n```\n"
    ],
    "commit_messages": [
      "Match our standard tagline"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621285518912b45d36a3036",
    "number": 14619,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #14617 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\n\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14617-array-flip-model",
    "is_a_fork": true,
    "comments": [
      "@niden Looks like tests are failing. https://travis-ci.org/phalcon/cphalcon/jobs/624788538#L756",
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14619?src=pr&el=h1) Report\n> Merging [#14619](https://codecov.io/gh/phalcon/cphalcon/pull/14619?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/04c3952d8305e206967e4734483da871b19415df?src=pr&el=desc) will **decrease** coverage by `0.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14619      +/-   ##\n==========================================\n- Coverage   67.86%   67.85%   -0.02%     \n==========================================\n  Files         488      488              \n  Lines      113158   113192      +34     \n==========================================\n+ Hits        76795    76803       +8     \n- Misses      36363    36389      +26\n```\n"
    ],
    "commit_messages": [
      "[#14617] - Updated changelog"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621285618912b45d36a3037",
    "number": 14618,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #14575 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [x] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nChanged dates reported by the logger to use the `\"c\"` date mask for better sorting\r\nChanged `Phalcon\\Storage\\Adapter\\*::getKeys` to accept an optional `$prefix` so as to filter the keys returned \r\nFixed `Phalcon\\Logger\\Adapter\\AdapterInterface` adding missing `inTransaction()`\r\n\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14575-cache-getkeys-prefix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[#14575] - Corrected tests"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621285718912b45d36a3038",
    "number": 14616,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/pull/14611\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\n- Build Phalcon on AppVeyor using PHP 7.4\r\n- Correct type definitions for annotations parser\r\n- Use latest stable Zephir\r\n\r\nThanks\r\n\r\n",
    "head_branch": "appveyor-php74",
    "is_a_fork": false,
    "comments": [
      "Please note: This is Windows only fix. So I didn't update Zephir version for Travis in this PR.",
      "@sergeyklay is there still things need to be done in Zephir to use this on travis as well? Should we log an issue in that case?",
      "No, you can safely upgrade Zephir for Travis as well.",
      "Haha sorry. On my phone. Only thumbs up!",
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14616?src=pr&el=h1) Report\n> Merging [#14616](https://codecov.io/gh/phalcon/cphalcon/pull/14616?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/4f2b102a08a966c525316a8e2b62c0e31fef0076?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `0%`.\n\n\n```diff\n@@           Coverage Diff           @@\n##            4.0.x   #14616   +/-   ##\n=======================================\n  Coverage   67.82%   67.82%           \n=======================================\n  Files         488      488           \n  Lines      113106   113106           \n=======================================\n  Hits        76716    76716           \n  Misses      36390    36390\n```\n"
    ],
    "commit_messages": [
      "Merge pull request #14616 from phalcon/appveyor-php74\n\nBuild Phalcon on AppVeyor using PHP 7.4"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621285918912b45d36a3039",
    "number": 14612,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue: #13654\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed a few tests\r\n",
    "head_branch": "cli-tests",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14612?src=pr&el=h1) Report\n> Merging [#14612](https://codecov.io/gh/phalcon/cphalcon/pull/14612?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/efea4d536967e8bb797c2a20a8c70453b652b523?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14612      +/-   ##\n==========================================\n+ Coverage   67.81%   67.82%   +<.01%     \n==========================================\n  Files         488      488              \n  Lines      113106   113106              \n==========================================\n+ Hits        76708    76716       +8     \n+ Misses      36398    36390       -8\n```\n"
    ],
    "commit_messages": [
      "Merge pull request #14612 from ruudboon/cli-tests\n\nCli tests"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621285a18912b45d36a303a",
    "number": 14611,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nAdded PHP7.4 to AppVeyor as well. \r\n\r\n",
    "head_branch": "php74-appveyor",
    "is_a_fork": true,
    "comments": [
      "On hold. We need to fix the upstream dependencies first. ",
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14611?src=pr&el=h1) Report\n> Merging [#14611](https://codecov.io/gh/phalcon/cphalcon/pull/14611?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/efea4d536967e8bb797c2a20a8c70453b652b523?src=pr&el=desc) will **decrease** coverage by `0.12%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14611      +/-   ##\n==========================================\n- Coverage   67.81%   67.69%   -0.13%     \n==========================================\n  Files         488      488              \n  Lines      113106   113106              \n==========================================\n- Hits        76708    76570     -138     \n- Misses      36398    36536     +138\n```\n",
      "Closed in favor of: https://github.com/phalcon/cphalcon/pull/14616"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621285b18912b45d36a303b",
    "number": 14610,
    "body": "* Type: bug fix | new code quality\r\n* Link to issue: #14609 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n- Changed travis to use php 7.4.0 release\r\n- Fixed bug in GD\r\n",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [
      "@ruudboon while you are here can you add this to the `phpcs.xml`\r\n\r\n`<arg value=\"p\">`\r\n\r\nI like seeing the dots when the inspection runs. Gives you assurance :)",
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14610?src=pr&el=h1) Report\n> Merging [#14610](https://codecov.io/gh/phalcon/cphalcon/pull/14610?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/f68fad264a7784c73aaa1ac7aacc7e23d1147d39?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14610      +/-   ##\n==========================================\n+ Coverage   67.81%   67.81%   +<.01%     \n==========================================\n  Files         488      488              \n  Lines      113099   113106       +7     \n==========================================\n+ Hits        76701    76708       +7     \n  Misses      36398    36398\n```\n"
    ],
    "commit_messages": [
      "Removed space from argument"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621285c18912b45d36a303c",
    "number": 14607,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n\r\nAdded action for scanning our test with phpcs. Optimized the process using a mini phpcs container to reduce wait time. Currently scanning around 25s. If this works ok we can remove our Static Code Analysis from Travis. \r\n",
    "head_branch": "github-actions",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14607?src=pr&el=h1) Report\n> Merging [#14607](https://codecov.io/gh/phalcon/cphalcon/pull/14607?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/35ba769918aaa701cc9ac0de5c1a9ae2da92802c?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@           Coverage Diff           @@\n##            4.0.x   #14607   +/-   ##\n=======================================\n  Coverage   67.81%   67.81%           \n=======================================\n  Files         488      488           \n  Lines      113099   113099           \n=======================================\n  Hits        76701    76701           \n  Misses      36398    36398\n```\n"
    ],
    "commit_messages": [
      "Merge pull request #14607 from ruudboon/github-actions\n\nStatic Code Analysis in GitHub actions"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621285d18912b45d36a303d",
    "number": 14606,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue: #14599\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nOptimised tests\r\n\r\n",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14606?src=pr&el=h1) Report\n> Merging [#14606](https://codecov.io/gh/phalcon/cphalcon/pull/14606?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/2c98dc8f235fc6c02a1aa122e1ff64093c7a1c2a?src=pr&el=desc) will **decrease** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14606      +/-   ##\n==========================================\n- Coverage   67.82%   67.81%   -0.01%     \n==========================================\n  Files         488      488              \n  Lines      113099   113099              \n==========================================\n- Hits        76705    76701       -4     \n- Misses      36394    36398       +4\n```\n"
    ],
    "commit_messages": [
      "PHPCS"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621285e18912b45d36a303e",
    "number": 14605,
    "body": "Hello!\r\n\r\n* Type: ehnahcement\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nPSR-12 for the tests.\r\nMinor change to the readme badges\r\n\r\nThanks\r\n\r\n",
    "head_branch": "PSR-12",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14605?src=pr&el=h1) Report\n> Merging [#14605](https://codecov.io/gh/phalcon/cphalcon/pull/14605?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/4701b76bfc6940b6ef228dea4a148ee48b41220d?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@           Coverage Diff           @@\n##            4.0.x   #14605   +/-   ##\n=======================================\n  Coverage   67.82%   67.82%           \n=======================================\n  Files         488      488           \n  Lines      113099   113099           \n=======================================\n  Hits        76705    76705           \n  Misses      36394    36394\n```\n"
    ],
    "commit_messages": [
      "Merge pull request #14605 from niden/PSR-12\n\nPsr 12"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621285f18912b45d36a303f",
    "number": 14604,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14602 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [x] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nChanged `Phalcon\\Http\\CookieInterface` to `Phalcon\\Http\\Cookie\\CookieInterface` to avoid confusion\r\nFixed `Phalcon\\Http\\Response::setCookies` to use the correct interface\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14602-setcookies",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14604?src=pr&el=h1) Report\n> Merging [#14604](https://codecov.io/gh/phalcon/cphalcon/pull/14604?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/5724bc784d00f70bc04e529544f21de754e4f3d8?src=pr&el=desc) will **increase** coverage by `0.03%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14604      +/-   ##\n==========================================\n+ Coverage   67.75%   67.79%   +0.03%     \n==========================================\n  Files         489      488       -1     \n  Lines      112712   112709       -3     \n==========================================\n+ Hits        76372    76407      +35     \n+ Misses      36340    36302      -38\n```\n"
    ],
    "commit_messages": [
      "[#14602] - Fixing phpcs"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621286118912b45d36a3040",
    "number": 14603,
    "body": "* Type: code quality\r\n* Link to issue: #13655 \r\n\r\nHello!\r\n\r\nI did some tests, some merges with old ones and I hope it's OK.\r\nHere are the new tests for Http\\Response:\r\n* construct()\r\n* get/setContent()\r\n* get/setStatusCode()\r\n* get/setHeaders()\r\n* getReasonPhrase()\r\n* get/setCookies() -> Like I said in #14602, I've had trouble with Cookies which do not exist.\r\n* isSent()\r\n* setExpires()\r\n* get/setHeaders()\r\n* setLastModified()\r\n* setJsonContent()\r\n\r\nThanks for your review and comments :-).\r\n\r\n\r\n",
    "head_branch": "patch-11",
    "is_a_fork": true,
    "comments": [
      "Thank you @jenovateurs "
    ],
    "commit_messages": [
      "[patch] - Corrected test"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621286218912b45d36a3041",
    "number": 14601,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14599\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nAdded missing method\r\n\r\n",
    "head_branch": "fix-issue-14599",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14601?src=pr&el=h1) Report\n> Merging [#14601](https://codecov.io/gh/phalcon/cphalcon/pull/14601?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/2e8901363300e709dbaf5db276fd5d08ed49cf26?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14601      +/-   ##\n==========================================\n+ Coverage   67.75%   67.75%   +<.01%     \n==========================================\n  Files         489      489              \n  Lines      112683   112712      +29     \n==========================================\n+ Hits        76343    76372      +29     \n  Misses      36340    36340\n```\n",
      "You could unify all tests with `dataProvider()` method.\r\n\r\nExample - https://codeception.com/docs/07-AdvancedUsage#DataProvider-Annotations",
      "> You could unify all tests with `dataProvider()` method.\r\n> \r\n> Example - https://codeception.com/docs/07-AdvancedUsage#DataProvider-Annotations\r\n\r\nYeah good idea. I just copied the increment test."
    ],
    "commit_messages": [
      "[fix] - Fixed order"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621286318912b45d36a3042",
    "number": 14600,
    "body": "Hello!\r\n\r\n* Type: code quality \r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/14577\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nUpgraded to Zephir 0.12.13 and generated ext/ to fix issue ",
    "head_branch": "upgrade-zephir",
    "is_a_fork": true,
    "comments": [
      "There are C-files in `ext/` directory which aren't generated by Zephir. You have to regenerate C-code, then find all `uint` type definitions and replace they by `zend_uint`. The same for `ulong` => `zend_ulong`",
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14600?src=pr&el=h1) Report\n> Merging [#14600](https://codecov.io/gh/phalcon/cphalcon/pull/14600?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/341342837562ca80dadcba69e3ecd1e67b9a0dc3?src=pr&el=desc) will **increase** coverage by `0.02%`.\n> The diff coverage is `67.96%`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14600      +/-   ##\n==========================================\n+ Coverage   67.72%   67.75%   +0.02%     \n==========================================\n  Files         488      489       +1     \n  Lines      112590   112683      +93     \n==========================================\n+ Hits        76256    76343      +87     \n- Misses      36334    36340       +6\n```\n"
    ],
    "commit_messages": [
      "Merge pull request #14600 from ruudboon/upgrade-zephir\n\nUpgrade Zephir to 0.12.13"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621286418912b45d36a3043",
    "number": 14597,
    "body": "Hello!\r\nSmall delivery of getDI/setDI tests:\r\n* Phalcon\\Flash\\Session :: getDI() / setDI()\r\n* Phalcon\\Flash\\Direct :: getDI() / setDI()\r\n* Http\\Response\\Cookies :: getDI() / setDI()\r\n\r\nFor each, I renamed getDi to GetSetDI and removed setDI.\r\n\r\n* Type: code quality\r\n* Link to issue: #13655\r\n\r\n",
    "head_branch": "patch-10",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14597?src=pr&el=h1) Report\n> Merging [#14597](https://codecov.io/gh/phalcon/cphalcon/pull/14597?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/a0ed59acab5fd7e7e97b7497fc9757068ba8308b?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14597      +/-   ##\n==========================================\n+ Coverage   67.75%   67.76%   +<.01%     \n==========================================\n  Files         488      488              \n  Lines      112710   112710              \n==========================================\n+ Hits        76368    76376       +8     \n+ Misses      36342    36334       -8\n```\n",
      "Thank you @jenovateurs "
    ],
    "commit_messages": [
      "Merge pull request #14597 from jenovateurs/patch-10\n\nAdd some getDI/setDI() tests"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621286518912b45d36a3044",
    "number": 14596,
    "body": "Hello!\r\nNew test\r\n* Type: code quality\r\n* Link to issue: #13655\r\n",
    "head_branch": "patch-9",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14596?src=pr&el=h1) Report\n> Merging [#14596](https://codecov.io/gh/phalcon/cphalcon/pull/14596?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/a0ed59acab5fd7e7e97b7497fc9757068ba8308b?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14596      +/-   ##\n==========================================\n+ Coverage   67.75%   67.75%   +<.01%     \n==========================================\n  Files         488      488              \n  Lines      112710   112710              \n==========================================\n+ Hits        76368    76371       +3     \n+ Misses      36342    36339       -3\n```\n",
      "Thank you @jenovateurs "
    ],
    "commit_messages": [
      "Test Phalcon\\Http\\Cookie:: GetDI() / SetDI()"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621286618912b45d36a3045",
    "number": 14595,
    "body": "Hello!\r\nNew test\r\n* Type: code quality\r\n* Link to issue: #13655",
    "head_branch": "patch-9",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621286718912b45d36a3046",
    "number": 14594,
    "body": "Hello!\r\nNew test \r\n* Type: code quality\r\n* Link to issue: #13655",
    "head_branch": "patch-8",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14594?src=pr&el=h1) Report\n> Merging [#14594](https://codecov.io/gh/phalcon/cphalcon/pull/14594?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/a0ed59acab5fd7e7e97b7497fc9757068ba8308b?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@           Coverage Diff           @@\n##            4.0.x   #14594   +/-   ##\n=======================================\n  Coverage   67.75%   67.75%           \n=======================================\n  Files         488      488           \n  Lines      112710   112710           \n=======================================\n  Hits        76368    76368           \n  Misses      36342    36342\n```\n",
      "Thank you @jenovateurs "
    ],
    "commit_messages": [
      "Update wantToTest"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621286818912b45d36a3047",
    "number": 14593,
    "body": "Hello!\r\nNew Test -> Tag::getDI()/setDI()\r\n* Type: code quality\r\n* Link to issue: #13655",
    "head_branch": "patch-7",
    "is_a_fork": true,
    "comments": [
      "Thnx! Will merge it if test pass.",
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14593?src=pr&el=h1) Report\n> Merging [#14593](https://codecov.io/gh/phalcon/cphalcon/pull/14593?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/a0ed59acab5fd7e7e97b7497fc9757068ba8308b?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14593      +/-   ##\n==========================================\n+ Coverage   67.75%   67.76%   +<.01%     \n==========================================\n  Files         488      488              \n  Lines      112710   112710              \n==========================================\n+ Hits        76368    76373       +5     \n+ Misses      36342    36337       -5\n```\n",
      "Thank you @jenovateurs "
    ],
    "commit_messages": [
      "Update class name"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621286918912b45d36a3048",
    "number": 14592,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #14584 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\n- Fixed factories to return a new instance when calling `newInstance` and not a cached one from the internal mapper\r\n  - `Phalcon/Annotations/AnnotationsFactory`\r\n  - `Phalcon/Cache/AdapterFactory`\r\n  - `Phalcon/Config/ConfigFactory`\r\n  - `Phalcon/Db/Adapter/PdoFactory`\r\n  - `Phalcon/Image/ImageFactory`\r\n  - `Phalcon/Logger/AdapterFactory`\r\n  - `Phalcon/Paginator/PaginatorFactory`\r\n  - `Phalcon/Storage/AdapterFactory`\r\n  - `Phalcon/Storage/SerializerFactory`\r\n  - `Phalcon/Translate/InterpolatorFactory`\r\n  - `Phalcon/Translate/TranslateFactory`\r\n  - `Phalcon/Validation/ValidatorFactory`\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14584-factories",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14592?src=pr&el=h1) Report\n> Merging [#14592](https://codecov.io/gh/phalcon/cphalcon/pull/14592?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/a0ed59acab5fd7e7e97b7497fc9757068ba8308b?src=pr&el=desc) will **decrease** coverage by `0.02%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14592      +/-   ##\n==========================================\n- Coverage   67.75%   67.72%   -0.03%     \n==========================================\n  Files         488      488              \n  Lines      112710   112590     -120     \n==========================================\n- Hits        76368    76256     -112     \n+ Misses      36342    36334       -8\n```\n",
      "Test added"
    ],
    "commit_messages": [
      "[#14584] - Added asset for the test"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621286a18912b45d36a3049",
    "number": 14591,
    "body": "Hello!\r\nCreate test for Tag::displayTo.\r\n* Type: code quality\r\n* Link to issue: #14588",
    "head_branch": "patch-6",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14591?src=pr&el=h1) Report\n> Merging [#14591](https://codecov.io/gh/phalcon/cphalcon/pull/14591?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/fdf39b77053105d62be159e2e6755a20ebd6fdfa?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@           Coverage Diff           @@\n##            4.0.x   #14591   +/-   ##\n=======================================\n  Coverage   67.75%   67.75%           \n=======================================\n  Files         488      488           \n  Lines      112710   112710           \n=======================================\n  Hits        76368    76368           \n  Misses      36342    36342\n```\n"
    ],
    "commit_messages": [
      "Merge pull request #14591 from jenovateurs/patch-6\n\nTest Tag::displayTo()"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621286b18912b45d36a304a",
    "number": 14590,
    "body": "Hello!\r\n\r\nNew Test Tag -> selectField\r\n\r\n* Type: code quality\r\n* Link to issue: #14588\r\n\r\n",
    "head_branch": "patch-5",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14590?src=pr&el=h1) Report\n> Merging [#14590](https://codecov.io/gh/phalcon/cphalcon/pull/14590?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/fdf39b77053105d62be159e2e6755a20ebd6fdfa?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@           Coverage Diff           @@\n##            4.0.x   #14590   +/-   ##\n=======================================\n  Coverage   67.75%   67.75%           \n=======================================\n  Files         488      488           \n  Lines      112710   112710           \n=======================================\n  Hits        76368    76368           \n  Misses      36342    36342\n```\n",
      "Thnx!"
    ],
    "commit_messages": [
      "Merge pull request #14590 from jenovateurs/patch-5\n\nAdd Test Tag\\Select::selectField"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621286c18912b45d36a304b",
    "number": 14589,
    "body": "Hello!\r\n\r\nI overridden some function of TagHelper like :\r\n* tagFieldWithSetDefault\r\n* tagFieldWithDisplayTo\r\n* tagFieldWithSetDefaultElementNotPresent\r\n* tagFieldWithDisplayToElementNotPresent\r\n\r\nI did it because I had to add the attribute checked=\"checked\" in the expected value.\r\n\r\n* Type: code quality\r\n* Link to issue:  #14588\r\n\r\n",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14589?src=pr&el=h1) Report\n> Merging [#14589](https://codecov.io/gh/phalcon/cphalcon/pull/14589?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/0b438dd9c4fb5f3ff61b52a9f97949d47e063fc9?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14589      +/-   ##\n==========================================\n+ Coverage   67.74%   67.75%   +<.01%     \n==========================================\n  Files         488      488              \n  Lines      112710   112710              \n==========================================\n+ Hits        76359    76368       +9     \n+ Misses      36351    36342       -9\n```\n",
      "Thank you @jenovateurs ",
      "Thnx @jenovateurs great to see some more tests coming in!",
      "@ruudboon I'm happy to help!"
    ],
    "commit_messages": [
      "Test CheckField\n\nI overridden some function of TagHelper like :\r\n* tagFieldWithSetDefault\r\n* tagFieldWithDisplayTo\r\n* tagFieldWithSetDefaultElementNotPresent\r\n* tagFieldWithDisplayToElementNotPresent\r\nI did it because I had to add the attribute checked=\"checked\" in the expected value."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621286d18912b45d36a304c",
    "number": 14588,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue: #13655\r\n\r\nAcl\\Adapter\\Memory - Test - getActiveFunctionCustomArgumentsCount()\r\n\r\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14588?src=pr&el=h1) Report\n> Merging [#14588](https://codecov.io/gh/phalcon/cphalcon/pull/14588?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/0b438dd9c4fb5f3ff61b52a9f97949d47e063fc9?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@           Coverage Diff           @@\n##            4.0.x   #14588   +/-   ##\n=======================================\n  Coverage   67.74%   67.74%           \n=======================================\n  Files         488      488           \n  Lines      112710   112710           \n=======================================\n  Hits        76359    76359           \n  Misses      36351    36351\n```\n",
      "Thank you @jenovateurs "
    ],
    "commit_messages": [
      "Update GetActiveFunctionCustomArgumentsCountCest.php"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621286f18912b45d36a304d",
    "number": 14587,
    "body": "Hello!\r\nI hope the way I wrote these tests is Ok.\r\nThe first one is just to check if addInherit doesn't return any error.\r\nThe second one is deeper. It veriifies if inherit works well by checking different access.\r\n\r\nType: code quality\r\nLink to issue: #13655\r\n\r\nThanks\r\n\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [
      "@jenovateurs Looking good. You forgot the `use` statement at the top of the test for the `Memory` adapter.",
      "@niden Yes indeed, thanks for your help :-)",
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14587?src=pr&el=h1) Report\n> Merging [#14587](https://codecov.io/gh/phalcon/cphalcon/pull/14587?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/fc575708346639de6b2247ba00fb77d91243ea89?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@           Coverage Diff           @@\n##            4.0.x   #14587   +/-   ##\n=======================================\n  Coverage   67.74%   67.74%           \n=======================================\n  Files         488      488           \n  Lines      112710   112710           \n=======================================\n  Hits        76359    76359           \n  Misses      36351    36351\n```\n",
      "Thank you @jenovateurs "
    ],
    "commit_messages": [
      "Add use statement"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621287018912b45d36a304e",
    "number": 14586,
    "body": "Hello!\r\n\r\nType: code quality\r\nLink to issue: #13655\r\n\r\nUpdate one test - Acl\\Adapter\\Memory - addComponentAccess()\r\n\r\n\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14586?src=pr&el=h1) Report\n> Merging [#14586](https://codecov.io/gh/phalcon/cphalcon/pull/14586?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/fc575708346639de6b2247ba00fb77d91243ea89?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@           Coverage Diff           @@\n##            4.0.x   #14586   +/-   ##\n=======================================\n  Coverage   67.74%   67.74%           \n=======================================\n  Files         488      488           \n  Lines      112710   112710           \n=======================================\n  Hits        76359    76359           \n  Misses      36351    36351\n```\n",
      "Thank you @jenovateurs "
    ],
    "commit_messages": [
      "Test - Acl\\Adapter\\Memory - addComponentAccess()"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621287118912b45d36a304f",
    "number": 14582,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #14575 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\Storage\\Adapter\\Libmemcached::getKeys` and `Phalcon\\Storage\\Adapter\\Redis::getKeys` to return the keys that are prefixed only for that adapter\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14575-cache-keys",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14582?src=pr&el=h1) Report\n> Merging [#14582](https://codecov.io/gh/phalcon/cphalcon/pull/14582?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/384e48f040bce07669daaefcd098134606b817ab?src=pr&el=desc) will **decrease** coverage by `0.03%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14582      +/-   ##\n==========================================\n- Coverage   67.77%   67.74%   -0.04%     \n==========================================\n  Files         488      488              \n  Lines      112606   112710     +104     \n==========================================\n+ Hits        76324    76359      +35     \n- Misses      36282    36351      +69\n```\n"
    ],
    "commit_messages": [
      "[#14575] - Updated changelog"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621287218912b45d36a3050",
    "number": 14581,
    "body": "** PR for issue #\r\n\r\nThe issue: when I use debugVar to dump some variables and get the results like below image.\r\n![Selection_007](https://user-images.githubusercontent.com/5796168/70121785-ed991600-16a1-11ea-8813-588042ecd426.png)\r\n\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "@mvanvu Thank you for submitting. We don't accept Pull's on the master. Can you sent it to the 4.0.x branch?",
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14581?src=pr&el=h1) Report\n> Merging [#14581](https://codecov.io/gh/phalcon/cphalcon/pull/14581?src=pr&el=desc) into [master](https://codecov.io/gh/phalcon/cphalcon/commit/d7bccc43678104016ef58d9852e4c343d3185ee8?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@           Coverage Diff           @@\n##           master   #14581   +/-   ##\n=======================================\n  Coverage   67.74%   67.74%           \n=======================================\n  Files         488      488           \n  Lines      112525   112525           \n=======================================\n  Hits        76229    76229           \n  Misses      36296    36296\n```\n",
      "@mvanvu Can you check recheck your rebase? Looks like a readme is also pushed.",
      "Thank you @mvanvu "
    ],
    "commit_messages": [
      "Fix debug var always show TRUE value"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621287318912b45d36a3051",
    "number": 14580,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #14573 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nAdded the ability to `Phalcon\\Model::findFirstBy*` and `Phalcon\\Model::findBy*` to process passed parameters (for `order` etc.)\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14573-model-finder-params",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14580?src=pr&el=h1) Report\n> Merging [#14580](https://codecov.io/gh/phalcon/cphalcon/pull/14580?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/f303821cfda1d43aee590bd7291a2e7e3154be02?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14580      +/-   ##\n==========================================\n+ Coverage   67.77%   67.77%   +<.01%     \n==========================================\n  Files         488      488              \n  Lines      112599   112606       +7     \n==========================================\n+ Hits        76317    76324       +7     \n  Misses      36282    36282\n```\n"
    ],
    "commit_messages": [
      "[#14573] - Minor update"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621287418912b45d36a3052",
    "number": 14576,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14559\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nSet \"/\" on empty route to match 3.4 behaviour.\r\n\r\n",
    "head_branch": "fix-issue-14559",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14576?src=pr&el=h1) Report\n> Merging [#14576](https://codecov.io/gh/phalcon/cphalcon/pull/14576?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/bd5f6ac8fb435981c15522b4a9e617c2b76baf5f?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14576      +/-   ##\n==========================================\n+ Coverage   67.77%   67.77%   +<.01%     \n==========================================\n  Files         488      488              \n  Lines      112596   112599       +3     \n==========================================\n+ Hits        76314    76317       +3     \n  Misses      36282    36282\n```\n"
    ],
    "commit_messages": [
      "Merge remote-tracking branch 'upstream/4.0.x' into fix-issue-14559"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621287518912b45d36a3053",
    "number": 14572,
    "body": "Changed badges",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[4.0.x] - Changed the badges"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621287618912b45d36a3054",
    "number": 14571,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #14556 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\Http\\Request::getQuery`,`Phalcon\\Http\\Request::getPut`,`Phalcon\\Http\\Request::getPost` to treat `0` as non empty for `allowNoEmpty`\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14556-zero-value",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14571?src=pr&el=h1) Report\n> Merging [#14571](https://codecov.io/gh/phalcon/cphalcon/pull/14571?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/84924803960de4e62c96afd401b3c2da08ec3d5f?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14571      +/-   ##\n==========================================\n+ Coverage   67.77%   67.77%   +<.01%     \n==========================================\n  Files         488      488              \n  Lines      112578   112596      +18     \n==========================================\n+ Hits        76297    76314      +17     \n- Misses      36281    36282       +1\n```\n"
    ],
    "commit_messages": [
      "Merge pull request #14571 from niden/T14556-zero-value\n\n[#14556] - Corrected getQuery to treat 0 as not empty"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621287718912b45d36a3055",
    "number": 14570,
    "body": "Hello!\r\n\r\n* Type: bug fix - new feature\r\n* Link to issue: #14562 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [x] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14562-cache-unserialize",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14570?src=pr&el=h1) Report\n> Merging [#14570](https://codecov.io/gh/phalcon/cphalcon/pull/14570?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/b6da249ea230b47cd20b9602bd4dbacef944e9cc?src=pr&el=desc) will **increase** coverage by `0.03%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14570      +/-   ##\n==========================================\n+ Coverage   67.73%   67.77%   +0.03%     \n==========================================\n  Files         488      488              \n  Lines      112566   112578      +12     \n==========================================\n+ Hits        76249    76297      +48     \n+ Misses      36317    36281      -36\n```\n"
    ],
    "commit_messages": [
      "[#14562] - Added more tests"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621287818912b45d36a3056",
    "number": 14568,
    "body": "Hello!\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nUpdate resources\r\n\r\nThanks\r\n\r\n",
    "head_branch": "upd-resources",
    "is_a_fork": true,
    "comments": [
      "@Arhell The failing appveyor fail is not caused by your code. See #14563 14563",
      "Thank you @Arhell "
    ],
    "commit_messages": [
      "update resources"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621287918912b45d36a3057",
    "number": 14566,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #14488 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\Mvc\\Model::cloneResultMap` to correctly recognize aliased fields and include them in the resultset\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14488-column-map",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14566?src=pr&el=h1) Report\n> Merging [#14566](https://codecov.io/gh/phalcon/cphalcon/pull/14566?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/858d0e57ed42f0dcd8723cca64798dded84790ea?src=pr&el=desc) will **decrease** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14566      +/-   ##\n==========================================\n- Coverage   67.73%   67.73%   -0.01%     \n==========================================\n  Files         488      488              \n  Lines      112557   112566       +9     \n==========================================\n+ Hits        76243    76249       +6     \n- Misses      36314    36317       +3\n```\n"
    ],
    "commit_messages": [
      "[#14488] - Updated changelog"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621287a18912b45d36a3058",
    "number": 14561,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #14555 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [x] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nChanged `Phalcon\\Di::setRaw` to `Phalcon\\Di::setService` to align more with the use of the method\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14555-di-getraw",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14561?src=pr&el=h1) Report\n> Merging [#14561](https://codecov.io/gh/phalcon/cphalcon/pull/14561?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/8dd464889fba5bc6b54f85a36dfa51fd212c2256?src=pr&el=desc) will **decrease** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14561      +/-   ##\n==========================================\n- Coverage   67.73%   67.73%   -0.01%     \n==========================================\n  Files         488      488              \n  Lines      112562   112557       -5     \n==========================================\n- Hits        76247    76243       -4     \n+ Misses      36315    36314       -1\n```\n",
      "I'll fix AppVeyor build issue a bit later"
    ],
    "commit_messages": [
      "[#14555] - Trying .12 again"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621287b18912b45d36a3059",
    "number": 14558,
    "body": "Hello!\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nAdd changelog v3\r\nThanks\r\n\r\n",
    "head_branch": "upd-changelog",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14558?src=pr&el=h1) Report\n> Merging [#14558](https://codecov.io/gh/phalcon/cphalcon/pull/14558?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/6122d1f7d91bc5ef91ba86c4b30ac4e9e5c46384?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@           Coverage Diff           @@\n##            4.0.x   #14558   +/-   ##\n=======================================\n  Coverage   67.73%   67.73%           \n=======================================\n  Files         488      488           \n  Lines      112562   112562           \n=======================================\n  Hits        76247    76247           \n  Misses      36315    36315\n```\n",
      "Thank you"
    ],
    "commit_messages": [
      "Merge pull request #14558 from Arhell/upd-changelog\n\nupdate changelog v3"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621287c18912b45d36a305a",
    "number": 14554,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #14553 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\Escaper::escapeHtml` and `Phalcon\\Escaper::escapeHtmlAttr` to allow `null` values\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14553-escaper-nulls",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14554?src=pr&el=h1) Report\n> Merging [#14554](https://codecov.io/gh/phalcon/cphalcon/pull/14554?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/4ac8ee8abb5ba832552170da76c8649245d3df73?src=pr&el=desc) will **decrease** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14554      +/-   ##\n==========================================\n- Coverage   67.73%   67.73%   -0.01%     \n==========================================\n  Files         488      488              \n  Lines      112556   112562       +6     \n==========================================\n+ Hits        76245    76247       +2     \n- Misses      36311    36315       +4\n```\n"
    ],
    "commit_messages": [
      "[#14553] - Updated Changelog"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621287d18912b45d36a305b",
    "number": 14552,
    "body": "Hello!\r\n\r\n* Type: NFR\r\n* Link to issue: #14551 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [x] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\n- Fixed `Phalcon\\Storage\\Adapter\\AbstractAdapter`, `Phalcon\\Storage\\Adapter\\AbstractInterface` getters to contain a default value \r\n- Fixed `Phalcon\\Storage\\Adapter\\Memory` initializing the array store correctly \r\n- Fixed `Phalcon\\Storage\\Adapter\\Stream` to capture notice if the stream is not opened properly \r\n- Fixed `Phalcon\\Security::getRandomBytes` to return `int`\r\n- Fixed `Phalcon\\Security` to use `10` as the default work factor\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14551-workfactor-set",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14552?src=pr&el=h1) Report\n> Merging [#14552](https://codecov.io/gh/phalcon/cphalcon/pull/14552?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/9c2f9b5bd5d3a540a9d771df2891f2ee4a71803e?src=pr&el=desc) will **decrease** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14552      +/-   ##\n==========================================\n- Coverage   67.74%   67.73%   -0.01%     \n==========================================\n  Files         488      488              \n  Lines      112553   112556       +3     \n==========================================\n- Hits        76247    76245       -2     \n- Misses      36306    36311       +5\n```\n"
    ],
    "commit_messages": [
      "[#14551] - Changelog update"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621287e18912b45d36a305c",
    "number": 14550,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #14549 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\Mvc\\Model\\MetaData\\Apcu` and `Phalcon\\Mvc\\Model\\MetaData\\Redis` to allow setting the `prefix` and `lifetime` using the options or use the default.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14549-metadata-prefix",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14550?src=pr&el=h1) Report\n> Merging [#14550](https://codecov.io/gh/phalcon/cphalcon/pull/14550?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/4edb1c3711f75c72536a945b15892dd71cef68a4?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14550      +/-   ##\n==========================================\n+ Coverage   67.73%   67.74%   +<.01%     \n==========================================\n  Files         488      488              \n  Lines      112533   112553      +20     \n==========================================\n+ Hits        76227    76247      +20     \n  Misses      36306    36306\n```\n"
    ],
    "commit_messages": [
      "[#14549] - Corrected test"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621288018912b45d36a305d",
    "number": 14548,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14547 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\Logger\\Formatter\\Line` to not add `PHP_EOL` at the end of the message and added it to the `Phalcon\\Logger\\Adapter\\Stream`\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14547-syslog-phpeol",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14548?src=pr&el=h1) Report\n> Merging [#14548](https://codecov.io/gh/phalcon/cphalcon/pull/14548?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/2a3bd38d7c295afad9f5e53e405a5229ee546dbd?src=pr&el=desc) will **decrease** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14548      +/-   ##\n==========================================\n- Coverage   67.73%   67.73%   -0.01%     \n==========================================\n  Files         488      488              \n  Lines      112539   112533       -6     \n==========================================\n- Hits        76233    76227       -6     \n  Misses      36306    36306\n```\n"
    ],
    "commit_messages": [
      "[#14547] - Restored commented out code"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621288118912b45d36a305e",
    "number": 14545,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nAdded de default Phalcon banner to our stubs config",
    "head_branch": "banner-add",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14545?src=pr&el=h1) Report\n> Merging [#14545](https://codecov.io/gh/phalcon/cphalcon/pull/14545?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/20b363d74289b31cffd27ed55577df9cee5b83be?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@           Coverage Diff           @@\n##            4.0.x   #14545   +/-   ##\n=======================================\n  Coverage   67.73%   67.73%           \n=======================================\n  Files         488      488           \n  Lines      112539   112539           \n=======================================\n  Hits        76233    76233           \n  Misses      36306    36306\n```\n"
    ],
    "commit_messages": [
      "Added stubs settings"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621288218912b45d36a305f",
    "number": 14542,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14538 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `PhalconMvc\\Model` to ignore internal setters if properties have the same name as the setter\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14538-model-source-property",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14542?src=pr&el=h1) Report\n> Merging [#14542](https://codecov.io/gh/phalcon/cphalcon/pull/14542?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/edff0bf8efdbdb032237671c15b310e68c7c6b6f?src=pr&el=desc) will **decrease** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14542      +/-   ##\n==========================================\n- Coverage   67.74%   67.73%   -0.01%     \n==========================================\n  Files         488      488              \n  Lines      112525   112539      +14     \n==========================================\n+ Hits        76229    76233       +4     \n- Misses      36296    36306      +10\n```\n"
    ],
    "commit_messages": [
      "[#14538] - Corrected version test"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621288318912b45d36a3060",
    "number": 14541,
    "body": "Hello!\r\n\r\n* Type: bug\r\n* Link to issue: #14532 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nChanged `PhalconMvc\\Router\\Annotations` to use `converters` instead of `conversors`\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14532-annotations-conversor",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14541?src=pr&el=h1) Report\n> Merging [#14541](https://codecov.io/gh/phalcon/cphalcon/pull/14541?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/926148e71b5776ad5f696722647f376eecdbea6e?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@           Coverage Diff           @@\n##            4.0.x   #14541   +/-   ##\n=======================================\n  Coverage   67.74%   67.74%           \n=======================================\n  Files         488      488           \n  Lines      112525   112525           \n=======================================\n  Hits        76229    76229           \n  Misses      36296    36296\n```\n"
    ],
    "commit_messages": [
      "Updated changelog"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621288518912b45d36a3061",
    "number": 14540,
    "body": "",
    "head_branch": "4.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14540 from phalcon/4.0.x\n\n4.0.0-rc.3"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621288618912b45d36a3062",
    "number": 14539,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14531 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\Mvc\\Model::save` (insert/update) to correctly create database statements when a schema is specified in the model\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14531-save-with-schema",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14539?src=pr&el=h1) Report\n> Merging [#14539](https://codecov.io/gh/phalcon/cphalcon/pull/14539?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/84e1bd595a5fcd90b7a2a980ae20111bad0ed208?src=pr&el=desc) will **increase** coverage by `0.03%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14539      +/-   ##\n==========================================\n+ Coverage   67.71%   67.75%   +0.03%     \n==========================================\n  Files         481      481              \n  Lines      111820   111864      +44     \n==========================================\n+ Hits        75715    75788      +73     \n+ Misses      36105    36076      -29\n```\n"
    ],
    "commit_messages": [
      "Merge pull request #14539 from niden/T14531-save-with-schema\n\nT14531 save with schema"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621288818912b45d36a3063",
    "number": 14537,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14531 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\Mvc\\Model::save` (insert/update) to correctly create database statements when a schema is specified in the model\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14531-save-with-schema",
    "is_a_fork": true,
    "comments": [
      "cc @sergeyklay ",
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14537?src=pr&el=h1) Report\n> Merging [#14537](https://codecov.io/gh/phalcon/cphalcon/pull/14537?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/84e1bd595a5fcd90b7a2a980ae20111bad0ed208?src=pr&el=desc) will **increase** coverage by `0.03%`.\n> The diff coverage is `65.42%`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14537      +/-   ##\n==========================================\n+ Coverage   67.71%   67.74%   +0.03%     \n==========================================\n  Files         481      488       +7     \n  Lines      111820   112525     +705     \n==========================================\n+ Hits        75715    76229     +514     \n- Misses      36105    36296     +191\n```\n",
      "Closing this to cherry pick the commits",
      "Closing this one - new PR coming"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621288a18912b45d36a3064",
    "number": 14536,
    "body": "Changed the `LICENSE.txt` to `LICENSE.md` throughout the framework so that GitHub can show our license in the front page.\r\n\r\nThis will be applied when RC3 is out.",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [
      "cc @sergeyklay @ruudboon ",
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14536?src=pr&el=h1) Report\n> Merging [#14536](https://codecov.io/gh/phalcon/cphalcon/pull/14536?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/84e1bd595a5fcd90b7a2a980ae20111bad0ed208?src=pr&el=desc) will **decrease** coverage by `<.01%`.\n> The diff coverage is `64.9%`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14536      +/-   ##\n==========================================\n- Coverage   67.71%    67.7%   -0.01%     \n==========================================\n  Files         481      488       +7     \n  Lines      111820   112481     +661     \n==========================================\n+ Hits        75715    76156     +441     \n- Misses      36105    36325     +220\n```\n",
      "@niden Please take a look at https://github.com/phalcon/zephir. You don't need rename file to help GitHub show license in the front page. You just have to follow _the standard format of the license_ agreement and _not write anything extra_ to this file.\r\n\r\n<img width=\"1074\" alt=\"image\" src=\"https://user-images.githubusercontent.com/1256298/68992257-bfc66b80-0871-11ea-8db2-f8b4e245487b.png\">\r\n",
      "In this case this can be closed "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621288b18912b45d36a3065",
    "number": 14530,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #14523 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [x] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\Mvc\\Model\\MetaDataInterface::getIdentityField` and `Phalcon\\Mvc\\Model\\MetaData::getIdentityField` to also return `null` if the identity field is not present\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14523-getidentityfield",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14530?src=pr&el=h1) Report\n> Merging [#14530](https://codecov.io/gh/phalcon/cphalcon/pull/14530?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/45bef7b75160c1c205d511ea678ece246fbc9582?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@           Coverage Diff           @@\n##            4.0.x   #14530   +/-   ##\n=======================================\n  Coverage   67.71%   67.71%           \n=======================================\n  Files         481      481           \n  Lines      111762   111762           \n=======================================\n  Hits        75679    75679           \n  Misses      36083    36083\n```\n"
    ],
    "commit_messages": [
      "Merge branch '4.0.x' into T14523-getidentityfield"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621288c18912b45d36a3066",
    "number": 14529,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14528 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nCorrected `Phalcon\\Storage\\Serializer\\Json` to serialize objects that implement the `JsonSerializable` interface. Corrected `Phalcon\\Collection` to correctly return one level nested objects that implement `JsonSerializable`\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14528-json-serialize",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14529?src=pr&el=h1) Report\n> Merging [#14529](https://codecov.io/gh/phalcon/cphalcon/pull/14529?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/88ccba518dfd070bc04a77d2daaaafd8afa1700d?src=pr&el=desc) will **decrease** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14529      +/-   ##\n==========================================\n- Coverage   67.71%   67.71%   -0.01%     \n==========================================\n  Files         481      481              \n  Lines      111762   111819      +57     \n==========================================\n+ Hits        75679    75715      +36     \n- Misses      36083    36104      +21\n```\n"
    ],
    "commit_messages": [
      "[#14528] - Typo fix"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621288e18912b45d36a3067",
    "number": 14526,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/12977 | https://github.com/phalcon/cphalcon/issues/11633\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nIf you specify multiple view directories using, it creates an abnormality where the same file will be included from every view directory it exists. Rather than continuing the view directory loop, this breaks out of the function completely.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "4.0.x-multiple-view-dirs",
    "is_a_fork": true,
    "comments": [
      "cc @maurits150 @memmaker - thanks to the original reporters of this.",
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14526?src=pr&el=h1) Report\n> Merging [#14526](https://codecov.io/gh/phalcon/cphalcon/pull/14526?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/3a42345825ea0bf62ace3586f71084f4f01d105a?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14526      +/-   ##\n==========================================\n+ Coverage   67.71%   67.71%   +<.01%     \n==========================================\n  Files         481      481              \n  Lines      111827   111820       -7     \n==========================================\n- Hits        75719    75715       -4     \n+ Misses      36108    36105       -3\n```\n",
      "I'll get the testing added in tomorrow.",
      "I guess that notExists can be removed now that you always return when a view is found.",
      "I've added the testing in for this. Additionally, per @maurits150 , I have also removed the notExists boolean as it isn't needed anymore. I also went ahead and updated the change log.",
      "Excellent work. Thank you @Fenikkusu and @maurits150 for the implementation and input"
    ],
    "commit_messages": [
      "Returning Instead Of Breaking - Stop Processing Additional View Directories - Change Log"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621288f18912b45d36a3068",
    "number": 14525,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #14522 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [x] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nCorrected `Phalcon\\Logger\\Adapter\\Syslog` to correctly log messages. Removed `Phalcon\\Logger\\Formatter\\Syslog` it was kinda useless.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14523-logger-syslog",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14525?src=pr&el=h1) Report\n> Merging [#14525](https://codecov.io/gh/phalcon/cphalcon/pull/14525?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/4f2d159f50a70c24b53bbdb17ce89c21a125b94e?src=pr&el=desc) will **decrease** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14525      +/-   ##\n==========================================\n- Coverage   67.72%   67.71%   -0.01%     \n==========================================\n  Files         482      481       -1     \n  Lines      111793   111762      -31     \n==========================================\n- Hits        75710    75679      -31     \n  Misses      36083    36083\n```\n"
    ],
    "commit_messages": [
      "[#14523] - Removed ext related files"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621289018912b45d36a3069",
    "number": 14521,
    "body": "Hello!\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nСleaning the repository a bit, links to the backers logo are in the assets repository\r\n\r\nThanks\r\n\r\n",
    "head_branch": "remove-folder",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14521?src=pr&el=h1) Report\n> Merging [#14521](https://codecov.io/gh/phalcon/cphalcon/pull/14521?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/033c708b15d727e00e740bfc5650556a154251fb?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@           Coverage Diff           @@\n##            4.0.x   #14521   +/-   ##\n=======================================\n  Coverage   67.72%   67.72%           \n=======================================\n  Files         482      482           \n  Lines      111793   111793           \n=======================================\n  Hits        75710    75710           \n  Misses      36083    36083\n```\n",
      "Thank you @Arhell "
    ],
    "commit_messages": [
      "remove backers folder"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621289118912b45d36a306a",
    "number": 14520,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14519 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [x] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nAdded `Phalcon\\Http\\Request::numFiles` to return the number of files in the request\r\nFixed `Phalcon\\Http\\Request::hasFiles` to return boolean and `true` if files are present\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14519-request-hasfiles",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14520?src=pr&el=h1) Report\n> Merging [#14520](https://codecov.io/gh/phalcon/cphalcon/pull/14520?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/8bf181817c93cb3d977cff7535ddeb718d6a5c13?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14520      +/-   ##\n==========================================\n+ Coverage   67.71%   67.72%   +<.01%     \n==========================================\n  Files         482      482              \n  Lines      111796   111793       -3     \n==========================================\n+ Hits        75703    75710       +7     \n+ Misses      36093    36083      -10\n```\n"
    ],
    "commit_messages": [
      "[#14519] - Corrected test and emails"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621289218912b45d36a306b",
    "number": 14518,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: N/A\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThe change allows you to use existing `Phalcon\\Config` objects when building a `Phalcon\\Config\\Adapter\\Grouped`\r\n\r\nPreviously:\r\n\r\n```php\r\n\r\n$configA = new \\Phalcon\\Config(['a' => 'b']);\r\n\r\n$configB = new \\Phalcon\\Config\\Adapter\\Grouped([['adapter' => 'array', 'config' => $configA->toArray(), ['adapter' => 'json', ...]);\r\n\r\n```\r\n\r\nNow:\r\n\r\n```php\r\n\r\n$configA = new \\Phalcon\\Config(['a' => 'b']);\r\n$configB = new \\Phalcon\\Config\\Adapter\\Grouped([$configA, ['adapter' => 'json', ...]);\r\n\r\n```\r\n\r\nMy specific use case for this stems from having a default configuration object that already existed and merging it with other configurations.\r\n\r\nThanks\r\n",
    "head_branch": "master-config",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14518?src=pr&el=h1) Report\n> Merging [#14518](https://codecov.io/gh/phalcon/cphalcon/pull/14518?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/8bf181817c93cb3d977cff7535ddeb718d6a5c13?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14518      +/-   ##\n==========================================\n+ Coverage   67.71%   67.72%   +<.01%     \n==========================================\n  Files         482      482              \n  Lines      111796   111801       +5     \n==========================================\n+ Hits        75703    75714      +11     \n+ Misses      36093    36087       -6\n```\n",
      "FYI, I've not worried about the last two steps as I wasn't entirely positive this would be accepted or not. I don't see a reason why it shouldn't be, but I could be not thinking of something.",
      "Thank you @Fenikkusu "
    ],
    "commit_messages": [
      "Adding Ability to use actual config object in Grouped - Debugging"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621289318912b45d36a306c",
    "number": 14517,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #14515 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\Annotations\\Adapter\\Stream::read` and `Phalcon\\Annotations\\Adapter\\Stream::write` to use `serialize`/`unserialize` vs. `var_export` \r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14515-annotataions-stream",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14517?src=pr&el=h1) Report\n> Merging [#14517](https://codecov.io/gh/phalcon/cphalcon/pull/14517?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/36912b27699313c352ca1b67a6a187f7b0e7a44a?src=pr&el=desc) will **increase** coverage by `0.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14517      +/-   ##\n==========================================\n+ Coverage   67.69%   67.71%   +0.01%     \n==========================================\n  Files         482      482              \n  Lines      111775   111796      +21     \n==========================================\n+ Hits        75670    75703      +33     \n+ Misses      36105    36093      -12\n```\n"
    ],
    "commit_messages": [
      "[#14515] - PHPCS"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621289418912b45d36a306d",
    "number": 14516,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #14514 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [x] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\Logger` to correctly add transactional logging to any adapter the developer wants.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14514-logger-transactions",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14516?src=pr&el=h1) Report\n> Merging [#14516](https://codecov.io/gh/phalcon/cphalcon/pull/14516?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/330e2853e28e5e5bb3a98f21d4f36ca6e99ef9ae?src=pr&el=desc) will **decrease** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14516      +/-   ##\n==========================================\n- Coverage   67.69%   67.69%   -0.01%     \n==========================================\n  Files         482      482              \n  Lines      111763   111775      +12     \n==========================================\n+ Hits        75663    75670       +7     \n- Misses      36100    36105       +5\n```\n"
    ],
    "commit_messages": [
      "[#14514] - Updated changelog"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621289518912b45d36a306e",
    "number": 14513,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14491\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nFixed issue\r\n",
    "head_branch": "fix-issue-14491",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14513?src=pr&el=h1) Report\n> Merging [#14513](https://codecov.io/gh/phalcon/cphalcon/pull/14513?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/ba8545de0df9d747883d768cd733fd6528cbd643?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@           Coverage Diff           @@\n##            4.0.x   #14513   +/-   ##\n=======================================\n  Coverage   67.74%   67.74%           \n=======================================\n  Files         482      482           \n  Lines      111428   111428           \n=======================================\n  Hits        75483    75483           \n  Misses      35945    35945\n```\n"
    ],
    "commit_messages": [
      "Removed space"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621289618912b45d36a306f",
    "number": 14511,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThis is very similar to  `hasManyToMany`, but it can only use one intermediate row.\r\nThe related record is either `ModelInterface`, or `null`.\r\n\r\nThis is kind of an antipattern, but it can be useful when you have to work with a poorly designed database structure that can't be altered.\r\n\r\nThanks,\r\nzsilbi\r\n\r\n",
    "head_branch": "model-has-one-through-relation",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14511?src=pr&el=h1) Report\n> Merging [#14511](https://codecov.io/gh/phalcon/cphalcon/pull/14511?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/169e9ab6b9a02eec5ec8826b67a331acf2983da6?src=pr&el=desc) will **decrease** coverage by `0.04%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14511      +/-   ##\n==========================================\n- Coverage   67.74%    67.7%   -0.05%     \n==========================================\n  Files         482      482              \n  Lines      111424   111754     +330     \n==========================================\n+ Hits        75483    75659     +176     \n- Misses      35941    36095     +154\n```\n",
      "Thank you @zsilbi ",
      "@zsilbi Could you explain why it's anti-pattern? I genuinely want to know. I thought it's perfectly normal to design database that way if you want to have an optional relationship and normalized database, i.e.\r\n\r\n**document**\r\ndocument_id (PK)\r\n...\r\n\r\n**document_approved_by**\r\ndocument_id (PK)\r\nuser_id (FK)\r\n\r\n**user**\r\nuser_id (PK)\r\n\r\ninstead of\r\n\r\n**document**\r\ndocument_id (PK)\r\napproved_by (FK) nullable\r\n\r\nThanks and also thanks for PR :)",
      "> @zsilbi Could you explain why it's anti-pattern?\r\n\r\nWhat I think I really meant there, that performance wise there can be better alternatives to this. \r\nBut I also started to use it in some distinct cases, and I also see the beauty in your example. 😄 "
    ],
    "commit_messages": [
      "Changelog"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621289718912b45d36a3070",
    "number": 14510,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nFixed `Phalcon\\Mvc\\Model` to include correct model instances in messages metadata\r\n\r\nThanks,\r\nzsilbi",
    "head_branch": "model-minor-fixes",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14510?src=pr&el=h1) Report\n> Merging [#14510](https://codecov.io/gh/phalcon/cphalcon/pull/14510?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/169e9ab6b9a02eec5ec8826b67a331acf2983da6?src=pr&el=desc) will **decrease** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14510      +/-   ##\n==========================================\n- Coverage   67.74%   67.74%   -0.01%     \n==========================================\n  Files         482      482              \n  Lines      111424   111428       +4     \n==========================================\n  Hits        75483    75483              \n- Misses      35941    35945       +4\n```\n",
      "Thank you @zsilbi "
    ],
    "commit_messages": [
      "Changelog"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621289818912b45d36a3071",
    "number": 14509,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nFixed `Phalcon\\Mvc\\Model\\Manager::getRelations()` and `getRelationsBetween()` to return many-to-many relations correctly.\r\n\r\nThanks,\r\nzsilbi",
    "head_branch": "model-bugfixes",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14509?src=pr&el=h1) Report\n> Merging [#14509](https://codecov.io/gh/phalcon/cphalcon/pull/14509?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/1a3a84dc721a48d8a03d64823af1d88891f5c595?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14509      +/-   ##\n==========================================\n+ Coverage   67.69%   67.69%   +<.01%     \n==========================================\n  Files         482      482              \n  Lines      111758   111763       +5     \n==========================================\n+ Hits        75659    75663       +4     \n- Misses      36099    36100       +1\n```\n",
      "@zsilbi When you get a chance can you rebase this please?",
      "Thank you @zsilbi "
    ],
    "commit_messages": [
      "Changelog"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621289918912b45d36a3072",
    "number": 14508,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #14507 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [x] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nAdded support for [PSR-13](https://www.php-fig.org/psr/psr-13/) links and evolvable links \r\n  - Added `Phalcon\\Html\\Link\\Link`\r\n  - Added `Phalcon\\Html\\Link\\LinkProvider`\r\n  - Added `Phalcon\\Html\\Link\\EvolvableLink`\r\n  - Added `Phalcon\\Html\\Link\\EvolvableLinkProvider`\r\n  - Added `Phalcon\\Html\\Link\\Serializer\\Header`\r\n  - Added `Phalcon\\Html\\Link\\Serializer\\SerializerInterface`\r\n\r\nThanks\r\n\r\n",
    "head_branch": "PSR-13",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14508?src=pr&el=h1) Report\n> Merging [#14508](https://codecov.io/gh/phalcon/cphalcon/pull/14508?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/e673f6cfa27db866a8b3a95d34f09c6ad11d7faa?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14508      +/-   ##\n==========================================\n+ Coverage   67.73%   67.74%   +<.01%     \n==========================================\n  Files         482      482              \n  Lines      111400   111424      +24     \n==========================================\n+ Hits        75459    75483      +24     \n  Misses      35941    35941\n```\n"
    ],
    "commit_messages": [
      "[PSR] - Updated changelog"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621289a18912b45d36a3073",
    "number": 14505,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change: Corrected imports\r\n\r\nThanks\r\n\r\n",
    "head_branch": "imports",
    "is_a_fork": true,
    "comments": [
      "@ruudboon \r\nI'm not sure I understand you correctly. Can you clarify?",
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14505?src=pr&el=h1) Report\n> Merging [#14505](https://codecov.io/gh/phalcon/cphalcon/pull/14505?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/8777c10d36781176ba57e055014a9bb4c3a24b73?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@           Coverage Diff           @@\n##            4.0.x   #14505   +/-   ##\n=======================================\n  Coverage    67.7%    67.7%           \n=======================================\n  Files         482      482           \n  Lines      111388   111388           \n=======================================\n  Hits        75418    75418           \n  Misses      35970    35970\n```\n",
      "> @ruudboon\r\n> I'm not sure I understand you correctly. Can you clarify?\r\n\r\nSorry, My mistake EventsManagerInterface isn't the same namespace.",
      "Thank you @ekmst "
    ],
    "commit_messages": [
      "the corrected imports"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621289b18912b45d36a3074",
    "number": 14504,
    "body": "Hello!\r\n\r\n* Type: new feature | optimization | performance\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nRewrote `Paginator\\Adapter\\Model` using offset.\r\nSince the previous implementation received all the records and paged it at the application level. Below is an example of queries:\r\n\r\n```php\r\nuse Phalcon\\Paginator\\Adapter\\Model;\r\n\r\n$paginator = new Model (\r\n    [\r\n        'data' => Test :: find (\r\n            [\r\n                'columns' => 'id, column, column1'\r\n            ]\r\n        ),\r\n        'limit' => 3,\r\n        'page' => 4,\r\n    ]\r\n);\r\n\r\n```\r\n\r\n```sql\r\nSELECT `test`.`id`,` test`.`column`, `test`.`column1` FROM` test`\r\n```\r\n\r\nAnd here is an example request using offset:\r\n\r\n```php\r\nuse Phalcon\\Paginator\\Adapter\\Model;\r\n\r\n$paginator = new Model (\r\n    [\r\n        'model' => Test :: class,\r\n        'parameters' => [\r\n            'columns' => 'id, column, column1',\r\n            'limit'  => 12,  // will be ignored\r\n        ],\r\n        'limit' => 3,\r\n        'page' => 4,\r\n    ]\r\n);\r\n\r\n```\r\n\r\n```sql\r\nSELECT `test`.`id`,` test`.`column`, `test`.`column1` FROM` test` LIMIT: APL0 OFFSET: APL1\r\n\r\n-- [APL0] => 3\r\n-- [APL1] => 9\r\n```\r\n\r\nBut I had to change the `Model` adapter settings. Which breaks backward compatibility with the previous version\r\n\r\n\r\nWhat do you think of it?\r\n\r\nThanks\r\n\r\n",
    "head_branch": "model-paginator-offset",
    "is_a_fork": true,
    "comments": [
      "@ekmst if you are going to break backwards compatibility now is the time to do it before v4 is out.\r\n\r\nGo ahead with this. We will also need to update the docs and note the BC change in the upgrade document",
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14504?src=pr&el=h1) Report\n> Merging [#14504](https://codecov.io/gh/phalcon/cphalcon/pull/14504?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/8777c10d36781176ba57e055014a9bb4c3a24b73?src=pr&el=desc) will **increase** coverage by `0.02%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14504      +/-   ##\n==========================================\n+ Coverage    67.7%   67.73%   +0.02%     \n==========================================\n  Files         482      482              \n  Lines      111388   111400      +12     \n==========================================\n+ Hits        75418    75459      +41     \n+ Misses      35970    35941      -29\n```\n",
      "Thank you @ekmst "
    ],
    "commit_messages": [
      "corrected imports"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621289d18912b45d36a3075",
    "number": 14502,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\Container:get` to use `getShared` transparently \r\n\r\nThanks\r\n\r\n",
    "head_branch": "container-fix",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14502?src=pr&el=h1) Report\n> Merging [#14502](https://codecov.io/gh/phalcon/cphalcon/pull/14502?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/3cfaabcb7e660e5ed4a22b3b45f26db3f149c7bb?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@           Coverage Diff           @@\n##            4.0.x   #14502   +/-   ##\n=======================================\n  Coverage    67.7%    67.7%           \n=======================================\n  Files         482      482           \n  Lines      111388   111388           \n=======================================\n  Hits        75418    75418           \n  Misses      35970    35970\n```\n"
    ],
    "commit_messages": [
      "[container] - Updating tests"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621289e18912b45d36a3076",
    "number": 14500,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14281\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nReplace deprecated settimeout function with expire\r\nThanks\r\n\r\n",
    "head_branch": "3.4.x",
    "is_a_fork": true,
    "comments": [
      "Thank you!",
      "Any chance for another bugfix release in the next weeks?",
      "Well, in general it's possible. Let's find something else to fix for 3.4.x ",
      "Any pointers for low hanging fruits?",
      "Nope :-/",
      "`ext/phalcon/cache/backend/redis.zep.c` still uses `settimeout`. Is this an onversight or generated on release only?",
      "@aleho Usually this is re-generated before release. You can easily regenerate C-code for Phalcon 3.x using Zephir 0.10.x",
      "if you're using the url like `https://github.com/phalcon/cphalcon/archive/v3.4.5.tar.gz` to install phalcon, there is only \"`settimeout`\" call used in `/cphalcon-3.4.5/build/php7/64bits/*`. Expected \"`expire`\" not found. Did someone forgot to regenerate the c files after this commit was merged?\r\nSo this still isn't fixed. Please correct me if i'm wrong.",
      "@someson if it is the case, you will need to regenerate by yourself."
    ],
    "commit_messages": [
      "Merge pull request #14500 from nanotronic/3.4.x\n\nFixed Storage\\Adapter\\Redis::settimeout"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621289f18912b45d36a3077",
    "number": 14499,
    "body": "Hello!\r\n\r\n* Type: code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change: Minor improvements\r\n\r\nThanks\r\n\r\n",
    "head_branch": "docblock",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14499?src=pr&el=h1) Report\n> Merging [#14499](https://codecov.io/gh/phalcon/cphalcon/pull/14499?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/5d0c288c31fbbd7fe0ac51300579a16d38bf5aaf?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@           Coverage Diff           @@\n##            4.0.x   #14499   +/-   ##\n=======================================\n  Coverage    67.7%    67.7%           \n=======================================\n  Files         482      482           \n  Lines      111388   111388           \n=======================================\n  Hits        75418    75418           \n  Misses      35970    35970\n```\n",
      "@ekmst Could you please remove redundant import declaration from `phalcon/Storage/Adapter/Stream.zep` file:\r\n\r\n```\r\nuse Phalcon\\Storage\\Adapter\\AbstractAdapter;\r\n```",
      "@sergeyklay \r\n\r\n> AbstractAdapter\r\n\r\nStream inherits from AbstractAdapter\r\n\r\nhttps://github.com/phalcon/cphalcon/blob/5d0c288c31fbbd7fe0ac51300579a16d38bf5aaf/phalcon/Storage/Adapter/Stream.zep#L27",
      "@ekmst you don't need import it because the same namespace",
      "@niden \r\nDone",
      "Thank you @ekmst "
    ],
    "commit_messages": [
      "corrected the imports"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662128a018912b45d36a3078",
    "number": 14497,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14491 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nFixed issue. Please don't merge yet, need to test on Travis and will add some more test.\r\n\r\n",
    "head_branch": "issue-14491",
    "is_a_fork": true,
    "comments": [
      "When you can Ruud please rebase. The annotations changes should be as before not as this PR.",
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14497?src=pr&el=h1) Report\n> Merging [#14497](https://codecov.io/gh/phalcon/cphalcon/pull/14497?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/ba8545de0df9d747883d768cd733fd6528cbd643?src=pr&el=desc) will **decrease** coverage by `0.03%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14497      +/-   ##\n==========================================\n- Coverage   67.74%    67.7%   -0.04%     \n==========================================\n  Files         482      482              \n  Lines      111428   111384      -44     \n==========================================\n- Hits        75483    75416      -67     \n- Misses      35945    35968      +23\n```\n",
      "@ruudboon Any new on this?"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662128a118912b45d36a3079",
    "number": 14495,
    "body": "Hello!\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nAdd rc2\r\n\r\nThanks\r\n\r\n",
    "head_branch": "changelog-upd",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14495?src=pr&el=h1) Report\n> Merging [#14495](https://codecov.io/gh/phalcon/cphalcon/pull/14495?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/5d0c288c31fbbd7fe0ac51300579a16d38bf5aaf?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@           Coverage Diff           @@\n##            4.0.x   #14495   +/-   ##\n=======================================\n  Coverage    67.7%    67.7%           \n=======================================\n  Files         482      482           \n  Lines      111388   111388           \n=======================================\n  Hits        75418    75418           \n  Misses      35970    35970\n```\n"
    ],
    "commit_messages": [
      "resources changelog upd"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662128a218912b45d36a307a",
    "number": 14494,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [x] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed interfaces for factory, added tests\r\n\r\nThanks\r\n\r\n",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [
      "@niden Running phpcbf should fix the CI build error.",
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14494?src=pr&el=h1) Report\n> Merging [#14494](https://codecov.io/gh/phalcon/cphalcon/pull/14494?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/a4ca3e04f3fcec39d32b521511a6b1c878e231e8?src=pr&el=desc) will **decrease** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14494      +/-   ##\n==========================================\n- Coverage    67.7%    67.7%   -0.01%     \n==========================================\n  Files         482      482              \n  Lines      111384   111388       +4     \n==========================================\n+ Hits        75416    75418       +2     \n- Misses      35968    35970       +2\n```\n"
    ],
    "commit_messages": [
      "[4.0.x] - PHPCS fix"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662128a318912b45d36a307b",
    "number": 14490,
    "body": "Hello!\r\n\r\n* Type: documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed return type docblock\r\n",
    "head_branch": "fix-docblock",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14490?src=pr&el=h1) Report\n> Merging [#14490](https://codecov.io/gh/phalcon/cphalcon/pull/14490?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/26e4ebcb88ddda2015a141ba7cd70ad61f27fa39?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@           Coverage Diff           @@\n##            4.0.x   #14490   +/-   ##\n=======================================\n  Coverage    67.7%    67.7%           \n=======================================\n  Files         482      482           \n  Lines      111384   111384           \n=======================================\n  Hits        75416    75416           \n  Misses      35968    35968\n```\n"
    ],
    "commit_messages": [
      "Fix return type docblock"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662128a618912b45d36a307c",
    "number": 14489,
    "body": "",
    "head_branch": "4.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14489 from phalcon/4.0.x\n\nv4.0.0-rc.2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662128a718912b45d36a307d",
    "number": 14487,
    "body": "Hello!\r\n\r\n* Type: bug fix/enhancement\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nCorrected docblock variables, added missing `use` statements, aligned interfaces\r\n\r\nThanks\r\n\r\n",
    "head_branch": "interface-alignment",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14487?src=pr&el=h1) Report\n> Merging [#14487](https://codecov.io/gh/phalcon/cphalcon/pull/14487?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/eab77a99c1b5ab74d3a2ade62d7c125b02886b0f?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `51.29%`.\n\n\n```diff\n@@           Coverage Diff           @@\n##            4.0.x   #14487   +/-   ##\n=======================================\n  Coverage    67.7%    67.7%           \n=======================================\n  Files         482      482           \n  Lines      111384   111384           \n=======================================\n  Hits        75416    75416           \n  Misses      35968    35968\n```\n"
    ],
    "commit_messages": [
      "[interface] - Removed unecessary files"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662128a818912b45d36a307e",
    "number": 14486,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14485\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n\r\nSmall description of change: Fixed an issue with updating and inserting data into tables with unmapped columns when `phalcon.orm.ignore_unknown_columns` is set to `true`.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "bugfix/ignore-unknown-columns",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14486?src=pr&el=h1) Report\n> Merging [#14486](https://codecov.io/gh/phalcon/cphalcon/pull/14486?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/8f5238b43d254b882c7b2457e7e3f50a875339b6?src=pr&el=desc) will **decrease** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14486      +/-   ##\n==========================================\n- Coverage   67.71%    67.7%   -0.01%     \n==========================================\n  Files         482      482              \n  Lines      111380   111384       +4     \n==========================================\n  Hits        75416    75416              \n- Misses      35964    35968       +4\n```\n",
      "Thanks @CameronHall "
    ],
    "commit_messages": [
      "[#14485] ignore_unknown_columns global is respected by update and insert"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662128a918912b45d36a307f",
    "number": 14484,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "@nithasha-samad Thank you for the changes. We will also need the same PR to the 4.0.x branch. You can cherry pick the changes. Usually we do not allow commits to the `master` branch but since this is the README we can allow it.",
      "@niden I think it will be easier if we this add this to the 4.0.x before RC.2",
      "We can cherry pick it after the changes are made.",
      "Changes requested have been implemented here: https://github.com/phalcon/cphalcon/pull/14536",
      "Thank you @nithasha-samad "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662128aa18912b45d36a3080",
    "number": 14483,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14480 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [x] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nAdded `Phalcon\\Logger::getLogLevel()` and `Phalcon\\Logger::setLogLevel()` setting the minimum log level for the logger \r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14480-log-level",
    "is_a_fork": true,
    "comments": [
      "cc @Jeckerson @ruudboon @sergeyklay ",
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14483?src=pr&el=h1) Report\n> Merging [#14483](https://codecov.io/gh/phalcon/cphalcon/pull/14483?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/b3f973eb04b0e01332e42149a71a38e3351daee7?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14483      +/-   ##\n==========================================\n+ Coverage    67.7%   67.71%   +<.01%     \n==========================================\n  Files         482      482              \n  Lines      111356   111380      +24     \n==========================================\n+ Hits        75392    75416      +24     \n  Misses      35964    35964\n```\n"
    ],
    "commit_messages": [
      "[#14480] - Updated changelog"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662128ab18912b45d36a3081",
    "number": 14482,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14481 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [x] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed interface alignment for storage and dispatcher\r\n\r\nThanks\r\n\r\n",
    "head_branch": "interface-corrections-2",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14482?src=pr&el=h1) Report\n> Merging [#14482](https://codecov.io/gh/phalcon/cphalcon/pull/14482?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/299fdcd18d23ce221c3c2933dff0c45f53d8358b?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14482      +/-   ##\n==========================================\n+ Coverage    67.7%    67.7%   +<.01%     \n==========================================\n  Files         482      482              \n  Lines      111354   111356       +2     \n==========================================\n+ Hits        75390    75392       +2     \n  Misses      35964    35964\n```\n",
      "cc @sergeyklay @ruudboon "
    ],
    "commit_messages": [
      "Update CHANGELOG-4.0.md\n\nCo-Authored-By: Anton Vasiliev <Jeckerson@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662128ac18912b45d36a3082",
    "number": 14479,
    "body": "Hello!\r\n\r\n* Type:  code quality \r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nUpgrade to Zephir 0.12.10\r\n",
    "head_branch": "zephir-0-12-10",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14479?src=pr&el=h1) Report\n> Merging [#14479](https://codecov.io/gh/phalcon/cphalcon/pull/14479?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/299fdcd18d23ce221c3c2933dff0c45f53d8358b?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@           Coverage Diff           @@\n##            4.0.x   #14479   +/-   ##\n=======================================\n  Coverage    67.7%    67.7%           \n=======================================\n  Files         482      482           \n  Lines      111354   111354           \n=======================================\n  Hits        75390    75390           \n  Misses      35964    35964\n```\n"
    ],
    "commit_messages": [
      "Fixed tyoi"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662128ad18912b45d36a3083",
    "number": 14478,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "link-fix",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14478?src=pr&el=h1) Report\n> Merging [#14478](https://codecov.io/gh/phalcon/cphalcon/pull/14478?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/ae7a7e5c6f68b2dbf7730a02e25bca13318090c7?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@           Coverage Diff           @@\n##            4.0.x   #14478   +/-   ##\n=======================================\n  Coverage    67.7%    67.7%           \n=======================================\n  Files         482      482           \n  Lines      111354   111354           \n=======================================\n  Hits        75390    75390           \n  Misses      35964    35964\n```\n",
      "Thnx"
    ],
    "commit_messages": [
      "Merge pull request #14478 from Arhell/link-fix\n\nreadme fix link"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662128ae18912b45d36a3084",
    "number": 14477,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nCorrected interfaces for Events Manager\r\n\r\nThanks\r\n\r\n",
    "head_branch": "interface-corrections",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14477?src=pr&el=h1) Report\n> Merging [#14477](https://codecov.io/gh/phalcon/cphalcon/pull/14477?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/c886ef49e965c9054c1c34c3cf538f921406fa99?src=pr&el=desc) will **increase** coverage by `0.02%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14477      +/-   ##\n==========================================\n+ Coverage   67.67%    67.7%   +0.02%     \n==========================================\n  Files         482      482              \n  Lines      111321   111350      +29     \n==========================================\n+ Hits        75335    75386      +51     \n+ Misses      35986    35964      -22\n```\n"
    ],
    "commit_messages": [
      "[interface] - Corrections for tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662128af18912b45d36a3085",
    "number": 14475,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n`Phalcon\\Paginator\\Repository` implementing `JsonSerializable`\r\n\r\nThanks\r\n",
    "head_branch": "jsonSerializable-paginator",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14475?src=pr&el=h1) Report\n> Merging [#14475](https://codecov.io/gh/phalcon/cphalcon/pull/14475?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/c886ef49e965c9054c1c34c3cf538f921406fa99?src=pr&el=desc) will **decrease** coverage by `0.1%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14475      +/-   ##\n==========================================\n- Coverage   67.67%   67.57%   -0.11%     \n==========================================\n  Files         482      482              \n  Lines      111321   111354      +33     \n==========================================\n- Hits        75335    75244      -91     \n- Misses      35986    36110     +124\n```\n",
      "Thank you @ekmst "
    ],
    "commit_messages": [
      "updated changelog [skip ci]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662128b018912b45d36a3086",
    "number": 14470,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nincorrect receipt of the `option` from the `options` parameter\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix/logger-options",
    "is_a_fork": true,
    "comments": [
      "Thank you @ekmst ",
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14470?src=pr&el=h1) Report\n> Merging [#14470](https://codecov.io/gh/phalcon/cphalcon/pull/14470?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/a26ad417465a34fcfb8929eb08e9018e5a956717?src=pr&el=desc) will **increase** coverage by `0.02%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14470      +/-   ##\n==========================================\n+ Coverage   67.67%   67.69%   +0.02%     \n==========================================\n  Files         482      482              \n  Lines      111331   111283      -48     \n==========================================\n- Hits        75339    75335       -4     \n+ Misses      35992    35948      -44\n```\n"
    ],
    "commit_messages": [
      "updated changelog [skip ci]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662128b118912b45d36a3087",
    "number": 14469,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [x] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\nUpgrade Zephir\r\nPerformance optimise globals\r\n",
    "head_branch": "zephir-upgrade",
    "is_a_fork": true,
    "comments": [
      "Appveyor seems to fail on 7.3. @sergeyklay mind having a look?",
      "@sergeyklay See https://ci.appveyor.com/project/sergeyklay/cphalcon/builds/28099702/job/19xf54u9v1q6fs97#L47",
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14469?src=pr&el=h1) Report\n> Merging [#14469](https://codecov.io/gh/phalcon/cphalcon/pull/14469?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/a26ad417465a34fcfb8929eb08e9018e5a956717?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14469      +/-   ##\n==========================================\n+ Coverage   67.67%   67.67%   +<.01%     \n==========================================\n  Files         482      482              \n  Lines      111331   111321      -10     \n==========================================\n- Hits        75339    75335       -4     \n+ Misses      35992    35986       -6\n```\n",
      "@niden Fixed :blush:"
    ],
    "commit_messages": [
      "Fixed appveyor issue"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662128b318912b45d36a3088",
    "number": 14468,
    "body": "Hello!\r\n\r\n* Type: Enhancement\r\n* Link to issue: #14466\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14466-model-changedfields",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14468?src=pr&el=h1) Report\n> Merging [#14468](https://codecov.io/gh/phalcon/cphalcon/pull/14468?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/86ed6b201a44f486182f204e8a698f04026f58ec?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14468      +/-   ##\n==========================================\n+ Coverage   67.66%   67.67%   +<.01%     \n==========================================\n  Files         482      482              \n  Lines      111331   111331              \n==========================================\n+ Hits        75337    75339       +2     \n+ Misses      35994    35992       -2\n```\n"
    ],
    "commit_messages": [
      "[#14466] - PHPCS fix"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662128b418912b45d36a3089",
    "number": 14467,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue: #14467\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\n`Phalcon\\Mvc\\Model::__callStatic()` now throws an exception if the called method is unknown.\r\nAdded tests for `Phalcon\\Mvc\\Model::__callStatic()`.\r\n\r\nThanks,\r\nzsilbi",
    "head_branch": "model-callstatic-exception",
    "is_a_fork": true,
    "comments": [
      "Magic methods using `Model::__callStatic()` now accept `0` and `null` and also an empty string as parameter.\r\n\r\nThese function calls are now valid:\r\n\r\n```php\r\nRobots::findByField(null);\r\nRobots::findByField(\"\");\r\nRobots::findByField(0);\r\n\r\nRobots::findFirstByField(null);\r\nRobots::findFirstByField(\"\");\r\nRobots::findFirstByField(0);\r\n\r\nRobots::countByField(null);\r\nRobots::countByField(\"\");\r\nRobots::countByField(0);\r\n```",
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14467?src=pr&el=h1) Report\n> Merging [#14467](https://codecov.io/gh/phalcon/cphalcon/pull/14467?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/a26ad417465a34fcfb8929eb08e9018e5a956717?src=pr&el=desc) will **increase** coverage by `0.02%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14467      +/-   ##\n==========================================\n+ Coverage   67.67%   67.69%   +0.02%     \n==========================================\n  Files         482      482              \n  Lines      111331   111360      +29     \n==========================================\n+ Hits        75339    75390      +51     \n+ Misses      35992    35970      -22\n```\n",
      "Thank you @zsilbi "
    ],
    "commit_messages": [
      "Merge branch '4.0.x' into model-callstatic-exception"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662128b518912b45d36a308a",
    "number": 14465,
    "body": "Hello!\r\n\r\n* Type: enhancement\r\n* Link to issue: #14464 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [x] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nAdded `cast` parameter to `Phalcon\\Collection::get` and `Phalcon\\Helper\\Arr::get` allowing developers to cast the result returned to the type they want to.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14464-cast-on-arr-collection",
    "is_a_fork": true,
    "comments": [
      "cc @ruudboon @sergeyklay ",
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14465?src=pr&el=h1) Report\n> Merging [#14465](https://codecov.io/gh/phalcon/cphalcon/pull/14465?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/d7f11516e4a57c1d27e12ec75d7226ecde60097e?src=pr&el=desc) will **decrease** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14465      +/-   ##\n==========================================\n- Coverage   67.67%   67.66%   -0.01%     \n==========================================\n  Files         482      482              \n  Lines      111229   111331     +102     \n==========================================\n+ Hits        75275    75337      +62     \n- Misses      35954    35994      +40\n```\n",
      "@ruudboon `settype` will return a notice if the wrong type is passed so we are OK on that."
    ],
    "commit_messages": [
      "[#14464] - Corrected type"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662128b618912b45d36a308b",
    "number": 14463,
    "body": "Hello!\r\n\r\n* Type: code quality \r\n* Link to issue:\r\nAllow zephir devel test to fail",
    "head_branch": "travis-allow-fail",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14463?src=pr&el=h1) Report\n> Merging [#14463](https://codecov.io/gh/phalcon/cphalcon/pull/14463?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/f36ee13f7ebff4b2f27f18104227ef63a1457266?src=pr&el=desc) will **increase** coverage by `0.02%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14463      +/-   ##\n==========================================\n+ Coverage   67.65%   67.67%   +0.02%     \n==========================================\n  Files         482      482              \n  Lines      111282   111229      -53     \n==========================================\n- Hits        75287    75275      -12     \n+ Misses      35995    35954      -41\n```\n"
    ],
    "commit_messages": [
      "Allow zephir dev to fail"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662128b718912b45d36a308c",
    "number": 14462,
    "body": "Hello!\r\n\r\n* Type: documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix/validation-changelog",
    "is_a_fork": true,
    "comments": [
      "Thank you @Jeckerson "
    ],
    "commit_messages": [
      "Fix Validator changes in CHANGELOG-4.0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662128b818912b45d36a308d",
    "number": 14461,
    "body": "Hello!\r\n\r\n* Type: code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "collection-class-phpdocs",
    "is_a_fork": true,
    "comments": [
      "Thank you @Jeckerson "
    ],
    "commit_messages": [
      "Update Collection class docs"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662128b918912b45d36a308e",
    "number": 14459,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nAdded missing methods to Phalcon\\Cli\\Task. Placed tests in correct files and added more tests.\r\n",
    "head_branch": "test-improvements",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14459?src=pr&el=h1) Report\n> Merging [#14459](https://codecov.io/gh/phalcon/cphalcon/pull/14459?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/df5bc7c9f5b774dad26cd8dff88af1c506b2be67?src=pr&el=desc) will **decrease** coverage by `0.03%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14459      +/-   ##\n==========================================\n- Coverage   67.68%   67.65%   -0.04%     \n==========================================\n  Files         482      482              \n  Lines      111272   111282      +10     \n==========================================\n- Hits        75317    75287      -30     \n- Misses      35955    35995      +40\n```\n"
    ],
    "commit_messages": [
      "Feedback pull request"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662128ba18912b45d36a308f",
    "number": 14458,
    "body": "Hello!\r\n\r\n* Type: new feature | documentation\r\n* Link to issue:https://github.com/phalcon/cphalcon/issues/13991\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR - not needed really, needs to check generated stubs\r\n- [x] I have updated the relevant CHANGELOG - not required since it doesn't add any new feature\r\n- [x] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change - no documentation change required\r\n\r\nSmall description of change: it adds `@param array config` etc on all methods having things like options, config etc with all keys which are accepted in those arrays, using plugin https://github.com/klesun/deep-assoc-completion for phpstorm it will autocomplete it in all usages of those methods.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "4.0.x-13391-ide-deep-assoc",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14458?src=pr&el=h1) Report\n> Merging [#14458](https://codecov.io/gh/phalcon/cphalcon/pull/14458?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/df5bc7c9f5b774dad26cd8dff88af1c506b2be67?src=pr&el=desc) will **increase** coverage by `0.03%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14458      +/-   ##\n==========================================\n+ Coverage   67.68%   67.71%   +0.03%     \n==========================================\n  Files         482      482              \n  Lines      111272   111662     +390     \n==========================================\n+ Hits        75317    75615     +298     \n- Misses      35955    36047      +92\n```\n",
      "We need to make sure that these comments end up in the stubs with `zephir stubs`\r\n",
      "@niden The `zephir stubs` command should leave they as is. If there are bugs, we can follow up in separated Zephir issue.",
      "Yea they are leaving them because regex don't detect it as `@param` currently, but then it still add new `@param mixed config` etc because of that. Need to test if everything will work with this.",
      "Currently in generated php file it looks like this:\r\n\r\n```\r\n/**\r\n@param array config = [\r\n    'test' => 'key'\r\n]\r\n@param mixed $config\r\n*/\r\n```\r\n\r\nSo we need changes to zephir stubs generation first.",
      "@Jurigag As a far as I know @AlexNDRmac working on this by improving `zephir stubs` command. \r\n\r\nNotice that annotations in the following form:\r\n```\r\n@param array config = [\r\n    'test' => 'key'\r\n]\r\n```\r\nare in non standard form and working with this should considered as a feature request. But actually there are more urgent (and honestly critical) things we should do firstly. So working with non-standard annotation isn't a top priority",
      "`zephir stubs` command improved here https://github.com/phalcon/zephir/pull/1976",
      "Will check it tomorrow and test stubs and merge this if everything works correctly.",
      "@Jurigag Any progress on this one? ",
      "Thank you @Jurigag \r\n\r\nWe need to make sure that these propagate to the stubs."
    ],
    "commit_messages": [
      "Finished arguments for deep-assoc plugin"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662128bb18912b45d36a3090",
    "number": 14457,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change: added missed `.` to key pattern\r\n[see](https://www.php-fig.org/psr/psr-16/#12-definitions)\r\n\r\nThanks\r\n",
    "head_branch": "fix/cache-key",
    "is_a_fork": true,
    "comments": [
      "@ekmst Thank you for this. If you don't mind update the changelog also.",
      "Thank you @ekmst !",
      "Do not follow blindly PSR.\r\n\r\nThere told must at least support this chars, but not should be limited this chars and \"MAY support additional characters and encodings\".\r\nSo you limited to cache content of page where page name or page url in national characters as cache key.\r\n\r\nAlso in PSR told \"The following characters are reserved for future extensions and MUST NOT be supported by implementing libraries: {}()/\\@:\" but most of this symbols correctly worked in apcu, memcached, redis and at least \":\", \"/\" needed for whole page caching by url."
    ],
    "commit_messages": [
      "changelog update [skip ci]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662128bc18912b45d36a3091",
    "number": 14455,
    "body": "Hello!\r\n\r\n* Type: optimization\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change: minor optimization on firewall\r\n\r\nThanks\r\n",
    "head_branch": "fix/firewall-controller-class",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14455?src=pr&el=h1) Report\n> Merging [#14455](https://codecov.io/gh/phalcon/cphalcon/pull/14455?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/4f7e98857df0fc91f1c8517de27c49d5b955d56a?src=pr&el=desc) will **decrease** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14455      +/-   ##\n==========================================\n- Coverage   67.68%   67.68%   -0.01%     \n==========================================\n  Files         482      482              \n  Lines      111275   111272       -3     \n==========================================\n- Hits        75320    75317       -3     \n  Misses      35955    35955\n```\n"
    ],
    "commit_messages": [
      "Merge pull request #14455 from ekmst/fix/firewall-controller-class\n\nMinor optimization on firewall. Thank you @ekmst"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662128bd18912b45d36a3092",
    "number": 14454,
    "body": "Hello!\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "upd-backers",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14454?src=pr&el=h1) Report\n> Merging [#14454](https://codecov.io/gh/phalcon/cphalcon/pull/14454?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/4f7e98857df0fc91f1c8517de27c49d5b955d56a?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@           Coverage Diff           @@\n##            4.0.x   #14454   +/-   ##\n=======================================\n  Coverage   67.68%   67.68%           \n=======================================\n  Files         482      482           \n  Lines      111275   111275           \n=======================================\n  Hits        75320    75320           \n  Misses      35955    35955\n```\n",
      "Changed to 4 branch & remove merge commits",
      "@Arhell thank you"
    ],
    "commit_messages": [
      "Merge pull request #14454 from Arhell/upd-backers\n\nupdate backers"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662128be18912b45d36a3093",
    "number": 14453,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nImproved getServerAddr test.\r\nImplemented Cli Task tests\r\n\r\n",
    "head_branch": "test-improvements",
    "is_a_fork": true,
    "comments": [
      "I believe the above error relates to this change https://github.com/phalcon/cphalcon/pull/14445",
      "> I believe the above error relates to this change #14445\r\n\r\nThink so to. Wondering if the local events manager should be even part of this class.",
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14453?src=pr&el=h1) Report\n> Merging [#14453](https://codecov.io/gh/phalcon/cphalcon/pull/14453?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/91fdab0b0b522a78a941e762520435c18e19fa48?src=pr&el=desc) will **decrease** coverage by `0.04%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14453      +/-   ##\n==========================================\n- Coverage   67.68%   67.63%   -0.05%     \n==========================================\n  Files         482      478       -4     \n  Lines      111275   110960     -315     \n==========================================\n- Hits        75320    75053     -267     \n+ Misses      35955    35907      -48\n```\n",
      "Let me close this for now and let me rework the full cli tests with proper namespaces etc"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662128bf18912b45d36a3094",
    "number": 14452,
    "body": "Add development version of Zephir to the build matrix. This will allow us to know whether we're ready for the latest, development version or not",
    "head_branch": "feature/test-zephir",
    "is_a_fork": false,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14452?src=pr&el=h1) Report\n> Merging [#14452](https://codecov.io/gh/phalcon/cphalcon/pull/14452?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/cfe2c026c98d122eb95b237309b69c55f1f75da2?src=pr&el=desc) will **decrease** coverage by `0.02%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14452      +/-   ##\n==========================================\n- Coverage    67.7%   67.68%   -0.03%     \n==========================================\n  Files         482      482              \n  Lines      111222   111275      +53     \n==========================================\n+ Hits        75308    75320      +12     \n- Misses      35914    35955      +41\n```\n"
    ],
    "commit_messages": [
      "Merge pull request #14452 from phalcon/feature/test-zephir\n\nAdded development Zephir to the build matrix [skip appveyor]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662128c118912b45d36a3095",
    "number": 14451,
    "body": "Hello!\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "upd-resources",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14451?src=pr&el=h1) Report\n> Merging [#14451](https://codecov.io/gh/phalcon/cphalcon/pull/14451?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/cfe2c026c98d122eb95b237309b69c55f1f75da2?src=pr&el=desc) will **decrease** coverage by `0.02%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14451      +/-   ##\n==========================================\n- Coverage    67.7%   67.68%   -0.03%     \n==========================================\n  Files         482      482              \n  Lines      111222   111275      +53     \n==========================================\n+ Hits        75308    75320      +12     \n- Misses      35914    35955      +41\n```\n"
    ],
    "commit_messages": [
      "update resources"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662128c218912b45d36a3096",
    "number": 14450,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue:#14449\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "firewall-improvement",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14450?src=pr&el=h1) Report\n> Merging [#14450](https://codecov.io/gh/phalcon/cphalcon/pull/14450?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/916e6e2004605c629177d4235b48b7d10ca56144?src=pr&el=desc) will **decrease** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14450      +/-   ##\n==========================================\n- Coverage   67.71%    67.7%   -0.01%     \n==========================================\n  Files         482      482              \n  Lines      111207   111222      +15     \n==========================================\n+ Hits        75304    75308       +4     \n- Misses      35903    35914      +11\n```\n"
    ],
    "commit_messages": [
      "Update change log [ci skip]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662128c318912b45d36a3097",
    "number": 14448,
    "body": "Hello!\r\n\r\n* Type: documentation\r\n* Link to issue: #14437\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nAdded removed methods to changelog\r\n",
    "head_branch": "issue-14437",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14448?src=pr&el=h1) Report\n> Merging [#14448](https://codecov.io/gh/phalcon/cphalcon/pull/14448?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/1c85b1530dcd7dbcad3956673ef06636fefca2e7?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@           Coverage Diff           @@\n##            4.0.x   #14448   +/-   ##\n=======================================\n  Coverage   67.71%   67.71%           \n=======================================\n  Files         482      482           \n  Lines      111207   111207           \n=======================================\n  Hits        75304    75304           \n  Misses      35903    35903\n```\n"
    ],
    "commit_messages": [
      "Merge pull request #14448 from ruudboon/issue-14437\n\nImproved changelog to mention removed methods. Issue #14437"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662128c418912b45d36a3098",
    "number": 14447,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/14429\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of the change: This issue has only come up now because return types weren't being enforced in Phalcon 3.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14447?src=pr&el=h1) Report\n> Merging [#14447](https://codecov.io/gh/phalcon/cphalcon/pull/14447?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/1c85b1530dcd7dbcad3956673ef06636fefca2e7?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@           Coverage Diff           @@\n##            4.0.x   #14447   +/-   ##\n=======================================\n  Coverage   67.71%   67.71%           \n=======================================\n  Files         482      482           \n  Lines      111207   111207           \n=======================================\n  Hits        75304    75304           \n  Misses      35903    35903\n```\n",
      "Thank you @CameronHall "
    ],
    "commit_messages": [
      "Fixed return type on AbstractEngine::partial\n\nPhalcon\\Mvc\\View::partial is a void so it doesn't make sense to give this a string return type.\nUpdated changelog"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662128c518912b45d36a3099",
    "number": 14445,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/14269\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change: Fixed the `eventsManager` being returned as null when extending `Injectable`. This meant removing `getEventsManager` and `setEventsManager` from `Phalcon\\Di\\Injectable` and implementing the methods on the three classes that extended `Injectable` and used `this->eventsManager`. \r\n\r\nIt looks like the reasons the above methods are implemented on the Di is because Zephir requires all properties to be known at compile time. You can't tell Zephir to look at `this->eventsManager` (even if it would exist in the Di) because it's a virtual property because they wouldn't exist at run time. \r\n\r\nWhat was the bug? The `eventsManager` property on `Phalcon\\Di\\Injectable` defaults to null because it has no set value. The method `__get` isn't invoked when doing `this->eventsManager` due to the protected scope of the `eventsManager` property makes itself accessible. This means you'll get `null` if you haven't used `setEventsManager` to define an eventsManager. \r\n\r\nI've also updated `Injectable` to allow you to use `isset` to check if a service exists in the container. \r\n\r\nThanks\r\n\r\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14445?src=pr&el=h1) Report\n> Merging [#14445](https://codecov.io/gh/phalcon/cphalcon/pull/14445?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/bd404a4bc603f74bb7d043694875814912954228?src=pr&el=desc) will **decrease** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14445      +/-   ##\n==========================================\n- Coverage   67.58%   67.58%   -0.01%     \n==========================================\n  Files         482      482              \n  Lines      111161   111207      +46     \n==========================================\n+ Hits        75130    75157      +27     \n- Misses      36031    36050      +19\n```\n"
    ],
    "commit_messages": [
      "Fixed tests on <= PHP 7.2"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662128c618912b45d36a309a",
    "number": 14444,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThe `uniqueKey` used to store reusable related records in `ModelsManager` is currently generated only from the conditions used to lookup the records.\r\n\r\nFor example:\r\nIt uses the same key for `$robot->getParts([\"some\" = \"thing\"])` and `$robot->countParts([\"some\" = \"thing\"])`. \r\nIf the related records are accessed again using a different method, it will return the result of the first.\r\nIn this case, it will be a `Resultset` instead of an `integer`.\r\n\r\nI added the `retrieveMethod` variable to the `uniqueKey` generation.\r\nAdded some tests for `Model::__call()`\r\n\r\nThanks,\r\nzsilbi\r\n",
    "head_branch": "model-reusable-records",
    "is_a_fork": true,
    "comments": [
      "@sergeyklay I'd also change `Model::__callStatic()` to throw an exception if the method is unknown, like `Model::__call()` does.\r\n\r\nWhat do you think?",
      "@zsilbi Let's use a separated PR to change Model::__callStatic()",
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14444?src=pr&el=h1) Report\n> Merging [#14444](https://codecov.io/gh/phalcon/cphalcon/pull/14444?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/d7f11516e4a57c1d27e12ec75d7226ecde60097e?src=pr&el=desc) will **increase** coverage by `0.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14444      +/-   ##\n==========================================\n+ Coverage   67.67%   67.68%   +0.01%     \n==========================================\n  Files         482      482              \n  Lines      111229   111235       +6     \n==========================================\n+ Hits        75275    75294      +19     \n+ Misses      35954    35941      -13\n```\n",
      "Thank you @zsilbi "
    ],
    "commit_messages": [
      "Changelog fixed [skip ci]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662128c718912b45d36a309b",
    "number": 14442,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue:\r\n\r\nAdd Discord shield (with current online) to the README.md\r\n\r\n**Working example in Vokuro**\r\n![image](https://user-images.githubusercontent.com/3289702/65970334-3cd28880-e45e-11e9-9cf8-593f971282e0.png)\r\n\r\n\r\nThanks\r\n\r\n",
    "head_branch": "add-discord-shield",
    "is_a_fork": true,
    "comments": [
      "Thank you @Jeckerson "
    ],
    "commit_messages": [
      "Add Discord shield"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662128c818912b45d36a309c",
    "number": 14441,
    "body": "Hello!\r\n\r\n* Type: code quality \r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "upgrade-zephir-parser",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14441?src=pr&el=h1) Report\n> Merging [#14441](https://codecov.io/gh/phalcon/cphalcon/pull/14441?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/7402d92b5d974a6190078d8f6e82080486fc63ef?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@           Coverage Diff           @@\n##            4.0.x   #14441   +/-   ##\n=======================================\n  Coverage   67.71%   67.71%           \n=======================================\n  Files         482      482           \n  Lines      111161   111161           \n=======================================\n  Hits        75277    75277           \n  Misses      35884    35884\n```\n",
      "Appveyor uses new version but still old build number. See:\r\n> C:\\Downloads\\zephir_parser_x86_vc15_php7.2_1.3.2-476.zip\r\n\r\nNotice \"476\", not \"505\". Is this cache? Try to change\r\nhttps://github.com/phalcon/cphalcon/blob/1414d998d6bb7fde078222086c54068118c6dde3/appveyor.yml#L97\r\nfor testing purposes",
      "> Appveyor uses new version but still old build number. See:\r\n> \r\n> > C:\\Downloads\\zephir_parser_x86_vc15_php7.2_1.3.2-476.zip\r\n> \r\n> Notice \"476\", not \"505\". Is this cache? Try to change\r\n> https://github.com/phalcon/cphalcon/blob/1414d998d6bb7fde078222086c54068118c6dde3/appveyor.yml#L97\r\n> \r\n> \r\n> for testing purposes\r\nI think you're looking at an old build. Latest build is using 505",
      "Thank you"
    ],
    "commit_messages": [
      "Merge pull request #14441 from ruudboon/upgrade-zephir-parser\n\nUpgrade zephir parser"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662128c918912b45d36a309d",
    "number": 14439,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14426 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall correction for detecting the protocol from $_SERVER\r\n\r\nThanks\r\n\r\n",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix for the protocol"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662128ca18912b45d36a309e",
    "number": 14438,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nTest was failing. Added missing interface to route.\r\n",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added line enter after namespace."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662128cb18912b45d36a309f",
    "number": 14435,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14430 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\Forms\\Form` to initialize attributes object if not initialized\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14430-forms-set-action",
    "is_a_fork": true,
    "comments": [
      "cc @ruudboon @sergeyklay ",
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14435?src=pr&el=h1) Report\n> :exclamation: No coverage uploaded for pull request base (`4.0.x@582c9a2`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).\n> The diff coverage is `n/a`.\n\n\n```diff\n@@           Coverage Diff            @@\n##             4.0.x   #14435   +/-   ##\n========================================\n  Coverage         ?   67.69%           \n========================================\n  Files            ?      482           \n  Lines            ?   111073           \n  Branches         ?        0           \n========================================\n  Hits             ?    75192           \n  Misses           ?    35881           \n  Partials         ?        0\n```\n"
    ],
    "commit_messages": [
      "Merge branch '4.0.x' into T14430-forms-set-action"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662128cc18912b45d36a30a0",
    "number": 14434,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14432 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\Http\\Message\\ServerRequestFactory::load` to correctly detect the protocol passed from `$_SERVER` \r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14432-serverrequest-protocol",
    "is_a_fork": true,
    "comments": [
      "cc @sergeyklay @ruudboon "
    ],
    "commit_messages": [
      "Merge pull request #14434 from niden/T14432-serverrequest-protocol\n\nT14432 serverrequest protocol"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662128cd18912b45d36a30a1",
    "number": 14433,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14426 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\Http\\Message\\ServerRequestFactory::load` to correctly handle superglobals that have not been defined\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14426-server-request-segfault",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14433?src=pr&el=h1) Report\n> Merging [#14433](https://codecov.io/gh/phalcon/cphalcon/pull/14433?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/f2211e7631a26b5a05d8ff7ff24c95676ab15dd7?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14433      +/-   ##\n==========================================\n+ Coverage   67.68%   67.68%   +<.01%     \n==========================================\n  Files         478      478              \n  Lines      110969   110999      +30     \n==========================================\n+ Hits        75106    75135      +29     \n- Misses      35863    35864       +1\n```\n"
    ],
    "commit_messages": [
      "Added reset superglobals in the test"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662128cf18912b45d36a30a2",
    "number": 14431,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14408 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nChanged the code to trap exceptions/notices for serializers as well as fopen for stream.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [
      "cc @sergeyklay @ruudboon ",
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14431?src=pr&el=h1) Report\n> Merging [#14431](https://codecov.io/gh/phalcon/cphalcon/pull/14431?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/fe0089f05e8d27ee6b3215d681f9c3685fddfc8b?src=pr&el=desc) will **increase** coverage by `0.02%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14431      +/-   ##\n==========================================\n+ Coverage   67.65%   67.68%   +0.02%     \n==========================================\n  Files         478      478              \n  Lines      110956   110969      +13     \n==========================================\n+ Hits        75066    75106      +40     \n+ Misses      35890    35863      -27\n```\n",
      "Looks good. thnx"
    ],
    "commit_messages": [
      "Correcting serializers and warnings/notices"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662128d018912b45d36a30a3",
    "number": 14427,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/pull/14425\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nCorrect `Igbinary::unserialize` to catch unserialize warnings\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix/igbinary-unserialize",
    "is_a_fork": false,
    "comments": [
      "/cc @phalcon/framework-team ",
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14427?src=pr&el=h1) Report\n> Merging [#14427](https://codecov.io/gh/phalcon/cphalcon/pull/14427?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/fe0089f05e8d27ee6b3215d681f9c3685fddfc8b?src=pr&el=desc) will **increase** coverage by `0.02%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14427      +/-   ##\n==========================================\n+ Coverage   67.65%   67.67%   +0.02%     \n==========================================\n  Files         478      478              \n  Lines      110956   110956              \n==========================================\n+ Hits        75066    75091      +25     \n+ Misses      35890    35865      -25\n```\n",
      "Closing in favor of https://github.com/phalcon/cphalcon/pull/14431"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662128d118912b45d36a30a4",
    "number": 14425,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14408 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\Storage\\Adapter\\Stream` to correctly serialize and unserialize data\r\nFixed `Phalcon\\Storage\\Serializer\\Json` to throw an exception if storing an object \r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14408-model-cache-serializer",
    "is_a_fork": true,
    "comments": [
      "cc @ruudboon @sergeyklay ",
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14425?src=pr&el=h1) Report\n> Merging [#14425](https://codecov.io/gh/phalcon/cphalcon/pull/14425?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/77269bb20d18af5b974c7849648b081d0bf6f94b?src=pr&el=desc) will **decrease** coverage by `0.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14425      +/-   ##\n==========================================\n- Coverage   67.67%   67.65%   -0.02%     \n==========================================\n  Files         478      478              \n  Lines      110893   110956      +63     \n==========================================\n+ Hits        75043    75066      +23     \n- Misses      35850    35890      +40\n```\n",
      "thnx!"
    ],
    "commit_messages": [
      "Correcting tests"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662128d218912b45d36a30a5",
    "number": 14424,
    "body": "Hello!\r\n\r\nUpgraded Zephir in nanobox\r\n",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Upgraded Zephir"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662128d318912b45d36a30a6",
    "number": 14423,
    "body": "Hello!\r\n\r\n* Type: enhancement\r\n* Link to issue: #14420 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nChanged the option for the `Phalcon\\Storage\\Adapter\\Stream` to be `storageDir` instead of `cacheDir`\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14420-cache-dir",
    "is_a_fork": true,
    "comments": [
      "cc @ruudboon @sergeyklay "
    ],
    "commit_messages": [
      "Enabling verbose reporting for 7.4"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662128d418912b45d36a30a7",
    "number": 14422,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14253\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\n- Fixed `NOT BETWEEN` support in PHQL\r\n- Fixed `Phalcon\\Mvc\\Model\\Query\\Lang::parsePHQL` return type hint\r\n- Move syntax tests runner to the common place\r\n- Improved parsers generator script\r\n- Added tests for PHQL\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix/14253-not-between-phql",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14422 from phalcon/fix/14253-not-between-phql\n\nFixed 'NOT BETWEEN' support in PHQL"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662128d518912b45d36a30a8",
    "number": 14421,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\n`Form::setAction()` fails when called in `Form::initialize()` because the default attributes are only set, after the `initialize()` had finished.\r\n\r\nThanks,\r\nzsilbi\r\n\r\n",
    "head_branch": "form-attributes-fix",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14421?src=pr&el=h1) Report\n> Merging [#14421](https://codecov.io/gh/phalcon/cphalcon/pull/14421?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/7543247e414903a39c7947550e8e370e301c314c?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@           Coverage Diff           @@\n##            4.0.x   #14421   +/-   ##\n=======================================\n  Coverage   67.63%   67.63%           \n=======================================\n  Files         478      478           \n  Lines      110895   110895           \n=======================================\n  Hits        75005    75005           \n  Misses      35890    35890\n```\n"
    ],
    "commit_messages": [
      "Merge pull request #14421 from zsilbi/form-attributes-fix\n\nForm attributes fixed \r\n@zsilbi Thank you!"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662128d618912b45d36a30a9",
    "number": 14419,
    "body": "Hello!\r\n\r\n* Type: performance\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nChanged all calls to `new <object>` to use the `create_instance` or `create_instance_params` for better performance. \r\n\r\nThanks\r\n\r\n",
    "head_branch": "create-instance",
    "is_a_fork": true,
    "comments": [
      "cc @sergeyklay @ruudboon ",
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14419?src=pr&el=h1) Report\n> Merging [#14419](https://codecov.io/gh/phalcon/cphalcon/pull/14419?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/7543247e414903a39c7947550e8e370e301c314c?src=pr&el=desc) will **increase** coverage by `0.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14419      +/-   ##\n==========================================\n+ Coverage   67.63%   67.64%   +0.01%     \n==========================================\n  Files         478      478              \n  Lines      110895   110919      +24     \n==========================================\n+ Hits        75005    75036      +31     \n+ Misses      35890    35883       -7\n```\n"
    ],
    "commit_messages": [
      "Corrected call"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662128d718912b45d36a30aa",
    "number": 14418,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14417 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\Filter` to correctly work with closures.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14417-filter-closure",
    "is_a_fork": true,
    "comments": [
      "cc @ruudboon @sergeyklay ",
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14418?src=pr&el=h1) Report\n> Merging [#14418](https://codecov.io/gh/phalcon/cphalcon/pull/14418?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/948aa76df5aa97161a5a4bb3c41cb04895157f72?src=pr&el=desc) will **decrease** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14418      +/-   ##\n==========================================\n- Coverage   67.63%   67.63%   -0.01%     \n==========================================\n  Files         478      478              \n  Lines      110901   110895       -6     \n==========================================\n- Hits        75010    75005       -5     \n+ Misses      35891    35890       -1\n```\n"
    ],
    "commit_messages": [
      "Used create_instance"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662128d818912b45d36a30ab",
    "number": 14415,
    "body": "Hello!\r\n\r\n* Type: new feature | code quality\r\n* Link to issue: -\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change: \r\n- Provide a common script to re-generate language parsers\r\n- Move parser generator to the 3rdparty directory\r\n- Remove duplicated generators from ext directory\r\n- Remove PHP support for parsers & scanners\r\n- Reduce scanner's warnings and minor issues\r\n\r\nThanks",
    "head_branch": "feature/unify-language-parsers",
    "is_a_fork": false,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14415?src=pr&el=h1) Report\n> Merging [#14415](https://codecov.io/gh/phalcon/cphalcon/pull/14415?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/ee22f5d92ef530f42548c95a6672110f1f2e42ae?src=pr&el=desc) will **increase** coverage by `0.02%`.\n> The diff coverage is `78.72%`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14415      +/-   ##\n==========================================\n+ Coverage   67.64%   67.66%   +0.02%     \n==========================================\n  Files         478      478              \n  Lines      110970   111133     +163     \n==========================================\n+ Hits        75061    75201     +140     \n- Misses      35909    35932      +23\n```\n"
    ],
    "commit_messages": [
      "Merge pull request #14415 from phalcon/feature/unify-language-parsers\n\nProvide a common script to re-generate language parsers [skip appveyor]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662128da18912b45d36a30ac",
    "number": 14414,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nDetected more missing/wrong use statements or outdated return types.\r\n\r\n",
    "head_branch": "class-errors",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14414?src=pr&el=h1) Report\n> Merging [#14414](https://codecov.io/gh/phalcon/cphalcon/pull/14414?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/ee22f5d92ef530f42548c95a6672110f1f2e42ae?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@           Coverage Diff           @@\n##            4.0.x   #14414   +/-   ##\n=======================================\n  Coverage   67.64%   67.64%           \n=======================================\n  Files         478      478           \n  Lines      110970   110970           \n=======================================\n  Hits        75061    75061           \n  Misses      35909    35909\n```\n"
    ],
    "commit_messages": [
      "Merge pull request #14414 from ruudboon/class-errors\n\nFixed class errors"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662128db18912b45d36a30ad",
    "number": 14410,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14288, #11683\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change: corrected syntax recognize for \"set\" and \"is\" keywords.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix/issue-14288-volt-set-is",
    "is_a_fork": false,
    "comments": [
      "@sergeyklay https://github.com/dreamsxin/cphalcon/commit/7a228996b565dba796e9147ac7fa608cc004e9c4\r\n```c\r\n\t\t\tcase PHVOLT_T_DEFAULT:\r\n\t\t\t\tif (state->switch_level != 0) {\r\n\t\t\t\t\tphvolt_(phvolt_parser, PHVOLT_DEFAULT, NULL, parser_status);\r\n\t\t\t\t\tefree(token.value); // <-- new add\r\n\t\t\t\t} else {\r\n```\r\nMerge again  and test",
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14410?src=pr&el=h1) Report\n> Merging [#14410](https://codecov.io/gh/phalcon/cphalcon/pull/14410?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/41d398bbf802c02815394d7bbd72f8bf85142d4f?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `85.18%`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14410      +/-   ##\n==========================================\n+ Coverage   67.63%   67.64%   +<.01%     \n==========================================\n  Files         478      478              \n  Lines      110960   110972      +12     \n==========================================\n+ Hits        75053    75062       +9     \n- Misses      35907    35910       +3\n```\n"
    ],
    "commit_messages": [
      "Merge pull request #14410 from phalcon/fix/issue-14288-volt-set-is\n\nVolt: Corrected syntax recognize for \"set\" and \"is\" keywords"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662128dc18912b45d36a30ae",
    "number": 14409,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "volt",
    "is_a_fork": true,
    "comments": [
      "Thnx for working on this @dreamsxin ",
      "Only 7.4 failed @niden ",
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14409?src=pr&el=h1) Report\n> :exclamation: No coverage uploaded for pull request base (`fix/volt-set@d32f65c`). [Click here to learn what that means](https://docs.codecov.io/docs/error-reference#section-missing-base-commit).\n> The diff coverage is `87.5%`.\n\n\n```diff\n@@               Coverage Diff               @@\n##             fix/volt-set   #14409   +/-   ##\n===============================================\n  Coverage                ?   67.63%           \n===============================================\n  Files                   ?      478           \n  Lines                   ?   110981           \n  Branches                ?        0           \n===============================================\n  Hits                    ?    75067           \n  Misses                  ?    35914           \n  Partials                ?        0\n```\n",
      "> Only 7.4 failed @niden\r\n7.4 was already failing on Phalcon. \r\n",
      "@ruudboon Thank you",
      "Thank you!"
    ],
    "commit_messages": [
      "Merge pull request #14409 from dreamsxin/volt\n\nUpdated volt parser"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662128dd18912b45d36a30af",
    "number": 14407,
    "body": "Hello!\r\n\r\n* Type: code quality\r\nSome styling fixes and interface mismatch fixes\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\n-- \r\n\r\n- Removed double use use Phalcon\\Events\\ManagerInterface as EventsManagerInterface\r\n- Interfaces cannot have final\r\n- Typo in inline class\r\n- Interface corrections for handle()\r\n- Styling fix\r\n",
    "head_branch": "style-fixes",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14407?src=pr&el=h1) Report\n> Merging [#14407](https://codecov.io/gh/phalcon/cphalcon/pull/14407?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/d9c6b183832decb384d21d08d00f638f93bc2a4f?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14407      +/-   ##\n==========================================\n+ Coverage   67.64%   67.64%   +<.01%     \n==========================================\n  Files         478      478              \n  Lines      110971   110970       -1     \n==========================================\n  Hits        75061    75061              \n+ Misses      35910    35909       -1\n```\n",
      "@ruudboon Some comments above that would most likely solve this."
    ],
    "commit_messages": [
      "Merge pull request #14407 from ruudboon/style-fixes\n\nStyle fixes (code quality)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662128de18912b45d36a30b0",
    "number": 14406,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n\r\nEventsManagerInterface was defined twice\r\n",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14406?src=pr&el=h1) Report\n> Merging [#14406](https://codecov.io/gh/phalcon/cphalcon/pull/14406?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/41d398bbf802c02815394d7bbd72f8bf85142d4f?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@           Coverage Diff           @@\n##            4.0.x   #14406   +/-   ##\n=======================================\n  Coverage   67.63%   67.63%           \n=======================================\n  Files         478      478           \n  Lines      110960   110960           \n=======================================\n  Hits        75053    75053           \n  Misses      35907    35907\n```\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662128e618912b45d36a30b1",
    "number": 14405,
    "body": "",
    "head_branch": "4.0.x",
    "is_a_fork": false,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14405?src=pr&el=h1) Report\n> Merging [#14405](https://codecov.io/gh/phalcon/cphalcon/pull/14405?src=pr&el=desc) into [master](https://codecov.io/gh/phalcon/cphalcon/commit/da5eb91e898437acca8509f5fff457bf5d024f38?src=pr&el=desc) will **increase** coverage by `1.32%`.\n> The diff coverage is `54.96%`.\n\n\n```diff\n@@            Coverage Diff             @@\n##           master   #14405      +/-   ##\n==========================================\n+ Coverage   66.31%   67.63%   +1.32%     \n==========================================\n  Files         488      478      -10     \n  Lines      115913   110960    -4953     \n==========================================\n- Hits        76862    75053    -1809     \n+ Misses      39051    35907    -3144\n```\n"
    ],
    "commit_messages": [
      "Merge pull request #14405 from phalcon/4.0.x\n\n4.0.0-rc.1"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662128e718912b45d36a30b2",
    "number": 14404,
    "body": "Hello!\r\n\r\n* Type: bug fix | testing\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nCorrected tests; Corrected Logger/Adapter/add interface; Added `null` in getEventsManager\r\n\r\nThanks\r\n\r\n",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14404?src=pr&el=h1) Report\n> Merging [#14404](https://codecov.io/gh/phalcon/cphalcon/pull/14404?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/1d2a91d12bf38247987d837e75107fb1594a57fb?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14404      +/-   ##\n==========================================\n+ Coverage   67.63%   67.63%   +<.01%     \n==========================================\n  Files         478      478              \n  Lines      110961   110962       +1     \n==========================================\n+ Hits        75053    75054       +1     \n  Misses      35908    35908\n```\n"
    ],
    "commit_messages": [
      "Updated changelog"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662128e818912b45d36a30b3",
    "number": 14403,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: -\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change: Fixed methods signatures to satisfy interface.\r\nThanks\r\n\r\n",
    "head_branch": "fix/fix-interfaces-implementation",
    "is_a_fork": false,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14403?src=pr&el=h1) Report\n> Merging [#14403](https://codecov.io/gh/phalcon/cphalcon/pull/14403?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/902910ad8fb7d5a2c471d49fe551fce68deec405?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14403      +/-   ##\n==========================================\n+ Coverage   67.63%   67.63%   +<.01%     \n==========================================\n  Files         478      478              \n  Lines      110961   110962       +1     \n==========================================\n+ Hits        75053    75054       +1     \n  Misses      35908    35908\n```\n"
    ],
    "commit_messages": [
      "Merge pull request #14403 from phalcon/fix/fix-interfaces-implementation\n\nFixed methods signatures to satisfy interface"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662128e918912b45d36a30b4",
    "number": 14402,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: -\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change: Fixed return types for various methods to satisfy interface declaration.\r\nThanks\r\n\r\n",
    "head_branch": "fix/fix-interfaces-implementation",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14402 from phalcon/fix/fix-interfaces-implementation\n\nFixed return types for various methods to satisfy interface declaration"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662128ea18912b45d36a30b5",
    "number": 14401,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: -\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change: Constructors _should never_ declare return type.\r\nThanks.\r\n\r\n/cc @niden \r\n\r\n",
    "head_branch": "fix/remove-contructors-return-declaration",
    "is_a_fork": false,
    "comments": [
      "Is this something Zephir specific? Looks like the default return type is void\r\n\r\nhttps://www.php.net/manual/en/language.oop5.decon.php#object.construct\r\n",
      "Zephir != PHP. Did you see something related in the Zephir docs? PHP driven development in Zephir leads to unexpected results:  https://travis-ci.org/phalcon/cphalcon/jobs/588067789",
      "> Zephir != PHP. Did you see something related in the Zephir docs? PHP driven development in Zephir leads to unexpected results: https://travis-ci.org/phalcon/cphalcon/jobs/588067789\r\n\r\nMissed it btw in the docs of Zephir. ",
      "@ruudboon Check any constructor here https://www.php.net/manual/en/book.spl.php",
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14401?src=pr&el=h1) Report\n> Merging [#14401](https://codecov.io/gh/phalcon/cphalcon/pull/14401?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/d0721cee630d4c1e72d1187670cedb6d6a2f06c7?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@           Coverage Diff           @@\n##            4.0.x   #14401   +/-   ##\n=======================================\n  Coverage   67.63%   67.63%           \n=======================================\n  Files         478      478           \n  Lines      110961   110961           \n=======================================\n  Hits        75053    75053           \n  Misses      35908    35908\n```\n"
    ],
    "commit_messages": [
      "Merge pull request #14401 from phalcon/fix/remove-contructors-return-declaration\n\nConstructors should never declare return type [skip appveyor]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662128eb18912b45d36a30b6",
    "number": 14400,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: -\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\n- Use latest stable Zephir\r\n- Changed return types for following interfaces:\r\n  - `Phalcon\\Mvc\\Router\\RouteInterface::setName` from `void` to `RouteInterface`\r\n  - `Phalcon\\Mvc\\Router\\RouteInterface::via` from `void` to `RouteInterface`\r\n  - `Phalcon\\Session\\ManagerInterface::__get` from `void` to `var`\r\n- Fixed return types for following methods to satisfy interface declaration:\r\n  - `Phalcon\\Acl\\Adapter\\AbstractAdapter::setDefaultAction`\r\n  - `Phalcon\\Application\\AbstractApplication::setEventsManager`\r\n  - `Phalcon\\Firewall\\Adapter\\AbstractAdapter::setAlwaysResolvingRole`\r\n  - `Phalcon\\Firewall\\Adapter\\AbstractAdapter::setEventsManager`\r\n  - `Phalcon\\Mvc\\Router::handle`\r\n  - `Phalcon\\Storage\\Serializer\\AbstractSerializer::getData`\r\n  - `Phalcon\\Storage\\Serializer\\AbstractSerializer::setData`\r\n  - `Phalcon\\Mvc\\Dispatcher::forward`\r\n  - `Phalcon\\Mvc\\Model::setConnectionService`\r\n  - `Phalcon\\Mvc\\Model::setReadConnectionService`\r\n  - `Phalcon\\Mvc\\Model::setWriteConnectionService`\r\n  - `Phalcon\\Mvc\\Model\\Query\\Builder::setDI`\r\n  - `Phalcon\\Mvc\\Router\\Annotations::handle`\r\n  - `Phalcon\\Session\\Bag::set`\r\n  - `Phalcon\\Session\\Manager::remove`\r\n\r\nThanks",
    "head_branch": "feature/update-zephir",
    "is_a_fork": false,
    "comments": [
      "/cc @phalcon/core-team "
    ],
    "commit_messages": [
      "Merge pull request #14400 from phalcon/feature/update-zephir\n\nUse latest stable Zephir"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662128ec18912b45d36a30b7",
    "number": 14399,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14269\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nfixed issue eventsManager returning null",
    "head_branch": "issue14269",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662128ee18912b45d36a30b8",
    "number": 14398,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14398?src=pr&el=h1) Report\n> Merging [#14398](https://codecov.io/gh/phalcon/cphalcon/pull/14398?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/d648bb885b55115cffa24d9cc391dc75007658c0?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@           Coverage Diff           @@\n##            4.0.x   #14398   +/-   ##\n=======================================\n  Coverage   67.63%   67.63%           \n=======================================\n  Files         478      478           \n  Lines      110961   110961           \n=======================================\n  Hits        75053    75053           \n  Misses      35908    35908\n```\n"
    ],
    "commit_messages": [
      "Styling fix changelog"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662128ef18912b45d36a30b9",
    "number": 14397,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14396\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed removing service in DI. It's a workaround while waiting for Zephir changes ",
    "head_branch": "di-remove-14396",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14397?src=pr&el=h1) Report\n> Merging [#14397](https://codecov.io/gh/phalcon/cphalcon/pull/14397?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/d648bb885b55115cffa24d9cc391dc75007658c0?src=pr&el=desc) will **decrease** coverage by `0.12%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14397      +/-   ##\n==========================================\n- Coverage   67.63%    67.5%   -0.13%     \n==========================================\n  Files         478      478              \n  Lines      110961   110966       +5     \n==========================================\n- Hits        75053    74913     -140     \n- Misses      35908    36053     +145\n```\n"
    ],
    "commit_messages": [
      "Updated changelog"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662128f018912b45d36a30ba",
    "number": 14395,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue: #14395 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nAdjusted the licenses for the project\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14394-3rdparty-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14395 from niden/T14394-3rdparty-1\n\nT14394 3rdparty 1"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662128f118912b45d36a30bb",
    "number": 14393,
    "body": "Somes tests and updated change log\r\n\r\n",
    "head_branch": "fix/volt-set",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14393?src=pr&el=h1) Report\n> Merging [#14393](https://codecov.io/gh/phalcon/cphalcon/pull/14393?src=pr&el=desc) into [fix/volt-set](https://codecov.io/gh/phalcon/cphalcon/commit/0569ed675c8a976c48575e0b75a808609d535e2c?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@               Coverage Diff                @@\n##           fix/volt-set   #14393      +/-   ##\n================================================\n+ Coverage         67.63%   67.63%   +<.01%     \n================================================\n  Files               478      478              \n  Lines            110970   110970              \n================================================\n+ Hits              75055    75059       +4     \n+ Misses            35915    35911       -4\n```\n",
      "Thank you"
    ],
    "commit_messages": [
      "Merge pull request #14393 from ruudboon/fix/volt-set\n\nAdded tests and change log for volt"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662128f218912b45d36a30bc",
    "number": 14392,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14256\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nUsed write connection on checking existing record.\r\n\r\n",
    "head_branch": "fix-14256",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14392?src=pr&el=h1) Report\n> Merging [#14392](https://codecov.io/gh/phalcon/cphalcon/pull/14392?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/46bb24d381266f42bf4cd2cb9f2cccc2727020d1?src=pr&el=desc) will **decrease** coverage by `0.13%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14392      +/-   ##\n==========================================\n- Coverage   67.63%    67.5%   -0.14%     \n==========================================\n  Files         478      478              \n  Lines      110961   110961              \n==========================================\n- Hits        75053    74908     -145     \n- Misses      35908    36053     +145\n```\n"
    ],
    "commit_messages": [
      "Forgot to push changelog"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662128fa18912b45d36a30bd",
    "number": 14391,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14288\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change: corrected syntax recognize for \"set\" and \"is\" keywords.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix/volt-set",
    "is_a_fork": false,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14391?src=pr&el=h1) Report\n> Merging [#14391](https://codecov.io/gh/phalcon/cphalcon/pull/14391?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/46bb24d381266f42bf4cd2cb9f2cccc2727020d1?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `66.96%`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14391      +/-   ##\n==========================================\n+ Coverage   67.63%   67.63%   +<.01%     \n==========================================\n  Files         478      478              \n  Lines      110961   110981      +20     \n==========================================\n+ Hits        75053    75067      +14     \n- Misses      35908    35914       +6\n```\n",
      "@dreamsxin There is still memory leaks\r\n```\r\n$ .ci/run-volt-tests.sh\r\n\r\n=====================================================================\r\nPHP         : /home/klay/.phpenv/versions/7.2.20-zts-debug/bin/php\r\nPHP_SAPI    : cli\r\nPHP_VERSION : 7.2.20\r\nZEND_VERSION: 3.2.0\r\nPHP_OS      : Linux - Linux tower 4.19.0-6-amd64 #1 SMP Debian 4.19.67-2 (2019-08-28) x86_64\r\nINI actual  : /mnt/work/phalcon/cphalcon\r\nMore .INIs  :\r\n---------------------------------------------------------------------\r\nPHP         : /home/klay/.phpenv/versions/7.2.20-zts-debug/bin/phpdbg\r\nPHP_SAPI    : phpdbg\r\nPHP_VERSION : 7.2.20\r\nZEND_VERSION: 3.2.0\r\nPHP_OS      : Linux - Linux tower 4.19.0-6-amd64 #1 SMP Debian 4.19.67-2 (2019-08-28) x86_64\r\nINI actual  : /mnt/work/phalcon/cphalcon\r\nMore .INIs  :\r\n---------------------------------------------------------------------\r\nCWD         : /mnt/work/phalcon/cphalcon\r\nExtra dirs  :\r\nVALGRIND    : Not used\r\n=====================================================================\r\nRunning selected tests.\r\n\r\n========DIFF========\r\n088+ [Tue Sep 24 09:28:45 2019]  Script:  '/mnt/work/phalcon/cphalcon/tests/syntax/volt/statements/switchcase/003.php'\r\n089+ /home/klay/work/phalcon/cphalcon/ext/phalcon/mvc/view/engine/volt/scanner.c(4394) :  Freeing 0x00007f6ef8e07050 (8 bytes), script=/mnt/work/phalcon/cphalcon/tests/syntax/volt/statements/switchcase/003.php\r\n090+ === Total 1 memory leaks detected ===\r\n========DONE========\r\nFAIL switch-case - Tests recognize empty case clause with empty default clause [tests/syntax/volt/statements/switchcase/003.phpt]\r\n\r\n========DIFF========\r\n088+ [Tue Sep 24 09:28:45 2019]  Script:  '/mnt/work/phalcon/cphalcon/tests/syntax/volt/statements/switchcase/004.php'\r\n089+ /home/klay/work/phalcon/cphalcon/ext/phalcon/mvc/view/engine/volt/scanner.c(4394) :  Freeing 0x00007f56e9807050 (8 bytes), script=/mnt/work/phalcon/cphalcon/tests/syntax/volt/statements/switchcase/004.php\r\n090+ === Total 1 memory leaks detected ===\r\n========DONE========\r\nFAIL switch-case - Tests recognize empty case clause with empty default clause [tests/syntax/volt/statements/switchcase/004.phpt]\r\n\r\n========DIFF========\r\n178+ [Tue Sep 24 09:28:47 2019]  Script:  '/mnt/work/phalcon/cphalcon/tests/syntax/volt/statements/switchcase/008.php'\r\n179+ /home/klay/work/phalcon/cphalcon/ext/phalcon/mvc/view/engine/volt/scanner.c(4394) :  Freeing 0x00007fa5c3a07028 (8 bytes), script=/mnt/work/phalcon/cphalcon/tests/syntax/volt/statements/switchcase/008.php\r\n180+ === Total 1 memory leaks detected ===\r\n========DONE========\r\nFAIL switch-case - Tests recognize empty case clause with empty default clause [tests/syntax/volt/statements/switchcase/008.phpt]\r\n=====================================================================\r\nNumber of tests :   11                11\r\nTests skipped   :    0 (  0.0%) --------\r\nTests warned    :    0 (  0.0%) (  0.0%)\r\nTests failed    :    3 ( 27.3%) ( 27.3%)\r\nExpected fail   :    0 (  0.0%) (  0.0%)\r\nTests passed    :    8 ( 72.7%) ( 72.7%)\r\n---------------------------------------------------------------------\r\nTime taken      :    4 seconds\r\n=====================================================================\r\n\r\n=====================================================================\r\nFAILED TEST SUMMARY\r\n---------------------------------------------------------------------\r\nswitch-case - Tests recognize empty case clause with empty default clause [tests/syntax/volt/statements/switchcase/003.phpt]\r\nswitch-case - Tests recognize empty case clause with empty default clause [tests/syntax/volt/statements/switchcase/004.phpt]\r\nswitch-case - Tests recognize empty case clause with empty default clause [tests/syntax/volt/statements/switchcase/008.phpt]\r\n```\r\n\r\n```\r\n$ php -v\r\nPHP 7.2.20 (cli) (built: Jul 14 2019 17:30:04) ( ZTS DEBUG )\r\nCopyright (c) 1997-2018 The PHP Group\r\nZend Engine v3.2.0, Copyright (c) 1998-2018 Zend Technologies\r\n    with Zend OPcache v7.2.20, Copyright (c) 1999-2018, by Zend Technologies\r\n```",
      "Close this PR in favor of https://github.com/phalcon/cphalcon/pull/14410"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662128fb18912b45d36a30be",
    "number": 14389,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nRenamed the `arrayToObject` to `toObject` from the `Arr` helper\r\n\r\nThanks\r\n\r\n",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14389?src=pr&el=h1) Report\n> Merging [#14389](https://codecov.io/gh/phalcon/cphalcon/pull/14389?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/25a2aaba35b7fa70cc323fa7387c13bd469b5063?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14389      +/-   ##\n==========================================\n+ Coverage   67.63%   67.64%   +<.01%     \n==========================================\n  Files         478      478              \n  Lines      110989   110959      -30     \n==========================================\n- Hits        75069    75053      -16     \n+ Misses      35920    35906      -14\n```\n"
    ],
    "commit_messages": [
      "[4.0.x] - Corrected test"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662128fc18912b45d36a30bf",
    "number": 14388,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14378\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nAdded schema to constrain when creating table\r\n\r\n",
    "head_branch": "issue-14378",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14388?src=pr&el=h1) Report\n> Merging [#14388](https://codecov.io/gh/phalcon/cphalcon/pull/14388?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/fc40a40eca3d5d80c116fad0ee3bb8586279dafe?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14388      +/-   ##\n==========================================\n+ Coverage   67.63%   67.63%   +<.01%     \n==========================================\n  Files         478      478              \n  Lines      110977   110989      +12     \n==========================================\n+ Hits        75058    75069      +11     \n- Misses      35919    35920       +1\n```\n"
    ],
    "commit_messages": [
      "Merge pull request #14388 from ruudboon/issue-14378\n\nIssue 14378"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662128fd18912b45d36a30c0",
    "number": 14387,
    "body": "Hello!\r\n\r\n* Type: code quality \r\n* Link to issue: #14386 #14386\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nChanged order of properties\r\n\r\n",
    "head_branch": "issue-14386",
    "is_a_fork": true,
    "comments": [
      "@ruudboon If it is not too much trouble can you also update `upgrade.md` in docs regarding this? I will sort out the API generation in the next docs deployment",
      "> @ruudboon If it is not too much trouble can you also update `upgrade.md` in docs regarding this? I will sort out the API generation in the next docs deployment\r\n\r\nhttps://github.com/phalcon/docs/pull/2430",
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14387?src=pr&el=h1) Report\n> Merging [#14387](https://codecov.io/gh/phalcon/cphalcon/pull/14387?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/65eb317d9fa02f93f56026446ee9d727a04fdf3b?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14387      +/-   ##\n==========================================\n+ Coverage   67.63%   67.63%   +<.01%     \n==========================================\n  Files         478      478              \n  Lines      110975   110977       +2     \n==========================================\n+ Hits        75056    75058       +2     \n  Misses      35919    35919\n```\n"
    ],
    "commit_messages": [
      "Merge pull request #14387 from ruudboon/issue-14386\n\nIssue 14386"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662128fe18912b45d36a30c1",
    "number": 14385,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue: #14374 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nAdded a closure test to solve issue. Issue only occurs when using exit(). Wouldn't hurt to add this test anyway.",
    "head_branch": "issue-14374",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14385?src=pr&el=h1) Report\n> Merging [#14385](https://codecov.io/gh/phalcon/cphalcon/pull/14385?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/da2657ad308b4f69ced1734cbb78dcd7d1b28025?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@           Coverage Diff           @@\n##            4.0.x   #14385   +/-   ##\n=======================================\n  Coverage   67.63%   67.63%           \n=======================================\n  Files         478      478           \n  Lines      110975   110975           \n=======================================\n  Hits        75056    75056           \n  Misses      35919    35919\n```\n"
    ],
    "commit_messages": [
      "Merge pull request #14385 from ruudboon/issue-14374\n\nIssue 14374"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662128ff18912b45d36a30c2",
    "number": 14381,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #14381\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nCorrected interfaces; Regenerated ext\r\n\r\nThanks\r\n\r\n",
    "head_branch": "interface-changes-4",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14381?src=pr&el=h1) Report\n> Merging [#14381](https://codecov.io/gh/phalcon/cphalcon/pull/14381?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/016c0fdfaf8323d1a6910d4a02fbe0157f34ca44?src=pr&el=desc) will **decrease** coverage by `0.14%`.\n> The diff coverage is `58.97%`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14381      +/-   ##\n==========================================\n- Coverage   67.78%   67.63%   -0.15%     \n==========================================\n  Files         478      478              \n  Lines      112932   110975    -1957     \n==========================================\n- Hits        76548    75056    -1492     \n+ Misses      36384    35919     -465\n```\n",
      "@niden Do we need doc changes?",
      "@ruudboon Already done",
      "@niden 👌🤘💪🏻"
    ],
    "commit_messages": [
      "[interface] - Removed tag in ext"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621290018912b45d36a30c3",
    "number": 14379,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14366 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed bug and added test",
    "head_branch": "issue-14366",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14379?src=pr&el=h1) Report\n> Merging [#14379](https://codecov.io/gh/phalcon/cphalcon/pull/14379?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/47cd4a73caf9310303845eb472b8f188ee6d40e7?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14379      +/-   ##\n==========================================\n+ Coverage   67.78%   67.79%   +<.01%     \n==========================================\n  Files         478      478              \n  Lines      112924   112929       +5     \n==========================================\n+ Hits        76549    76556       +7     \n+ Misses      36375    36373       -2\n```\n",
      "Thank you"
    ],
    "commit_messages": [
      "Merge pull request #14379 from ruudboon/issue-14366\n\nIssue 14366"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621290218912b45d36a30c4",
    "number": 14377,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14376\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nWhen `orm.cast_on_hydrate` is on, I think `Model::cloneResultMap()` should save the casted values to the snapshot data.\r\nIf it's off, then `Model::getChangedFields()` should not use `===` to check if the field has changed.\r\n\r\nThanks,\r\nzsilbi",
    "head_branch": "model-snapshot-cast",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14377?src=pr&el=h1) Report\n> Merging [#14377](https://codecov.io/gh/phalcon/cphalcon/pull/14377?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/25a2aaba35b7fa70cc323fa7387c13bd469b5063?src=pr&el=desc) will **decrease** coverage by `0.13%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14377      +/-   ##\n==========================================\n- Coverage   67.63%    67.5%   -0.14%     \n==========================================\n  Files         478      478              \n  Lines      110989   110991       +2     \n==========================================\n- Hits        75069    74924     -145     \n- Misses      35920    36067     +147\n```\n"
    ],
    "commit_messages": [
      "Merge pull request #14377 from zsilbi/model-snapshot-cast\n\nMvc\\Model::snapshot data cast"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621290318912b45d36a30c5",
    "number": 14373,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14303\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nFixed `Phalcon\\Paginator\\Adapter\\AbstractAdapter` throw exception if `limit <= 0`\r\n\r\nThanks\r\n\r\n",
    "head_branch": "paginator-division-by-zero-warning",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14373?src=pr&el=h1) Report\n> Merging [#14373](https://codecov.io/gh/phalcon/cphalcon/pull/14373?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/67fdbba2352bb0f4249c426b5dda7d5cdf9772f3?src=pr&el=desc) will **decrease** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14373      +/-   ##\n==========================================\n- Coverage   67.79%   67.78%   -0.01%     \n==========================================\n  Files         478      478              \n  Lines      112847   112865      +18     \n==========================================\n+ Hits        76506    76509       +3     \n- Misses      36341    36356      +15\n```\n"
    ],
    "commit_messages": [
      "Fixed phpcs"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621290418912b45d36a30c6",
    "number": 14369,
    "body": "Hello!\r\n\r\n* Type: bug fix | documentation\r\n* Link to issue: #14367 \r\n",
    "head_branch": "static-methods-api-generation",
    "is_a_fork": true,
    "comments": [
      "```php\r\npublic function delete( mixed $key ): bool;\r\n```\r\nDelete an item from the cache by its unique key.\r\n\r\n\r\n@return bool True if the item was successfully removed. False if there was an error.\r\n\r\n@throws Phalcon\\Cache\\Exception\\InvalidArgumentException\r\n  MUST be thrown if the $key string is not a legal value.\r\n"
    ],
    "commit_messages": [
      "#14367 - Remove method params"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621290518912b45d36a30c7",
    "number": 14368,
    "body": "Hello!\r\n\r\n* Type: bug fix | documentation\r\n* Link to issue: #14367 \r\n",
    "head_branch": "static-methods-api-generation",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14368?src=pr&el=h1) Report\n> Merging [#14368](https://codecov.io/gh/phalcon/cphalcon/pull/14368?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/a8dba950226bdeb6e52d7dde1965166429dcf0b8?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@           Coverage Diff           @@\n##            4.0.x   #14368   +/-   ##\n=======================================\n  Coverage   67.79%   67.79%           \n=======================================\n  Files         478      478           \n  Lines      112847   112847           \n=======================================\n  Hits        76506    76506           \n  Misses      36341    36341\n```\n",
      "---\r\nlayout: default\r\nlanguage: 'en'\r\nversion: '4.0'\r\ntitle: 'Phalcon\\Helper'\r\n---\r\n\r\n* [Phalcon\\Helper\\Arr](#helper-arr)\r\n* [Phalcon\\Helper\\Exception](#helper-exception)\r\n* [Phalcon\\Helper\\Fs](#helper-fs)\r\n* [Phalcon\\Helper\\Number](#helper-number)\r\n* [Phalcon\\Helper\\Str](#helper-str)\r\n        \r\n<h1 id=\"helper-arr\">Class Phalcon\\Helper\\Arr</h1>\r\n\r\n[Source on GitHub](https://github.com/phalcon/cphalcon/tree/v{{ page.version }}.0/phalcon/helper/arr.zep)\r\n\r\n| Namespace  | Phalcon\\Helper |\r\n| Uses       | Phalcon\\Helper\\Exception, stdClass |\r\n\r\nThis class offers quick array functions throughout the framework\r\n\r\n\r\n## Methods\r\n```php\r\nfinal public static function arrayToObject( array $collection );\r\n```\r\n//\r\n\r\n```php\r\nfinal public static function chunk( array $collection, int $size, bool $preserveKeys = bool ): array;\r\n```\r\n\r\n\r\n```php\r\nfinal public static function first( array $collection, mixed $method = null ): mixed;\r\n```\r\n\r\n\r\n```php\r\nfinal public static function firstKey( array $collection, mixed $method = null ): mixed;\r\n```\r\n\r\n\r\n```php\r\nfinal public static function flatten( array $collection, bool $deep = bool ): array;\r\n```\r\n\r\n\r\n```php\r\nfinal public static function get( array $collection, mixed $index, mixed $defaultValue = null ): mixed;\r\n```\r\nHelper method to get an array element or a default\r\n\r\n\r\n```php\r\nfinal public static function group( array $collection, mixed $method ): array;\r\n```\r\n\r\n\r\n```php\r\nfinal public static function has( array $collection, mixed $index ): bool;\r\n```\r\n\r\n\r\n```php\r\nfinal public static function isUnique( array $collection ): bool;\r\n```\r\n\r\n\r\n```php\r\nfinal public static function last( array $collection, mixed $method = null ): mixed;\r\n```\r\n\r\n\r\n```php\r\nfinal public static function lastKey( array $collection, mixed $method = null ): mixed;\r\n```\r\n\r\n\r\n```php\r\nfinal public static function order( array $collection, mixed $attribute, string $order = string ): array;\r\n```\r\n\r\n\r\n```php\r\nfinal public static function pluck( array $collection, string $element ): array;\r\n```\r\n\r\n\r\n```php\r\nfinal public static function set( array $collection, mixed $value, mixed $index = null ): array;\r\n```\r\n\r\n\r\n```php\r\nfinal public static function sliceLeft( array $collection, int $elements = int ): array;\r\n```\r\n\r\n\r\n```php\r\nfinal public static function sliceRight( array $collection, int $elements = int ): array;\r\n```\r\n\r\n\r\n```php\r\nfinal public static function split( array $collection ): array;\r\n```\r\n\r\n\r\n```php\r\nfinal public static function validateAll( array $collection, mixed $method ): bool;\r\n```\r\n\r\n\r\n```php\r\nfinal public static function validateAny( array $collection, mixed $method ): bool;\r\n```\r\n\r\n\r\n```php\r\nfinal public static function whiteList( array $collection, array $whiteList ): array;\r\n```\r\n\r\n\r\n\r\n        \r\n<h1 id=\"helper-exception\">Class Phalcon\\Helper\\Exception</h1>\r\n\r\n[Source on GitHub](https://github.com/phalcon/cphalcon/tree/v{{ page.version }}.0/phalcon/helper/exception.zep)\r\n\r\n| Namespace  | Phalcon\\Helper |\r\n| Extends    | \\Phalcon\\Exception |\r\n\r\nExceptions thrown in Phalcon\\Helper will use this class\r\n\r\n\r\n        \r\n<h1 id=\"helper-fs\">Class Phalcon\\Helper\\Fs</h1>\r\n\r\n[Source on GitHub](https://github.com/phalcon/cphalcon/tree/v{{ page.version }}.0/phalcon/helper/fs.zep)\r\n\r\n| Namespace  | Phalcon\\Helper |\r\n\r\nThis class offers file operation helper\r\n\r\n\r\n## Methods\r\n```php\r\nfinal public static function basename( string $uri, mixed $suffix = null ): string;\r\n```\r\n\r\n\r\n\r\n        \r\n<h1 id=\"helper-number\">Class Phalcon\\Helper\\Number</h1>\r\n\r\n[Source on GitHub](https://github.com/phalcon/cphalcon/tree/v{{ page.version }}.0/phalcon/helper/number.zep)\r\n\r\n| Namespace  | Phalcon\\Helper |\r\n| Uses       | Phalcon\\Helper\\Exception |\r\n\r\nPhalcon\\Helper\\number\r\n\r\nThis class offers numeric functions for the framework\r\n\r\n\r\n## Methods\r\n```php\r\nfinal public static function between( int $value, int $from, int $to ): bool;\r\n```\r\nHelper method to get an array element or a default\r\n\r\n\r\n\r\n        \r\n<h1 id=\"helper-str\">Class Phalcon\\Helper\\Str</h1>\r\n\r\n[Source on GitHub](https://github.com/phalcon/cphalcon/tree/v{{ page.version }}.0/phalcon/helper/str.zep)\r\n\r\n| Namespace  | Phalcon\\Helper |\r\n| Uses       | Phalcon\\Helper\\Arr, Phalcon\\Helper\\Exception, RuntimeException |\r\n\r\nThis class offers quick string functions throughout the framework\r\n\r\n\r\n## Constants\r\n```php\r\nconst RANDOM_ALNUM = 0;\r\nconst RANDOM_ALPHA = 1;\r\nconst RANDOM_DISTINCT = 5;\r\nconst RANDOM_HEXDEC = 2;\r\nconst RANDOM_NOZERO = 4;\r\nconst RANDOM_NUMERIC = 3;\r\n```\r\n\r\n## Methods\r\n```php\r\nfinal public static function camelize( string $text, mixed $delimiter = null ): string;\r\n```\r\n\r\n\r\n```php\r\nfinal public static function concat(): string;\r\n```\r\n\r\n\r\n```php\r\nfinal public static function countVowels( string $text ): int;\r\n```\r\n\r\n\r\n```php\r\nfinal public static function decapitalize( string $text, bool $upperRest = bool, string $encoding = string ): string;\r\n```\r\n\r\n\r\n```php\r\nfinal public static function dirFromFile( string $file ): string;\r\n```\r\n\r\n\r\n```php\r\nfinal public static function dirSeparator( string $directory ): string;\r\n```\r\n\r\n\r\n```php\r\nfinal public static function dynamic( string $text, string $leftDelimiter = string, string $rightDelimiter = string, string $separator = string ): string;\r\n```\r\n\r\n\r\n```php\r\nfinal public static function endsWith( string $text, string $end, bool $ignoreCase = bool ): bool;\r\n```\r\n\r\n\r\n```php\r\nfinal public static function firstBetween( string $text, string $start, string $end ): string;\r\n```\r\n\r\n\r\n```php\r\nfinal public static function humanize( string $text ): string;\r\n```\r\n\r\n\r\n```php\r\nfinal public static function includes( string $needle, string $haystack ): bool;\r\n```\r\n\r\n\r\n```php\r\nfinal public static function increment( string $text, string $separator = string ): string;\r\n```\r\n\r\n\r\n```php\r\nfinal public static function isAnagram( string $first, string $second ): bool;\r\n```\r\n\r\n\r\n```php\r\nfinal public static function isLower( string $text, string $encoding = string ): bool;\r\n```\r\n\r\n\r\n```php\r\nfinal public static function isPalindrome( string $text ): bool;\r\n```\r\n\r\n\r\n```php\r\nfinal public static function isUpper( string $text, string $encoding = string ): bool;\r\n```\r\n\r\n\r\n```php\r\nfinal public static function lower( string $text, string $encoding = string ): string;\r\n```\r\n\r\n\r\n```php\r\nfinal public static function random( int $type = int, long $length = int ): string;\r\n```\r\n\r\n\r\n```php\r\nfinal public static function reduceSlashes( string $text ): string;\r\n```\r\n\r\n\r\n```php\r\nfinal public static function startsWith( string $text, string $start, bool $ignoreCase = bool ): bool;\r\n```\r\n\r\n\r\n```php\r\nfinal public static function uncamelize( string $text, mixed $delimiter = null ): string;\r\n```\r\n\r\n\r\n```php\r\nfinal public static function underscore( string $text ): string;\r\n```\r\n\r\n\r\n```php\r\nfinal public static function upper( string $text, string $encoding = string ): string;\r\n```\r\n\r\n\r\n",
      "Thank you @Jeckerson "
    ],
    "commit_messages": [
      "#14367 - Remove method params"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621290618912b45d36a30c8",
    "number": 14365,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14364 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nCorrected the Debug link to the documentation. Also minor change in AbstractFlash (using property getter). Moved `Phalcon\\Filter\\Filter` to the root namespace to align with the rest of the components.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14364-debug-docs-link",
    "is_a_fork": true,
    "comments": [
      "cc @sergeyklay ",
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14365?src=pr&el=h1) Report\n> Merging [#14365](https://codecov.io/gh/phalcon/cphalcon/pull/14365?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/91093a92dfa9e320d9dd7016847961fed4d91241?src=pr&el=desc) will **decrease** coverage by `0.04%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14365      +/-   ##\n==========================================\n- Coverage   67.83%   67.79%   -0.05%     \n==========================================\n  Files         479      478       -1     \n  Lines      113256   112847     -409     \n==========================================\n- Hits        76831    76506     -325     \n+ Misses      36425    36341      -84\n```\n"
    ],
    "commit_messages": [
      "[#14364] - Removing ext files"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621290718912b45d36a30c9",
    "number": 14363,
    "body": "Closes https://github.com/phalcon/cphalcon/issues/14348\r\n\r\n\r\n",
    "head_branch": "fix/gd-tests",
    "is_a_fork": false,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14363?src=pr&el=h1) Report\n> Merging [#14363](https://codecov.io/gh/phalcon/cphalcon/pull/14363?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/b2c72e83c5ed4202075566ba2642c28c6672e32c?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@           Coverage Diff           @@\n##            4.0.x   #14363   +/-   ##\n=======================================\n  Coverage   67.83%   67.83%           \n=======================================\n  Files         479      479           \n  Lines      113256   113256           \n=======================================\n  Hits        76831    76831           \n  Misses      36425    36425\n```\n"
    ],
    "commit_messages": [
      "Merge pull request #14363 from phalcon/fix/gd-tests\n\nCheck gd extension when test Phalcon"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621290818912b45d36a30ca",
    "number": 14362,
    "body": "ext/ update",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[4.0.x] - Added getCssClasses"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621290918912b45d36a30cb",
    "number": 14361,
    "body": "Hello!\r\n\r\n* Type: temporary\r\n* Link to issue: #13697 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [x] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nRemoved the mongo collection classes from v4 since they are outdated. There is already work for the new version of the mongo driver in #13697 for 4.1\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T13697-remove-mongo-from-4.0",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14361?src=pr&el=h1) Report\n> Merging [#14361](https://codecov.io/gh/phalcon/cphalcon/pull/14361?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/16af7f2eadce8941e16c4c4d7bda64688aa2ad50?src=pr&el=desc) will **increase** coverage by `1.53%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14361      +/-   ##\n==========================================\n+ Coverage   66.29%   67.82%   +1.53%     \n==========================================\n  Files         487      477      -10     \n  Lines      115843   113127    -2716     \n==========================================\n- Hits        76801    76732      -69     \n+ Misses      39042    36395    -2647\n```\n"
    ],
    "commit_messages": [
      "[#13697] - Corrected comments"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621290b18912b45d36a30cc",
    "number": 14360,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue: #14359 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [x] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nRenamed `Phalcon\\Di\\AbstractDIAware` to `Phalcon\\Di\\AbstractInjectionAware`, Removed `Phalcon\\Plugin` - duplicate of `Phalcon\\DI\\Injectable`\r\n\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14359-tidy-up-di-classes",
    "is_a_fork": true,
    "comments": [
      "cc @sergeyklay ",
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14360?src=pr&el=h1) Report\n> Merging [#14360](https://codecov.io/gh/phalcon/cphalcon/pull/14360?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/ee204ccf2dd32c2b394c7b2ae6725aaa67043fb3?src=pr&el=desc) will **decrease** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14360      +/-   ##\n==========================================\n- Coverage    66.3%   66.29%   -0.01%     \n==========================================\n  Files         488      487       -1     \n  Lines      115833   115843      +10     \n==========================================\n- Hits        76801    76799       -2     \n- Misses      39032    39044      +12\n```\n"
    ],
    "commit_messages": [
      "[#14359] - Fixing appveyor"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621290b18912b45d36a30cd",
    "number": 14358,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14349 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed the interface for Flash\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14349-abstractflash-interface",
    "is_a_fork": true,
    "comments": [
      "cc @sergeyklay "
    ],
    "commit_messages": [
      "[#14349] - Updated the changelog"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621290c18912b45d36a30ce",
    "number": 14357,
    "body": "Hello!\r\n\r\n* Type: test\r\n* Link to issue:#14355\r\n\r\nTry to reproduce issue. Can't locate it, but wouldn't hurt to integrate this extra test. ",
    "head_branch": "issue-14355",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14357?src=pr&el=h1) Report\n> Merging [#14357](https://codecov.io/gh/phalcon/cphalcon/pull/14357?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/ee204ccf2dd32c2b394c7b2ae6725aaa67043fb3?src=pr&el=desc) will **increase** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14357      +/-   ##\n==========================================\n+ Coverage    66.3%    66.3%   +<.01%     \n==========================================\n  Files         488      488              \n  Lines      115833   115833              \n==========================================\n+ Hits        76801    76803       +2     \n+ Misses      39032    39030       -2\n```\n"
    ],
    "commit_messages": [
      "added dangling comma's :D"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621290e18912b45d36a30cf",
    "number": 14356,
    "body": "",
    "head_branch": "fix/cleaned-up-travis-ci-build",
    "is_a_fork": false,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14356?src=pr&el=h1) Report\n> Merging [#14356](https://codecov.io/gh/phalcon/cphalcon/pull/14356?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/61eade2fece11583db378dbc1c776c1082163211?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@           Coverage Diff           @@\n##            4.0.x   #14356   +/-   ##\n=======================================\n  Coverage    66.3%    66.3%           \n=======================================\n  Files         488      488           \n  Lines      115833   115833           \n=======================================\n  Hits        76801    76801           \n  Misses      39032    39032\n```\n"
    ],
    "commit_messages": [
      "Merge pull request #14356 from phalcon/fix/cleaned-up-travis-ci-build\n\nCleaned up build on Travis CI [skip appveyor]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621290f18912b45d36a30d0",
    "number": 14354,
    "body": "",
    "head_branch": "fix/3.4",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14354 from phalcon/fix/3.4\n\nFix build 3.4 branch on Travis CI"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621291018912b45d36a30d1",
    "number": 14353,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14330\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n",
    "head_branch": "fix-14330",
    "is_a_fork": true,
    "comments": [
      "Can't locate this issue in 4.0.x",
      "Thank you"
    ],
    "commit_messages": [
      "Merge pull request #14353 from ruudboon/fix-14330\n\nFix 14330"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621291118912b45d36a30d2",
    "number": 14351,
    "body": "Hello!\r\n\r\n* Type: bug fix | code quality\r\n* Link to issue: #14350\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nMore checks for `Security` in the case the session is missing. Refactored various components to use an abstract class that exposes the container; Started work for automatic injection of services in the future.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14346-Security-Session-Fix",
    "is_a_fork": true,
    "comments": [
      "cc @sergeyklay ",
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14351?src=pr&el=h1) Report\n> Merging [#14351](https://codecov.io/gh/phalcon/cphalcon/pull/14351?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/b4037e08f628f9811a392408369ad806ea8cc042?src=pr&el=desc) will **decrease** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14351      +/-   ##\n==========================================\n- Coverage   66.31%    66.3%   -0.01%     \n==========================================\n  Files         488      488              \n  Lines      115937   115833     -104     \n==========================================\n- Hits        76879    76801      -78     \n+ Misses      39058    39032      -26\n```\n",
      "@niden This PR introduce API changes (constructors). Thus could you please amend change log as well."
    ],
    "commit_messages": [
      "[#14346] - Updated the changelog"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621291218912b45d36a30d3",
    "number": 14347,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14346\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix/security-get-session-token",
    "is_a_fork": false,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14347?src=pr&el=h1) Report\n> Merging [#14347](https://codecov.io/gh/phalcon/cphalcon/pull/14347?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/87d258d274445de8b69ad0202a21ce464ce445f1?src=pr&el=desc) will **decrease** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14347      +/-   ##\n==========================================\n- Coverage   66.31%   66.31%   -0.01%     \n==========================================\n  Files         488      488              \n  Lines      115927   115929       +2     \n==========================================\n+ Hits        76873    76874       +1     \n- Misses      39054    39055       +1\n```\n"
    ],
    "commit_messages": [
      "Merge pull request #14347 from phalcon/fix/security-get-session-token\n\nFixed Phalcon\\Security::getSessionToken return value"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621291318912b45d36a30d4",
    "number": 14344,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n\r\n",
    "head_branch": "4.0.x-error-spaces",
    "is_a_fork": true,
    "comments": [
      "Thnx",
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14344?src=pr&el=h1) Report\n> Merging [#14344](https://codecov.io/gh/phalcon/cphalcon/pull/14344?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/ae68d1ff074cd406e7953c6ea38b090643ee1450?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@           Coverage Diff           @@\n##            4.0.x   #14344   +/-   ##\n=======================================\n  Coverage   66.31%   66.31%           \n=======================================\n  Files         488      488           \n  Lines      115927   115927           \n=======================================\n  Hits        76873    76873           \n  Misses      39054    39054\n```\n",
      "Thank you"
    ],
    "commit_messages": [
      "Merge pull request #14344 from Jeckerson/4.0.x-error-spaces\n\nFix exception message"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621291418912b45d36a30d5",
    "number": 14343,
    "body": "Hello! previous conversation is #14333  , the `Content-Disposition` Header with filename which contains special chars need to be quoted.\r\n\r\n* Type: bug fix\r\n* Link to issue: #13919 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR **Tests rely on client implementation**\r\n- [ ] I have updated the relevant CHANGELOG **NOT NEEDED**\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change **NOT NEEDED**\r\n\r\nSmall description of change:\r\nAlways quote the filename if it is pure-ASCII. And reduce one local variable.\r\nThanks\r\n\r\n",
    "head_branch": "issue-13919-additional",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14343?src=pr&el=h1) Report\n> Merging [#14343](https://codecov.io/gh/phalcon/cphalcon/pull/14343?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/ae68d1ff074cd406e7953c6ea38b090643ee1450?src=pr&el=desc) will **decrease** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14343      +/-   ##\n==========================================\n- Coverage   66.31%   66.31%   -0.01%     \n==========================================\n  Files         488      488              \n  Lines      115927   115935       +8     \n==========================================\n+ Hits        76873    76878       +5     \n- Misses      39054    39057       +3\n```\n",
      "Thank you"
    ],
    "commit_messages": [
      "Merge pull request #14343 from ian4hu/issue-13919-additional\n\nIssue 13919 additional fix"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621291518912b45d36a30d6",
    "number": 14342,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nI often find myself having to do the following:\r\n\r\n```php\r\nuse Phalcon\\Di;\r\nuse Other;\r\nuse Another;\r\n\r\n$di = new Di();\r\n\r\n$di->set('name', function () {\r\n   return $this->get(Other::class);\r\n});\r\n\r\nif (true) {\r\n     $di->set(Other::class, Another::class);\r\n}\r\n\r\n```\r\n\r\nThis PR eliminates the extra steps by letting the service class instantiate through the DIC. I can now right the code as:\r\n\r\n```php\r\n\r\nuse Phalcon\\Di;\r\nuse Other;\r\nuse Another;\r\n\r\n$di = new Di();\r\n\r\n$di->set('name', Other::class);\r\nif (true) {\r\n     $di->set(Other::class, Another::class);\r\n}\r\n\r\n```\r\n\r\nThanks\r\n\r\n",
    "head_branch": "4.0.x-di-alias",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14342?src=pr&el=h1) Report\n> Merging [#14342](https://codecov.io/gh/phalcon/cphalcon/pull/14342?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/47cd4a73caf9310303845eb472b8f188ee6d40e7?src=pr&el=desc) will **decrease** coverage by `<.01%`.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@            Coverage Diff             @@\n##            4.0.x   #14342      +/-   ##\n==========================================\n- Coverage   67.78%   67.77%   -0.01%     \n==========================================\n  Files         478      478              \n  Lines      112924   112927       +3     \n==========================================\n- Hits        76549    76541       -8     \n- Misses      36375    36386      +11\n```\n",
      "Related to https://github.com/phalcon/cphalcon/issues/13042",
      "/cc @phalcon/framework-team",
      "@Fenikkusu could you please add an entry in the CHANGELOG-4.0 please?",
      "and rebase",
      "Done\r\n",
      "@Fenikkusu Thank you!"
    ],
    "commit_messages": [
      "Merge branch '4.0.x' into 4.0.x-di-alias"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621291618912b45d36a30d7",
    "number": 14341,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nI feel like I may have submitted this in the past, but could be wrong. This may not be something everyone wants anyways. This is the Makefile I use to develop with. It makes it fairly simple to work with projects. It runs everything through docker, so I don't have to worry about installing any dependencies on my local computer.\r\n\r\n`make build`\r\n`make test-unit`\r\n\r\netc.\r\n\r\nThanks\r\n",
    "head_branch": "4.0.x-makefile",
    "is_a_fork": true,
    "comments": [
      "# [Codecov](https://codecov.io/gh/phalcon/cphalcon/pull/14341?src=pr&el=h1) Report\n> Merging [#14341](https://codecov.io/gh/phalcon/cphalcon/pull/14341?src=pr&el=desc) into [4.0.x](https://codecov.io/gh/phalcon/cphalcon/commit/ab456c116569d00e5c6e47afa6d298529eed8201?src=pr&el=desc) will **not change** coverage.\n> The diff coverage is `n/a`.\n\n\n```diff\n@@           Coverage Diff           @@\n##            4.0.x   #14341   +/-   ##\n=======================================\n  Coverage   66.31%   66.31%           \n=======================================\n  Files         488      488           \n  Lines      115905   115905           \n=======================================\n  Hits        76857    76857           \n  Misses      39048    39048\n```\n",
      "This is an awesome idea.",
      "I've made the requested changes. I also did some minor cleanup to the Codecept Commands to simplify them.",
      "Thank you"
    ],
    "commit_messages": [
      "Merge pull request #14341 from twistersfury/4.0.x-makefile\n\nAdding Makefile"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621291718912b45d36a30d8",
    "number": 14340,
    "body": "### Explain\r\nAnother old pull request https://github.com/phalcon/cphalcon/pull/14335 based on a wrong branch, so I close it and open the new one.\r\nsorry, it's my first time to create a pull request.\r\n\r\n### Description\r\nwe'd better have a persistent id for Redis pconnect() method.\r\ncause without it we can't switch between multiple databases at in the same PHP process.\r\nthe data will always be saved to the last database without it.\r\nas I know all Phalcon versions have this bug.\r\n\r\n### Issue\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/14334",
    "head_branch": "redis_adapter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14340 from lanlin/redis_adapter\n\nredis adapter update: add persistent id for `pconnect()` method. Thank you @lanlin"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621291918912b45d36a30d9",
    "number": 14339,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nI will openly admit that I do not like Laravel for many different reasons. However, I must admit that there are certain 'features' of it that are typically handy. This PR is to add one such feature to Phalcon. Laravel has a general function called `env` that is used to retrieve env vars via getenv,  with defaults, and format them appropriately. Phalcon doesn't have an equivalent. \r\n\r\nThis PR adds two new classes. The first is a base Environment class. The second is an Adapter for the ever popular PhpDotEnv from vlucas. It also updates the Factories to include the base environment by default.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "4.0.x-env",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621291a18912b45d36a30da",
    "number": 14337,
    "body": "Hi\r\n\r\n* Type: new feature | code quality | documentation\r\n\r\nSmall description of change:\r\n\r\nI added boolean flag to `Phalcon\\Http\\Request::getURI()` which if true, would have the query part omitted from the response. Flag is optional and set to false by default for backward compatibility.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "patch-9",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixed spacing in Request.zep"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621291b18912b45d36a30db",
    "number": 14336,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14265\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSwitch to first implementation. Ignoring params in open.\r\n",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14336 from ruudboon/4.0.x\n\nFixed issue #14265"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621291c18912b45d36a30dc",
    "number": 14335,
    "body": "we'd better have a persistent id for Redis pconnect() method.\r\ncause without it we can't switch between multiple databases at in the same PHP process.\r\nthe data will always be saved to the last database without it.\r\nas I know all Phalcon versions have this bug.\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/14334\r\n\r\ncheck this: https://github.com/phpredis/phpredis#pconnect-popen\r\n\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621291d18912b45d36a30dd",
    "number": 14333,
    "body": " - see https://bugs.php.net/bug.php?id=37738\r\n - see https://api.drupal.org/api/drupal/core%21lib%21Drupal%21Core%21File%21FileSystem.php/function/FileSystem%3A%3Abasename/8.2.x\r\n - see https://tools.ietf.org/html/rfc2231#section-5\r\n\r\nHello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #13919 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nAdd non-ASCII support `basename()` by `Phalcon\\Helper\\Fs` and fixed the #13919 \r\n\r\nThanks\r\n\r\n",
    "head_branch": "bugfix/issue-13919",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14333 from ian4hu/bugfix/issue-13919\n\nFixes #13919, make response->setFileToSend support non-ASCII filename."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621291e18912b45d36a30de",
    "number": 14332,
    "body": "Hey guys.\r\n\r\n* Type: bug fix && new feature\r\n* Link to the issue: #14331 \r\n\r\nWhy do we complicate things? Let's utilize `Phalcon\\Helper\\Str::reduceSlashes` method instead of\r\n```zephir\r\nif substr(baseUri, -1) == \"/\" && strlen(strUri) > 2 && strUri[0] == '/' && strUri[1] != '/' {\r\n    let uri = baseUri . substr(strUri, 1);\r\n} else {\r\n    if baseUri == \"/\" && strlen(strUri) == 1 && strUri[0] == '/' {\r\n        let uri = baseUri;\r\n    } else {\r\n        let uri = baseUri . strUri;\r\n    }\r\n}\r\n```\r\n\r\n`Phalcon\\Helper\\Str::concat('/', baseUri, strUri)` would've worked as well.\r\n\r\n",
    "head_branch": "patch-8",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Removed unnecessary use statement"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621292018912b45d36a30df",
    "number": 14329,
    "body": "Hello!\r\n\r\n* Type: documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change: Updated docblocks with new domain andminor interface change. Regenerated ext also\r\n\r\nThanks\r\n\r\n",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[4.0.x] - Fixed test"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621292118912b45d36a30e0",
    "number": 14325,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/14324\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fixed-issue-14324",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14325 from ZhangRuiMingZRM/fixed-issue-14324\n\nfixed issue 14324"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621292218912b45d36a30e1",
    "number": 14322,
    "body": "Exceptions in Phalcon should extend Phalcon\\Exception\r\nFixed\r\n- Phalcon\\Cache\\Exception\r\n- Phalcon\\Cache\\InvalidArgumentException\r\n- Phalcon\\Collection\\Exception\r\n\r\n* Type: code quality \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n",
    "head_branch": "collection-exception",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14322 from ruudboon/collection-exception\n\nExceptions in Phalcon should extend Phalcon\\Exception"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621292318912b45d36a30e2",
    "number": 14315,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/14314\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n",
    "head_branch": "fixed-issue-14314",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14315 from ZhangRuiMingZRM/fixed-issue-14314\n\nFixed issue 14314"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621292418912b45d36a30e3",
    "number": 14313,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [-] I have updated the relevant CHANGELOG\r\n- [-] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nThe [Travis build already uses MySQL 5.7](https://travis-ci.org/SidRoberts/cphalcon/jobs/574068701#L73) and [Ubuntu 18.04 has MySQL 5.7](https://packages.ubuntu.com/bionic/mysql-server).",
    "head_branch": "no-mysql-upgrade",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14313 from SidRoberts/no-mysql-upgrade\n\nTravis now uses preinstalled MySQL version"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621292518912b45d36a30e4",
    "number": 14312,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14263 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n\r\nSmall description of change:\r\nMoved logger to correct namespace.\r\n\r\n\r\n\r\n",
    "head_branch": "issue-14263",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14312 from ruudboon/issue-14263\n\nFixed issue 14263"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621292718912b45d36a30e5",
    "number": 14307,
    "body": "",
    "head_branch": "4.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14307 from phalcon/4.0.x\n\nv4.0.0-beta.2"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621292918912b45d36a30e6",
    "number": 14306,
    "body": "Hello!\r\n\r\n* Type: documentation\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14306 from ruudboon/4.0.x\n\nAdded api docs generating instructions"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621292a18912b45d36a30e7",
    "number": 14305,
    "body": "Hello!\r\n\r\n* Type: documentation\r\n* Link to issue: -\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [x] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n`Select::addOption` allows strings as an argument, but this is not indicated in the PHPDoc\r\nhttps://github.com/phalcon/cphalcon/blob/45867075476996f5f6e352bf334e381ff0d4608a/phalcon/Forms/Element/Select.zep#L38-L56\r\n\r\nTest for this already exists:\r\nhttps://github.com/phalcon/cphalcon/blob/45867075476996f5f6e352bf334e381ff0d4608a/tests/integration/Forms/Element/Select/AddOptionCest.php#L53-L67\r\n\r\nThanks\r\n\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14305 from StudioMaX/patch-1\n\nShow in PHPDoc that Select::addOption is allows strings"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621292b18912b45d36a30e8",
    "number": 14302,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/14301\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix-issue-14301",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14302 from ZhangRuiMingZRM/fix-issue-14301\n\nFix issue 14301"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621292c18912b45d36a30e9",
    "number": 14300,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/14299\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n\r\nAdded check to constructor\r\n",
    "head_branch": "paginator-segfault",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14300 from ruudboon/paginator-segfault\n\nFixed issue #14299"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621292d18912b45d36a30ea",
    "number": 14298,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14293 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nCorrected interfaces\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14293-application-interface-correction",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14298 from niden/T14293-application-interface-correction\n\nT14293 application interface correction"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621292e18912b45d36a30eb",
    "number": 14297,
    "body": "Hello!\r\n\r\n* Type: CI fix\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n\r\nSmall description of change:\r\n\r\nTravis build fails again, the psr extension became outdated.\r\n\r\nThanks,\r\nzsilbi\r\n",
    "head_branch": "ext-psr-update",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621292f18912b45d36a30ec",
    "number": 14296,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nAccording to the code `groupBy` may be `string` AND `array`, but PHPDoc in `BuilderInterface` and `getGroupBy` says that the argument type must be a `string`.\r\n\r\nhttps://github.com/phalcon/cphalcon/blob/1341f1df3982712b5e168de9ba2159dfbd08a096/phalcon/mvc/model/query/builder.zep#L1005-L1018\r\n\r\nhttps://github.com/phalcon/cphalcon/blob/1341f1df3982712b5e168de9ba2159dfbd08a096/phalcon/mvc/model/query/builder.zep#L1270-L1285\r\n\r\nThanks\r\n\r\n",
    "head_branch": "groupby-phpdoc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621293018912b45d36a30ed",
    "number": 14294,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [-] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\n`cancelOperation()` previously did not return a value on success. It now returns `true`.",
    "head_branch": "cleanup-collection",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14294 from SidRoberts/cleanup-collection\n\nTidied up Collection class."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621293118912b45d36a30ee",
    "number": 14292,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #14291 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nFixed issue, added test and updated log.\r\nSorry for the large amounts of commits. Still learning git and having some issues rebasing :(",
    "head_branch": "issue-14291",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix for issue 14291 (#14292)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621293218912b45d36a30ef",
    "number": 14290,
    "body": "Upgraded Zephir to 12.2 ",
    "head_branch": "ZephirUpgrade12.2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14290 from ruudboon/ZephirUpgrade12.2\n\nZephir upgrade 12.2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621293318912b45d36a30f0",
    "number": 14289,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #14265 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n- Set session_save_path so open() will be called with the correct path.\r\n- Fixed tests that kept session open\r\n",
    "head_branch": "issue-14265-new",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621293418912b45d36a30f1",
    "number": 14284,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: [#14281](https://github.com/phalcon/cphalcon/issues/14281)\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\n`setTimeout` command was removed from phalcon-v4.0.x. but `delete` and `getKeys` still exists deprecated warning\r\n\r\nThanks\r\n\r\n",
    "head_branch": "redis_deprecated_warning",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixed deprecated warning from php-redis"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621293518912b45d36a30f2",
    "number": 14283,
    "body": "- Add merge check with threshold of 0.5%\r\n- Remove no longer needed autoconf call\r\n- Reformat project's config.json",
    "head_branch": "fix/update-cc",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14283 from phalcon/fix/update-cc\n\nUpdate code coverage settings [skip appveyor]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621293718912b45d36a30f3",
    "number": 14280,
    "body": "Added unit test to test behaviour of issue #14269\r\n\r\n",
    "head_branch": "issue-14269",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621293818912b45d36a30f4",
    "number": 14279,
    "body": "Fixed issue #14265, added test and added method to get Path.\r\n",
    "head_branch": "issue-14265",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621293918912b45d36a30f5",
    "number": 14278,
    "body": "Hello!\r\n\r\n* Type: bug fix | code quality\r\n* Link to issue: #14275\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\n- Removed dead libsodium-related code. It was never called in PHP >= 7.0.\r\n- Cleaned up Travis CI scripts\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix/remove-dead-code",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14278 from phalcon/fix/remove-dead-code\n\n Removed dead libsodium-related code"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621293a18912b45d36a30f6",
    "number": 14277,
    "body": "Created a test for #14270. Can't reproduce this behaviour on 4.0.x but would like to keep this test as standard test.",
    "head_branch": "issue-14270",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14277 from ruudboon/issue-14270\n\nFunctional test for issue 14270"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621293b18912b45d36a30f7",
    "number": 14276,
    "body": "Hello!\r\n\r\n* Type: bug fix | code quality\r\n* Link to issue: #14275\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] There are another pull request: #14275\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\n- Travis CI: Correct install sodium:\r\n```diff\r\n- libosodium\r\n+ libsodium\r\n```\r\n- Improved editor config\r\n-  Minor Travis CI improvements and code style corrections\r\n- Safe after-failure.sh script\r\n\r\nThanks\r\n\r\n/cc @SidRoberts",
    "head_branch": "feature/ci-improvements",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14276 from phalcon/feature/ci-improvements\n\nFeature/ci improvements"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621293c18912b45d36a30f8",
    "number": 14275,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [-] I have updated the relevant CHANGELOG\r\n- [-] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nI had an issue where one of my private Travis builds failed because a PHP extension didn't install properly and the install script didn't stop and report the error.",
    "head_branch": "bad-php-ext",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621293d18912b45d36a30f9",
    "number": 14274,
    "body": "Hello!\r\n\r\n* Type: bug fix |code quality\r\n* Link to issue: -\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\n- Travis CI: Fixed after failure script to correct handle core dumps\r\n- Travis CI: Fixed core dump settings on Travis\r\n- Travis CI: Simplified code coverage report collect\r\n- Travis CI: Cleaned up provision scripts\r\n- Travis CI: Add shellcheck support\r\n\r\nThanks\r\n\r\n",
    "head_branch": "feature/ci-improvements",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14274 from phalcon/feature/ci-improvements\n\nCI improvements"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621293e18912b45d36a30fa",
    "number": 14271,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/commit/41db7fe09bfb4fd2e5546b4ad9922ba481bccd06#r34516899\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I have updated the relevant CHANGELOG\r\n\r\nSmall description of change: The` isSerializable` method on `Phalcon\\Storage\\Serializer\\AbstractSerliazer` returns the correct values now.\r\n\r\nThanks @ogarbe for pointing it out\r\n\r\n",
    "head_branch": "fixed-serializer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Updated `isSerializer` to return the correct value"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621293f18912b45d36a30fb",
    "number": 14268,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14260 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [-] I have updated the relevant CHANGELOG\r\n- [-] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nTwo important things of note:\r\n\r\n* [From OpenSSL 1.1.1, ciphers are lowercased](https://www.php.net/manual/en/function.openssl-get-cipher-methods.php#123319)\r\n* [Memcached::getAllKeys() appears to be broken from 1.4.23](https://www.php.net/manual/en/memcached.getallkeys.php#123793)\r\n\r\nI've tried to alter the code to work around these problems but I'd like someone with a fresh set of eyes to double check as I've been looking at this too long. :stuck_out_tongue_winking_eye: ",
    "head_branch": "mysql-script",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14268 from SidRoberts/mysql-script\n\nTravis now uses Ubuntu 18.04 for builds"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621294018912b45d36a30fc",
    "number": 14267,
    "body": "Upgraded Zephir & Zephir parser\r\n",
    "head_branch": "ZephirUpgrade",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14267 from ruudboon/ZephirUpgrade\n\nUpgraded Zephir & Zephir parser"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621294218912b45d36a30fd",
    "number": 14262,
    "body": "Fixed PHPdoc\r\n\r\nHello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14262 from ruudboon/patch-1\n\nUpdate Collection.zep"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621294318912b45d36a30fe",
    "number": 14261,
    "body": "Fixed phpdoc.\r\n\r\nHello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621294418912b45d36a30ff",
    "number": 14259,
    "body": "Hello!\r\n\r\n* Type: performance tuning\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nTo use `Mvc\\Router\\Annotations`, you have to add the resources that you want it to parse. \r\nYou can assign a prefix for every resource for faster handling.\r\n\r\n```php\r\n$di->setShared(\r\n     \"router\",\r\n     function() {\r\n         // Use the annotations router\r\n         $router = new Annotations(false);\r\n\r\n         // This will do the same as above but only if the handled uri starts with /robots\r\n         $router->addResource(\"Robots\", \"/robots\");\r\n\r\n        return $router;\r\n     }\r\n);\r\n```\r\n\r\nAdding controllers with distinct prefixes will work great, even in a huge a project.\r\n\r\nIf you don't use prefixes, it will basicly need to check and parse every resource that you added. It will be a bit slow but will work good enough for small projects.\r\n\r\nHowever, if you have a lot of controllers with prefixes that have parameters or placeholders in the beginning, you won't be able to use them. \r\n\r\nFor example if you have 75 controllers with prefixes like this: \r\n - /clients/{clientId:[0-9]+}/\r\n - /clients/{clientId:[0-9]+}/robots\r\n - /clients/{clientId:[0-9]+}/parts\r\n - ...\r\n\r\nIn this case, only the `/clients` prefix can be used for all the 75 controllers.\r\n\r\nIn my test runs, I used a total of 150 resources, 75 with the same prefix and the average route handling time was over 50ms. Without using any prefixes, it was around 90ms.\r\n\r\n**My idea would be to compile the prefixes as standard route patterns, so you could pass any type of pattern as a prefix along with your resource to the `Router`.**\r\n\r\nI repeated the same tests using this code, and my average route handling time was around 3ms which I find somewhat acceptable. \r\n\r\nThanks,\r\nzsilbi\r\n",
    "head_branch": "annotations-router-pattern-prefix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Changelog"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621294518912b45d36a3100",
    "number": 14251,
    "body": "Hello!\r\n\r\n* Change changelog.md\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "upd-changelog-3v",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update changelog.md v3 (#14251)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621294618912b45d36a3101",
    "number": 14249,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I have updated the relevant CHANGELOG\r\n\r\nSmall description of change:\r\nSome interfaces were not imported properly after refactoring.\r\nFixed missing imports in `Phalcon\\Db\\Adapter\\AbstractAdapter`, `Phalcon\\Db\\Adapter\\AdapterInterface`, `Phalcon\\Db\\Result\\Pdo`, `Phalcon\\Html\\Tag` and `Phalcon\\Tag\\Select`.\r\n\r\nThanks,\r\nzsilbi\r\n\r\n",
    "head_branch": "db-adapter-missing-dialectinterface",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixed missing Interface imports (#14249)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621294718912b45d36a3102",
    "number": 14248,
    "body": "Hello!\r\n\r\n* Type: version update\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nBumping the version\r\n\r\nThanks\r\n\r\n",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14248 from niden/4.0.x\n\n[4.0.x] - Bumping up the version"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621294f18912b45d36a3103",
    "number": 14247,
    "body": "",
    "head_branch": "4.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14247 from phalcon/4.0.x\n\n4.0.0-beta.1"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621295018912b45d36a3104",
    "number": 14243,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/pull/14238\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nThis patch fixes a segfault when a `Phalcon\\Mvc\\Micro\\LazyLoader` handler contains a syntax error. Same as patch https://github.com/phalcon/cphalcon/pull/14238 but for v4.0.x\r\n\r\nThanks\r\n\r\n",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14243 from davidofferman/4.0.x\n\nFix Phalcon\\Mvc\\Micro\\LazyLoader::callMethod() segfault"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621295118912b45d36a3105",
    "number": 14242,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "crypt",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14242 from ekmst/crypt\n\nMinor changes on Crypt"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621295218912b45d36a3106",
    "number": 14241,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "session",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14241 from ekmst/session\n\nMinor changes on session manager"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621295318912b45d36a3107",
    "number": 14240,
    "body": "just fixed missing `@param boolean allFields` at `::hasChanged()`",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14240 from cottton/patch-3\n\nfixed missing @param"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621295418912b45d36a3108",
    "number": 14239,
    "body": "Just fixed the code example in the method doc",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14239 from cottton/patch-2\n\nfixing docu code example"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621295518912b45d36a3109",
    "number": 14238,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/12396\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nFixes a segfault when using Micro with Collections. The segfault happens when you lazy load a handler that has a syntax error.\r\n\r\nSample Application:\r\nThis sample application with `index.php` and `controllers/BadController.php`. The controller is missing a semi-colon on purpose when assigning the array to a variable.\r\n\r\n```\r\n<?php\r\n\r\ntry {\r\n\t$collection = new Phalcon\\Mvc\\Micro\\Collection();\r\n\t$collection->setPrefix(\"\");\r\n\t$collection->setHandler(\"Controller\\\\BadController\");\r\n\t$collection->setLazy(true);\r\n\t$collection->head(\"/\", \"bugAction\");\r\n\t$collection->get(\"/\", \"bugAction\");\r\n\r\n\t$loader = new Phalcon\\Loader();\r\n\t$loader->registerNamespaces([\r\n\t\t\"Controller\" => __DIR__ . \"/controllers/\"\r\n\t]);\r\n\r\n\t$loader->register();\r\n\r\n\t$app = new Phalcon\\Mvc\\Micro();\r\n\t$app->mount($collection);\r\n\t$app->handle();\r\n} catch(Throwable $t) {\r\n\tprint_r($t);\r\n}\r\n```\r\n```\r\n<?php\r\n\r\nnamespace Controller;\r\n\r\nclass BadController {\r\n\r\n\tpublic function bugAction($slug) {\r\n\t\t$a = []\r\n\t}\r\n\r\n}\r\n```\r\n\r\nThank you.",
    "head_branch": "3.4.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14238 from davidofferman/3.4.x\n\nFix Phalcon\\Mvc\\Micro\\LazyLoader segfault"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621295618912b45d36a310a",
    "number": 14236,
    "body": "Hello!\r\n\r\n* Type: CI environment | testing\r\n* Link to issue: #14230\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nInstall mondodb support on Travis CI.\r\n\r\nThanks\r\n\r\n/cc @tacxticx88, @niden \r\n",
    "head_branch": "feature/mongodb-support",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14236 from phalcon/feature/mongodb-support\n\nInstall mondodb support on Travis [skip appveyor]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621295718912b45d36a310b",
    "number": 14235,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14080 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed array to string conversion on `delete`\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14080-schema-delete",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[#14080] - Updated Changelog"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621295918912b45d36a310c",
    "number": 14234,
    "body": "Hello!\r\n\r\n* Type: enhancement\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nMoved some classes back to the root namespace\r\n\r\nThanks\r\n\r\n",
    "head_branch": "undo-rename",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[undo] - Corrections to the changelog"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621295a18912b45d36a310d",
    "number": 14233,
    "body": "Fixed msgpack installation resolves #14232",
    "head_branch": "issue-14232",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14233 from ruudboon/issue-14232\n\nFixed msgpack installation in Nanobox"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621296218912b45d36a310e",
    "number": 14231,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.4.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621296318912b45d36a310f",
    "number": 14230,
    "body": "Hello!\r\n\r\n* Type: breaks bc | new feature\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/13697\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\n* Added `Phalcon\\Mvc\\Collection\\Document::__construct()`\r\n* Added `Phalcon\\Mvc\\Collection\\Document::count()`\r\n* Changed `Phalcon\\Mvc\\Collection\\Document`  \r\n  * Now implements `Countable`\r\n* Changed `Phalcon\\Mvc\\Collection::findFirst()`\r\n  * Now returns a `null` or `CollectionInterface` \r\n* Changed `Phalcon\\Mvc\\Collection::getId()`\r\n  * Now returns a `\\MongoDB\\BSON\\ObjectId` \r\n* Depreciated `Phalcon\\Mvc\\Collection::createIfNotExist()`\r\n* Deleted `Phalcon\\Mvc\\Collection::summatory()`\r\n  * This method to group records no longer exists in the new driver. It can be easily replaced by the MongoDB [$group](https://docs.mongodb.com/manual/reference/operator/aggregation/group/) in [aggregation framework](https://docs.mongodb.com/manual/aggregation/), you can use `Phalcon\\Mvc\\Collection::aggregate()` method. \r\n* Changed `Phalcon\\Mvc\\Collection\\Manager::getCustomEventsManager()`\r\n  * Now return a `null` or `Phalcon\\Events\\ManagerInterface`\r\n* Changed `Phalcon\\Mvc\\Collection\\Manager::getConnection()`\r\n  * Now return a `\\MongoDB\\Database` or `Phalcon\\Db\\Adapter\\AdapterInterface`\r\n* Refactoring `Phalcon\\Mvc\\Collection\\Manager`\r\n  * Events triggered in collections are now prefixed with `collection:` instead of `model:`\r\n  * Modification of variable names to match collections (`var model` to `var collection`)\r\n\r\n- Refactoring `Phalcon\\Mvc\\Collection`\r\n  - Modification of variables of type `MongoId` to the new type `ObjectId`\r\n  - Modification of variable names to match collections (`var mongoId` to `var objectId`)\r\n\r\n----\r\n\r\nThanks\r\n\r\n",
    "head_branch": "feature/new-mongodb-driver",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621296b18912b45d36a3110",
    "number": 14229,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.4.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621296c18912b45d36a3111",
    "number": 14228,
    "body": "Hello!\r\n\r\n* Type: refactoring\r\n* Link to issue: #14213 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\n- Added `Phalcon\\Db\\Enum`  \r\n- Added `Phalcon\\Dispatcher\\Exception`  \r\n- Renamed `Phalcon\\Acl` to  `Phalcon\\Acl\\Enum`   \r\n- Renamed `Phalcon\\Acl\\Adapter` to `Phalcon\\Acl\\Adapter\\AbstractAdapter`  \r\n- Renamed `Phalcon\\Acl\\AdapterInterface` to `Phalcon\\Acl\\Adapter\\AdapterInterface`  \r\n- Renamed `Phalcon\\Application` to `Phalcon\\Application\\AbstractApplication`  \r\n- Renamed `Phalcon\\Container` to `Phalcon\\Container\\Container`  \r\n- Renamed `Phalcon\\Crypt` to `Phalcon\\Crypt\\Crypt`  \r\n- Renamed `Phalcon\\CryptInterface` to `Phalcon\\Crypt\\CryptInterface`  \r\n- Renamed `Phalcon\\Db\\Adapter` to `Phalcon\\Db\\Adapter\\AbstractAdapter`  \r\n- Renamed `Phalcon\\Db\\AdapterInterface` to `Phalcon\\Db\\Adapter\\AdapterInterface`  \r\n- Renamed `Phalcon\\Db` to `Phalcon\\Db\\AdapterDb`  \r\n- Renamed `Phalcon\\Db\\Adapter\\Pdo` to `Phalcon\\Db\\Adapter\\Pdo\\AbstractPdo`  \r\n- Renamed `Phalcon\\Dispatcher` to `Phalcon\\Dispatcher\\AbstractDispatcher`  \r\n- Renamed `Phalcon\\DispatcherInterface` to `Phalcon\\Dispatcher\\DispatcherInterface`  \r\n- Renamed `Phalcon\\Escaper` to `Phalcon\\Escaper\\Escaper`  \r\n- Renamed `Phalcon\\EscaperInterface` to `Phalcon\\Escaper\\EscaperInterface`  \r\n- Renamed `Phalcon\\Firewall\\Adapter` to `Phalcon\\Firewall\\Adapter\\AbstractAdapter`  \r\n- Renamed `Phalcon\\Firewall\\AdapterInterface` to `Phalcon\\Firewall\\Adapter\\AdapterInterface`  \r\n- Renamed `Phalcon\\Flash` to `Phalcon\\Flash\\AbstractFlash`  \r\n- Renamed `Phalcon\\FlashInterface` to `Phalcon\\Flash\\FlashInterface`  \r\n- Renamed `Phalcon\\Forms\\Element` to `Phalcon\\Forms\\Element\\AbstractElement`  \r\n- Renamed `Phalcon\\Forms\\ElementInterface` to `Phalcon\\Forms\\Element\\ElementInterface`  \r\n- Renamed `Phalcon\\Image` to `Phalcon\\Image\\Enum`  \r\n- Renamed `Phalcon\\Mvc\\View\\Engine` to `Phalcon\\Mvc\\View\\Engine\\AbstractEngine`  \r\n- Renamed `Phalcon\\Mvc\\View\\EngineInterface` to `Phalcon\\Mvc\\View\\Engine\\EngineInterface`  \r\n- Renamed `Phalcon\\Security` to `Phalcon\\Security\\Security`  \r\n- Renamed `Phalcon\\Validator` to `Phalcon\\Validator\\Validator`  \r\n- Renamed `Phalcon\\Validator\\Validator` to `Phalcon\\Validator\\AbstractValidator`  \r\n- Renamed `Phalcon\\Validator\\ValidatorComposite` to `Phalcon\\Validator\\AbstractValidatorComposite`  \r\n- Renamed `Phalcon\\Validator\\CombinedFieldsValidator` to `Phalcon\\Validator\\AbstractCombinedFields`  \r\n- Renamed `Phalcon\\Validator\\Validator\\File\\FileAbstract` to `Phalcon\\Validator\\Validator\\File\\AbstractFile`  \r\n\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14213-abstract-classes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[#14213] - Removed not needed ext files"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621296e18912b45d36a3112",
    "number": 14227,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nRefactored the storage adapters\r\n\r\nThanks\r\n",
    "head_branch": "storage",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "refactored the storage adapters"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621296f18912b45d36a3113",
    "number": 14226,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/13646\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I have updated the relevant CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nThe `getAttributes()` method was added to `Phalcon\\Form\\Form`, but it wasn't added to the internal methods array.\r\n`Phalcon\\Form\\Form::getValue('attributes')` returns the attributes from `Phalcon\\Form\\Form::getAttributes()` instead of the value of the `Element`, named `attributes`.\r\n\r\nThanks,\r\nzsilbi\r\n\r\n",
    "head_branch": "form-attributes-element-value-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Changelog typo"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621297018912b45d36a3114",
    "number": 14223,
    "body": "Hello!\r\n\r\n* Type: enhancement\r\n* Link to issue: #14212 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nRemoved \r\n- `Phalcon\\Annotations\\Reflection::__set_state()`\r\n- `Phalcon\\Db\\ColumnInterface::__set_state()`\r\n- `Phalcon\\Db\\Column::__set_state()`\r\n- `Phalcon\\Db\\IndexInterface::__set_state()`\r\n- `Phalcon\\Db\\Index::__set_state()`\r\n- `Phalcon\\Db\\ReferenceInterface::__set_state()`\r\n- `Phalcon\\Db\\Reference::__set_state()`\r\n- `Phalcon\\Di\\ServiceInterface::__set_state()`\r\n- `Phalcon\\Di\\Service::__set_state()`\r\n- `Phalcon\\Http\\Response\\HeadersInterface::__set_state()`\r\n- `Phalcon\\Http\\Response\\Headers::__set_state()`\r\n- `Phalcon\\Http\\Request::__set_state()`\r\n- `Phalcon\\Messages\\Message::__set_state()`\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14212-set-state",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[#14212] - Updated the changelog"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621297118912b45d36a3115",
    "number": 14222,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [-] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "view-setviewsdir",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621297218912b45d36a3116",
    "number": 14221,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [-] I have updated the relevant CHANGELOG\r\n- [- I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added CLI test."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621297318912b45d36a3117",
    "number": 14219,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14217\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [-] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.4.x-fixes-14217",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14219 from SidRoberts/3.4.x-fixes-14217\n\n[3.4.x] `Phalcon\\Forms\\Form::clear()` now correctly clears single fields"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621297418912b45d36a3118",
    "number": 14218,
    "body": "Hello!\r\n\r\n* Type: bug fix | code quality\r\n* Link to issue: #14217\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [-] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fixes-14217",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14218 from SidRoberts/fixes-14217\n\nForm::clear() now correctly clears single fields"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621297518912b45d36a3119",
    "number": 14215,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: /\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThe HAVE_SPL symbol is defined in PHP to indicate the presence of the spl extension. Since PHP 5.3 the SPL extension is always availabe and since PHP-7.4 the HAVE_SPL symbol has also been removed.\r\n\r\n\r\nThanks\r\n\r\n",
    "head_branch": "patch-have-spl",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621297718912b45d36a311a",
    "number": 14211,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14190\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n",
    "head_branch": "bugfix/queryKeys",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "updated changelog"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621297818912b45d36a311b",
    "number": 14210,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "improvements"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621297918912b45d36a311c",
    "number": 14209,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [-] I have updated the relevant CHANGELOG\r\n- [-] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "use",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added `use` statements."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621297a18912b45d36a311d",
    "number": 14208,
    "body": "Hello!\r\n\r\n* Type: bug fix | code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change: \r\nbug fixes and improvements on validators \r\n\r\nThanks\r\n",
    "head_branch": "validators",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "improved file validator"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621297b18912b45d36a311e",
    "number": 14207,
    "body": "Form shouldn't create object variables, it should write to entity only if the property exists\r\n\r\n* Type: bug fix\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\n",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621297c18912b45d36a311f",
    "number": 14202,
    "body": "Hello!\r\n\r\n* Type: documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nDocblock corrections; Adjusted the api generation script\r\n\r\nThanks\r\n\r\n",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[4.0.x] - Adjustments to the api generation"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621297d18912b45d36a3120",
    "number": 14201,
    "body": "Hello!\r\n\r\n* Type: documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nAdded script to parse the source code and generate API documentation\r\n\r\nThanks\r\n\r\n",
    "head_branch": "api-docs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[api] - More docblock corrections for the API"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621297f18912b45d36a3121",
    "number": 14200,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14198 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- -[ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change-\r\n\r\nSmall description of the change:\r\n```zep\r\nlet value = validation->getValue(field);\r\n```\r\n\r\nThanks\r\n\r\n",
    "head_branch": "bugfix/T14198",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixed #14198: Missing validation value resolution"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621298018912b45d36a3122",
    "number": 14197,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14196 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nJust fixed the bug\r\nThanks\r\n\r\n",
    "head_branch": "T14196-file-validator",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Changed strtolower to strcasecmp"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621298118912b45d36a3123",
    "number": 14194,
    "body": "Hello!\r\n\r\nI've updated travis to test the nightly version so we can see how we perform on upcoming PHP versions (e.g. PHP 7.4)\r\n\r\nThanks!",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added PHP 7.4 to Travis as allowed failure (#14194)\n\n* Added nightly PHP to Travis as allowed failure\r\n\r\n* Update .travis.yml\r\n\r\n* Update .travis.yml\r\n\r\n* Disabled report coverage for 7.4"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621298218912b45d36a3124",
    "number": 14193,
    "body": "Hello!\r\n\r\n* Type: new feature | code quality\r\n* Link to issue: #13208 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nMoved default validation messages to validators\r\nThanks\r\n\r\n",
    "head_branch": "T13208-validation-messages",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[#13208] - Corrected more tests"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621298318912b45d36a3125",
    "number": 14192,
    "body": "",
    "head_branch": "regenerate-ext",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Regenerate the ext dir [skip appveyor]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621298418912b45d36a3126",
    "number": 14191,
    "body": "Hello!\r\n\r\n* Type: feature | code quality\r\n* Link to issue: -\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I updated the CHANGELOG\r\n\r\nSmall description of change:\r\n- Update Zephir & Zephir Parser\r\n- Minor provision cleaning up \r\n\r\nThanks\r\n\r\n",
    "head_branch": "feature/use-latest-stable-zephir",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Use latest stable Zephir"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621298518912b45d36a3127",
    "number": 14189,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [-] I have updated the relevant CHANGELOG\r\n- [-] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nI'm having a few issues with setting up Travis on my account (despite it previously working fine). I'm trying to simplify the setup process to make it easier to debug. Everything is pretty much the same as before. ~~The only difference is that I have removed the shell script that installs MySQL 5.7 as it is already installed by Travis.~~",
    "head_branch": "simpler-travis",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Simplified .travis.yml (#14189)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621298618912b45d36a3128",
    "number": 14187,
    "body": "Hello,\r\n\r\nI'd like to stop stale marking NFR or Enhancements as stale... I don't think we should be relying upon ticket activity to identify whether an NFR is worthwhile.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update stale.yml"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621298718912b45d36a3129",
    "number": 14186,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #13201, #13768\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change: \r\n- `Phalcon/Config` now extends `Phalcon\\Collection\\Collection`\r\n- Removed __set_state method\r\n- Merging is done properly\r\n- Assignment works as expected _all_ the time\r\n\r\nIt is worth noting that in #13768 it talks about correctly interpreting integers defined as strings. This is simply not possible given that PHP will cast strings that look like integers to integers. \r\n\r\nWe also need to maintain our own merge functionality because the native PHP `array_merge_recusive` will merge values together into an array if they have the same string keys. `array_replace_recursive` created its own issues whereby it would replace keys with the same numeric index instead of appending to array itself.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "bugfix/merge-typecasted-keys",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[merge] - Updated the changelog"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621298818912b45d36a312a",
    "number": 14184,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #13870 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed various areas in `Phalcon\\Acl\\Adapter` and `Phalcon\\Acl\\Adapter\\Memory` including comments, logic, `denyComponentAccess` and `AdapterInterface`.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T13870-acl-inherit-order",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[#13870] - Changes based on review"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621298a18912b45d36a312b",
    "number": 14182,
    "body": "Hello!\r\n\r\n* Type: new feature | code quality\r\n* Link to issue: #13954 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nIt's a little function to get some elements by key from a whitelist of keys\r\nThanks\r\n\r\n",
    "head_branch": "T13954-arr-white-list",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added Arr::whiteList()"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621298b18912b45d36a312c",
    "number": 14180,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nWorkaround for removing services in the DI\r\n\r\nThanks\r\n\r\n",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621298c18912b45d36a312d",
    "number": 14179,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue: #13655 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nAdded some DI unit tests\r\nThanks\r\n\r\n",
    "head_branch": "T13655-di-unit-tests-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added CLI factory construct test"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621298d18912b45d36a312e",
    "number": 14176,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue: #13655 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nI just added DI::getServices unit tests\r\nThanks\r\n\r\n",
    "head_branch": "T13655-di-unit-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621298e18912b45d36a312f",
    "number": 14175,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [-] I have updated the relevant CHANGELOG\r\n- [-] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "tidy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Tidied up Model\\Manager::getRelationRecords()."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621298f18912b45d36a3130",
    "number": 14174,
    "body": "Hello!\r\n\r\n* Type: bug fix | code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [-] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "validationfailed-modelinterface",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "`Phalcon\\Mvc\\Model\\ValidationFailed` now works with `ModelInterface`."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621299018912b45d36a3131",
    "number": 14173,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue: #13655 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nAdded more attributes unit tests\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14139-attributes-unit-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621299118912b45d36a3132",
    "number": 14172,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [-] I have updated the relevant CHANGELOG\r\n- [-] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "router-tidy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Tidied up Router\\Annotations::processActionAnnotation()."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621299218912b45d36a3133",
    "number": 14171,
    "body": "Hello!\r\n\r\n* Type: bug fix | code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [-] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nAlso fixed a small bug whereby calling `setModelBinder()` without explicitly setting a DI first could cause problems.\r\n\r\n",
    "head_branch": "micro-handler-array",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "`Phalcon\\Mvc\\Micro::setModelBinder()` now uses the Factory Default DI if none is set."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621299318912b45d36a3134",
    "number": 14170,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [-] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "db-column-schemaname",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added some Micro Collection tests."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621299418912b45d36a3135",
    "number": 14169,
    "body": "Hello!\r\n\r\n* Type: testing\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [-] I have updated the relevant CHANGELOG\r\n- [-] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nPreviously, Travis only ran builds for specific branches which isn't particularly helpful for developers running their own Travis builds. All branches should be tested anyway. :wink: ",
    "head_branch": "travis-branch-restriction",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Removed Travis branch restriction."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621299518912b45d36a3136",
    "number": 14168,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [-] I have updated the relevant CHANGELOG\r\n- [-] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\n`table` is overwritten here: https://github.com/phalcon/cphalcon/blob/37d07a1558f2d929d7c4f35548eaee612e639d3e/phalcon/Mvc/Model.zep#L4036-L4040",
    "head_branch": "model-exists",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Removed unused parameter from Model::_exists()."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621299618912b45d36a3137",
    "number": 14167,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/14126, https://github.com/phalcon/cphalcon/pull/13022\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [-] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nMy plan:\r\n\r\n1. Add the necessary functions to the Models Manager which simply call the method on the Model class.\r\n2. Write / copy tests to prove it works.\r\n3. Move the code over to the new Models Manager method and have the Model call the new Manager method instead.\r\n4. Check all the tests still work.\r\n\r\nAll existing methods will continue to function as they do now to preserve BC. We can then consider removing them in version 5 whenever that may be. I'm expecting that, with this way, any BC-breaking work will be kept to a minimum when we start working on v5. Changes to interfaces will obviously have to wait until v5.\r\n\r\nI'm planning to keep the method names the same as they are now but I'm open to comments.",
    "head_branch": "data-mapper",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621299718912b45d36a3138",
    "number": 14166,
    "body": "There's another PR open for this but the build fails, and I want to see it pass before I move on ...\r\n\r\n",
    "head_branch": "fix-14160",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621299818912b45d36a3139",
    "number": 14165,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [-] I have updated the relevant CHANGELOG\r\n- [-] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "tests-model-binding",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Tidied up Model Binding tests."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621299a18912b45d36a313a",
    "number": 14164,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [-] I have updated the relevant CHANGELOG\r\n- [-] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nI've purposely left the Annotations classes and the Tasks as some of them require no namespace.",
    "head_branch": "tests-namespaces",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added namespaces to some test fixtures."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621299b18912b45d36a313b",
    "number": 14163,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [-] I have updated the relevant CHANGELOG\r\n- [-] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "test-shim-definefromenv",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added `defineFromEnv()` function to test shim."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621299c18912b45d36a313c",
    "number": 14162,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [-] I have updated the relevant CHANGELOG\r\n- [-] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "route-uniqueid",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Route::uniqueId now has a proper initial value."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621299d18912b45d36a313d",
    "number": 14161,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [-] I have updated the relevant CHANGELOG\r\n- [-] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nhttps://www.php.net/manual/en/function.array-flip.php",
    "head_branch": "route-array-flip",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Route::getReversedPaths() now uses `array_flip()`."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621299e18912b45d36a313e",
    "number": 14159,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Removed dollar sign"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621299f18912b45d36a313f",
    "number": 14158,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/14087\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "bugfix/router-notfound",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "updated CHANGELOG-4.0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662129a018912b45d36a3140",
    "number": 14157,
    "body": "",
    "head_branch": "appveyor/clean-before-generate",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662129a318912b45d36a3141",
    "number": 14156,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.4.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662129a418912b45d36a3142",
    "number": 14155,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [-] I have updated the relevant CHANGELOG\r\n- [-] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "session-bag-constructor",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Removed redundant 'if' statement from View."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662129a518912b45d36a3143",
    "number": 14154,
    "body": "Hello!\r\n\r\n* Type: new feature/code quality\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/11789\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "tests-refactoring",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Corrected test and interface"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662129a618912b45d36a3144",
    "number": 14153,
    "body": "Hello!\r\n\r\n* Type: tests | code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [-] I have updated the relevant CHANGELOG\r\n- [-] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nRemoved a lot of cests for abstract classes that are extended by others and therefore already tested. Also combined a number of cests together (eg. GetDiCest and SetDiCest).",
    "head_branch": "tests-june2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Tidied up and added more tests."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662129a718912b45d36a3145",
    "number": 14152,
    "body": "Trying to call method gethost on a non-object\r\nStack trace:\r\n#0 [internal function]: Phalcon\\Http\\Message\\ServerRequest->processHeaders(Array)\r\n#1 xxx: Phalcon\\Http\\Message\\ServerRequest->__construct('GET', Object(Phalcon\\Http\\Message\\Uri), Array, '', Array, Array, Array, Array, Array, '1.1')",
    "head_branch": "feature/14151",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "style: Static code analysis error"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662129a818912b45d36a3146",
    "number": 14149,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [-] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "cli-filter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "`Phalcon\\Di\\FactoryDefault\\Cli` can now use the new Filter system."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662129a918912b45d36a3147",
    "number": 14148,
    "body": "Hello!\r\n\r\n* Type: tests | code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [-] I have updated the relevant CHANGELOG\r\n- [-] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "tests-june1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Tidied up tests."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662129ab18912b45d36a3148",
    "number": 14147,
    "body": "• Type: Change • Link to issue: none  In raising this pull request, I confirm the following (please check boxes): • [X] I have read and understood the Contributing Guidelines? • [X] I have checked that another pull request for this purpose does not exist. • [ ] I wrote some tests for this PR.  Small description of change: ",
    "head_branch": "4.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662129ac18912b45d36a3149",
    "number": 14146,
    "body": "Hello!\r\n\r\n* Type: tests | code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [-] I have updated the relevant CHANGELOG\r\n- [-] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "tests-may30",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Tidied up tests."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662129ad18912b45d36a314a",
    "number": 14145,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [-] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "criteria-limit-offset",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Mvc\\Model\\Criteria::limit() now corrects negative offsets."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662129ae18912b45d36a314b",
    "number": 14143,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [-] I have updated the relevant CHANGELOG\r\n- [-] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nAdded data providers to a lot of the tests to reduce the amount of repeated code. A lot of these tests don't need to be tested with local and remote assets but I've left the tests in anyways.\r\n\r\n",
    "head_branch": "assets-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Tidied up Assets tests."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662129af18912b45d36a314c",
    "number": 14142,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix/unused-var",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fixed unused var from Identical validator"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662129b018912b45d36a314d",
    "number": 14141,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [-] I have updated the relevant CHANGELOG\r\n- [-] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change",
    "head_branch": "random-tidy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Tidied up random methods."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662129b118912b45d36a314e",
    "number": 14140,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14139 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nFixed the issue adding limit\r\nAdded tests\r\nUpdated CHANGELOG\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14139-image-pixelate",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Updated CHANGELOG"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662129b218912b45d36a314f",
    "number": 14138,
    "body": "Hello!\r\n\r\n* Type: tests\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [-] I have updated the relevant CHANGELOG\r\n- [-] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "cli-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Tidied up CLI tests."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662129b318912b45d36a3150",
    "number": 14137,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [-] I have updated the relevant CHANGELOG\r\n- [-] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "micro-handler-dry",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Simplified `if` statement."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662129b418912b45d36a3151",
    "number": 14136,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [-] I have updated the relevant CHANGELOG\r\n- [-] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nThe `offset` and `(get|set)Service` methods create a Factory Default DI if none is given. Should this behaviour extend to `handle()` which will throw an Exception if no DI is previously set? See [line 336](https://github.com/SidRoberts/cphalcon/blob/30e5b475959943c973a9790941f8ad3fccb82e31/phalcon/Mvc/Micro.zep#L336).",
    "head_branch": "micro-container",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662129b518912b45d36a3152",
    "number": 14135,
    "body": "Hello!\r\n\r\n* Type: tests\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [-] I have updated the relevant CHANGELOG\r\n- [-] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "flash-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Removed error suppressors."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662129b718912b45d36a3153",
    "number": 14134,
    "body": "Hello!\r\n\r\n* Type: tests\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [-] I have updated the relevant CHANGELOG\r\n- [-] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "validator-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Tidied up Identical Validator."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662129b818912b45d36a3154",
    "number": 14133,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [-] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "paginator-repository",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Paginator\\Repository::getProperty() now uses Helper\\Arr::get()."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662129b918912b45d36a3155",
    "number": 14132,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [-] I have updated the relevant CHANGELOG\r\n- [-] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "model-metadata",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Cleaned up Mvc\\Model\\Metadata::metadata."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662129ba18912b45d36a3156",
    "number": 14131,
    "body": "Hello!\r\n\r\n* Type: tests\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [-] I have updated the relevant CHANGELOG\r\n- [-] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "tests-may26-paginator",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Moved around Paginator tests."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662129bb18912b45d36a3157",
    "number": 14130,
    "body": "Hello!\r\n\r\n* Type: tests\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [-] I have updated the relevant CHANGELOG\r\n- [-] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "tests-may26",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added Db\\Dialect\\Sqlite::modifyColumn() test."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662129bc18912b45d36a3158",
    "number": 14129,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [-] I have updated the relevant CHANGELOG\r\n- [-] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "db-dialect-mysql-gettableoptions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Tidied up Db\\Dialect\\Mysql::getTableOptions()."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662129bd18912b45d36a3159",
    "number": 14128,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue: #13655 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nI made some tests for GD image adapter\r\nThanks\r\n\r\n",
    "head_branch": "T13655-image-gd-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Removed PNG crops"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662129be18912b45d36a315a",
    "number": 14125,
    "body": "Hello!\r\n\r\n* Type: tests\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [-] I have updated the relevant CHANGELOG\r\n- [-] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nI also had to fix `Db\\Dialect\\Postgresql::truncateTable()` as it previously didn't escape table names.\r\n",
    "head_branch": "tests-may25",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Moved and added more Db\\Dialect tests."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662129bf18912b45d36a315b",
    "number": 14124,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #14123 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nAdded `Phalcon\\Http\\Payload` to help in transferring messages between layers of the application. \r\nAdded `Phalcon\\Http\\PayloadFactory`: Factory to create payload objects.\r\n\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T13123-http-payload",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Removed files for appveyor"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662129c018912b45d36a315c",
    "number": 14122,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nIt's a simple change to generate `unit` or `integration` tests passing a simple parameter from CLI\r\n`php generate-test-stup.php` works like always. Even you can use `unit` or `u`\r\n`php generate-test-stup.php i` generate integration tests. Even you can use `integration`\r\nThanks\r\n\r\n",
    "head_branch": "generate-integration-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Generate integration tests using command parameters"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662129c118912b45d36a315d",
    "number": 14120,
    "body": "Hello!\r\n\r\nType: new feature\r\nLink to issue: #13394\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nAdded SASL Auth support for Libmemecached\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T13394-libmemcached-sasl",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added sasl authentication"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662129c218912b45d36a315e",
    "number": 14119,
    "body": "Hello!\r\n\r\n* Type: update\r\n* Link to issue:  #14118 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\nChanged PSR version from v0.6.0 to v0.6.1\r\nThanks\r\n\r\n",
    "head_branch": "T14118-update-psr-0-6-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14119 from emiliodeg/T14118-update-psr-0-6-1\n\nUpdate PSR v0.6.1 #14118"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662129c318912b45d36a315f",
    "number": 14117,
    "body": "Hello!\r\n\r\n* Type: tests\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x]  I wrote some tests for this PR\r\n- [-] I have updated the relevant CHANGELOG\r\n- [-] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "tests-may23",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added tests for Forms."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662129c418912b45d36a3160",
    "number": 14116,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [-] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "micro-handlers",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Micro\\\\Collection::handlers is always an array."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662129c618912b45d36a3161",
    "number": 14115,
    "body": "Hello!\r\n\r\n* Type: bug fix and code quality\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/11504\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nIn `Phalcon\\Mvc\\Model\\Manager::getRelationRecords()` function, `$method` parameter is not always `string`. (most of the time it's `null`)\r\nIt's optional and rarely ever used so I think it should be the last parameter. (This **Breaks BC**)\r\n\r\nSame applies to:\r\n - `Phalcon\\Mvc\\Model\\Manager::getBelongsToRecords()`\r\n - `Phalcon\\Mvc\\Model\\Manager::getHasOneRecords()`\r\n - `Phalcon\\Mvc\\Model\\Manager::getHasManyRecords()`\r\n\r\nModified the interfaces and usage everywhere accordingly.\r\n\r\nMade some minor changes inside `Phalcon\\Mvc\\Model\\Manager::getRelationRecords()`.\r\nAdded tests for `Phalcon\\Mvc\\Model\\Manager::getRelationRecords()`, also for issue: https://github.com/phalcon/cphalcon/issues/11504\r\n\r\nThanks,\r\nzsilbi\r\n\r\n",
    "head_branch": "models-manager-functions-parameters",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Updated Model\\Manager relations getter functions (#14115)\n\n* Manager::getRelationRecords() method is not always string\r\nMoved parameter to be the last, it's rarely every used\r\nModified ManagerInterface accordingly\r\n\r\n* Modified Manager::getRelationRecords() calls everywhere\r\n\r\n* Changed parameters order in:\r\n - Manager::getBelongsToRecords()\r\n - Manager::getHasOneRecords()\r\n - Manager::getHasManyRecords()\r\nand in ManagerInterface accordingly\r\n\r\n* Added new relation to the test model: AlbumORama\\Albums to test\r\nmulti field relations.\r\n\r\n* Created test for Model\\Manager::getRelationRecords()\r\n\r\n* Modified tests to use the new parameter order\r\n\r\n* Updated changelog\r\n\r\n* Updated PR id in changelog"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662129c718912b45d36a3162",
    "number": 14113,
    "body": "Hello!\r\n\r\n* Type: tests\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [-] I have updated the relevant CHANGELOG\r\n- [-] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "tests-may22",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added more tests."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662129c818912b45d36a3163",
    "number": 14112,
    "body": "Hello!\r\n\r\n* Type: bug fix, new feature \r\n* Link to issue: #13433 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\n Fixed `Phalcon\\Mvc\\Model\\MetaData::write()` to throw an exception if `orm.exception_on_failed_metadata_save` is set to true. \r\n\r\nThanks\r\n\r\n",
    "head_branch": "T13433-metadata-cache-exception-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Updated phalcon.ini"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662129c918912b45d36a3164",
    "number": 14111,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [-] I have updated the relevant CHANGELOG\r\n- [-] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "tests-may21",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Tidied up tests. (#14111)\n\n* Tidied up tests.\r\n\r\n* Tidied up tests. 2"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662129ca18912b45d36a3165",
    "number": 14109,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [-] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "abstract-plugin",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Phalcon\\Plugin is now abstract. (#14109)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662129cb18912b45d36a3166",
    "number": 14108,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #13433 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\Mvc\\Model\\MetaData::write()` to throw an exception if `orm.exception_on_failed_metadata_save` is set to true.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T13433-metadata-cache-exception",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662129cc18912b45d36a3167",
    "number": 14107,
    "body": "Changelog and ext update",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Removed renamed file"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662129cd18912b45d36a3168",
    "number": 14106,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14100 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nFixed `Phalcon\\Cache\\Adapter\\Libmemcached` failing to set values when `Phalcon\\Mvc\\Model\\MetaData\\Libmemcached` was in use by setting a different default `persistentId` for the `MetaData` adapter.\r\nSet default option for `prefix` and `lifetime` overridable. \r\n\r\nThanks,\r\nzsilbi\r\n",
    "head_branch": "T14100-libmemcached-set",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Libmemcached adapters to use different persistentId by default (#14106)\n\n* Set default option for \"prefix\" and \"lifetime\" overridable.\r\nAdded \"persistentId\" option with a different default value.\r\n\r\n* Missing alias\r\n\r\n* Changelog\r\n\r\n* Code style"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662129ce18912b45d36a3169",
    "number": 14105,
    "body": "Triggering the build",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662129d018912b45d36a316a",
    "number": 14104,
    "body": "Updating ext",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Updating ext/"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662129d118912b45d36a316b",
    "number": 14103,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #14102 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\Db\\Column` to recognize `tinyint`, `smallint`, `mediumint` as valid autoIncrement columns. \r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14102-int-autoincrement",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Updated the changelog"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662129d218912b45d36a316c",
    "number": 14099,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nFixed some typos in comments\r\n\r\nThanks,\r\nzsilbi",
    "head_branch": "minor-typo-fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Updated comments, fixed typos"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662129d318912b45d36a316d",
    "number": 14098,
    "body": "Hello!\r\n\r\n* Type: enhancement\r\n* Link to issue: #14095 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nFixed `Phalcon\\Mvc\\View::getRender()` to call `view->finish()` instead of `ob_end_clean()`\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14095-view-inconsistency",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Correction to the changelog"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662129d418912b45d36a316e",
    "number": 14097,
    "body": "Hello!\r\n\r\n* Type: bug fix/new feature\r\n* Link to issue: #13672 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I have updated the relevant CHANGELOG\r\n- [ ] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\n## Added\r\n- Added `Phalcon\\Factory\\Exception` for factory exceptions.\r\n- Added `Phalcon\\Filter\\FilterInterface` for custom filter implementations. \r\n- Added `Phalcon\\Db\\Adapter\\PdoFactory`: Factory to create PDO adapters. \r\n- Added `Phalcon\\Image\\ImageFactory`: Factory to create image adapters.\r\n- Added `Phalcon\\Image\\LoggerFactory`: Factory to create logger objects.\r\n- Added `Phalcon\\Translate\\InterpolatorFactory`: Factory to create interpolator objects. \r\n- Added `Phalcon\\Translate\\TranslateFactory`: Factory to create translate objects. \r\n\r\n## Changed\r\n- Renamed `Phalcon\\Annotations\\Adapter\\Files` to `Phalcon\\Annotations\\Adapter\\Stream`. \r\n- Renamed `Phalcon\\Annotations\\Adapter` to `Phalcon\\Annotations\\Adapter\\AbstractAdapter`. \r\n- Renamed `Phalcon\\Annotations\\AdapterInterface` to `Phalcon\\Annotations\\Adapter\\AdapterInterface`. [#13672](https://github.com/phalcon/cphalcon/issues/13672)\r\n- Renamed `Phalcon\\Annotations\\Factory` to `Phalcon\\Annotations\\AnnotationsFactory`.\r\n- Renamed `Phalcon\\Config\\Factory` to `Phalcon\\Config\\ConfigFactory`. \r\n- Renamed `Phalcon\\Filter\\FilterLocator` to `Phalcon\\Filter\\Filter`. \r\n- Renamed `Phalcon\\Filter\\FilterLocatorFactory` to `Phalcon\\Filter\\FilterFactory`. \r\n- Renamed `Phalcon\\Image\\Adapter` to `Phalcon\\Image\\Adapter\\AbstractAdapter`. \r\n- Renamed `Phalcon\\Image\\AdapterInterface` to `Phalcon\\Image\\Adapter\\AdapterInterface`.\r\n- Renamed `Phalcon\\Paginator\\Adapter` to `Phalcon\\Paginator\\Adapter\\AbstractAdapter`. \r\n- Renamed `Phalcon\\Paginator\\AdapterInterface` to `Phalcon\\Paginator\\Adapter\\AdapterInterface`. \r\n- Renamed `Phalcon\\Paginator\\Factory` to `Phalcon\\Paginator\\PaginatorFactory`. \r\n\r\n## Removed\r\n- Removed `Phalcon\\Session\\Factory`. \r\n- Removed `Phalcon\\Factory` and `Phalcon\\FactoryInterface`. \r\n\r\nThanks\r\n\r\n",
    "head_branch": "T13672-factories",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Minor fixes based on review"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662129d518912b45d36a316f",
    "number": 14096,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [-] I have updated the relevant CHANGELOG\r\n- [-] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "tests-may20",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Tidied up tests."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662129d718912b45d36a3170",
    "number": 14094,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [-] I have updated the relevant CHANGELOG\r\n- [-] I have created a PR for the [documentation](https://github.com/phalcon/docs) about this change\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "tests-may19",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Tidied up tests."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662129d818912b45d36a3171",
    "number": 14093,
    "body": "Bumping the version ",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Bumping the version"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662129de18912b45d36a3172",
    "number": 14092,
    "body": "",
    "head_branch": "4.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14092 from phalcon/4.0.x\n\n4.0.0-alpha.5"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662129df18912b45d36a3173",
    "number": 14090,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/pull/14069\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I updated the CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nAdded memcached prototype to use at AppVeyor CI.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "feature/appveyor-install-memcached",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662129e018912b45d36a3174",
    "number": 14089,
    "body": "Hello!\r\n\r\n* Type: enhancement\r\n* Link to issue: #14044 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I updated the CHANGELOG\r\n\r\n Changed `Phalcon\\Mvc\\Model::findFirst()` now returns `null`. `Phalcon\\Mvc\\Model::getRelated()` for one to one relationships returns `null` \r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14044-model-findfirst-null",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixed the findFirstBy*"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662129e118912b45d36a3175",
    "number": 14088,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/13781\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I updated the CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nChanged `Phalcon\\Mvc\\Model` to copy the unset default values from the `MetaData` to the `Model` after a successful insert. \r\nFixed `Phalcon\\Mvc\\Model::save()` failing after a successful insert when default database fields are not updated.\r\nWrote test for this case.\r\nWrote test for `Model::hasChanged()`\r\n\r\nThanks,\r\nzsilbi\r\n\r\n",
    "head_branch": "T13781-model-default-values",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Code style"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662129e218912b45d36a3176",
    "number": 14086,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #10839 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I updated the CHANGELOG\r\n\r\nModels manager `getRelations()` now returns the many to many relationships\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T10839-many-to-many-relationships",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "T10839 many to many relationships (#14086)\n\n* Added has many to many in getRelationships\r\n\r\n* Updated the changelog\r\n\r\n* Fixed the changelog\r\n\r\n* Fixed method call"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662129e318912b45d36a3177",
    "number": 14085,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #13843 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I updated the CHANGELOG\r\n\r\nFixed the way numericality calculates numbers for different locales\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T13843-numericality",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Made minus optional and removed obsolete test"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662129e518912b45d36a3178",
    "number": 14084,
    "body": "Hello!\r\n\r\n* Type: code quality | tests\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [-] I updated the CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "tests-may16",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added tests for Flash\\Direct."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662129e618912b45d36a3179",
    "number": 14083,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #13149 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I updated the CHANGELOG\r\n\r\nFixed `Phalcon\\Validation::validate()` with `cancelOnFail`. The validator will validate all elements and will stop processing validators on a per element basis if `cancelOnFail` is present.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T13149-cancel-on-fail",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[#13149] - Updated changelog"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662129e718912b45d36a317a",
    "number": 14082,
    "body": "Added Attributes into Forms\r\nAdded tests\r\n\r\nHello!\r\n\r\n* Type: new feature\r\n* Link to issue: #13646 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I updated the CHANGELOG\r\n\r\nSmall description of change:\r\nI created a new interface for HTML Attributes and I implemented in Form\r\nI replaced the action property insteand of attributes\r\nI writed tests\r\nThanks\r\n",
    "head_branch": "T13646-form-attributes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added Attributes collection class\nAdded Attributes in Forms\nAdded tests"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662129e818912b45d36a317b",
    "number": 14081,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [-] I updated the CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "module-path-exception",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixed and reenabled a CLI test."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662129e918912b45d36a317c",
    "number": 14079,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #13869 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I updated the CHANGELOG\r\n\r\n- Changed `Phalcon\\Crypt` to accept auth tag, tag length and data for \"gcm\" and \"ccm\" modes. Removed insecure algorithms with modes: `des*`, `rc2*`, `rc4*`, `des*`, `*ecb` \r\n\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T13869-crypt-aes-256-gcm",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "T13869 crypt aes 256 gcm (#14079)\n\n* [#13869] - Added auth data and removed insecure algos\r\n\r\n* [#13869] - Adjustments to the interface\r\n\r\n* [#13869] - Adjustments to tests and new tests\r\n\r\n* [#13869] - Updated the changelog"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662129ea18912b45d36a317d",
    "number": 14078,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #13648 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I updated the CHANGELOG\r\n\r\nthis pr is adding Firewall component, way to protect routes against unauthorized roles to access certain routes. It's done using listener on dispatcher/micro on beforeExecute/afterBinding event.\r\n\r\nIn dispatcher you can either use Annotations or Acl based firewall. In micro there is only Acl based firewall.\r\n\r\nWould appreciate any comments etc.\r\n\r\nThis PR is commits/changes from other PRs etc stuff so don't bother them, i will rebase everything if all will be merged.\r\nThanks\r\n\r\nRelated:\r\n#11389\r\n#582\r\n\r\nBased on work from @Jurigag https://github.com/phalcon/cphalcon/pull/12561\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T13648-firewall",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[#13648] - Skipping a test"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662129eb18912b45d36a317e",
    "number": 14077,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I updated the CHANGELOG\r\n\r\nPreviously, paths that were bad didn't matter if the class was already loaded. We can't assume that the class will already have been loaded or will be available by the regular loader.\r\n\r\n",
    "head_branch": "module-path-exception",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Loading a Module (either MVC or CLI) now throws an exception if the path does not exists regardless of whether the class is already loaded."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662129ec18912b45d36a317f",
    "number": 14076,
    "body": "Hello!\r\n\r\n* Type: new feature | code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [x] I updated the CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "model-refactor",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Removed unused variables."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662129ed18912b45d36a3180",
    "number": 14075,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [-] I updated the CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "long-lines",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Shortened long lines."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662129ee18912b45d36a3181",
    "number": 14074,
    "body": "Fixing build",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[4.0.x] - PHPCS"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662129ef18912b45d36a3182",
    "number": 14073,
    "body": "Implemented in Form\r\nChanged CHANGELOG\r\nAdded tests\r\n\r\nHello!\r\n\r\nType: new feature\r\nLink to issue: #13646\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I updated the CHANGELOG\r\n\r\nSmall description of change:\r\nI created a new interface for HTML Attributes and I implemented in Form\r\nI replaced the action property insteand of attributes\r\nI writed tests\r\nThanks\r\n\r\n",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662129f018912b45d36a3183",
    "number": 14072,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [-] I updated the CHANGELOG\r\n\r\nThis should _hopefully_ be the last of the BIG housekeeping PRs.\r\n\r\nI've included [php-cs-fixer](https://github.com/FriendsOfPHP/PHP-CS-Fixer) as a dev dependency in Composer and added a config file so that anybody can keep the tests folder nice and tidy. The rules I've added are by no means complete - it's just a bunch that we seem to be following anyway and a few that remove text in comments that add no information. I'm open to suggestions for removal of some of the rules or additions of new ones. As some of the rules are considered \"risky\", you'll need to run the command as such:\r\n\r\n```bash\r\nvendor/bin/php-cs-fixer fix --allow-risky=yes\r\n```\r\n\r\n@niden, I went through all of your branches in your private repo and painstakingly tried to rebase this branch on top of them. I've removed any files that would have caused rebasing issues so you should be able to merge this and your branches cleanly. :wink: \r\n",
    "head_branch": "tests-may14",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Tidied up tests."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662129f218912b45d36a3184",
    "number": 14071,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [x] I updated the CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "forms-deprecated",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Removed deprecated code from Forms\\Form::getMessages()."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662129f318912b45d36a3185",
    "number": 14070,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [-] I updated the CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "transaction-manager",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "'transactions' property in Transaction Manager is always an array."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662129f418912b45d36a3186",
    "number": 14069,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #13394 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I updated the CHANGELOG\r\n\r\nAdded SASL Auth support for Libmemecached\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T13394-libmemcached-sasl",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662129f518912b45d36a3187",
    "number": 14068,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature\r\n* Link to issue: #13002 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I updated the CHANGELOG\r\n\r\nAdded `orm.cast_last_insert_id_to_int` option for `Phalcon\\Mvc\\Model::setup()` (`castLastInsertIdToInt`) to cast the `lastInsertId` on `save()` to `int`\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T13002-last-insert-id",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[#13002] - Updated phalcon.ini for tests and packages"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662129f618912b45d36a3188",
    "number": 14067,
    "body": "Hello!\r\n\r\n* Type: feature | code quality\r\n* Link to issue: -\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I updated the CHANGELOG\r\n\r\nSmall description of change:\r\n- Update Zephir & Zephir Parser\r\n- Minor provision cleaning up \r\n\r\nThanks\r\n\r\n",
    "head_branch": "feature/update-zephir",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662129f718912b45d36a3189",
    "number": 14066,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: -\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I updated the CHANGELOG\r\n\r\nSmall description of change: \r\n- Install redis extension on AppVeyor\r\n- Regenerate ext\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix/appveyor-redis-ext",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14066 from phalcon/fix/appveyor-redis-ext\n\nInstall redis extension on AppVeyor"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662129f818912b45d36a318a",
    "number": 14065,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [x] I updated the CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "query-builder-bind",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Bind parameters and bind types are now always treated as arrays in Mvc\\Model\\Query. (#14065)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662129f918912b45d36a318b",
    "number": 14064,
    "body": "…ilder.\r\n\r\nHello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [x] I updated the CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "query-builder-offset",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Simplified Model\\Criteria::limit(). 0 offsets are ignored in Query Builder. (#14064)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662129fa18912b45d36a318c",
    "number": 14063,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [-] I updated the CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "view-getsetvar",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Simplified View::{get,set}Var()."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662129fb18912b45d36a318d",
    "number": 14062,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [-] I updated the CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "variable-types-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added more variable types."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662129fc18912b45d36a318e",
    "number": 14061,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [x] I updated the CHANGELOG\r\n\r\nMost of these changes are unnoticeable to developers. The three exceptions are `Phalcon\\Mvc\\Model\\Transaction`, `Phalcon\\Logger\\Formatter\\Json`, `Phalcon\\Logger\\Formatter\\Line` whose constructors now require actual arguments or a complete omission - no more `null` passing.\r\n\r\n",
    "head_branch": "property-assignment",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Simplified property assignments."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662129fd18912b45d36a318f",
    "number": 14059,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #13387 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I updated the CHANGELOG\r\n\r\nAdded setting `orm.resultset_prefetch_records` instructing the ORM (resultset) to prefetch the rows if the rows returned are less or equal to the setting. Changed `Phalcon\\Mvc\\Model\\Query` to not call `numRows` when selecting data\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T13387-improve-memory-consumption",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge branch '4.0.x' into T13387-improve-memory-consumption"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662129fe18912b45d36a3190",
    "number": 14058,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #13825 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I updated the CHANGELOG\r\n\r\nAdded `Phalcon\\Mvc\\View::toString()` to return the rendered view as a string\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T13825-view-tostring",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[#13825] - Updated the changelog"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662129ff18912b45d36a3191",
    "number": 14057,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #13548 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I updated the CHANGELOG\r\n\r\nChanged `Phalcon\\Validation\\Validator\\Url` to work with `options` in passed options. (`FILTER_FLAG_PATH_REQUIRED`, `FILTER_FLAG_QUERY_REQUIRED`)\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T13548-validator-url",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[#13548] - Updated changelog"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212a0118912b45d36a3192",
    "number": 14056,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #639\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I updated the CHANGELOG\r\n\r\nRebased PR https://github.com/phalcon/cphalcon/pull/12591 from @Jurigag \r\n\r\nThanks\r\n\r\n",
    "head_branch": "T12591-assets-versioning",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[#12591] - Updated changelog"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212a0218912b45d36a3193",
    "number": 14055,
    "body": "Hello!\r\n\r\n* Type: Updating ext\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I updated the CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[4.0.x] - Updating ext"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a0318912b45d36a3194",
    "number": 14054,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [-] I updated the CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "tests-may9",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Tidied up tests."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a0418912b45d36a3195",
    "number": 14053,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #13949 #13324 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I updated the CHANGELOG\r\n\r\nMade rollback not throw an exeption by default. Added `throwRollbackException` on the Transaction object.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T13949-rollback-transaction-exception",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[#13949] - Corrected test"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212a0518912b45d36a3196",
    "number": 14052,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #14039 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I updated the CHANGELOG\r\n\r\nUpdated Html\\Tag `prependTitle` and `appendTitle` to be the same as the ones in `Phalcon\\Tag`\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T14039-tag-html-tag",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[#14039] - Updated the changelog"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212a0718912b45d36a3197",
    "number": 14051,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #13439 #13672 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I updated the CHANGELOG\r\n\r\n---\r\n\r\n- Added `Phalcon\\Cache\\Cache` class implementing PSR-16. Introducing:\r\n    - `Phalcon\\Cache\\Adapter`\r\n        - `Phalcon\\Cache\\Adapter\\Apcu`\r\n        - `Phalcon\\Cache\\Adapter\\Libmemcached`\r\n        - `Phalcon\\Cache\\Adapter\\Memory`\r\n        - `Phalcon\\Cache\\Adapter\\Redis`\r\n        - `Phalcon\\Cache\\Adapter\\Stream`\r\n    - `Phalcon\\Cache\\AdapterFactory`: Factory to create adapters\r\n    - `Phalcon\\Cache\\CacheFactory`: Factory to create cache objects\r\n\r\n- Changed `Phalcon\\Cache` namespace and relevant classes to handle storing data to different stores. Introducing:\r\n    - `Phalcon\\Storage\\Serializer` offering classes that implement the `\\Serializable` interface.\r\n        - `Phalcon\\Storage\\Serializer\\Base64`\r\n        - `Phalcon\\Storage\\Serializer\\Igbinary`\r\n        - `Phalcon\\Storage\\Serializer\\Json`\r\n        - `Phalcon\\Storage\\Serializer\\Msgpack`\r\n        - `Phalcon\\Storage\\Serializer\\None`\r\n        - `Phalcon\\Storage\\Serializer\\Php`\r\n        - `Phalcon\\Storage\\Serializer\\SerializerInterface`\r\n    - `Phalcon\\Storage\\SerializerFactory`: Factory to create serializers\r\n    - `Phalcon\\Storage\\Adapter` offering classes that implement the `Phalcon\\Storage\\Adapter\\AdapterInterface` interface.\r\n        - `Phalcon\\Storage\\Adapter\\Apcu`\r\n        - `Phalcon\\Storage\\Adapter\\Libmemcached`\r\n        - `Phalcon\\Storage\\Adapter\\Memory`\r\n        - `Phalcon\\Storage\\Adapter\\Redis`\r\n        - `Phalcon\\Storage\\Adapter\\Stream`\r\n    - `Phalcon\\Storage\\AdapterFactory`: Factory to create adapters\r\n\r\n- Removed\r\n    - Caching from the view (simple/view)\r\n        - `Phalcon\\Mvc\\View::cache()`\r\n        - `Phalcon\\Mvc\\View::getCache()`\r\n        - `Phalcon\\Mvc\\View\\Simple::cache()`\r\n        - `Phalcon\\Mvc\\View\\Simple::getCache()`\r\n    - Multiple Cache Adapter\r\n        - `Phalcon\\Cache\\Multiple`\r\n    - Old cache classes\r\n        - `Phalcon\\Cache\\Backend`\r\n        - `Phalcon\\Cache\\BackendInterface`\r\n        - `Phalcon\\Cache\\Backend\\Apcu`\r\n        - `Phalcon\\Cache\\Backend\\Factory`\r\n        - `Phalcon\\Cache\\Backend\\File`\r\n        - `Phalcon\\Cache\\Backend\\Libmemcached`\r\n        - `Phalcon\\Cache\\Backend\\Memory`\r\n        - `Phalcon\\Cache\\Backend\\Mongo`\r\n        - `Phalcon\\Cache\\Backend\\Redis`\r\n        - `Phalcon\\Cache\\Frontend`\r\n        - `Phalcon\\Cache\\FrontendInterface`\r\n        - `Phalcon\\Cache\\Frontend\\Base64`\r\n        - `Phalcon\\Cache\\Frontend\\Data`\r\n        - `Phalcon\\Cache\\Frontend\\Factory`\r\n        - `Phalcon\\Cache\\Frontend\\Igbinary`\r\n        - `Phalcon\\Cache\\Frontend\\Json`\r\n        - `Phalcon\\Cache\\Frontend\\Msgpack`\r\n        - `Phalcon\\Cache\\Frontend\\None`\r\n        - `Phalcon\\Cache\\Frontend\\Output`\r\n\r\n- Added `Str::dirSeparator()` to ensure a path has a trailing slash (not really related to this issue but needed the functionality)\r\n\r\n",
    "head_branch": "T13439-PSR-16-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[#13439] - Fixed variable name"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212a0818912b45d36a3198",
    "number": 14050,
    "body": "Hello!\r\n\r\n* Type: tests\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I updated the CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "response-headers",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Tests for Http\\Response\\Headers"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a0918912b45d36a3199",
    "number": 14045,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [-] I updated the CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "view-compile",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Refactored Volt Compiler ::compile()."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a0a18912b45d36a319a",
    "number": 14043,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [-] I updated the CHANGELOG\r\n\r\nRemoved a chunk of duplicated code.\r\n",
    "head_branch": "events-manager-firequeue",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Refactored various methods in Events\\Manager."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212a0b18912b45d36a319b",
    "number": 14041,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [-] I updated the CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "typeof-null",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Null checking is now done without 'typeof'."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a0c18912b45d36a319c",
    "number": 14040,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [-] I updated the CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "tests-may4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Tidied up tests (part 3)."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a0e18912b45d36a319d",
    "number": 14038,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [-] I updated the CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "unlikely",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14038 from SidRoberts/unlikely\n\nAdded 'unlikely' keyword to exception throwing if statements."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a0f18912b45d36a319e",
    "number": 14035,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issues: https://github.com/phalcon/cphalcon/issues/13531, https://github.com/phalcon/cphalcon/pull/13616, https://github.com/phalcon/cphalcon/issues/13964, https://github.com/phalcon/cphalcon/issues/14021\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I updated the CHANGELOG\r\n\r\nAdded new related storages\r\nModified __set(), __get(), getRelated() to use these related storages\r\nModified save() to use these related storages with transaction handling\r\nModified _getRelatedRecords() to use getRelated() when possible\r\nReusable relations are cached and returned from the Model directly\r\nNon-reusable relations are not cached\r\nFixed __set() to handle arrays correctly\r\n\r\nAdded tests for Mvc\\Model::save()\r\nAdded tests for Mvc\\Model::__set()\r\nAdded tests for Mvc\\Model::writeAttribute()\r\nMore tests needed...\r\n\r\nThanks,\r\nzsilbi\r\n\r\n",
    "head_branch": "model-relation-storage-with-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Changelog updated"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212a1018912b45d36a319f",
    "number": 14034,
    "body": "Hello!\r\n\r\n* Type: deprecation\r\n* Link to issue: https://github.com/phalcon/cphalcon/pull/13656\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [ ] I updated the CHANGELOG\r\n\r\nLet's see how many tests we can break. :wink:\r\n",
    "head_branch": "new-tag",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212a1118912b45d36a31a0",
    "number": 14033,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I updated the CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "feature/http_status_codes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212a1218912b45d36a31a1",
    "number": 14032,
    "body": "As requested in phalcon/phalcon-devtools#1301 the build changes that are now part of 4.0.x\r\n",
    "head_branch": "3.4.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Updated CFLAG default build param (#14032)\n\n* Updated CFLAG default build param\r\n\r\n* Beautify documentation for gcc's compilation flags\r\n\r\n* Updated changelog\r\n\r\n* Update chage log [ci skip]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212a1318912b45d36a31a2",
    "number": 14031,
    "body": "Hello!\r\n\r\n* Type: documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I updated the CHANGELOG\r\n\r\nThanks\r\n\r\n",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14031 from Jeckerson/4.0.x\n\nFixed PHPDoc code example in session/adapter/files"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212a1418912b45d36a31a3",
    "number": 14030,
    "body": "Hello!\r\n\r\n* Type: documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I updated the CHANGELOG\r\n\r\nThanks\r\n\r\n",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212a1518912b45d36a31a4",
    "number": 14029,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [-] I updated the CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nRemoved the class PHPDocs as they don't actually provide any information. Also remove `@param` PHPDocs as they are redundant and also don't provide any information.\r\n\r\nI've also started moving tests around into their correct Cests.\r\n\r\nCodeception now lints all tests files first to make finding syntax errors a bit easier.",
    "head_branch": "tests-may",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14029 from SidRoberts/tests-may\n\nTidied up tests (part 2)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a1618912b45d36a31a5",
    "number": 14028,
    "body": "Hello!\r\n\r\n* Type: removal of feature\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [x] I updated the CHANGELOG\r\n\r\nI'm quite happy to close this PR but I think we should remove namespace aliases in favor of FQDNs (like `Albums::class`):\r\n\r\n```php\r\n\r\nnamespace Phalcon\\Test\\Models\\AlbumORama;\r\n\r\nuse Phalcon\\Mvc\\Model;\r\n\r\nclass Artists extends Model\r\n{\r\n    public function initialize()\r\n    {\r\n        $this->hasMany(\r\n            'id',\r\n            Albums::class, // previously something like 'AlbumORama:Albums'\r\n            'artists_id',\r\n            [\r\n                'alias' => 'albums',\r\n            ]\r\n        );\r\n    }\r\n}\r\n```\r\n",
    "head_branch": "remove-model-namespace-alias",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Removed model namespace aliases."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a1718912b45d36a31a6",
    "number": 14027,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [-] I updated the CHANGELOG\r\n\r\n**Quick question:** Why would anyone want to [update multiple fields with the same timestamp](https://github.com/phalcon/cphalcon/blob/7f50ded52209a25ab1201984e41b1a6657ff88f0/phalcon/Mvc/Model/Behavior/Timestampable.zep#L57)? Could we remove this functionality?",
    "head_branch": "model-behavior",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Refactored Timestampable model behavior."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a1818912b45d36a31a7",
    "number": 14026,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/14025\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I updated the CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nAdded a return in cast() for arrays.\r\n\r\nThanks,\r\nzsilbi\r\n\r\n",
    "head_branch": "config-ini-array-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixed Phalcon\\Config\\Adapter\\Ini() to handle arrays correctly (#14026)\n\n* Fixeing Config\\Adapter\\Ini notices when casting arrays\r\n\r\n* Fixed Phalcon\\Config\\Adapter\\Ini() to handle arrays correctly\r\n\r\n* Update tests/_data/assets/config/config-with-constants.ini\r\n\r\nCo-Authored-By: zsilbi <zsilbi@users.noreply.github.com>\r\n\r\n* Fixeing Config\\Adapter\\Ini notices when casting arrays\r\n\r\n* Fixed Phalcon\\Config\\Adapter\\Ini() to handle arrays correctly"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212a1918912b45d36a31a8",
    "number": 14024,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/14023\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I updated the CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nFixed `Phalcon\\Flash\\Session::output()` not to throw an exception when there are no messages stored in session.\r\n\r\nThanks,\r\nzsilbi\r\n\r\n",
    "head_branch": "flash-empty-session",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added classes"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a1b18912b45d36a31a9",
    "number": 14019,
    "body": "Implemented in Form\r\nTests\r\n\r\n* Type: new feature\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/13646\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I updated the CHANGELOG\r\n\r\nSmall description of change: \r\nI created a new interface for HTML Attributes and I implemented in Form\r\nI replaced the action property insteand of attributes\r\nI writed tests\r\n\r\nThanks\r\n\r\n",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212a1c18912b45d36a31aa",
    "number": 14018,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issues: https://github.com/phalcon/cphalcon/issues/13531, https://github.com/phalcon/cphalcon/pull/13616, https://github.com/phalcon/cphalcon/issues/13964\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I updated the CHANGELOG\r\n\r\nFirst of all, the save procedure uses transactions so the related bag can't be modified until the transaction is committed, therefore two additional storages are used to store the records.\r\n\r\nWrote some tests to confirm the `isRelationShipLoaded()` method and to check if https://github.com/phalcon/cphalcon/issues/13964 still occurs.\r\n\r\nReusable relations are now handled correctly in `Model` but we need tests to confirm it.\r\n\r\nWe also need tests to confirm that no unnecessary SQL request are being sent as @virgofx suggested in https://github.com/phalcon/cphalcon/pull/13985#issuecomment-483733438\r\n\r\nI am also unsure which test models can be used at the moment to test has-many-to-many relationships.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "model-relations",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212a1d18912b45d36a31ab",
    "number": 14017,
    "body": "Added missing comments\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14017 from ruudboon/patch-1\n\nUpdate libmemcached.zep"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212a1e18912b45d36a31ac",
    "number": 14016,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [-] I updated the CHANGELOG",
    "head_branch": "tests-clarity",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Tidied up optimizers."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a2018912b45d36a31ad",
    "number": 14015,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [-] I updated the CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "variable-types-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[WIP] Added variable types. (#14015)\n\n* Added variable types.\r\n\r\n* Whitespace.\r\n\r\n* Improved logic."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a2118912b45d36a31ae",
    "number": 14014,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [-] I updated the CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "forms-element-attributes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added tests for Form\\Element::getForm()."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a2218912b45d36a31af",
    "number": 14013,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [-] I updated the CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "logic-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixed logic in many methods (part 2). (#14013)\n\n* Fixed logic in many methods (part 2).\r\n\r\n* Fixed logic. (part 2.1)\r\n\r\n* Fixed logic. (part 2.2)\r\n\r\n* Removed fix for PHP bug 66606.\r\n\r\n* Fixed logic 2.something."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a2318912b45d36a31b0",
    "number": 14012,
    "body": "Hello!\r\n\r\n* Type: bug fix | code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [x] I updated the CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "log-abstract",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Logger\\Adapter\\AbstractAdapter::process() is now actually abstract. (#14012)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a2418912b45d36a31b1",
    "number": 14011,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [-] I updated the CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "phpdoc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Removed duplicated PHPDocs and fixed up comments. (#14011)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a2518912b45d36a31b2",
    "number": 14010,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [-] I updated the CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "logic",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixed logic of many methods. (#14010)\n\n* Fixed logic in many methods (A-D).\r\n\r\n* Fixed logic in many methods (F, S, T, V). [skip appveyor]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a2618912b45d36a31b3",
    "number": 14009,
    "body": "Hello!\r\n\r\n* Type:  code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [-] I updated the CHANGELOG\r\n\r\nIntroducing the world's most boring diff. :wink:\r\n\r\n",
    "head_branch": "whitespace",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Whitespace. (#14009)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a2718912b45d36a31b4",
    "number": 14003,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I updated the CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "model-relation-isforeignkey",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14003 from SidRoberts/model-relation-isforeignkey\n\nModel\\Relation::isForeignKey() now returns false if the option is false"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a2818912b45d36a31b5",
    "number": 14002,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [-] I updated the CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "sodium",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212a2918912b45d36a31b6",
    "number": 14001,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [x] I updated the CHANGELOG\r\n\r\nThey exist in the Router so I assume the Router Group was forgotten about.\r\n\r\n",
    "head_branch": "router-group-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added addConnect(), addPurge() and addTrace() to Router Group (#14001)\n\n* Removed unused variable.\r\n\r\n* Added addConnect(), addPurge() and addTrace() to Router Group.\r\n\r\n* Added tests for Mvc\\Router\\Group."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a2a18912b45d36a31b7",
    "number": 14000,
    "body": "Reverts phalcon/cphalcon#13985",
    "head_branch": "revert-13985-T13964-saving-model-after-fetching-related",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #14000 from phalcon/revert-13985-T13964-saving-model-after-fetching-related\n\nRevert \"Fixed saving a model after fetching its related records\""
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a2b18912b45d36a31b8",
    "number": 13999,
    "body": "",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212a2d18912b45d36a31b9",
    "number": 13998,
    "body": "Hello!\r\n\r\n* Type: tests\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I updated the CHANGELOG\r\n\r\nOverview:\r\n* Refactored some tests.\r\n* Added some new tests.\r\n",
    "head_branch": "tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added more tests (#13998)\n\n* Added tests for Mvc\\Micro.\r\n\r\n* Added tests for Mvc\\Micro\\Collection.\r\n\r\n* Added tests for Mvc\\Router.\r\n\r\n* Removed Mvc\\User tests.\r\n\r\n* Added tests for Mvc\\Router\\Group.\r\n\r\n* Added tests for Http\\Response.\r\n\r\n* Added tests for Validation.\r\n\r\n* Added tests for Db\\RawValue.\r\n\r\n* Added tests for Url.\r\n\r\n* Added __set, __isset, __unset to test stub generator.\r\n\r\n* Added tests for Crypt.\r\n\r\n* Added tests for Mvc\\Model.\r\n\r\n* Added tests for Forms\\Form.\r\n\r\n* Added tests for Db\\Profiler."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a2e18912b45d36a31ba",
    "number": 13996,
    "body": "Hello!\r\n\r\n* Type: tests\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [-] I updated the CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "flash-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212a2f18912b45d36a31bb",
    "number": 13995,
    "body": "Hello!\r\n\r\n* Type: bug fix | code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [x] I updated the CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "security-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Tidied up Security and fixed exception message (#13995)\n\n* Shortened long lines.\r\n\r\n* Fixed the exception message in `Phalcon\\Security::computeHmac()` by removing `\"%s\"` from output.\r\n\r\n* Cleaned logic."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a3018912b45d36a31bc",
    "number": 13994,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [-] I updated the CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "flash",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Tidied up Flash (#13994)\n\n* Tidied up Flash.\r\n\r\n* Flash\\Session::getSessionMessages() always returns an array anyway.\r\n\r\n* Flash::messages is an array by default."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a3118912b45d36a31bd",
    "number": 13993,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [-] I updated the CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "db-dry",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13993 from SidRoberts/db-dry\n\nDb is now DRYer."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a3218912b45d36a31be",
    "number": 13992,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [-] I updated the CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "forms",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Certain properties are always a specific type. (#13992)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a3418912b45d36a31bf",
    "number": 13990,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I updated the CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.4.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212a3518912b45d36a31c0",
    "number": 13989,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I updated the CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "model-relation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "The property 'options' is always an array in Model Relations. (#13989)\n\n* The property 'options' is always an array in Model Relations.\r\n\r\n* Added tests for Model Relation."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a3618912b45d36a31c1",
    "number": 13988,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [x] I updated the CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "view-simple",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Simple View stuff (#13988)\n\n* Addeed Closure use statement.\r\n\r\n* Removed nested if statement.\r\n\r\n* Tidied up internalRender().\r\n\r\n* Mvc\\View\\Simple::viewParams is now always an array.\r\n\r\n* `Phalcon\\Mvc\\View\\Simple::render()` `params` property is now always an array.\r\n\r\n* Added some variable types.\r\n\r\n* .="
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a3818912b45d36a31c2",
    "number": 13987,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/13986\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [x] I updated the CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nChanged getModelSource() to call setModelSource() when storing the source of the model.\r\n\r\nThanks\r\n",
    "head_branch": "T13986-modelsmanager-modelsource-logic",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13987 from zsilbi/T13986-modelsmanager-modelsource-logic\n\nAllowing ModelsManager get/setModelSource to be overrideable"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212a3918912b45d36a31c3",
    "number": 13985,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/13964\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I updated the CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nI've added some tests to check if this issue exists at all.\r\nThe tests failed, so added a fix in a previous PR (https://github.com/phalcon/cphalcon/pull/13970) but ran into a conflict so I made a new PR.\r\n\r\nThe problem is, that the related models are stored in the `_related` storage inside Model after accessing via `__get()`. It is not stored when accessing related records via `__call()`.\r\n\r\nWhen the model is saved,` _postSaveRelatedRecords` is being called and it iterates through `_related` and tries to save the previously fetched related records.\r\n\r\nFor now, I just removed adding these records to the `_related` as it's not mandatory when you are only reading them.\r\n\r\nThanks",
    "head_branch": "T13964-saving-model-after-fetching-related",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixed saving a model after fetching its related records (#13985)\n\n* Disabled saving related the records to _related when access via __get()\r\nAdded specific tests for issue #13964.\r\n\r\n* Code style fix.\r\n\r\n* Disabled saving related the records to _related when access via __get()\r\nAdded specific tests for issue #13964.\r\n\r\n* Code style fix.\r\n\r\n* Added changelog for #13985"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a3a18912b45d36a31c4",
    "number": 13982,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [-] I updated the CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "dry-acl",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "DRYed up the ACL. (#13982)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a3b18912b45d36a31c5",
    "number": 13981,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [-] I updated the CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "forms-element-addvalidators",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Tidied up Forms\\Element::addValidators(). (#13981)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212a3c18912b45d36a31c6",
    "number": 13980,
    "body": "Hello!\r\n\r\n* Type: documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [-] I updated the CHANGELOG\r\n\r\nWe need to keep the documentation up-to-date. :wink:\r\n",
    "head_branch": "pr-template",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Documentation should be updated when making PRs. [ci skip] (#13980)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212a3d18912b45d36a31c7",
    "number": 13979,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* See also: https://github.com/phalcon/cphalcon/pull/10028\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [x] I updated the CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "simple-view-trailing",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Setting the views directory no longer requires a trailing slash when using Simple View. (#13979)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a3e18912b45d36a31c8",
    "number": 13977,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [x] I updated the CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "criteria-limit",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Criteria::limit() now takes 'offset' as an integer. (#13977)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a3f18912b45d36a31c9",
    "number": 13976,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [-] I updated the CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "model-criteria",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Tidied up Criteria. (#13976)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a4018912b45d36a31ca",
    "number": 13975,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [-] I updated the CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "di-service",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13975 from SidRoberts/di-service\n\nTidied up DI Service."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a4118912b45d36a31cb",
    "number": 13974,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [-] I updated the CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "resultset",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13974 from SidRoberts/resultset\n\nTidied up Resultset"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a4218912b45d36a31cc",
    "number": 13973,
    "body": "See 4f5381b285fccffdc45fc4263a93db69bca87552\r\n\r\nHello!\r\n\r\n* Type: bug fix | documentation\r\n* See also: https://github.com/phalcon/docs/pull/2291\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [-] I updated the CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "paginator-getpaginate",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Renamed Paginator\\Adapter::getPaginate() to paginate() (see 4f5381b285fccffdc45fc4263a93db69bca87552). (#13973)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a4318912b45d36a31cd",
    "number": 13972,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [-] I updated the CHANGELOG\r\n\r\nInstead of dealing with every option individually, we should first check whether the compiled file exists. If it doesn't, nothing else matters - we need to compile it regardless! :wink:\r\n",
    "head_branch": "tidy-volt-compile",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13972 from SidRoberts/tidy-volt-compile\n\nTidied up Volt compilation logic."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a4418912b45d36a31ce",
    "number": 13971,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #13968\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [-] I updated the CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "volt-options",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Corrected Volt option variables (fixes #13968) (#13971)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212a4518912b45d36a31cf",
    "number": 13970,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/13964\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I updated the CHANGELOG\r\n\r\nSmall description of change: \r\n\r\nI've added a test to check if this issue exists at all.\r\nThe CI tests are supposed to fail, I'll add the fixes later if it's confirmed.\r\n\r\nThanks",
    "head_branch": "T13964-updating-model-after-fetching-related",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212a4618912b45d36a31d0",
    "number": 13969,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [x] I updated the CHANGELOG",
    "head_branch": "acl-bug",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13969 from SidRoberts/acl-bug\n\n`Phalcon\\Acl\\Adapter\\Memory::dropComponentAccess()` now properly unsets values"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212a4718912b45d36a31d1",
    "number": 13966,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [-] I updated the CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "annotations-refactor",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Refactored some Annotations methods. (#13966)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a4818912b45d36a31d2",
    "number": 13963,
    "body": "Hello!\r\n\r\n* Type: code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I updated the CHANGELOG\r\n\r\nSmall description of change: Corrected docblock on Helper and tests Helper\\Str\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix/helper-docblocks",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Corrected docblock on Helper (#13963)\n\n* corrected docblock on Helper\r\n\r\n* corrected tests Helper\\Str"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a4918912b45d36a31d3",
    "number": 13962,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #11690\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [x] I updated the CHANGELOG\r\n\r\n[Line 828](https://github.com/SidRoberts/cphalcon/blob/query-builder-groupby/phalcon/Mvc/Model/Query/Builder.zep#L828) also blindly assumes that `this->_group` is an array.",
    "head_branch": "query-builder-groupby",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Query Builder's GROUP BY field is now always an array. (#13962)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a4a18912b45d36a31d4",
    "number": 13960,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [x] I updated the CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "gd-getversion",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added Image\\Adapter\\Gd::getVersion(). (#13960)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212a4c18912b45d36a31d5",
    "number": 13959,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature\r\n* Link to PR: https://github.com/phalcon/cphalcon/pull/13952\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I updated the CHANGELOG\r\n\r\nSmall description of change: Added `Phalcon\\Mvc\\Model\\Query\\BuilderInterface::getModels()` \r\n\r\nThanks\r\n",
    "head_branch": "bugfix/access-to-protected-property-model-builder",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Bugfix: access to a protected property model builder (#13959)\n\n* added Mvc\\Model\\Query\\BuilderInterface::getModels()\r\n\r\n* change Mvc\\Model\\Query\\Builder::getModels() to use Helper\\Arr"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a4d18912b45d36a31d6",
    "number": 13958,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #13954 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I updated the CHANGELOG\r\n\r\n\r\n* Added `chunk()`, `first()`, `firstKey()`, `flatten()`, `group()`, `isUnique()`, `last()`, `lastKey()`, `order()`, `pluck()`, `sliceLeft()`, `sliceRight()`, `split()`, `tail()`, `validateAll()`, `validateAny()` to `Phalcon\\Helper\\Arr` \r\n* Added `camelize()`, `concat()`, `countVowels()`, `decapitalize()`, `dynamic()`, `endsWith()`, `firstStringBetween()`, `includes()`, `increment()`, `isAnagram()`, `isLower()`, `isPalindrome()`, `isUpper()`, `lower()`, `random()`, `reduceSlashes()`, `startsWith()`, `uncamelize()`, `underscore()`, `upper()` to `Phalcon\\Helper\\Str` \r\n* Changed `Phalcon\\Text` to call methods from `Phalcon\\Helper\\Str`\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T13954-enhance-helpers-6",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "T13954 enhance helpers 6 (#13958)\n\n* Added Helper methods\r\n\r\n* Added tests for helpers\r\n\r\n* Corrected concat\r\n\r\n* Changes to Text and updating the changelog\r\n\r\n* Renamed firstStringBetween to firstBetween\r\n\r\n* Minor adjustments and CS"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a4e18912b45d36a31d7",
    "number": 13957,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #13954 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I updated the CHANGELOG\r\n\r\n- Added `chunk()`, `first()`, `firstKey()`, `flatten()`, `group()`, `isUnique()`, `last()`, `lastKey()`, `order()`, `pluck()`, `sliceLeft()`, `sliceRight()`, `split()`, `tail()`, `validateAll()`, `validateAny()` to `Phalcon\\Helper\\Arr` \r\n- Added `camelize()`, `concat()`, `countVowels()`, `decapitalize()`, `dynamic()`, `endsWith()`, `firstStringBetween()`, `includes()`, `increment()`, `isAnagram()`, `isLower()`, `isPalindrome()`, `isUpper()`, `lower()`, `random()`, `reduceSlashes()`, `startsWith()`, `uncamelize()`, `underscore()`, `upper()` to `Phalcon\\Helper\\Str` \r\n- Changed `Phalcon\\Text` to call methods from `Phalcon\\Helper\\Str`\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T13954-enhance-helpers",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212a4f18912b45d36a31d8",
    "number": 13956,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [x] I updated the CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "gd-legacy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Removed legacy (PHP <5.5) code from GD Image adapter. (#13956)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212a5018912b45d36a31d9",
    "number": 13955,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [-] I updated the CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "validation-construct",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Tidied up Validation. (#13955)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a5118912b45d36a31da",
    "number": 13953,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I updated the CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "security",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "minor changes on Security"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212a5218912b45d36a31db",
    "number": 13952,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/13915\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I updated the CHANGELOG\r\n\r\nSmall description of change: corrected the code standard\r\n\r\nThanks",
    "head_branch": "cs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CS on Mvc\\Model (#13952)\n\n* CS on Mvc\\Model\r\n\r\n* fix: phql_parse_phql\r\n\r\n* fix test QueryBuilderCest\r\n\r\n* corrected docblock\r\n\r\n* fixed fatal error - <undefined class>\r\n\r\n* Revert \"fixed fatal error - <undefined class>\"\r\n\r\nThis reverts commit 969afed2\r\n\r\n* update getModels()"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a5318912b45d36a31dc",
    "number": 13951,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #13946\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [-] I updated the CHANGELOG\r\n\r\nPartial revert of #13946.\r\n",
    "head_branch": "fix-13946",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Partial revert of #13946... sorry guys ;)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a5418912b45d36a31dd",
    "number": 13950,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [-] I updated the CHANGELOG\r\n\r\n`Mvc\\Model::getSource()` is now final and should be replaced by using `setSource()` in `initialize()`:\r\n\r\n```php\r\nclass Post extends \\Phalcon\\Mvc\\Model\r\n{\r\n    public function initialize()\r\n    {\r\n        $this->setSource(\"custom_posts_source\");\r\n    }\r\n}\r\n```\r\n\r\nOverriding `getSource()` meant that `Model::getSource()` and `Model\\Manager::getModelSource()` would return different things.",
    "head_branch": "final-getsource",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Model methods that extend Model Manager functionality are now final (#13950)\n\n* Added failing test.\r\n\r\n* Mvc\\Model::getSource() is now final.\r\n\r\n* Model::setSource() is now final.\r\n\r\n* Model methods that extend Model Manager functionality are now final."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a5518912b45d36a31de",
    "number": 13948,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #13947 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I updated the CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T13947-model-interface",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[#13947] - Updated changelog"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212a5618912b45d36a31df",
    "number": 13946,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [-] I updated the CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "config",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Refactored Config."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a5718912b45d36a31e0",
    "number": 13945,
    "body": "Hello!\r\n\r\n* Type: bug fix | documentation\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [x] I updated the CHANGELOG\r\n\r\nForgot to update some of the docblocks with the changes made in #12317 and I missed one code reference in Mvc\\Model\\Resultset that still tried to assign data whilst saving. I can only assume that it's in a method that isn't used very much as no one has complained since the original PR merged 2 years ago. :open_mouth: ",
    "head_branch": "model-save",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Removed assigning properties via save() in models (as per #12317). (#13945)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a5818912b45d36a31e1",
    "number": 13939,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [X] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [X] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [X] I updated the CHANGELOG\r\n\r\nThe parameter typehint was not strong enough. :wink: \r\n",
    "head_branch": "interpolator",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Phalcon\\Translate\\InterpolatorInterface now only accepts placeholder arrays. (#13939)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a5a18912b45d36a31e2",
    "number": 13937,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [-] I updated the CHANGELOG\r\n\r\nAs per https://docs.phalconphp.com/4.0/en/coding-standard, lines should be 80 characters or less. The hard limit on line length is 120 characters.\r\n\r\nI'm posting this now before I spend too much time on it. :stuck_out_tongue: ",
    "head_branch": "long-lines",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Shortened long lines. (#13937)\n\n* Shortened long lines.\r\n\r\n* Shorted long lines 2\r\n\r\n* Shortened long lines 3\r\n\r\n* Shortened long lines 4\r\n\r\n* Shortened long lines 5\r\n\r\n* Shortened long lines 6\r\n\r\n* 7"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a5b18912b45d36a31e3",
    "number": 13936,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I updated the CHANGELOG\r\n\r\nSmall description of change: added description property to Cli\\Router\\Route\r\n\r\n## Usage: \r\n```php\r\n$router = new \\Phalcon\\Cli\\Router(false);\r\n$router->add('test')->setName('testName')->setDescription('testDescription');\r\n$router->add('test1')->setName('testName1')->setDescription('testDescription1');\r\n$router->add('test2')->setName('testName2')->setDescription('testDescription2');\r\n\r\nforeach ($router->getRoutes() as $route) {\r\n    printf(\"%s    %s\\n\", $route->getName(), $route->getDescription());\r\n}\r\n```\r\n\r\n```\r\n$./phalconcli\r\nAvailable command or tasks:\r\n   testName      testDescription\r\n   testName1     testDescription1\r\n   testName2     testDescription2\r\n```\r\nThanks\r\n\r\n",
    "head_branch": "feature/cli-task-description",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[NFR] - added description property to Cli\\Router\\Route (#13936)\n\n* Added description property to cli route\r\n\r\n* phpcs fix\r\n\r\n* tests refactored\r\n\r\n* Update RouteInterface.zep\r\n\r\n* Update Route.zep"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a5c18912b45d36a31e4",
    "number": 13935,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [x] I updated the CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "dispatcher-forward",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Dispatcher::forward() and Dispatcher::setParams() now require an array as a paramter. (#13935)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a5d18912b45d36a31e5",
    "number": 13933,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I updated the CHANGELOG\r\n\r\nRoutes with bad classnames (such as `MyApp\\\\Tasks\\\\`) now throw an exception. Previously, the error was suppressed and left the namespace/task blank. \r\n",
    "head_branch": "cli-bad-route",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CLI Routes with bad classnames now throw an exception. (#13933)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212a5e18912b45d36a31e6",
    "number": 13932,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [-] I updated the CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "cli-route",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      " Cli\\Route::delimiterPath now has a default value (#13932)\n\n* Removed PHPDocs.\r\n\r\n* Cli\\Route::delimiterPath now has a default value.\r\n\r\n* Fixed spellings in CHANGELOG."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a5f18912b45d36a31e7",
    "number": 13931,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [x] I updated the CHANGELOG\r\n\r\nPreviously, `initialize()` would store a list of the initialized collections in the `this->initialized` array. It stored the class name as is; `Models\\Users` would be stored as \"Models\\Users\". However, `isInitialized()` would check for an all lowercase version (\"models\\users\").\r\n\r\nI've also edited the method signature of `isInitialized()` by renaming `modelName` to `className` as it is a better description of what the variable is.\r\n\r\n\r\n\r\n",
    "head_branch": "model-initialize",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13931 from SidRoberts/model-initialize\n\nFixed Collection::isInitialized()"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a6018912b45d36a31e8",
    "number": 13930,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [-] I updated the CHANGELOG\r\n\r\nRefactored SoftDelete model behaviour.\r\n",
    "head_branch": "softdelete",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Refactored SoftDelete model behaviour. (#13930)\n\n* Refactored SoftDelete model behaviour.\r\n\r\n* Refactored SoftDelete collection behaviour.\r\n\r\n* Further refactored SoftDelete.\r\n\r\n* Updated Changelog."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a6118912b45d36a31e9",
    "number": 13929,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [X] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [-] I updated the CHANGELOG\r\n\r\nCorrected initial values of properties in Http\\Cookie.\r\n",
    "head_branch": "cookie-refactor",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Corrected initial values of properties in Http\\Cookie. (#13929)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a6218912b45d36a31ea",
    "number": 13928,
    "body": "Hello!\r\n\r\n* Type: bug fix | code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [-] I updated the CHANGELOG\r\n\r\n\r\nThis code was previously buggy - it checked if the DI contained the 'escaper' service. If `true`, it made a new instance; if `false`, it attempted to retrieve the non-existent service.\r\n",
    "head_branch": "taglocatorfactory",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Refactored getEscaper() method. (#13928)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212a6318912b45d36a31eb",
    "number": 13927,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [-] I updated the CHANGELOG\r\n\r\nSlight tidy up of some of the methods.\r\n",
    "head_branch": "di-ref",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Refactored DI. (#13927)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a6418912b45d36a31ec",
    "number": 13925,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [-] I updated the CHANGELOG\r\n\r\nPreviously a variable was \"cached\" as a property.",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Removed pointless property and variables from Volt compiler (#13925)\n\n* Removed pointless property and variables from Volt compiler.\r\n\r\n* Removed pointless variable.\r\n\r\n* Updated Changelog."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a6518912b45d36a31ed",
    "number": 13924,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [x] I updated the CHANGELOG\r\n\r\nPreviously, the Events Manager was able to store events in two different systems - SplPriorityQueue and arrays. The system depended on whether priorities were enabled or not.\r\n\r\nA lof of the code look similar to this:\r\n\r\n```zephir\r\nif this->enablePriorities {\r\n    // Handle SplPriorityQueue\r\n} else {\r\n    // Handle array\r\n}\r\n```\r\n\r\nIt doesn't make sense to duplicate the code functionality for two systems when just one can be used instead.\r\n\r\nNow SplPriorityQueue is used regardless. If priorities are disabled, the default priority (new constant DEAULT_PRIORITY) is used instead so that everything has the same priority.\r\n",
    "head_branch": "simple-events",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Simplified events."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a6618912b45d36a31ee",
    "number": 13923,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [-] I updated the CHANGELOG\r\n\r\nSmall description of change:\r\n\r\n[`Annotations\\Reader::parse()`](https://github.com/phalcon/cphalcon/blob/4.0.x/phalcon/Annotations/Reader.zep#L26) always returns an array so we don't need to check if it is.\r\n\r\n\r\n\r\n\r\nThanks\r\n\r\n",
    "head_branch": "annotations",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Annotations\\Reader::parse() always returns an array."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a6718912b45d36a31ef",
    "number": 13921,
    "body": "Corrected the `json_encode` flags and renamed application",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[4.0.x] - Kept travis at zephir 0.11.9"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212a6818912b45d36a31f0",
    "number": 13920,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [-] I wrote some tests for this PR\r\n- [-] I updated the CHANGELOG\r\n\r\nRemoved `if variable === true` if the variable is a boolean.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "isNewHandler",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CS Simplified boolean logic."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a6a18912b45d36a31f1",
    "number": 13918,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue: #13915 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I updated the CHANGELOG\r\n\r\nApplying the new coding standard for Phalcon. Certain files have been left untouched intentionally - they will be replaced./refactored later on\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T13915-coding-standard",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[#13915] - CS on visibility of methods"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a6b18912b45d36a31f2",
    "number": 13914,
    "body": "Hello!\r\n\r\n* Type: enhancement\r\n* Link to issue: #13907 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I updated the CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T13907-collection-psr7",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[#13907] - Changing internal to private to check the Windows build"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a6c18912b45d36a31f3",
    "number": 13913,
    "body": "",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13913 from shum0531/patch-2\n\n[#13911] Added changelog entry"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212a6d18912b45d36a31f4",
    "number": 13912,
    "body": "\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212a6e18912b45d36a31f5",
    "number": 13911,
    "body": "Hello!\r\n\r\n* Type: improvement\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I updated the CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nsetImageAlpha () - fills the alpha channel with black before execution.\r\nevaluateImage () is the best compatibility.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixed compatibility issue.\n\nsetImageAlpha () - fills the alpha channel with black before execution.\r\nvaluImage () is the best compatibility."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212a6f18912b45d36a31f6",
    "number": 13910,
    "body": "setImageAlpha () - fills the alpha channel with black before execution.\r\nvaluImage () is the best compatibility.\r\n\r\nHello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [ ] I updated the CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212a7018912b45d36a31f7",
    "number": 13908,
    "body": "Hello!\r\n\r\n* Type: documentation\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I updated the CHANGELOG\r\n\r\nSmall description of change:\r\n\r\n> Tidied up comments in Html\\Tag\r\n\r\nThanks\r\n\r\n",
    "head_branch": "tag-linkto",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13908 from SidRoberts/tag-linkto\n\nTidied up comments in Html\\Tag"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a7118912b45d36a31f8",
    "number": 13902,
    "body": "Hello!\r\n\r\n* Type: new feature + bug fix\r\n* Link to issue: This is a continuation of #13647 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] CHANGELOG: I'm waiting for reviews.\r\n\r\nI created an options and postOptions defaults for the PDO adapters.  I specifically did this now so that Sqlite can use errors as exceptions.  So Mysql and Postgres store this in the options, while Sqlite stores it in the post options.  Sqlite ignores this PDO constructor option and it must be set after instantiation.\r\n\r\nAdditionally this creates the infrastructure for doing more advanced auto-initialization in the future, for say Phalcon 5.  With this we will be able to address many more PDO weird cases so that Phalcon can deliver a painless out-of-the-box configuration.\r\n\r\nIf the code review goes over well then I will create a CHANGELOG entry as well as fixing the CHANGELOG for the alpha3 release to be more in line with what happened during that time (Added instead of Changed, missing entries).",
    "head_branch": "pdo_postoptions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212a7218912b45d36a31f9",
    "number": 13901,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I updated the CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212a7318912b45d36a31fa",
    "number": 13898,
    "body": "Hello!\r\n\r\nType: new feature\r\nLink to issue: #13893\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I updated the CHANGELOG\r\n\r\nAdded case insensitive flag in remove()\r\n\r\nThanks",
    "head_branch": "T13897-remove-collections",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "T13897 remove collections (#13898)\n\n* [4.0.x] - Added case insensitive flag for remove\r\n\r\n* [4.0.x] - Added case insensitive flag in remove and adjusted tests\r\n\r\n* [4.0.x] - Corrected the interface"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a7418912b45d36a31fb",
    "number": 13897,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #13893 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I updated the CHANGELOG\r\n\r\nAdded case insensitive flag in `remove()`\r\n\r\nThanks\r\n\r\n",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212a7518912b45d36a31fc",
    "number": 13895,
    "body": "Hello!\r\n\r\n* Type: new feature | code quality\r\n* Link to issue: #13893 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I updated the CHANGELOG\r\n\r\nRefactored `Registry` to use `Collection`;\r\nRefactored `Session\\Bag` to use `Collection`\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T13893-registry-collection",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "T13893 registry collection (#13895)\n\n* [4.0.x] - Added unicode flag for email filter\r\n\r\n* [4.0.x] - Updating the ext folder\r\n\r\n* [4.0.x] - Added Arr helper class\r\n\r\n* Revert \"[4.0.x] - Added Arr helper class\"\r\n\r\nThis reverts commit f8153d32712755bad373e406088186cf84ba5c16.\r\n\r\n* Revert \"[4.0.x] - Updating the ext folder\"\r\n\r\nThis reverts commit 655eafec10ca761a48daafe3e2e49fbe97712865.\r\n\r\n* [#13893] - Work on the registry extending Collection; Tests!\r\n\r\n* [#13893] - Corrected the signature of __get\r\n\r\n* [#13893] - Correction to the interface\r\n\r\n* [#13893] - Case insensitivity on has and get\r\n\r\n* [#13893] - Added more tests for case insensitivity\r\n\r\n* [#13893] - Changed the Session\\Bag component to use Collection\r\n\r\n* [#13893] - Rework the Session\\Bag tests\r\n\r\n* [#13893] - Updated changelog\r\n\r\n* [#13893] - Corrections after the review\r\n\r\n* [#13893] - Removed ext/ files"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a7718912b45d36a31fd",
    "number": 13894,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/12261\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I updated the CHANGELOG\r\n\r\nThanks\r\n",
    "head_branch": "fix/T12261-assets-manager-ref-to-tag",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix: assets manager hard reference to phalcon\\tag. Use DI (#13894)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a7818912b45d36a31fe",
    "number": 13891,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #13886 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I updated the CHANGELOG\r\n\r\nAdded `Phalcon\\Collection`, offering a collection object for various parts of the framework such as handling arrays, superglobals etc.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T13886-collection",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "T13886 collection (#13891)\n\n* [4.0.x] - Added unicode flag for email filter\r\n\r\n* [4.0.x] - Updating the ext folder\r\n\r\n* [4.0.x] - Added Arr helper class\r\n\r\n* Revert \"[4.0.x] - Added Arr helper class\"\r\n\r\nThis reverts commit f8153d32712755bad373e406088186cf84ba5c16.\r\n\r\n* Revert \"[4.0.x] - Updating the ext folder\"\r\n\r\nThis reverts commit 655eafec10ca761a48daafe3e2e49fbe97712865.\r\n\r\n* [#13886] - Initial implementation and test stubs\r\n\r\n* [#13886] - Fixing interface\r\n\r\n* [#13886] - Added constructor\r\n\r\n* [#13886] - Implementation of the collection\r\n\r\n* [#13886] - Collection tests\r\n\r\n* [#13886] - Updated the CHANGELOG"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a7918912b45d36a31ff",
    "number": 13885,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #11789 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I updated the CHANGELOG\r\n\r\nAdded `Phalcon\\Http\\Message\\*` namespace implementing PSR-7 and PSR-17. Introducing:\r\n    - `Phalcon\\Http\\Message\\Request`\r\n    - `Phalcon\\Http\\Message\\RequestFactory`\r\n    - `Phalcon\\Http\\Message\\Response`\r\n    - `Phalcon\\Http\\Message\\ResponseFactory`\r\n    - `Phalcon\\Http\\Message\\ServerRequest` \r\n    - `Phalcon\\Http\\Message\\ServerRequestFactory`\r\n    - `Phalcon\\Http\\Message\\Stream`\r\n    - `Phalcon\\Http\\Message\\StreamFactory`\r\n    - `Phalcon\\Http\\Message\\UploadefFile`\r\n    - `Phalcon\\Http\\Message\\UploadedFileFactory`\r\n    - `Phalcon\\Http\\Message\\Uri`\r\n    - `Phalcon\\Http\\Message\\UriFactory`\r\n    - `Phalcon\\Http\\Message\\Stream\\Input`\r\n    - `Phalcon\\Http\\Message\\Stream\\Memory`\r\n    - `Phalcon\\Http\\Message\\Stream\\Temp`\r\n\r\nThe implementation offers PSR-7/PSR-17 compatible components in a different namespace to allow usage of both `Request` and `Response` implementations for this version.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T11789-PSR-7",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "T11789 PSR-7/ PSR-17 (#13885)\n\n* [4.0.x] - Added unicode flag for email filter\r\n\r\n* [#11789] - Changed the utility class to be a static one\r\n\r\n* [#11789] - Added more PSR interfaces\r\n\r\n* [#11789] - Added utility tests\r\n\r\n* [#11789] - Changed the Utility class\r\n\r\n* [#11789] - Added UriFactory and Uri methods\r\n\r\n* [#11789] - Adjustments and tests\r\n\r\n* [#11789] - Adjustments to the Uri component; Added more tests\r\n\r\n* [#11789] - Added more tests\r\n\r\n* [#11789] - Adjustments to the encoding\r\n\r\n* [#11789] - Changes to rawurlencode/encoding\r\n\r\n* [#11789] - Moved Uri to the Http\\Message namespace; Stub implemention for ServerRequest\r\n\r\n* [#11789] - Added tests for more code coverage\r\n\r\n* [#11789] - Correcting method parameters for the interface\r\n\r\n* [#11789] - Corrected interface\r\n\r\n* [#11789] - Added Http\\Message\\Stream; Added test stubs; corrected some tests\r\n\r\n* [#11789] - Added input stream, stream factory and adjustments to the stream\r\n\r\n* [#11789] - Updating ext folder\r\n\r\n* [#11789] - Adding test stubs\r\n\r\n* [#11789] - Adding more tests for the new classes\r\n\r\n* [#11789] - Added new classes with stubbed methods\r\n\r\n* [#11789] - Updating ext folder\r\n\r\n* [#11789] - Corrected interfaces\r\n\r\n* [#11789] - Updating ext/\r\n\r\n* [#11789] - Adjusted test for php 7.2/7.3\r\n\r\n* [#11789] - Corrected Path processing\r\n\r\n* [#11789] - Updating ext/\r\n\r\n* [#11789] - Added test stubs for factories\r\n\r\n* [#11789] - Adjustments to constructors\r\n\r\n* [#11789] - Updating ext\r\n\r\n* [#11789] - Added PSR-15 stubs and classes\r\n\r\n* [#11789] - Updating ext/\r\n\r\n* [#11789] - Added constructor tests for http\\server\r\n\r\n* [#11789] - Added fixtures/abstract server classes; Added more tests\r\n\r\n* [#11789] - Updating ext/\r\n\r\n* [#11789] - Enabling mor ereporting for unit\r\n\r\n* [#11789] - Rearranging the code a bit\r\n\r\n* [#11789] - Updated ext\r\n\r\n* [#11789] - Minor modification to the PR template\r\n\r\n* [#11789] - Added license/see information\r\n\r\n* [#11789] - Corrections and additions (tests/code)\r\n\r\n* [#11789] - Updating ext/\r\n\r\n* [#11789] - Trying a different approach with an intermediate variable\r\n\r\n* [#11789] - PHPCS\r\n\r\n* [#11789] - Removing xdebug from travis\r\n\r\n* [#11789] - Removed dollar sign from the variable\r\n\r\n* [#11789] - Using inter variable\r\n\r\n* [#11789] - Adjustments with intermediate vars for services\r\n\r\n* [#11789] - Minor text change in docblocks\r\n\r\n* [#11789] - Disabling static analysis temporarily\r\n\r\n* [#11789] - Updating ext/\r\n\r\n* [#11789] - Corrected di warning; Work on the stream; Trimmed code\r\n\r\n* [#11789] - Updating ext/\r\n\r\n* [#11789] - Added setStream in stream\r\n\r\n* [#11789] - Zephir generate and fixed missed var\r\n\r\n* [#11789] - Adjustments to the interfaces based on docblocks\r\n\r\n* [#11789] - Adjusted tests\r\n\r\n* [#11789] - Corrections\r\n\r\n* [#13687] - Added testbed for quick testing using the server\r\n\r\n* [#13687] - Set the Utility as static\r\n\r\n* [#13687] - Adjusted tests\r\n\r\n* [#13687] - Corrected the change to the Utility class\r\n\r\n* [#13687] - Updating the changelog\r\n\r\n* [#11789] - Trying a bug fix\r\n\r\n* [#11789] - Assigned constructor data to variables\r\n\r\n* [#11789] - Added helper arr\r\n\r\n* [4.0.x] - Updating the ext folder\r\n\r\n* [4.0.x] - Added Arr helper class\r\n\r\n* Revert \"[4.0.x] - Added Arr helper class\"\r\n\r\nThis reverts commit f8153d32712755bad373e406088186cf84ba5c16.\r\n\r\n* Revert \"[4.0.x] - Updating the ext folder\"\r\n\r\nThis reverts commit 655eafec10ca761a48daafe3e2e49fbe97712865.\r\n\r\n* [#13687] - Added Helper/Arr\r\n\r\n* [#13687] - Added tests for Arr\r\n\r\n* [#13687] - Corrections to the helper\r\n\r\n* [#13687] - Removing mysql 5.7 temporarily\r\n\r\n* [#13687] - Trying xenial build\r\n\r\n* [#13687] - Updating ext folder\r\n\r\n* Revert \"[#13687] - Updating ext folder\"\r\n\r\nThis reverts commit f18a967b4fa5e3a880f19673c9a430ee12631525.\r\n\r\n* Revert \"[#13687] - Trying xenial build\"\r\n\r\nThis reverts commit 07da593938b3e0e929f194984c16dd44bdc03cb4.\r\n\r\n* [#13687] - Refactored locations for url/utils\r\n\r\n* [#13687] - Updated references to url/utils\r\n\r\n* [#13687] - Trying the build with mysql5.7 again\r\n\r\n* [#13687] - Trying a different installation for mysql 5.7\r\n\r\n* [#13687] - Trying to get the installation going of mysql 5.7\r\n\r\n* [#13687] - Trying something different\r\n\r\n* [#13687] - Trying xenial\r\n\r\n* [#13687] - Re-enabling mysql; removing memcached\r\n\r\n* [#13687] - Adding again memcached in the setup\r\n\r\n* [#13687] - Removing xenial\r\n\r\n* [#11789] - Corrected references to Arr, removed obsolete test\r\n\r\n* [#11789] - Updating ext/\r\n\r\n* [#11789] - Trying with protected method\r\n\r\n* [#11789] - Server request - assigning vars from the constructor\r\n\r\n* [#11789] - Adjustments for the build\r\n\r\n* [#11789] - Added Number helper\r\n\r\n* [#11789] - Correcting the constructor code for uploadedfile; Added more tests\r\n\r\n* [#11789] - Minor corrections\r\n\r\n* [#11789] - Updating ext\r\n\r\n* [#11789] - Added constructor tests; corrected logic for stream parameter\r\n\r\n* [#11789] - Work on the stream and tests oh tests...\r\n\r\n* [#11789] - Updating ext/\r\n\r\n* [#11789] - Rebuilding ext\r\n\r\n* [#11789] - Adjusting tests based on file modes\r\n\r\n* [#11789] - Corrections to the logic for opening streams\r\n\r\n* [#11789] - Added getSize tests\r\n\r\n* [#11789] - Added wrappers for php:// input/memory/temp\r\n\r\n* [#11789] - Added test stubs and tests for the streams\r\n\r\n* [#11789] - Updating ext again\r\n\r\n* [#11789] - More tests and sample files\r\n\r\n* [#11789] - Corrected tests with different modes\r\n\r\n* [#11789] - More corrections\r\n\r\n* [#11789] - Added more tests\r\n\r\n* [#11789] - Adjustment to the sample file\r\n\r\n* Correcting mcall reference\r\n\r\n* [#11789] - Minor adjustments\r\n\r\n* [#11789] - Adjustments to the tests and phpcs\r\n\r\n* [#11789] - Adjustments/trimming code\r\n\r\n* [#11789] - Adjusting ext\r\n\r\n* [#11789] - Added more tests for streams\r\n\r\n* [#11789] - ext update\r\n\r\n* [#11789] - Made warning protected for Stream\r\nAdded more vars that need to be injected in the ServerRequest\r\nAdjustments to the Stream\r\nAdded UTF-8 aware parse_url() method in Uri\r\n\r\n* [#11789] - Tests for stream\r\n\r\n* [#11789] - Corrections to the memory stream\r\n\r\n* [#11789] - Tests for UploadFile - new and corrections\r\n\r\n* [#11789] - Adjustments to moveTo\r\n\r\n* [#11789] - Corrected logic in moveTo\r\n\r\n* [#11789] - Added more tests for moveTo\r\n\r\n* [#11789] - Work on getHeaders/ServerRequest\r\n\r\n* [#11789] - Created abstract message/request classes to reuse code (no traits sadly)\r\n\r\n* Update abstractrequest.zep\r\n\r\nUsed correct UriInterface to prevent:\r\n\r\nDeclaration of Phalcon\\Http\\Message\\AbstractRequest::withUri(Phalcon\\Http\\Message\\UriInterface $uri, $preserveHost = NULL): Psr\\Http\\Message\\RequestInterface must be compatible with Psr\\Http\\Message\\RequestInterface::withUri(Psr\\Http\\Message\\UriInterface $logger, $preserveHost = NULL)\r\n\r\n* [#11789] - Added more tests for serverrequest\r\n\r\n* [#11789] - ServerRequest work\r\n\r\n* [#11789] - Adjustments and corrections\r\n\r\n* [#11789] - Adding more tests for the ServerRequest\r\n\r\n* [#11789] - Corrections to withUri and added more tests\r\n\r\n* [#11789] - More tests yay!\r\n\r\n* [#11789] - Added with/without for headers\r\n\r\n* [#11789] - Fixing some tests and withAddedHeader logic\r\n\r\n* [#11789] - Response and response tests\r\n\r\n* [#11789] - PHPCS\r\n\r\n* [#11789] - Minor correction\r\n\r\n* [#11789] - Implementation of the request; Tests; Correction to the factory\r\n\r\n* [#11789] - Adjusted exception messages\r\n\r\n* [#11789] - Removed method name from exception messages\r\n\r\n* [#11789] - Added last tests for the stream factory\r\n\r\n* [#11789] - Updated the changelog\r\n\r\n* [#11789] - Removed obsolete files\r\n\r\n* [#11789] - Indentation corrections and review related fixes\r\n\r\n* [#11789] - Added PSR to composer; Reenabled xdebug in travis\r\n\r\n* [#11789] - changing psr-7 to 0.6.0\r\n\r\n* [#11789] - Updating the changelog for the helper classes\r\n\r\n* [#11789] - Corrections based on review\r\n\r\n* [#11789] - Fixing the isset"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a7a18912b45d36a3200",
    "number": 13879,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue: -\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n- [ ] I updated the CHANGELOG\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "filter-boolval",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212a7b18912b45d36a3201",
    "number": 13877,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n- [x] I updated the CHANGELOG\r\n\r\nAdded `delimiter` and `enclosure` options to *Phalcon\\Translate\\Adapter\\Csv* constructor. In order to support non-standard formats, for instance with a *tab* delimiter.",
    "head_branch": "translate-csv-adapter-load-options",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[Translate] more options to csv adapter (#13877)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a7d18912b45d36a3202",
    "number": 13876,
    "body": "",
    "head_branch": "4.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13876 from phalcon/4.0.x\n\n4.0.0-alpha.3"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a7e18912b45d36a3203",
    "number": 13874,
    "body": "Hello!\r\n\r\n* Type: documentation\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nFixing wrong name in a comment about the class being tested\r\n\r\nThanks\r\n\r\n",
    "head_branch": "patch-7",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13874 from challet/patch-7\n\ntypo in comment"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a8018912b45d36a3204",
    "number": 13872,
    "body": "I removed `Service::isResolved()` and wrote a new test.  The first PR got put on master somehow even though I clicked it.\r\n\r\n* Type: code quality\r\n* Link to issue: None\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nI don't think that `Service::isResolved()` was serving a purpose.  I'm on a mission to simplify the Service class.\r\n",
    "head_branch": "service_removeresolved",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212a8118912b45d36a3205",
    "number": 13871,
    "body": "I removed `Service::isResolved()` and wrote a new test.\r\n\r\n* Type: code quality\r\n* Link to issue: None\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nI don't think that `Service::isResolved()` was serving a purpose.  I'm on a mission to simplify the Service class.\r\n",
    "head_branch": "service_removeresolved",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212a8218912b45d36a3206",
    "number": 13867,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/incubator/issues/663\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\nhttps://github.com/phalcon/cphalcon/pull/12686 exists, but closed and messed up (indeed it was myself on another github account years ago)\r\n- [ ] I wrote some tests for this PR.\r\n\r\n## Description\r\nOn Instantiating a Db-Instance, the DialectClass is generated by Zephir if not given as a property. The generated Class is always lowercase which does only work for internal zephir classes, but not for PHP-Classes for example the Oracle adapter given by the incubator.\r\n\r\n### This won't work...\r\n... because the dialectClass Property is not given and phalcon tries to guess it on its own.\r\nAs zephir works case insensitive the generated class `phalcon\\db\\dialect\\oracle` won't be found, because it's not inside Phalcon since 3.0, but available via incubator only\r\n```\r\n$test = new \\Phalcon\\Db\\Adapter\\Pdo\\Oracle([\r\n            'username'    => '',\r\n            'password'    => '',\r\n            'dbname'      => ''\r\n        ]);\r\n```\r\n#### Result\r\nFatal error: Class 'phalcon\\db\\dialect\\oracle' not found in ....\r\n\r\n### Workaround \r\nIf the dialectClass is given as property, then it works\r\n```\r\n$test = new \\Phalcon\\Db\\Adapter\\Pdo\\Oracle([\r\n            'username'    => '',\r\n            'password'    => '',\r\n            'dbname'      => '',\r\n            'dialectClass' => \\Phalcon\\Db\\Dialect\\Oracle::class\r\n        ]);\r\n```\r\n\r\n## Closes\r\nhttps://github.com/phalcon/incubator/issues/663\r\nMore Info: https://github.com/phalcon/incubator/issues/663#issuecomment-285032030\r\n\r\n\r\n",
    "head_branch": "fix/dialectclass_camelcase",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix(db): Generated DialectClass referring to a raw pgp class (like incubator files) won't load because of missing CamelCase (#13867)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a8318912b45d36a3207",
    "number": 13866,
    "body": "Removed xdebug (will be back when Xdebug 2.7.0 is stable)\r\nEnabled apc\r\nUpgraded Zephir\r\nResolved https://github.com/phalcon/cphalcon/issues/13858\r\n",
    "head_branch": "nanobox",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixed #13858 - Nanobox config fails for php 7.3 (#13866)\n\n* Removed xdebug (will be back when Xdebug 2.7.0 is stable)\r\nEnabled apc\r\n\r\n* Added xdebug in comments"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212a8418912b45d36a3208",
    "number": 13864,
    "body": "Refactored security tests.\r\n\r\nRemoved get/set di test\r\nRemoved DestroyTokenCest (covered by CheckTokenCest)\r\nRemoved GetSessionTokenCest (covered by getRequestToken)\r\nRemoved GetTokenCest (covered by GetTokenAndKeyCest)\r\nRemoved GetTokenKeyCest (covered by GetTokenAndKeyCest)\r\nRemoved GetWorkFactorCest (covered by GetSetWorkFactorCest)\r\nRemoved GetDefaultHashCest (covered by GetSetDefaultHashCest)\r\nRemoved SetRandomBytesCest (covered by GetSetRandomBytesCest)\r\n\r\nSee https://github.com/phalcon/cphalcon/issues/13655\r\n",
    "head_branch": "security-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Refactored security tests from SecurityCest (#13864)\n\nRemoved get/set di test\r\nRemoved DestroyTokenCest (covered by CheckTokenCest)\r\nRemoved GetSessionTokenCest (covered by getRequestToken)\r\nRemoved GetTokenCest (covered by GetTokenAndKeyCest)\r\nRemoved GetTokenKeyCest (covered by GetTokenAndKeyCest)\r\nRemoved GetWorkFactorCest (covered by GetSetWorkFactorCest)\r\nRemoved GetDefaultHashCest (covered by GetSetDefaultHashCest)\r\nRemoved SetRandomBytesCest (covered by GetSetRandomBytesCest)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a8518912b45d36a3209",
    "number": 13863,
    "body": "this files have been removed.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13863 from remicollet/patch-1\n\nCleanup"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212a8618912b45d36a320a",
    "number": 13862,
    "body": "Hello!\r\n\r\n* Type: new feature + code quality\r\n* Link to issue: [#13647](https://github.com/phalcon/cphalcon/issues/13647)\r\n\r\nThis PR is a more aggressive alternative to [PR 13841](https://github.com/phalcon/cphalcon/pull/13841)\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] Another PR exists for this but its from me.  This is a more radical change to PDO::connect.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nI created another branch and PR to try a more aggressive refactor to go along with my default DSN changes.  I didn't want to screw up my other PR since I wasn't sure how this was going to turn out.  @niden perhaps this will address some of the comments from the other PR.",
    "head_branch": "pdo_radicaloptions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Pdo radicaloptions (#13862)\n\n* Redesign PDO adapter setup.\r\n\r\n* Refactor Phalcon\\Db\\Adapter\\Pdo::connect\r\n\r\n* Add dsnAttributes default starting point point to empty array.\r\n\r\n* Simplify PDO connect since the descriptor root level is now longer processed.\r\n\r\n* Redesign Pdo::connect to use base level of descriptor as dsn attributes.\r\n\r\n* Add debug message to Pdo::connect.\r\n\r\n* More debug messages.\r\n\r\n* More debug messages.\r\n\r\n* Unset dbname descriptor in sqlite pdo adapter after using its value for the dsn striing.\r\n\r\n* Remove debug messages.\r\n\r\n* Add flexibility to the PDO Sqlite adapter so that the database (file) can be specified using either 'dbname' or with the 'dsn' attributes.\r\n\r\n* Unset dialectClass in pdo::connect.\r\n\r\n* Remove PDO options sniffing."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a8718912b45d36a320b",
    "number": 13861,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue: This is a continuation of a larger effort to clean up the DI.  This related to a few recently merged PRs:\r\n\r\n* [PR 13846](https://github.com/phalcon/cphalcon/pull/13846)\r\n* [PR 13854](https://github.com/phalcon/cphalcon/pull/13854)\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] This PR deletes a public function in the DI which is no longer used internally within Phalcon.  Its possible that some third party code could rely on this in a plugin but I seriously doubt it.  Hopefully this is just dead code YAY!  After the Dispatcher is refactored according to the commented notes within that class then the creation of some new tests will need to be evaluated.\r\n\r\nThrough the PR mentioned in the top portion of this PR I have set the stage for this \"was fresh\" code to be removed.  This also tightens up the DI interface.  After I or someone else refactors the Dispatcher base class then its likely that some new clever tests will need to be created.  For the moment this is just the next step in cleaning up the code quality and API.",
    "head_branch": "di_removefresh",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove all 'fresh' code from the DI (since its no longer needed for the dispatcher hack). (#13861)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a8918912b45d36a320c",
    "number": 13860,
    "body": "Provided PHP 7.3 support. See: https://github.com/phalcon/cphalcon/issues/13847",
    "head_branch": "feature/13847/support-php73",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13860 from phalcon/feature/13847/support-php73\n\nProvide the ability to build Phalcon using PHP 7.3"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a8a18912b45d36a320d",
    "number": 13859,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nTests showing warning that apc needs to be enabled.\r\nEnabled apc in php.ini\r\n\r\nThanks\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update boxfile.7.2.yml (#13859)\n\nTests showing warning that apc needs to be enabled.\r\nEnabled apc in php.ini"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212a8b18912b45d36a320e",
    "number": 13854,
    "body": "…a handler hash cache.\r\n\r\nHello!  This is another proof of concept PR\r\n\r\n* Type: code quality\r\n* Link to issue: #13853\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ]  I did not write tests for this because a large refactor of the Dispatcher is needed.  This is only to remove one small wart.  Creating tests at this time would be premature.\r\n\r\nThis PR is attempting to solve the use of `DI::wasFreshInstance` in `Phalcon\\Dispatcher`.  I think that `DI::wasFreshInstance` should be completely removed in 4.0.x since it is only used in this one place for this hack.  I'm attempting to see if a hash hit map of all handlers seen could be used instead of the use of `wasFreshInstance`.\r\n\r\nI'm attempting to understand everything that would need to be changed to get the Dispatcher to run initialize first every time as first began by @virgofx but wow is it some involved code.  I'm not sure that I'm setup to change something so large at this point.  So I'm starting small.  This PR may never be merged or I could also grow it to be more encompassing.",
    "head_branch": "dispatcher_handlercache",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Dispatcher handlercache (#13854)\n\n* Change use of Phalcon\\Dispatcher DI::wasFreshInstance to instead use a handler hash cache.\r\n\r\n* Fix broken Phalcon syntax.\r\n\r\n* Fix for invalid dispatcher handler."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212a8c18912b45d36a320f",
    "number": 13850,
    "body": "Hello!\r\n\r\n* Type: code removal\r\n* Link to issue: #13364 \r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nRemoved Beanstalkd/Queue from Phalcon (new implementation will come next version)\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T13364-beanstalk-removal",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "T13364 beanstalk removal (#13850)\n\n* [4.0.x] - Added unicode flag for email filter\r\n\r\n* [4.0.x] - Updating the ext folder\r\n\r\n* [4.0.x] - Added Arr helper class\r\n\r\n* Revert \"[4.0.x] - Added Arr helper class\"\r\n\r\nThis reverts commit f8153d32712755bad373e406088186cf84ba5c16.\r\n\r\n* Revert \"[4.0.x] - Updating the ext folder\"\r\n\r\nThis reverts commit 655eafec10ca761a48daafe3e2e49fbe97712865.\r\n\r\n* [#13364] - Bye bye beanstalk! We love you! Next version we will add a Queue adapter for more adaptations\r\n\r\n* [#13364] - Updated the changelog"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a8d18912b45d36a3210",
    "number": 13849,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #13844 \r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nFixed the compilation warnings\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T13844-mcall-undefined-errors",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "T13844 mcall undefined errors (#13849)\n\n* [4.0.x] - Added unicode flag for email filter\r\n\r\n* [4.0.x] - Updating the ext folder\r\n\r\n* [4.0.x] - Added Arr helper class\r\n\r\n* Revert \"[4.0.x] - Added Arr helper class\"\r\n\r\nThis reverts commit f8153d32712755bad373e406088186cf84ba5c16.\r\n\r\n* Revert \"[4.0.x] - Updating the ext folder\"\r\n\r\nThis reverts commit 655eafec10ca761a48daafe3e2e49fbe97712865.\r\n\r\n* [#13844] - Fixing mcall warnings in compilation\r\n\r\n* [#13844] - Updating ext"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212a8e18912b45d36a3211",
    "number": 13846,
    "body": "Hello! @virgofx @niden @sergeyklay \r\n\r\n* Type: new feature\r\n* Link to issue: This PR touches on a few other initiatives.\r\n\r\nThis is designed to help\r\n* [Pull Request 13112](https://github.com/phalcon/cphalcon/pull/13112)\r\n* [Issue 13440](https://github.com/phalcon/cphalcon/issues/13440)\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nLast night I read through issue #13440 for improving the DI to deal with process forking.  I realized that the `DI::get` method could be improved to allow for actual shared caching so possible that `DI::get` could be used through Phalcon instead of `DI::getShared` (in as many places as possible).  Next up was the `isFreshInstance` hack around and that lead me to @virgofx 's unmerged PR to fix an architectural flaw in how Phalcon initialized some objects.\r\n\r\nI see this PR being a companion to @virgofx 's PR.  Hopefully the entire \"isFreshInstance\" code can be deleted from the DI class as it is just a hack to fix a design flaw.\r\n\r\nMy goal with this PR is to allow a service that was set to shared to be treated the same if it was retrieved through `get` and `getShared`.  So I added shared cache short-circuiting in `get`.  In the initial commit there is a commented line for the desired behaviour but to not break things as they are right this moment I'm using the `getShared` method since it contains the fresh instance hacks.\r\n\r\nOne final thing.  This PR will change the behaviour of `DI::get` so that retrieving cached shared instances will not fire the `\"di:beforeServiceResolve\"` and `\"di:afterServiceResolve\"` events.  `getShared` already behaves this way so its really just treating `get` with shared services the same as `getShared`.",
    "head_branch": "digetcache_radical",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "DI::get shared caching - a more comprehensive solution (#13846)\n\n* Add DI::get shared caching.\r\n\r\n* Change exception message to match test.\r\n\r\n* Revert DI::get events manager check.\r\n\r\n* Fix comment in DI."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a8f18912b45d36a3212",
    "number": 13845,
    "body": "Hello!\r\n\r\nThis is a proof of concept for enhancing the DI::get for shared caching.  The behaviour in this version is slightly different because retrieving a shared instance with `::get` will not trigger the `di:afterServiceResolve` event.  I'm going to make another version that is a complete refactor of `::get`.\r\n\r\nThis is a proof of concept to help alleviate #13440 by creating a path for Phalcon to internally use `get` instead of `getShared`.  Its possible that there will be an edge case that will cause this new approach to not work out.",
    "head_branch": "digetcache",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212a9018912b45d36a3213",
    "number": 13841,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: [#13647](https://github.com/phalcon/cphalcon/issues/13647)\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nThis initial commit is an early proof-of-concept for providing automatic DSN values for each PDO adapter.  At the moment only the MySQL adapter is providing anything with `charset=utf8mb4`.  As far as the other included adapters postgres and sqlite don't seem to support that option.  The goal is to remove the need to specify the charset in PHP code for 99% of the users.  This will ease the learning curve as well as allow frameworks and skeletons to have an easier time.\r\n\r\n**NOTICE:** I'm trying something different by using a different forked branch for each PR.  If this change is acceptable then I'll make the change log entry to get this all of the way through.  In order to avoid merge conflicts this should be done as late as possible.  I hope to be able to have several of these going at once for higher throughput.",
    "head_branch": "13647",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212a9118912b45d36a3214",
    "number": 13840,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #13815\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change: \r\n\r\nChanged Volt compiler options with to `compiled` or `compile` prefix to be deprecated. Now use the key without the prefix. I'm simplifying the API.\r\n\r\n**NOTICE:** I'm trying something different by using a different forked branch for each PR.  If this change is acceptable then I'll make the change log entry to get this all of the way through.  In order to avoid merge conflicts this should be done as late as possible.  I hope to be able to have several of these going at once for higher throughput.",
    "head_branch": "13815",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[#13835] - Changed Volt compiler options. (#13840)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a9218912b45d36a3215",
    "number": 13839,
    "body": "…e dependency injector as the second parameter.\r\n\r\nHello!\r\n\r\n* Type: bug fix\r\n* Link to issue: [#11926](https://github.com/phalcon/cphalcon/issues/11926)\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nBack in Phalcon 2.0 the DI was changed to bind service functions to itself.  Before that it was necessary to use `use ($di)` in the function.  This is a minor tweak to remove the DI from being passed as the second argument in the view engine service functions.  Instead use `$this`.\r\n\r\n**NOTICE:** I'm trying something different by using a different forked branch for each PR.  If this change is acceptable then I'll make the change log entry to get this all of the way through.  In order to avoid merge conflicts this should be done as late as possible.  I hope to be able to have several of these going at once for higher throughput.",
    "head_branch": "11926",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[#11926] Changed view engine service closures to no longer receive th… (#13839)\n\n* [#11926] Changed view engine service closures to no longer receive the dependency injector as the second parameter.\r\n\r\n* Attempt to fix Volt engine integration test.\r\n\r\n* Bind view service closures to the DI, fix more tests.\r\n\r\n* Update CHANGELOG-4.0.md"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a9318912b45d36a3216",
    "number": 13838,
    "body": "Meh! \r\n\r\n* Type: new feature\r\n* Link to issue: [#13593](https://github.com/phalcon/cphalcon/issues/13593)\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] Tests will come in later commit or PR.\r\n\r\nDI Presets are a new take on the DI factory defaults.  You can instantiate a DI preset class directly or instead use the `configure` method on an existing DI.  The default for `configure` is to clobber any existing services but if `false` is passed as the second argument then the existing services can be preserved.  This is especially useful to allow third party developers to provide a more complete experience.  For example a plugin provided by composer could then be expected to provide a service which could be provided to the DI through the call `Dschissler\\MyPlugin\\Di\\Preset::configure($di, false)`\r\n\r\nThe Presets at a glance.\r\n\r\n```zephir\r\nnamespace Phalcon\\Di;\r\n\r\nuse Phalcon\\DiInterface;\r\n\r\ninterface PresetInterface\r\n{\r\n    public static function configure(<DiInterface> di, bool clobber = true);\r\n}\r\n```\r\n\r\n```zephir\r\nclass Web extends Di implements PresetInterface\r\n{\r\n\r\n\tpublic static function configure(<DiInterface> di, bool clobber = true)\r\n\t{\r\n\t\tlet services = [\r\n\t\t\t\"annotations\":        new Service(\"Phalcon\\\\Annotations\\\\Adapter\\\\Memory\", true),\r\n\t\t\t\"assets\":             new Service(\"Phalcon\\\\Assets\\\\Manager\", true),\r\n\t\t\t// and so on\r\n\t\t];\r\n\r\n\t\tfor serviceName, className in services {\r\n\t\t\tif clobber {\r\n\t\t\t\tdi->set(serviceName, className, true);\r\n\t\t\t} else {\r\n\t\t\t\tdi->attempt(serviceName, className, true);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic function __construct()\r\n\t{\r\n\t\tparent::__construct();\r\n\r\n\t\tself::configure(this);\r\n\t}\r\n}\r\n```\r\n\r\nThere is potential room for optimization by allowing the default `clobber` option to set all of the services directly or at least in one pass without calling an expensive function each time.  Other than potentially negligible performance impact (which can be mitigated) the presets are simply superior.\r\n\r\nAs an example I allow services to be set up many ways in my framework.  Here is a yaml snippet.\r\n\r\nI start with a vanilla DI and then load over it.  The presets are loaded with force/clobber off.  `cli.php` returns a function that is basically the same as a service provider class.  The directories ending with `/` have one service per file.  Do as you want.\r\n\r\n```yaml\r\nservice:\r\n- Perch\\Di\\Preset\\Cli\r\n- ./CliServiceProvider.php\r\n- ./cli.php\r\n- ./common/\r\n- ./cli/\r\n```\r\n\r\nIt could easily look like this.\r\n\r\n```yaml\r\nservice:\r\n- Perch\\Di\\Preset\\Cli\r\n- ./CliServiceProvider.php\r\n- Bobs\\Extension\\Di\\Preset\\User\r\n- Larrys\\Extension\\Di\\Preset\\Security\r\n```\r\n\r\nSo Bob's and Larry's presets from a package are run non-clobber/non-force.  You still get a chance to set them up manually but the package dudes can offer an easy path.  The trick is that for the non-zephir provided presets that you first need to run the composer autoload.  That can't be helped except to bake that earlier into your bootstrap.\r\n\r\n**NOTICE:** This is the first commit to this tech for seeking comments.  There is no change log entry yet because that would complicate merging and I don't expect this to be a painless change.  The tests are more involved, especially since the CLI factory default inherits from the base FD (which I don't believe is correct).\r\n\r\n@niden I'm now PRing from forked branches so that I can have several of these going at once.  As it nears completion I'll push in the conflicting bits.  I already have the changelog entry done which I'm keeping separately.\r\n\r\n- Added DI Presets, remove DI factory defaults. [#13593](https://github.com/phalcon/cphalcon/issues/13593)\r\n\r\n",
    "head_branch": "13593_preset",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212a9418912b45d36a3217",
    "number": 13837,
    "body": "Meh!\r\n\r\n* Type: new feature\r\n* Link to issue: [#13593](https://github.com/phalcon/cphalcon/issues/13593)\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nDI Presets are a new take on the DI factory defaults.  You can instantiate a DI preset class directly or instead use the `configure` method on an existing DI.  The default for `configure` is to clobber any existing services but if `false` is passed as the second argument then the existing services can be preserved.  This is especially useful to allow third party developers to provide a more complete experience.  For example a plugin provided by composer could then be expected to provide a service which could be provided to the DI through the call `Dschissler\\MyPlugin\\Di\\Preset::configure($di, false)`\r\n\r\nThe Presets at a glance.\r\n\r\n```zephir\r\nnamespace Phalcon\\Di;\r\n\r\nuse Phalcon\\DiInterface;\r\n\r\ninterface PresetInterface\r\n{\r\n    public static function configure(<DiInterface> di, bool clobber = true);\r\n}\r\n```\r\n\r\n```zephir\r\nclass Web extends Di implements PresetInterface\r\n{\r\n\r\n\tpublic static function configure(<DiInterface> di, bool clobber = true)\r\n\t{\r\n\t\tlet services = [\r\n\t\t\t\"annotations\":        new Service(\"Phalcon\\\\Annotations\\\\Adapter\\\\Memory\", true),\r\n\t\t\t\"assets\":             new Service(\"Phalcon\\\\Assets\\\\Manager\", true),\r\n\t\t\t// and so on\r\n\t\t];\r\n\r\n\t\tfor serviceName, className in services {\r\n\t\t\tif clobber {\r\n\t\t\t\tdi->set(serviceName, className, true);\r\n\t\t\t} else {\r\n\t\t\t\tdi->attempt(serviceName, className, true);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic function __construct()\r\n\t{\r\n\t\tparent::__construct();\r\n\r\n\t\tself::configure(this);\r\n\t}\r\n}\r\n```\r\n\r\nThere is potential room for optimization by allowing the default `clobber` option to set all of the services directly or at least in one pass without calling an expensive function each time.  Other than potentially negligible performance impact (which can be mitigated) the presets are simply superior.\r\n\r\n**NOTICE:** This is the first commit to this tech for seeking comments.  There is no change log entry yet because that would complicate merging and I don't expect this to be a painless change.  The tests are more involved, especially since the CLI factory default inherits from the base FD (which I don't believe is correct).\r\n\r\n@niden I'm now PRing from private branches so that I can have several of these going at once.  As it nears completion I'll push in the conflicting bits.  I already have the changelog entry done which I'm keeping separately.\r\n\r\n- Added DI Presets, remove DI factory defaults. [#13593](https://github.com/phalcon/cphalcon/issues/13593)",
    "head_branch": "13593_preset",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212a9518912b45d36a3218",
    "number": 13836,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: -\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [X] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [X] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nThis is a followup to #13821, adding the missing method to the interface. Compare https://github.com/phalcon/cphalcon/pull/13821#issuecomment-464663406\r\n\r\n",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "4.0.x: adding missing method isSent to interface ResponseInterface (#13836)\n\n* adding missing method to interface\r\n\r\n* adding fix mention: ResponseInterface::isSent"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a9718912b45d36a3219",
    "number": 13835,
    "body": "",
    "head_branch": "fix/install-mysql-57-on-travis",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Install MySQL 5.7 on Travis CI [skip appveyor] (#13835)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212a9818912b45d36a321a",
    "number": 13834,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #13815\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change: \r\n\r\nChanged Volt compiler options with to `compiled` or `compile` prefix to be deprecated. Now use the key without the prefix. I'm simplifying the API.\r\n\r\nThanks",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212a9918912b45d36a321b",
    "number": 13833,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue: #13687 \r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T13687-debug-hide-vars",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "T13687 debug hide vars (#13833)\n\n* [4.0.x] - Added unicode flag for email filter\r\n\r\n* [#13687] - Added testbed for quick testing using the server\r\n\r\n* [#13687] - Set the Utility as static\r\n\r\n* [#13687] - Adjusted tests\r\n\r\n* [#13687] - Corrected the change to the Utility class\r\n\r\n* [#13687] - Updating the changelog\r\n\r\n* [#13687] - Added Helper/Arr\r\n\r\n* [#13687] - Added tests for Arr\r\n\r\n* [#13687] - Corrections to the helper\r\n\r\n* [#13687] - Removing mysql 5.7 temporarily\r\n\r\n* [#13687] - Trying xenial build\r\n\r\n* [#13687] - Updating ext folder\r\n\r\n* Revert \"[#13687] - Updating ext folder\"\r\n\r\nThis reverts commit f18a967b4fa5e3a880f19673c9a430ee12631525.\r\n\r\n* Revert \"[#13687] - Trying xenial build\"\r\n\r\nThis reverts commit 07da593938b3e0e929f194984c16dd44bdc03cb4.\r\n\r\n* [#13687] - Refactored locations for url/utils\r\n\r\n* [#13687] - Updated references to url/utils\r\n\r\n* [#13687] - Trying the build with mysql5.7 again\r\n\r\n* [#13687] - Trying a different installation for mysql 5.7\r\n\r\n* [#13687] - Trying to get the installation going of mysql 5.7\r\n\r\n* [#13687] - Trying something different\r\n\r\n* [#13687] - Trying xenial\r\n\r\n* [#13687] - Re-enabling mysql; removing memcached\r\n\r\n* [#13687] - Adding again memcached in the setup\r\n\r\n* [#13687] - Removing xenial"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a9a18912b45d36a321c",
    "number": 13832,
    "body": "Hello!\r\n\r\n* Type: documentation\r\n\r\nIssue: phalcon/docs#1822\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nI want to generate better ide-stubs for personal usage.\r\nNow, during reading sources, I adding some info to docs.\r\n\r\nIf this example is suitable for project, I can continue to contribute\r\n\r\nThanks",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13832 from DrankUser/patch-1\n\nA little try to add @param tags to documentation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a9b18912b45d36a321d",
    "number": 13831,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #13742\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "feature/T13742-rename-url",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "renamed phalcon\\mvc\\url to phalcon\\url (#13831)\n\n* remamed phalcon\\mvc\\url to phalcon\\url\r\n\r\n* fixed phalcon\\url in phalcon\\di\\factorydefault"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a9c18912b45d36a321e",
    "number": 13830,
    "body": "I created a new clean PR with the alternate option that I presented in the last PR.  This will sit here for a few days until I have time to do the change log and to see about augmenting the tests.\r\n\r\nps. I wrote a metric shit load of zephir code today.",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Allow Config::merge to accept a basic array. (#13830)\n\n* Allow Config::merge to accept a basic array.\r\n\r\n* Use Phalcon\\Config\\Exception instead of base exception.\r\n\r\n* Add Config merge tests.\r\n\r\n* Updated changelog.\r\n\r\n* Add missing trait to config merge test.\r\n\r\n* Remove unused variable.\r\n\r\n* Add missing namespace use statement to config test."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a9d18912b45d36a321f",
    "number": 13828,
    "body": "new feature\r\nIssue #13610\r\n\r\nIf this code is acceptable then I will create a change log entry as well as possibly a test.\r\n\r\nI modified the Config::merge method to allow arrays.  I first tried the following but I decided to go with a ternary:\r\n\r\n```zephir\r\nlet config = is_array(config) ? new Config(configParam);\r\n```\r\n\r\nAnother way of doing it but it seems too much:\r\n\r\n```zephir\r\n\tpublic function merge(var configParam) -> <Config>\r\n\t{\r\n\t\tvar config;\r\n\r\n\t\tswitch typeof configParam {\r\n\t\t\tcase \"array\":\r\n\t\t\t\tlet config = new Config(configParam);\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"object\":\r\n\t\t\t\tlet config = configParam;\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new \\Exception(\"Invalid data type for merge.\");\r\n\t\t}\r\n\r\n\t\treturn this->_merge(config);\r\n\t}\r\n```\r\n\r\n",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212a9e18912b45d36a3220",
    "number": 13826,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #13336 \r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nWhen passing anything other than a string, array or null in `findFirst()` will throw an exception\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T13336-find-first-null",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "T13336 find first null (#13826)\n\n* [4.0.x] - Added unicode flag for email filter\r\n\r\n* [#13336] - Adjustments to handling parameters for findFirst with primary key\r\n\r\n* [#13336] - Updated the changelog"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212a9f18912b45d36a3221",
    "number": 13824,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #2182 \r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nAdded events before/after compile for Volt\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T2182-volt-events-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[#2182] - Updated the changelog and PR template"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212aa018912b45d36a3222",
    "number": 13822,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #12829 \r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nAdded `Dispatcher::toCamelCase()` method to use with `::getHandlerClass()` and `::getActiveMethod()`.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "camel-case-dispatcher-12829",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix tests"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212aa118912b45d36a3223",
    "number": 13821,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: -\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [X] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [X] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nCurrently isSent is only implemented by `Response` and not part of the `ResponseInterface`. Therefore calling it on instances of the interfaces is not a reasonable solution.\r\nAdjusting the interface would break backwards compatibility, so adding the check seems like the more sensible option.\r\n\r\n",
    "head_branch": "3.4.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212aa318912b45d36a3224",
    "number": 13820,
    "body": "Hello!\r\n\r\n* Type: bug fix / reorganization\r\n* Link to issue: #13819 \r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nRemoved the external libraries from the source. Kept CssMin/JsMin files but they just return the original content back. In future versions of the framework these filters will either be removed or replaced with in house implementations or by using other libraries with free licenses.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T13819-remove-minifiers",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[#13819] - Updated the changelog"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212aa418912b45d36a3225",
    "number": 13817,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/13811\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: \r\nAdded metadata to the `Phalcon\\Message` object and extended its interface.\r\nFixed `Phalcon\\Mvc\\Model` to use this new method instead of the old `setModel` function.\r\nModifed the tests accordingly\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T13811-related-model-messages",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added geSetMetaData test\nModified some unit tests to use metaData"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212aa618912b45d36a3226",
    "number": 13809,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #13808 \r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nRenaming objects based on #13808 \r\n\r\nThanks\r\n\r\n",
    "head_branch": "T13808-acl-rename",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[#13808] - Updating ext folder"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212aa718912b45d36a3227",
    "number": 13805,
    "body": "Hello!\r\n\r\nChanged default build param to support more processors then the one  it's currently building on. \r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/13143\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [X] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [X] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Updated CFLAG default build param"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212aa818912b45d36a3228",
    "number": 13800,
    "body": "Removed march to be cross cpu compatible. Mtune isn't used because of -march\r\nSolves #13143\r\n\r\nHello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212aaa18912b45d36a3229",
    "number": 13795,
    "body": "Version 4.0.0 alpha 2",
    "head_branch": "4.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13795 from phalcon/4.0.x\n\nv4.0.0-alpha.2"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212aab18912b45d36a322a",
    "number": 13794,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/13702\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change: Added `json`, `pcre` and `psr` as a mandatory modules.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "feature/add-deps",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212aac18912b45d36a322b",
    "number": 13793,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #13488 \r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nAdded the ability to preset filters for elements for the request object on a per scope (post, get, put) case.\r\n\r\nKudos @ekmst for the suggestion\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T13488-get-query-filtered-params",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[#13488] - Removed commas that crept in the .env file"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212aad18912b45d36a322c",
    "number": 13792,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: this aims to fix #13555\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nI have added `lcfirst(camelize())` for `_actionName` in `Phalcon\\dispatcher::getActiveMethod()`.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "CPH-13555-action-name",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "keep the actionName as set, do cache the methodName in `getActiveMethod` instead (use action mapping to cover Dispatcher `forward`ing case?)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212aaf18912b45d36a322d",
    "number": 13788,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n\r\nAdded unicode flag for email filtering\r\n",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[4.0.x] - Added unicode flag for email filter"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ab018912b45d36a322e",
    "number": 13787,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #13060 \r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nRewrote the `Filter` component. The old `Filter` component has been deprecated. The new component uses the `ServiceLocator` and `ServiceLocatorFactory` classes to offer a lightweight component for sanitizing content. Each sanitizer is a separate class, all of them lazy loaded to offer maxumum performance. The component accepts new sanitizers wither when it is instantiated or after it is instantiated. Each sanitizer can be called directly using the magic methods (the name of the sanitizer is the name of the mehtod) or the locator can call the all to familiar `sanitize` method to sanitize content (even arrays) with one or multiple sanitizers\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T13060-filter-service",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[#13060] - Correction to the method calls/parameters"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212ab118912b45d36a322f",
    "number": 13785,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #13352:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: Select tags can now render without any options\r\n\r\nThanks",
    "head_branch": "bugfix/select-no-options",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "#13352: Select elements can now render without any options"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212ab318912b45d36a3230",
    "number": 13784,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #13352:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: Select tags can now render without any options\r\n\r\nThanks\r\n\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ab418912b45d36a3231",
    "number": 13779,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: none\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [X] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [X] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\nImplement a missing method on Mvc\\Collection.\r\nEven if the mongo driver is deprecated, this is a bug.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ab518912b45d36a3232",
    "number": 13777,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\nImplement a missing method on Mvc\\Collection.\r\nEven if the mongo driver is deprecated, this is a bug.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix/missing-method",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ab618912b45d36a3233",
    "number": 13776,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue: #13758\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n\r\nSmall description of change: Phalcon\\Exception implements \\Throwable\r\n\r\nThanks\r\n\r\n",
    "head_branch": "feature/exeception-implements-throwable",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "#13758: `Phalcon\\Exception` implements `\\Throwable` (#13776)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ab818912b45d36a3234",
    "number": 13775,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue: #13749 \r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n\r\nSmall description of change: Removed all classes in the `Phalcon\\Mvc\\User` namespace. With the exception of `Phalcon\\Mvc\\User\\Plugin` as that has been moved to `Phalcon\\Plugin`.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "feature/remove-phalcon-mvc-user",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "#13749: Removed Phalcon\\Mvc\\User\\* (#13775)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212ab918912b45d36a3235",
    "number": 13774,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue: #13717\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n\r\nSmall description of change: Removed the portion of code that set default values that were already being set in the `Phalcon\\Cache\\Backend\\Redis::constructor`.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "feature/metadata-redis-cleanup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "#13717: Cleaned up the `Phalcon\\Mvc\\Model\\Metadata\\Redis` constructor (#13774)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212aba18912b45d36a3236",
    "number": 13772,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #13771 \r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nIntroduced service locator; Added tag locator for `Phalcon\\Html\\`\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T13771-service-locator",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "T13771 service locator (#13772)\n\n* [html] - Added service locator\r\n\r\n* [html] - New tag helper structure (anchor)\r\n\r\n* [#13771] - Added more html helpers and tests\r\n\r\n* [#13771] - Changed the exception message; Corrections based on review"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212abb18912b45d36a3237",
    "number": 13770,
    "body": "Hello!\r\n\r\n* Type: bug fix | code quality \r\n* Link to issue: #13769 \r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nDefault action is DENY now for no arguments in the function\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T13769-ACL-no-arguments-default-action-deny",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "T13769 acl no arguments default action deny (#13770)\n\n* [#13769] - Set default action to deny; Reorganized code\r\n\r\n* [#13769] - Test correction and additions\r\n\r\n* [#13769] - Made properties private\r\n\r\n* [#13769] - Corrected scope of variables"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212abc18912b45d36a3238",
    "number": 13767,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n\r\nSmall description of change:\r\n\r\n- Provide an ability to use Phalcon on Windows using PHP 7.3\r\n- Use latest stable Zephir \r\n\r\nThanks",
    "head_branch": "feaute/win-73",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Build Phalcon for PHP 7.3 on AppVeyor"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212abd18912b45d36a3239",
    "number": 13762,
    "body": "Looking at the code for Config\\Factory I can see that if it's given a string then it'll attempt to determine the adaptor from the extension. Grouped is able to take a list of filenames as strings and also uses Factory.\r\n\r\nHowever it always converts those strings to arrays using the default adaptor! This means when it's passed down to factory that it doesn't behave quite as you'd expect if you were to imagine the array given the Grouped as an array of input parameters for Factory.\r\n\r\nI don't think it's the end of the world but as an aggregate proxy for Factory Grouped is losing something in translation.\r\n\r\nKeep in mind that: I haven't tested any of this including the original assertion. I don't really know zephir's syntax (if it even supports continue or === null). This would change the behaviour of the library.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Allow grouped config loader to determine adaptor from file extension. (#13762)\n\n* Pass through string handling when adapter not set.\r\n\r\n* Update changelog.\r\n\r\n* Updated test for coverage of new feature but I doubt it conforms to standards (two tests doing one thing esspecially).\r\n\r\n* Fix to use the right class name.\r\n\r\n* Whitespace fix.\r\n\r\n* Fix the build.\r\n\r\n* Less of a handfull parameter passing.\r\n\r\n* Switch to using empty string rather than null."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212abe18912b45d36a323a",
    "number": 13759,
    "body": "Hello!\r\n\r\n* Type: feature\r\n* Link to issue: #13758 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n\r\nDefault action for the ACL is now `DENY`\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T13758-acl-default-access-level",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[#13758] - Merge branch '4.0.x' into T13758-acl-default-access-level\n\n* 4.0.x:\n  Add to changelog and split out tests\n  Fix for #13724\n  Update docblocks\n  Fix most of the issues\n  PHPCS fixes\n  Final Cli Console tests\n  __get() test and Set Argument test working. Still to do HandleCest\n  Getting there on Cli\\Console tests."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212abf18912b45d36a323b",
    "number": 13757,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: -\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n\r\nSmall description of change: \r\n\r\n- Use xdebug only with stable PHP\r\n- Fixed build on Travis CI \r\n- Fixed `Phalcon\\Cache\\Backend\\Apcu::get` to remove irrelevant check\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix/use-proper-xdebug",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Disable build on PHP master branch [skip appveyor]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ac018912b45d36a323c",
    "number": 13755,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue: -\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n\r\nSmall description of change:\r\n\r\n-  Cleaned up and refactor Volt parser\r\n- Fixed C compiler warnings\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix/cleanup-volt-parser",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Disable xdebug on PHP 7.3 to see real errors II"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ac118912b45d36a323d",
    "number": 13754,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue: -\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n\r\nSmall description of change: Cleaned up and refactor Volt tests\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix/refactor-volt-tests",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Cleaned up and refactor Volt tests"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ac218912b45d36a323e",
    "number": 13753,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue: -\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n\r\nSmall description of change: Drop PHP 5 support from Volt.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix/drop-php5-support-from-volt",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Drop PHP 5 support from Volt"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ac318912b45d36a323f",
    "number": 13752,
    "body": "Hello!\r\n\r\n* Type: code quality | testing\r\n* Link to issue: -\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n\r\nSmall description of change:\r\n\r\n- Removed no longer used PHP 5.x stuff from Volt parser\r\n- Cleaned up and refactor Volt tests\r\n- Fixed C compiler warnings\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix/volt-tests",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ac418912b45d36a3240",
    "number": 13751,
    "body": "Hello!\r\n\r\n* Type: code quality | documentation\r\n\r\nSmall description of change: Fixed session adapters docblock\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix/session-docblock",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fixed session adapters docblock"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ac518912b45d36a3241",
    "number": 13748,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #13007 \r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nBetter implementation for `triggerError`\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T13007-nativearray-missing-patch",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "T13007 nativearray missing patch (#13748)\n\n* [4.0.x] - PHPCS fix\r\n\r\n* [4.0.x] -\r\n\r\n* Revert \"[4.0.x] -\"\r\n\r\nThis reverts commit a82810440ad87585a07c545f1fbe42c73766926b.\r\n\r\n* Revert \"Revert \"[4.0.x] -\"\"\r\n\r\nThis reverts commit a438074678371dd051a45553d870f46016087c80.\r\n\r\n* [4.0.x] - Code cleanup\r\n\r\n* [4.0.x] - Added match to travis for issue branches\r\n\r\n* [#13007] - Corrected implementation of not found and added test\r\n\r\n* [#13007] - Corrected errors and exception"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212ac618912b45d36a3242",
    "number": 13747,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #13718, #13520\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n\r\nSmall description of change:\r\n\r\nFixed `Phalcon\\Session\\Manager` to not interact with `$_SESSION` variable if the session has not been started.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix/session-manager-start",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Fixed Security\\SecurityCest"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212ac718912b45d36a3243",
    "number": 13746,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #13718\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR\r\n\r\nSmall description of change:\r\n\r\nFixed session adapters to properly implement [`SessionHandlerInterface::write`](http://php.net/manual/en/sessionhandlerinterface.write.php).\r\n```\r\nsession_write_close(): Session callback expects true/false return value\r\n```\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix/session-implementation",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Fixed session adapters to properly implement SessionHandlerInterface::write"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212ac818912b45d36a3244",
    "number": 13745,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #13718, #13520\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: fixed session segmentation fault on start\r\n\r\nThanks\r\n",
    "head_branch": "fix/session-start",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ac918912b45d36a3245",
    "number": 13741,
    "body": "Hello!\r\n\r\n* Type: code quality | documentation\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change: Fixed Phalcon\\Acl docblock\r\n\r\nThanks\r\n",
    "head_branch": "acl-docblock",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fixed acl docblock"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212acb18912b45d36a3246",
    "number": 13735,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #13679\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: Improving file cache performance.\r\nThanks",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212acc18912b45d36a3247",
    "number": 13734,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nPHPCS mostly\r\n\r\nThanks\r\n\r\n",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "4.0.x Tests code cleanup (#13734)\n\n* [4.0.x] - PHPCS fix\r\n\r\n* [4.0.x] -\r\n\r\n* Revert \"[4.0.x] -\"\r\n\r\nThis reverts commit a82810440ad87585a07c545f1fbe42c73766926b.\r\n\r\n* Revert \"Revert \"[4.0.x] -\"\"\r\n\r\nThis reverts commit a438074678371dd051a45553d870f46016087c80.\r\n\r\n* [4.0.x] - Code cleanup"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212acd18912b45d36a3248",
    "number": 13730,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #13007 \r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\n- Added a new parameter in the constructor array `triggerError`. If set, then the component will trigger an error `E_USER_ERROR` if the key is not found.\r\n- Added  `notFound()` method which returns the key requested if not found. The method can be overriden when extending the class, returning what the developer needs\r\nThanks\r\n\r\n",
    "head_branch": "T13007-nativearray-missing",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge branch '4.0.x' into T13007-nativearray-missing"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212ace18912b45d36a3249",
    "number": 13723,
    "body": "Hello!\r\n\r\n* Type: code quality \r\n* Link to issue: - \r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nMostly test changes\r\n\r\nThanks\r\n\r\n",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[4.0.x] - Work on the images tests"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212acf18912b45d36a324a",
    "number": 13722,
    "body": "Hello!\r\n\r\n* Type: code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [X] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [X] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\n-  Removed no longer supported PHP versions from the `README.md`\r\n- Removed G+ and Slack links from the `CONTRIBUTING.md` (phalcon/docs#1959)\r\n- Remove no longer needed `CODECOV_TOKEN` to upload coverage data\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix/cleaned-up-docs",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Remove no longere needed CODECOV_TOKEN to upload coverage data"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ad018912b45d36a324b",
    "number": 13721,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [ ] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ad118912b45d36a324c",
    "number": 13720,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: -\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md).\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: Changed the `Phalcon\\Version::get()` to follow [semantic versioning](https://semver.org/)\r\n\r\nThanks\r\n\r\n",
    "head_branch": "feature/follow-semver",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Do not produce x.y.z-sprecial.0 versions"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212ad218912b45d36a324d",
    "number": 13719,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/13654\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\nAdded new tests for the missing ones for Cli/Console (learned a lot on the way). This includes a minor fix where console->handle() wasn't letting the dispatcher know which module it had used so the test was failing and a readme tweak.\r\n\r\nA few caveats\r\n* Should the line HandleCest.php:151 be required to make it work? ```$console->dispatcher->setNamespaceName(\"Phalcon\\\\Test\\\\Modules\\\\Backend\\\\Tasks\");``` seems odd behaviour to me.\r\n* I didn't know what the convention was with docblocks and authors (I haven't read enough of the code), so I added my name below Phalcon Team so you know who to blame, I can change that if that is wrong.\r\n* I don't know how code coverage is tested/where the results are so I didn't check that I've tested everything.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "phalcon-4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add to changelog and split out tests"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212ad318912b45d36a324e",
    "number": 13713,
    "body": "Fixed #13712 and added unit test.",
    "head_branch": "origin/4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update MicroController.php"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ad518912b45d36a324f",
    "number": 13711,
    "body": "Extra new line\r\n\r\n",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[4.0.x] - PHPCS fix"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ad618912b45d36a3250",
    "number": 13710,
    "body": "Extra new line\r\n\r\n",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[4.0.x] - PHPCS fix"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ad718912b45d36a3251",
    "number": 13709,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nACL Tests\r\n\r\nThanks\r\n\r\n",
    "head_branch": "Acl-Tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[Acl] - ACL tests and minor corrections"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212ad818912b45d36a3252",
    "number": 13708,
    "body": "Closing file will take some time causing the date time not to match.\r\n",
    "head_branch": "origin/4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Optimized test, store time before logging"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ad918912b45d36a3253",
    "number": 13707,
    "body": "Fixed crypt tests. Removed Exception placeholders and fixed crypt tests. (#13655)\r\n",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixed and refactored crypt test"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212ada18912b45d36a3254",
    "number": 13706,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: Changed the `Phalcon\\Tag::renderTitle()` parameters such as `Phalcon\\Tag::getTitle()`\r\n\r\nThanks\r\n\r\n",
    "head_branch": "feature/tag-renderTitle",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "PHPCS fix"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212adb18912b45d36a3255",
    "number": 13699,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: -\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: Use latest Zephir on AppVeyor.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix/install-zephir-on-appveyor",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Correct AppVeyor's EnableExtension"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ade18912b45d36a3256",
    "number": 13698,
    "body": "",
    "head_branch": "feature/release-4.0.0-alpha1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Fix parser version on appveyor"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212adf18912b45d36a3257",
    "number": 13696,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: [#13613](https://github.com/phalcon/cphalcon/issues/13613)\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Associative array for the result of the Request :: getUploadedFiles method"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212ae018912b45d36a3258",
    "number": 13695,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #13459\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: Removed `select`, and `select_static` from array helper in Volt compiler as they accept multiple arguments which can cause the issue presented in #13459 \r\n\r\nThanks\r\n\r\n",
    "head_branch": "bugfix/volt-tag-array-helper",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixes #13459: Removed tags that accept multiple args from array helper (#13695)\n\nRemoved `select`, and `select_static` from array helper."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212ae118912b45d36a3259",
    "number": 13694,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #13497\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: `libmemcached` no longer incorrectly returns \"empty\" values as null\r\n\r\nThanks\r\n\r\n",
    "head_branch": "bugfix/libmemcached-empty-values-as-null",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Updated/Refactored Libmemcached tests"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212ae218912b45d36a325a",
    "number": 13693,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #13464\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n-  [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: httpOnly is no longer initialised with a value\r\n\r\nThanks\r\n\r\n",
    "head_branch": "bugfix/cookie-default-httpOnly",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "_httpOnly has a default value of false"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212ae318912b45d36a325b",
    "number": 13692,
    "body": "allowEmptyStrings and skipAttributes will follow the column mapping from now on.\r\n\r\nHello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #12975, #13477, #2374\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change: Moved the column mapping decision to before the field existence check.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "bugfix/model-column-mapping-improvements",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixes #12975, #13477: allowEmptyStrings & skipAttributes adhere col map\n\nallowEmptyStrings and skipAttributes will follow the column mapping from now on."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212ae518912b45d36a325c",
    "number": 13691,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #13495 \r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nFixed the double slash issue again\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T13495-url-double-slashes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[#13495] - Merge branch '4.0.x' into T13495-url-double-slashes\n\n* 4.0.x:\n  Fixes #12975, #13477: allowEmptyStrings & skipAttributes adhere col map"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212ae618912b45d36a325d",
    "number": 13690,
    "body": "Type: new feature\r\nLink to issue:\r\n\r\n#13679\r\nfileCache subdir feature",
    "head_branch": "3.4.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ae718912b45d36a325e",
    "number": 13689,
    "body": " Type:  new feature \r\nLink to issue:\r\n\r\n#13679  \r\nfileCache subdir feature\r\n\r\n\r\n",
    "head_branch": "3.4.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ae818912b45d36a325f",
    "number": 13688,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #13660 \r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T13660-volt-macro-parameter-null",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[#13660] - Merge branch '4.0.x' into T13660-volt-macro-parameter-null\n\n* 4.0.x:\n  Fixes #12975, #13477: allowEmptyStrings & skipAttributes adhere col map"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212ae918912b45d36a3260",
    "number": 13686,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue: #13684 \r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nUpdated license/header in all files\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T13684-license-and-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[#13684] - Merge branch '4.0.x' into T13684-license-and-tests\n\n* 4.0.x:\n  Fixes #12975, #13477: allowEmptyStrings & skipAttributes adhere col map"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212aea18912b45d36a3261",
    "number": 13683,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #13341 \r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nFixed the `type=\"text/javascript\"` for HTML5 doctypes\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T13341-type-javascript",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[#13341] - Merge branch '4.0.x' into T13341-type-javascript\n\n* 4.0.x:\n  Fixes #12975, #13477: allowEmptyStrings & skipAttributes adhere col map"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212aeb18912b45d36a3262",
    "number": 13682,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #13680 \r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nAdded `Html\\Breadcrumbs component, offering an easy way to create breadcrumbs for your application\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T13680-breadcrumbs-component",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[#13680] - Merge branch '4.0.x' into T13680-breadcrumbs-component\n\n* 4.0.x:\n  Fixes #12975, #13477: allowEmptyStrings & skipAttributes adhere col map"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212aec18912b45d36a3263",
    "number": 13681,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #12295 \r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nCreated a new \"proxy\" class `Phalcon\\Container`. This class implements PSR-11 and can be used instead of the `DI` container. Note that you still have to create the DI container and set all services into it and then inject that container in this container (I got dizzy writing this).\r\n\r\nThis is not the full implementation, a \"proxy\" for now - more on that in a future version. \r\n\r\nThanks\r\n\r\n",
    "head_branch": "T12295-PSR-11",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[#12295] - Removed the final from the class definition"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212aed18912b45d36a3264",
    "number": 13678,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #13552 \r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[4.0.x] - Another correction to the test"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212aee18912b45d36a3265",
    "number": 13677,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/13661\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change: Check if we have relations for array. If not- continue to setter\r\n\r\nThanks\r\n\r\n",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update CHANGELOG-4.0.md"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212af018912b45d36a3266",
    "number": 13676,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #10406 \r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T10406-model-collection-interfaces",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212af118912b45d36a3267",
    "number": 13675,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #12676 \r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nAdded more methods to interfaces\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T12676-add-methods-to-interfaces",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[#12676] - Merge branch '4.0.x' into T12676-add-methods-to-interfaces\n\n* 4.0.x:\n  Fixes #12975, #13477: allowEmptyStrings & skipAttributes adhere col map"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212af218912b45d36a3268",
    "number": 13673,
    "body": "Hello!\r\n\r\n* Type: bug fix/new feature\r\n* Link to issue: #12833 #11341 #13535 \r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nThe session component has been rewritten to implement the `SessionHandlerInterface` interface. \r\n\r\nThanks\r\n\r\n",
    "head_branch": "T12833-session-interface",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[#12833] - Updated the changelog"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212af318912b45d36a3269",
    "number": 13671,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n\r\nUpdating the included nanobox config to use the latest 4.0.x mongodb version (using the offical docker image) under the assumption that we should be testing in environments that include the latest mongo version rather than an out of date version.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "4.0.x_update-nanobox-mongo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use the official docker image for the latest mongodb version rather than 3.0 which was end of life 10 months ago."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212af418912b45d36a326a",
    "number": 13669,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #12836 \r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\n`setHeaders` in `Phalcon\\Http\\Response` now merges the headers with any pre-existing ones in the internal collection\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T12836-set-headers",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge branch '4.0.x' into T12836-set-headers"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212af518912b45d36a326b",
    "number": 13668,
    "body": "Hello!\r\n\r\n* Type: new feature \r\n* Link to issue: #13639 \r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\n\r\nPhalcon\\Acl\\Resource -> Phalcon\\Acl\\Subject\r\nPhalcon\\Acl\\ResourceInterface -> Phalcon\\Acl\\SubjectInterface\r\nPhalcon\\Acl\\ResourceAware -> Phalcon\\Acl\\SubjectAware\r\n\r\nPhalcon\\Acl\\Role -> Phalcon\\Acl\\Operation\r\nPhalcon\\Acl\\RoleInterface -> Phalcon\\Acl\\OperationInterface\r\nPhalcon\\Acl\\RoleAware -> Phalcon\\Acl\\OperationAware\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T13639-acl-resource-rename",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge branch '4.0.x' into T13639-acl-resource-rename"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212af618912b45d36a326c",
    "number": 13667,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #12921 \r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nRemoved the `session` service from the `FactoryDefault` container\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T12921-remove-session-from-di-factory",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[#12921] - Changes to the changelog; corrected test"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212af718912b45d36a326d",
    "number": 13666,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #13061\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nAligned Http\\Reuest interfaces\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T13061-request-interface-sync",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[#13061] - Updated changelog"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212af818912b45d36a326e",
    "number": 13663,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #13552 \r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: Fixed `Phalcon\\Mvc\\Model\\Query::_prepareSelect` overwriting columns with the same alias. This specific issue only appeared when you were selecting columns across \r\ndifferent tables with the same column name. The generated alias didn't factor in the different tables and any columns with the same name would get overridden. \r\n\r\nTake this example from `Phalcon\\Test\\Integration\\Paginator\\Adapter::testIssue13552`. This snippet would generate the SQL below when the paginator tries to find out the total items.\r\n```php\r\n$builder = $modelsManager->createBuilder()\r\n    ->columns(\"Robots.*\")\r\n    ->from(['Robots' => Robots::class])\r\n    ->join(RobotsParts::class, \"RobotsParts.robots_id = Robots.id\", \"RobotsParts\", \"LEFT\")\r\n    ->join(RobotsParts::class, \"RobotsParts_2.robots_id = Robots.id\", \"RobotsParts_2\", \"LEFT\")\r\n    ->groupBy('Robots.id, RobotsParts.id, RobotsParts.parts_id, RobotsParts_2.id, RobotsParts_2.parts_id')\r\n    ->having('Robots.id > 2');\r\n\r\n$paginate = (new QueryBuilder([\r\n    \"builder\" => $builder,\r\n    \"limit\"   => 1,\r\n    \"page\"    => 2\r\n]))->paginate();\r\n```\r\n\r\nBefore:\r\n```sql\r\nSELECT DISTINCT \r\n    `RobotsParts_2`.`id` AS `id`,\r\n     `RobotsParts_2`.`parts_id` AS `parts_id`\r\nFROM `robots` AS `Robots`\r\nLEFT JOIN `robots_parts` AS `RobotsParts` \r\n    ON `RobotsParts`.`robots_id` = `Robots`.`id`\r\nLEFT JOIN `robots_parts` AS `RobotsParts_2` \r\n    ON `RobotsParts_2`.`robots_id` = `Robots`.`id`\r\nGROUP BY\r\n   `Robots`.`id`,\r\n   `RobotsParts`.`id`,\r\n   `RobotsParts`.`parts_id`,\r\n   `RobotsParts_2`.`id`,\r\n   `RobotsParts_2`.`parts_id`\r\nHAVING `Robots`.`id` > 2\r\n```\r\n\r\nAfter:\r\n```sql\r\nSELECT DISTINCT \r\n    `Robots`.`id` AS `Robots_id`,\r\n    `RobotsParts`.`id` AS `RobotsParts_id`,\r\n    `RobotsParts`.`parts_id` AS `RobotsParts_parts_id`,\r\n    `RobotsParts_2`.`id` AS `RobotsParts_2_id`,\r\n    `RobotsParts_2`.`parts_id` AS `RobotsParts_2_parts_id`\r\nFROM `robots` AS `Robots`\r\nLEFT JOIN `robots_parts` AS `RobotsParts` \r\n    ON `RobotsParts`.`robots_id` = `Robots`.`id`\r\nLEFT JOIN `robots_parts` AS `RobotsParts_2` \r\n    ON `RobotsParts_2`.`robots_id` = `Robots`.`id`\r\nGROUP BY\r\n   `Robots`.`id`,\r\n   `RobotsParts`.`id`,\r\n   `RobotsParts`.`parts_id`,\r\n   `RobotsParts_2`.`id`,\r\n   `RobotsParts_2`.`parts_id`\r\n```\r\n\r\nThanks\r\n\r\n",
    "head_branch": "bugfix/issue-13552",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge branch '4.0.x' into bugfix/issue-13552"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212af918912b45d36a326f",
    "number": 13659,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\n\r\nThanks\r\n\r\n",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "More corrections ot the interfaces"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212afa18912b45d36a3270",
    "number": 13658,
    "body": "Implemented all Security/Random Cast tests. Resolves refactoring RandomCest.php. See #13655\r\n",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Applied phpcs rules"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212afc18912b45d36a3271",
    "number": 13657,
    "body": "Small step for #13655\r\n",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge remote-tracking branch 'upstream/4.0.x' into 4.0.x"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212afd18912b45d36a3272",
    "number": 13656,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: https://github.com/phalcon/cphalcon/pull/12379\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nCreated new component `Phalcon\\Html\\Tag`. It duplicates the functionality of `Phalcon\\Tag` but does not use static calls (it has to be instantiated).\r\n\r\nAll credits go to @SidRoberts Sadly we could not cherry pick https://github.com/phalcon/cphalcon/pull/12379. Instead of doing a full replacement of the current `Tag` component, we created this one to give the community more time to adapt to the new one.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T12379-html-tag",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[#12379] - Corrected license docblock"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212afe18912b45d36a3273",
    "number": 13653,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/10957, https://github.com/phalcon/cphalcon/issues/13368\r\n* Link to existing PR: https://github.com/phalcon/cphalcon/pull/10985\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: \r\n- Added `Phalcon\\Paginator\\RepositoryInterface` for repository the current state of `paginator` and also optional sets the aliases for properties repository. \r\n- Added bind support to `Phalcon\\Mvc\\Model\\Query\\Builder`. The Query Builder has the same methods as `Phalcon\\Mvc\\Model\\Query`; `getBindParams`, `setBindParams`, `getBindTypes` and `setBindTypes`. [#13368](https://github.com/phalcon/cphalcon/issues/13368)\r\n\r\nIt is worth noting I made a few changes between the original PR https://github.com/phalcon/cphalcon/pull/10985 and this one. I've updated all the property names to what they were changes to in https://github.com/phalcon/cphalcon/issues/13492. I also turfed the `totalPages` property as it was made redundant by the pre-existing property `last`. \r\n\r\nAll of the pagination adapter constructors received a spring clean as well.\r\n\r\nThanks \r\n\r\n",
    "head_branch": "feature/paginator-repository",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Updated changelog"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212aff18912b45d36a3274",
    "number": 13651,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #13491 \r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nCorrected the interfaces: name of variables as well as the type\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T13491-fix-validator-interface",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[#13491] - Corrected interfaces"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212b0018912b45d36a3275",
    "number": 13650,
    "body": "Hello!\r\n\r\nTried to fix some integration tests. I'm not sure how to test offset and initialise test, maybe we can discuss this on discord.\r\n",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixed styling using phpcbf"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212b0118912b45d36a3276",
    "number": 13649,
    "body": "Fixed typo",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update README.md\n\nFixed typo"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212b0218912b45d36a3277",
    "number": 13644,
    "body": "",
    "head_branch": "fix/di-typehints",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Update di.zep"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212b0318912b45d36a3278",
    "number": 13643,
    "body": "CONSTRAINT must be unique\r\n\r\nHello!\r\n\r\nType: bug fix\r\nLink to existing PR: [#12629](https://github.com/phalcon/cphalcon/pull/12629)\r\nIn raising this pull request, I confirm the following:\r\n\r\n- [x]  I have read and understood the Contributing Guidelines?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x]  I wrote some tests for this PR.\r\nSmall description of change:\r\n\r\nPostgresql in CONSTRAINT must specify a unique name for this CONSTRAINT, otherwise it leads to mistakes.\r\n\r\n> ERROR: SQLSTATE [42P07]: Duplicate table: 7 ERROR: relation\" PRIMARY \"already exists\r\n\r\nThanks",
    "head_branch": "bugfix/postgres-duplicate-table-error",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixed failing Postgresql test"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212b0418912b45d36a3279",
    "number": 13642,
    "body": "Hello!\r\n\r\n* Type: cherry-picked existing PR\r\n* Link to PR: [#12518](https://github.com/phalcon/cphalcon/pull/12518)\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: Created a retainer for the current session token in order to not break checkToken functionality if getToken is called before. Also fixed the security tests segmentation faults.\r\n\r\nThanks",
    "head_branch": "feature/security-token-retention",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixed Security Tests segmentation fault\n\nTrying to append an element to an undefined variable (as demonstrated in the example below) will generate a segmentation fault.\n```zep\n_SESSION['key'] = 'value';\n```\n`$_SESSION` isn't available in the PHP CLI so we need to define it ourselves in `SecurityCest:_before`"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212b0518912b45d36a327a",
    "number": 13641,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue: #12098 \r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nRemoved deprecated code based on the list\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T12098-remove-deprecated-code",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[#12098] - Corrected interfaces and tests"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212b0718912b45d36a327b",
    "number": 13640,
    "body": "Hello!\r\n\r\n* Type: refactoring\r\n* Link to issue: #12082 \r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nRenamed `Phalcon\\Assets\\Resource` and related methods to `Assets`\r\nThanks\r\n\r\n",
    "head_branch": "T12082-resource-rename-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge branch '4.0.x' into T12082-resource-rename-2"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212b0818912b45d36a327c",
    "number": 13638,
    "body": "",
    "head_branch": "fix/codecov-token",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added Codecov token [skip appveyor]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212b0918912b45d36a327d",
    "number": 13637,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: \r\n  * https://github.com/phalcon/cphalcon/issues/13006\r\n  * https://github.com/phalcon/cphalcon/issues/12548\r\n  * https://github.com/phalcon/cphalcon/issues/1731\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nIn order to prevent the SQL Column Aliases override in _root_ select, by the sub-queries, I have scoped the sub-queries aliases into another entries in `_sqlColumnAliases`, which is now and array of set-of-aliases entries. The `_sqlColumnAliases[0]` contains the aliases of the root query, the `_sqlColumnAliases[1]` contains the set of aliases of the _last_ parsed sub-query on level 1, and so on.\r\n\r\nThanks",
    "head_branch": "scope-sql-col-aliases",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge branch '4.0.x' into scope-sql-col-aliases"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212b0a18912b45d36a327e",
    "number": 13636,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #13438  #13071 #13292 \r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nRewrote the Logger component to fully implement the PSR-3 interface. \r\n\r\nThe component has been rewritten as follows: \r\n- Main class `Logger` is instantiated\r\n- An adapter (or more) can be attached to the logger. This allows multiple adapters to be attached to it and as a result, this renders the `Logger\\Multiple` obsolete\r\n- Each adapter has a formatter \r\n- Allows to exclude certain adapters if necessary for a single call.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T13438-PSR-3-implementation-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[#13438] - Added docblock"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212b0b18912b45d36a327f",
    "number": 13634,
    "body": "@sergeyklay \r\n\r\nProgress check and comments so far.\r\n\r\nNote this is on a different branch which will be deleted when this work is completed.",
    "head_branch": "T13438-PSR-3-implementation-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212b0c18912b45d36a3280",
    "number": 13632,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/13618\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [X] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [X] I have checked that another pull request for this purpose does not exist.\r\n\r\nSmall description of change:\r\n\r\nAdd getStatusCode() in Phalcon\\Http\\ResponseInterface.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "feature/add-get-status-code-in-response-interface",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add getStatusCode() method in Phalcon\\Http\\ResponseInterface becouse is need get status code in Response object."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212b0d18912b45d36a3281",
    "number": 13630,
    "body": "Hello!\r\n\r\n* Type: cherry-picked existing PR\r\n* Link to PR: [#12375](https://github.com/phalcon/cphalcon/pull/12375)\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [X] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [X] I have checked that another pull request for this purpose does not exist.\r\n- [X] I wrote some tests for this PR.\r\n\r\nSmall description of change: CLI parameters now work like MVC parameters\r\nThanks",
    "head_branch": "feature/cli-params",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "CLI parameters now work like MVC parameters.\n\nCo-authored-by: Sid Roberts <sid@sidroberts.co.uk>"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212b0e18912b45d36a3282",
    "number": 13629,
    "body": "Hello!\r\n\r\n* Type: cherry-picked existing PR\r\n* Link to PR: [#12425](https://github.com/phalcon/cphalcon/pull/12425)\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [X] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [X] I have checked that another pull request for this purpose does not exist.\r\n- [X] I wrote some tests for this PR.\r\n\r\nSmall description of change: Added response handler to `Phalcon\\Mvc\\Micro`, `Phalcon\\Mvc\\Micro::setResponseHandler`, to allow use of a custom response handler. [#12452](https://github.com/phalcon/cphalcon/pull/12452)\r\n\r\nThanks\r\n\r\n",
    "head_branch": "feature/micro-response-handler",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[NF] Micro: Response handler #12452\n\nCo-authored-by: Cameron Hall <me@chall.id.au>\n\nWhat:\nAdds the possibility to create a response handler, that will handle the\nresponse instead of the default hard coded micro handler.\n\nWhy:\nBefore the reponse format had to be coded into every route.\nNow is it possible to create a custom rosponse handler, that will format\nthe data in custom created function.\n\nunit(Micro): Test micro response handler\n\nWhat:\nTest if the custom micro response handler, is being called.\n\nchangelog(Micro): Response handler\n\nAdd micro response handler feature to changelog."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212b1018912b45d36a3283",
    "number": 13628,
    "body": "Hello!\r\n\r\n* Type: new feature - code quality\r\n* Link to issue: #13578 \r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nContainer base environment for running tests locally.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T13578-setup-phalcon-environment",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "T13578 setup phalcon environment (#13628)\n\n* Moved tests to temp folder; Added initial boxfile with services\r\n\r\n* Codeception bootstrap\r\n\r\n* Escaper tests\r\n\r\n* WIP - Modifying tests\r\n\r\n* [#13578] - Updated docblocks, started work for Config\r\n\r\n* [#13578] - Adjusted docblocks\r\n\r\n* [#13578] - Added copyright notice; Refactored Config tests\r\n\r\n* [#13578] - Refactored Debug/Dump tests\r\n\r\n* [#13578] - Work on Messages\r\n\r\n* [#13578] - Refactored Filter tests\r\n\r\n* [#13578] - Moved back _ci folder\r\n\r\n* [#13578] - Refactored Security tests\r\n\r\n* [#13578] - PHPCS fixes\r\n\r\n* [#13578] - Refactored validation messages\r\n\r\n* [#13578] - PHPCS fixes\r\n\r\n* [#13578] - Refactored Text tests\r\n\r\n* [#13578] - WIP Tag test refactoring\r\n\r\n* [#13578] - Refactored Tag\r\n\r\n* [#13578] - Corrected tests; Added iconv in the boxfile\r\n\r\n* [#13578] - Minor refactor in assets; Added Asset Filter tests\r\n\r\n* [#13578] - Added necessary extensions in boxfile. Prepared some tests for refactoring; Work on image/assets\r\n\r\n* [#13578] - PHPCS fixes\r\n\r\n* [#13578] - Test corrections\r\n\r\n* [#13578] - Assets refactoring; DiTrait to setup services; Refactoring on old tests\r\n\r\n* [#13578] - Added fixtures in the autoloader\r\n\r\n* [#13578] - Refactored Acl tests\r\n\r\n* [#13578] - Test corrections\r\n\r\n* [#13578] - Refactored Forms\r\n\r\n* [#13578] - WIP - Http\\Response Request\r\n\r\n* [#13578] - Refactored Response tests\r\n\r\n* [#13578] - Corrected Http tests; Refactored fixtures\r\n\r\n* [#13578] - Enabled acpu extension; Refactored annotation tests\r\n\r\n* [#13578] - PHPCS fixes\r\n\r\n* [#13578] - Refactored Logger tests\r\n\r\n* [#13578] - Refactored Flash tests\r\n\r\n* [#13578] - Refactoring Loader tests\r\n\r\n* [#13578] - Added zephir in composer for dev - will be reworked later on\r\n\r\n* [#13578] - Moved old changelogs to the resources folder\r\n\r\n* [#13578] - Changes to the boxfile to clean up folders\r\n\r\n* [#13578] - Work on the dialects and fixtures; Refactored Version tests\r\n\r\n* [#13578] - Refactored Text tests\r\n\r\n* [#13578] - Added test stubs for every method and component of Phalcon; WIP to add relevant tests\r\n\r\n* [#13578] - WIP: Message tests\r\n\r\n* [#13578] - Added zephir dev as a requirement\r\n\r\n* [#13578] - Minor correction to the test\r\n\r\n* [#13578] - Refactored Messages\\Message tests\r\n\r\n* [#13578] - Refactored Messages tests\r\n\r\n* [#13578] - Moved wip folder outside the test structure for the tests\r\n\r\n* [#13578] - Work on the Tag tests; Refactored helpers for Tag\r\n\r\n* [#13578] - PHPCS fixes and removed Exception test stubs\r\n\r\n* [#13578] - Refactoring Tag tests\r\n\r\n* [#13578] - Refactoring on Translation tests\r\n\r\n* [#13578] - More tests added\r\n\r\n* [#13578] - Added Image/factory; Removed Exception test stubs\r\n\r\n* Removed unused variables\r\n\r\n* WIP - Assets\r\n\r\n* Refactoring asset inline js\r\n\r\n* Moved a lot of tests from the wip/toCheck folders in the main folder. More work needed to refactor all of them\r\n\r\n* Acl Role/Resource tests; Corrected names for constructor tests\r\n\r\n* Added Registry tests\r\n\r\n* Work on the dialect tests\r\n\r\n* WIP - Db Dialect tests\r\n\r\n* [#13578] - Work on skipped tests and extensionLoaded in the unit tester\r\n\r\n* [#13578] - Renamed underscored files for PHPCS\r\n\r\n* [#13578] - Rename of files with underscore in their names\r\n\r\n* [#13578] - Renaming files; Work on Loader/Factory; Work on Cache\r\n\r\n* [#13578] - Reformatting tests (cosmetic); Work on factory tests and backend cache\r\n\r\n* [#13578] - Moved test stubs in unit\r\n\r\n* [#13578] - Skipped a test (will check later)\r\n\r\n* [#13578] - Initial structure for integration tests; Work on Assets\r\n\r\n* [#13578] - Validation/Validator tests\r\n\r\n* [#13578] - Renamed tests to give better output on console\r\n\r\n* [#13578] - Test renaming for clarity; Work on validator tests\r\n\r\n* [#13578] - Added descriptions for tests for better printout and information\r\n\r\n* [#13578] - Added descriptions for Version tests\r\n\r\n* [#13578] - Adding descriptions for tests\r\n\r\n* [#13578] - Minor refactor of the validation tests\r\n\r\n* [#13578] - Added comments and output for Text and Tag\r\n\r\n* [#13578] - Added CLI suite and stubs\r\n\r\n* [#13578] - Enabled unit helper in integration; Moved Db stubs in integration suite\r\n\r\n* [#13578] - Work on Version\r\n\r\n* [#13578] - Comments for all tests; Renamed tests according to namespaces; Added MemorySession for Codeception/Phalcon\r\n\r\n* [#13578] - Corrected method names\r\n\r\n* [#13578] - Corrected docblocks and messages\r\n\r\n* [#13578] - Added more tests for __toString\r\n\r\n* [#13578] - Added crypt trait to check for openssl\r\n\r\n* [#13578] - Restored file I deleted by mistake\r\n\r\n* [#13578] - Refactored Escaper tests\r\n\r\n* [#13578] - Copyright notices\r\n\r\n* [#13578] - Added db client libraries in the container\r\n\r\n* [#13578] - Work on db tests; Added more packages to the boxfile\r\n\r\n* [#13578] - Added more integration tests; moved fixtures around\r\n\r\n* [#13578] - Events tests\r\n\r\n* [#13578] - Added cache and di tests\r\n\r\n* [#13578] - Added more tests from the toCheck\r\n\r\n* [#13578] - Removed tests from deprecated projects\r\n\r\n* [#13578] - Removed not needed files; Added pgsql import for nanobox; Added forms test\r\n\r\n* [#13578] - More DB tests from \"unit-tests\"\r\n\r\n* [#13578] - phpcs fixes and optimizations\r\n\r\n* [#13578] - Added xcache in nanobox; Moved cache tests from unit-tests\r\n\r\n* [#13578] - More tests moved (db from unit-tests)\r\n\r\n* [#13578] - Moved dbdescribe tests from unit-tests\r\n\r\n* [#13578] - Refactored Micro and Router tests; Reorganized assets\r\n\r\n* [#13578] - Mvc Url and router tests\r\n\r\n* [#13578] - Changed \"boolean\" to \"bool\" to ensure consistency\r\n\r\n* [#13578] - Reorganized fixtures for views\r\n\r\n* [#13578] - Work on the tests; skipped some to check later\r\n\r\n* [#13578] - Added gitkeep to keep the cache folder there in the tests\r\n\r\n* [#13578] - Fixed imports for the dbs for travis\r\n\r\n* [#13578] - PHPCS fixes\r\n\r\n* [#13578] - DbProfiler unit-test tests\r\n\r\n* [#13578] - Work on models\r\n\r\n* [#13578] - Added some debugging code\r\n\r\n* [#13578] - Force disable travis cache for composer\r\n\r\n* [#13578] - Removed zephir from composer; Started using the phar file in travis and nanobox\r\n\r\n* [#13578] - Zephir version 11.6 in travis and boxfile\r\n\r\n* [#13578] - Test correction\r\n\r\n* [#13578] - Fixed test path\r\n\r\n* [#13578] - More corrections to the test\r\n\r\n* [#13578] - Added namespaces to models\r\n\r\n* [#13578] - Work on the CI and db import scripts\r\n\r\n* [#13578] - Corrections to the tests\r\n\r\n* [#13578] - Added skips for this test\r\n\r\n* [#13578] - Corrected models namespace\r\n\r\n* [#13578] - Corrected some interfaces and implementations\r\n\r\n* [#13578] - Removed php 7.0/7.1\r\n\r\n* [#13578] - Beanstalk tests\r\n\r\n* [#13578] - Fixing interfaces\r\n\r\n* [#13578] - Removed APC, Memcache and XCache adapters (deprecated)\r\n\r\n* [#13578] - Updated changelog\r\n\r\n* [#13578] - Added di setup for view simple\r\n\r\n* [#13578] - Fixing array access\r\n\r\n* [#13578] - Simple view tests\r\n\r\n* [#13578] - Fixed compilation errors\r\n\r\n* [#13578] - Interface changes\r\n\r\n* [#13578] - Trying compiling without the return type\r\n\r\n* [#13578] - Interface corrections\r\n\r\n* [#13578] - Fixing more interfaces\r\n\r\n* [#13578] - Trying to use the NTS version\r\n\r\n* [#13578] - Removed the lines I added before\r\n\r\n* [#13578] - Fixed interfaces and compilation errors\r\n\r\n* [#13578] - Changes to travis to reinstall php\r\n\r\n* [#13578] - Triggering another build to install php again\r\n\r\n* [#13578] - More interface changes\r\n\r\n* [#13578] - Added dots....\r\n\r\n* [#13578] - Interface corrections\r\n\r\n* [#13578] - Removed unecessary tests\r\n\r\n* [#13578] - More interface corrections\r\n\r\n* [#13578] - One more correction to the interfaces\r\n\r\n* [#13578] - More interface corrections\r\n\r\n* [#13578] - Restored the folder I deleted by mistake (duh)\r\n\r\n* [#13578] - Fixed interfaces for messages\r\n\r\n* [#13578] - Corrected interface error\r\n\r\n* [#13578] - Added missing class\r\n\r\n* [#13578] - More interface corrections\r\n\r\n* [#13578] - Corrected interface for the session test class\r\n\r\n* [#13578] - Work on the environment variables and codeception\r\n\r\n* [#13578] - Moved in the new suite the volt syntax tests; Adjustments to the travis for variables\r\n\r\n* [#13578] - Fixing the environment for Travis\r\n\r\n* [#13578] - Removed unecessary copy line\r\n\r\n* [#13578] - Converted more Router tests\r\n\r\n* [#13578] - Adjustment to Travis; Added more fixtures\r\n\r\n* [#13578] - Work in volt compiler tests; reorganized delete strategy\r\n\r\n* [#13578] - Skipping some tests to check travis\r\n\r\n* [#13578] - Work on namespaces and env variables (again)\r\n\r\n* [#13578] - Added boxfiles for 7.2/3, refacored the env and added env in integration tests\r\n\r\n* [#13578] - Removed unwanted files; Refactoring of constants and env variables\r\n\r\n* [#13578] - Added dispatcher tests\r\n\r\n* [#13578] - Minor corrections\r\n\r\n* [#13578] - Removing db from the bootstap\r\n\r\n* [#13578] - Setup for CLI tasks\r\n\r\n* [#13578] - Fixed environment file\r\n\r\n* [#13578] - Work in models\r\n\r\n* [#13578] - Db\\Column tests; work on fixtures/models\r\n\r\n* [#13578] - Fixing travis sqlite db\r\n\r\n* [#13578] - Corrected setup db file\r\n\r\n* [#13578] - Merge from 4.0; Zephir 11.8; Adjusted tests\r\n\r\n* [#13578] - Added cache folder back\r\n\r\n* [#13578] - Corrected tests\r\n\r\n* [#13578] - Correcting interface\r\n\r\n* [#13578] - Changed the cache backend \"get\" lifetime to only accept numbers\r\n\r\n* [#13578] - Updated the changelog for the cache backend \"get\" lifetime\r\n\r\n* [#13578] - Moved Micro test stubs in integration; Added micro collection test\r\n\r\n* [#13578] - Corrected the interface\r\n\r\n* [#13578] - Aligned cache interfaces\r\n\r\n* [#13578] - Corrected controllers in micro collection\r\n\r\n* [#13578] - Reverting changes to cache \"get\" interfaces\r\n\r\n* [#13578] - Trying xenial for travis\r\n\r\n* [#13578] - More interface corrections\r\n\r\n* [#13578] - Added mysql service in travis\r\n\r\n* [#13578] - Mysql 5.7 in travis\r\n\r\n* [#13578] - Corrections to tests and php settings\r\n\r\n* [#13578] - Corrected Volt test; Disabled run for integration for now\r\n\r\n* [#13578] - Minor adjustment to the annotations tests\r\n\r\n* [#13578] - Change to the reader cest for annotations\r\n\r\n* [#13578] - More debug output\r\n\r\n* [#13578] - Changes to the environment variables\r\n\r\n* [#13578] - Marking some tests skipped to check them later\r\n\r\n* [#13578] - Moved Forms tests in integration; Refactored all the old \"unit-test\" tests\r\n\r\n* [#13578] - Moved pagination tests to the integration suite\r\n\r\n* [#13578] - Code quality cleanup\r\n\r\n* [#13578] - Moved Validation to integration suite; Added paginator tests\r\n\r\n* [#13578] - Refactored a lot of MVC tests\r\n\r\n* [#13578] - Refactored Session tests\r\n\r\n* [#13578] - Corrections to Tag tests; Reenabled CLI tasks\r\n\r\n* [#13578] - Final refactoring (I hope) and removing unused files\r\n\r\n* [#13578] - Updates to the readme and changelog\r\n\r\n* [#13578] - Corrections based on review\r\n\r\n* [#13578] - Updated nanobox setup files\r\n\r\n* [#13578] - Changes based on review\r\n\r\n* [#13578] - Added boxfile to the .gitignore\r\n\r\n* [#13578] - Added more instructions in the tests/README\r\n\r\n* [#13578] - Updated README; Adjusted tests after the merge\r\n\r\n* [#13578] - Corrected schema file for Postgresql\r\n\r\n* [#13578] - Minor correction; Zephir 0.11.8\r\n\r\n* [#13578] - Triggering the build\r\n\r\n* [#13578] - Correction to the case statement\r\n\r\n* [#13578] - Corrected something in the file - cannot see what character was throwing the scanner off\r\n\r\n* [#13578] - Check env variables\r\n\r\n* [#13578] - Work on the db environment for travis\r\n\r\n* [#13578] - Refactored tests to use dataProviders\r\n\r\n* [#13578] - Added again the travis environment variables"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212b1218912b45d36a3284",
    "number": 13626,
    "body": "",
    "head_branch": "3.4.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13626 from phalcon/3.4.x\n\n3.4.2"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212b1318912b45d36a3285",
    "number": 13624,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #12428\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change: Textarea content is passed through `htmlspecialchars` before it's outputted to prevent XSS as explained in #12428.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "bugfix/textarea-escaping",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Textarea output is automatically escaped"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212b1418912b45d36a3286",
    "number": 13622,
    "body": "Full support of PHP 7.3\r\nFixes: #13288, #12176, #12385, #12648, #12705",
    "head_branch": "feature/update-zephir",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixed broken view test"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212b1518912b45d36a3287",
    "number": 13621,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/11759\r\n* Link to PR: https://github.com/phalcon/cphalcon/pull/11967\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: Reviving a dormant PR. This change should make File cache start behaving like it the `memcached` or `redis` caches in that it handles lifetimes appropriately instead of when lifetimes are negative. It's explained in detail in the #11759.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "bugfix/expire-file-cache",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixes #11759 and deletes expired keys"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212b1618912b45d36a3288",
    "number": 13620,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #10689\r\n* Link to existing PR: https://github.com/phalcon/cphalcon/pull/10884\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: Updated existing pull request to 4.0.x branch. >>Added events `response:beforeSendHeaders` and `response:afterSendHeaders` to `Phalcon\\Http`Response`\r\n\r\nThanks",
    "head_branch": "feature/response-events",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge branch '4.0.x' into feature/response-events"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212b1718912b45d36a3289",
    "number": 13619,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/13618\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [X] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [X] I have checked that another pull request for this purpose does not exist.\r\n\r\nSmall description of change:\r\n\r\nAdd getStatusCode() in Phalcon\\Http\\ResponseInterface.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "feature/add-get-status-code-in-response-interface",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212b1818912b45d36a328a",
    "number": 13616,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to -issue- existing pull request: https://github.com/phalcon/cphalcon/pull/12772\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: This pull request adds a method to check if a relationship is loaded. It also changes the way we cache relationships. For _some_ reason we only stored `hasOne` and `belongsTo` relationships (those that return a model). Now we store resultset as well, which enables caching for `hasMany`, `hasManyToMany` etc.\r\n\r\nCo-authored-by: Erik Wiesenthal <erikforo@hotmail.com>\r\n\r\nThanks\r\n\r\n",
    "head_branch": "feature/is-relationship-loaded-4.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added method to check is a relationship is loaded\n\nCo-authored-by: Erik Wiesenthal <erikforo@hotmail.com>\n\nThis commit also changes the way we cache relationships. For _some_ reason we only stored `hasOne` and `belongsTo` relationships (those that return a model. Now we store resultset as well, which  enables caching for `hasMany`, `hasManyToMany` etc."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212b1a18912b45d36a328b",
    "number": 13614,
    "body": "\r\n* Type: documentation\r\n* Link to issue: #13602\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\nsee  #13602\r\n\r\n\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212b1b18912b45d36a328c",
    "number": 13612,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #13351\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: Numeric config properties can now be merged properly\r\n\r\nThanks\r\n\r\n",
    "head_branch": "bugfix/merge-numeric-config-4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixes #13351: Numeric config properties merge correctly now"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212b1d18912b45d36a328d",
    "number": 13611,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #13351\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [X] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [X] I have checked that another pull request for this purpose does not exist.\r\n- [X] I wrote some tests for this PR.\r\n\r\nSmall description of change: Numeric config properties can now be merged properly.\r\n\r\nThanks\r\n\r\n_4.0.x PR will follow shortly_",
    "head_branch": "bugfix/merge-numeric-config",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixes #13351: Numeric config properties merge correctly now"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212b1e18912b45d36a328e",
    "number": 13608,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #12725, #13604\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: 4.0.x version of PR #13607 \r\n\r\nThanks\r\n\r\n",
    "head_branch": "bugfix/ini-numeric-config-4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Updated Changelog [ci skip]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212b1f18912b45d36a328f",
    "number": 13607,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #12725, #13604\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: INI configuration with numerically nested keys wouldn't get parsed properly. This is because `array_merge_recursive` cannot handle collisions with nested arrays. As such`array_replace_recursive` needs to be used instead.\r\n\r\nThanks\r\n\r\nI'll create a PR for 4.0.x shortly.\r\n\r\n",
    "head_branch": "bugfix/ini-numeric-config",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Updated Changelog [ci skip]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212b2018912b45d36a3290",
    "number": 13606,
    "body": "- Full support of PHP 7.3\r\n- Fixes: #13288, #12176, #12385, #12648, #12705",
    "head_branch": "feature/update-zephir",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "AppVeyor use latest Zephir"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212b2118912b45d36a3291",
    "number": 13605,
    "body": "",
    "head_branch": "feature/code-coverage",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Fixed default PHP config filename [skip appveyor]"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212b2218912b45d36a3292",
    "number": 13602,
    "body": "Nice to have CoC, as it is recommended by community standards.\r\n\r\n* Type: documentation\r\n* Link to issue: https://help.github.com/articles/adding-a-code-of-conduct-to-your-project/\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\n![image](https://user-images.githubusercontent.com/12804479/48474452-e3884900-e7fa-11e8-9218-1ad6e7c72823.png)\r\n\r\n\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "email addr\n\nUpdate email address to team@phalconphp.com"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212b2318912b45d36a3293",
    "number": 13601,
    "body": "",
    "head_branch": "feature/update-zephir",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Fixed AppVeyor build [skip travis]"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212b2418912b45d36a3294",
    "number": 13600,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/13599\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](./../blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n\r\nSmall description of change:\r\n\r\nAdded `Phalcon\\Mvc\\Model\\Query\\BuilderInterface::offset`. Closes https://github.com/phalcon/cphalcon/issues/13599.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "Dialect-interface-offset",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge branch '4.0.x' into Dialect-interface-offset"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212b2518912b45d36a3295",
    "number": 13598,
    "body": "Hello!\r\n\r\n* Type: bug fix | code quality\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n\r\nSmall description of change:\r\n\r\ncontinue fixing interfaces for building with zephir 0.11\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix-typehints-part2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212b2618912b45d36a3296",
    "number": 13597,
    "body": "gg wp\r\n\r\n",
    "head_branch": "fix-typehints-part2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212b2818912b45d36a3297",
    "number": 13595,
    "body": "",
    "head_branch": "feature/update-zephir",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Enabled syntax tests back [skip appveyor]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212b2918912b45d36a3298",
    "number": 13592,
    "body": "Hello!\r\n\r\n* Type: bug fix | code quality \r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n\r\nSmall description of change:\r\n\r\nfixing interfaces for latest zephir\r\n\r\nNow ... there are more things that we can fix/break here. I noticed a few \"problems\" during the fixes. However there are 20+ merge conflicts with this one. \r\nIf we could merge this one, and then we can continue improving ( because this one is already long enough ) \r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix-typehints-4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212b2a18912b45d36a3299",
    "number": 13591,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add `Phalcon\\Http\\Response\\Cookies::getCookies`."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212b2b18912b45d36a329a",
    "number": 13590,
    "body": "The current design of the Service class doesn't make it well suited for acting as a closure wrapper and the name property is unnecessary.  There is only one place where the name property is used and that is in the DI and it already has access to the name of the service due to having just having received the name via a method parameter.  I added a single exception class that is to be thrown when this one situation occurs.  I think that this is a good use of an exception since it is an exceptional event.  Otherwise the design of Phalcon suffers only to satisfy this one moment.\r\n\r\nAccepting this pull request will allow frameworks to use one service per file designs.\r\n\r\n```php\r\nreturn function() {\r\n    // This is a service closure\r\n}\r\n```\r\n\r\nIn addition to the following two options;\r\n\r\n```php\r\n    return new Service(function() {\r\n\r\n    });\r\n```\r\n\r\nand\r\n\r\n```php\r\n    return new Service(function() {\r\n\r\n    }, true);\r\n```\r\n\r\nand then later by an additional pull request:\r\n\r\n```php\r\n    return new SharedService(function() {\r\n\r\n    });\r\n```\r\n\r\nIf this pull request is not accepted then it must be done like:\r\n\r\n```php\r\n    return new Service(\"this_is_bullshit\", function() {\r\n\r\n    });\r\n```\r\n\r\nand then hoping to not create a collision.  However for purposes of sanity this entire use of `Service` is essentially unavailable and for no good reason\r\n\r\nThis pull request is derived from an old pull request that I pulled down from before when Phalcon was in its neglected state.  I relied on the actual PR to run the tests for me and if I missed something here or something changed then I'll fix it and then if the fix or fixes become too messy then I will resubmit with a local copy-paste of the completed passing code.  Obviously that isn't an ideal development process and is already being addressed elsewhere by the Team.",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add changelog entry."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212b2c18912b45d36a329b",
    "number": 13589,
    "body": "Hello!\r\n\r\n* Type: bug fix | code quality \r\n\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nthis fixes all the fatal errors of bad function parameters and type hints after zephir 0.11 fixes type hints\r\nEven tho its said that it should be done in 4.0.x after digging around I don't think there will be broken things.\r\n\r\nthere are a lot of wrong interfaces, i do think we should merge this asap ( if things don't get broken )\r\n\r\nSession AdapterInterface was really strange, but i changed in the way to keep backwards compatibility. \r\n\r\nWhat is left to be decided\r\n\r\n- [x] Session destroy interface is garbage but it works at the moment without breaking anything\r\n- [ ] phalcon/db/adapterinterface.zep ( limit changes ) should we change mysql adapter to `var sqlQuery` \r\nhttps://github.com/phalcon/cphalcon/pull/13589/files#diff-34b0990a92ee5f99eb0c587c4e0c4b3b\r\n\r\n- [ ] mysql postgres adapter can return array | string when it actually returns only strings https://github.com/phalcon/cphalcon/blob/9227ff106254777b2046878fce1ea3af6ba0efe7/phalcon/db/dialect/postgresql.zep#L341\r\n\r\n- [ ]  `offsetUnset` `offsetGet` `offsetSet` `offsetExists` `unserialize` `Seekable::seek` are complaining because of the way internal php interfaces are defined ( i think ) or at least the case for me  \r\n- [x] `hasFiles` in http/request will be renamed in the `near feature`\r\n- [x] Di::attempt needs to be refactored `some day` to always return service\r\n\r\n```\r\n$ php -v\r\nPHP 7.2.10-0ubuntu0.18.04.1 (cli) (built: Sep 13 2018 13:45:02) ( NTS )\r\nCopyright (c) 1997-2018 The PHP Group\r\n```\r\n\r\nlinks\r\n\r\nhttps://github.com/phalcon/cphalcon/issues/13444\r\nhttps://github.com/phalcon/cphalcon/issues/13465\r\nhttps://github.com/phalcon/zephir/issues/1656\r\n\r\nThanks\r\n",
    "head_branch": "fix-typehints",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix all interface definitions"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212b2d18912b45d36a329c",
    "number": 13585,
    "body": "Hello!\r\n\r\n* Type: documentation\r\n* Link to issue: N/A\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n\r\n\r\nSmall description of change: Issues shouldn't be marked as stale if they're confirmed bugs.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Updated stale to not close issues labelled as bugs\n\nIssues shouldn't be marked as stale if they're confirmed bugs."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212b2e18912b45d36a329d",
    "number": 13584,
    "body": "Hello!\r\n\r\nType: bug fix\r\nLink to issue: #13058\r\n\r\nIn raising this pull request, I confirm the following:\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nFixed missing placeholder creation when objects `__toString` method are invoked.\r\n\r\nThanks",
    "head_branch": "bugfix/db-adapter-binded-objects-4.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixed RawValue objects being prepared instead of inserted\nWrote unit tests for issue #13058\nUpdate CHANGELOG-3.4.md\nFixed an issue with unit test."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212b2f18912b45d36a329e",
    "number": 13583,
    "body": "",
    "head_branch": "feature/update-zephir-parser",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Use latest Zephir Parser"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212b3018912b45d36a329f",
    "number": 13582,
    "body": "",
    "head_branch": "feature/update-zephir-parser",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Use latest Zephir Parser"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212b3118912b45d36a32a0",
    "number": 13579,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [ ] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "test-casted-object-binding",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212b3218912b45d36a32a1",
    "number": 13577,
    "body": "",
    "head_branch": "feature/ci-refactor-2",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Minor CI's config refactor and improvements (2) [skip appveyor]"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212b3318912b45d36a32a2",
    "number": 13576,
    "body": "",
    "head_branch": "feature/ci-refactor",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Minor CI's config refactor and improvements"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212b3518912b45d36a32a3",
    "number": 13575,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: [#13549](https://github.com/phalcon/cphalcon/pull/13549), [#13573](https://github.com/phalcon/cphalcon/issues/13573), [#12519](https://github.com/phalcon/cphalcon/pull/12519)\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nFixed `Phalcon\\Validation::preChecking` to allow use `Phalcon\\Db\\RawValue` as an empty container for `isAllowEmpty` option. Please see  https://github.com/phalcon/cphalcon/issues/13573 for the reproducible test.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix/validator-is-allow-empty",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Fixed Phalcon\\Validation::preChecking"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212b3618912b45d36a32a4",
    "number": 13574,
    "body": "…te a field selecting IPv4 or IPv4, allowing private or reserved ranges and empty values if necessary.\r\n\r\nHello!\r\n\r\n* Type: new feature\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\n- This is a generic ip validator for general purposes. The MVC models have one but it couldn't be used for generic forms so I've created if with the unit tests associated. This PR is for the branch 4.0.x and it's the same as [PR 12513](https://github.com/phalcon/cphalcon/pull/12513)\r\n\r\nThanks\r\n\r\n",
    "head_branch": "feature/ip-validator-4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge branch '4.0.x' into feature/ip-validator-4.0.x"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212b3718912b45d36a32a5",
    "number": 13572,
    "body": "",
    "head_branch": "feature/ci-refactor",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Minor CI's config refactor and improvements"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212b3818912b45d36a32a6",
    "number": 13570,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: [PR-12189](https://github.com/phalcon/cphalcon/pull/12189)\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nAdded `hasHeader` in `Phalcon\\Http\\Response` to allow checking for a valid header existence\r\n\r\nThanks\r\n\r\n",
    "head_branch": "PR12189-no-header-request-should-return-null-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[PR12189] - Removed unused variables; Corrected missing use statement"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212b3918912b45d36a32a7",
    "number": 13569,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #10532\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nWork by [@Skydev0h](https://github.com/Skydev0h)\r\n\r\nAdded a global ORM setting that allows to try to find a key in column map case-insensitively if it was not found by an exact match at first time. Can be a real fix for many Oracle bugs, because Phalcon does not expect that column names are converted to uppercase by Oracle in the query result.\r\n\r\nOriginal PR: https://github.com/phalcon/cphalcon/pull/11802\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T10532-case-insensitive-column-map",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[#10532] - Merge branch '4.0.x' into T10532-case-insensitive-column-map\n\n* 4.0.x:\n  [PR12189] - Removed unused variables; Corrected missing use statement\n  [PR12189] - Corrected typo\n  [PR12189] - Minor changes based on review\n  [PR12189] - Modified header class and corrected tests\n  [PR12189] - Corrected logic and test\n  [PR12189] - Fixed tests\n  [PR12189] - Added test for hasHeader\n  [PR12189] - Updated changelog\n  [PR12189] - Added hasHeader method\n  Minor CI's config refactor and improvements"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212b3a18912b45d36a32a8",
    "number": 13568,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #13547 \r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nChanged `Phalcon\\Tag::getTitle()`. It returns only the text set with `setTitle()`. If there has been prepend and append text it will be returned by default. It accepts `prepend`, `append` booleans to prepend or append the relevant text to the title.\r\n\r\nAdded `Phalcon\\Tag::renderTitle()` that renders the title enclosed in `<title>` tags.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13568 from niden/4.0.x\n\nT13547 - Tag enhancements"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212b3b18912b45d36a32a9",
    "number": 13566,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #13547 \r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nChanged `Phalcon\\Tag::getTitle()`. It returns only the text set with `setTitle()`. If there has been prepend and append text it will be returned by default. It accepts `prepend`, `append` booleans to prepend or append the relevant text to the title.\r\n\r\nAdded `Phalcon\\Tag::renderTitle()` that renders the title enclosed in `<title>` tags.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "feature/T13547-tag-enhancements",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212b3e18912b45d36a32aa",
    "number": 13565,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #13547 \r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nChanged `Phalcon\\Tag::getTitle()`. It returns only the text set with `setTitle()`. If there has been prepend and append text it will be returned by default. It accepts `prepend`, `append` booleans to prepend or append the relevant text to the title.\r\n\r\nAdded `Phalcon\\Tag::renderTitle()` that renders the title enclosed in `<title>` tags.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "feature/T13547-tag-enhancements",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212b3f18912b45d36a32ab",
    "number": 13563,
    "body": "Hello!\r\n\r\n* Type: enhancement\r\n* Link to issue: https://github.com/phalcon/cphalcon/pull/11608 https://github.com/phalcon/cphalcon/issues/10905 https://github.com/phalcon/cphalcon/pull/11452\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nMade the `specialKey` (`_PHCR`) optional for the `Phalcon\\Cache\\Backend\\Redis` adapter. This is based on the work of [@pantaovay](https://github.com/pantaovay)\r\n\r\nThanks\r\n\r\n",
    "head_branch": "feature/T11608-modify-redis-backend",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[#11608] - Merge branch '4.0.x' into feature/T11608-modify-redis-backend\n\n* 4.0.x:\n  [PR12189] - Removed unused variables; Corrected missing use statement\n  [PR12189] - Corrected typo\n  [PR12189] - Minor changes based on review\n  [PR12189] - Modified header class and corrected tests\n  [PR12189] - Corrected logic and test\n  [PR12189] - Fixed tests\n  [PR12189] - Added test for hasHeader\n  [PR12189] - Updated changelog\n  [PR12189] - Added hasHeader method\n  Minor CI's config refactor and improvements"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212b4018912b45d36a32ac",
    "number": 13562,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue: #13151 #12223 #524 https://github.com/phalcon/cphalcon/pull/13225 (@zGaron) https://github.com/phalcon/cphalcon/pull/12523 (@Studentsov) https://github.com/phalcon/cphalcon/pull/12471 (@ruudboon)\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nThis PR consolidates issues and PRs. Types supported for MySQL:\r\n\r\n- `TYPE_BIGINTEGER`\r\n- `TYPE_BIT`\r\n- `TYPE_BLOB` \r\n- `TYPE_BOOLEAN` \r\n- `TYPE_CHAR` \r\n- `TYPE_DATE` \r\n- `TYPE_DATETIME` \r\n- `TYPE_DECIMAL` \r\n- `TYPE_DOUBLE` \r\n- `TYPE_ENUM` \r\n- `TYPE_FLOAT` \r\n- `TYPE_INTEGER` \r\n- `TYPE_JSON` \r\n- `TYPE_JSONB` \r\n- `TYPE_LONGBLOB` \r\n- `TYPE_LONGTEXT` \r\n- `TYPE_MEDIUMBLOB` \r\n- `TYPE_MEDIUMINTEGER` \r\n- `TYPE_MEDIUMTEXT` \r\n- `TYPE_SMALLINTEGER` \r\n- `TYPE_TEXT` \r\n- `TYPE_TIME` \r\n- `TYPE_TIMESTAMP` \r\n- `TYPE_TINYBLOB` \r\n- `TYPE_TINYINTEGER` \r\n- `TYPE_TINYTEXT` \r\n- `TYPE_VARCHAR` \r\n\r\nThanks\r\n\r\n",
    "head_branch": "T13543-add-more-pdo-types-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[#13543] Add more pdo types (#13562)\n\n* [#13543] - Work on the ENUM for PostgreSql\r\n\r\n* [#13543] - Adjusted tests\r\n\r\n* [#13543] - Corrected if clause\r\n\r\n* [#13543] - Added enum to the PG sample file\r\n\r\n* [#13543] - Trying to correct the sql file again\r\n\r\n* [#13543] - Reverting changes\r\n\r\n* [#13543] - Reverting tests and sql file\r\n\r\n* [#13543] - Initial commit for a nanobox isolated environment for tests\r\n\r\n* [#13543] - Reintroduced enum type parsing\r\n\r\n* [#13543] - Adjusted test\r\n\r\n* [#13543] - Again reverting some changes\r\n\r\n* [#13543] - Reorganized the if statement\r\n\r\n* [#13543] - Reorganized if statement\r\n\r\n* [#13543] - More sorting\r\n\r\n* [#13543] - Reorganization\r\n\r\n* [#13543] - Added bool and bit\r\n\r\n* [#13543] - Added initial describe test\r\n\r\n* [#13543] - Corrections to the table name and import file\r\n\r\n* [#13543] - Minor change to the boxfile; Added boxfile constants to the tests; Changed case in SQL file\r\n\r\n* [#13543] - Changed JSON type to TEXT\r\n\r\n* [#13543] - More work on the db\r\n\r\n* [#13543] - Another correction to the sql file\r\n\r\n* [#13543] - Test corrections\r\n\r\n* [#13543] - Test corrections\r\n\r\n* [#13543] - Corrected the bind parameter type\r\n\r\n* [#13543] - Added more fields to the column describe test\r\n\r\n* [#13543] - Added all the possible columns for the test\r\n\r\n* [#13543] - Corrected typo\r\n\r\n* [#13543] - More corrections\r\n\r\n* [#13543] - Corrections to the test\r\n\r\n* [#13543] - More test corrections\r\n\r\n* [#13543] - Correction for bool\r\n\r\n* [#13543] - Compilation of php-psr for nanobox\r\n\r\n* [#13543] - Changes for boolean\r\n\r\n* [#13543] - Disabling some columns temporarily\r\n\r\n* [#13543] - Debugging booleans\r\n\r\n* [#13543] - Minor corrections\r\n\r\n* [#13543] - Adjustments to the if statements; tinyint(1) is a boolean\r\n\r\n* [#13543] - Booleans are numbers\r\n\r\n* [#13543] - Added more fields in the array for the test\r\n\r\n* [#13543] - Adjusted the array for describe\r\n\r\n* [#13543] - Corrections for floats\r\n\r\n* [#13543] - Corrected array index\r\n\r\n* [#13543] - Added more elements to the array of the test; corrections\r\n\r\n* [#13543] - Corrected indexes in the test array\r\n\r\n* [#13543] - Added more assertions\r\n\r\n* [#13543] - Added indexes tests\r\n\r\n* [#13543] - Fixed typo in test\r\n\r\n* [#13543] - Moved the describe test to a better location; Minor corrections\r\n\r\n* [#13543] - Split tests to two files\r\n\r\n* [#13543] - Renaming and splitting tests\r\n\r\n* [#13543] - More test corrections\r\n\r\n* [#13543] - Corrected size\r\n\r\n* [#13543] - Added reference tests\r\n\r\n* [#13543] - More test corrections\r\n\r\n* [#13543] - Refactoring\r\n\r\n* [#13543] - More refactoring; Added column as object test\r\n\r\n* [#13543] - Changed control structure to stitch from if\r\n\r\n* [#13543] - Added more types for MySQL\r\n\r\n* [#13543] - Added more types\r\n\r\n* [#13543] - Aligning equals\r\n\r\n* [#13543] - Added column constants tests\r\n\r\n* [#13543] - Corrections and additions to tests\r\n\r\n* [#13543] - Removed duplicate test; Corrections to the mysql dialect\r\n\r\n* [#13543] - Corrected if statement\r\n\r\n* [#13543] - Trying to enable Mysql 5.7\r\n\r\n* [#13543] - Trying without the password change\r\n\r\n* [#13543] - Changed casting for double to be string; Change to the schema for JSON\r\n\r\n* [#13543] - Corrections to the test and schema\r\n\r\n* [#13543] - Minor corrections\r\n\r\n* [#13543] - Initial work for postgresql columns\r\n\r\n* [#13543] - Corrected namespace\r\n\r\n* [#13543] - Fixing tests\r\n\r\n* [#13543] - More test corrections\r\n\r\n* [#13543] - Corrected schema and tests\r\n\r\n* [#13543] - Renamed the schema files; other corrections\r\n\r\n* [#13543] - Corrected schema names\r\n\r\n* [#13543] - Correction to the schema and tests\r\n\r\n* [#13543] - Added enum in the tests for mysql\r\n\r\n* [#13543] - Test corrections\r\n\r\n* [#13543] - Added enum for postgresql\r\n\r\n* [#13543] - Adjusted the schemas\r\n\r\n* [#13543] - Corrections to the dialect for postgresql, schema and adapter\r\n\r\n* [#13543] - Minor refactoring in the dialects; Adjustment to tests\r\n\r\n* [#13543] - Changed syntax for foreign references in schema; Debugging Columns\r\n\r\n* [#13543] - More test corrections\r\n\r\n* [#13543] - More test corrections\r\n\r\n* [#13543] - Corrected owner\r\n\r\n* [#13543] - Reverted the schema to what it iwas\r\n\r\n* [#13543] - Trying to correct the schema\r\n\r\n* [#13543] - Skipping reference tests for portgresql\r\n\r\n* [#13543] - Corrected parameters for test\r\n\r\n* [#13543] - Updated the changelog\r\n\r\n* [#13543] - Removed boxfile - will send upstream in different commit\r\n\r\n* [#13543] - Reformatted class to trigger build\r\n\r\n* [#13543] - Corrected names of schema files"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212b4118912b45d36a32ad",
    "number": 13561,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/13058\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [X] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [X] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: Fixed missing placeholder creation when objects `__toString` method are invoked.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "bugfix/db-adapater-binded-objects",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixed RawValue objects being prepared instead of inserted\nWrote unit tests for issue #13058\nUpdate CHANGELOG-3.4.md\n\nAdded note about fixing #13058"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212b4218912b45d36a32ae",
    "number": 13559,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "feature/download_filename_error_4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13559 from cq-z/feature/download_filename_error_4.0.x\n\nFixed  `\\Phalcon\\Http\\Response::setFileToSend` filename last much _ 4.0.x"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212b4318912b45d36a32af",
    "number": 13558,
    "body": "…xecute. `Phalcon\\Db\\Adapter::fetchAll` to use PDO's fetchAll\r\n\r\nHello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [ ] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "feature/optimize-pdo_4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13558 from cq-z/feature/optimize-pdo_4.0.x\n\nRefactored `Phalcon\\Db\\Adapter\\Pdo::query` 4.0.x"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212b4518912b45d36a32b0",
    "number": 13557,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "feature/acl_role_multiple_inheritance_4.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13557 from cq-z/feature/acl_role_multiple_inheritance_4.x\n\n Added: `Phalcon\\Acl\\Adapter\\Memory::addRole` support multiple inherited to 4.0.x"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212b4618912b45d36a32b1",
    "number": 13556,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "feature/acl_role_multiple_inheritance",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212b4718912b45d36a32b2",
    "number": 13553,
    "body": "Hello!\r\n\r\n* Type: documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n\r\n\r\nSmall description of change:\r\n\r\nDocs at setFilters\r\n```\r\n@param string field\r\n```\r\n\r\nshould be \r\n\r\n```\r\n@param array|string field\r\n```\r\n\r\nThis error is reflected in documentation page too\r\n\r\nThanks\r\n\r\n",
    "head_branch": "patch",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13553 from naoyayamamoto/patch\n\nFix documentation at `Phalcon\\Validation::setFilters`"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212b4818912b45d36a32b3",
    "number": 13549,
    "body": "Hello!\r\n\r\n* Type: tests update\r\n* Link to issue: #12519\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\nObjects should be listable in Validator's `allowEmpty` as a possible \"empty\" value, i.e.\r\n* `new \\Phalcon\\Db\\RawValue('NULL')`, `__toString()` can be used for comparing values\r\n\r\nAs a temporary workaround I'm using currently smth. like this:\r\n```php\r\nnamespace Your\\Namespace;\r\n\r\nuse Phalcon\\Db\\RawValue;\r\nuse Phalcon\\Validation;\r\nuse Phalcon\\Validation\\Validator\\Numericality as BaseNumericality;\r\n\r\nclass Numericality extends BaseNumericality\r\n{\r\n    public function isAllowEmpty(Validation $validation, string $fieldName): bool\r\n    {\r\n        $value = $validation->getValue($fieldName);\r\n        if ($value instanceof RawValue) {\r\n            $value = $value->getValue();\r\n        }\r\n        return ! $value || $value === 'NULL';\r\n    }\r\n}\r\n```\r\n\r\nThanks\r\n\r\n",
    "head_branch": "allow-empty-with-objects",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13549 from someson/allow-empty-with-objects\n\nValidator's \"allowEmpty\" list cannot handle Objects"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212b4918912b45d36a32b4",
    "number": 13544,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue: #13543 \r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nCosmetic changes\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T13543-add-more-pdo-types",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13544 from niden/T13543-add-more-pdo-types\n\nCosmetic changes, changed copyright"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212b4a18912b45d36a32b5",
    "number": 13542,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #13539 \r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nAdded `forUpdate` in sqlite dialect to override the default one.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T13539-dialect-for-update",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13542 from niden/T13539-dialect-for-update\n\n[#13539] - Added forUpdate in sqlite dialect"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212b4b18912b45d36a32b6",
    "number": 13538,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue: #11341 #12833 #13535\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nReorganized the methods and properties in alphabetical order (public, protected, private). Added a new copyright notice at the top of each file\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T12833-standardize-session-interface",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13538 from niden/T12833-standardize-session-interface\n\nReorganized/cleaned up Session classes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212b4c18912b45d36a32b7",
    "number": 13537,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nRemoved duplicate method from the cli dispatcher\r\n\r\nThanks\r\n\r\n",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13537 from niden/4.0.x\n\n4.0.x Removed duplicate method"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212b4d18912b45d36a32b8",
    "number": 13536,
    "body": "Hello!\r\n\r\n* Type: bug fix - new feature\r\n* Link to issue: #13468 \r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nAdded missing methods; ability to retrieve properties from the dispatcher\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T13468-inconsistent-naming-convention-in-dispatcher-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13536 from niden/T13468-inconsistent-naming-convention-in-dispatcher-2\n\n[#13468] - Added `getHandlerSuffix()`, `setHandlerSuffix()` in Dispatcher"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212b4e18912b45d36a32b9",
    "number": 13534,
    "body": "Hello!\r\n\r\n* Type: enhancement\r\n* Link to issue: #13114 \r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nRemoved the `Message` interfaces in validation and model. Added a new component/interface  `Phalcon\\Messages\\MessageInterface` that both model and validation use now. Did the same for the collection of messages.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T13114-message-interfaces",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "T13114 message interfaces (#13534)\n\n* [#13114] - Added messages component and relevant interface\r\n\r\n* [#13114] - Added message exception\r\n\r\n* [#13114] - Added messages collection (renamed from group)\r\n\r\n* [#13114] - Removed message objects from validation\r\n\r\n* [#13114] - Removed the group class in favor of the messages one\r\n\r\n* [#13114] - Replace of Group with Messages object\r\n\r\n* [#13114] - Removed model messageinterface; Refactored model message; Corrected use reference\r\n\r\n* [#13114] - Corrected class extend\r\n\r\n* [#13114] - Test corrections\r\n\r\n* [#13114] - Corrected methods/objects\r\n\r\n* [#13114] - More test corrections\r\n\r\n* [#13114] - Fixing tests\r\n\r\n* [#13114] - Corrected order in adding messages with a model\r\n\r\n* [#13114] - Correcting more tests\r\n\r\n* [#13114] - Removed the Mvc\\Model\\Message class - using the Messages\\Message\r\n\r\n* [#13114] - Updated the changelog\r\n\r\n* [#13114] - Added JsonSerializable interface in Message and Messages\r\n\r\n* [#13114] - Corrected noobie typo\r\n\r\n* [#13114] - More noobie typos\r\n\r\n* [#13114] - Changed the variable type\r\n\r\n* [#13114] - Forgot the implements :/\r\n\r\n* [#13114] - Corrected test\r\n\r\n* [#13114] - Changed the var type\r\n\r\n* [#13114] - Array initialization that was missing"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212b4f18912b45d36a32ba",
    "number": 13533,
    "body": "…e return the original query\r\n\r\nHello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #13529\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\n`sharedLock` was moved to the dialects because it was interfering with PostgreSql and Sqlite\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T13529-shared-lock-bug-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13533 from niden/T13529-shared-lock-bug-4\n\n[#13529] - Moved the sharedLock in the dialects. PostgreSql and Sqlit…"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212b5018912b45d36a32bb",
    "number": 13532,
    "body": "…e return the original query\r\n\r\nHello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #13529\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\n`sharedLock` was moved to the dialects because it was interfering with PostgreSql and Sqlite\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T13529-shared-lock-bug",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13532 from niden/T13529-shared-lock-bug\n\n[#13529] - Moved the sharedLock in the dialects. PostgreSql and Sqlit…"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212b5118912b45d36a32bc",
    "number": 13530,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #13445 \r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nAdded the ability to use a custom template for the flash messenger. The template *must* contain two strings `%cssClass%` and `%message%` so that the classes and message can be injected.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T13445-ability-to-change-the-flash-html-template",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13530 from niden/T13445-ability-to-change-the-flash-html-template\n\nT13445 ability to change the flash html template"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212b5218912b45d36a32bd",
    "number": 13524,
    "body": "Hello!\r\n\r\n* Type: bug fix - new feature\r\n* Link to issue: #13468 \r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nAdded missing methods; ability to retrieve properties from the dispatcher\r\n\r\nThanks\r\n\r\n",
    "head_branch": "T13468-inconsistent-naming-convention-in-dispatcher",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212b5318912b45d36a32be",
    "number": 13521,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #13447\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nAdded missing `search_field` from the volt compiler array helpers",
    "head_branch": "3.4.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13521 from niden/3.4.x\n\n[#13447] - Added search_field in the volt compiler helpers"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212b5518912b45d36a32bf",
    "number": 13519,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nAdded Phalcon\\Acl\\Adapter\\Memory::addRole support multiple inherited\r\n\r\nThanks\r\n\r\n",
    "head_branch": "feature/acl_role_multiple_inheritance",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212b5618912b45d36a32c0",
    "number": 13516,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: [#13501](https://github.com/phalcon/cphalcon/issues/13501)\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [X] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [X] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change: As suggested by @michalzielanski we check if the request is empty instead of not a string type, to decide whether we continue or return false. JSON decode errors are also handled politely now as well.\r\n\r\nThanks",
    "head_branch": "bugfix/getRawJsonBody",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13516 from CameronHall/bugfix/getRawJsonBody\n\nFixes #13501: getJsonRawBody() handles empty body and JSON decode errors"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212b5718912b45d36a32c1",
    "number": 13515,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\n- Refactored `Phalcon\\Db\\Adapter\\Pdo::query` to use PDO's prepare and execute.\r\n- `Phalcon\\Db\\Adapter::fetchAll` to use PDO's fetchAll\r\n\r\nThanks\r\n\r\n",
    "head_branch": "feature/optimize-pdo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13515 from cq-z/feature/optimize-pdo\n\n- Refactor `Phalcon\\Db\\Adapter\\Pdo::query` in fetchOne get All fetch …"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212b5818912b45d36a32c2",
    "number": 13514,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: [#13447](https://github.com/phalcon/cphalcon/issues/13447)\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [X] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [X] I have checked that another pull request for this purpose does not exist.\r\n- [X] I wrote some tests for this PR.\r\n\r\nSmall description of change: Added Volt tags to array helper in Volt Compiler. Full list of tags added are as follows;\r\n* url_field\r\n* color_field\r\n* range_field\r\n* date_time_field\r\n*  date_time_local_field\r\n* month_field\r\n* time_field\r\n* week_field\r\n\r\n_Note: I wrote a local test using the [phalcon/mvc](https://github.com/phalcon/mvc) project._\r\n\r\nThanks\r\n",
    "head_branch": "bugfix/volt-compiler",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13514 from CameronHall/bugfix/volt-compiler\n\nFixes #13447: Added Volt tags to array helper in Volt Compiler"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212b5918912b45d36a32c3",
    "number": 13511,
    "body": "Hello!\r\n\r\n* Type: ci improvements\r\n* Link to issue: https://github.com/travis-ci/travis-ci/issues/9717\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\n- Add PHP 7.3 support to the build matrix on Travis CI\r\n- Removed PHP 5.5 from build matrix (no longer supported by Travis CI)\r\n- Do not run legacy tests (due to fantastic complexity associated with the satisfaction of dependencies from a past era)\r\n- Reorganize and refactor some unit tests\r\n- Refactor Travis CI build/testing stages\r\n\r\nThanks\r\n\r\n",
    "head_branch": "feature/improved-ci-integration",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Add PHP 7.3 support [skip appveyor] (#13511)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212b5a18912b45d36a32c4",
    "number": 13507,
    "body": "Fix #13341 w3c validation warning when document type is html5",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212b5b18912b45d36a32c5",
    "number": 13503,
    "body": "Hello!\r\n\r\n* Type: documentation\r\n* Link to issue: -\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nURL additional parsing with `convert()` function example.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add documentation for Route::convert [ci skip]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212b5d18912b45d36a32c6",
    "number": 13502,
    "body": "Type: documentation\r\n\r\nSmall description of change:\r\nexample how to deep parse URL with convert() function",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212b5e18912b45d36a32c7",
    "number": 13500,
    "body": "This addresses #13498\r\n\r\n* Type: enchancement and possibly bug fix\r\n* Link to issue: #13498\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n- `Phalcon\\Forms\\Form::clear()` method will no longer call `Phalcon\\Forms\\Element::clear()`, instead it will clear element's value itself\r\n- `Phalcon\\Forms\\Element::clear()` will now call `Phalcon\\Forms\\Form::clear()` passing its name or will clear itself if form does not exist\r\n- `Phalcon\\Forms\\Element::getValue()` will now call `Phalcon\\Forms\\Form::getValue()` or return its default value (instead of hardcoded `null`) if form does not exist\r\n- `Phalcon\\Forms\\Form::getValue()` will now try to get element's value from the `Tag` or by calling element's `getDefault()` method before returning `null`\r\n\r\nMore info: #13498",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13500 from scrnjakovic/patch-2\n\nChanges implementation of form's and element's getValue() and clear() methods"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212b5f18912b45d36a32c8",
    "number": 13499,
    "body": "This addresses #13498 \r\n\r\n* Type: enchancement and possibly bug fix\r\n* Link to issue:#13498\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212b6018912b45d36a32c9",
    "number": 13496,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nFixed  `Phalcon\\Http\\Response::setFileToSend` to append `;` at the end of line\r\n\r\nThanks\r\n\r\n",
    "head_branch": "filename_error",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13496 from cq-z/filename_error\n\nFilename error"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212b6118912b45d36a32ca",
    "number": 13494,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #13492 \r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\nChanges to the paginator as described in the linked issue. \r\n- Added proxy method `paginate()` to do the same thing as `getPaginate()`.\r\n- Added `previous` property to replace `before` after v4.0\r\n- Added deprecated in docblocks for `total_items`, `before` and `getPaginate()`\r\n",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13494 from niden/4.0.x\n\n[#13492] Changes to the paginator"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212b6218912b45d36a32cb",
    "number": 13493,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #13492 \r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\nChanges to the paginator as described in the linked issue. \r\n- Added proxy method `paginate()` to do the same thing as `getPaginate()`.\r\n- Added `previous` property to replace `before` after v4.0\r\n- Added deprecated in docblocks for `total_items`, `before` and `getPaginate()`\r\n",
    "head_branch": "3.4.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13493 from niden/3.4.x\n\n[#13492] Changes to the paginator"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212b6318912b45d36a32cc",
    "number": 13486,
    "body": "Just checking php 7.3 build",
    "head_branch": "3.4.x-check-php7.3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212b6418912b45d36a32cd",
    "number": 13480,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/11605\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [X] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [X] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change: The parameters aren't stored in `this->_bindParams` when calling the `execute` function. This raises a problem when using array placeholders as there is a check [here](https://github.com/phalcon/cphalcon/blob/master/phalcon/mvc/model/query.zep#L671) to see if the binded parameter is in _bindParams. Because `execute` function doesn't store the `mergedParams` in `this->_bindParams`, it creates the problem above.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "bugfix/subquery-binded-params",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13480 from CameronHall/bugfix/subquery-binded-params\n\nFixes #11605: Parameters are stored in _bindParams when calling query execute"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212b6618912b45d36a32ce",
    "number": 13479,
    "body": "This fixes the issue where if parameters are specified, they also get rendered into the form element as parameters attribute because whole params array is passed to `self::renderAttributes`.\r\n\r\n* Type: bug fix\r\n* Link to issue: I don't think there was an issue raised because of this yet\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13479 from scrnjakovic/patch-1\n\nUnset params[\"parameters\"]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212b6718912b45d36a32cf",
    "number": 13458,
    "body": "",
    "head_branch": "3.4.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13458 from phalcon/3.4.x\n\n3.4.1"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212b6818912b45d36a32d0",
    "number": 13457,
    "body": "fix https://github.com/phalcon/cphalcon/issues/13450\r\n\r\nHello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/13450\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [X] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [X] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.4.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix issue with validation on locales where comma used (#13457)\n\n* Fix issue with validation on locales where comma used as decimal point \r\n* Add tests for Numericality locales where comma uses as decimal point\r\n* Update change log"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212b6a18912b45d36a32d1",
    "number": 13456,
    "body": "Hello!\r\nWhen you have a configuration for `prefix` and `statsKey` you can not retrieve keys correctly by `queryKeys`. It gives you keys with prefix and if you want to delete that key, you have to remove prefix first.\r\n\r\n* Type: bug fix | backward incompatible\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\nRemove prefix of keys which are storing in a list when using `statsKey` configuration\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix-cache-redis-issue",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "changelog 4.0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212b6b18912b45d36a32d2",
    "number": 13455,
    "body": "Hello!\r\nConsider you want to use `phalcon/cache/backend/redis`.   \r\nWhen you have a configuration for both `prefix` and `statsKey` you can not retrieve keys correctly by `queryKeys`. It gives you keys with prefix and if you want to delete that key, you have to remove prefix first.\r\n\r\n* Type: bug fix | backward incompatible\r\n\r\n**In raising this pull request, I confirm the following (please checkboxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\nRemoving prefix from keys which are storing in a list.  \r\n\r\nThanks\r\n\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212b6c18912b45d36a32d3",
    "number": 13448,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n\r\nDefault value for Boolean type parameter.\r\n\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\n\r\nThanks\r\n\r\n",
    "head_branch": "loader-patch",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "use varuable \"ns\" instead of scale value \"\\\\\""
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212b6d18912b45d36a32d4",
    "number": 13443,
    "body": "callbak -> callback\r\n\r\nHello!\r\n\r\n* Type: code quality\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [X] I have checked that another pull request for this purpose does not exist.\r\n- [X] I wrote some tests for this PR.\r\n\r\nThanks",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Spelling error\n\ncallbak -> callback"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212b6e18912b45d36a32d5",
    "number": 13437,
    "body": "Hello!\r\n\r\n* Type: testing/build\r\n* Link to issue: #13434\r\n\r\n- [x] Install PSR PHP extension on Travis CI (`psr.so`)\r\n- [x] Install PSR PHP extension on AppVeyor (`php_psr.dll`)\r\n- [x] Do not require `psr/*` packages from the Packagist\r\n- [x] Update docs\r\n\r\nAs everyone can see there is project's dependencies cause the given package to be installed:\r\n\r\n```shell\r\n#!/usr/bin/env bash\r\n\r\npackages=(\r\n  \"psr/cache\"\r\n  \"psr/container\"\r\n  \"psr/http-message\"\r\n  \"psr/http-server-handler\"\r\n  \"psr/http-server-middleware\"\r\n  \"psr/link\"\r\n  \"psr/log\"\r\n  \"psr/simple-cache\"\r\n)\r\n\r\nfor package in \"${packages[@]}\"; do\r\n  composer depends \"${package}\" 2>/dev/null || true\r\ndone\r\n```\r\nAll dependencies are satisfied and this is why tests passed. This PR show that in real world we don't need the source code (`psr.h`) of the PSR PHP extension and don't need install `psr/*` packages from the Packagist. To work properly Phalcon 4 will require only PSR extension to be installed and enabled.\r\n\r\n/cc @phalcon/framework-team \r\n\r\nP.S. I think to _compile_ Phalcon we'll need to install `psr.h`  first (to the common PHP includes path) as well as `psr.so`. Users will need only  `psr.so`.\r\n",
    "head_branch": "feature/install-psr-on-travis",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Update docs [ci skip]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212b6f18912b45d36a32d6",
    "number": 13432,
    "body": "Hello!\r\n\r\n* Type: documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\ncreate a roadmap file for features and changes in phalcon 4.0 . current contents are suggested by contributers in Discord general channel\r\nThanks\r\n\r\n",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212b7018912b45d36a32d7",
    "number": 13429,
    "body": "Hello!\r\n\r\n* Type: documentation\r\n* Link to issue: https://docs.phalconphp.com/en/3.3/api/Phalcon_Mvc_View_Engine_Volt_Compiler\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n\r\nSmall description of change:\r\n\r\nComment at line 2408\r\n```php\r\n$compiler->compile(\"views/layouts/main.volt\", \"views/layouts/main.volt.php\");\r\n```\r\nshould be \r\n```php\r\n$compiler->compileFile(\"views/layouts/main.volt\", \"views/layouts/main.volt.php\");\r\n```\r\n\r\nThis error is reflected in documentation page too.\r\n\r\n\r\nThanks\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update compiler.zep\n\nComment at line 2408 `$compiler->compile(\"views/layouts/main.volt\", \"views/layouts/main.volt.php\");`\r\nshould be `$compiler->compileFile(\"views/layouts/main.volt\", \"views/layouts/main.volt.php\");`\r\n\r\nThis error is reflected in documentation page too"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212b7118912b45d36a32d8",
    "number": 13426,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #12892, #13418\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: Fixed `Phalcon\\Http\\Request::getPut` to provide json content-type support.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix/request/add-json-content-type-support-for-put",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Fixed Request::getPut to provide json content-type support"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212b7218912b45d36a32d9",
    "number": 13425,
    "body": "support json body\r\n\r\nHello!\r\n\r\n* Type: bug fix\r\n* Link to issue:  #13418 \r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nadd json content-type support with request body\r\n\r\nThanks\r\n\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212b7318912b45d36a32da",
    "number": 13424,
    "body": "Removes boolean bind type for tinyblobs (defaults to string bind type like other blobs)\r\n\r\n* Type: bug fix\r\n* Link to issue:\r\nhttps://github.com/phalcon/cphalcon/issues/13423\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\nPDO bind type for TinyBlobs were incorrectly set as boolean\r\n",
    "head_branch": "3.4.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "adds tinyblob bindtype fix to changelog"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212b7418912b45d36a32db",
    "number": 13422,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: Well count and range was pointless there code can work like this.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.4.x-get-route-performance",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove count and range"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212b7618912b45d36a32dc",
    "number": 13420,
    "body": "Hello!\r\n\r\n* Type: bug fix | code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.4.x-get-route-performance",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add fix for getRouteById and add test"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212b7718912b45d36a32dd",
    "number": 13414,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: Add cache timeout option support to the redis adapter\r\n\r\nThanks\r\n",
    "head_branch": "3.4.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[NFR] Add cache timeout option support to the redis adapter (#13414)\n\n* feature: add redis cache timeout options\r\n\r\n* fix: add timeout  parameter\r\n\r\n*  test:add redis timeout test\r\n\r\n* docs: add changelog\r\n\r\n* Update change log [ci skip]"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212b7818912b45d36a32de",
    "number": 13413,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: Actually i would consider it as a hotfix because currently it's pretty big performance hit for big applications which are generating many urls using phalcon services and have many routes. In our app we have 725 routes and we have 50 links generation for single page. It was taking 270ms for doing this. With similar changes like here now it's taking 0.133ms(cached) or 18ms(not cached).\r\n\r\nThere are already tests for getRouteByName/getRouteById, it won't change anyhow logic of this, well the only case is if we after adding two routes we will swap names of them after already using getRouteByName for their names - but im not sure even why do this and this is a very rare case.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.4.x-get-route-performance",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "3.4.x Fix performance of getRouteByName/Id (#13413)\n\n* Fixed getRouteByName/getRouteById performance\r\n\r\n* Fixed indents [ci skip]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212b7918912b45d36a32df",
    "number": 13408,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/13398\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: Fixes #13398 \r\n\r\nThanks\r\n\r\n",
    "head_branch": "issue13398",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixes #13398"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212b7a18912b45d36a32e0",
    "number": 13407,
    "body": "Hello!\r\n\r\n* Type:  new feature \r\n\r\n**When I want to get all the cookies, I need to use this method.**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.4.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212b7b18912b45d36a32e1",
    "number": 13395,
    "body": "Refs: #11709, #11710, #11029",
    "head_branch": "feature/add-static-closure",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212b7c18912b45d36a32e2",
    "number": 13392,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/13380\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nAdded `Phalcon\\Mvc\\Router\\RouteInterface::convert` so that calling `Phalcon\\Mvc\\Router\\Group::add` will return an instance that has `convert` method [#13380](https://github.com/phalcon/cphalcon/issues/13380)\r\n\r\nThanks\r\n\r\n",
    "head_branch": "feature/route-interface-convert",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Added RouteInterface::convert"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212b7d18912b45d36a32e3",
    "number": 13391,
    "body": "",
    "head_branch": "cleanup-php5-stuff",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Remove no longer supported php 5 build"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212b8618912b45d36a32e4",
    "number": 13389,
    "body": "- Merge change from current upstream branch\r\n- Update Travis CI & AppVeyour builds\r\n- Update tests/build dependencies\r\n- Regenerated build\r\n- Regenerated code in the `ext` directory to use PHP 7 by default\r\n- Used latest Zephir",
    "head_branch": "merge-upstream",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Small cleanup"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212b8718912b45d36a32e5",
    "number": 13388,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #13379 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\n- Added `Phalcon\\Crypt::setHashAlgo` to set the name of hashing algorithm used to the calculating message digest\r\n\r\n- Added `Phalcon\\Crypt::getHashAlgo` to get the name of hashing algorithm used to the calculating message digest\r\n\r\n- Added `Phalcon\\Crypt::useSigning` to set if the calculating message digest must used\r\n\r\n- Added `Phalcon\\Crypt::getAvailableHashAlgos` to get a list of registered hashing algorithms suitable for calculating message digest \r\n\r\n- Changed `Phalcon\\Crypt::__construct` so now the cipher can be set at object construction and the calculating message digest can be enabled without the need to call `setCipher` or `useSigning` explicitly\r\n\r\n----\r\n\r\nNOTICE \r\n\r\nThe calculating message digest feature is **disabled by default for Phalcon 3.x** to not break existent applications but it will be enabled by default for Phalcon 4.0.0.\r\n\r\nTo use this feature for Phalcon 3.x you'll need to call `Phalcon\\Crypt::useSigning(true)` or pass `TRUE` as the second argument to the `Phalcon\\Crypt::__construct`.\r\n\r\nFinally the ability to sign encrypted cookie introduced in the #13367 will also use this mechanism. Thus you must enable calculating message digest for `Crypt` to  sign encrypted cookie .\r\n\r\n\r\nIMPORTANT:\r\n\r\nAfter enabling the calculating message digest the `Phalcon\\Crypt::decrypt` and `Phalcon\\Crypt::decryptBase64`  will throws `Phalcon\\Crypt\\Mismatch` in case of request forgery detected (eg. hash mismatch).\r\n",
    "head_branch": "feature/using-hmac-in-crypt",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixed Crypt test for PHP 5.5"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212b8818912b45d36a32e6",
    "number": 13386,
    "body": "Just testing this.",
    "head_branch": "3.4.x-viewsymbol",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212b8918912b45d36a32e7",
    "number": 13382,
    "body": "Removed blog link from read me.\r\n\r\nHello!\r\n\r\n* Type: documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change: Removed Blog Link from README.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Blog is Obsolete\n\nRemoved blog link from read me."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212b8a18912b45d36a32e8",
    "number": 13381,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/13379\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nUsing HMAC to prevent forgery in Crypt.\r\n\r\nIf HMAC is compared and is not valid, it throws an exception.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "hmac_crypt",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212b8b18912b45d36a32e9",
    "number": 13370,
    "body": "https://github.com/phalcon/cphalcon/issues/11755",
    "head_branch": "test/model-relations",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Test get related record properly using composite key"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212b8c18912b45d36a32ea",
    "number": 13367,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n\r\nSmall description of change:\r\n\r\n- Added `Phalcon\\Http\\Cookie::setSignKey` to set sign key used to generate a message authentication code\r\n- Added `Phalcon\\Http\\Cookie\\Mismatch`. Exception thrown in `Phalcon\\Http\\Cookie` will use this class\r\n\r\nTypical usage:\r\n\r\n```php\r\nuse Phalcon\\DI\\FactoryDefault;\r\nuse Phalcon\\Crypt;\r\nuse Phalcon\\Http\\Cookie;\r\n\r\n$di = new FactoryDefault();\r\n\r\n/**\r\n * Registering a crypt instance\r\n */\r\n$di->setShared('crypt', function () {\r\n    $crypt = new Crypt();\r\n    \r\n    /**\r\n     * The `$key' should have been previously generated in a cryptographically safe way.\r\n     *\r\n     * @see \\Phalcon\\Security\\Random\r\n     */\r\n    $key = \"T4\\xb1\\x8d\\xa9\\x98\\x05\\\\\\x8c\\xbe\\x1d\\x07&[\\x99\\x18\\xa4~Lc1\\xbeW\\xb3\";\r\n    $crypt->setKey($key);\r\n\r\n    return $crypt;\r\n});\r\n\r\n$cookieName  = 'top-secret';\r\n$cookieValue = 'enigma';\r\n\r\n$cookie = new Cookie($cookieName, $cookieValue, time() + 3600);\r\n$cookie->setDI($di);\r\n$cookie->useEncryption(true);\r\n\r\n/**\r\n * The key MUST be at least 32 characters long\r\n * and generated using a cryptographically secure pseudo random generator.\r\n *\r\n * Use NULL to disable cookie signing.\r\n *\r\n * @see \\Phalcon\\Security\\Random\r\n */\r\n$key = \"#1dj8$=dp?.ak//j1V$~%*0XaK\\xb1\\x8d\\xa9\\x98\\x054t7w!z%C*F-Jk\\x98\\x05\\\\\\x5c\";\r\n\r\n$cookie->setSignKey($key);\r\n\r\n// Send the cookie to the HTTP client.\r\n$cookie->send();\r\n```\r\n\r\nAlso there is an ability to set sign key globally using the `Phalcon\\Http\\Response\\Cookies`:\r\n```php\r\nuse Phalcon\\Di;\r\nuse Phalcon\\Crypt;\r\nuse Phalcon\\Http\\Response\\Cookies;\r\n\r\n$di = new Di();\r\n\r\n$di->set(\r\n    'crypt',\r\n    function () {\r\n        $crypt = new Crypt();\r\n\r\n        // The `$key' should have been previously generated in a cryptographically safe way.\r\n        $key = \"T4\\xb1\\x8d\\xa9\\x98\\x05\\\\\\x8c\\xbe\\x1d\\x07&[\\x99\\x18\\xa4~Lc1\\xbeW\\xb3\";\r\n        $crypt->setKey($key);\r\n\r\n        return $crypt;\r\n    }\r\n);\r\n\r\n$di->set(\r\n    'cookies',\r\n    function () {\r\n        // This class is a bag to manage the cookies.\r\n        $cookies = new Cookies();\r\n\r\n        // The `$key' MUST be at least 32 characters long and generated using a\r\n        // cryptographically secure pseudo random generator.\r\n        $key = \"#1dj8$=dp?.ak//j1V$~%*0XaK\\xb1\\x8d\\xa9\\x98\\x054t7w!z%C*F-Jk\\x98\\x05\\\\\\x5c\";\r\n        $cookies->setSignKey($key);\r\n\r\n        return $cookies;\r\n    }\r\n);\r\n```\r\n",
    "head_branch": "feature/sign-cookie",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Added Phalcon\\Http\\Response\\Cookies::setSignKey"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212b8d18912b45d36a32eb",
    "number": 13366,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n\r\nSmall description of change:\r\n\r\n- Added `Phalcon\\Crypt::__construct` so now available ciphers and IV length will be set object construction\r\n- Changed `Phalcon\\Crypt::setCipher` so that IV length will be reconfigured during setting the cipher algorithm\r\n- Changed `Phalcon\\Crypt::setCipher` so that method will throw `Phalcon\\Crypt\\Exception` if a cipher is unavailable\r\n\r\n",
    "head_branch": "fix/improved-crypt",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Improved Crypt::assertCipherIsAvailable assertion"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212b8e18912b45d36a32ec",
    "number": 13363,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #11487\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nFixed `Phalcon\\Mvc\\Model\\Query\\Builder::having` and `Phalcon\\Mvc\\Model\\Query\\Builder::where` to correctly merge the bind types.\r\n\r\n#### `where`\r\n\r\n```php\r\n$builder = new Builder();\r\n$builder->setDi($di);\r\n\r\n$builder\r\n    ->from(Robots::class)\r\n    ->where(\r\n        'id > :id:',\r\n        [':id:' => 1],\r\n        [':id:' => \\PDO::PARAM_INT]\r\n    );\r\n\r\n$builder->where(\r\n    'name = :name:',\r\n    [':name:' => 'Terminator'],\r\n    [':name:' => \\PDO::PARAM_STR]\r\n);\r\n```\r\n**Actual**\r\n```php\r\nassert($builder->getQuery()->getBindTypes() === [':name:' => 2])\r\n```\r\n\r\n**Expected**\r\n```php\r\nassert($builder->getQuery()->getBindTypes() === [':id:' => 1, ':name:' => 2])\r\n```\r\n\r\n#### `having`\r\n\r\n```php\r\n$builder = new Builder();\r\n$builder->setDi($di);\r\n\r\n$builder\r\n    ->from(Robots::class)\r\n    ->columns(\r\n        [\r\n            'COUNT(id)',\r\n            'name'\r\n        ]\r\n    )\r\n    ->groupBy('COUNT(id)')\r\n    ->having(\r\n        'COUNT(id) > :cnt:',\r\n        [':cnt:' => 5],\r\n        [':cnt:' => \\PDO::PARAM_INT]\r\n    );\r\n\r\n$builder->having(\r\n    \"CONCAT('is_', type) = :type:\",\r\n    [':type:' => 'is_mechanical'],\r\n    [':type:' => \\PDO::PARAM_STR]\r\n);\r\n```\r\n\r\n**Actual**\r\n```php\r\nassert($builder->getQuery()->getBindTypes() === [':type:' => 2])\r\n```\r\n\r\n**Expected**\r\n```php\r\nassert($builder->getQuery()->getBindTypes() === [':cnt:' => 1, ':type:' => 2])\r\n```\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix/query-builder-bind-types",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added tests for Builder::having and Builder::where"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212b9018912b45d36a32ed",
    "number": 13362,
    "body": "",
    "head_branch": "3.4.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Deprecate PHP 5 on README.md"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212b9118912b45d36a32ee",
    "number": 13361,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #13360\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nAdded `Phalcon\\Loader::setFileCheckingCallback` to set internal file existence resolver.\r\n```php\r\n// Default behavior.\r\n$loader->setFileCheckingCallback(\"is_file\");\r\n\r\n// Faster than `is_file()`, but implies some issues if\r\n// the file is removed from the filesystem.\r\n$loader->setFileCheckingCallback(\"stream_resolve_include_path\");\r\n\r\n// Do not check file existence.\r\n$loader->setFileCheckingCallback(null);\r\n```\r\n\r\nThanks\r\n\r\n----\r\n\r\n/cc @dugwood\r\n",
    "head_branch": "feature/loader-file-checking",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Bump phalcon version on AppVeyor"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212b9318912b45d36a32ef",
    "number": 13358,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue:\r\n[Issue 133531](https://github.com/phalcon/cphalcon/issues/13351)\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "hotfix-3.4.x-issue-13351-merge-config-with-non-zero-based-numeric-keys",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212b9718912b45d36a32f0",
    "number": 13357,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue:\r\n[Issue 13351](https://github.com/phalcon/cphalcon/issues/13351)\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "hotfix-3.4.x-issue-13351-merge-config-with-numeric-keys",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212b9b18912b45d36a32f1",
    "number": 13356,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n[Issue 13351](https://github.com/phalcon/cphalcon/issues/13351)\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "hotfix-3.3.x-issue-13351-merge-config-with-numeric-keys",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212b9c18912b45d36a32f2",
    "number": 13354,
    "body": "In cases where related models are set before save on *both* sides of a `hasMany`/`belongsTo` relationship, `Model::save()` goes into an infinite loop as its pre and post-save checks for relations to save never check if a related model had already been saved:\r\n\r\n    Save A\r\n     \\_ A hasMany B (post-save related records)\r\n      \\_ Save B\r\n       \\_ B belongsTo A (pre-save related records)\r\n        \\_ Save A\r\n         \\_ ...\r\n\r\nFor me this was causing a segfault, though with xdebug installed it would error before crashing at the `max_nesting_level`.\r\n\r\nI ran into this while writing a model where relationships are traversed in both directions as part of some pre-save processing (with [a little plumbing](https://gist.github.com/stecman/f74b70f5e549f6c73b5baa4154bc7caa) to use relations before saving).",
    "head_branch": "fix_save_circular_relations",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix segfault on infinite recursion into circular model relations\n\nIn cases where related models were set before save on *both* sides of a\nhasMany/belongsTo relationship, `Model::save()` would go into an infinite\nloop as its pre and post-save checks for relations to save never checked\nif the related model had already been saved:\n\n    Save A\n     \\_ A hasMany B\n      \\_ Save B\n       \\_ B belongsTo A\n        \\_ Save A\n         \\_ ...\n\nFor me this was causing a segfault, though with xdebug installed it would\nerror before crashing at the max_nesting_level."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212b9d18912b45d36a32f3",
    "number": 13353,
    "body": "Hello!\r\n\r\n* Type: documentation\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212b9e18912b45d36a32f4",
    "number": 13347,
    "body": "-  Renamed `DEVPACK_PATH` AppVeyor environment variable to `PHP_DEVPACK` to allow build using Zephir\r\n- Cherry-pick stale file ",
    "head_branch": "3.4.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Renamed DEVPACK_PATH => PHP_DEVPACK to allow build using Zephir"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212b9f18912b45d36a32f5",
    "number": 13343,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\nSQLSTATE[HY093]: Invalid parameter number: parameter was not defined\r\nSQL Error was coming, while binding non-sequential array to phalcon query builder ",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ba018912b45d36a32f6",
    "number": 13332,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #13315 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nFixed regression (introduced in [#13308](https://github.com/phalcon/cphalcon/pull/13308)) for `Phalcon\\Debug\\Dump::output` to correctly work with detailed mode\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fixes/debug-dump",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Small tests refactoring"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212ba118912b45d36a32f7",
    "number": 13331,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #13327 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md).\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\n#### Description\r\n\r\nThe HTTP authorization header has a format\r\n```\r\nAuthorization: <type> <credentials>\r\n````\r\n\r\nwhere `<type>` is an authentication type. A common type is `Basic`. Other types described in:\r\n\r\n* [IANA registry of Authentication schemes](http://www.iana.org/assignments/http-authschemes/http-authschemes.xhtml)\r\n* [Authentication for AWS servers (`AWS4-HMAC-SHA256`)](https://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-auth-using-authorization-header.html)\r\n\r\nThus, in 99.99% use cases the authentication type is:\r\n\r\n- `Basic`\r\n- `Bearer`\r\n- `Digest`\r\n- `HOBA`\r\n- `Mutual`\r\n- `Negotiate`\r\n- `OAuth`\r\n- `SCRAM-SHA-1`\r\n- `SCRAM-SHA-256`\r\n- `vapid`\r\n- `AWS4-HMAC-SHA256`\r\n\r\nThis Pull Request introduces the ability to listen `request:beforeAuthorizationResolve` and `request:afterAuthorizationResolve` events. This ability enables using custom authorization resolvers.\r\n\r\n#### Examples\r\n\r\n##### Without using custom authorization resolver\r\n\r\n**Test**\r\n\r\n```php\r\nuse Phalcon\\Http\\Request;\r\n\r\n$_SERVER['HTTP_AUTHORIZATION'] = 'Enigma Secret';\r\n\r\n$request = new Request();\r\nprint_r($request->getHeaders());\r\n```\r\n\r\n**Result**\r\n\r\n```\r\nArray\r\n(\r\n    [Authorization] => Enigma Secret\r\n)\r\n\r\nType: Enigma\r\nCredentials: Secret\r\n```\r\n\r\n##### Using custom authorization resolver\r\n\r\n```php\r\nuse Phalcon\\Di;\r\nuse Phalcon\\Events\\Event;\r\nuse Phalcon\\Http\\Request;\r\nuse Phalcon\\Events\\Manager;\r\n\r\nclass NegotiateAuthorizationListener\r\n{\r\n    public function afterAuthorizationResolve(Event $event, Request $request, array $data)\r\n    {\r\n        if (empty($data['server']['CUSTOM_KERBEROS_AUTH'])) {\r\n            return false;\r\n        }\r\n\r\n        list($type,) = explode(' ', $data['server']['CUSTOM_KERBEROS_AUTH'], 2);\r\n\r\n        if (!$type || stripos($type, 'negotiate') !== 0) {\r\n            return false;\r\n        }\r\n\r\n        return [\r\n           'Authorization'=> $data['server']['CUSTOM_KERBEROS_AUTH'],\r\n        ];\r\n    }\r\n}\r\n\r\n$_SERVER['CUSTOM_KERBEROS_AUTH'] = 'Negotiate a87421000492aa874209af8bc028';\r\n\r\n$di = new Di();\r\n\r\n$di->set('eventsManager', function () {\r\n    $manager = new Manager();\r\n    $manager->attach('request', new NegotiateAuthorizationListener());\r\n\r\n    return $manager;\r\n});\r\n\r\n$request = new Request();\r\n$request->setDI($di);\r\n\r\nprint_r($request->getHeaders());\r\n```\r\n\r\n**Result**\r\n\r\n```\r\nArray\r\n(\r\n    [Authorization] => Negotiate a87421000492aa874209af8bc028\r\n)\r\n\r\nType: Negotiate\r\nCredentials: a87421000492aa874209af8bc028\r\n```\r\n\r\nFor more please see tests in this PR.\r\nThanks\r\n\r\n",
    "head_branch": "feature/auth-events",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixed PHP 5 related issues (getting eventsManager)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ba218912b45d36a32f8",
    "number": 13330,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #13326 \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md).\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nAdded `Phalcon\\Mvc\\Router::attach` to add `Route` object directly into `Router`:\r\n\r\n```php\r\nuse Phalcon\\Mvc\\Router;\r\nuse Phalcon\\Mvc\\Router\\Route;\r\n\r\nclass CustomRoute extends Route {\r\n    // ...\r\n}\r\n\r\n$router = new Router();\r\n\r\n$router->attach(\r\n    new CustomRoute(\"/about\", \"About::index\", [\"GET\", \"HEAD\"]),\r\n    Router::POSITION_FIRST\r\n);\r\n```\r\n\r\nThanks\r\n\r\n",
    "head_branch": "feature/attach-route",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added Phalcon\\Mvc\\Router\\Route::attach"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212ba318912b45d36a32f9",
    "number": 13327,
    "body": "* Type: bug fix\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [X] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n- [X] Didn't even test it. I have no intention to go that deep into phalcon development and just want to share this tiny fix.\r\n\r\nSmall description of change:\r\n\r\nI found this when unsuccessfully trying to access a custom SHA256 authorization header. The request object drops any auth header that does not follow \"basic\", \"digest\" or \"bearer\" scheme. \r\n\r\nNot sure if this fix it will break any phalcon authentication magic but I'd say any authorization header\r\nshould be at least passed through.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ba518912b45d36a32fa",
    "number": 13325,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/12220\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [X] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [X] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\nAdded event call `afterFetch` in `Phalcon\\Mvc\\Model:refresh`\r\nThanks\r\n\r\n",
    "head_branch": "3.3.x.dev",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added call event `afterFetch` in `Phalcon\\Mvc\\Model:refresh`"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ba618912b45d36a32fb",
    "number": 13323,
    "body": "Is there any reason to drop any auth header except \"basic\", \"digest\" and \"bearer\"?\r\n\r\nHello!\r\n\r\n* Type: bug fix \r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [ ] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n- [X] none of those above\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ba718912b45d36a32fc",
    "number": 13316,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #13315\r\n\r\n**Delete detailed mode for Class `Phalcon\\\\Debug\\\\Dump` when php version >= 7.2, because I can not get the object protected or private vars.**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "issue/#13315",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ba818912b45d36a32fd",
    "number": 13314,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n- Added method for retrieving reason phrase from Status\r\n- There is no point to have it in the Header if it can't be retrieved in an OOP way\r\n\r\nThanks\r\n\r\n",
    "head_branch": "response-reason-phrase",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added method for retrieving reason phrase\n\n- Added method for retrieving reason phrase from Status\r\n- There is no point to have it in the Header if it can't be retrieved in an OOP way"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212baa18912b45d36a32fe",
    "number": 13313,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "4.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212bab18912b45d36a32ff",
    "number": 13312,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: -\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\nFix test's bugs\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.3_fix_tests_bug",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix test bugs"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212bac18912b45d36a3300",
    "number": 13311,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: - \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\nFix tests\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.3_fix_tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212bb418912b45d36a3301",
    "number": 13310,
    "body": "",
    "head_branch": "3.3.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13310 from phalcon/3.3.x\n\n3.3.2"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212bb518912b45d36a3302",
    "number": 13308,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/13253\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nThe `each()` function in `Phalcon\\Debug\\Dump` is deprecated. I have replaced it with of `for...in` loop.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "issue-13253",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Replace deprecated `each()` function with for...in loop (#13308)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212bb618912b45d36a3303",
    "number": 13307,
    "body": "…ected!\r\n\r\nHello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #13306, #13302\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "issue/#13306",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix Dynamic update soft delete for renamed model does not work as exp… (#13307)\n\n* Fix Dynamic update soft delete for renamed model does not work as expected!\r\n\r\n* Fix Dynamic update soft delete for renamed model does not work as expected!\r\n\r\n* Fix Dynamic update soft delete for renamed model does not work as expected!\r\n\r\n* Update CHANGELOG-3.3md"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212bb718912b45d36a3304",
    "number": 13303,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [ ] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212bb818912b45d36a3305",
    "number": 13295,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue: #13294 \r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.3.x-fix-broken-formmessages",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixed Phalcon\\Forms\\Form::getMessages to return back previous behaviour (#13295)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212bba18912b45d36a3306",
    "number": 13293,
    "body": "",
    "head_branch": "feaature/appveyor-builds",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Refactored AppVeyor builds"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212bbb18912b45d36a3307",
    "number": 13292,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/13256\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\n**Small description of change**:\r\n\r\nI rewritten _Phalcon\\Logger\\Multiple_ to make it consistent with _Phalcon\\Logger\\AdapterInterface_ \r\n\r\n**Do I need to write unit tests for this modification?**\r\n\r\nNot only checking\r\n```php\r\nif ($multipleStreamAdapter instanceof Phalcon\\Logger\\AdapterInterface)\r\n```\r\nbut also testing it's previous and new functionality e.g. handling transaction?\r\n\r\nThanks",
    "head_branch": "tkuter/ISS-13256-MakeClassPhalconLoggerMultipleConsistentWithPhalconLoggerAdapterInterface",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212bbd18912b45d36a3308",
    "number": 13291,
    "body": "* Type: code quality\r\n* Link to issue: #13290\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change: just I remove the parameter. In test anywhere use `getMessages()` method with this parameter",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212bbe18912b45d36a3309",
    "number": 13289,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue: -\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\nMove ViewEnginesVoltTest from unit-tests to tests folder\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.3.move_viewtest",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Move ViewEnginesVoltTest to tests"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212bbf18912b45d36a330a",
    "number": 13288,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #12648\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\nThe unit test for issue #12648 is incorrect and doesn't test the failure condition of the issue properly. The issue is marked as fixed but the problem is still present in 3.3.x.\r\n\r\nThanks\r\nPetr Sedlacek\r\n",
    "head_branch": "issue12648",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212bc018912b45d36a330b",
    "number": 13286,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nAdd method `count` for Phalcon\\Mvc\\Model\\Criteria\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.3.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212bc118912b45d36a330c",
    "number": 13285,
    "body": "When I use Phalcon  in a multi-process scene,  I have to remove any DB connections copied from parent.\r\n\r\nso I add two methods: one check a shared instance for a service exists or not, and another to remove a shared instance. That we can recreate it if needed.\r\n\r\nRefs: https://github.com/phalcon/cphalcon/issues/13440\r\n\r\n",
    "head_branch": "remove_shared_instance",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212bc218912b45d36a330d",
    "number": 13284,
    "body": "Hello!\r\n\r\n* Type: documentation\r\n* Link to issue:\r\n\r\nSmall description of change:\r\nadd requirement php7.2.x\r\nContinued from #13282 \r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.3.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update README.md\n\nadd require php7.2.x"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212bc418912b45d36a330e",
    "number": 13282,
    "body": "Hello!\r\n\r\n* Type: documentation\r\n* Link to issue:\r\n\r\nSmall description of change:\r\nPHP 7.2 added as a README.md requirement.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212bc518912b45d36a330f",
    "number": 13279,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue: -\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\nRefactor and move to integration tests builderCest\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.3.refactor_builder_cest",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "refactor builderCest"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212bc618912b45d36a3310",
    "number": 13278,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue: -\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\nRefactor CriteriaTest\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.3.refactor_criteria_test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Refactor CriteriaTest"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212bc718912b45d36a3311",
    "number": 13277,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue: -\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\nAdd extra annotation to UrlTest\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.3.add_annotation_to_url_test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add extra annotation to UrlTest"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212bc918912b45d36a3312",
    "number": 13276,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue: -\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\nRefactor QueryTest\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.3.refactor_query_test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Refactor QueryTest"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212bca18912b45d36a3313",
    "number": 13275,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nI Add a method `count` for Phalcon\\Mvc\\Model\\Criteria\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.3.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212bcb18912b45d36a3314",
    "number": 13273,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue: -\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\nRefactor UrlTest\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.3.refactor_urlTest",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Refactor UrlTest"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212bcc18912b45d36a3315",
    "number": 13271,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue: -\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\nRefactor RouterTest\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.3.refactor_route_test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "refactor RouterTest"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212bcd18912b45d36a3316",
    "number": 13270,
    "body": "",
    "head_branch": "feature/appveyor-builds",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Build DLLs for PHP 7.2 on AppVeyor"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212bce18912b45d36a3317",
    "number": 13269,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #13012\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: Fixed `Phalcon\\Db\\Dialect\\Mysql::modifyColumn` to produce valid SQL for renaming the column\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.3.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixed Mysql::modifyColumn to produce valid SQL"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212bd018912b45d36a3318",
    "number": 13264,
    "body": "Hello!\r\nfPIC -DPIC -o .libs/phalcon.o\r\ngcc: internal compiler error: Killed (program cc1)\r\nPlease submit a full bug report,\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [ ] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.3.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212bd118912b45d36a3319",
    "number": 13260,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: -\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\nChange setting to call systax tests\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.3.syntax_change_setting",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Change systax tests setting"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212bd218912b45d36a331a",
    "number": 13259,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue: -\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\nChange and rewrite CompilerTest\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.3.rewrite_compiler_test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Rewrite CompilerTest"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212bd418912b45d36a331b",
    "number": 13250,
    "body": "",
    "head_branch": "3.3.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Regenerated build (PHP7) [ci skip]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212bd518912b45d36a331c",
    "number": 13248,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/13236\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR. - it's trivial enough i think\r\n\r\nSmall description of change: add code argument to constructor\r\n\r\nThanks\r\n\r\n\r\n  ",
    "head_branch": "3.3.x-date-validator",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Return code in date validator"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212bd618912b45d36a331d",
    "number": 13247,
    "body": "The example of `has()` method was incorrect, it even produced an error\r\n\r\nHello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [ ] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixed example\n\nThe example of `has()` method was incorrect, it even produced an error"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212bd718912b45d36a331e",
    "number": 13246,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #13242\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nThanks",
    "head_branch": "fix-default-volt-filter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixed `default` Volt filter"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212bd818912b45d36a331f",
    "number": 13245,
    "body": "",
    "head_branch": "3.3.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Updated Copyright"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212bd918912b45d36a3320",
    "number": 13241,
    "body": "Hello!\r\n\r\n* Type: documentation\r\n* Link to issue: https://github.com/phalcon/docs/issues/1369\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [ ] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change: syncing changes with https://github.com/phalcon/docs/issues/1369\r\n\r\nThanks\r\n\r\n",
    "head_branch": "pks/1369/update_dock_block_to_match_docs1389",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212bda18912b45d36a3321",
    "number": 13240,
    "body": "Hello!\r\n\r\n* Type:  documentation\r\n* Link to issue: https://github.com/phalcon/docs/issues/1369\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [ ] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change: sync changes with https://github.com/phalcon/docs/issues/1369\r\n\r\nThanks\r\n\r\n",
    "head_branch": "pks/1369/update_doc_block_to_match_docs1389",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Syncing changes from docs#1389"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212bdb18912b45d36a3322",
    "number": 13239,
    "body": "Hello!\r\n\r\n* documentation\r\n* Link to issue: https://github.com/phalcon/docs/issues/1369\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [ ] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change: Fixes typo from https://github.com/phalcon/docs/issues/1369\r\n\r\nThanks\r\n\r\n",
    "head_branch": "pks/1369/update_dock_block_to_match_docs1389",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212bdd18912b45d36a3323",
    "number": 13238,
    "body": " - adds transaction get and set to builder\r\n - adds transaction get and set to criteria\r\n - moves limit to params (a more idiomatic approach)\r\n - adds behaviour to set the transaction in the builder::__constructor\r\n - adds the transaction to the query in builder::getQuery\r\n - renames and moves _getPreparedQuery below _groupResult because of functional cohesion\r\n\r\nHello!\r\n\r\n* Type: new feature\r\n* Link to issue: #13235\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nplease look in the ticket for a detailed description\r\n\r\nThanks\r\n\r\n",
    "head_branch": "13235-add-transaction-to-criteria-and-builder",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212bde18912b45d36a3324",
    "number": 13237,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue: #13235 \r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nadds transaction to criteria and builder to have a more consistent behavior for passing an explicit transaction.\r\n\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.3.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212bdf18912b45d36a3325",
    "number": 13233,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add CHANGELOG entry for #13200"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212be718912b45d36a3326",
    "number": 13232,
    "body": "",
    "head_branch": "3.3.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13232 from phalcon/3.3.x\n\n3.3.0"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212be818912b45d36a3327",
    "number": 13230,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change: comment out ignore platform reqs to make sure we get proper packages by composer for our php version\r\n\r\nThanks\r\n\r\n",
    "head_branch": "4.0.x-composer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove FileTest since we can't mockup php functions called by zephir so we can't test it"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212be918912b45d36a3328",
    "number": 13228,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: when doing `Memory::isAllowed` with role and resource of the same class our role object will be passed both as role and resource to our custom function used for checking additional access. This PR fixes it\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.3.x-aclfix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix isAllowed same class resource and role"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212bea18912b45d36a3329",
    "number": 13227,
    "body": "Hello!\r\n\r\n* Type: new feature | code quality | documentation\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/13226\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nplease check:\r\nhttps://github.com/phalcon/cphalcon/pull/13097\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.3.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Adds explicit transaction to find and findFirst (#13226)\n\n - adds setUpTransactionManager in ModelTrait\n - adds missing cache directory to README\n - adds tests for find / findFirst\n - adds const to Model to avoid typos\n - add code examples\n - fixes check before checking multiple different database engine connections\n - unifies businesslogic for find and findFirst\n - adds missing types\n - Adds Querytest And Changelog update\n - removes annotations + phpcs cleanup"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212beb18912b45d36a332a",
    "number": 13225,
    "body": "Hello!\r\n\r\ninstead of PR #13216 \r\n\r\n* Type: new feature\r\n* Link to issue: #12546, #12985, #13214\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nThanks",
    "head_branch": "feature/json-dataType-support",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212bec18912b45d36a332b",
    "number": 13216,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #12546, #12985, #13214\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.3.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212bed18912b45d36a332c",
    "number": 13215,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212bee18912b45d36a332d",
    "number": 13212,
    "body": "…d migration.\r\n\r\nHello!\r\n\r\n* Type: new feature\r\n* Link to issue:\r\n    https://github.com/phalcon/phalcon-devtools/pull/1163\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR. => \r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.3.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212bef18912b45d36a332e",
    "number": 13207,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/13202\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: this sets old snapshot when no fields are changed when dynamic update is enabled\r\n\r\nThanks\r\n\r\n",
    "head_branch": "issue-13202",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update model to set old snapshot (#13207)\n\n* Update model to set old snapshot\r\n\r\n* Remove ignore platform reqs"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212bf118912b45d36a332f",
    "number": 13203,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\nThere is no method to unset header in response class\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.3.x-remove-header",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add Response::removeHeader\n\n* add removeHeader to response\r\n\r\n* update change log for 3.3"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212bf218912b45d36a3330",
    "number": 13200,
    "body": "* Type: bug fix\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: This if condition is always false, and it seems clear that the author meant to use || rather than &&.\r\n\r\nThanks for your time,\r\nMichael McConville\r\nUniversity of Utah\r\n",
    "head_branch": "3.3.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Probable boolean logic error"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212bf318912b45d36a3331",
    "number": 13198,
    "body": "* Type: bug fix\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [X] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [N/A] I wrote some tests for this PR.\r\n\r\nSmall description of change: This if condition is always false, and it seems clear that the author meant to use || rather than &&.\r\n\r\nThanks for your time,\r\nMichael McConville\r\nUniversity of Utah",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212bf418912b45d36a3332",
    "number": 13196,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/13173\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: fixes https://github.com/phalcon/cphalcon/issues/13173\r\n\r\nThanks\r\n\r\n",
    "head_branch": "issue-13173",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update SoftDelete to update snapshot"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212bf518912b45d36a3333",
    "number": 13195,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: currently there is no option in `Phalcon\\Mvc\\Micro\\Collection` to map routes/handlers via methods. Since we can't change map method to not break anything i added new method. In Phalcon 4 we should just update map method.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "collection-map-via",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add option to map routes via methods in micro collection"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212bf618912b45d36a3334",
    "number": 13192,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | **`code quality`** | documentation\r\n* Link to issue: none\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nI've refactored several tests, using:\r\n- `assertInternalType` and `assertNotInternalType` instead of `is_*` and `gettype` methods;\r\n- `assertInstanceOf` instead of  `get_class`;\r\n- `assertNull` and `assertNotNull` instead of strict comparisons with `null` keyword;\r\n- `assertTrue` instead of strict comparisons with `true` keyword;\r\n- `assertFalse` and `assertNotFalse` instead of strict comparisons with `false` keyword;\r\n- `assertSame` instead of strict comparisons;\r\n- `assertContains` instead of `in_array` method;\r\n- `assertStringEqualsFile` when comparing a `string` and `file`;\r\n- `assertArrayHasKey` instead of `array_key_exists` method;\r\n- `assertFileExists` and `assertFileNotExists` instead of `file_exists` method;\r\n- `assertGreaterThan` for mathematical comparisons.",
    "head_branch": "refactoring-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Improve tests"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212bf718912b45d36a3335",
    "number": 13190,
    "body": "I removed the name parameter from the Service class since the only place where it is used in the Phalcon code is for throwing an exception when there was a problem with the service. I added a new exception class which the DI catches and since the DI knows what the name of the service should be it is able to provide the same error reporting capabilities.\r\n\r\nThis API change allows for Phalcon\\Di\\Service classes to more gracefully wrap service closures.\r\n\r\nI added a Phalcon\\Di\\Service\\SharedService class which simply offers API sugar to make the second parameter unnecessary when using a shared service.\r\n\r\nI added a new helper class Phalcon\\Di\\Service\\ServiceRegistry for registering a directory of service files in either yaml or php. These files can return a php array with a static definition, a closure, a Service object or a string for the class name.",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212bf818912b45d36a3336",
    "number": 13183,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/11000\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: this change allows `Phalcon\\Config\\Factory::load()` to be used just with string argument(file path).\r\n\r\nThanks\r\n\r\n",
    "head_branch": "issue-11000",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Implements #11000"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212bf918912b45d36a3337",
    "number": 13182,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue:https://github.com/phalcon/cphalcon/issues/13078\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: added `Phalcon\\Mvc\\Model\\MetaData\\Apcu`, deprecated `Phalcon\\Mvc\\Model\\MetaData\\Apc`\r\n\r\nThanks\r\n\r\n",
    "head_branch": "issue-13078",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Implements #13078"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212bfa18912b45d36a3338",
    "number": 13181,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #13101\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [X] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\n- Added `Phalcon\\Mvc\\Application::sendHeadersOnHandleRequest` to enable or disable sending headers by each request handling\r\n- Added `Phalcon\\Mvc\\Application::sendCookiesOnHandleRequest` to enable or disable sending cookies by each request handling\r\n\r\nThanks\r\n\r\n",
    "head_branch": "feature/send-headers-and-cookies",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added Application::sendHeadersOnHandleRequest and Application::sendCookiesOnHandleRequest"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212bfb18912b45d36a3339",
    "number": 13180,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/13158\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [X] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [X] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\nAdded event call `router:beforeMount` in `Router::mount`\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.3.x.dev",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[NFR] Add event router:beforeMount a group (#13180)\n\n* Added beforeMount event in Router::mount\r\n\r\n* Update changelog"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212bfc18912b45d36a333a",
    "number": 13178,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\nIn model.zep at 2104 line:\r\n```if isset emptyStringValues[field]```\r\nif we have array $array = ['field' => null]; - function isset returns false!\r\n\r\n*Steps for reproducing*\r\n1. Have model\r\n```php\r\nclass ModelWithField extends \\Phalcon\\Mvc\\Model\r\n{\r\n    protected $field;\r\n\r\n    protected function initialize()\r\n    {\r\n        $this->allowEmptyStringValues([\r\n            'field'\r\n        ]);\r\n    }\r\n}\r\n```\r\n2. Have mysql table\r\n```sql\r\ncreate table `model_with_field` (\r\n   `field` VARCHAR(255) NOT NULL\r\n)\r\n```\r\n3. Have config\r\n```ini\r\nphalcon.orm.not_null_validations = On\r\nphalcon.orm.exception_on_failed_save = On\r\n```\r\n4.\r\n```php\r\n$model = new ModelWithField();\r\n$model->save([\r\n    'field' => ''\r\n]); // return false and throws ValidationFailed exception\r\n```\r\n\r\nThanks\r\n\r\n",
    "head_branch": "hotfix/fix-allow-empty-string",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix allow empty string functionality"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212bfd18912b45d36a333b",
    "number": 13177,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\nIn model.zep at 2104 line:\r\n```if isset emptyStringValues[field]```\r\nif we have array $array = ['field' => null]; - function isset returns false!\r\n\r\n*Steps for reproducing*\r\n1. Have model\r\n```php\r\nclass ModelWithField extends \\Phalcon\\Mvc\\Model\r\n{\r\n    protected $field;\r\n\r\n    protected function initialize()\r\n    {\r\n        $this->allowEmptyStringValues([\r\n            'field'\r\n        ]);\r\n    }\r\n}\r\n```\r\n2. Have mysql table\r\n```sql\r\ncreate table `model_with_field` (\r\n   `field` VARCHAR(255) NOT NULL\r\n)\r\n```\r\n3. Have config\r\n```ini\r\nphalcon.orm.not_null_validations = On\r\nphalcon.orm.exception_on_failed_save = On\r\n```\r\n4.\r\n```php\r\n$model = new ModelWithField();\r\n$model->save([\r\n    'field' => ''\r\n]); // return false and throws ValidationFailed exception\r\n```\r\n\r\nThanks\r\n\r\n",
    "head_branch": "hotfix/fix-allow-empty-string",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212bfe18912b45d36a333c",
    "number": 13175,
    "body": "",
    "head_branch": "3.3.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Refatored transaction tests"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212c0018912b45d36a333d",
    "number": 13174,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: -\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nAdded support of 103 (Early Hint)  HTTP status code. This informational status code has been approved as status code for indicating hints to client. This is a new status code that lets the server send headers early, before the main headers. For example it may helps with optimizations like preloading. \r\n\r\nMore details here [IETF](https://datatracker.ietf.org/doc/draft-ietf-httpbis-early-hints).\r\n\r\nThanks\r\n\r\n",
    "head_branch": "feature/http-103",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added support of 103 (Early Hint) HTTP status code"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212c0118912b45d36a333e",
    "number": 13172,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #13166\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nFixed ` Phalcon\\Mvc\\Model::_doLowInsert()` to correct save snapshot on creation/save identityless models.\r\n\r\nThanks\r\n\r\n/cc @virgofx \r\n",
    "head_branch": "fix/db/saving-snapshot",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixed Model::_doLowInsert to work properly with snapshots"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212c0218912b45d36a333f",
    "number": 13171,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #13170\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nDynamic update does not work as expected for fields which raw values were assigned to\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.3.x.dev",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Bug Fix #13170 (#13171)\n\n* Add Dynamic Update And RawValue Unit Test\r\n\r\n* Fix Bug #Issue 13170"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212c0318912b45d36a3340",
    "number": 13169,
    "body": "",
    "head_branch": "3.3.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Refatored Model's dynamic operations tests"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212c0418912b45d36a3341",
    "number": 13168,
    "body": "",
    "head_branch": "3.3.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Updated tests and PHP 7.2 (#13168)\n\n* Fixed tests typo\r\n\r\n* Silent install re2c\r\n\r\n* Removed not used variable\r\n\r\n* Play with PHP 7.2\r\n\r\n* Cleaned Travis config, stop spam by Travis\r\n\r\n* Improved Travis build"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212c0518912b45d36a3342",
    "number": 13167,
    "body": "Hello!\r\n\r\n* Type: test\r\n* Link to issue: #13149\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR\r\n\r\nSmall description of change: Tests canceling validation on first fail\r\n\r\n/cc @Frost007 @laffentaller @trix87\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.3.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13167 from sergeyklay/3.3.x\n\nTests canceling validation on first fail"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212c0618912b45d36a3343",
    "number": 13165,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #13132\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\nFor type `Boolean` _castDefault() returned wrong value and createTable() inserted wrong default value.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.3.fix_create_table",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13165 from sergeysviridenko/3.3.fix_create_table\n\nFix wrong SQL creating table with boolean type in posqgresql"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212c0718912b45d36a3344",
    "number": 13163,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\nIn model.zep at 2104 line:\r\n```if isset emptyStringValues[field]```\r\nif we have array $array = ['field' => null]; - function isset returns false!\r\n\r\n*Steps for reproducing*\r\n1. Have model\r\n```php\r\nclass ModelWithField extends \\Phalcon\\Mvc\\Model\r\n{\r\n    protected $field;\r\n\r\n    protected function initialize()\r\n    {\r\n        $this->allowEmptyStringValues([\r\n            'field'\r\n        ]);\r\n    }\r\n}\r\n```\r\n2. Have mysql table\r\n```sql\r\ncreate table `model_with_field` (\r\n   `field` VARCHAR(255) NOT NULL\r\n)\r\n```\r\n3. Have config\r\n```ini\r\nphalcon.orm.not_null_validations = On\r\nphalcon.orm.exception_on_failed_save = On\r\n```\r\n4.\r\n```php\r\n$model = new ModelWithField();\r\n$model->save([\r\n    'field' => ''\r\n]); // return false and throws ValidationFailed exception\r\n```\r\n\r\nThanks\r\n\r\n",
    "head_branch": "hotfix/fix-allow-empty-string-in-model",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212c0d18912b45d36a3345",
    "number": 13160,
    "body": "In model.zep at 2104 line:\r\n```if isset emptyStringValues[field]```\r\nif we have array $array = ['field' => null]; - function isset returns false!\r\n\r\nHello!\r\n\r\n* Type: bug fix\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212c0f18912b45d36a3346",
    "number": 13157,
    "body": "I removed the name parameter from the Service class since the only place where it is used in the Phalcon code is for throwing an exception when there was a problem with the service.  I added a new exception class which the DI catches and since the DI knows what the name of the service should be it is able to provide the same error reporting capabilities.\r\n\r\nThis API change allows for `Phalcon\\Di\\Service` classes to more gracefully wrap service closures.\r\n\r\nI added a `Phalcon\\Di\\Service\\SharedService` class which simply offers API sugar to make the second parameter unnecessary when using a shared service.\r\n\r\nI added a new helper class `Phalcon\\Di\\Service\\ServiceRegistry` for registering a directory of service files in either yaml or php.  These files can return a php array with a static definition, a closure, a `Service` object or a string for the class name.\r\n\r\n[edit] I'm going to take a week off from this and then I'll take down this pull request and start over with a clean repo with just 2-3 commits.  I'm going to redesign the API a bit, modify the tests, etc.",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212c1018912b45d36a3347",
    "number": 13153,
    "body": "",
    "head_branch": "3.3.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13153 from sergeyklay/3.3.x\n\nLatest Zephir Parser and re2c"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212c1118912b45d36a3348",
    "number": 13148,
    "body": "Use [PSR-1](http://www.php-fig.org/psr/psr-1/#namespace-and-class-names) while extending PHPUnit TestCase class. This will help us when to migrate to PHPUnit 6, that [no longer support snake case namespaces](https://github.com/sebastianbergmann/phpunit/blob/master/ChangeLog-6.0.md#changed-1).",
    "head_branch": "phpunit",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13148 from gabriel-caruso/phpunit\n\nUse PSR-1 for PHPUnit TestCase"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212c1218912b45d36a3349",
    "number": 13144,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #11827\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\nFix order in builder PHQL.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.2.fix_order_phql",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13144 from sergeysviridenko/3.2.fix_order_phql\n\nFix order in PHQL builder"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212c1318912b45d36a334a",
    "number": 13136,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nWhen I use getHeader to take some value out of headers, those the value don't exist,I will get empty string. But I expect it is null. So I add a function, called hasHeader to solve the problem.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.3.x.dev",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13136 from limingxinleo/3.3.x.dev\n\n* add function hasHeader to request"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212c1418912b45d36a334b",
    "number": 13131,
    "body": "Refs: [#13074](https://github.com/phalcon/cphalcon/issues/13074)",
    "head_branch": "3.3.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13131 from sergeyklay/3.3.x\n\nAdded Null Logger"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212c1518912b45d36a334c",
    "number": 13130,
    "body": "Hello!\r\n\r\n* Type: **new feature**\r\n* Link to issue: #13107\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nImplemented `switch-case` recognition for Volt. Introduced syntax:\r\n```jinja\r\n{% switch foo %}\r\n    {% case 0 %}\r\n    {% case 1 %}\r\n    {% case 2 %}\r\n        `foo` is less than 3 but not negative\r\n        {% break %}\r\n    {% case 3 %}\r\n        `foo` is 3\r\n        {% break %}\r\n    {% default %}\r\n        `foo` is {{ foo }}\r\n{% endswitch %}\r\n```\r\n\r\nIt is important to understand how the switch statement is executed in order to avoid mistakes.\r\nThe switch statement executes line by line (actually, statement by statement). This is why `break` is necessary in some cases.\r\n\r\n**NOTE:** Any output (including whitespace) between a switch statement and the first case will result in a syntax error. This is the responsibility of the user. However, we can clear empty lines and whitespaces here to reduce the number of errors. For more see: http://php.net/control-structures.alternative-syntax\r\n\r\nThus, for example the Volt syntax:\r\n```jinja\r\n{% switch username %}\r\n    {% case \"Jim\" %}\r\n        Hello username\r\n    {% case \"Nik\" %}\r\n        {{ username }}!\r\n        {% break %}\r\n    {% default %}\r\n        Who are you?\r\n{% endswitch %}\r\n```\r\n\r\nwill be compiled to:\r\n```html+php\r\n<?php switch ($username): ?>\r\n<?php case 'Jim': ?>\r\nHello username\r\n<?php case 'Nik': ?>\r\n<?= $username ?>!\r\n<?php break; ?>\r\n<?php default: ?>\r\nWho are you?\r\n<?php endswitch ?>\r\n```\r\n\r\n--------\r\n\r\n### Restrictions\r\n\r\n##### `case` without `switch`\r\n\r\n\r\n```jinja\r\n {% case EXPRESSION %}\r\n```\r\n\r\nWill trow Fatal error: `Uncaught Phalcon\\Mvc\\View\\Exception: Unexpected CASE`.\r\n\r\n--------\r\n\r\n##### `switch` without `endswitch`\r\n\r\n\r\n```jinja\r\n {% switch EXPRESSION %}\r\n```\r\n\r\nWill trow Fatal error: `Uncaught Phalcon\\Mvc\\View\\Exception: Syntax error, unexpected EOF in ..., there is a 'switch' block without 'endswitch'`.\r\n\r\n--------\r\n\r\n##### `default` without `switch`\r\n\r\n```jinja\r\n {% default %}\r\n```\r\n\r\nWill _not throw_ error because `default` is reserved word for filters like `{{ EXPRESSION | default(VALUE) }}` but _in this case_ the expression don't do anything - just empty char `''` .\r\n\r\n--------\r\n\r\n##### nested `switch`\r\n\r\n```jinja\r\n{% switch EXPRESSION %}\r\n  {% switch EXPRESSION %}\r\n  {% endswitch %}\r\n{% endswitch %}\r\n```\r\n\r\nWill trow Fatal error: `Uncaught Phalcon\\Mvc\\View\\Exception: A nested switch detected. There is no nested switch-case statements support in ... on line ...`.\r\n\r\n--------\r\n\r\n##### a `switch` without expression\r\n\r\n```jinja\r\n{% switch %}\r\n  {% case EXPRESSION %}\r\n      {% break %}\r\n{% endswitch %}\r\n```\r\n\r\nWill trow Fatal error: `Uncaught Phalcon\\Mvc\\View\\Exception: Syntax error, unexpected token %} in ... on line ...`.\r\n\r\n--------\r\n\r\nThanks.\r\n\r\n",
    "head_branch": "feaure/volt/switch",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13130 from sergeyklay/feaure/volt/switch\n\nInitial support of switch-case-default-endswitch statement for Volt"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212c1c18912b45d36a334d",
    "number": 13129,
    "body": "",
    "head_branch": "3.2.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13129 from phalcon/3.2.x\n\n3.2.4"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212c1d18912b45d36a334e",
    "number": 13127,
    "body": "See: https://github.com/phalcon/cphalcon/pull/13130",
    "head_branch": "3.3.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Initial support of switch-case-default-endswitch statement for Volt"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212c1e18912b45d36a334f",
    "number": 13126,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: -\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\nAdd arrayIterator class to work with object\r\n\r\nThanks\r\n\r\n",
    "head_branch": "4.0.array_iterator",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212c1f18912b45d36a3350",
    "number": 13124,
    "body": "Hello!\r\n\r\nThis PR concern issue #12971. While using your framework in a project, we encoutered the same problem as described in the issue. This solution worked for us.\r\nThanks\r\n\r\n",
    "head_branch": "3.3.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212c2018912b45d36a3351",
    "number": 13123,
    "body": "* Type: bug fix\r\n* Link to issue: #13121 \r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\nThese will erase previously set variables, and dispatcher's params were never accessible this way so far, so removing the argument in this function is fine.\r\n\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13123 from dugwood/patch-1\n\nDon't send dispatcher parameters"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212c2118912b45d36a3352",
    "number": 13122,
    "body": "* Type: bug fix\r\n* Link to issue: #13121 \r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\nThese will erase previously set variables, and dispatcher's params were never accessible this way so far, so removing the argument in this function is fine.\r\n\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212c2218912b45d36a3353",
    "number": 13120,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: none created\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nWhen working with a model and you set a relation with an Array of objects that might not be saved but you want to work on, if you try to call that relation the model will not try and return a ResultSet\r\n\r\ni.e.\r\n$artist->albums = [$a1, $a2];\r\n\r\nThanks\r\n\r\n",
    "head_branch": "Fix-get-relation-when-new-array",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212c2318912b45d36a3354",
    "number": 13119,
    "body": "",
    "head_branch": "model-criteria-type-hint-fix",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13119 from phalcon/model-criteria-type-hint-fix\n\nAdded missed import to model criteria"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212c2b18912b45d36a3355",
    "number": 13116,
    "body": "",
    "head_branch": "3.2.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13116 from phalcon/3.2.x\n\n3.2.3"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212c2c18912b45d36a3356",
    "number": 13112,
    "body": "This is a an update of previously closed PR #12209.  It resolves all dispatch issues, adds additional notes in the code for future deprecations in 4.0. Various performance improvements in the resulting dispatch process as result of variable caching and dropping the global try/catch which previously hooked into the RVAL for every statement previously.\r\n\r\nFixes current issue: #12931\r\n\r\nRelated to (and ensures fixes for) previous issues:\r\n#12154\r\n#11819\r\n\r\ncc @andresgutierrez\r\ncc @temuri416 \r\ncc @sergeyklay \r\ncc @niden \r\n\r\n```\r\nUnit Tests (69) -------------------------------------------------------------------------------\r\n✔ DispatcherAfterDispatchLoopTest: After dispatch loop forward (0.03s)\r\n✔ DispatcherAfterDispatchLoopTest: After dispatch loop return false (0.00s)\r\n✔ DispatcherAfterDispatchLoopTest: After dispatch loop with before exception returning false (0.00s)\r\n✔ DispatcherAfterDispatchLoopTest: After dispatch loop with before exception bubble (0.00s)\r\n✔ DispatcherAfterDispatchLoopTest: After dispatch loop with before exception forward once (0.00s)\r\n✔ DispatcherAfterDispatchTest: After dispatch forward once (0.00s)\r\n✔ DispatcherAfterDispatchTest: After dispatch return false (0.00s)\r\n✔ DispatcherAfterDispatchTest: After dispatch with before exception returning false (0.00s)\r\n✔ DispatcherAfterDispatchTest: After dispatch with before exception bubble (0.00s)\r\n✔ DispatcherAfterDispatchTest: After dispatch with before exception forward once (0.00s)\r\n✔ DispatcherAfterExecuteRouteMethodTest: After execute route forward once (0.00s)\r\n✔ DispatcherAfterExecuteRouteMethodTest: After execute route return false (0.00s)\r\n✔ DispatcherAfterExecuteRouteMethodTest: After execute route with before exception returning false (0.00s)\r\n✔ DispatcherAfterExecuteRouteMethodTest: After execute route with before exception bubble (0.00s)\r\n✔ DispatcherAfterExecuteRouteMethodTest: After execute route with before exception forward once (0.00s)\r\n✔ DispatcherAfterExecuteRouteTest: After execute route forward once (0.00s)\r\n✔ DispatcherAfterExecuteRouteTest: After execute route return false (0.00s)\r\n✔ DispatcherAfterExecuteRouteTest: After execute route with before exception returning false (0.00s)\r\n✔ DispatcherAfterExecuteRouteTest: After execute route with before exception bubble (0.00s)\r\n✔ DispatcherAfterExecuteRouteTest: After execute route with before exception forward once (0.00s)\r\n✔ DispatcherAfterInitializeTest: After initialize forward once (0.00s)\r\n✔ DispatcherAfterInitializeTest: After initialize return false (0.00s)\r\n✔ DispatcherAfterInitializeTest: After initialize with before exception returning false (0.00s)\r\n✔ DispatcherAfterInitializeTest: After initialize with before exception bubble (0.00s)\r\n✔ DispatcherAfterInitializeTest: After initialize with before exception forward once (0.00s)\r\n✔ DispatcherBeforeDispatchLoopTest: Before dispatch loop forward (0.00s)\r\n✔ DispatcherBeforeDispatchLoopTest: Before dispatch loop return false (0.00s)\r\n✔ DispatcherBeforeDispatchLoopTest: Before dispatch loop with before exception returning false (0.00s)\r\n✔ DispatcherBeforeDispatchLoopTest: Before dispatch loop with before exception bubble (0.00s)\r\n✔ DispatcherBeforeDispatchLoopTest: Before dispatch loop with before exception forward (0.00s)\r\n✔ DispatcherBeforeDispatchTest: Before dispatch forward once (0.00s)\r\n✔ DispatcherBeforeDispatchTest: Before dispatch return false (0.00s)\r\n✔ DispatcherBeforeDispatchTest: Before dispatch with before exception returning false (0.00s)\r\n✔ DispatcherBeforeDispatchTest: Before dispatch with before exception bubble (0.00s)\r\n✔ DispatcherBeforeDispatchTest: Before dispatch with before exception forward once (0.00s)\r\n✔ DispatcherBeforeExecuteRouteMethodTest: Before execute route forward once (0.00s)\r\n✔ DispatcherBeforeExecuteRouteMethodTest: Before execute route return false (0.00s)\r\n✔ DispatcherBeforeExecuteRouteMethodTest: Before execute route with before exception returning false (0.00s)\r\n✔ DispatcherBeforeExecuteRouteMethodTest: Before execute route with before exception bubble (0.00s)\r\n✔ DispatcherBeforeExecuteRouteMethodTest: Before execute route with before exception forward (0.00s)\r\n✔ DispatcherBeforeExecuteRouteTest: Before execute route forward once (0.00s)\r\n✔ DispatcherBeforeExecuteRouteTest: Before execute route return false (0.00s)\r\n✔ DispatcherBeforeExecuteRouteTest: Before execute route with before exception returning false (0.00s)\r\n✔ DispatcherBeforeExecuteRouteTest: Before execute route with before exception bubble (0.00s)\r\n✔ DispatcherBeforeExecuteRouteTest: Before execute route with before exception forward once (0.00s)\r\n✔ DispatcherInitalizeMethodTest: Initialize forward (0.00s)\r\n✔ DispatcherInitalizeMethodTest: Initialize return false (0.00s)\r\n✔ DispatcherInitalizeMethodTest: Initialize with before exception returning false (0.00s)\r\n✔ DispatcherInitalizeMethodTest: Initialize with before exception bubble (0.00s)\r\n✔ DispatcherInitalizeMethodTest: Initialize with before exception forward (0.00s)\r\n✔ DispatcherTest: Default dispatch loop events (0.00s)\r\n✔ DispatcherTest: Default dispatch loop events with no handlers (0.00s)\r\n✔ DispatcherTest: Controller action local forward (0.00s)\r\n✔ DispatcherTest: Controller action external forward (0.00s)\r\n✔ DispatcherTest: Controller action return value string (0.00s)\r\n✔ DispatcherTest: Controller action return value int (0.00s)\r\n✔ DispatcherTest: Params and return value (0.00s)\r\n✔ DispatcherTest: Cyclical routing (0.00s)\r\n✔ DispatcherTest: Handler not found (0.05s)\r\n✔ DispatcherTest: Handler invalid (0.00s)\r\n✔ DispatcherTest: Handler action not found (0.00s)\r\n✔ DispatcherTest: Last handler (0.00s)\r\n✔ DispatcherTest: Last handler forward (0.00s)\r\n✔ DispatcherTest: No namespaces (0.00s)\r\n✔ DispatcherTest: Mixing namespace forward (0.00s)\r\n✔ DispatcherTest: Default resolve (0.02s)\r\n✔ DispatcherTest: Manual call action (0.00s)\r\n✔ DispatcherTest: Last handler exception forward (0.00s)\r\n✔ DispatcherTest: Exception in before exception (0.00s)\r\n-------------------------------------------------------------------------------------------\r\n\r\nTime: 2.23 seconds, Memory: 12.00MB\r\n\r\nOK (69 tests, 173 assertions)\r\n```\r\n\r\n\r\n",
    "head_branch": "feat/dispatcher",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13112 from virgofx/feat/dispatcher\n\nFixed Dispatcher::dispatch() to ensure proper flow for all event handling, forwarding, exceptions, bubbling and performance improvements. Fixes #12931"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212c2d18912b45d36a3357",
    "number": 13111,
    "body": "Refs: #11259",
    "head_branch": "3.2.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13111 from sergeyklay/3.2.x\n\nAdded Cookie::getValue test"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212c2e18912b45d36a3358",
    "number": 13110,
    "body": "Your FOSSA integration was successful! Attached in this PR is a badge and license report to track scan status in your README.\n\nBelow are docs for integrating FOSSA license checks into your CI:\n\n- [CircleCI](http://fossa.io/docs/integrating-tools/circleci/)\n- [TravisCI](http://fossa.io/docs/integrating-tools/travisci/)\n- [Jenkins](https://github.com/fossas/fossa-jenkins-plugin)\n- [Other](https://github.com/fossas/license-cli)",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212c2f18912b45d36a3359",
    "number": 13109,
    "body": "The third parameter `$with` of the `Query\\Builder::addFrom` is deprecated and will be removed in future releases.\r\n\r\nThis feature was introduced at [Jun 1, 2015][1] was removed at [Aug 6, 2015][2]. Actually this feature was never used in stable releases.\r\n\r\nMark this feature as deprecated to avoid misunderstandings for future developers.\r\n\r\n[1]: https://github.com/phalcon/cphalcon/commit/3e43192750367ae0343fbe42c65a97fd04b3444b\r\n[2]: https://github.com/phalcon/cphalcon/commit/3ca25046ff484aedb7c38ac5aa994f183cba2415\r\n\r\nRefs: #13023",
    "head_branch": "3.2.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13109 from sergeyklay/3.2.x\n\nRemoved no longer used \"_with\" parameter from the QueryBuilder"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212c3118912b45d36a335a",
    "number": 13106,
    "body": "",
    "head_branch": "3.2.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13106 from sergeyklay/3.2.x\n\nRefactored MetaData test"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212c3218912b45d36a335b",
    "number": 13105,
    "body": "",
    "head_branch": "3.2.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13105 from sergeyklay/3.2.x\n\nTest issue #13092"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212c3318912b45d36a335c",
    "number": 13104,
    "body": "",
    "head_branch": "3.2.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13104 from sergeyklay/3.2.x\n\nUpdate Travis CI config to send notifications to the Discord channel"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212c3418912b45d36a335d",
    "number": 13103,
    "body": "We tried this before when Trusty containers were still in Beta, but the issues we ran into at the time have since been fixed.\r\n\r\nRefs: https://github.com/travis-ci/travis-ci/issues/5837",
    "head_branch": "3.2.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13103 from sergeyklay/3.2.x\n\nUpdate Travis CI config to use fast Trusty containers"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212c3518912b45d36a335e",
    "number": 13102,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #12972\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nFixed `Phalcon\\Mvc\\Model\\Manager::getRelationRecords` to work properly with provided columns.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.2.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13102 from sergeyklay/3.2.x\n\nFixed Phalcon\\Mvc\\Model\\Manager::getRelationRecords"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212c3618912b45d36a335f",
    "number": 13100,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #13099\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md).\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nExplicitly define nullable columns. This fixes an issue I had with timestamp columns. By default when creating a timestamp column without explicitly telling it's allowed to be null and defaulted to null it will automatically give it an \"on update current_timestamp\" property.\r\n\r\nTo clarify: In my code I used the following:\r\n```php\r\nnew Column('deadline', [\r\n    'type' => Column::TYPE_TIMESTAMP,\r\n    'notNull' => false,\r\n    'default' => null\r\n])\r\n```\r\nand instead it would create a timestamp with `CURRENT_TIMESTAMP` as default and the \"on update current_timestamp\" property.\r\n\r\nThanks\r\n\r\nRicardo Vermeltfoort",
    "head_branch": "3.2.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13100 from 1RV34/3.2.x\n\nExplicitly define nullable columns"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212c3918912b45d36a3360",
    "number": 13097,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue: #12409, #12564\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nThis change is to achieve the following\r\n\r\nIn Unit-testing one usual procedure is to create a transaction for a TestCase and after the execution rollback this change. \r\n\r\nWhich means there is a \"long transaction\" going on and we want to check if the transaction actually is writing the correct values in the database. But the static context of model::find / model::findFirst does not get the transaction passed.\r\n\r\nTo achieve that passing a new index \"transaction\" containing an transaction in the $param array seams to be a viable solution. \r\n\r\nAnother use-case can be having multiple transactions and wanting to look inside. \r\n\r\nJust to be precise -> ofc we could just get the connection and query manually inside of it, but I want to be as close to the framework as possible when testing certain services hence I want to use the model. \r\n\r\nI took your reviews and advice from the last attempt and used the params to not break the interfaces / change method signatures.  \r\n\r\nthe logic is implemented as follows: \r\n\r\nif you pass in a transaction via param in the find/findFirst method. It will set the transaction to query object and this transaction will be used for all queries and executions within this query context.\r\n\r\nThis should not affect any standard behaviour but still allow me to finally achieve cleaner unittests for my usecase.\r\n\r\nI still owe you some unitests, but please look through it first so it's not after several hours of refactoring and cleanups that this gets rejected.",
    "head_branch": "3.2.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212c3a18912b45d36a3361",
    "number": 13089,
    "body": "Refs: #13070\r\n\r\n",
    "head_branch": "3.2.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13089 from sergeyklay/3.2.x\n\nRemoved not used imports"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212c3b18912b45d36a3362",
    "number": 13087,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #13046\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nFixed `Phalcon\\Mvc\\View::render` to render a view with params.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.2.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13087 from sergeyklay/3.2.x\n\nFixed Phalcon\\Mvc\\View::render"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212c3c18912b45d36a3363",
    "number": 13086,
    "body": "Updated documentation to reflect new implementation.\r\n\r\nHello!\r\n\r\n* Type: documentation\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13086 from ruudboon/patch-1\n\nProfile documentation update"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212c3d18912b45d36a3364",
    "number": 13080,
    "body": "Hello!\r\n\r\nPLS **somebody check if this is valid** zep code.\r\nLooked into the zep docu and tried my best \r\n(its actually not much at all but f.e. i could not find a way to optimize the `constant()` call).\r\n\r\n* Type: new feature\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/13010\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nAllowing aliases in options to be able to merge multiple configs.\r\n\r\noption: `\\PDO::MYSQL_ATTR_INIT_COMMAND`\r\nAlias: `mysql_attr_init_command`\r\n\r\nThanks\r\ncottton\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Allow PDO option aliases (#13080)\n\n* Allow PDO option aliases\r\n\r\nSee https://github.com/phalcon/cphalcon/issues/13010\r\n\r\n* fixing syntax error"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212c3e18912b45d36a3365",
    "number": 13073,
    "body": "Hello!\r\n\r\nType: bug fix\r\n\r\nFix the bugs for phalcon\\logger\\formatter.php when calling the method format with the array param context it not produce the result expected!\r\n\r\nThanks\r\n\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212c3f18912b45d36a3366",
    "number": 13070,
    "body": "Fixed `Phalcon\\Mvc\\ModelInterface` to include `getModelsMetaData()`. This is important for static analysis as the ModelInterface is used as the interface parameter for various plugins and user components. \r\n",
    "head_branch": "3.2.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212c4018912b45d36a3367",
    "number": 13064,
    "body": "Closes: https://github.com/phalcon/cphalcon/issues/13063\r\nRefs: https://github.com/phalcon/ide-stubs/pull/6",
    "head_branch": "3.2.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13064 from sergeyklay/3.2.x\n\nFixed Collection::count return type hint"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212c4118912b45d36a3368",
    "number": 13054,
    "body": "Hello!\r\n\r\n* Type: documentation\r\n* Link to issue: None\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- NA\r\n\r\nSmall description of change:\r\nI updated Homebrew for osx to use the LTS instead of the development head for single command phalcon installation for osx\r\n\r\nThanks\r\n\r\n",
    "head_branch": "pks/add_homebrew_instructions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13054 from SavvySoftWorksLLC/pks/add_homebrew_instructions\n\nPks/add homebrew instructions"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212c4218912b45d36a3369",
    "number": 13053,
    "body": "Refs: #12978, #12980",
    "head_branch": "3.2.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13053 from sergeyklay/3.2.x\n\nTest the internal cookies property"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212c4318912b45d36a336a",
    "number": 13048,
    "body": "Its possible when to send null or empty string dont ask the presence, date validator i don't think must have PresenceOf. \r\n\r\nhttps://github.com/phalcon/cphalcon/blob/master/phalcon/validation/validator/date.zep\r\n\r\nSomething like\r\n\r\n```\r\nif empty value {\r\n      return\r\n}\r\n```\r\n\r\nOr \r\n\r\n```\r\nif is_null (value) {\r\n      return\r\n}\r\n```\r\n\r\n```\r\n\r\n$post['time'] = NULL;\r\n\r\n$var = new Text('time');\r\n$var\r\n->setFilters(['string','null'])\r\n ->addValidator(new Date(['format' => 'Y-m-d H:i:s', 'message' => $this->translate->_('Wrong')]));\r\n```\r\n\r\nReturn asking a valid date. this should be done by the PresenceOf validator.\r\n",
    "head_branch": "3.2.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212c4418912b45d36a336b",
    "number": 13045,
    "body": "",
    "head_branch": "test_multi_view",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212c4518912b45d36a336c",
    "number": 13044,
    "body": "Hello!\r\n\r\n* Type: documentation\r\n* Link to issue: https://github.com/phalcon/docs/issues/1224\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- N/A I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\nSame changes as #13043 for 4.0.x branch\r\n\r\nThanks\r\n\r\n",
    "head_branch": "pks/4_0_x/correct_extra_quotation_in_doc_code",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13044 from SavvySoftWorksLLC/pks/4_0_x/correct_extra_quotation_in_doc_code\n\ncorrect bad docblocks and remove extra <?php tags"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212c4618912b45d36a336d",
    "number": 13043,
    "body": "Hello!\r\n\r\n* Type: documentation\r\n* Link to issue: https://github.com/phalcon/docs/issues/1224\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- N/A I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\nDocumentation had some errors and duplication `<?php` tags\r\n\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.2.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13043 from SavvySoftWorksLLC/3.2.x\n\nRemove incorrect docblocks code from 3.2 for #docs-app/1224"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212c4718912b45d36a336e",
    "number": 13040,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\nthrew RuntimeException, if db:beforeQuery() returned false\r\n\r\nThanks\r\n",
    "head_branch": "fix_db_beforeQuery",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13040 from kanehama/fix_db_beforeQuery\n\nfixed. threw RuntimeException, if db:beforeQuery() returned false"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212c4818912b45d36a336f",
    "number": 13036,
    "body": "* Type: code quality\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n",
    "head_branch": "model-binder",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13036 from SidRoberts/model-binder\n\nTidied up Model Binder class"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212c4918912b45d36a3370",
    "number": 13034,
    "body": "Hello!\r\n\r\n* Type: documentation\r\n* Link to issue: https://github.com/phalcon/docs/issues/1209\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- N/A I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\nJust a small code documentation typo fix\r\n\r\nThanks\r\n\r\n",
    "head_branch": "pks/3_2/correct_extra_quotation_in_doc_code",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13034 from SavvySoftWorksLLC/pks/3_2/correct_extra_quotation_in_doc_code\n\nPks/3 2/correct extra quotation in doc code"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212c4a18912b45d36a3371",
    "number": 13033,
    "body": "Hello!\r\n\r\n* Type: bug fix / code quality\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR. (sort of... :wink: )\r\n\r\nSome of the model instantiations in the unit tests were wrongly assigning the DI as the first parameter (it should be second). As this has had no impact on the unit tests so far, I've just removed it completely instead of writing something like `new Robots(null, $di)`.\r\n\r\nPlease note: I've submitted this to the 4.0.x branch as it will help streamline the data mapper changes I plan to make and it is not absolutely necessary for the 3.x.x branches.\r\n\r\n",
    "head_branch": "model-first-param-di",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13033 from SidRoberts/model-first-param-di\n\nCorrected models that wrongly assign the DI in unit tests"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212c4c18912b45d36a3372",
    "number": 13032,
    "body": "Hello!\r\n\r\n* Type: documentation\r\n* Link to issue: https://github.com/phalcon/docs/issues/1136\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- N/A I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nThis backfills the changes to validator documentation associated with https://github.com/phalcon/docs/pull/1210\r\n\r\nThanks\r\n\r\n",
    "head_branch": "pks/3_2_x/add_validation_insantaion_to_validators",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13032 from SavvySoftWorksLLC/pks/3_2_x/add_validation_insantaion_to_validators\n\nAdded validation instantion to zep source files"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212c4d18912b45d36a3373",
    "number": 13029,
    "body": "Refs: #12288",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Change catch Exception to Throwable"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212c4e18912b45d36a3374",
    "number": 13027,
    "body": "",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Do not test PHP 5.x anymore (#13027)\n\nDo not test PHP 5.x anymore"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212c4f18912b45d36a3375",
    "number": 13026,
    "body": "* Type: bug fix\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\n`Model::setSnapshotData()` now properly sets the old snapshot.\r\n",
    "head_branch": "model-setsnapshotdata",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212c5018912b45d36a3376",
    "number": 13025,
    "body": "Hello!\r\n\r\n* Type: new feature | bug fix\r\n* Link to issue: https://github.com/phalcon/phalcon-devtools/issues/438\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n- Added `Phalcon\\Db\\Adapter\\Pdo\\Postgresql::describeReferences` with constraints `on update` and `on delete`\r\n- Changed `Phalcon\\Db\\Dialect\\Postgresql::describeReferences` added constraints `on update` and `on delete`\r\n\r\nThanks\r\n\r\n",
    "head_branch": "4.0.postgres_references",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added describeReferences method for postgresql DB"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212c5118912b45d36a3377",
    "number": 13024,
    "body": "* Type: code quality\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nModel::_errorMessages is now always an array. Previously, it could be null if not properly initialised.\r\n",
    "head_branch": "model-errormessages",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Model::_errorMessages is now always an array. (#13024)\n\n* Model::_errorMessages is now always an array.\r\n\r\n* Model::_dynamicUpdate is now always an array.\r\n\r\n* Various properties in Model are now always arrays."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212c5218912b45d36a3378",
    "number": 13022,
    "body": "Continuation of https://github.com/phalcon/cphalcon/pull/12317",
    "head_branch": "v4-model-data-mapper",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212c5318912b45d36a3379",
    "number": 13020,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: https://github.com/phalcon/phalcon-devtools/issues/438\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n- Fixed `Phalcon\\Db\\Dialect\\Postgresql::describeReferences` to generate correct SQL\r\n- Added `Phalcon\\Db\\Adapter\\Pdo\\Postgresql::describeReferences` for proper creating `Reference` object [phalcon/phalcon-devtools#438](https://github.com/phalcon/phalcon-devtools/issues/438)\r\n\r\nThanks",
    "head_branch": "3.2.refer_postgres",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212c5518912b45d36a337a",
    "number": 13019,
    "body": "",
    "head_branch": "3.2.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13019 from phalcon/3.2.x\n\n3.2.2"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212c5618912b45d36a337b",
    "number": 13018,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: phalcon/docs#1184\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.  **Documentation Only**\r\n\r\nSmall description of change:\r\nNormalizes the syntax of code tags.\r\nThanks\r\n\r\n",
    "head_branch": "pks/1184/correct_code_block_syntax_in_security_random",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13018 from SavvySoftWorksLLC/pks/1184/correct_code_block_syntax_in_security_random\n\nDocumentation Only: Correct code block syntax in security random"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212c5718912b45d36a337c",
    "number": 13017,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/docs/issues/1174\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.  **Documentation Only No need for Tests**\r\n\r\nSmall description of change:\r\nThere was a typo which placed two code open tags instead of an open and close.\r\nThanks\r\n\r\n",
    "head_branch": "pks/docs_1174_code_block_issue",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13017 from SavvySoftWorksLLC/pks/docs_1174_code_block_issue\n\nDocumentation Only Addresses Docs #1174 code block issue"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212c5818912b45d36a337d",
    "number": 13015,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\nUsing `class_implements` instead of `is_subclass_of`\r\n\r\nThanks",
    "head_branch": "is_subclass_of",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13015 from bongrun/is_subclass_of\n\nEdit class_implements in is_subclass_of"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212c5918912b45d36a337e",
    "number": 13005,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\nThere is no method to unset header in response class \r\n\r\n\r\n",
    "head_branch": "3.2.x-remove-header",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212c5a18912b45d36a337f",
    "number": 13004,
    "body": "\r\n\r\n* Type: bug fix\r\n* Link to issue: #12988",
    "head_branch": "3.2.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #13004 from sergeyklay/3.2.x\n\nFixed Dispatcher::dispatch to correct forward with the modified action suffix"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212c5b18912b45d36a3380",
    "number": 12999,
    "body": "* Type: bug fix\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nWhilst working on another PR, I noticed [Travis failed under PHP 5](https://travis-ci.org/phalcon/cphalcon/builds/259617571) due to the latest version of doctrine/instantiator requiring PHP 7. When installing the Composer dependencies, the platform requirement (^7.1) was ignored and lead to a [parse error and unexpected exit](https://travis-ci.org/phalcon/cphalcon/jobs/259617573#L658).\r\n",
    "head_branch": "composer-ignore-platform-reqs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12999 from SidRoberts/composer-ignore-platform-reqs\n\nComposer in Travis no longer ignores platform requirements"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212c5c18912b45d36a3381",
    "number": 12993,
    "body": "# Issue Description\r\n\r\n* Type: bug fix\r\n\r\nWe have a heavily event-driven solution built using PhalconPHP in-depth. Therefore, while the dispatch-loop is running, there are certain occasions when we naturally perform forwards, handle exceptions and so on.\r\n\r\nWe use multiple different controller action suffixes based on execution context (managed by undisclosed preconditions).\r\n\r\nThe **problem** we were facing was, that whenever one of our listeners were forwarding **and** modifying the suffix of the running dispatcher, the new suffix was not taken into consideration.\r\n\r\nI have found in the source code, that the problem's root cause is, that the **controller action suffix** is read once, before the dispatch loop (the while cycle) kicks off. This can easily be fixed, and I do not expect unwanted side-effects based on the source code, common sense, and local testing.\r\n\r\n## Patched versions / release branches \r\n\r\n| Version |                                       Patch applied                                     |\r\n| ------- | --------------------------------------------------------------------------------------- |\r\n| 2.0.0   | moved local value definition within while loop                                          |\r\n| 2.0.x   | changed action method value assignment to getter instead of local string concatenation. |\r\n| 2.1.x   | changed action method value assignment to getter instead of local string concatenation. |\r\n| 3.0.x   | changed action method value assignment to getter instead of local string concatenation. |\r\n| 3.1.x   | changed action method value assignment to getter instead of local string concatenation. |\r\n| 3.2.x   | changed action method value assignment to getter instead of local string concatenation. |\r\n| 4.0.x   | changed action method value assignment to getter instead of local string concatenation. |\r\n\r\n## Patch explanation\r\n\r\nMy aim with the changes was to do as little change as possible with little to no possibility for unexpected side-effects.\r\n\r\n### moved local value definition within while loop\r\n\r\nOn version 2.0.0 the move refactor seemed to be the least risky and smallest change as I could not find the expected getter for the Controller. The patch would have felt half-assed if I'd only fix the action part.\r\n\r\n### changed action method value assignment to getter instead of local string concatenation.\r\n\r\nOn all other versions I could see, that the controller suffix was always part of the loop. Therefore, I just had to change the action method definition from string concatenation to the getter. The getter is a better approach as it respects the object state. \r\n\r\nFrom : `let actionMethod = actionName . actionSuffix;`  \r\nTo   : `let actionMethod = this->getActiveMethod();`\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nThe given method has no proper test coverage, and to write up the proper mocking, preconditions, post-conditions and assertions to assure, that this trivial change works would consume too much of my free time. We are talking about a ~275ish line long method, with a cyclomatic complexity way over 12 (just by looking at it, not counting). ",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212c5e18912b45d36a3382",
    "number": 12992,
    "body": "# Issue Description\r\n\r\n* Type: bug fix\r\n\r\nWe have a heavily event-driven solution built using PhalconPHP in-depth. Therefore, while the dispatch-loop is running, there are certain occasions when we naturally perform forwards, handle exceptions and so on.\r\n\r\nWe use multiple different controller action suffixes based on execution context (managed by undisclosed preconditions).\r\n\r\nThe **problem** we were facing was, that whenever one of our listeners were forwarding **and** modifying the suffix of the running dispatcher, the new suffix was not taken into consideration.\r\n\r\nI have found in the source code, that the problem's root cause is, that the **controller action suffix** is read once, before the dispatch loop (the while cycle) kicks off. This can easily be fixed, and I do not expect unwanted side-effects based on the source code, common sense, and local testing.\r\n\r\n## Patched versions / release branches \r\n\r\n| Version |                                       Patch applied                                     |\r\n| ------- | --------------------------------------------------------------------------------------- |\r\n| 2.0.0   | moved local value definition within while loop                                          |\r\n| 2.0.x   | changed action method value assignment to getter instead of local string concatenation. |\r\n| 2.1.x   | changed action method value assignment to getter instead of local string concatenation. |\r\n| 3.0.x   | changed action method value assignment to getter instead of local string concatenation. |\r\n| 3.1.x   | changed action method value assignment to getter instead of local string concatenation. |\r\n| 3.2.x   | changed action method value assignment to getter instead of local string concatenation. |\r\n| 4.0.x   | changed action method value assignment to getter instead of local string concatenation. |\r\n\r\n## Patch explanation\r\n\r\nMy aim with the changes was to do as little change as possible with little to no possibility for unexpected side-effects.\r\n\r\n### moved local value definition within while loop\r\n\r\nOn version 2.0.0 the move refactor seemed to be the least risky and smallest change as I could not find the expected getter for the Controller. The patch would have felt half-assed if I'd only fix the action part.\r\n\r\n### changed action method value assignment to getter instead of local string concatenation.\r\n\r\nOn all other versions I could see, that the controller suffix was always part of the loop. Therefore, I just had to change the action method definition from string concatenation to the getter. The getter is a better approach as it respects the object state. \r\n\r\nFrom : `let actionMethod = actionName . actionSuffix;`  \r\nTo   : `let actionMethod = this->getActiveMethod();`\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nThe given method has no proper test coverage, and to write up the proper mocking, preconditions, post-conditions and assertions to assure, that this trivial change works would consume too much of my free time. We are talking about a ~275ish line long method, with a cyclomatic complexity way over 12 (just by looking at it, not counting). ",
    "head_branch": "3.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212c5f18912b45d36a3383",
    "number": 12991,
    "body": "# Issue Description\r\n\r\n* Type: bug fix\r\n\r\nWe have a heavily event-driven solution built using PhalconPHP in-depth. Therefore, while the dispatch-loop is running, there are certain occasions when we naturally perform forwards, handle exceptions and so on.\r\n\r\nWe use multiple different controller action suffixes based on execution context (managed by undisclosed preconditions).\r\n\r\nThe **problem** we were facing was, that whenever one of our listeners were forwarding **and** modifying the suffix of the running dispatcher, the new suffix was not taken into consideration.\r\n\r\nI have found in the source code, that the problem's root cause is, that the **controller action suffix** is read once, before the dispatch loop (the while cycle) kicks off. This can easily be fixed, and I do not expect unwanted side-effects based on the source code, common sense, and local testing.\r\n\r\n## Patched versions / release branches \r\n\r\n| Version |                                       Patch applied                                     |\r\n| ------- | --------------------------------------------------------------------------------------- |\r\n| 2.0.0   | moved local value definition within while loop                                          |\r\n| 2.0.x   | changed action method value assignment to getter instead of local string concatenation. |\r\n| 2.1.x   | changed action method value assignment to getter instead of local string concatenation. |\r\n| 3.0.x   | changed action method value assignment to getter instead of local string concatenation. |\r\n| 3.1.x   | changed action method value assignment to getter instead of local string concatenation. |\r\n| 3.2.x   | changed action method value assignment to getter instead of local string concatenation. |\r\n| 4.0.x   | changed action method value assignment to getter instead of local string concatenation. |\r\n\r\n## Patch explanation\r\n\r\nMy aim with the changes was to do as little change as possible with little to no possibility for unexpected side-effects.\r\n\r\n### moved local value definition within while loop\r\n\r\nOn version 2.0.0 the move refactor seemed to be the least risky and smallest change as I could not find the expected getter for the Controller. The patch would have felt half-assed if I'd only fix the action part.\r\n\r\n### changed action method value assignment to getter instead of local string concatenation.\r\n\r\nOn all other versions I could see, that the controller suffix was always part of the loop. Therefore, I just had to change the action method definition from string concatenation to the getter. The getter is a better approach as it respects the object state. \r\n\r\nFrom : `let actionMethod = actionName . actionSuffix;`  \r\nTo   : `let actionMethod = this->getActiveMethod();`\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nThe given method has no proper test coverage, and to write up the proper mocking, preconditions, post-conditions and assertions to assure, that this trivial change works would consume too much of my free time. We are talking about a ~275ish line long method, with a cyclomatic complexity way over 12 (just by looking at it, not counting). ",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212c6018912b45d36a3384",
    "number": 12990,
    "body": "# Issue Description\r\n\r\n* Type: bug fix\r\n\r\nWe have a heavily event-driven solution built using PhalconPHP in-depth. Therefore, while the dispatch-loop is running, there are certain occasions when we naturally perform forwards, handle exceptions and so on.\r\n\r\nWe use multiple different controller action suffixes based on execution context (managed by undisclosed preconditions).\r\n\r\nThe **problem** we were facing was, that whenever one of our listeners were forwarding **and** modifying the suffix of the running dispatcher, the new suffix was not taken into consideration.\r\n\r\nI have found in the source code, that the problem's root cause is, that the **controller action suffix** is read once, before the dispatch loop (the while cycle) kicks off. This can easily be fixed, and I do not expect unwanted side-effects based on the source code, common sense, and local testing.\r\n\r\n## Patched versions / release branches \r\n\r\n| Version |                                       Patch applied                                     |\r\n| ------- | --------------------------------------------------------------------------------------- |\r\n| 2.0.0   | moved local value definition within while loop                                          |\r\n| 2.0.x   | changed action method value assignment to getter instead of local string concatenation. |\r\n| 2.1.x   | changed action method value assignment to getter instead of local string concatenation. |\r\n| 3.0.x   | changed action method value assignment to getter instead of local string concatenation. |\r\n| 3.1.x   | changed action method value assignment to getter instead of local string concatenation. |\r\n| 3.2.x   | changed action method value assignment to getter instead of local string concatenation. |\r\n| 4.0.x   | changed action method value assignment to getter instead of local string concatenation. |\r\n\r\n## Patch explanation\r\n\r\nMy aim with the changes was to do as little change as possible with little to no possibility for unexpected side-effects.\r\n\r\n### moved local value definition within while loop\r\n\r\nOn version 2.0.0 the move refactor seemed to be the least risky and smallest change as I could not find the expected getter for the Controller. The patch would have felt half-assed if I'd only fix the action part.\r\n\r\n### changed action method value assignment to getter instead of local string concatenation.\r\n\r\nOn all other versions I could see, that the controller suffix was always part of the loop. Therefore, I just had to change the action method definition from string concatenation to the getter. The getter is a better approach as it respects the object state. \r\n\r\nFrom : `let actionMethod = actionName . actionSuffix;`  \r\nTo   : `let actionMethod = this->getActiveMethod();`\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nThe given method has no proper test coverage, and to write up the proper mocking, preconditions, post-conditions and assertions to assure, that this trivial change works would consume too much of my free time. We are talking about a ~275ish line long method, with a cyclomatic complexity way over 12 (just by looking at it, not counting). ",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212c6118912b45d36a3385",
    "number": 12989,
    "body": "# Issue Description\r\n\r\n* Type: bug fix\r\n\r\nWe have a heavily event-driven solution built using PhalconPHP in-depth. Therefore, while the dispatch-loop is running, there are certain occasions when we naturally perform forwards, handle exceptions and so on.\r\n\r\nWe use multiple different controller action suffixes based on execution context (managed by undisclosed preconditions).\r\n\r\nThe **problem** we were facing was, that whenever one of our listeners were forwarding **and** modifying the suffix of the running dispatcher, the new suffix was not taken into consideration.\r\n\r\nI have found in the source code, that the problem's root cause is, that the **controller action suffix** is read once, before the dispatch loop (the while cycle) kicks off. This can easily be fixed, and I do not expect unwanted side-effects based on the source code, common sense, and local testing.\r\n\r\n## Patched versions / release branches \r\n\r\n| Version |                                       Patch applied                                     |\r\n| ------- | --------------------------------------------------------------------------------------- |\r\n| 2.0.0   | moved local value definition within while loop                                          |\r\n| 2.0.x   | changed action method value assignment to getter instead of local string concatenation. |\r\n| 2.1.x   | changed action method value assignment to getter instead of local string concatenation. |\r\n| 3.0.x   | changed action method value assignment to getter instead of local string concatenation. |\r\n| 3.1.x   | changed action method value assignment to getter instead of local string concatenation. |\r\n| 3.2.x   | changed action method value assignment to getter instead of local string concatenation. |\r\n| 4.0.x   | changed action method value assignment to getter instead of local string concatenation. |\r\n\r\n## Patch explanation\r\n\r\nMy aim with the changes was to do as little change as possible with little to no possibility for unexpected side-effects.\r\n\r\n### moved local value definition within while loop\r\n\r\nOn version 2.0.0 the move refactor seemed to be the least risky and smallest change as I could not find the expected getter for the Controller. The patch would have felt half-assed if I'd only fix the action part.\r\n\r\n### changed action method value assignment to getter instead of local string concatenation.\r\n\r\nOn all other versions I could see, that the controller suffix was always part of the loop. Therefore, I just had to change the action method definition from string concatenation to the getter. The getter is a better approach as it respects the object state. \r\n\r\nFrom : `let actionMethod = actionName . actionSuffix;`  \r\nTo   : `let actionMethod = this->getActiveMethod();`\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nThe given method has no proper test coverage, and to write up the proper mocking, preconditions, post-conditions and assertions to assure, that this trivial change works would consume too much of my free time. We are talking about a ~275ish line long method, with a cyclomatic complexity way over 12 (just by looking at it, not counting). ",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212c6218912b45d36a3386",
    "number": 12988,
    "body": "# Issue Description\r\n\r\n* Type: bug fix\r\n\r\nWe have a heavily event-driven solution built using PhalconPHP in-depth. Therefore, while the dispatch-loop is running, there are certain occasions when we naturally perform forwards, handle exceptions and so on.\r\n\r\nWe use multiple different controller action suffixes based on execution context (managed by undisclosed preconditions).\r\n\r\nThe **problem** we were facing was, that whenever one of our listeners were forwarding **and** modifying the suffix of the running dispatcher, the new suffix was not taken into consideration.\r\n\r\nI have found in the source code, that the problem's root cause is, that the **controller action suffix** is read once, before the dispatch loop (the while cycle) kicks off. This can easily be fixed, and I do not expect unwanted side-effects based on the source code, common sense, and local testing.\r\n\r\n## Patched versions / release branches \r\n\r\n| Version |                                       Patch applied                                     |\r\n| ------- | --------------------------------------------------------------------------------------- |\r\n| 2.0.0   | moved local value definition within while loop                                          |\r\n| 2.0.x   | changed action method value assignment to getter instead of local string concatenation. |\r\n| 2.1.x   | changed action method value assignment to getter instead of local string concatenation. |\r\n| 3.0.x   | changed action method value assignment to getter instead of local string concatenation. |\r\n| 3.1.x   | changed action method value assignment to getter instead of local string concatenation. |\r\n| 3.2.x   | changed action method value assignment to getter instead of local string concatenation. |\r\n| 4.0.x   | changed action method value assignment to getter instead of local string concatenation. |\r\n\r\n## Patch explanation\r\n\r\nMy aim with the changes was to do as little change as possible with little to no possibility for unexpected side-effects.\r\n\r\n### moved local value definition within while loop\r\n\r\nOn version 2.0.0 the move refactor seemed to be the least risky and smallest change as I could not find the expected getter for the Controller. The patch would have felt half-assed if I'd only fix the action part.\r\n\r\n### changed action method value assignment to getter instead of local string concatenation.\r\n\r\nOn all other versions I could see, that the controller suffix was always part of the loop. Therefore, I just had to change the action method definition from string concatenation to the getter. The getter is a better approach as it respects the object state. \r\n\r\nFrom : `let actionMethod = actionName . actionSuffix;`  \r\nTo   : `let actionMethod = this->getActiveMethod();`\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nThe given method has no proper test coverage, and to write up the proper mocking, preconditions, post-conditions and assertions to assure, that this trivial change works would consume too much of my free time. We are talking about a ~275ish line long method, with a cyclomatic complexity way over 12 (just by looking at it, not counting). ",
    "head_branch": "3.2.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212c6318912b45d36a3387",
    "number": 12987,
    "body": "# Issue Description\r\n\r\n* Type: bug fix\r\n\r\nWe have a heavily event-driven solution built using PhalconPHP in-depth. Therefore, while the dispatch-loop is running, there are certain occasions when we naturally perform forwards, handle exceptions and so on.\r\n\r\nWe use multiple different controller action suffixes based on execution context (managed by undisclosed preconditions).\r\n\r\nThe **problem** we were facing was, that whenever one of our listeners were forwarding **and** modifying the suffix of the running dispatcher, the new suffix was not taken into consideration.\r\n\r\nI have found in the source code, that the problem's root cause is, that the **controller action suffix** is read once, before the dispatch loop (the while cycle) kicks off. This can easily be fixed, and I do not expect unwanted side-effects based on the source code, common sense, and local testing.\r\n\r\n## Patched versions / release branches \r\n\r\n| Version |                                       Patch applied                                     |\r\n| ------- | --------------------------------------------------------------------------------------- |\r\n| 2.0.0   | moved local value definition within while loop                                          |\r\n| 2.0.x   | changed action method value assignment to getter instead of local string concatenation. |\r\n| 2.1.x   | changed action method value assignment to getter instead of local string concatenation. |\r\n| 3.0.x   | changed action method value assignment to getter instead of local string concatenation. |\r\n| 3.1.x   | changed action method value assignment to getter instead of local string concatenation. |\r\n| 3.2.x   | changed action method value assignment to getter instead of local string concatenation. |\r\n| 4.0.x   | changed action method value assignment to getter instead of local string concatenation. |\r\n\r\n## Patch explanation\r\n\r\nMy aim with the changes was to do as little change as possible with little to no possibility for unexpected side-effects.\r\n\r\n### moved local value definition within while loop\r\n\r\nOn version 2.0.0 the move refactor seemed to be the least risky and smallest change as I could not find the expected getter for the Controller. The patch would have felt half-assed if I'd only fix the action part.\r\n\r\n### changed action method value assignment to getter instead of local string concatenation.\r\n\r\nOn all other versions I could see, that the controller suffix was always part of the loop. Therefore, I just had to change the action method definition from string concatenation to the getter. The getter is a better approach as it respects the object state. \r\n\r\nFrom : `let actionMethod = actionName . actionSuffix;`  \r\nTo   : `let actionMethod = this->getActiveMethod();`\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nThe given method has no proper test coverage, and to write up the proper mocking, preconditions, post-conditions and assertions to assure, that this trivial change works would consume too much of my free time. We are talking about a ~275ish line long method, with a cyclomatic complexity way over 12 (just by looking at it, not counting). ",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212c6418912b45d36a3388",
    "number": 12985,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR. - no tests exists for mysql dialect?\r\n\r\nSmall description of change:\r\n\r\nadding type_json support for mysql dialect\r\n\r\nThanks\r\n\r\n",
    "head_branch": "4.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212c6518912b45d36a3389",
    "number": 12984,
    "body": "* Type: new feature\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR. (no db-specific column tests appear to exist?)\r\n\r\nSmall description of change:\r\nAdding case to handle `TYPE_JSON` in table column definitions as MySQL 5.7+ adds the JSON data type\r\n\r\nThanks\r\n\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212c6618912b45d36a338a",
    "number": 12982,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/phalcon-devtools/issues/438\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n- Fixed `Phalcon\\Db\\Dialect\\Postgresql::describeReferences` to generate correct SQL\r\n- Added `Phalcon\\Db\\Adapter\\Pdo\\Postgresql::describeReferences` for proper creating `Reference` object [phalcon/phalcon-devtools#438](https://github.com/phalcon/phalcon-devtools/issues/438)\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.2.add_reference",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212c6718912b45d36a338b",
    "number": 12980,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/12978\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change: Internal cookies property is now always an array\r\n\r\nThanks\r\n\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12980 from SidRoberts/patch-1\n\nInternal cookies property is now always an array (fixes #12978)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212c6818912b45d36a338c",
    "number": 12974,
    "body": "",
    "head_branch": "3.2.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12974 from sergeyklay/3.2.x\n\nFixed memory leaks"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212c6918912b45d36a338d",
    "number": 12973,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/12947\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change: I added missing replacePairs\r\n\r\n",
    "head_branch": "fix-12947",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12973 from Zaszczyk/fix-12947\n\nFix #12947"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212c6a18912b45d36a338e",
    "number": 12970,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue: [#12957](https://github.com/phalcon/cphalcon/issues/12957)\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nThis adds a test for issue #12957 to validate that querybuilder paginator works with multiple db services.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "test/12957",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12970 from dnapierata/test/12957\n\nAdded a test for issue 12957"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212c6b18912b45d36a338f",
    "number": 12969,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/phalcon-devtools/issues/438\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\n- Fixed `Phalcon\\Db\\Dialect\\Postgresql::describeReferences` to generate correct SQL\r\n- Added `Phalcon\\Db\\Adapter\\Pdo\\Postgresql::describeReferences` for proper creating `Reference` object [phalcon/phalcon-devtools#438](https://github.com/phalcon/phalcon-devtools/issues/438)\r\n\r\nThanks\r\n",
    "head_branch": "3.2.create_reference",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212c6d18912b45d36a3390",
    "number": 12967,
    "body": "",
    "head_branch": "3.2.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12967 from sergeyklay/3.2.x\n\nCleaned optimizers [01]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212c6e18912b45d36a3391",
    "number": 12966,
    "body": "",
    "head_branch": "3.2.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12966 from sergeyklay/3.2.x\n\nUpdated tests"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212c6f18912b45d36a3392",
    "number": 12962,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/12842\r\n\r\nSmall description of change:\r\n\r\n* removed check for `UNSIGNED` as PostgreSQL does not support it\r\n* removed double check for `TIMESTAMP` type\r\n* added support of `DOUBLE PRECISION` and `REAL` data types\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.2.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12962 from tztztztz/3.2.x\n\nUpdate postgresql.zep - added support for \"double precision\" and \"real\" data types for metadata"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212c7018912b45d36a3393",
    "number": 12961,
    "body": "",
    "head_branch": "3.2.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212c7118912b45d36a3394",
    "number": 12960,
    "body": "* Type: bug fix\r\n* Link to issue: #12957\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: Use the db service from the model when paginating instead of assuming `'db'` as the service name.\r\n",
    "head_branch": "fix/12957",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use db service from the model when paginating (#12960)\n\nUpdate CHANGELOG.md"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212c7218912b45d36a3395",
    "number": 12956,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\nAdded describeReferences method in adapter and changed describeReferences method in dialect for postgresql DB\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.2.create_reference",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212c7318912b45d36a3396",
    "number": 12954,
    "body": "Prevent create form element with empty name value like ''\r\n\r\nHello!\r\n\r\n* Type: bug fix\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Prevent invalid element name (#12954)\n\n* Prevent invalid element name\r\n\r\nPrevent create form element with empty name value like ''\r\n\r\n* trim name\r\n\r\n* Update element.zep\r\n\r\n* Update element.zep"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212c7418912b45d36a3397",
    "number": 12951,
    "body": "Hello!\r\n\r\n* Link to issue: [#12950](https://github.com/phalcon/cphalcon/issues/12950)\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change: Escaped row count aliases with double quotes\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.2.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12951 from dnapierata/3.2.x\n\nescape rowcount alias"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212c7518912b45d36a3398",
    "number": 12944,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\nChanged `addForeignKey` method  for Postgresql dialect\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.2.postgres_foreign_key",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12944 from sergeysviridenko/3.2.postgres_foreign_key\n\nChanged method addForeignKey for Postgresql"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212c7618912b45d36a3399",
    "number": 12942,
    "body": "Hello!\r\n\r\n* Type: documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change: \r\n\r\nI've changed foreign key workflow: changed method addForeignKey() and added FOREIGN_KEY_CHECKS check.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "change_log",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212c7718912b45d36a339a",
    "number": 12937,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: phalcon/phalcon-devtools#556\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nI've changed foreign key workflow: changed method addForeignKey() and added FOREIGN_KEY_CHECKS check.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.2.foreign_key",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12937 from sergeysviridenko/3.2.foreign_key\n\nChanged work with foreign key and new unit tests"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212c7a18912b45d36a339b",
    "number": 12936,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: phalcon/phalcon-devtools#556\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nI've changed foreign key workflow: changed method `addForeignKey()` and added `FOREIGN_KEY_CHECKS` check.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "addForeignKey_method",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212c7b18912b45d36a339c",
    "number": 12935,
    "body": "\r\n\r\n* Type: bug fix \r\n* Link to issue: #12934",
    "head_branch": "issue-12934",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12935 from phalcon/issue-12934\n\nFixed Phalcon\\Cache\\Backend\\Apcu::flush"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212c7c18912b45d36a339d",
    "number": 12922,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [ ] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212c7e18912b45d36a339e",
    "number": 12919,
    "body": "",
    "head_branch": "3.2.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12919 from phalcon/3.2.x\n\n3.2.1"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212c7f18912b45d36a339f",
    "number": 12916,
    "body": "\r\n* Type: bug fix | new feature ?\r\n* Link to issue: #12895 \r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR. (not unit tests but my own code tests)\r\n\r\nSmall description of change:\r\n\r\nChanges wrong behavior of Phalcon\\Http\\Response getStatusCode() method to return status code only as int instead of full string (see #12895)\r\n\r\nThanks\r\n",
    "head_branch": "responseStatusCodefix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12916 from stamster/responseStatusCodefix\n\nFixes Phalcon\\Http\\Response getStatusCode() to return code only (int)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212c8118912b45d36a33a0",
    "number": 12915,
    "body": "\r\nHello!\r\n\r\n* Type: bug fix\r\n* Link to issue: phalcon/cphalcon#2408\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nThis PR adds a filter method which returns a new copy of the collection resources array that only includes the supplied type. So that a collection an contain a mix of JS and CSS resources so that:\r\n- [x] `outputJs` will only return js resources from that collection\r\n- [x] `outputCss` will only return css resources from that collection\r\n\r\nThanks\r\nPaul Scarrone(ninjapanzer)<paul@savvysoftworks.com>\r\n",
    "head_branch": "pks/asset_manager_with_mixed_resource_collection",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12915 from SavvySoftWorksLLC/pks/asset_manager_with_mixed_resource_collection\n\nAdd filter to manager so CSS and JS resources are not mixed when outputing by type"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212c8218912b45d36a33a1",
    "number": 12912,
    "body": "\r\n\r\n* Type: bug fix | new feature ?\r\n* Link to issue: #12895 \r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR. (not unit tests but my own code tests)\r\n\r\nSmall description of change:\r\n\r\nChanges wrong behavior of Phalcon\\Http\\Response getStatusCode() method to return status code only as int instead of full string (see #12895)\r\n\r\nThanks\r\n\r\n",
    "head_branch": "merdza",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212c8318912b45d36a33a2",
    "number": 12911,
    "body": "Refs: https://travis-ci.org/phalcon/incubator/jobs/244703920",
    "head_branch": "3.2.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12911 from sergeyklay/3.2.x\n\n[Query\\Builder] Fixed visibility of _conditionNotIn, _conditionIn, _conditionNotBetween and _conditionBetween"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212c8418912b45d36a33a3",
    "number": 12910,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/12779\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: get_object_vars was returning key as string or int depending on minor php version. In zephir there is difference if we use `object->{1}` or `object->{\"1\"}`(in php not). So we need to cast key to string.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.2.x-12779",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12910 from Jurigag/3.2.x-12779\n\nFixes #12779"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212c8518912b45d36a33a4",
    "number": 12906,
    "body": "",
    "head_branch": "3.2.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12906 from sergeyklay/3.2.x\n\nResolved conflicts with master branch"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212c8818912b45d36a33a5",
    "number": 12905,
    "body": "",
    "head_branch": "3.2.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12905 from phalcon/3.2.x\n\n3.2.0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212c8a18912b45d36a33a6",
    "number": 12904,
    "body": "",
    "head_branch": "license",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12904 from sergeyklay/license\n\nMoved license to the project root"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212c8b18912b45d36a33a7",
    "number": 12903,
    "body": "",
    "head_branch": "3.2.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12903 from sergeyklay/3.2.x\n\nUpdate CHANGELOG.md [ci skip]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212c8c18912b45d36a33a8",
    "number": 12902,
    "body": "",
    "head_branch": "3.2.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12902 from sergeyklay/3.2.x\n\nCleaned Phalcon\\Config\\Adapter\\Grouped"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212c8d18912b45d36a33a9",
    "number": 12901,
    "body": "",
    "head_branch": "3.2.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12901 from sergeyklay/3.2.x\n\nTests Phalcon\\Http\\Response\\Headers::{get,set}"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212c8f18912b45d36a33aa",
    "number": 12899,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nSorry to my previous PR.\r\nPhalcon's AnnotationRouter cannot parse PATCH request. This patch resolves this issue.\r\n\r\nThanks",
    "head_branch": "fix/router/annotation/patch",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12899 from hoyo/fix/router/annotation/patch\n\nSupport PATCH request in annotation router"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212c9018912b45d36a33ab",
    "number": 12898,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nPhalcon's AnnotationRouter cannot parse PATCH request. This patch resolves this issue.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "feature/router/annotation/patch",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212c9118912b45d36a33ac",
    "number": 12896,
    "body": "Hello!\r\n\r\n* Type: documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nAddresses Issue #933 in docs repo\r\n\r\n",
    "head_branch": "3.2.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12896 from niden/3.2.x\n\nAdded @return tag in save() (BackendInterface/Cache) docs/#933"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212c9218912b45d36a33ad",
    "number": 12891,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: [phalcon/incubator#762](https://github.com/phalcon/incubator/issues/762), [phalcon/incubator#760](https://github.com/phalcon/incubator/issues/760)\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change: On php 7.1.0 get_object_vars properly return protected properties in class scope, on other versions not, so we need to update reserved attributes to correctly return them.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.2.x-fix-collection",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12891 from Jurigag/3.2.x-fix-collection\n\nUpdated collection reserved attributes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212c9318912b45d36a33ae",
    "number": 12887,
    "body": "",
    "head_branch": "3.2.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12887 from sergeyklay/3.2.x\n\nAdded test for Text::random with distinct type"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212c9418912b45d36a33af",
    "number": 12884,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: NA\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nMany systems use the concept of distribution config files where config.conf is added to the repo but config.dist.conf is ignored. These changes allow us to easily accomplish the same concept in Phalcon. Additionally, this leverages the existing Config Factory to allow us to combine either a specifc adapter or multiple different adapters.\r\n\r\n```php\r\n$configFiles = [\r\n  [\r\n    'adapter' => 'ini', //This specifically uses the ini adapter.\r\n    'filePath' => '/usr/www/conf.ini'\r\n  ],\r\n  __DIR__ . '/etc/config.json' //This will use the default adapter.\r\n];\r\n\r\nif (file_exists([__DIR__ . '/etc/config.dist.json']) {\r\n    $configFiles[] = __DIR__ . '/etc/config.dist.json'; //This will use the default adapter.\r\n}\r\n\r\n$configFiles[] = [\r\n  'adapter' => 'array', //This will use the traditional \\Phalcon\\Config object.\r\n  'config'   => [\r\n    'debug' => true\r\n  ]\r\n];\r\n\r\n//Initialize Config using the Json adapter as the default.\r\n$config = new \\Phalcon\\Config\\Adapter\\Grouped($configFiles, 'json');\r\n```\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.2.x-multi-config",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12884 from twistersfury/3.2.x-multi-config\n\n3.2.x Grouped Config"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212c9518912b45d36a33b0",
    "number": 12883,
    "body": "Hello!\r\n\r\n* Type: tests\r\n* Link to issue: #12882\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: Work in progress\r\n\r\nThanks\r\n\r\n",
    "head_branch": "issue/12882",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Test issue #12882 (#12883)\n\n* Added test for #12882\r\n\r\n* Updated Events Manager test"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212c9618912b45d36a33b1",
    "number": 12881,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #12736\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nFixed `Phalcon\\Cache\\Backend\\Redis::__construct` and `Phalcon\\Cache\\Backend\\Redis::_connect` to correctly handle the Redis auth option.\r\n\r\nThanks\r\n",
    "head_branch": "3.2.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12881 from sergeyklay/3.2.x\n\nFixed Redis auth"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212c9718912b45d36a33b2",
    "number": 12880,
    "body": "",
    "head_branch": "3.2.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12880 from sergeyklay/3.2.x\n\nTest for issue #11409"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212c9818912b45d36a33b3",
    "number": 12878,
    "body": "",
    "head_branch": "3.2.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12878 from sergeyklay/3.2.x\n\nRollback extra Phalcon\\Assets\\Manager::has"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212c9918912b45d36a33b4",
    "number": 12877,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nAdded `Phalcon\\Assets\\Manager::has` to checks whether the Assets Manager has Collection.\r\n\r\n```php\r\nuse Phalcon\\Assets\\Manager;\r\n\r\n$manager = new Manager();\r\n\r\n// Throws Phalcon\\Assets\\Exception\r\n$manager->get('jsHeader');\r\n\r\n$manager->has('jsHeader'); // false\r\n\r\n$manager->collection('jsHeader')->addJs('script1.js');\r\n\r\nif ($manager->has('jsHeader')) {\r\n    // Phalcon\\Assets\\Collection\r\n    $collection = $manager->get('jsHeader');\r\n}\r\n```\r\n\r\nThanks\r\n",
    "head_branch": "3.2.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12877 from sergeyklay/3.2.x\n\nAdded Phalcon\\Assets\\Manager::has"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212c9a18912b45d36a33b5",
    "number": 12876,
    "body": "",
    "head_branch": "3.2.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12876 from sergeyklay/3.2.x\n\nRefactored Criteria tests (4)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212c9b18912b45d36a33b6",
    "number": 12875,
    "body": "",
    "head_branch": "3.2.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12875 from sergeyklay/3.2.x\n\nRefactored Criteria tests (3)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212c9c18912b45d36a33b7",
    "number": 12873,
    "body": "",
    "head_branch": "3.2.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12873 from sergeyklay/3.2.x\n\nRefactored Criteria tests (2)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212c9d18912b45d36a33b8",
    "number": 12872,
    "body": "",
    "head_branch": "3.2.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12872 from sergeyklay/3.2.x\n\nRefactored Criteria tests (1)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212c9e18912b45d36a33b9",
    "number": 12870,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature\r\n* Link to issue: #10938\r\n\r\nSmall description of change:\r\n\r\n- Added `Phalcon\\Assets\\Collection::has` to checks whether the resource is added to the collection or not\r\n- Fixed `Phalcon\\Assets\\Collection:add` to avoid duplication of resources [#10938](https://github.com/phalcon/cphalcon/issues/10938)\r\n",
    "head_branch": "feature/resource/collection/has_add",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12870 from sergeyklay/feature/resource/collection/has_add\n\nFixed Phalcon\\Assets\\Collection:add to avoid duplication of resources"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212c9f18912b45d36a33ba",
    "number": 12869,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n\r\nAdded `Phalcon\\Assets\\ResourceInterface`.\r\nSo now `Phalcon\\Assets\\Inline` and `Phalcon\\Assets\\Resource` implements `ResourceInterface`\r\n\r\nThanks\r\n\r\n",
    "head_branch": "feature/resource/interface",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12869 from sergeyklay/feature/resource/interface\n\nIntroduced Phalcon\\Assets\\ResourceInterface"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212ca018912b45d36a33bb",
    "number": 12866,
    "body": "Reverts phalcon/cphalcon#12776",
    "head_branch": "revert-12776-3.2.x-factory-di",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12866 from phalcon/revert-12776-3.2.x-factory-di\n\nRevert \"Factory load for di\""
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212ca218912b45d36a33bc",
    "number": 12862,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: On php 7/7.1 when extending internal class with null static it's value in C code is returned as `&NULL` causing condition if reserver === null to be false and breaking collections for php 7. This is workaround for this.\r\n\r\nLink to bug in php - https://bugs.php.net/bug.php?id=74648\r\n\r\nThanks\r\n\r\n@sergeyklay @sjinks if you have other idea which condition could be used and still fixing this let me know",
    "head_branch": "3.2.x-fix-collection",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12862 from Jurigag/3.2.x-fix-collection\n\nFix getReservedAttributes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ca318912b45d36a33bd",
    "number": 12861,
    "body": "",
    "head_branch": "test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12861 from sergeyklay/test\n\nUpdate Travis build"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212ca418912b45d36a33be",
    "number": 12860,
    "body": "",
    "head_branch": "issue/validation/copypasta",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12860 from sergeyklay/issue/validation/copypasta\n\nCleaned validators"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212ca518912b45d36a33bf",
    "number": 12859,
    "body": "",
    "head_branch": "3.2.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12859 from sergeyklay/3.2.x\n\nBump Zephir version"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ca618912b45d36a33c0",
    "number": 12858,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #12105\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: Added `Phalcon\\Security\\Random:base62` to provide the largest value that can safely be used in URLs without needing to take extra characters into consideration.\r\n\r\n```php\r\nuse Phalcon\\Security\\Random;\r\n\r\n$random = new Random();\r\n\r\n// Random base62 string\r\necho $random->base62(); // z0RkwHfh8ErDM1xw\r\n```\r\nThanks\r\n\r\n",
    "head_branch": "feature/security/random/base_62",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12858 from sergeyklay/feature/security/random/base_62\n\nAdded Phalcon\\Security\\Random:base62"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212ca718912b45d36a33c1",
    "number": 12857,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #121, #12417, #1658, #2496\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: Added `dispatcher::beforeForward` event to allow forwarding request to the separated module.\r\n\r\n```php\r\nuse Phalcon\\Events\\Event;\r\nuse Phalcon\\Mvc\\Dispatcher;\r\nuse App\\Backend\\Bootstrap as Backend;\r\nuse App\\Frontend\\Bootstrap as Frontend;\r\n\r\n// Registering modules\r\n$modules = [\r\n    'frontend' => [\r\n        'className' => Frontend::class,\r\n        'path'      => __DIR__ . '/app/Modules/Frontend/Bootstrap.php',\r\n        'metadata'  => [\r\n            'controllersNamespace' => 'App\\Frontend\\Controllers',\r\n        ],\r\n    ],\r\n    'backend' => [\r\n        'className' => Backend::class,\r\n        'path'      => __DIR__ . '/app/Modules/Backend/Bootstrap.php',\r\n        'metadata'  => [\r\n            'controllersNamespace' => 'App\\Backend\\Controllers',\r\n        ],\r\n    ],\r\n];\r\n\r\n$application->registerModules($modules);\r\n\r\n// Setting beforeForward listener\r\n$eventsManager = $di->getShared('eventsManager');\r\n\r\n$eventsManager->attach(\r\n    'dispatch:beforeForward',\r\n    function(Event $event, Dispatcher $dispatcher, array $forward) use ($modules) {\r\n        $metadata = $modules[$forward['module']]['metadata'];\r\n\r\n        $dispatcher->setModuleName($forward['module']);\r\n        $dispatcher->setNamespaceName($metadata['controllersNamespace']);\r\n    }\r\n);\r\n\r\n// Forward\r\n$this->dispatcher->forward(\r\n    [\r\n        'module'     => 'backend',\r\n        'controller' => 'posts',\r\n        'action'     => 'index',\r\n    ]\r\n);\r\n```\r\n\r\nThanks\r\n\r\n",
    "head_branch": "feature/mvc/dispatcher/before_forward",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12857 from sergeyklay/feature/mvc/dispatcher/before_forward\n\nAdded dispatcher::beforeForward event"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212ca818912b45d36a33c2",
    "number": 12856,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: Added `Phalcon\\Mvc\\Model\\Criteria::createBuilder` to create a query builder from criteria.\r\n\r\n```php\r\n/** @var \\Phalcon\\Mvc\\Model\\Criteria $criteria */\r\n$criteria = Robots::query()\r\n    ->where(\"type = :type:\")\r\n    ->bind([\"type\" => \"mechanical\"]);\r\n\r\n/** @var \\Phalcon\\Mvc\\Model\\Query\\Builder $builder */\r\n$builder = $criteria->createBuilder();\r\n```\r\n\r\nRefs: #10504\r\n\r\nThanks\r\n",
    "head_branch": "feature/criteria/create_builder",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12856 from sergeyklay/feature/criteria/create_builder\n\nAdded Phalcon\\Mvc\\Model\\Criteria::createBuilder"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212ca918912b45d36a33c3",
    "number": 12852,
    "body": "Hello!\r\n\r\n- [x] Type: bug fix | new feature\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n\r\nSmall description of change:\r\n\r\nAdded a new `findBoundModel` method for extendability. Params fetched from cache are being added to internalCache class property in Phalcon\\Mvc\\Model\\Binder:getParamsFromCache.\r\n\r\nThanks\r\nNathan Daly <justlikephp@gmail.com>",
    "head_branch": "3.2.x-model-binding",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12852 from linxlad/3.2.x-model-binding\n\n[WIP] Model bindings: Abstracted out findFirst method. Set params from cache to internalCache class property."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212cab18912b45d36a33c4",
    "number": 12851,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n\r\nSmall description of change:\r\n\r\nAbstracted out findFirst queries into it's own method for extendability. Added internal params retrieved from cache to internalParams class property to avoid it being called on the next request.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.2.x-model-binding",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212cac18912b45d36a33c5",
    "number": 12849,
    "body": "Hello!\r\n\r\n- [x] Type: code quality\r\n\r\nFor production environnements, to improve a lot the volt performance, it's really interresting to work with `stat` option = true on Volt compiler. But the problem is that there is not an easy way to warmup Volt cache. Also, if you clear the cache folder, then you'll have many exceptions. I propose to remove this exception and  compile the file.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.2.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12849 from SachaMorard/3.2.x\n\nVolt Compiler: Remove exception when stat option is true, and when fi…"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212cad18912b45d36a33c6",
    "number": 12847,
    "body": "",
    "head_branch": "3.2.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12847 from sergeyklay/3.2.x\n\nUsed lates Zephir Parser"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212cae18912b45d36a33c7",
    "number": 12845,
    "body": "",
    "head_branch": "travis_build",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12845 from sergeyklay/travis_build\n\nImproved Travis CI build"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212cb018912b45d36a33c8",
    "number": 12841,
    "body": "Hello!\r\n\r\n* Type:  new feature\r\n* Link to issue: NA\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nIn many of my projects, I find myself constantly adding PHP Internal Functions to the Volt Compiler Engine (IE: `substr`).\r\n\r\nI found this very repetitive and frustrating to have to add to all of them. With this in mind, I've updated the compiler to have a new option of `includePhpFunctions`. When `_compileSource` is ran, it looks for this option and automatically registers all php internal functions within the compiler.\r\n\r\nTo maintain existing code bases, I've added a `hasFunction` method which I use in the function loop such that it only adds it if it wasn't previously added.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.2.x-php-functions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212cb118912b45d36a33c9",
    "number": 12838,
    "body": "* Type: bug fix\r\n* Link to issue: #12326, #12835\r\n\r\nFixed `Phalcon\\Session\\Adapter::destroy` to correct clear `$_SESSION` superglobal\r\n\r\nRefs: https://github.com/phalcon/zephir/pull/1533, https://github.com/phalcon/zephir/pull/1532",
    "head_branch": "fix_session_adapters",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12838 from sergeyklay/fix_session_adapters\n\nFixed Session\\Adapter::destroy to correctly clear the $_SESSION"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212cb218912b45d36a33ca",
    "number": 12837,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nAdd ability to sanitize special characters such < >\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.2.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12837 from zamronypj/3.2.x\n\nAdd sanitizing html special characters"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212cb318912b45d36a33cb",
    "number": 12834,
    "body": "",
    "head_branch": "3.2.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12834 from sergeyklay/3.2.x\n\nImproved redis related tests"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212cb418912b45d36a33cc",
    "number": 12828,
    "body": "Hello!\r\n\r\n* Type: bug fix / new feature (unsure, it's unwanted behavior that is inconsistent with the behavior of `Model::delete()`)\r\n* Link to issue: #11133\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change: When any `Model::delete()` fails the result bubbles to cause `ResultSet::delete()` to return `false` as well.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.2.x-resultset-delete-result",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12828 from be-interactive/3.2.x-resultset-delete-result\n\nGive different result from Resultset::delete() depending on success"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212cb518912b45d36a33cd",
    "number": 12826,
    "body": "Reverts phalcon/cphalcon#12756",
    "head_branch": "revert-12756-3.2.x-router",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12826 from phalcon/revert-12756-3.2.x-router\n\nRevert \"Take advantage of prefix in router for faster handling\""
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212cb618912b45d36a33ce",
    "number": 12825,
    "body": "",
    "head_branch": "3.2.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12825 from sergeyklay/3.2.x\n\nUse latest Zephir"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212cb718912b45d36a33cf",
    "number": 12823,
    "body": "",
    "head_branch": "pdo_tests",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12823 from phalcon/pdo_tests\n\nSkip tests if database connection has failed"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212cb818912b45d36a33d0",
    "number": 12822,
    "body": "",
    "head_branch": "3.2.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12822 from sergeyklay/3.2.x\n\nImproved tests"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212cb918912b45d36a33d1",
    "number": 12821,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/pull/10931#issuecomment-297516226\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nFix `afterBindingHandlers`. `MiddlewareInterface` and `closure` will be handled the same way.",
    "head_branch": "bugfix-afterBinding-handling",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12821 from pauliuspetronis/bugfix-afterBinding-handling\n\nBugfix afterBinding handling"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212cba18912b45d36a33d2",
    "number": 12818,
    "body": "Hello!\r\n\r\n* Type:  new feature\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nAdded getter for old snapshot, very useful in after(Events)\r\nThanks\r\n\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12818 from badluck81/patch-1\n\nAdded getter for old snapshot"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212cbb18912b45d36a33d3",
    "number": 12817,
    "body": "```\r\n1) PaginatorTest::testQueryBuilderPaginatorGroupBy\r\nPDOException: SQLSTATE[42000]: Syntax error or access violation: 1055 Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'phalcon_test.personnes.cedula' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by\r\n```\r\n",
    "head_branch": "pagination_test",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12817 from phalcon/pagination_test\n\nFix testы when sql_mode=only_full_group_by"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212cbe18912b45d36a33d4",
    "number": 12816,
    "body": "```\r\n1) PaginatorTest::testQueryBuilderPaginatorGroupBy\r\nPDOException: SQLSTATE[42000]: Syntax error or access violation: 1055 Expression #1 of SELECT list is not in GROUP BY clause and contains nonaggregated column 'phalcon_test.personnes.cedula' which is not functionally dependent on columns in GROUP BY clause; this is incompatible with sql_mode=only_full_group_by\r\n```\r\n\r\n\r\n",
    "head_branch": "tests",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212cbf18912b45d36a33d5",
    "number": 12814,
    "body": "",
    "head_branch": "3.2.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12814 from sergeyklay/3.2.x\n\nCleaned Phalcon\\Cache\\Backend\\Apcu"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212cc018912b45d36a33d6",
    "number": 12813,
    "body": "Hello!\r\n\r\nType: new feature\r\n\r\nIn raising this pull request, I confirm the following:\r\n\r\n- [ ] I have read and understood the Contributing Guidelines\r\n- [ ] I have checked that another pull request for this purpose does not exist\r\n- [ ] I wrote some tests for this PR\r\n\r\nSmall description of change: Dispatcher enhancement, Allow interrupt action, Produce more of the possible.\r\n\r\nThanks",
    "head_branch": "3.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212cc118912b45d36a33d7",
    "number": 12812,
    "body": "",
    "head_branch": "3.2.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12812 from sergeyklay/3.2.x\n\nDo not use APC to test XCache"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212cc218912b45d36a33d8",
    "number": 12811,
    "body": "Hello!\r\n\r\nType: new feature\r\nLink to issue:\r\nIn raising this pull request, I confirm the following (please check boxes):\r\n\r\n[ ] I have read and understood the Contributing Guidelines?\r\n[ ] I have checked that another pull request for this purpose does not exist.\r\n[ ] I wrote some tests for this PR.\r\nSmall description of change:Dispatcher enhancement, Allow interrupt action,Produce more of the possible.\r\n\r\nThanks",
    "head_branch": "3.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212cc318912b45d36a33d9",
    "number": 12809,
    "body": "Hello!\r\n\r\n* Type: new feature \r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [*] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [*] I have checked that another pull request for this purpose does not exist.\r\n- [*] I wrote some tests for this PR.\r\n\r\nSmall description of change:Dispatcher  enhancement, Allow interrupt action,Produce more of the possible.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212cc418912b45d36a33da",
    "number": 12808,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #11999 \r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change: add FrontendInterface in DI (name \"serializer\") in order to serialize/unserialize Model, Collection, Resultset with a better thing than serialize/unserialize method\r\n\r\nThanks\r\n\r\n",
    "head_branch": "issue_11999",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge branch '4.0.x' into issue_11999"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212cc518912b45d36a33db",
    "number": 12807,
    "body": "If you send options array with auth key and value is a null ignore them.\r\nfixing #12736\r\n\r\nHello!\r\n\r\n* Type: bug fix \r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/12736\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212cc618912b45d36a33dc",
    "number": 12797,
    "body": "",
    "head_branch": "3.2.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12797 from sergeyklay/3.2.x\n\nFixed installing apcu"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212cc718912b45d36a33dd",
    "number": 12795,
    "body": "* Type: new feature\r\n* Link to issue: #10328, #10329, #2719\r\n\r\n```php\r\nuse Phalcon\\Mvc\\Model\\Manager;\r\n\r\n$di->set(\"modelsManager\", function () {\r\n    $modelsManager = new Manager();\r\n    $modelsManager->setModelPrefix(\"wp_\");\r\n\r\n    return $modelsManager;\r\n});\r\n\r\n$robots = new Robots();\r\necho $robots->getSource(); // wp_robots\r\n```\r\n\r\n**NOTE:** After that to override a model's source developers can only use:\r\n\r\n```php\r\npublic function initialize()\r\n{\r\n    $this->setSource('new_source');\r\n}\r\n```",
    "head_branch": "model-manager-prefix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12795 from sergeyklay/model-manager-prefix\n\nModel tables can now have prefixes"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212cc918912b45d36a33de",
    "number": 12793,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: In phalcon 3.1.0 there were added a change considered as a bugfix that is changing snapshot to current model data after save, some might consider it as not wanted change or maybe have some code which operates on old behavior with bugged thing and want to keep old behavior. This PR is adding this.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.2.x-snapshot-setup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12793 from Jurigag/3.2.x-snapshot-setup\n\nAdded option to disable snapshot update"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212cca18912b45d36a33df",
    "number": 12792,
    "body": "",
    "head_branch": "3.2.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12792 from sergeyklay/3.2.x\n\nUse stable Zephir Parser"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ccb18912b45d36a33e0",
    "number": 12790,
    "body": "",
    "head_branch": "3.2.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12790 from sergeyklay/3.2.x\n\nEnabled ViewTest::testCacheMethods"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ccc18912b45d36a33e1",
    "number": 12789,
    "body": "",
    "head_branch": "3.2.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12789 from sergeyklay/3.2.x\n\nDo not delete local cache [Travis Ci]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ccd18912b45d36a33e2",
    "number": 12788,
    "body": "\r\n* Type: new feature\r\n* Link to issue: #12098\r\n",
    "head_branch": "feature/annotations/apcu",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12788 from sergeyklay/feature/annotations/apcu\n\nAdded Phalcon\\Annotations\\Adapter\\Apcu"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212cce18912b45d36a33e3",
    "number": 12787,
    "body": "",
    "head_branch": "3.2.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12787 from sergeyklay/3.2.x\n\nCleanup"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ccf18912b45d36a33e4",
    "number": 12786,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature\r\n* Link to issue: #12098, #11934\r\n",
    "head_branch": "feature/cache/apcu",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12786 from sergeyklay/feature/cache/apcu\n\nAdded Phalcon\\Cache\\Backend\\Apcu"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212cd018912b45d36a33e5",
    "number": 12785,
    "body": "* Type: bug fix\r\n* Link to issue: #12668\r\n",
    "head_branch": "micro-response-send",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12785 from sergeyklay/micro-response-send\n\nFixed Micro::handle to prevent attemps to send response twice"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212cd118912b45d36a33e6",
    "number": 12784,
    "body": "* Type: new feature\r\n* Link to issue: #12517\r\n\r\n**Phalcon\\Di::loadFromYaml**\r\n\r\nLoads services from a yaml file.\r\n\r\n```php\r\n$di->loadFromYaml(\r\n    \"path/services.yaml\",\r\n    [\r\n        \"!approot\" => function ($value) {\r\n            return dirname(__DIR__) . $value;\r\n        }\r\n    ]\r\n);\r\n```\r\n\r\nAnd the services can be specified in the file as:\r\n\r\n```yml\r\nmyComponent:\r\n    className: \\Acme\\Components\\MyComponent\r\n    shared: true\r\n\r\ngroup:\r\n    className: \\Acme\\Group\r\n    arguments:\r\n        - type: service\r\n          name: myComponent\r\n\r\nuser:\r\n   className: \\Acme\\User\r\n```\r\n\r\n**Phalcon\\Di::loadFromPhp**\r\n\r\nLoads services from a php config file.\r\n\r\n```php\r\n$di->loadFromPhp(\"path/services.php\");\r\n```\r\n\r\nAnd the services can be specified in the file as:\r\n\r\n```php\r\nreturn [\r\n     'myComponent' => [\r\n         'className' => '\\Acme\\Components\\MyComponent',\r\n         'shared' => true,\r\n     ],\r\n     'group' => [\r\n         'className' => '\\Acme\\Group',\r\n         'arguments' => [\r\n             [\r\n                 'type' => 'service',\r\n                 'service' => 'myComponent',\r\n             ],\r\n         ],\r\n     ],\r\n     'user' => [\r\n         'className' => '\\Acme\\User',\r\n     ],\r\n];\r\n```",
    "head_branch": "feature/service-from-config",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12784 from sergeyklay/feature/service-from-config\n\nAdded Di::loadFromYaml and Di::loadFromPhp"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212cd218912b45d36a33e7",
    "number": 12783,
    "body": "* Type: new feature\r\n* Link to issue: #12543\r\n\r\n```php\r\nnamespace Acme;\r\n\r\nuse Phalcon\\DiInterface;\r\nuse Phalcon\\Breadcrumbs;\r\nuse Phalcon\\Di\\ServiceProviderInterface;\r\n\r\nclass SomeServiceProvider implements ServiceProviderInterface\r\n{\r\n    public function register(DiInterface $di)\r\n    {\r\n        $di->setShared('breadcrumbs', function () {\r\n            $breadcrumbs = new Breadcrumbs();\r\n            $breadcrumbs->setEventsManager($di->get('eventsManager'));\r\n            $breadcrumbs->setSeparator('');\r\n\r\n           return $breadcrumbs;\r\n        });\r\n    }\r\n}\r\n```\r\n",
    "head_branch": "feature/service-provider",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12783 from sergeyklay/feature/service-provider\n\nAdded service provider interface"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212cd318912b45d36a33e8",
    "number": 12782,
    "body": "\r\n* Type: bug fix\r\n* Link to issue: #12648\r\n",
    "head_branch": "3.2.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12782 from sergeyklay/3.2.x\n\nFixed params view scope for PHP 7"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212cd418912b45d36a33e9",
    "number": 12778,
    "body": "\r\n* Type: bug fix\r\n* Link to issue: #11819",
    "head_branch": "dispatcher-forward-when-handling",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12778 from sergeyklay/dispatcher-forward-when-handling\n\nTest for #11819 by using new Zephir"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212cd518912b45d36a33ea",
    "number": 12776,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: I already introduced factory loaders, this is other way to have output as array to pass it to `Phalcon\\Di::set()` as second parameter. Is returns array for complex service registration, so for example instead of:\r\n\r\n```php\r\n$di->set('db', Factory::load($config->database));\r\n```\r\n\r\nWhich will create adapter object here\r\n\r\nYou can use:\r\n\r\n```php\r\n$di->set('db', Factory::loadForDi($config->database));\r\n```\r\n\r\nWhich will create adapter object on `$di->get('db')`\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.2.x-factory-di",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12776 from Jurigag/3.2.x-factory-di\n\nFactory load for di"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212cd818912b45d36a33eb",
    "number": 12772,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nMethod to check if a relationship was loaded. So we can check it without invoking the lazy loading.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212cda18912b45d36a33ec",
    "number": 12771,
    "body": "",
    "head_branch": "merge-master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12771 from sergeyklay/merge-master\n\nMerge stable code base from master"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212cdb18912b45d36a33ed",
    "number": 12769,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nAdded HAVING methods andHaving(), orHaving(), betweenHaving(), notBetweenHaving(), inHaving(), notInHaving() to `Phalcon\\Mvc\\Model\\Query\\Builder`.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "builder-having",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12769 from michanismus/builder-having\n\nAmended Phalcon\\Mvc\\Model\\Query\\Builder"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212cdc18912b45d36a33ee",
    "number": 12768,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nI added some missing data types to `Phalcon\\Mvc\\Model\\MetaData\\Strategy\\Annotations`.\r\nI introduced three new named params:\r\n\r\nskip_on_insert=true/false\r\nskip_on_update=true/false\r\nallow_empty_string=true/false\r\n\r\nExample:\r\n\r\n```php\r\n    /**\r\n     * @Column(\r\n     *     type=\"string\",\r\n     *     nullable=true,\r\n     *     column=\"meta_title\",\r\n     *     skip_on_insert=false,\r\n     *     skip_on_update=false,\r\n     *     allow_empty_string=false\r\n     * )\r\n     */\r\n    protected $metaTitle;\r\n```\r\n\r\nI fixed a bug in `getColumnMaps`. Currently it is not possible to have a mixed definition of renamed fields. Example:\r\n\r\n```php\r\n    /**\r\n     * @Column(type=\"string\", nullable=true, column=\"meta_title\")\r\n     */\r\n    protected $metaTitle;\r\n\r\n    /**\r\n     * @Column(type=\"text\", nullable=true)\r\n     */\r\n    protected $meta_description;\r\n\r\n    /**\r\n     * @Column(type=\"text\", nullable=true, column=\"meta_author\")\r\n     */\r\n    protected $metaAuthor;\r\n```\r\nThe field `meta_description` would be ignored which will result in exceptions for various model actions (save/update/...).\r\n\r\nSecond bug I fixed is the column name for data type `integer`. At the moment it is impossible to define an integer field which is renamed as well. Field type definition uses wrong column name:\r\n\r\n```zephir\r\n    case \"integer\":\r\n        let fieldTypes[property] = Column::TYPE_INTEGER, // <- property instead of columnName\r\n            fieldBindTypes[columnName] = Column::BIND_PARAM_INT,\r\n            numericTyped[columnName] = true;\r\n        break;\r\n```\r\nWill result in an exeption while updating or creating a new record (unknown data type for ...).\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fix-annotations",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12768 from michanismus/fix-annotations\n\n3.2.x Update and Bugfix for `Phalcon\\Mvc\\Model\\MetaData\\Strategy\\Annotations`"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212cdd18912b45d36a33ef",
    "number": 12767,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/12766\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: fixes `_doLowInsert` to properly save snapshot when having public property with null value and having default value.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.1.x-12766",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12767 from Jurigag/3.1.x-12766\n\nFixes #12766"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212ce018912b45d36a33f0",
    "number": 12765,
    "body": "",
    "head_branch": "3.1.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12765 from phalcon/3.1.x\n\n3.1.2"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212ce118912b45d36a33f1",
    "number": 12762,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/12221\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nI added a `path` method to `Phalcon\\Config` to fetch values by using a dot separated path.\r\n\r\n```php\r\n\r\n$config = new \\Phalcon\\Config(\r\n   [\r\n        'phalcon' => [\r\n            'baseuri' => '/phalcon/'\r\n        ],\r\n        'models' => [\r\n            'metadata' => 'memory'\r\n        ],\r\n        'database' => [\r\n            'adapter'  => 'mysql',\r\n            'host'     => 'localhost',\r\n            'username' => 'user',\r\n            'password' => 'passwd',\r\n            'name'     => 'demo'\r\n        ],\r\n        'test' => [\r\n            'parent' => [\r\n                'property' => 1,\r\n                'property2' => 'yeah'\r\n            ],\r\n        ],\r\n   ]\r\n);\r\n\r\n$config->path('test.parent.property2'); // yeah\r\n$config->path('test.parent'); // Phalcon\\Config\r\n$config->path('test/parent/property3', 'no', '/'); // no\r\n\r\n\\Phalcon\\Config::setPathDelimiter('/');\r\n$config->path('test/parent/property2'); // yeah\r\n\r\n```",
    "head_branch": "3.2.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12762 from michanismus/3.2.x\n\n3.2.x Method `path` added to `Phalcon\\Config`"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212ce218912b45d36a33f2",
    "number": 12761,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/12221\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nI added a `path` method to `Phalcon\\Config` to fetch values by using a dot separated path.\r\n\r\n```php\r\n\r\n$config = new \\Phalcon\\Config(\r\n   [\r\n        'phalcon' => [\r\n            'baseuri' => '/phalcon/'\r\n        ],\r\n        'models' => [\r\n            'metadata' => 'memory'\r\n        ],\r\n        'database' => [\r\n            'adapter'  => 'mysql',\r\n            'host'     => 'localhost',\r\n            'username' => 'user',\r\n            'password' => 'passwd',\r\n            'name'     => 'demo'\r\n        ],\r\n        'test' => [\r\n            'parent' => [\r\n                'property' => 1,\r\n                'property2' => 'yeah'\r\n            ],\r\n        ],\r\n   ]\r\n);\r\n\r\n$config->path('test.parent.property2'); // yeah\r\n$config->path('test/parent/property3', 'no', '/'); // no\r\n```",
    "head_branch": "3.2.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ce318912b45d36a33f3",
    "number": 12760,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/12743\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: In version 3.1.0 we fixed long sitting bug that snapshot is not updated after save/create/refresh operation being made\r\n\r\n> Fixed Phalcon\\Mvc\\Model to create/refresh snapshot after create/update/refresh operation #11007, #11818, #11424\r\n\r\nSince 3.1.0 now it's happening, though in some cases people would specifically need to check if field was really changed(i call this updated in this case) after save/create, right now if someone has old code working on this bug it will no longer work. This PR is adding such ability by adding two new methods so by small change it can work as expected.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.2.x-model-hasupdated",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12760 from Jurigag/3.2.x-model-hasupdated\n\n3.2.x model hasupdated"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212ce418912b45d36a33f4",
    "number": 12759,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: removes php 7.1 from allowed failure\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.2.x-7.1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12759 from Jurigag/3.2.x-7.1\n\nRemove php 7.1 from allowed failures"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212ce518912b45d36a33f5",
    "number": 12757,
    "body": "Hello!\r\n\r\n* Type: documentation\r\n* Link to issue:\r\n\r\nSmall description of change:\r\n\r\nNow your open collective backers and sponsors can to appear directly on your README. \r\nsee how it'll look [here](https://github.com/apex/apex#backers)\r\n[More info](https://github.com/opencollective/opencollective/wiki/Github-banner)\r\nI noticed that you have a backers page, we normally add them to the readme, but feel free to move them around.  \r\nAlso add badges on top.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12757 from piamancini/patch-1\n\nAdd backers and sponsors from Open Collective"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ce618912b45d36a33f6",
    "number": 12756,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/12758\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: Right now router always iterate through all routes even when for example using router groups prefix it couldn't have to. This PR adds such possibility to first check prefix if handledUri starts with it, if not then it continues to next prefix group.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.2.x-router",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12756 from Jurigag/3.2.x-router\n\nTake advantage of prefix in router for faster handling"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212ce718912b45d36a33f7",
    "number": 12755,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: add deprecated keyword to methods.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.2.x-deprecated",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12755 from Jurigag/3.2.x-deprecated\n\n3.2.x deprecated"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212ce818912b45d36a33f8",
    "number": 12754,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: update 3.2.x branch version\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.2.x-version",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12754 from Jurigag/3.2.x-version\n\nUpdate version"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212ce918912b45d36a33f9",
    "number": 12753,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [ ] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.2.x-appveyor",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12753 from Jurigag/3.2.x-appveyor\n\nChange appveyor address"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ceb18912b45d36a33fa",
    "number": 12752,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [ ] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.1.x-appveyor",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12752 from Jurigag/3.1.x-appveyor\n\n3.1.x appveyor"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ced18912b45d36a33fb",
    "number": 12751,
    "body": "",
    "head_branch": "fix_windows_build",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12751 from phalcon/fix_windows_build\n\nFixed Windows build"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212cef18912b45d36a33fc",
    "number": 12750,
    "body": "",
    "head_branch": "3.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12750 from sergeyklay/3.1.x\n\nBumb version"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212cf118912b45d36a33fd",
    "number": 12749,
    "body": "",
    "head_branch": "3.1.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12749 from phalcon/3.1.x\n\n3.1.1"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212cf218912b45d36a33fe",
    "number": 12747,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: This removes php 7.1 from allowed failures to test php 7.1\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.1.x-7.1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12747 from Jurigag/3.1.x-7.1\n\nRemove php 7.1 from allowed failures"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212cf318912b45d36a33ff",
    "number": 12746,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: https://github.com/phalcon/cphalcon/pull/12733\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nWith this patch it's possible to attach a `beforeException` event to the Application.\r\nThe default behaviour is the same (throw exception) if not event listener is set.\r\nThanks\r\n\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212cf418912b45d36a3400",
    "number": 12741,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: currently `Phalcon\\Mvc\\Model::assign` is always using setters when it's not really necessary to always use it, just in most of apps setting properties could be enough but right now there is no way to do it. This is adding it by setting global/php ini option.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.2.x-model-assign",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12741 from Jurigag/3.2.x-model-assign\n\nAdded way to disable setters in model assign"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212cf518912b45d36a3401",
    "number": 12739,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/12742\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: when test case like in created tests there is warning happening about wrong type passed to array_merge in _doLowUpdate\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.1.x-snapshot-warning",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12739 from Jurigag/3.1.x-snapshot-warning\n\nFixed _doLowUpdate warning"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212cf618912b45d36a3402",
    "number": 12738,
    "body": "Hello!\r\n\r\n* Type: new feature \r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nAdd sanitize URL in Phalcon\\Filter\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.2.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12738 from zamronypj/3.2.x\n\nadd sanitizing URL"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212cf718912b45d36a3403",
    "number": 12737,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue:https://forum.phalconphp.com/discussion/15799/undefined-index-keepsnapshots-after-phalcon-upgrade-to-310\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR. Not testable really on travis\r\n\r\nSmall description of change: if someone had old resultsets existing in cache then on unserialize he would have warning about not existing index, this is fixing this.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.1.x-undefined-index",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12737 from Jurigag/3.1.x-undefined-index\n\nFix undefined index warning"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212cf818912b45d36a3404",
    "number": 12733,
    "body": "For multi-module applications it is possible to attach a beforeException event to the Application.\r\nThe default behaviour is the same (throw exception) if not event listener is set.\r\n\r\nHello!\r\n\r\n* Type: new feature\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212cf918912b45d36a3405",
    "number": 12731,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/zephir/issues/1255, https://github.com/phalcon/cphalcon/issues/12706\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [ ] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change: PHP doesn‘t support default array values\r\n\r\nThanks\r\n",
    "head_branch": "3.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12731 from sergeyklay/3.1.x\n\nPHP doesn't support default array values"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212cfa18912b45d36a3406",
    "number": 12729,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\nIn some systems, the extend  Imagick  can't call method  Imagick::getVersion(), but can be call as Imagick->getVersion()\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixed call Imagick::getVersion() (#12729)\n\n* Update imagick.zep\r\n\r\nImagick none-static method getVersion\r\n\r\n* update CHANGELOG.md\r\n\r\n* Update CHANGELOG.md [ci skip]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212cfc18912b45d36a3407",
    "number": 12727,
    "body": "",
    "head_branch": "3.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12727 from sergeyklay/3.1.x\n\nRegenerated build"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212cfd18912b45d36a3408",
    "number": 12726,
    "body": "Hello!\r\n\r\n* Type: bug fix \r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n fixed bug for phalcon/mvc/collection and phalcon/image/adapter/imagick\r\n\r\nThanks\r\n\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212cfe18912b45d36a3409",
    "number": 12724,
    "body": "This problem is not new, but still relevant!\r\n\r\nhttps://forum.phalconphp.com/discussion/397/intercepting-not-found-errors-in-multi-module-applications\r\n\r\nPlease correct this, because people can not assign different 404 pages for each individual module. As I understand it, the problem is that the modules load is terminated if an EXCEPTION_HANDLER_NOT_FOUND exception or EXCEPTION_ACTION_NOT_FOUND is thrown. Accordingly, the loading of the \"dispatcher\" dependency within the module is not performed and redirection to the necessary controller and action also.",
    "head_branch": "master",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212cff18912b45d36a340a",
    "number": 12723,
    "body": "This is just for testing php 7.1",
    "head_branch": "3.1.x-php7.1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d0018912b45d36a340b",
    "number": 12722,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: property had wrong type, in php 7.1 you can't use $this->property[] on non array accessible variable.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.1.x-tests-code-quality",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12722 from Jurigag/3.1.x-tests-code-quality\n\nCode quality for php 7.1"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d0218912b45d36a340c",
    "number": 12721,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [ ] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change: This is just only for testing purposes, this shouldn't really be merged\r\nThanks\r\n\r\n",
    "head_branch": "3.1.x-php7.1-dirty-hack",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d0318912b45d36a340d",
    "number": 12720,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/12648\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: This is fixing issue that view params are available in local scope, **it's only fixing this issue for php5 because in php7 `create_symbol_table();` is not implemented**\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.1.x.-view-params",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12720 from Jurigag/3.1.x.-view-params\n\nFixes view params scope for php5"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212d0418912b45d36a340e",
    "number": 12719,
    "body": "See #12715 ",
    "head_branch": "12715",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12719 from dreamsxin/12715\n\nFix bug #12715"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212d0518912b45d36a340f",
    "number": 12713,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/12669\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: This is fixing issue as well adding option to check if array of fields was changed in models with ability to check if all provided fields were changed.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.2.x-model-haschanged",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12713 from Jurigag/3.2.x-model-haschanged\n\n3.2.x Model hasChanged array"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212d0618912b45d36a3410",
    "number": 12712,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/12111\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: This is adding way to properly calculate pages and items when using having in builder.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.2.x-paginator-having",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12712 from Jurigag/3.2.x-paginator-having\n\n3.2.x paginator having"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212d0718912b45d36a3411",
    "number": 12708,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #12684\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [ ] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change: Fixed `Phalcon\\Loader::autoLoad` to prevent PHP warning\r\n\r\nThanks\r\n",
    "head_branch": "3.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12708 from sergeyklay/3.1.x\n\nFixed Phalcon\\Loader::autoLoad"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212d0818912b45d36a3412",
    "number": 12704,
    "body": "Reverts phalcon/cphalcon#12696",
    "head_branch": "revert-12696-3.1.x-validator-exception",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12704 from phalcon/revert-12696-3.1.x-validator-exception\n\nRevert \"Remove Useless Phalcon\\Validation\\Validator\\Exception\""
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212d0918912b45d36a3413",
    "number": 12698,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR. - Probably exisiting one will fail and i will need to fix them to correct one\r\n\r\nSmall description of change: When collection was persistent there were wrongly condition for it created. This is fixing it.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.1.x-uniqueness-collection",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12698 from Jurigag/3.1.x-uniqueness-collection\n\nFix uniqueness collection when persistent"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d0a18912b45d36a3414",
    "number": 12696,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n\r\nSmall description of change: remove not needed exception class\r\n\r\nThanks",
    "head_branch": "3.1.x-validator-exception",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12696 from Jurigag/3.1.x-validator-exception\n\nRemove Useless Phalcon\\Validation\\Validator\\Exception"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212d0b18912b45d36a3415",
    "number": 12694,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR\r\n\r\nSmall description of change: Dirty states wasn't changed when needed.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.1.x-collection-states",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12694 from Jurigag/3.1.x-collection-states\n\nUpdate collection dirtyStates"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212d0c18912b45d36a3416",
    "number": 12693,
    "body": "Hello!\r\n\r\n* Type: code quality \r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change: fix typo\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.1.x-binder-typo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12693 from Jurigag/3.1.x-binder-typo\n\n3.1.x binder typo [ci skip]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212d0d18912b45d36a3417",
    "number": 12692,
    "body": "",
    "head_branch": "merge-3.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12692 from sergeyklay/merge-3.1.x\n\nResolved conflicts for master with 3.1.x"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212d0e18912b45d36a3418",
    "number": 12691,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/12688\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: add check for not existing field in default values in order to remove notice.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.1.x-12688-issue",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12691 from Jurigag/3.1.x-12688-issue\n\nFixes #12688"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212d1118912b45d36a3419",
    "number": 12690,
    "body": "",
    "head_branch": "3.1.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12690 from phalcon/3.1.x\n\n3.1.0"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212d1318912b45d36a341a",
    "number": 12689,
    "body": "",
    "head_branch": "3.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12689 from sergeyklay/3.1.x\n\nRegenerated build"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212d1518912b45d36a341b",
    "number": 12686,
    "body": "Fixes https://github.com/phalcon/incubator/issues/663\r\n\r\nThe case-insensitive Class-Instantiation does only work when the Class is also a Zephir one. When it's a PHP Class (like Oracle Dialect now in Incubator) it won't be found if not correctly CamelCased\r\n\r\n",
    "head_branch": "lubberscorrado-patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d1618912b45d36a341c",
    "number": 12684,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nThis small alteration should fix this situation: https://forum.phalconphp.com/discussion/10339/strange-warning-probably-from-zephirfaststrreplace-or-something-\r\n\r\nIf you have two classes:\r\n* `My\\Class\\Foo\\Bar`\r\nand\r\n* `My\\Class\\Foo`\r\n\r\nWhen initializing `Foo()` the autoLoad will come to this line \r\n```zep\r\nlet fileName = substr(className, strlen(nsPrefix . ns));\r\n```\r\nat the moment where `className = \"My\\Class\\Foo\"` and `nsPrefix = \"My\\Class\\Foo\\Bar\"`\r\n\r\nAt this point (could be a Zephir bug) `fileName` is something that will make \r\n```zep\r\nlet fileName = str_replace(ns, ds, fileName);\r\n```\r\n throw the following warning (Invalid arguments supplied for `str_replace()`). Either `substr` is returning something other than an empy string or `str_replace` is not allowing an empy string either way testing if `fileName` has any value before \r\n```zep\r\nlet fileName = str_replace(ns, ds, fileName);\r\n```\r\nshould mitigate this warning.\r\n\r\nThanks\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d1718912b45d36a341d",
    "number": 12683,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue: no issue\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\nadd in function addResource() , test to know if the value of the resource is instanceof resourseInterface.\r\nadd in function addInherit() , test to know if the value of the role is instanceof roleInterface.\r\nThanks\r\n\r\n",
    "head_branch": "quality-code-acl-interface",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12683 from nicolas-wallerand/quality-code-acl-interface\n\nQuality code acl interface"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d1818912b45d36a341e",
    "number": 12681,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue: Partially related - https://github.com/phalcon/cphalcon/issues/12679\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: When i was adding Phalcon\\Validation support for Collection class i deprecated method which shouldn't be really deprecated cuz it has his own usage and it's needed. This PR is changing it and adding `@deprecated` annotation for proper classes.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.1.x-collection",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12681 from Jurigag/3.1.x-collection\n\n3.1.x collection"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d1918912b45d36a341f",
    "number": 12678,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/11007, https://github.com/phalcon/cphalcon/issues/11818, https://github.com/phalcon/cphalcon/issues/11424\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: This is adding setting snapshot to correct one when creating/updating model operation were succesfully made.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.1.x-model-snapshot-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12678 from Jurigag/3.1.x-model-snapshot-fix\n\nFix snapshot setting when create/update operation made"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212d1a18912b45d36a3420",
    "number": 12674,
    "body": "Hello!\r\n\r\n* Type: bug fix | code quality\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/12645\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: model validate wasn't setting code in model message got from validation message, now it does.\r\n\r\nAlso i changed test structure, now models with validation are moved to seperated namespace.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.1.x-model-code-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12674 from Jurigag/3.1.x-model-code-fix\n\n3.1.x model code fix"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212d1c18912b45d36a3421",
    "number": 12673,
    "body": "Hello!\r\n\r\nType: code quality\r\nLink to issue: https://github.com/phalcon/cphalcon/blob/3.0.x/phalcon/acl/adapter/memory.zep#L322\r\n\r\nIn raising this pull request, I confirm the following (please check boxes):\r\n\r\n- [x] I have read and understood the Contributing Guidelines?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\nAdd in function addResource() , test to know if the value of the resource is instanceof recourseInterface.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d1d18912b45d36a3422",
    "number": 12672,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue: https://github.com/phalcon/cphalcon/blob/master/phalcon/acl/adapter/memory.zep#L322\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\nAdd in function addResource() , test to know if the value of the resource is instanceof recourseInterface.\r\n\r\nThanks",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d1e18912b45d36a3423",
    "number": 12670,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/11001\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: This is adding factory loaders for all possible classes which have any adapters. So you can load adapters using config files for example etc.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.1.x-factory-loaders",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12670 from Jurigag/3.1.x-factory-loaders\n\nFactory loaders"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212d1f18912b45d36a3424",
    "number": 12668,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n\r\n**In raising this pull request, I confirm the following :**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nIt is not possible to return a string value from a mapped function for an HTTP Method, and then catch that returned value by using Micro::getReturnedValue() method inside handler on Micro::after($handler), its overriding my response.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d2018912b45d36a3425",
    "number": 12667,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n\r\n**In raising this pull request, I confirm the following :**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\nIt is not possible to return a string value from a mapped function for an HTTP Method, and then catch that returned value by using Micro::getReturnedValue() method inside handler on Micro::after($handler), its overriding my response.\r\nThanks\r\n\r\n",
    "head_branch": "FIX-Response-Already-Sent",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d2118912b45d36a3426",
    "number": 12665,
    "body": "",
    "head_branch": "3.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12665 from sergeyklay/3.1.x\n\nImproved Phalcon\\Cache\\Backend\\File::save"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212d2218912b45d36a3427",
    "number": 12664,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: #12098, #11934\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\n- Improved `Phalcon\\Cache\\Backend\\Apc` by introducing support of APCu\r\n- Improved `Phalcon\\Annotations\\Adapter\\Apc` by introducing support of APCu\r\n\r\nThanks\r\n",
    "head_branch": "feature/support/apcu",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d2318912b45d36a3428",
    "number": 12663,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12663 from niden/master\n\nUpdated backers file"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d2418912b45d36a3429",
    "number": 12662,
    "body": "In the documentation for addRole it says accessInherits can be a string or array. But that functionality is not implemented in addInherit.\r\n\r\nI added to bug fix branch as it doesn't break BC - even if it does allow array to be used (when they could) -- I assumed this would be okay since the docblock indicated arrays are ok. If not, I will redo on new branch.\r\n\r\nRelated to Issue #11361\r\n\r\nHello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d2518912b45d36a342a",
    "number": 12661,
    "body": "",
    "head_branch": "3.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12661 from sergeyklay/3.1.x\n\nMoved Column, Index and Reference tests to the common place"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212d2618912b45d36a342b",
    "number": 12660,
    "body": "",
    "head_branch": "3.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12660 from sergeyklay/3.1.x\n\nRefactored Sqlite Dialect test"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212d2718912b45d36a342c",
    "number": 12659,
    "body": "",
    "head_branch": "3.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12659 from sergeyklay/3.1.x\n\nRefactored Mysql Dialect test"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212d2818912b45d36a342d",
    "number": 12658,
    "body": "",
    "head_branch": "3.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12658 from sergeyklay/3.1.x\n\nUpdated Postgresql Dialect test"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212d2918912b45d36a342e",
    "number": 12656,
    "body": "",
    "head_branch": "3.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12656 from sergeyklay/3.1.x\n\nMoved test traits to the common place"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212d2a18912b45d36a342f",
    "number": 12655,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #12628\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: Fixed `Phalcon\\Mvc\\Model::getChangedFields` to correct detect changes from `NULL` to `0`\r\n\r\nThanks\r\n",
    "head_branch": "3.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12655 from sergeyklay/3.1.x\n\nFixed Model::getChangedFields"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212d2b18912b45d36a3430",
    "number": 12654,
    "body": "",
    "head_branch": "3.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12654 from sergeyklay/3.1.x\n\nCleaned model test"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212d2c18912b45d36a3431",
    "number": 12653,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #12647\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: Initialization steps in remove() have been added.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.1.x-bag-remove-bug",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12653 from sergeyklay/3.1.x-bag-remove-bug\n\nPhalcon\\Session\\Bag: add of initialization for remove()"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212d2d18912b45d36a3432",
    "number": 12652,
    "body": "",
    "head_branch": "3.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12652 from sergeyklay/3.1.x\n\nRefactored Phalcon\\Mvc\\Model\\Resultset\\Complex test"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212d2f18912b45d36a3433",
    "number": 12651,
    "body": "",
    "head_branch": "3.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12651 from sergeyklay/3.1.x\n\nRefactored Phalcon\\Mvc\\Model\\Resultset\\Simple test"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212d3018912b45d36a3434",
    "number": 12650,
    "body": "",
    "head_branch": "3.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12650 from sergeyklay/3.1.x\n\nRemoved no longer used and outdated proxies"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212d3118912b45d36a3435",
    "number": 12647,
    "body": "* Type: bug fix\r\n* Issue: when `Phalcon\\Session\\Bag` is restored by the session handler, the `_data` property results not initialized and `remove()` won't work properly.\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.  \r\n\r\nSmall description of change:  Initialization steps in `remove()` have been added.\r\n\r\nSteps to reproduce:\r\n\r\n```php\r\n// debug with reflection\r\n$reflectionClass = new \\ReflectionClass(get_class($this->bag));\r\n$_data = $reflectionClass->getProperty('_data');\r\n$_data->setAccessible(true);\r\n$_initialized = $reflectionClass->getProperty('_initialized');\r\n$_initialized->setAccessible(true);\r\n\r\n// create a Bag with one value\r\n$bag = new \\Phalcon\\Session\\Bag('fruit');\r\n$bag->set('apples', 10);\r\nvar_dump($bag->get('apples')); // int(10)\r\nvar_dump($_data->getValue($bag)); // array(1) { [\"apples\"]=> int(10) }\r\nvar_dump($_initialized->getValue($bag)); // bool(true)\r\n\r\n// save and cleanup\r\n$serializedBag = serialize($bag);\r\nunset($bag);\r\n\r\n// emulate restore in the same way it would be done\r\n// any PHP session handler, e.g.: `session.save_handler => redis => redis`\r\n$bag = unserialize($serializedBag);\r\n$_data->setValue($bag, NULL);\r\n$_initialized->setValue($bag, false);\r\n\r\n// remove attempt fails because `_data` is NULL\r\nvar_dump($bag->remove('apples')); // bool(false) // EXPECTED: bool(true)\r\nvar_dump($bag->get('apples')); // int(10) // EXPECTED: NULL\r\n\r\n// get performs _initialize under the hood, so now it works\r\nvar_dump($bag->remove('apples')); // bool(true)\r\nvar_dump($bag->get('apples')); // NULL\r\n```\r\n\r\nthis calls initialize also on `Bag::remove`.\r\n\r\nRun tests: `vagrant@phalcon:~/cphalcon$ vendor/bin/codecept run tests/unit/Session/BagTest`\r\n\r\nThanks",
    "head_branch": "3.1.x-bag-remove-bug",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d3418912b45d36a3436",
    "number": 12644,
    "body": "",
    "head_branch": "merge-from-3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge the 3.0.x branch (#12644)\n\n* Regenerated build (PHP7)\r\n\r\n* Regenerated build (PHP5)\r\n\r\n* Regenerated build (PHP5)\r\n\r\n* Regenerated build (PHP7)\r\n\r\n* Using latest Zephir [ci skip]\r\n\r\n* Bump dev version\r\n\r\n* Added a number (0) to be a label in a form field. Null, empty string or empty array will keep invalidating a label and using the value instead.\r\n\r\n* Update CONTRIBUTING.md [ci skip]\r\n\r\n* Include cipher aliases for \\Phalcon\\Crypt\r\n\r\nThe older version of Phalcon used aliases for cipher and now they are not available. They are easy to use and migration will be easier if they persist.\r\n\r\n* Test Alias cipher for \\Phalcon\\Crypt\r\n\r\n* Update Changelog\r\n\r\n* Change test in changelog\r\n\r\n* Allow other except fields than unique fields\r\n\r\n* Added backers file\r\n\r\n* Update tests CHANGELOG.md [ci skip]\r\n\r\nAdd TEST_MC_WEIGHT to export list\r\n\r\n* Fixed #12567 [ci skip]\r\n\r\n* Cleaned .gitignorei [ci skip]\r\n\r\n* Update Phalcon\\Mvc\\Model return ResultsetInterface (#12574)\r\n\r\n* Update Phalcon\\Mvc\\Model return ResultsetInterface\r\n\r\nResultsetInterface is not imported and causes problems when generating Stubs for IDE. It is generating @return type of Phalcon\\Mvc\\ResultsetInterface and not Phalcon\\Mvc\\Model\\ResultsetInterface\r\n\r\nI think it should be imported in order to easily find correct class\r\n\r\n* Update CHANGELOG.md\r\n\r\n* Updated backers file\r\n\r\n* Fixes #12573\r\n\r\n* Updated backers file\r\n\r\n* Update BACKERS.md with known links\r\n\r\n* Added mctekk and abits logos\r\n\r\n* Removing the images to ensure that they are refreshed with the next commit\r\n\r\n* Re-added the images for backers\r\n\r\n* Added pdffiller in the backers file\r\n\r\n* Added links to the BACKERS.md\r\n\r\n* Updated backers file\r\n\r\n* Removing the images to ensure that they are refreshed with the next commit\r\n\r\n* Re-added the images for backers\r\n\r\n* Added links to the BACKERS.md\r\n\r\n* Updated backers file\r\n\r\n* Updated backers file\r\n\r\n* Updated backers file\r\n\r\n* Updated backers file\r\n\r\n* Bump version\r\n\r\n* Tune up Travis build\r\n\r\n* Fixed ModelsManager tests\r\n\r\n* Tune up PHP_CodeSniffer\r\n\r\n* Tune up PHP_CodeSniffer\r\n\r\n* Tune up the tests\r\n\r\n* Updated CHANGELOG.md [ci skip]\r\n\r\n* Cleaned Gettext::query\r\n\r\n* Fixed Phalcon\\Validation\\Message\\Group::offsetUnset\r\n\r\n* Allow role and resource object in isAllowed\r\n\r\n* Updated backers file\r\n\r\n* Updated backers file\r\n\r\n* Updated backers file\r\n\r\n* Removing the images to ensure that they are refreshed with the next commit\r\n\r\n* Re-added the images for backers\r\n\r\n* Added links to the BACKERS.md\r\n\r\n* Updated Copyright [ci skip]\r\n\r\n* Updated dependencies\r\n\r\n* Regenerated build (PHP7)\r\n\r\n* Regenerated build (PHP5)\r\n\r\n* Using latest Zephir\r\n\r\n* Updated CHANGELOG.md [ci skip]\r\n\r\n* Restarted Travis build\r\n\r\n* Regenerated build [ci skip]\r\n\r\n* Regenerating build for php5 [ci skip]\r\n\r\n* Cleaned Phalcon\\Annotations\\AdapterInterface\r\n\r\n* Cleaned the Appveyor Build\r\n\r\n* Added Phalcon\\Validation for Phalcon\\Mvc\\Collection\r\n\r\n* install file refactoring, custom phpize & php-config paths allowed\r\n\r\n* install BINs fix\r\n\r\n* Rosolved conflicts [ci skip]\r\n\r\n* Removed unused variables\r\n\r\n* Amended Uniqueness Validator test\r\n\r\n* Port Uniquenss Validator changes from 3.0.x\r\n\r\n* Regenerated build (PHP7) [ci skip]\r\n\r\n* Regenerated build (PHP5) [ci skip]\r\n\r\n* Using latest Zephir [ci skip]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212d3718912b45d36a3437",
    "number": 12643,
    "body": "",
    "head_branch": "3.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12643 from phalcon/3.0.x\n\nRegenerated build [ci skip]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d3b18912b45d36a3438",
    "number": 12641,
    "body": "",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12641 from sergeyklay/3.0.x\n\nRegenerated build"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212d3c18912b45d36a3439",
    "number": 12640,
    "body": "",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12640 from sergeyklay/3.0.x\n\nUpdated dependencies"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d3d18912b45d36a343a",
    "number": 12639,
    "body": "",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12639 from sergeyklay/3.0.x\n\nUpdated Copyright"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212d3e18912b45d36a343b",
    "number": 12638,
    "body": "",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Updated Copyright [ci skip]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212d3f18912b45d36a343c",
    "number": 12637,
    "body": "",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12637 from sergeyklay/3.0.x\n\nUpdated BACKERS.md"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d4018912b45d36a343d",
    "number": 12634,
    "body": "PR #12631 for 3.0.x branch,",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12634 from DimazzzZ/3.0.x\n\nInstall file refactoring, custom phpize & php-config paths (3.0.x)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d4118912b45d36a343e",
    "number": 12632,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12632 from niden/master\n\nUpdated backers file"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d4218912b45d36a343f",
    "number": 12631,
    "body": "Hello. \r\n\r\nI've made small refactoring for `install` file. Previously it supported only `$PATH`'s binaries for `phpize` and `php-config`, but now users are able to set custom paths for them. It is very useful if you have more than one PHP instance and you want to compile Phalcon for each of them.\r\n\r\nFor example I've three different PHP versions in my Ubuntu and default one is 7.1. To compile Phalcon for 5.6 instance:\r\n\r\n`./install --phpize /usr/bin/phpize5.6 --php-config /usr/bin/php-config5.6`\r\n\r\nTo save backward compatibility I also added an `--arch` param (for 32bits & 64bits dirs).\r\n",
    "head_branch": "3.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12631 from DimazzzZ/3.1.x\n\nInstall file refactoring, custom phpize & php-config paths"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d4418912b45d36a3440",
    "number": 12630,
    "body": "when you use snapshots there is a bug with null fields. It says fields doesn't changed when value is changed from null to 0 or empty sting\r\n\r\nHello!\r\n\r\n* Type: bug fix\r\n* Link to issue:\r\nhttps://forum.phalconphp.com/discussion/15529/bug-regarding-getchangedfields-and-haschanged#C45969",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d4518912b45d36a3441",
    "number": 12629,
    "body": "CONSTRAINT must be unique\r\n\r\nHello!\r\n\r\n* Type: bug fix\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [ ] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nPostgresql in CONSTRAINT must specify a unique name for this CONSTRAINT, otherwise it leads to mistakes.\r\n> \"ERROR: SQLSTATE [42P07]: Duplicate table: 7 ERROR: relation\" PRIMARY \"already exists\"\r\n\r\nThanks",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d4618912b45d36a3442",
    "number": 12626,
    "body": "Hello!\r\n\r\n* Type: bug fix | documentation\r\n\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: allow `Phalcon\\Acl\\Role` and `Phalcon\\Acl\\Resource` objects in `Phalcon\\Acl\\Adapter\\Memory::isAllowed` to be used, also add correct `@param` docs to this method.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.0.x-acl-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12626 from Jurigag/3.0.x-acl-fix\n\nAllow role and resource object in isAllowed"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212d4718912b45d36a3443",
    "number": 12622,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #12455\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [X] I have checked that another pull request for this purpose does not exist.\r\n- [X] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\nFixed `Phalcon\\Validation\\Message\\Group::offsetUnset` to correct unsetting a message by index\r\n\r\nThanks\r\n",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12622 from sergeyklay/3.0.x\n\nFixed Phalcon\\Validation\\Message\\Group::offsetUnset"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212d4818912b45d36a3444",
    "number": 12621,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #12598, #12606\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nCleaned `Phalcon\\Translate\\Adapter\\Gettext::query` and removed ability to pass custom domain.\r\n\r\nThe `Phalcon\\Translate\\Adapter\\Gettext::query` must be compatible with `Phalcon\\Translate\\AdapterInterface::query`.\r\n\r\nThanks\r\n",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12621 from sergeyklay/3.0.x\n\nCleaned Gettext::query"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212d4918912b45d36a3445",
    "number": 12620,
    "body": "",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12620 from sergeyklay/3.0.x\n\nTune up the tests"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d4a18912b45d36a3446",
    "number": 12619,
    "body": "",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12619 from sergeyklay/3.0.x\n\nTune up PHP_CodeSniffer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d4b18912b45d36a3447",
    "number": 12618,
    "body": "\r\n\r\n",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12618 from sergeyklay/3.0.x\n\nFixed tests"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212d4c18912b45d36a3448",
    "number": 12617,
    "body": "",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12617 from sergeyklay/3.0.x\n\nUpdate BACKERS.md [ci skip]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d4e18912b45d36a3449",
    "number": 12616,
    "body": "Hello!\r\n\r\n* Type:  code quality\r\n* Link to issue: #12613\r\n\r\nrefactor the phalcon/config.zep for issue #12613\r\n\r\nThanks\r\n",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d4f18912b45d36a344a",
    "number": 12615,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n* Link to issue:  https://github.com/phalcon/cphalcon/issues/12613\r\n #12613\t\r\n\r\n\r\nSmall description of change:\r\nThe phalcon/config.zep has not fully implemented the ArrayAccess interface right now, so I refactor the phalcon/config.zep for fully implementing the interface!\r\n\r\nThanks\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d5018912b45d36a344b",
    "number": 12610,
    "body": "* Type: bug fix\r\n* Issue: when `Phalcon\\Session\\Bag` is restored by the session handler, the `_data` property results not initialized and `remove()` won't work properly.\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.  \r\n\r\nSmall description of change:  Initialization steps in `remove()` have been added.\r\n\r\nSteps to reproduce:\r\n\r\n       <?php\r\n       \r\n        // debug with reflection\r\n        $reflectionClass = new \\ReflectionClass(get_class($this->bag));\r\n        $_data = $reflectionClass->getProperty('_data');\r\n        $_data->setAccessible(true);\r\n        $_initialized = $reflectionClass->getProperty('_initialized');\r\n        $_initialized->setAccessible(true);\r\n\r\n        // create a Bag with one value\r\n        $bag = new \\Phalcon\\Session\\Bag('fruit');\r\n        $bag->set('apples', 10);\r\n        var_dump($bag->get('apples')); // int(10)\r\n        var_dump($_data->getValue($bag)); // array(1) { [\"apples\"]=> int(10) }\r\n        var_dump($_initialized->getValue($bag)); // bool(true)\r\n\r\n        // save and cleanup\r\n        $serializedBag = serialize($bag);\r\n        unset($bag);\r\n\r\n        // emulate restore in the same way it would be done\r\n        // any PHP session handler, e.g.: `session.save_handler => redis => redis`\r\n        $bag = unserialize($serializedBag);\r\n        $_data->setValue($bag, NULL);\r\n        $_initialized->setValue($bag, false);\r\n\r\n        // remove attempt fails because `_data` is NULL\r\n        var_dump($bag->remove('apples')); // bool(false) // EXPECTED: bool(true)\r\n        var_dump($bag->get('apples')); // int(10) // EXPECTED: NULL\r\n\r\n        // get performs _initialize under the hood, so now it works\r\n        var_dump($bag->remove('apples')); // bool(true)\r\n        var_dump($bag->get('apples')); // NULL\r\n\r\nthis calls initialize also on `Bag::remove`.\r\n\r\nRun tests: `vagrant@phalcon:~/cphalcon$ vendor/bin/codecept run tests/unit/Session/BagTest`\r\n\r\nThanks",
    "head_branch": "v3.0.3-bag-remove-bug",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d5118912b45d36a344c",
    "number": 12609,
    "body": "* Type: bug fix\r\n* Issue: when `Phalcon\\Session\\Bag` is restored by the session handler, the `remove` method results not initialized and `remove()` won't work properly.\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] ~I wrote some tests for this PR.~ There was no unit test coverage at all for `bag.zep`, see below \r\n\r\nSmall description of change:  Initialization steps in `remove()` have been added.\r\n\r\nSteps to reproduce:\r\n\r\n       <?php\r\n       \r\n        // debug with reflection\r\n        $reflectionClass = new \\ReflectionClass(get_class($this->bag));\r\n        $_data = $reflectionClass->getProperty('_data');\r\n        $_data->setAccessible(true);\r\n        $_initialized = $reflectionClass->getProperty('_initialized');\r\n        $_initialized->setAccessible(true);\r\n\r\n        // create a Bag with one value\r\n        $bag = new \\Phalcon\\Session\\Bag('fruit');\r\n        $bag->set('apples', 10);\r\n        var_dump($bag->get('apples')); // int(10)\r\n        var_dump($_data->getValue($bag)); // array(1) { [\"apples\"]=> int(10) }\r\n        var_dump($_initialized->getValue($bag)); // bool(true)\r\n\r\n        // save and cleanup\r\n        $serializedBag = serialize($bag);\r\n        unset($bag);\r\n\r\n        // emulate restore in the same way it would be done\r\n        // any PHP session handler, e.g.: `session.save_handler => redis => redis`\r\n        $bag = unserialize($serializedBag);\r\n        $_data->setValue($bag, NULL);\r\n        $_initialized->setValue($bag, false);\r\n\r\n        // remove attempt fails because `_data` is NULL\r\n        var_dump($bag->remove('apples')); // bool(false) // EXPECTED: bool(true)\r\n        var_dump($bag->get('apples')); // int(10) // EXPECTED: NULL\r\n\r\n        // get performs _initialize under the hood, so now it works\r\n        var_dump($bag->remove('apples')); // bool(true)\r\n        var_dump($bag->get('apples')); // NULL\r\n\r\nthis calls initialize also on `Bag::remove`.\r\n\r\nI don't know how cover this with Codeconception functional tests.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "v3.0.3-bag-remove-bug",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d5218912b45d36a344d",
    "number": 12606,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/12598\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\nFix https://github.com/phalcon/cphalcon/issues/12598\r\nRef https://github.com/phalcon/cphalcon/pull/12600\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d5318912b45d36a344e",
    "number": 12600,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/12598\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\nFix https://github.com/phalcon/cphalcon/issues/12598\r\n\r\nThanks\r\n\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d5418912b45d36a344f",
    "number": 12595,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12595 from niden/master\n\nUpdated backers file"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d5518912b45d36a3450",
    "number": 12592,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12592 from niden/master\n\nUpdated backers file"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d5618912b45d36a3451",
    "number": 12591,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/639\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: This change is adding assets versioning setting it either in resource or collection, resource version overrides collection version with option for automatic assets versioning using filemtime.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.1.x-assets-versioning",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d5718912b45d36a3452",
    "number": 12586,
    "body": "",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12586 from sergeyklay/3.0.x\n\nUpdated backers file"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d5818912b45d36a3453",
    "number": 12585,
    "body": "",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12585 from sergeyklay/3.0.x\n\nAmended backers"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d5918912b45d36a3454",
    "number": 12582,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [ ] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [ ] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12582 from niden/master\n\nAdded logos for backers"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d5a18912b45d36a3455",
    "number": 12581,
    "body": "Hello!\r\n\r\nSmall description of change: just adding some known links to backers.md\r\n\r\nCan you look @niden ?\r\n\r\n@garyrutland @dschissler do you want to link to your github profiles?\r\n\r\nThanks\r\n\r\n",
    "head_branch": "master-backer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12581 from Jurigag/master-backer\n\nUpdate BACKERS.md with known links"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d5b18912b45d36a3456",
    "number": 12580,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: https://github.com/composer/composer/blob/master/src/Composer/Autoload/ClassLoader.php#L302\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nComposer loader higher priority than Phalcon\\Loader in any use case. This feature able to get ahead of composer loader.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "loader_register_priority",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12580 from tugrul/loader_register_priority\n\n\\Phalcon\\Loader::register() class loader priority"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212d5c18912b45d36a3457",
    "number": 12579,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: change 3.1.x repo version\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.1.x-version",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12579 from Jurigag/3.1.x-version\n\nChange version"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212d5d18912b45d36a3458",
    "number": 12578,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature | code quality | documentation\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nThanks\r\n\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12578 from niden/master\n\nUpdated backers file"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d5e18912b45d36a3459",
    "number": 12576,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: this pr is adding Firewall component, way to protect routes against unauthorized roles to access certain routes. It's done using listener on dispatcher/micro on beforeExecute/afterBinding event.\r\n\r\nIn dispatcher you can either use Annotations or Acl based firewall. In micro there is only Acl based firewall. \r\n\r\nWould appreciate any comments etc.\r\n\r\nThis PR is commits/changes from other PRs etc stuff so don't bother them, i will rebase everything if all will be merged.\r\nThanks\r\n\r\nRelated:\r\nhttps://github.com/phalcon/cphalcon/issues/11389\r\nhttps://github.com/phalcon/cphalcon/issues/582",
    "head_branch": "3.1.x-firewall",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d5f18912b45d36a345a",
    "number": 12575,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/12573\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: this if fixing an issue by removing not needed line in addRole\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.0.x-acl-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12575 from Jurigag/3.0.x-acl-fix\n\nFixes #12573"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212d6118912b45d36a345b",
    "number": 12574,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nResultsetInterface is not imported and causes problems when generating Stubs for IDE. It is generating `@return` type of `Phalcon\\Mvc\\ResultsetInterface` and not `Phalcon\\Mvc\\Model\\ResultsetInterface`\r\n\r\nI think it should be imported in order to easily find the correct class.\r\n\r\nLet me know if I am missing something\r\n\r\nThanks\r\n\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update Phalcon\\Mvc\\Model return ResultsetInterface (#12574)\n\n* Update Phalcon\\Mvc\\Model return ResultsetInterface\r\n\r\nResultsetInterface is not imported and causes problems when generating Stubs for IDE. It is generating @return type of Phalcon\\Mvc\\ResultsetInterface and not Phalcon\\Mvc\\Model\\ResultsetInterface\r\n\r\nI think it should be imported in order to easily find correct class\r\n\r\n* Update CHANGELOG.md"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d6218912b45d36a345c",
    "number": 12572,
    "body": "Most Git users understand that such files with local settings must be declared as ignorable in version control. However, it’s a common practice to add them to `.gitignore` on the project level, thus polluting the project with information about files it specifically _shouldn’t_ know about.\r\n\r\nWell, the proper solution to local settings is the **global gitignore file**. It has the same syntax as the project `.gitignore` file, and is applied to every project. It’s your responsibility to populate the global gitignore with all kinds of config files needed for your personal tools.\r\n\r\nThis leaves the per-project gitignore file for ignoring files relevant to the project, such as a build or temp directory.\r\n\r\nGitHub has a [nice guide on ignoring files](https://help.github.com/articles/ignoring-files/#create-a-global-gitignore) by using a global gitignore.\r\n",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12572 from sergeyklay/3.0.x\n\nCleaned .gitignorei [ci skip]"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d6318912b45d36a345d",
    "number": 12571,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #12567\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nAdd link to github profiles\r\n\r\n",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12571 from sergeyklay/3.0.x\n\nAdd link to github profiles [ci skip]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d6418912b45d36a345e",
    "number": 12570,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: info about classes for which where binding where done was created only when cache for binder was enabled which was causing internal cache not working properly. This is fixing this problem by removing not needed condition.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.1.x-model-binder-cache",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12570 from Jurigag/3.1.x-model-binder-cache\n\nFixes Binder internal cache"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212d6518912b45d36a345f",
    "number": 12569,
    "body": "Hello!\r\n\r\n* Type: documentation\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: Add TEST_MC_WEIGHT to export list\r\n\r\nThanks\r\n\r\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12569 from Jurigag/patch-3\n\nUpdate tests CHANGELOG.md [ci skip]"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d6618912b45d36a3460",
    "number": 12568,
    "body": "Add TEST_MC_WEIGHT to export list\r\n\r\nHello!\r\n\r\n* Type: code quality | documentation\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: add missing export environment variable\r\n\r\nThanks\r\n\r\nShould i add same for 3.0.x or it should aim to 3.0.x branch? @sergeyklay \r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d6718912b45d36a3461",
    "number": 12565,
    "body": "Hello!\r\n\r\n* Type: documentation\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nAdded BACKERS.md\r\n\r\nThanks\r\n\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12565 from niden/master\n\nAdded backers file"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d6818912b45d36a3462",
    "number": 12564,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: [#12409](https://github.com/phalcon/cphalcon/pull/12409)\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [X] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [X] I have checked that another pull request for this purpose does not exist.\r\n- [X] I wrote some tests for this PR.\r\n\r\n**Adds transaction to model::find() so you can query inserted data before comiting**\r\n\r\n***Main usecases***\r\n * complex insert processes (you may need to check the state inside of the transaction or add a model to a transaction)\r\n * unitesting -> start a transaction at the beginning and rollback at the end so you don't polute your test database\r\n\r\n***Minor change*** \r\n * DRY for selectWrite and selectRead transaction inside of query.zep\r\n * Adds general unitests for query.zep\r\n",
    "head_branch": "3.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d6918912b45d36a3463",
    "number": 12561,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: this pr is adding Firewall component, way to protect routes against unauthorized roles to access certain routes. It's done using listener on dispatcher/micro on beforeExecute/afterBinding event.\r\n\r\nIn dispatcher you can either use Annotations or Acl based firewall. In micro there is only Acl based firewall. \r\n\r\nWould appreciate any comments etc.\r\n\r\nThis PR is commits/changes from other PRs etc stuff so don't bother them, i will rebase everything if all will be merged.\r\nThanks\r\n\r\nRelated:\r\nhttps://github.com/phalcon/cphalcon/issues/11389\r\nhttps://github.com/phalcon/cphalcon/issues/582",
    "head_branch": "3.1.x-firewall",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d6a18912b45d36a3464",
    "number": 12559,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: with introducing `Phalcon\\Mvc\\Model\\Binder` which will change values in dispatcher loop parameters sometimes you would like to have ability to get original values for example caching related stuff. This PR is adding way to return original values before changing them to models.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.1.x-model-binder",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12559 from Jurigag/3.1.x-model-binder\n\nAdded ability to get original values from model binder"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212d6e18912b45d36a3465",
    "number": 12555,
    "body": "",
    "head_branch": "3.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12555 from phalcon/3.0.x\n\n3.0.4"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212d6f18912b45d36a3466",
    "number": 12551,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: allow having other except fields than fields used for Uniqueness. Previously you could use only field for which uniqueness check was done in except option.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.0.x-uniqueness-except",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12551 from Jurigag/3.0.x-uniqueness-except\n\nAllow other except fields than unique fields"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212d7018912b45d36a3467",
    "number": 12547,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: added methods for getting active key and active function for latest acquired access in acl.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.1.x-acl-active-key-function",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d7118912b45d36a3468",
    "number": 12543,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nWith this interface it is possible to separate services by context, improving the organization of applications that have many dependencies in Container.\r\ne.g:\r\n```php\r\nuse Phalcon\\Di\\ServiceProviderInterface;\r\nuse Phalcon\\DiInterface;\r\n\r\nclass SomeComponent\r\n{\r\n}\r\n\r\nclass SomeServiceProvider implements ServiceProviderInterface\r\n{\r\n    public function register(DiInterface $di)\r\n    {\r\n        $di['foo'] = function () {\r\n            return 'bar';\r\n        };\r\n\r\n        $di['fooAction'] = function () {\r\n            return new SomeComponent();\r\n        };\r\n    }\r\n}\r\n\r\n$di = new \\Phalcon\\Di\\FactoryDefault();\r\n$di->register(new SomeServiceProvider());\r\n\r\n$di->get('fooAction');\r\n```\r\n\r\nThanks\r\n\r\n",
    "head_branch": "feature/service-provider-for-di",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d7218912b45d36a3469",
    "number": 12541,
    "body": "Hello!\r\n\r\n* Type: code quality\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: add `@deprecated` to deprecated method.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.1.x-model-binding",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12541 from Jurigag/3.1.x-model-binding\n\nAdd @deprecated to Dispatcher::setModelBinding()"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d7318912b45d36a346a",
    "number": 12539,
    "body": "Hello!\r\n\r\n* Type: bug fix | code quality\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\nThe old versions supported aliases of ciphers and now it doesn't. They are easier to use and migration will be easier for those who use this class. \r\n\r\nThanks\r\n\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12539 from ibpavlov/patch-1\n\nAdd Aliases for ciphers in Phalcon\\Crypt"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d7518912b45d36a346b",
    "number": 12538,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nWith this interface it is possible to separate services by context, improving the organization of applications have many dependencies in Container:\r\n\r\ne.g:\r\n\r\n```php\r\nuse Phalcon\\Di\\ServiceProviderInterface;\r\nuse Phalcon\\DiInterface;\r\n\r\nclass SomeComponent\r\n{\r\n}\r\n\r\nclass SomeServiceProvider implements ServiceProviderInterface\r\n{\r\n    public function register(DiInterface $di)\r\n    {\r\n        $di['foo'] = function () {\r\n            return 'bar';\r\n        };\r\n\r\n        $di['fooAction'] = function () {\r\n            return new SomeComponent();\r\n        };\r\n    }\r\n}\r\n\r\n$di = new \\Phalcon\\Di\\FactoryDefault();\r\n$di->register(new SomeServiceProvider());\r\n\r\n$di->get('fooAction');\r\n```\r\nThanks\r\n",
    "head_branch": "feature/php7-di-service-provider",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d7618912b45d36a346c",
    "number": 12535,
    "body": "Hello!\r\nI've found that passing parameter category to method setLocale() has no influence for that. Because there are string \"LC_ALL\".\r\n\r\n* Type: bug fix\r\n* Link to issue:\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change: I changed string \"LC_ALL\" to parameter category.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d7718912b45d36a346d",
    "number": 12529,
    "body": "",
    "head_branch": "merge-3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12529 from sergeyklay/merge-3.0.x\n\nMerge 3.0.x"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212d7818912b45d36a346e",
    "number": 12528,
    "body": "Hello!\r\n\r\n* Type: documentation\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\nJust a small documentation update\r\n\r\n",
    "head_branch": "3.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added code sample in db/index.zip docblock for API documentation (#12528) [ci skip]\n\n* Added code samepl in docblock for db/index\r\n\r\n* end whiteline"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d7918912b45d36a346f",
    "number": 12527,
    "body": "",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12527 from sergeyklay/3.0.x\n\nReturn back `phalcon/zephir` as dev dependency by using Composer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d7a18912b45d36a3470",
    "number": 12526,
    "body": "",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12526 from sergeyklay/3.0.x\n\nRefactored Events Tests"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212d7b18912b45d36a3471",
    "number": 12524,
    "body": "The previous test was always wrong and never passed",
    "head_branch": "weakref",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12524 from sergeyklay/weakref\n\nRemoved weakref-related test"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212d7d18912b45d36a3472",
    "number": 12523,
    "body": "This patch adds the capability to use the data type smallint, which is part of the SQL standard and is well supported by major DBMS. This data type uses 2 bytes instead of 4 bytes for type int, which will save memory if you don't need large numeric values.\r\n",
    "head_branch": "3.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d7e18912b45d36a3473",
    "number": 12519,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/12106\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nAdded the possibility to specify in allowEmpty option what we consider 'empty'. Fixed the behaviour so only in case it returns true we move to the next validation. Added recursivity in the preChecking method so we don't duplicate code. Updated changelog.\r\n\r\n- allowEmtpy = true (this means that everything that evaluates to empty is ok)\r\n- allowEmpty = ['', null] (this means that empty only means empty string and null, false and 0 won't evaluate as empty).\r\n\r\nI've added a pull request with this change. The benefits are:\r\n- Backwards compatible.\r\n- Flexible, we can specify 'unknown', 'empty' or -1 as empty values in case we are using a shitty api.\r\n\r\nAn improvement also added in the pull request is that only if the allowEmpty validation is true the validation will stop there, in case of false it will continue with the next validators.\r\n\r\nThanks\r\n\r\n<!-- Reviewable:start -->\r\n---\r\nThis change is [<img src=\"https://reviewable.io/review_button.svg\" height=\"34\" align=\"absmiddle\" alt=\"Reviewable\"/>](https://reviewable.io/reviews/phalcon/cphalcon/12519)\r\n<!-- Reviewable:end -->\r\n",
    "head_branch": "feature/allow-empty-values",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12519 from gguridi/feature/allow-empty-values\n\nallowEmpty can be populated with the list of what we consider 'empty'. The validation only will stop if the empty validation returns true."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212d7f18912b45d36a3474",
    "number": 12518,
    "body": "Hello!\r\n\r\n* Type: bug fix | new feature\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/12392\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nSecurity::checkToken functionality doesn't use the regenerated session but uses the one that was set at the beginning if it existed. This will prevent that if we call getToken and the session token is regenerated, the checkToken method will fail because the session token has changed.\r\n\r\nI've also cast to string the userToken coming from the request::getPost method as it could be null and I was receiving an E_WARNING when passing it to hash_equals.\r\n\r\nThanks\n\n<!-- Reviewable:start -->\n---\nThis change is [<img src=\"https://reviewable.io/review_button.svg\" height=\"34\" align=\"absmiddle\" alt=\"Reviewable\"/>](https://reviewable.io/reviews/phalcon/cphalcon/12518)\n<!-- Reviewable:end -->\n",
    "head_branch": "feature/security-retaining-session-for-checking",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d8018912b45d36a3475",
    "number": 12517,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nDependency injection is the container of any instance declaration in the system. Theoretically any instance should be obtained through dependency injection, which means that in a normal website/application we can end up with lots of classes set in the di as a services. The current system to add services into the dependency injection object require the di itself, setting them one by one.\r\n\r\nThis pull request is to enable the load of the services from yaml or php files. This is not a big feature and won't solve any real problem, but I just though it would make things more readable as we can have one file with the declaration of the dependencies without having to call di methods, parameters, etc.\r\n\r\nThis just improves readability, nothing else.\r\n\r\nThanks\n\n<!-- Reviewable:start -->\n---\nThis change is [<img src=\"https://reviewable.io/review_button.svg\" height=\"34\" align=\"absmiddle\" alt=\"Reviewable\"/>](https://reviewable.io/reviews/phalcon/cphalcon/12517)\n<!-- Reviewable:end -->\n",
    "head_branch": "feature/di-file-loaders",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d8118912b45d36a3476",
    "number": 12515,
    "body": "…or empty array will keep invalidating a label and using the value instead.\r\n\r\nHello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/12148\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\nCan't associate a 0 with the element label. Tried to use empty label as condition because zephir documentation says that ‘Empty’ means the expression is null, is an empty string or an empty array. But that's not true and '0'also validates as false. So the only way to add '0' as a label is by explicitly check if it's numeric as condition.\r\n\r\nThanks\n\n<!-- Reviewable:start -->\n---\nThis change is [<img src=\"https://reviewable.io/review_button.svg\" height=\"34\" align=\"absmiddle\" alt=\"Reviewable\"/>](https://reviewable.io/reviews/phalcon/cphalcon/12515)\n<!-- Reviewable:end -->\n",
    "head_branch": "bugfix/label-render-0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12515 from gguridi/bugfix/label-render-0\n\nAdded a number (0) to be a label in a form field. Null, empty string …"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d8218912b45d36a3477",
    "number": 12514,
    "body": "…ion groups.\r\n\r\nHello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/12455\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nApplying the solution suggested in this issue (https://github.com/phalcon/cphalcon/issues/12455), checking that it's working as expected.\r\n\r\nThanks\n\n<!-- Reviewable:start -->\n---\nThis change is [<img src=\"https://reviewable.io/review_button.svg\" height=\"34\" align=\"absmiddle\" alt=\"Reviewable\"/>](https://reviewable.io/reviews/phalcon/cphalcon/12514)\n<!-- Reviewable:end -->\n",
    "head_branch": "bugfix/message-group-iteration",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d8318912b45d36a3478",
    "number": 12513,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue:\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n- This is a generic ip validator for general purposes. The MVC models have one but it couldn't be used for generic forms so I've created if with the unit tests associated.\r\n\r\nThanks\n\n<!-- Reviewable:start -->\n---\nThis change is [<img src=\"https://reviewable.io/review_button.svg\" height=\"34\" align=\"absmiddle\" alt=\"Reviewable\"/>](https://reviewable.io/reviews/phalcon/cphalcon/12513)\n<!-- Reviewable:end -->\n",
    "head_branch": "feature/ip-validator",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d8418912b45d36a3479",
    "number": 12511,
    "body": "Reverts phalcon/cphalcon#12510",
    "head_branch": "revert-12510-3.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12511 from phalcon/revert-12510-3.0.x\n\nRevert \"Fixed #12509 imagick getversion no longer static\""
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d8518912b45d36a347a",
    "number": 12510,
    "body": "Fixed #12509 imagick getversion no longer static\r\n\r\n",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12510 from tembem/3.0.x\n\nFixed #12509 imagick getversion no longer static"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d8618912b45d36a347b",
    "number": 12507,
    "body": "as comment.\r\nif the field is  \" not null default '' \" in database.\r\nmodel.zep:2091 while return null.\r\n\r\nThanks\r\n\r\n",
    "head_branch": "bugfix/model-default-value",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12507 from zGaron/bugfix/model-default-value\n\nFix model field defaults to an empty string and is determined to be null"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212d8818912b45d36a347c",
    "number": 12504,
    "body": "",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12504 from sergeyklay/3.0.x\n\nRegenerated build"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212d8b18912b45d36a347d",
    "number": 12503,
    "body": "",
    "head_branch": "3.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12503 from phalcon/3.0.x\n\n3.0.3"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212d8c18912b45d36a347e",
    "number": 12502,
    "body": "* Type: bug fix\r\n* Link to issue: #12327\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nFixed `Phalcon\\Cache\\Backend\\Redis::save` to allow save data termlessly:\r\n\r\n```php\r\n// Set expiration to 10 second\r\n$cache->save(\"my-key\", $data, 10);\r\n\r\n// Save data termlessly\r\n$cache->save(\"my-key\", $data, -1);\r\n\r\n// Save data termlessly\r\n$cache->save(\"my-key\", $data, -1789789789);\r\n\r\n// Save data termlessly\r\n$cache->save(\"my-key\", $data, 0);\r\n```\r\n\r\n",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12502 from sergeyklay/3.0.x\n\nFixed Cache\\Backend\\Redis::save"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212d8d18912b45d36a347f",
    "number": 12501,
    "body": "",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12501 from sergeyklay/3.0.x\n\nImproved build on Travis CI"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d8e18912b45d36a3480",
    "number": 12500,
    "body": "",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12500 from sergeyklay/3.0.x\n\nImproved getting Imagick version"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d8f18912b45d36a3481",
    "number": 12499,
    "body": "* Type: bug fix\r\n* Link to issue: mkoppanen/imagick#180\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nFixed building extension for ImageMagick 7 \r\n",
    "head_branch": "fixes/imagemagick",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12499 from sergeyklay/fixes/imagemagick\n\nFixed building for ImageMagick 7"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d9018912b45d36a3482",
    "number": 12498,
    "body": "",
    "head_branch": "fixes/appveyor/imagemagick",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12498 from sergeyklay/fixes/appveyor/imagemagick\n\nAdded ImageMagick support for Appveyor"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d9118912b45d36a3483",
    "number": 12497,
    "body": "",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12497 from sergeyklay/3.0.x\n\nFixed test namespace"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d9218912b45d36a3484",
    "number": 12496,
    "body": "* Type: tests\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12496 from sergeyklay/3.0.x\n\nRefactored validation tests"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212d9318912b45d36a3485",
    "number": 12495,
    "body": "* Type: tests\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\n",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12495 from sergeyklay/3.0.x\n\nRefactored Memcached tests"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212d9418912b45d36a3486",
    "number": 12494,
    "body": "* Type: code quality\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\n",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12494 from sergeyklay/3.0.x\n\nCleaned Cache Backends"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212d9618912b45d36a3487",
    "number": 12493,
    "body": "Hello!\r\n\r\nwhen image magick version is 7 compilation fails \r\n\r\nhttps://github.com/mkoppanen/imagick/issues/180",
    "head_branch": "imagemagick-7-support",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d9718912b45d36a3488",
    "number": 12492,
    "body": "\r\n* Type: bug fix\r\n* Link to issue: #11024\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nFixed `Phalcon\\Cache\\Backend\\Libmemcached::queryKeys` to correct query the existing cached keys\r\n\r\n",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12492 from sergeyklay/3.0.x\n\nFixed Libmemcached::queryKeys"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212d9818912b45d36a3489",
    "number": 12491,
    "body": "Hello!\r\n\r\n* Type: test\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: Added `Libmemcached` test module to test `memcached` along with `mecache` without conflicts. \r\n\r\nThanks\r\n\r\n",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12491 from sergeyklay/3.0.x\n\nAdded Libmemcached test module"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212d9918912b45d36a348a",
    "number": 12490,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: https://github.com/joaquimserafim/base64-url/blob/master/index.js\r\n\r\nSmall description of change:\r\n\r\nAdded autopadding feature for following methods\r\n\r\n- `Phalcon\\Crypt::encryptBase64`\r\n- `Phalcon\\Crypt::decryptBase64`\r\n\r\nEqual character is unsafe for url and base64 use for padding this character. base64 able to automatically padded by character length. I inspired this feature from above link.\r\n\r\nThanks,\r\nTuğrul Topuz\r\n\r\n",
    "head_branch": "crypt_base64_padding",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12490 from tugrul/crypt_base64_padding\n\nPhalcon\\Crypt safe base64 padding"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212d9a18912b45d36a348b",
    "number": 12488,
    "body": "",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Cleaned cache adapters (#12488)\n\n* Cleaned tests\r\n\r\n* Cleaned cache adapters"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212d9b18912b45d36a348c",
    "number": 12487,
    "body": "* Type: test\r\n* Link to issue: #12316\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\n",
    "head_branch": "fixes/tag/check-field",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12487 from sergeyklay/fixes/tag/check-field\n\nChecked Phalcon\\Tag::_inputFieldChecked"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212d9c18912b45d36a348d",
    "number": 12486,
    "body": "* Type: bug fix\r\n* Link to issue: #12419\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nFixed `Phalcon\\Mvc\\Model\\Criteria::limit` and `Phalcon\\Mvc\\Model\\Query\\Builder::limit` to work with `limit` and `offset` properly\r\n\r\n",
    "head_branch": "fixes/orm/limit",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12486 from sergeyklay/fixes/orm/limit\n\nFixed Criteria::limit and Builder::limit"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212d9d18912b45d36a348e",
    "number": 12484,
    "body": "",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12484 from sergeyklay/3.0.x\n\nMinor Request::getMethod improvements"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212d9e18912b45d36a348f",
    "number": 12483,
    "body": "* Type: bug fix\r\n* Link to issue: #12478\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nFixed `Phalcon\\Http\\Request::getMethod` to handle `X-HTTP-Method-Override` header correctly.",
    "head_branch": "fixes/request/method",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12483 from sergeyklay/fixes/request/method\n\nFixed Request::getMethod to handle X-HTTP-Method-Override"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212d9f18912b45d36a3490",
    "number": 12481,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #12480\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: Now the request object handles auth headers correctly\r\n",
    "head_branch": "fixes/request/headers",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12481 from sergeyklay/fixes/request/headers\n\nNow the request object handles auth headers correctly"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212da018912b45d36a3491",
    "number": 12479,
    "body": "* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/12316\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n- Checking type also in the checkbox value as value != null was validating as true event when value was 0.\r\n\r\nThanks\n\n<!-- Reviewable:start -->\n---\nThis change is [<img src=\"https://reviewable.io/review_button.svg\" height=\"34\" align=\"absmiddle\" alt=\"Reviewable\"/>](https://reviewable.io/reviews/phalcon/cphalcon/12479)\n<!-- Reviewable:end -->\n",
    "head_branch": "bugfix/checkbox-allow-0-value",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212da318912b45d36a3492",
    "number": 12471,
    "body": "Rebased upon request https://github.com/phalcon/cphalcon/pull/12293 \r\n@sergeyklay Looked at the other added Column types but didn't see any changed test. What test do you want me to change?\r\n",
    "head_branch": "type_time",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212da418912b45d36a3493",
    "number": 12470,
    "body": "",
    "head_branch": "annotattions-cleanup",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12470 from phalcon/annotattions-cleanup\n\nCleaned Phalcon\\Annotations\\AdapterInterface"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212da518912b45d36a3494",
    "number": 12469,
    "body": "",
    "head_branch": "merge_30",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12469 from sergeyklay/merge_30\n\nMerge 3.0.x branch"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212da618912b45d36a3495",
    "number": 12468,
    "body": "* Type: code quality\r\n* Link to issue: N/A\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nRefactored the bind model code to make it more readable.",
    "head_branch": "bind-model",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Refactored Bind Model code. (#12468)\n\n* Refactored Bound Model code.\r\n\r\n* Removed usage of call_user_func()."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212da718912b45d36a3496",
    "number": 12467,
    "body": "",
    "head_branch": "fixed_tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12467 from sergeyklay/fixed_tests\n\nFixed tests"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212da918912b45d36a3497",
    "number": 12466,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issues (this will fix all of the below issues):\r\nhttps://github.com/phalcon/cphalcon/issues/12465\r\nhttps://github.com/phalcon/cphalcon/issues/11500\r\nhttps://github.com/phalcon/cphalcon/issues/11135\r\nhttps://github.com/phalcon/cphalcon/issues/3167\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\nsetValidation for form is not work correctly as I explained at #12465.\r\nElements messages doesn't set if custom validation fails.\r\n\r\nThanks\r\n",
    "head_branch": "validation-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Form validation some fixes (#12466)\n\n* fix form isValid method\r\n\r\n* fix zephir syntax erros\r\n\r\n* fix iterator - fix getMessageFor - unused getMessages byItemName\r\n\r\n* changelog + add unit tests\r\n\r\n* add test validation messages equals to form message\r\n\r\n* prevent exception in getMessagesFor\r\n\r\n* add test getMessagesFor for non existing element"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212daa18912b45d36a3498",
    "number": 12464,
    "body": "Hello!\r\n\r\n* Type: new feature\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/12238\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nThanks\r\n\r\n\r\n",
    "head_branch": "3.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[NFR] [3.1.x] Tag prepend & append title feature (#12464)\n\n* prepend & append title feature\r\n\r\n* Update tag.zep\r\n\r\n* Update tag.zep\r\n\r\n* Update TagTitleTest.php\r\n\r\n* Update TagTitleTest.php\r\n\r\n* update changelog\r\n\r\nWill update documentation when all its fine\r\n\r\n* Update TagTitleTest.php\r\n\r\n* fix\r\n\r\n* Fix\r\n\r\n* Try to fix appveyor.yml\r\n\r\n* Yes, i make a tab :("
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212dab18912b45d36a3499",
    "number": 12458,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: no issue\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change: when was fixing saving manual saving models to cache i didn't checked modelsCache. Now it should work fine.\r\n\r\nThanks\r\n\r\n\r\n",
    "head_branch": "3.0.x-resultset-cache",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12458 from Jurigag/3.0.x-resultset-cache\n\nFix modelsCache snapshot"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212dac18912b45d36a349a",
    "number": 12454,
    "body": "There is a duplication in validate method.",
    "head_branch": "duplicate-code-in-validation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12454 from mbrostami/duplicate-code-in-validation\n\nRemove duplicated code"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212dad18912b45d36a349b",
    "number": 12453,
    "body": "Removing duplicated code in validate method.",
    "head_branch": "duplicate-code",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212dae18912b45d36a349c",
    "number": 12452,
    "body": "* Type: new feature\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\n## Small description of change:\r\n\r\n**What:**\r\nAdds the possibility to create a response handler, that will handle the\r\nresponse instead of the default hard coded micro handler.\r\n\r\n**Why:**\r\nBefore the reponse format had to be coded into every route.\r\nNow is it possible to create a custom rosponse handler, that will format\r\nthe data in custom created function.\r\n\r\n**Changes to phalcon/mvc/micro.zep**\r\n* Added **protected** class variable **_responseHandler**\r\n_The custom response handler_\r\n\r\n* Added **public** function **response** \r\n_Appends a response handler_\r\n\r\n* Change to **public** function  **handle** \r\n_Check if a response handler has been appended._\r\n_If **yes**, run the response handler._\r\n_If **no**, run the same code as before this PR._\r\n\r\n## Unit test\r\nAdds a response handler, and check if it has been called.\r\n\r\n## How to use\r\n```php\r\n$app->setResponseHandler(function () use ($app) {\r\n\r\n    // Gets the client response, that has been returned from executed route\r\n    $return = $app->getReturnedValue();\r\n\r\n    // Put controller return array item data\r\n    $return = array('data' => $return);\r\n\r\n    // Set reponse Content-Type to json\r\n    header('Content-Type: application/json');\r\n\r\n    // Print json response string\r\n    echo json_encode($return);\r\n});\r\n```\r\n",
    "head_branch": "3.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212db018912b45d36a349d",
    "number": 12451,
    "body": "* Type: new feature\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\n**Small description of change:**\r\n\r\n**What:**\r\nAdds the possibility to create a response handler, that will handle the\r\nresponse instead of the default hard coded micro handler.\r\n\r\n**Why:**\r\nBefore the reponse format had to be coded into every route.\r\nNow is it possible to create a custom rosponse handler, that will format\r\nthe data in custom created function.\r\n\r\n**Changes to phalcon/mvc/micro.zep**\r\n* Added **protected** class variable **_responseHandler**\r\n_The custom response handler_\r\n\r\n* Added **public** function **response** \r\n_Appends a response handler_\r\n\r\n* Change to **public** function  **handle** \r\n_Check if a response handler has been appended._\r\n_If **yes**, run the response handler._\r\n_If **no**, run the same code as before this PR._\r\n\r\n\r\n**How to use**\r\n```php\r\n$app->response(function () use ($app) {\r\n\r\n    // Gets the client response, that has been returned from executed route\r\n    $return = $app->getReturnedValue();\r\n\r\n    // Put controller return array item data\r\n    $return = array('data' => $return);\r\n\r\n    // Set reponse Content-Type to json\r\n    header('Content-Type: application/json');\r\n\r\n    // Print json response string\r\n    echo json_encode($return);\r\n});\r\n```\r\n",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212db118912b45d36a349e",
    "number": 12450,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #12418\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change: Fixed `Phalcon\\Security::checkToken` to prevent possible timing attack.\r\n\r\nThanks\r\n\r\n\r\n",
    "head_branch": "security_check_token",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12450 from sergeyklay/security_check_token\n\nFixed Phalcon\\Security::checkToken"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212db318912b45d36a349f",
    "number": 12449,
    "body": "",
    "head_branch": "test-build",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12449 from phalcon/test-build\n\nFixed tests"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212db418912b45d36a34a0",
    "number": 12448,
    "body": "Refs: https://github.com/phalcon/cphalcon/issues/12418",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12448 from sergeyklay/3.0.x\n\nUsing latest Zephir"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212db518912b45d36a34a1",
    "number": 12447,
    "body": "",
    "head_branch": "cleaned-form-manager",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12447 from phalcon/cleaned-form-manager\n\nCleaned form manager"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212db718912b45d36a34a2",
    "number": 12445,
    "body": "Hello!\r\n\r\n* Type:  new feature\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n- [x] Extensive Uniqueness tests\r\n\r\nSmall description of change: This add option to use `Phalcon\\Validation` for `Phalcon\\Mvc\\Collection` while keeping BC for old syntax. Refs #12376\r\n\r\nThanks\r\n\r\n\r\n",
    "head_branch": "3.1.x-collection-validation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12445 from Jurigag/3.1.x-collection-validation\n\n[WIP] Added Phalcon\\Validation for Phalcon\\Mvc\\Collection"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212db818912b45d36a34a3",
    "number": 12442,
    "body": "* Type: code quality\r\n\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSoftDelete and Timestampable implemented the interface directly whilst the abstract Behavior class didn't. Now, the abstract class implements the interface and SoftDelete and Timestampable implicitly inherit it.",
    "head_branch": "collection-behavior-interface",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12442 from SidRoberts/collection-behavior-interface\n\nCollection behaviors now implement the interface properly"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212db918912b45d36a34a4",
    "number": 12441,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #12434\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nFixed `Phalcon\\Cache\\Backend\\Redis::exists` to correct check if cache key exists for empty value in the Redis database\r\n\r\nThanks\r\n\r\n\r\n",
    "head_branch": "fixed_redis_cache_backend",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12441 from sergeyklay/fixed_redis_cache_backend\n\nFixed Phalcon\\Cache\\Backend\\Redis::exists"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212dba18912b45d36a34a5",
    "number": 12440,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: #12437\r\n\r\n**In raising this pull request, I confirm the following:**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [x] I wrote some tests for this PR.\r\n\r\nSmall description of change:\r\n\r\nFixed `Phalcon\\Cache\\Backend\\Redis::get`, `Phalcon\\Cache\\Frontend\\Data::afterRetrieve` to allow get empty strings from the Redis database.\r\n\r\nRefs: https://github.com/phpredis/phpredis#get\r\n\r\nThanks\r\n\r\n",
    "head_branch": "fixed_redis_cache_backend",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixed redis cache backend (#12440)\n\n* Added env helper\r\n\r\n* Fixed Redis::get and Data::afterRetrieve\r\n\r\n`redis::get` returns string or bool: If key didn't exist, FALSE is returned.\r\nOtherwise, the value related to this key is returned."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212dbc18912b45d36a34a6",
    "number": 12439,
    "body": "",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Bump dev version (#12439)\n\n* Bump dev version\r\n\r\n* Regenerated build (PHP5)\r\n\r\n* Using latest Zephir (PHP5) [ci skip]\r\n\r\n* Regenerated build (PHP7)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212dbd18912b45d36a34a7",
    "number": 12438,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/12437\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change: When you put a key with empty value in redis cache backend, get method returns false for that key.\r\n\r\nThanks\r\n\r\n\r\nWhen there is a key with value of empty string (\"\"), get method MUST return empty string (\"\"), but it didn't.",
    "head_branch": "redis-cache-get",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212dbf18912b45d36a34a8",
    "number": 12436,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/12434\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change: When you put a key with empty value in redis cache backend, the exists method returns false for that key.\r\n\r\nThanks\r\n\r\n\r\nWhen there is a key with value of empty string (\"\"), exists method MUST return true, it didn't.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212dc018912b45d36a34a9",
    "number": 12435,
    "body": "Hello!\r\n\r\n* Type: bug fix\r\n* Link to issue: https://github.com/phalcon/cphalcon/issues/12434\r\n\r\n**In raising this pull request, I confirm the following (please check boxes):**\r\n\r\n- [x] I have read and understood the [Contributing Guidelines](https://github.com/phalcon/cphalcon/blob/master/CONTRIBUTING.md)?\r\n- [x] I have checked that another pull request for this purpose does not exist.\r\n- [ ] I wrote some tests for this PR.\r\n\r\nSmall description of change: When you put a key with empty value in redis cache backend, the exists method returns false for that key.\r\n\r\nThanks\r\n\r\n\r\nWhen there is a key with value of empty string (\"\"), exists method MUST return true, it didn't.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212dc118912b45d36a34aa",
    "number": 12433,
    "body": "",
    "head_branch": "3.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12433 from phalcon/3.0.x\n\nUsing latest Zephir (PHP5) [ci skip]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212dc318912b45d36a34ab",
    "number": 12432,
    "body": "",
    "head_branch": "3.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12432 from phalcon/3.0.x\n\nRegenerated build (PHP5)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212dc618912b45d36a34ac",
    "number": 12431,
    "body": "",
    "head_branch": "3.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12431 from phalcon/3.0.x\n\nRegenerated build (PHP7)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212dc818912b45d36a34ad",
    "number": 12430,
    "body": "",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12430 from sergeyklay/3.0.x\n\nRegenerated build (PHP7)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212dc918912b45d36a34ae",
    "number": 12429,
    "body": "By default _elements value isn't defined that can cause errors.\r\nFor example:\r\n```\r\n<?php\r\n\r\nuse Phalcon\\Forms\\Form;\r\n\r\nclass MyForm extends Form\r\n{\r\n    public function initialize()\r\n    {\r\n        \r\n    }\r\n}\r\n\r\n$form = new MyForm();\r\n\r\nforeach ($form as $element) {\r\n    //...\r\n}\r\n```\r\nThere will be an error in the Phalcon\\Forms\\Form::rewind method: Warning: array_values() expects parameter 1 to be array, null given.\r\nMy patch will correct it.\r\n\r\n",
    "head_branch": "Studentsov-patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixed call functions to null variable in Phalcon\\Forms\\Form (#12429)\n\n* Update form.zep\r\n\r\n_elements is now an empty array by default\r\n\r\n* Update FormTest.php\r\n\r\nAdded test to check the implementation of the Iterator interface\r\n\r\n* Update CHANGELOG.md\r\n\r\nFixed implementation of Iterator interface in a Phalcon\\Forms\\Form"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212dcd18912b45d36a34af",
    "number": 12427,
    "body": "",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12427 from sergeyklay/3.0.x\n\nRegenerated build"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212dce18912b45d36a34b0",
    "number": 12426,
    "body": "",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12426 from sergeyklay/3.0.x\n\nImproved build tools"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212dcf18912b45d36a34b1",
    "number": 12425,
    "body": "",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12425 from sergeyklay/3.0.x\n\nImproved Travis build"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212dd118912b45d36a34b2",
    "number": 12423,
    "body": "",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12423 from sergeyklay/3.0.x\n\nFixed typos and misspelling"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212dd218912b45d36a34b3",
    "number": 12422,
    "body": "- [x] Make sure that the PR passes in Travis CI to make the process more efficient.\r\n- [x] Only use tabs for indentation.\r\n- [x] if needed, rebase to the proper branch before submitting your pull request.\r\n      If it doesn't merge cleanly with master you may be asked to rebase your changes.\r\n- [x] Don't put submodule updates in your pull request unless they are to landed commits.\r\n- [ ] Add tests relevant to the fixed bug or new feature. See our testing guide for\r\n      more information.\r\n- [x] Phalcon 2 is written in Zephir, please do not submit commits that modify C generated\r\n      files directly or those whose functionality/fixes are implemented in the C\r\n      programming language\r\n- [x] Remove any change to ext/kernel / *.zep.c / *.zep.h files before submitting the PR\r\n\r\n\r\nThere (maybe) is the PHP core issue, not Phalcon. And I rewrite the array_merge_recursive like here,\r\n[http://php.net/manual/en/function.array-merge-recursive.php#96201](http://php.net/manual/en/function.array-merge-recursive.php#96201)\r\n\r\nUse `Phalcon\\Config\\Adapter\\Ini`, If I have ini file like,\r\n\r\n```\r\n[step]\r\nstep1.1 = A\r\nstep1.2 = B\r\nstep1.3 = C\r\n```\r\n\r\nOutput will be,\r\n\r\n```\r\narray(1) {\r\n  [\"step\"]=>\r\n  array(1) {\r\n    [\"step1\"]=>\r\n    array(2) {\r\n      [1]=>\r\n      string(1) \"B\"\r\n      [2]=>\r\n      string(1) \"C\"\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nThe 'A' will missing, but If,\r\n\r\n```\r\n[step]\r\nstep1.5 = X\r\nstep1.1 = A\r\nstep1.2 = B\r\nstep1.3 = C\r\n```\r\n\r\nOutput will be,\r\n\r\n```\r\narray(1) {\r\n  [\"step\"]=>\r\n  array(1) {\r\n    [\"step1\"]=>\r\n    array(2) {\r\n      [5]=>\r\n      string(1) \"X\"\r\n      [1]=>\r\n      string(1) \"A\"\r\n      [2]=>\r\n      string(1) \"B\"\r\n      [3]=>\r\n      string(1) \"C\"\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nThis issue is PHP's array_merge_recursive (maybe), so I rewrite an new function to do this in `ini.zep` and output correct what we want.\r\n\r\nThere is ini file,\r\n\r\n```\r\n[qq]\r\nstep1.1 = A\r\nstep1.2 = B\r\nstep1.3 = G\r\nstep2.1 = A\r\nstep2.2 = B\r\nstep2.3 = C\r\nstep12[3] = AA\r\nstep12[4] = BB\r\nstep12[5] = CC\r\nstep5.3 = AAA\r\nstep5.4 = BBBB\r\nstep5.1 = GGGG\r\nstep5.2 = TTTT\r\n```\r\n\r\nAnd output will be,\r\n\r\n```\r\nobject(Phalcon\\Config\\Adapter\\Ini)#1 (1) {\r\n  [\"qq\"]=>\r\n  object(Phalcon\\Config)#2 (4) {\r\n    [\"step1\"]=>\r\n    object(Phalcon\\Config)#3 (3) {\r\n      [\"1\"]=>\r\n      string(1) \"A\"\r\n      [\"2\"]=>\r\n      string(1) \"B\"\r\n      [\"3\"]=>\r\n      string(1) \"G\"\r\n    }\r\n    [\"step2\"]=>\r\n    object(Phalcon\\Config)#4 (3) {\r\n      [\"1\"]=>\r\n      string(1) \"A\"\r\n      [\"2\"]=>\r\n      string(1) \"B\"\r\n      [\"3\"]=>\r\n      string(1) \"C\"\r\n    }\r\n    [\"step12\"]=>\r\n    object(Phalcon\\Config)#5 (3) {\r\n      [\"3\"]=>\r\n      string(2) \"AA\"\r\n      [\"4\"]=>\r\n      string(2) \"BB\"\r\n      [\"5\"]=>\r\n      string(2) \"CC\"\r\n    }\r\n    [\"step5\"]=>\r\n    object(Phalcon\\Config)#6 (4) {\r\n      [\"3\"]=>\r\n      string(3) \"AAA\"\r\n      [\"4\"]=>\r\n      string(4) \"BBBB\"\r\n      [\"1\"]=>\r\n      string(4) \"GGGG\"\r\n      [\"2\"]=>\r\n      string(4) \"TTTT\"\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nThanks",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212dd318912b45d36a34b4",
    "number": 12414,
    "body": "Before, the `_modelVisbility` property wasn't actually used.",
    "head_branch": "model-manager-isvisiblemodelproperty",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12414 from SidRoberts/model-manager-isvisiblemodelproperty\n\nModelManager::isVisibleModelProperty() now caches model properties properly"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212dd418912b45d36a34b5",
    "number": 12413,
    "body": "- [x] Make sure that the PR passes in Travis CI to make the process more efficient.\r\n- [x] Only use tabs for indentation.\r\n- [x] if needed, rebase to the proper branch before submitting your pull request.\r\n      If it doesn't merge cleanly with master you may be asked to rebase your changes.\r\n- [x] Don't put submodule updates in your pull request unless they are to landed commits.\r\n- [x] Add tests relevant to the fixed bug or new feature. See our testing guide for\r\n      more information.\r\n- [x] Phalcon 2 is written in Zephir, please do not submit commits that modify C generated\r\n      files directly or those whose functionality/fixes are implemented in the C\r\n      programming language\r\n- [x] Remove any change to ext/kernel / *.zep.c / *.zep.h files before submitting the PR\r\n\r\n\r\n",
    "head_branch": "3.1.x-afterBinding",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12413 from Jurigag/3.1.x-afterBinding\n\nafterBinding event and middleware"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212dd518912b45d36a34b6",
    "number": 12412,
    "body": "Thank you for wanting to contribute to Phalcon.\r\n\r\nBefore you submit a Pull Request, please bear in mind that PRs must be made on a\r\nversion branch (eg. `3.0.x`). `master` marks the latest stable release so PRs\r\ntargeting `master` will be **rejected**.\r\n\r\nPlease also check the following points are being met:\r\n\r\n- [x] Make sure that the PR passes in Travis CI to make the process more efficient.\r\n- [x] Only use tabs for indentation.\r\n- [x] if needed, rebase to the proper branch before submitting your pull request.\r\n      If it doesn't merge cleanly with master you may be asked to rebase your changes.\r\n- [x] Don't put submodule updates in your pull request unless they are to landed commits.\r\n- [x] Add tests relevant to the fixed bug or new feature. See our testing guide for\r\n      more information.\r\n- [x] Phalcon 2 is written in Zephir, please do not submit commits that modify C generated\r\n      files directly or those whose functionality/fixes are implemented in the C\r\n      programming language\r\n- [x] Remove any change to ext/kernel / *.zep.c / *.zep.h files before submitting the PR\r\n\r\n\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212dd618912b45d36a34b7",
    "number": 12411,
    "body": "",
    "head_branch": "db-column-schemaname",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212dd818912b45d36a34b8",
    "number": 12410,
    "body": "Fixes #12408",
    "head_branch": "fix-12408",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12410 from SidRoberts/fix-12408\n\nEscaping DB tables is now done solely by DB dialects"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212dd918912b45d36a34b9",
    "number": 12409,
    "body": "Thank you for wanting to contribute to Phalcon.\r\n\r\nBefore you submit a Pull Request, please bear in mind that PRs must be made on a\r\nversion branch (eg. `3.0.x`). `master` marks the latest stable release so PRs\r\ntargeting `master` will be **rejected**.\r\n\r\nPlease also check the following points are being met:\r\n\r\n- [x] Make sure that the PR passes in Travis CI to make the process more efficient.\r\n- [x] Only use tabs for indentation.\r\n- [x] if needed, rebase to the proper branch before submitting your pull request.\r\n      If it doesn't merge cleanly with master you may be asked to rebase your changes.\r\n- [x] Don't put submodule updates in your pull request unless they are to landed commits.\r\n- [x] Add tests relevant to the fixed bug or new feature. See our testing guide for\r\n      more information.\r\n- [x] Phalcon 2 is written in Zephir, please do not submit commits that modify C generated\r\n      files directly or those whose functionality/fixes are implemented in the C\r\n      programming language\r\n- [x] Remove any change to ext/kernel / *.zep.c / *.zep.h files before submitting the PR\r\n\r\n\r\nso unitests can be executed inside one transaction",
    "head_branch": "3.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212dda18912b45d36a34ba",
    "number": 12407,
    "body": "declare _frontendOptions",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ddb18912b45d36a34bb",
    "number": 12406,
    "body": "declare _frontendOptions",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ddc18912b45d36a34bc",
    "number": 12402,
    "body": "Construct not save frontendOptions and getLifetime It is always 1",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12402 from dred86/patch-1\n\nUpdate msgpack.zep"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212ddd18912b45d36a34bd",
    "number": 12401,
    "body": "Refs: https://github.com/phalcon/cphalcon/pull/11495, https://github.com/phalcon/cphalcon/pull/11357, https://github.com/phalcon/cphalcon/pull/11380, https://github.com/phalcon/cphalcon/pull/12287",
    "head_branch": "implements-interface",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12401 from SidRoberts/implements-interface\n\nFixed interface inheritance"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212dde18912b45d36a34be",
    "number": 12391,
    "body": "Reverts phalcon/cphalcon#12386\r\n\r\n@elburgl69 \r\nWell as I suspected, you are broke the 3.0.x branch\r\n\r\n* PHP 5.5.x https://travis-ci.org/phanbook/phanbook/jobs/172789425\r\n* PHP 5.6.x https://travis-ci.org/phanbook/phanbook/jobs/172789427\r\n* PHP 7.0.x https://travis-ci.org/phanbook/phanbook/jobs/172789430\r\n\r\nI'll rollback these changes. Because they at least broke backward compatibility. Please double check your changes and cover it by tests.",
    "head_branch": "revert-12386-3.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12391 from phalcon/revert-12386-3.0.x\n\nRevert \"Fix for issue #12370\""
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212de018912b45d36a34bf",
    "number": 12389,
    "body": "The passed prefix should not be compared to the filename directly, it should be parsed into filename, just like it did in save/get/delete\r\n\r\n(cherry picked from commit b45d6b4ded6ffb84967c044933f9850385c0b9b8)",
    "head_branch": "3.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix query keys method with prefix in file cache (#12389)\n\nThe passed prefix should not be compared to the filename directly, it should be parsed into filename, just like it did in save/get/delete\r\n\r\n(cherry picked from commit b45d6b4ded6ffb84967c044933f9850385c0b9b8)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212de118912b45d36a34c0",
    "number": 12388,
    "body": "The passed prefix should not be compared to the filename directly, it should be parsed into filename, just like it did in save/get/delete",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12388 from phwoolcon/3.0.x\n\n[3.0.x] Fix query keys method with prefix in file cache"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212de218912b45d36a34c1",
    "number": 12387,
    "body": "The passed prefix should not be compared to the filename directly, it should be parsed into filename, just like it did in save/get/delete",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212de318912b45d36a34c2",
    "number": 12386,
    "body": "Fixed issue #12370",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix for issue #12370 (#12386)\n\n* Fix for issue #12370\r\n\r\n* Update CHANGELOG.md\r\n\r\n* Update CHANGELOG.md"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212de518912b45d36a34c3",
    "number": 12384,
    "body": "In addition commented out a obsoleet if statement.",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212de618912b45d36a34c4",
    "number": 12383,
    "body": "cleaned up version of PR https://github.com/phalcon/cphalcon/pull/12374",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12383 from arielallon/3.0.x\n\nfixing verbiage in the docblocks of some methods"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212de718912b45d36a34c5",
    "number": 12382,
    "body": "",
    "head_branch": "v4-parameter-return",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12382 from SidRoberts/v4-parameter-return\n\n[4.0.0] Strengthened parameter/return types"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212de818912b45d36a34c6",
    "number": 12381,
    "body": "",
    "head_branch": "v4-debug-dump",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12381 from SidRoberts/v4-debug-dump\n\nCorrected parameter types in Debug\\Dump"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212de918912b45d36a34c7",
    "number": 12380,
    "body": "",
    "head_branch": "v4-application-handle",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[4.0.0] MVC Application and Router now must have a URI to process (#12380)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212dea18912b45d36a34c8",
    "number": 12379,
    "body": "",
    "head_branch": "v4-tag-static",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212deb18912b45d36a34c9",
    "number": 12378,
    "body": "Refs: #12908",
    "head_branch": "v4-response-premature-send",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[4.0.0] Response headers and cookies are no longer prematurely sent (#12378)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212dec18912b45d36a34ca",
    "number": 12377,
    "body": "Refs: https://github.com/phalcon/cphalcon/issues/12098",
    "head_branch": "v4-deprecate",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12377 from SidRoberts/v4-deprecate\n\n[4.0.0] Removed deprecated methods"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212ded18912b45d36a34cb",
    "number": 12376,
    "body": "Refs: https://github.com/phalcon/cphalcon/issues/12098",
    "head_branch": "v4-collection-validation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Collections now use the Validation component."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212dee18912b45d36a34cc",
    "number": 12375,
    "body": "Taking this as an example:\n\n``` bash\nphp cli.php greeting morning Sid Roberts\n```\n\nBefore:\n\n``` php\nclass GreetingTask extends \\Phalcon\\Cli\\Task\n{\n    public function morningAction($params)\n    {\n        echo \"Good morning \" . $params[0] . \" \" . $params[1];\n    }\n}\n```\n\nNow:\n\n``` php\nclass GreetingTask extends \\Phalcon\\Cli\\Task\n{\n    public function morningAction($firstName, $lastName)\n    {\n        echo \"Good morning \" . $firstName . \" \" . $lastName;\n    }\n}\n```\n\nThis, of course, makes `Dispatcher::callActionMethod()` redundant.\n",
    "head_branch": "v4-task-params",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212def18912b45d36a34cd",
    "number": 12374,
    "body": "",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212df018912b45d36a34ce",
    "number": 12373,
    "body": "I've purposely left `truncateTable()` out of DialectInterface to maintain BC.\n",
    "head_branch": "db-truncate-table",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12373 from SidRoberts/db-truncate-table\n\nAdded the ability to truncate DB tables"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212df218912b45d36a34cf",
    "number": 12372,
    "body": "",
    "head_branch": "refactor",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12372 from SidRoberts/refactor\n\nSlight refactor"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212df318912b45d36a34d0",
    "number": 12371,
    "body": "See: https://github.com/Codeception/Codeception/pull/3610\n",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12371 from sergeyklay/3.0.x\n\nUsed Codeception Apc module"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212df418912b45d36a34d1",
    "number": 12369,
    "body": "tests/_bootstrap.php has been restructured slightly but its mostly php-cs-fixer with a few manual corrections.\n\ntests/integration and tests/unit are completely PSR2. tests/_data is largely compliant - existing errors are mostly relating to the lack of namespaces.\n",
    "head_branch": "tests-psr2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "tests/ is now PSR2 (#12369)\n\n* tests/ is now PSR2.\r\n\r\n* tests/integration and tests/unit are now checked for PSR2 compliancy in Travis."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212df518912b45d36a34d2",
    "number": 12368,
    "body": "- [x] Make sure that the PR passes in Travis CI to make the process more efficient.\n- [x] Only use tabs for indentation.\n- [x] if needed, rebase to the proper branch before submitting your pull request.\n    If it doesn't merge cleanly with master you may be asked to rebase your changes.\n- [x] Don't put submodule updates in your pull request unless they are to landed commits.\n- [x] Add tests relevant to the fixed bug or new feature. See our testing guide for\n    more information.\n- [x] Phalcon 2 is written in Zephir, please do not submit commits that modify C generated\n    files directly or those whose functionality/fixes are implemented in the C\n    programming language\n- [x] Remove any change to ext/kernel / *.zep.c / *.zep.h files before submitting the PR\n",
    "head_branch": "3.1.x-callback-validator",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added Phalcon\\Validation\\Validator\\Callback (#12368)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212df618912b45d36a34d3",
    "number": 12367,
    "body": "It's not perfect but it should at least make a difference.\n",
    "head_branch": "long-lines",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Shortened long lines. (#12367)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212df818912b45d36a34d4",
    "number": 12366,
    "body": "",
    "head_branch": "acl-funcaccess-refactor",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12366 from SidRoberts/acl-funcaccess-refactor\n\nRefactored ACL funcAccess"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212df918912b45d36a34d5",
    "number": 12363,
    "body": "",
    "head_branch": "unit-test-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Moved some more unit tests to Codeception (#12363)\n\n* Moved Collections Serialize unit tests to Codeception.\r\n\r\n* Moved Collections Events unit tests to Codeception.\r\n\r\n* Moved Micro Middleware unit tests to Codeception.\r\n\r\n* Fixed namespace.\r\n\r\n* Moved some Validation unit tests to Codeception.\r\n\r\n* Moved View Cache unit tests to Codeception.\r\n\r\n* Fixed typo.\r\n\r\n* Added test descriptions.\r\n\r\n* Cache items are removed before View unit tests.\r\n\r\n* Moved Models Query Parsing unit tests to Codeception.\r\n\r\n* Added aliases.\r\n\r\n* Added test descriptions to Model Query unit tests.\r\n\r\n* Moved Model Snapshot unit tests to Codeception.\r\n\r\n* Moved Models Metadata Manual unit tests to Codeception."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212dfa18912b45d36a34d6",
    "number": 12362,
    "body": "See https://github.com/phalcon/cphalcon/issues/12355#issuecomment-256279771\n",
    "head_branch": "possible-fix-12355",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12362 from SidRoberts/possible-fix-12355\n\nView::_viewsDirs is initialized as an array"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212dfb18912b45d36a34d7",
    "number": 12361,
    "body": "",
    "head_branch": "tag-url",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12361 from SidRoberts/tag-url\n\nRemoved repetitive calls from Tag"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212dfc18912b45d36a34d8",
    "number": 12359,
    "body": "Thank you for wanting to contribute to Phalcon.\n\nBefore you submit a Pull Request, please bear in mind that PRs must be made on a\nversion branch (eg. `3.0.x`). `master` marks the latest stable release so PRs\ntargeting `master` will be **rejected**.\n\nPlease also check the following points are being met:\n- [x] Make sure that the PR passes in Travis CI to make the process more efficient.\n- [x] Only use tabs for indentation.\n- [x] if needed, rebase to the proper branch before submitting your pull request.\n    If it doesn't merge cleanly with master you may be asked to rebase your changes.\n- [x] Don't put submodule updates in your pull request unless they are to landed commits.\n- [x] Add tests relevant to the fixed bug or new feature. See our testing guide for\n    more information.\n- [x] Phalcon 2 is written in Zephir, please do not submit commits that modify C generated\n    files directly or those whose functionality/fixes are implemented in the C\n    programming language\n- [x] Remove any change to ext/kernel / *.zep.c / *.zep.h files before submitting the PR\n",
    "head_branch": "custom-resultset",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12359 from ashpumpkin/custom-resultset\n\nAdded ability to set custom Resultset class returned by find()"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212dfd18912b45d36a34d9",
    "number": 12358,
    "body": "",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12358 from sergeyklay/3.0.x\n\nTune Up AspectMock"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212dfe18912b45d36a34da",
    "number": 12357,
    "body": "",
    "head_branch": "unit-tests-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Moved some more unit tests to Codeception (#12357)\n\n* Moved Router Group unit tests to Codeception.\r\n\r\n* Moved Query Builder unit tests to Codeception.\r\n\r\n* Corrected name of test class.\r\n\r\n* Moved CLI Router unit tests to Codeception.\r\n\r\n* Fixed model references in Query Builder unit tests.\r\n\r\n* CLI Router unit tests now uses codeception/specify.\r\n\r\n* Fixed model references in Query Builder unit tests.\r\n\r\n* Added titles to 'specify' methods in CLI Router unit tests.\r\n\r\n* Moved CLI unit tests to Codeception.\r\n\r\n* Moved MVC Micro unit tests to Codeception.\r\n\r\n* Moved Model Behaviors unit tests to Codeception.\r\n\r\n* Moved MVC Dispatcher unit tests to Codeception.\r\n\r\n* Moved some Form\\Text unit tests to Codeception.\r\n\r\n* Moved Micro events unit tests to Codeception.\r\n\r\n* Moved some of the Volt Compiler unit tests to Codeception.\r\n\r\n* Moved some more Form unit tests to Codeception.\r\n\r\n* Removed old and unused test files."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212e0018912b45d36a34db",
    "number": 12356,
    "body": "Refs: https://github.com/phalcon/cphalcon/pull/12328#issuecomment-255732050\n",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Cleaned MetaData (#12356)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212e0118912b45d36a34dc",
    "number": 12352,
    "body": "",
    "head_branch": "3.0.x-file-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixes #12349 (#12352)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212e0218912b45d36a34dd",
    "number": 12351,
    "body": "",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Cleaned tests (#12351)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212e0318912b45d36a34de",
    "number": 12348,
    "body": "",
    "head_branch": "move-unit-tests-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Move unit-tests/ to tests/ (#12348)\n\n* Removed $_POST from Validation unit tests.\r\n\r\n* Moved some more Validation unit tests to Codeception.\r\n\r\n* Moved some Form unit tests to Codeception.\r\n\r\n* Moved Models getter and setter unit tests to Codeception.\r\n\r\n* Moved Models Serialize unit tests to Codeception.\r\n\r\n* Moved Model Mass Assignment unit tests to Codeception.\r\n\r\n* Moved Model Finders unit tests to Codeception.\r\n\r\n* Moved View unit tests to Codeception.\r\n\r\n* Improved accuracy of timestamps in File Logger unit tests.\r\n\r\n* Moved Annotations Router unit tests to Codeception."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212e0418912b45d36a34df",
    "number": 12346,
    "body": "",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Used latest APC(u) (#12346)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212e0518912b45d36a34e0",
    "number": 12345,
    "body": "",
    "head_branch": "debug-dump-pointless-exception",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Removed impossible exception from Debug\\Dump (#12345)\n\n* Removed impossible exception.\r\n\r\n* Simplified 'if's in Debug.\r\n\r\n* Removed redundant if statement."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212e0618912b45d36a34e1",
    "number": 12344,
    "body": "",
    "head_branch": "move-unit-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Moved some of the Validator unit tests to Codeception. (#12344)\n\n* Moved some of the Validator unit tests to Codeception.\r\n\r\n* Fixed class resolution."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212e0718912b45d36a34e2",
    "number": 12343,
    "body": "If you are using latest image magic 7 build fails because  `setImageOpacity` doesnt exists\n\nbuild fails with \n\n```\n\nZephir\\CompilerException: Class 'Imagick' does not implement method: 'setImageOpacity' in /home/izopi4a/cphalcon/phalcon/image/adapter/imagick.zep on line 362\n\n          watermark->setImageOpacity(opacity);\n        -------------------------------------^\n\n```\n\nhttps://github.com/mkoppanen/imagick/blob/bd9548c426391878905b2a6bc36accc4c79f7ef7/php_imagick_defs.h#L428\n\ni used this to replace it\n\nhttp://stackoverflow.com/questions/3538851/php-imagick-setimageopacity-destroys-transparency-and-does-nothing\n",
    "head_branch": "fix-imagick-opacity",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212e0818912b45d36a34e3",
    "number": 12341,
    "body": "PR with model binding changes in dispatcher, moving code to separated class, as well add more abilities, caching of reflection, and make binding working for micro handlers, controllers and lazy controllers\n- [x] Make sure that the PR passes in Travis CI to make the process more efficient.\n- [x] Only use tabs for indentation.\n- [x] if needed, rebase to the proper branch before submitting your pull request.\n    If it doesn't merge cleanly with master you may be asked to rebase your changes.\n- [x] Don't put submodule updates in your pull request unless they are to landed commits.\n- [x] Add tests relevant to the fixed bug or new feature. See our testing guide for\n    more information.\n- [x] Phalcon 2 is written in Zephir, please do not submit commits that modify C generated\n    files directly or those whose functionality/fixes are implemented in the C\n    programming language\n- [x] Remove any change to ext/kernel / *.zep.c / *.zep.h files before submitting the PR\n",
    "head_branch": "3.1.x-binding",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12341 from Jurigag/3.1.x-binding\n\n[WIP]Added Phalcon\\Mvc\\Model\\Binder"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212e0a18912b45d36a34e4",
    "number": 12338,
    "body": "",
    "head_branch": "3.0.x-memory-acl-12333",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12338 from Jurigag/3.0.x-memory-acl-12333\n\nFixes #12333"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212e0b18912b45d36a34e5",
    "number": 12337,
    "body": "- [x] MySQL\n- [x] PostgreSQL\n- [x] SQLite\n",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12337 from sergeyklay/3.0.x\n\nEnabled Validation tests"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212e0c18912b45d36a34e6",
    "number": 12335,
    "body": "My project build from Phalcon 3.0.1 ( base on PHP 7.0.11 ).\n\ni detected error in Phalcon\\Http\\Request !!\n\nWhen i type `http://mywebsite/controller/action`**/?**`param=value`, it work.\nBut i type `http://mywebsite/controller/action`**?**`param=value`, it not working right and show the index!! ( IndexController::indexAction )\n\ntwo url different at **?** !!\n\ni fix it by insert **/** to any link, but i not wanted that!!\n**I hope there are better solutions. Thanks for reading!!**\n\n_Sorry, the ability to write my english is poor !!_\n",
    "head_branch": "3.1.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212e0d18912b45d36a34e7",
    "number": 12332,
    "body": "",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12332 from sergeyklay/3.0.x\n\nAmended APC(u) cache test"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212e0e18912b45d36a34e8",
    "number": 12331,
    "body": "Fix session_regenerate_id issue when using redis as the session handler in php7. No session handler should return null for read method. it should return an empty string is the key is not found\n",
    "head_branch": "3.1.x-fix-session_regenerate_id-for-redis-php7",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212e1018912b45d36a34e9",
    "number": 12328,
    "body": "Don't merge this just yet - there'll be a few more commits in the next few days.\n",
    "head_branch": "model-refactor",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[WIP] Refactored Model (#12328)\n\n* Refactored Model::validate().\r\n* Refactored Model::hasChanged().\r\n* Refactored Model::_checkForeignKeys*().\r\n* Refactored Model::skipAttributes().\r\n* Refactored ModelManager::setConnectionService().\r\n* Refactored ModelManager::get*Records().\r\n* Refactored ModelManager::get*().\r\n* Removed unused variables.\r\n* Refactored ModelManager::getRelationsBetween().\r\n* Refactored ModelManager::getModelSource().\r\n* Refactored ModelManager::notifyEvent().\r\n* Refactored ModelManager::getModelSchema().\r\n* Refactored ModelManager::missingMethod().\r\n* Refactored ModelManager::_getConnectionService().\r\n* Refactored Model::setSnapshotData().\r\n* Refactored ModelRelation::isForeignKey().\r\n* Refactored ModelMetadata::(read|write)MetaDataIndex().\r\n* Removed call_user_func_array calls from Model Transaction\r\n* Refactored ModelCriteria::*where().\r\n* Refactored ModelQueryBuilder::*where().\r\n* Refactored ModelManager::getCustomEventsManager().\r\n* Refactored ModelManager::getRelationByAlias().\r\n* Refactored ModelManager::getRelations().\r\n* Refactored ModelManager::get*Records().\r\n* Refactored ModelManager::load().\r\n* Refactored Model::_getRelatedRecords().\r\n* Refactored Model::_invokeFinder().\r\n* Refactored ModelMetadata::getStrategy().\r\n* Removed a weird loop.\r\n* Removed weird loop.\r\n* Removed weird loop."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212e1118912b45d36a34ea",
    "number": 12325,
    "body": "",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212e1218912b45d36a34eb",
    "number": 12323,
    "body": "All the code I've removed exists in [_getConnectionService()](https://github.com/SidRoberts/cphalcon/blob/823f663825e203d4eb40a602150fe1de0ca96bd0/phalcon/mvc/model/manager.zep#L483).\n",
    "head_branch": "model-getconnection-refactor",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12323 from SidRoberts/model-getconnection-refactor\n\nRefactored Mvc\\Manager::_getConnection()"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212e1318912b45d36a34ec",
    "number": 12322,
    "body": "",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12322 from sergeyklay/3.0.x\n\nCleaned tests"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212e1418912b45d36a34ed",
    "number": 12321,
    "body": "Refs: #12153\n",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12321 from sergeyklay/3.0.x\n\nFixed Phalcon\\Cache\\Backend\\Apc::flush"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212e1518912b45d36a34ee",
    "number": 12320,
    "body": "",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12320 from sergeyklay/3.0.x\n\nUpdated Apc test module"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212e1718912b45d36a34ef",
    "number": 12319,
    "body": "",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12319 from sergeyklay/3.0.x\n\nAmended Cache\\Backend\\Apc tests"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212e1818912b45d36a34f0",
    "number": 12318,
    "body": "",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12318 from sergeyklay/3.0.x\n\nCleaned tests"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212e1918912b45d36a34f1",
    "number": 12317,
    "body": "So I thought I'd have a go at converting Phalcon's Active Record models to the Data Mapper pattern (see [Doctrine](http://www.doctrine-project.org/projects/orm.html)) and I want to hear people's thoughts and opinions before I take it any further.\n\nI've avoided doing to much work just in case it ends up being a dead-end so no code has been refactored and methods in the models manager now call protected methods in Phalcon\\Mvc\\Model, etc; - it's a bit of a mess. Obviously this will/should all change.\n\nPut succinctly, methods have been moved to the models manager and (currently) operate exactly as they did before:\n\n``` php\n// Before\n$person = People::findFirst($params);\n\n// After\n$person = $modelsManager->findFirst(\n    People::class,\n    $params\n);\n```\n\n``` php\n// Before\n$person = People::count($params);\n\n// After\n$person = $modelsManager->count(\n    People::class,\n    $params\n);\n```\n\n``` php\n// Before\n$person->delete();\n\n// After\n$modelsManager->delete($person);\n```\n\n``` php\n// Before\n$person->save($params);\n\n// After\n$modelsManager->save($person, $params);\n```\n\nPhalcon\\Mvc\\Model is still far too complicated, in my opinion, so there's still a lot of work to do. :stuck_out_tongue: \n\nA few things that I'd like to do is remove the ability to assign properties during create/update/save:\n\n``` php\n$robot->save(\n    [\n        \"name\" => \"Bender\",\n    ]\n);\n\n$modelsManager->save(\n    $robot,\n    [\n        \"name\" => \"Bender\",\n    ]\n);\n```\n\nI know people like it because it acts a little shortcut but it doesn't make sense in the data mapper context and looks a little clumsy. A method called `save()` should save and do nothing else.\n\nI'd also like to decide between only supporting [public properties or getters/setters](https://docs.phalconphp.com/en/latest/reference/models.html#public-properties-vs-setters-getters) but have no personal preference of either. Alternatively (or additionally), make an effort to vastly simplify how properties are get/set internally.\n\n(It goes without saying but is obviously aimed at version 4 - not version 3)\n\nThoughts?\n",
    "head_branch": "v4-model-data-mapper",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[RFC] Converting Active Record to the Data Mapper pattern (#12317)\n\n* You can no longer assign data to models whilst saving them.\r\n\r\n* ModelManager::load() no longer reuses already initialised models.\r\n\r\n* Removed Model::reset()"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212e1a18912b45d36a34f2",
    "number": 12314,
    "body": "",
    "head_branch": "model-getrelationrecords",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12314 from SidRoberts/model-getrelationrecords\n\nRemoved pointless call_user_func_array functions from Mvc\\Model"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212e1b18912b45d36a34f3",
    "number": 12313,
    "body": "",
    "head_branch": "flash-outputmessage-dry",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212e1d18912b45d36a34f4",
    "number": 12312,
    "body": "It is additional tests which cause segmentation fault described in #12299\n\nThank you for wanting to contribute to Phalcon.\n\nBefore you submit a Pull Request, please bear in mind that PRs must be made on a\nversion branch (eg. `3.0.x`). `master` marks the latest stable release so PRs\ntargeting `master` will be **rejected**.\n\nPlease also check the following points are being met:\n- [ ] Make sure that the PR passes in Travis CI to make the process more efficient.\n- [x] Only use tabs for indentation.\n- [x] if needed, rebase to the proper branch before submitting your pull request.\n    If it doesn't merge cleanly with master you may be asked to rebase your changes.\n- [x] Don't put submodule updates in your pull request unless they are to landed commits.\n- [x] Add tests relevant to the fixed bug or new feature. See our testing guide for\n    more information.\n- [x] Phalcon 2 is written in Zephir, please do not submit commits that modify C generated\n    files directly or those whose functionality/fixes are implemented in the C\n    programming language\n- [x] Remove any change to ext/kernel / *.zep.c / *.zep.h files before submitting the PR\n",
    "head_branch": "3.0.x-DI-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212e1e18912b45d36a34f5",
    "number": 12311,
    "body": "Refs: https://github.com/krakjoe/apcu/issues/203\n",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12311 from sergeyklay/3.0.x\n\nFixed APCu tests"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212e1f18912b45d36a34f6",
    "number": 12310,
    "body": "Thank you for wanting to contribute to Phalcon.\n\nBefore you submit a Pull Request, please bear in mind that PRs must be made on a\nversion branch (eg. `3.0.x`). `master` marks the latest stable release so PRs\ntargeting `master` will be **rejected**.\n\nPlease also check the following points are being met:\n- [ ] Make sure that the PR passes in Travis CI to make the process more efficient.\n- [x] Only use tabs for indentation.\n- [x] if needed, rebase to the proper branch before submitting your pull request.\n  If it doesn't merge cleanly with master you may be asked to rebase your changes.\n- [x] Don't put submodule updates in your pull request unless they are to landed commits.\n- [x] Add tests relevant to the fixed bug or new feature. See our testing guide for\n  more information.\n- [x] Phalcon 2 is written in Zephir, please do not submit commits that modify C generated\n  files directly or those whose functionality/fixes are implemented in the C\n  programming language\n- [x] Remove any change to ext/kernel / *.zep.c / *.zep.h files before submitting the PR\n",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212e2018912b45d36a34f7",
    "number": 12309,
    "body": "Thank you for wanting to contribute to Phalcon.\n\nBefore you submit a Pull Request, please bear in mind that PRs must be made on a\nversion branch (eg. `3.0.x`). `master` marks the latest stable release so PRs\ntargeting `master` will be **rejected**.\n\nPlease also check the following points are being met:\n- [ ] Make sure that the PR passes in Travis CI to make the process more efficient.\n- [ ] Only use tabs for indentation.\n- [ ] if needed, rebase to the proper branch before submitting your pull request.\n    If it doesn't merge cleanly with master you may be asked to rebase your changes.\n- [ ] Don't put submodule updates in your pull request unless they are to landed commits.\n- [ ] Add tests relevant to the fixed bug or new feature. See our testing guide for\n    more information.\n- [ ] Phalcon 2 is written in Zephir, please do not submit commits that modify C generated\n    files directly or those whose functionality/fixes are implemented in the C\n    programming language\n- [ ] Remove any change to ext/kernel / *.zep.c / *.zep.h files before submitting the PR\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212e2218912b45d36a34f8",
    "number": 12308,
    "body": "Hello!\n\nType: bug fix \nLink to issue:\n\nIn raising this pull request, I confirm the following (please check boxes):\n- [x] I have read and understood the Contributing Guidelines?\n- [x] I have checked that another pull request for this purpose does not exist.\n- [ ] I wrote some tests for this PR.\n  Small description of change:\n\nRESEND PR: https://github.com/phalcon/cphalcon/pull/12307\n\nThere (maybe) is the PHP core issue, not Phalcon. And I rewrite the array_merge_recursive like here,\n[http://php.net/manual/en/function.array-merge-recursive.php#96201](http://php.net/manual/en/function.array-merge-recursive.php#96201)\n\nUse `Phalcon\\Config\\Adapter\\Ini`, If I have ini file like,\n\n```\n[step]\nstep1.1 = A\nstep1.2 = B\nstep1.3 = C\n```\n\nOutput will be,\n\n```\narray(1) {\n  [\"step\"]=>\n  array(1) {\n    [\"step1\"]=>\n    array(2) {\n      [1]=>\n      string(1) \"B\"\n      [2]=>\n      string(1) \"C\"\n    }\n  }\n}\n```\n\nThe 'A' will missing, but If,\n\n```\n[step]\nstep1.5 = X\nstep1.1 = A\nstep1.2 = B\nstep1.3 = C\n```\n\nOutput will be,\n\n```\narray(1) {\n  [\"step\"]=>\n  array(1) {\n    [\"step1\"]=>\n    array(2) {\n      [5]=>\n      string(1) \"X\"\n      [1]=>\n      string(1) \"A\"\n      [2]=>\n      string(1) \"B\"\n      [3]=>\n      string(1) \"C\"\n    }\n  }\n}\n```\n\nThis issue is PHP's array_merge_recursive (maybe), so I rewrite an new function to do this in `ini.zep` and output correct what we want.\n\nThere is ini file,\n\n```\n[qq]\nstep1.1 = A\nstep1.2 = B\nstep1.3 = G\nstep2.1 = A\nstep2.2 = B\nstep2.3 = C\nstep12[3] = AA\nstep12[4] = BB\nstep12[5] = CC\nstep5.3 = AAA\nstep5.4 = BBBB\nstep5.1 = GGGG\nstep5.2 = TTTT\n```\n\nAnd output will be,\n\n```\nobject(Phalcon\\Config\\Adapter\\Ini)#1 (1) {\n  [\"qq\"]=>\n  object(Phalcon\\Config)#2 (4) {\n    [\"step1\"]=>\n    object(Phalcon\\Config)#3 (3) {\n      [\"1\"]=>\n      string(1) \"A\"\n      [\"2\"]=>\n      string(1) \"B\"\n      [\"3\"]=>\n      string(1) \"G\"\n    }\n    [\"step2\"]=>\n    object(Phalcon\\Config)#4 (3) {\n      [\"1\"]=>\n      string(1) \"A\"\n      [\"2\"]=>\n      string(1) \"B\"\n      [\"3\"]=>\n      string(1) \"C\"\n    }\n    [\"step12\"]=>\n    object(Phalcon\\Config)#5 (3) {\n      [\"3\"]=>\n      string(2) \"AA\"\n      [\"4\"]=>\n      string(2) \"BB\"\n      [\"5\"]=>\n      string(2) \"CC\"\n    }\n    [\"step5\"]=>\n    object(Phalcon\\Config)#6 (4) {\n      [\"3\"]=>\n      string(3) \"AAA\"\n      [\"4\"]=>\n      string(4) \"BBBB\"\n      [\"1\"]=>\n      string(4) \"GGGG\"\n      [\"2\"]=>\n      string(4) \"TTTT\"\n    }\n  }\n}\n```\n\nThanks\n",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212e2318912b45d36a34f9",
    "number": 12307,
    "body": "There (maybe) is the PHP core issue, not Phalcon. And I rewrite the array_merge_recursive like here,\n[http://php.net/manual/en/function.array-merge-recursive.php#96201](http://php.net/manual/en/function.array-merge-recursive.php#96201)\n\nUse `Phalcon\\Config\\Adapter\\Ini`, If I have ini file like,\n\n```\n[step]\nstep1.1 = A\nstep1.2 = B\nstep1.3 = C\n```\n\nOutput will be,\n\n```\narray(1) {\n  [\"step\"]=>\n  array(1) {\n    [\"step1\"]=>\n    array(2) {\n      [1]=>\n      string(1) \"B\"\n      [2]=>\n      string(1) \"C\"\n    }\n  }\n}\n```\n\nThe 'A' will missing, but If,\n\n```\n[step]\nstep1.5 = X\nstep1.1 = A\nstep1.2 = B\nstep1.3 = C\n```\n\nOutput will be,\n\n```\narray(1) {\n  [\"step\"]=>\n  array(1) {\n    [\"step1\"]=>\n    array(2) {\n      [5]=>\n      string(1) \"X\"\n      [1]=>\n      string(1) \"A\"\n      [2]=>\n      string(1) \"B\"\n      [3]=>\n      string(1) \"C\"\n    }\n  }\n}\n```\n\nThis issue is PHP's array_merge_recursive (maybe), so I rewrite an new function to do this in `ini.zep` and output correct what we want.\n\nThere is ini file,\n\n```\n[qq]\nstep1.1 = A\nstep1.2 = B\nstep1.3 = G\nstep2.1 = A\nstep2.2 = B\nstep2.3 = C\nstep12[3] = AA\nstep12[4] = BB\nstep12[5] = CC\nstep5.3 = AAA\nstep5.4 = BBBB\nstep5.1 = GGGG\nstep5.2 = TTTT\n```\n\nAnd output will be,\n\n```\nobject(Phalcon\\Config\\Adapter\\Ini)#1 (1) {\n  [\"qq\"]=>\n  object(Phalcon\\Config)#2 (4) {\n    [\"step1\"]=>\n    object(Phalcon\\Config)#3 (3) {\n      [\"1\"]=>\n      string(1) \"A\"\n      [\"2\"]=>\n      string(1) \"B\"\n      [\"3\"]=>\n      string(1) \"G\"\n    }\n    [\"step2\"]=>\n    object(Phalcon\\Config)#4 (3) {\n      [\"1\"]=>\n      string(1) \"A\"\n      [\"2\"]=>\n      string(1) \"B\"\n      [\"3\"]=>\n      string(1) \"C\"\n    }\n    [\"step12\"]=>\n    object(Phalcon\\Config)#5 (3) {\n      [\"3\"]=>\n      string(2) \"AA\"\n      [\"4\"]=>\n      string(2) \"BB\"\n      [\"5\"]=>\n      string(2) \"CC\"\n    }\n    [\"step5\"]=>\n    object(Phalcon\\Config)#6 (4) {\n      [\"3\"]=>\n      string(3) \"AAA\"\n      [\"4\"]=>\n      string(4) \"BBBB\"\n      [\"1\"]=>\n      string(4) \"GGGG\"\n      [\"2\"]=>\n      string(4) \"TTTT\"\n    }\n  }\n}\n```\n",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212e2418912b45d36a34fa",
    "number": 12304,
    "body": "",
    "head_branch": "mvc-model-phpdoc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12304 from SidRoberts/mvc-model-phpdoc\n\nFixed PHPDoc"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212e2618912b45d36a34fb",
    "number": 12302,
    "body": "As seen on http://php.net/manual/fr/mongocollection.aggregate.php there is a second argument available for MongoCollection::aggregate.\nIt accepts for instance a _maxTimeMS_ argument which can be very useful to increase for the aggregation process.\n",
    "head_branch": "patch-5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212e2718912b45d36a34fc",
    "number": 12298,
    "body": "",
    "head_branch": "model-validation-deprecate",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12298 from SidRoberts/model-validation-deprecate\n\nClarified that model validators should only be used with Collections"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212e2818912b45d36a34fd",
    "number": 12297,
    "body": "`createQuery()` is the method immediately above it and it uses the same code. :stuck_out_tongue_closed_eyes: \n",
    "head_branch": "patch-8",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12297 from SidRoberts/patch-8\n\nMvc\\Model\\Manager::executeQuery() is now more succinct"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212e2918912b45d36a34fe",
    "number": 12293,
    "body": "Adding this type solves #12223 \n",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212e2a18912b45d36a34ff",
    "number": 12292,
    "body": "",
    "head_branch": "3.1.x-beforeError,beforeThrowable",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212e2b18912b45d36a3500",
    "number": 12287,
    "body": "[Phalcon\\Forms\\Element already implements ElementInterface](https://github.com/phalcon/cphalcon/blob/3.0.x/phalcon/forms/element.zep#L34)\n",
    "head_branch": "form-element-interface",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12287 from SidRoberts/form-element-interface\n\nForm Elements no longer implement ElementInterface twice."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212e2c18912b45d36a3501",
    "number": 12286,
    "body": "Hello!\n- Type: documentation\n- Link to issue: -\n\n**In raising this pull request, I confirm the following (please check boxes):**\n- [x] I have read and understood the [Contributing Guidelines](/CONTRIBUTING.md)?\n- [x] I have checked that another pull request for this purpose does not exist.\n- [ ] I wrote some tests for this PR.\n\nSmall description of change: Simplified PR template.\n\nThanks\n",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12286 from sergeyklay/3.0.x\n\nUpdated PR template [ci skip]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212e2e18912b45d36a3502",
    "number": 12285,
    "body": "",
    "head_branch": "3.0.x-schema",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12285 from Jurigag/3.0.x-schema\n\nFix mysql and postgresql missing schema"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212e3218912b45d36a3503",
    "number": 12283,
    "body": "",
    "head_branch": "3.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12283 from phalcon/3.0.x\n\n3.0.2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212e3318912b45d36a3504",
    "number": 12282,
    "body": "",
    "head_branch": "patch-8",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12282 from SidRoberts/patch-8\n\nRemoved unused variable from Loader::register()"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212e3418912b45d36a3505",
    "number": 12281,
    "body": "",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12281 from sergeyklay/3.0.x\n\nCleanup View Simple test"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212e3518912b45d36a3506",
    "number": 12280,
    "body": "Refs:\n- #12099\n- #12165\n- #11978\n- #10044\n- http://stackoverflow.com/questions/37365130/how-to-clear-phalcon-form-element-values\n",
    "head_branch": "clearing_form_elements",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12280 from sergeyklay/clearing_form_elements\n\nTest clearing form"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212e3618912b45d36a3507",
    "number": 12279,
    "body": "",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12279 from sergeyklay/3.0.x\n\nCleaned tests"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212e3718912b45d36a3508",
    "number": 12278,
    "body": "",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12278 from sergeyklay/3.0.x\n\nRefactored View tests"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212e3818912b45d36a3509",
    "number": 12277,
    "body": "",
    "head_branch": "3.0.x-acl-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12277 from Jurigag/3.0.x-acl-tests\n\nAdd acl wildcard test"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212e3a18912b45d36a350a",
    "number": 12276,
    "body": "Refs: #12267, phalcon/phalcon-devtools#859\n",
    "head_branch": "db/dialect/postgresql",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12276 from sergeyklay/db/dialect/postgresql\n\nFixed PostgreSQL Dialect"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212e3b18912b45d36a350b",
    "number": 12271,
    "body": "",
    "head_branch": "fix-mvc-query-builder-interface-join",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12271 from andrew-demb/fix-mvc-query-builder-interface-join\n\nAmended Phalcon\\Mvc\\Model\\Query\\BuilderInterface::join() to specify type join"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212e3c18912b45d36a350c",
    "number": 12266,
    "body": "See #12013\n",
    "head_branch": "loader-arrays",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12266 from SidRoberts/loader-arrays\n\n[3.0.x] Certain properties in Loader/Validation are now definitely always arrays"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212e3d18912b45d36a350d",
    "number": 12265,
    "body": "Reverts phalcon/cphalcon#12013\n",
    "head_branch": "revert-12013-loader-arrays",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12265 from phalcon/revert-12013-loader-arrays\n\nRevert \"Certain properties in Loader/Validation are now definitely always arrays\""
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212e3e18912b45d36a350e",
    "number": 12264,
    "body": "",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12264 from sergeyklay/3.0.x\n\nAmended PDO tests"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212e3f18912b45d36a350f",
    "number": 12263,
    "body": "Refs: https://github.com/phalcon/phalcon-devtools/issues/853\n",
    "head_branch": "db/column/has_default",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12263 from sergeyklay/db/column/has_default\n\nFixed Column::hasDefault"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212e4018912b45d36a3510",
    "number": 12262,
    "body": "",
    "head_branch": "3.0.x-describe-references",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12262 from Jurigag/3.0.x-describe-references\n\nFix describeReferences"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212e4118912b45d36a3511",
    "number": 12257,
    "body": "",
    "head_branch": "appveyor_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12257 from sergeyklay/appveyor_fix\n\nFixed Appveyor build"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212e4218912b45d36a3512",
    "number": 12256,
    "body": "",
    "head_branch": "3.0.x-filters-entity",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12256 from Jurigag/3.0.x-filters-entity\n\nFix #12254"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212e4318912b45d36a3513",
    "number": 12255,
    "body": "Refs: #12206\n",
    "head_branch": "fix_sessions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12255 from sergeyklay/fix_sessions\n\nFixed the read/destroy session callbacks"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212e4418912b45d36a3514",
    "number": 12253,
    "body": "Refs: #12215, https://github.com/phalcon/docs/issues/879\n\n@SidRoberts \nCould you please check current documentation uri to solve this issue. \n",
    "head_branch": "debug_version",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12253 from sergeyklay/debug_version\n\nFixed Phalcon\\Debug::getVersion"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212e4618912b45d36a3515",
    "number": 12251,
    "body": "See [phalcon/mvc/collection.zep#L739](https://github.com/phalcon/cphalcon/blob/master/phalcon/mvc/collection.zep#L739) and [phalcon/mvc/model.zep#L1330](https://github.com/phalcon/cphalcon/blob/master/phalcon/mvc/model.zep#L1330)\n",
    "head_branch": "patch-7",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12251 from SidRoberts/patch-7\n\nRenamed notSave event to notSaved in Collection."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212e4718912b45d36a3516",
    "number": 12249,
    "body": "",
    "head_branch": "3.0.x-di-property",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212e4818912b45d36a3517",
    "number": 12246,
    "body": "",
    "head_branch": "fix3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12246 from 0x55/fix3.0.x\n\nremove var_dump function"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212e4918912b45d36a3518",
    "number": 12245,
    "body": "Hopefully this will make the API docs slightly more readable.\n",
    "head_branch": "tidy-comments",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12245 from SidRoberts/tidy-comments\n\nPHPDoc code blocks are now PSR2 and tidier."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212e4a18912b45d36a3519",
    "number": 12243,
    "body": "Added two new filters for use in the Filter->_sanitization()_ method...\n\nThe first is FILTER_BOOLEAN, which returns the boolean value (true or false) if the value is an actual boolean (not 0, 1, 'true' as a string, etc) or it returns null if the value is not a true boolean.\n\nThe second is FILTER_BOOLEAN_CAST, which returns whatever the boolean would be of the casted value.  For example, 1 would return true and and empty string would return false.\n\n**_NOTE:_** FILTER_BOOLEAN is a special case that required a break in the sanitization switch statement since it may return null.  This was accounted for in related loops.\n",
    "head_branch": "Added-BOOLEAN-and-BOOLEAN_CAST-to-Phalcon-Filter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212e4c18912b45d36a351a",
    "number": 12242,
    "body": "Added two new filters for use in the Filter->_sanitization()_ method...\n\nThe first is FILTER_BOOLEAN, which returns the boolean value (true or false) if the value is an actual boolean (not 0, 1, 'true' as a string, etc) or it returns null if the value is not a true boolean.\n\nThe second is FILTER_BOOLEAN_CAST, which returns whatever the boolean would be of the casted value.  For example, 1 would return true and and empty string would return false.\n\n**_NOTE:_** FILTER_BOOLEAN is a special case that required a break in the sanitization switch statement since it may return null.  This was accounted for in related loops.\n",
    "head_branch": "Added-BOOLEAN-and-BOOLEAN_CAST-to-Phalcon-Filter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212e4d18912b45d36a351b",
    "number": 12241,
    "body": "fix. remove  var_dump function.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212e4e18912b45d36a351c",
    "number": 12240,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12240 from tmihalik/patch-1\n\nAdded \"DISTINCT\" type for Text::random()"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212e4f18912b45d36a351d",
    "number": 12237,
    "body": "Update prependTitle and appendTitle to work correctly. \n\nUpdate tests for prependTitle and appendTitle functions.\nFor details: #12233\n\nUpdate test for setTitle and getTitle: Make sure that getTitle(false) did not return tag element.\n",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12237 from borisdelev/3.0.x\n\nFix appendTitle, prependTitle. Update unit test for append, prepend and setTitle"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212e5018912b45d36a351e",
    "number": 12236,
    "body": "Update tests for prependTitle and appendTitle functions.\nFor details:  #12233 \n\nUpdate test for setTitle and getTitle: Make sure that getTitle(false) did not return <title> tag element\n",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212e5118912b45d36a351f",
    "number": 12235,
    "body": "Update tests for prependTitle and appendTitle functions.\nFor details:  #12233 \n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212e5218912b45d36a3520",
    "number": 12232,
    "body": "",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12232 from sergeyklay/3.0.x\n\nAmended Phalcon\\Translate\\Adapter\\Gettext doc [ci skip]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212e5418912b45d36a3521",
    "number": 12231,
    "body": "Refs: #12230\n",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12231 from sergeyklay/3.0.x\n\nFixed Phalcon\\Config\\Adapter\\Ini::_cast"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212e5518912b45d36a3522",
    "number": 12229,
    "body": "Reverts phalcon/cphalcon#12226\n",
    "head_branch": "revert-12226-cleaned_doc",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12229 from phalcon/revert-12226-cleaned_doc\n\nRevert \"Removed extra LICENSE, and empty DOCUMENTATION\""
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212e5618912b45d36a3523",
    "number": 12228,
    "body": "",
    "head_branch": "license_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212e5718912b45d36a3524",
    "number": 12227,
    "body": "Refs: #12099\n",
    "head_branch": "reset_input",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12227 from sergeyklay/reset_input\n\nFixed Phalcon\\Tag::resetInput for proper use without attempts to clear $_POST"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212e5818912b45d36a3525",
    "number": 12226,
    "body": "",
    "head_branch": "cleaned_doc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12226 from sergeyklay/cleaned_doc\n\nRemoved extra LICENSE, and empty DOCUMENTATION"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212e5918912b45d36a3526",
    "number": 12219,
    "body": "It's weird that on command line tasks the dispatcher has the options but doesn't pass them onto the task action so they can be accessed directly.\n\nI've also added the getOption method to the command line dispatcher so you can retrieve one specific option, passing a filter to ensure nothing dangerous comes by.\n\n<!-- Reviewable:start -->\n\n---\n\nThis change is [<img src=\"https://reviewable.io/review_button.svg\" height=\"34\" align=\"absmiddle\" alt=\"Reviewable\"/>](https://reviewable.io/reviews/phalcon/cphalcon/12219)\n\n<!-- Reviewable:end -->\n",
    "head_branch": "feature/cli-dispatcher-option-parameters",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Adding getOption method to the cli dispatcher. Adding options into the task handler. (#12219)\n\n* Adding getOption/hasOption method to the cli dispatcher. Adding options into the task handler. Adding getOption/hasOption unit tests.\r\n\r\n* Update dispatcher.zep\r\n\r\n* Update dispatcher.zep\r\n\r\n* Update dispatcher.zep"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212e5a18912b45d36a3527",
    "number": 12218,
    "body": "If set to '/', the cookie will be available within the entire domain, but if i need, that cookie will only be available current directory?\n\nsee official API Description \n\n``` php\nbool setcookie ( string $name [, string $value = \"\" [, int $expire = 0 [, string $path = \"\" [, string $domain = \"\" [, bool $secure = false [, bool $httponly = false ]]]]]] )\n```\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212e5b18912b45d36a3528",
    "number": 12216,
    "body": "Use `select` internal function only when the index is greater than zero. Because, new connections always use DB 0 and the index is zero-based. It is important when use twemproxy, some people have a troubles with it. twemproxy (https://github.com/twitter/twemproxy) doesn't implement select function. I found simple solution. What do you say, comrades?\n",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12216 from metaliciouz/3.0.x\n\nUpdate `_connect` function in redis.zep"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212e5c18912b45d36a3529",
    "number": 12213,
    "body": "add ext mongodb support.\nmodify phalcon\\mvc\\collection tests.\n\n![mongodb-test](https://cloud.githubusercontent.com/assets/1452863/18424252/55e52086-78e0-11e6-9faf-c95ed00b1be2.png)\n",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212e5d18912b45d36a352a",
    "number": 12209,
    "body": "Fixes the long-standing Mvc Dispatcher bugs in PHP5.6.  [#12154](https://github.com/phalcon/cphalcon/issues/12154), [#11819](https://github.com/phalcon/cphalcon/issues/11819)\n- Required Zephir fix for try/catch block fix required\n- Corresponding documentation updates included in separate PR\n- Test suite updated to use Codeception along with addition of full 100% test coverage of dispatcher functionality.\n\n![image](https://cloud.githubusercontent.com/assets/739719/18394386/9ec22bb0-766e-11e6-8d71-6f229475c359.png)\n",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212e5e18912b45d36a352b",
    "number": 12207,
    "body": "The wrong variable was being used as the key for looking up the 'labelWith' value. \nAlso, there was a missing single-quote in the class example.\n",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12207 from jaredwarren/3.0.x\n\nFix Confirmation validator replace pairs ':with' value."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212e5f18912b45d36a352c",
    "number": 12206,
    "body": "- read not returning always a string\n- destroy wrongly returning false when session doesn't exist. \n\n**read**\n\nIf read returns anything else than a string it will fail with PHP Catchable fatal error: session_regenerate_id(): Failed to create(read) session ID: user. PHP 7 requires that reading always returns a string, regardless the existence of data.\n\n**destroy**\n\nWhen session_regenerate_id() is called right after session_start() php tries to destroy a session that doesn't exist yet. destroy() to wrongly return false when the session doesn't exist yet. PHP 7 will then fail with Warning: session_regenerate_id(): Session object destruction failed. ID: user (path: ) .\n\n``` php\n// with PHP 7.0.10 and Phalcon 3.0.1\nuse Phalcon\\Session\\Adapter\\Redis as SessionAdapterRedis;\n\n$session = new SessionAdapterRedis([\n    'host'     => '127.0.0.1',\n    'port'     => 6379,\n]);\n\n$session->start();\n\n$oldId = $session->getId();\n\n$session->regenerateId();\n\nvar_dump($oldId);\nvar_dump($session->getId());\n```\n",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212e6018912b45d36a352d",
    "number": 12200,
    "body": "",
    "head_branch": "patch-6",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12200 from SidRoberts/patch-6\n\nFixed PHPDoc typo (see phalcon/docs#871)."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212e6118912b45d36a352e",
    "number": 12193,
    "body": "Refs: #12099\n",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212e6218912b45d36a352f",
    "number": 12192,
    "body": "Problem is described in #12191\n",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12192 from andrew-demb/3.0.x\n\nFixed  #12191 not standard column map in `Phalcon\\Mvc\\Model::cloneResultMapHydrate`"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212e6418912b45d36a3530",
    "number": 12190,
    "body": "fix typo in error message\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12190 from Daredzik/patch-1\n\nUpdate redis.zep"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212e6518912b45d36a3531",
    "number": 12189,
    "body": "isset($req->getHeaders()[ 'abc' ]) To null !== $req->getHeader('abc')\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212e6618912b45d36a3532",
    "number": 12188,
    "body": "isset($req->getHeaders()[ 'abc' ]) To null !== $req->getHeader('abc')\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212e6718912b45d36a3533",
    "number": 12187,
    "body": "- Fixed `Cache\\Backend\\Memory::delete`\n- Fixed `Cache\\Frontend\\Data::afterRetrieve`\n- Amended cache tests\n- Cleaned frontend cache\n\n---\n\nRefs: #12186\n",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12187 from sergeyklay/3.0.x\n\nFixed cache serialization"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212e6818912b45d36a3534",
    "number": 12183,
    "body": "- Fixed Phalcon\\Cache\\Backend\\Memcache::flush\n- Enabled, refactored and amended Memcache tests\n\n---\n\nRefs: #12182 \n",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12183 from sergeyklay/3.0.x\n\nFixed Phalcon\\Cache\\Backend\\Memcache::flush"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212e6918912b45d36a3535",
    "number": 12181,
    "body": "",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12181 from sergeyklay/3.0.x\n\nUpdated CHANGELOG.md [ci skip]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212e6a18912b45d36a3536",
    "number": 12175,
    "body": "I have created an overlay and ebuilds in [smoke-phalcon overlay](https://github.com/smoke/phalcon-gentoo-overlay) for easy Phalcon installation on Gentoo.\n\nThis merge request updates the README.md file to point that option.\n",
    "head_branch": "install-phalcon-on-gentoo-using-smoke-phalcon-overlay",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212e6c18912b45d36a3537",
    "number": 12174,
    "body": "This merge request updates build/install-gentoo with what was changed in build/install so that Phalcon compiles on Gentoo again.\n",
    "head_branch": "update-install-gentoo-instructions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212e6d18912b45d36a3538",
    "number": 12171,
    "body": "Refs: #12000, #12170\n",
    "head_branch": "3.0.x-model-cache-serialize",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12171 from Jurigag/3.0.x-model-cache-serialize\n\nFix #12000, #12170"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212e6e18912b45d36a3539",
    "number": 12164,
    "body": "",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12164 from sergeyklay/3.0.x\n\nChanged dev version to 3.0.2 [ci skip]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212e6f18912b45d36a353a",
    "number": 12163,
    "body": "",
    "head_branch": "3.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12163 from phalcon/3.0.x\n\nUpdated CHANGELOG [ci skip]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212e7018912b45d36a353b",
    "number": 12161,
    "body": "",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12161 from sergeyklay/3.0.x\n\nFixed the GitHub language stats bar [ci skip]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212e7118912b45d36a353c",
    "number": 12159,
    "body": "",
    "head_branch": "volt/macros/test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12159 from sergeyklay/volt/macros/test\n\nEnabled Volt macros tests on PHP 7"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212e7218912b45d36a353d",
    "number": 12158,
    "body": "Refs: #12157, #11760\n",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12158 from sergeyklay/3.0.x\n\nFixed Gettext::getOptionsDefault visibility"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212e7318912b45d36a353e",
    "number": 12155,
    "body": "",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12155 from sergeyklay/3.0.x\n\nCleaned README.md"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212e7418912b45d36a353f",
    "number": 12150,
    "body": "Refs: #12141\n",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12150 from sergeyklay/3.0.x\n\nFixed Random::base64Safe"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212e7618912b45d36a3540",
    "number": 12146,
    "body": "This was surfaced by #12120 and is the correct version of #12145.\n\nI've synchronized what's in the PR template with the contributing guide.\n\nIMHO these files should be cherry-picked into `master`, as this is not related to the next Phalcon release and would help other developers to send better issues/PRs into the repository. Bear in mind that those changes don't get applied to the repository until they land into `master`.\n",
    "head_branch": "issue-pr-template-improvements",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12146 from igorsantos07/issue-pr-template-improvements\n\nIssue and PR templates improvements"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212e7718912b45d36a3541",
    "number": 12145,
    "body": "This was surfaced by #12120 \n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212e7818912b45d36a3542",
    "number": 12140,
    "body": "Refs: #12139\n",
    "head_branch": "view/get_active_render_path",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12140 from sergeyklay/view/get_active_render_path\n\nFixed View::getActiveRenderPath"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212e7918912b45d36a3543",
    "number": 12138,
    "body": "",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12138 from sergeyklay/3.0.x\n\nCleaned optimizers"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212e7a18912b45d36a3544",
    "number": 12136,
    "body": "",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12136 from sergeyklay/3.0.x\n\nSpeed up Manager::isVisibleModelProperty"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212e7b18912b45d36a3545",
    "number": 12135,
    "body": "",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12135 from sergeyklay/3.0.x\n\nClean docs for Paginator"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212e7c18912b45d36a3546",
    "number": 12134,
    "body": "",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12134 from sergeyklay/3.0.x\n\nClean docs for Phalcon\\Paginator\\Adapter\\NativeArray"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212e7d18912b45d36a3547",
    "number": 12133,
    "body": "",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212e7e18912b45d36a3548",
    "number": 12132,
    "body": "",
    "head_branch": "fix_tag_test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12132 from sergeyklay/fix_tag_test\n\nFixed Tag::javascriptInclude test"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212e7f18912b45d36a3549",
    "number": 12131,
    "body": "Refs: #12115, #11995, #12116\n",
    "head_branch": "models_manager/model_properties",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12131 from sergeyklay/models_manager/model_properties\n\nFixed memory leak"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212e8018912b45d36a354a",
    "number": 12130,
    "body": "",
    "head_branch": "3.0.1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212e8118912b45d36a354b",
    "number": 12127,
    "body": "Refs: #11947, #10676\n\nNow the examples below works in a similar way:\n\n``` php\nPhalcon\\Mvc\\Model\\Query\\Builder::inWhere('id', []);\n```\n\n``` php\nPhalcon\\Mvc\\Model\\Criteria::inWhere('id', []);\n```\n",
    "head_branch": "query/in_where",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12127 from sergeyklay/query/in_where\n\nAbility to use an empty array for Criteria::inWhere"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212e8418912b45d36a354c",
    "number": 12124,
    "body": "",
    "head_branch": "3.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12124 from phalcon/3.0.x\n\n3.0.1"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212e8518912b45d36a354d",
    "number": 12123,
    "body": "Refs: #12109\n",
    "head_branch": "cache/backend",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12123 from sergeyklay/cache/backend\n\nThe cache backend's save method was unified"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212e8618912b45d36a354e",
    "number": 12122,
    "body": "",
    "head_branch": "cleaned_tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12122 from sergeyklay/cleaned_tests\n\nRemoved not needed functional test suite [ci skip]"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212e8718912b45d36a354f",
    "number": 12121,
    "body": "Refs: #12109\n",
    "head_branch": "test/cache/apc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12121 from sergeyklay/test/cache/apc\n\nAmended Phalcon\\Cache\\Backend\\Apc test"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212e8818912b45d36a3550",
    "number": 12119,
    "body": "Refs: #12109\n",
    "head_branch": "cache/apc/save",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12119 from sergeyklay/cache/apc/save\n\nFixed Phalcon\\Cache\\Backend\\Apc::save"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212e8918912b45d36a3551",
    "number": 12112,
    "body": "creation of the filter sanitize before volt compilation.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212e8b18912b45d36a3552",
    "number": 12103,
    "body": "The auto loader class currently appends itself when calling spl_autoloader_register. This can cause the Phalcon loader to not be the primary loader when working with other registered autoloaders. The best example is Composer. Composer, by default, prepends its autoloader, making it the first to run.\n\nThe applied changes makes use of the same concept to prepend the Phalcon loader. This, in combination with the recent 'registerFiles' method allows Phalcon to always be the primary loader.\n\nFor backwards compatability, the loader defaults to appending still, but can be converted to prepending by calling setPrepend(TRUE)\n\n$loader = new \\Phalcon\\Loader();\n$loader->registerNamespaces(['SomeNamespace' => 'Some\\Namespace'])\n->setPrepend(TRUE)\n->register();\n",
    "head_branch": "loader-prepend",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212e8c18912b45d36a3553",
    "number": 12102,
    "body": "",
    "head_branch": "pr-template",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12102 from SidRoberts/pr-template\n\nAdded Pull Request template"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212e8d18912b45d36a3554",
    "number": 12101,
    "body": "The auto loader class currently appends itself when calling spl_autoloader_register. This can cause the Phalcon loader to not be the primary loader when working with other registered autoloaders. The best example is Composer. Composer, by default, prepends its autoloader, making it the first to run.\n\nThe applied changes makes use of the same concept to prepend the Phalcon loader. This, in combination with the recent 'registerFiles' method allows Phalcon to always be the primary loader.\n\nFor backwards compatability, the loader defaults to appending still, but can be converted to prepending by calling setPrepend(TRUE)\n\n`$loader = new \\Phalcon\\Loader();`\n`$loader->registerNamespaces(['SomeNamespace' => 'Some\\Namespace'])`\n`->setPrepend(TRUE)`\n`->register();`\n",
    "head_branch": "loader-prepend",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212e8e18912b45d36a3555",
    "number": 12100,
    "body": "`mode` defaults to INI_SCANNER_RAW as it was earlier\n",
    "head_branch": "config-adapter-ini-mode",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12100 from zytzagoo/config-adapter-ini-mode\n\nAdd optional `mode` param to Phalcon\\Config\\Adapter\\Ini ctor + test"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212e8f18912b45d36a3556",
    "number": 12095,
    "body": "",
    "head_branch": "3.0.x-test-acl-function",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12095 from Jurigag/3.0.x-test-acl-function\n\nTest for #12094"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212e9018912b45d36a3557",
    "number": 12088,
    "body": "",
    "head_branch": "tests/php-7.1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12088 from phalcon/tests/php-7.1\n\nTest on PHP 7.1"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212e9118912b45d36a3558",
    "number": 12087,
    "body": "Refs: #12050, #12072\n",
    "head_branch": "cache/backends",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12087 from sergeyklay/cache/backends\n\nFixed save method for all cache backends"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212e9218912b45d36a3559",
    "number": 12086,
    "body": "Refs: https://github.com/phalcon/cphalcon/issues/12085\n",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12086 from sergeyklay/3.0.x\n\nRemoved duplicated code from \\Phalcon\\Validation::validate"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212e9318912b45d36a355a",
    "number": 12084,
    "body": "Refs: https://github.com/phalcon/cphalcon/issues/11959\n",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12084 from sergeyklay/3.0.x\n\nResource implements ResourceInterface"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212e9418912b45d36a355b",
    "number": 12083,
    "body": "",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12083 from sergeyklay/3.0.x\n\nUpdated test proxies"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212e9518912b45d36a355c",
    "number": 12081,
    "body": "",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12081 from sergeyklay/3.0.x\n\nStart refator Mysql test"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212e9618912b45d36a355d",
    "number": 12079,
    "body": "This worked as expected on 2.0.13 (and earlier) and fails on 3.0.x currently\n",
    "head_branch": "config-adapter-ini-with-constants",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212e9818912b45d36a355e",
    "number": 12078,
    "body": "This worked as expected on 2.0.13 (and earlier) and fails on 3.0.x currently\n",
    "head_branch": "config-adapter-ini-constants",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212e9918912b45d36a355f",
    "number": 12077,
    "body": "",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12077 from sergeyklay/3.0.x\n\nTest reusing Model relations"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212e9a18912b45d36a3560",
    "number": 12076,
    "body": "Refs: #12035, #10368\n",
    "head_branch": "model/relation/multiple-keys",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12076 from sergeyklay/model/relation/multiple-keys\n\nFixed Phalcon\\Mvc\\Model\\Manager::getRelationRecords"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212e9b18912b45d36a3561",
    "number": 12072,
    "body": "Add the `this->_lastKey` update for all backend cache.\n\nRefs: #12050\n",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212e9c18912b45d36a3562",
    "number": 12070,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12070 from phecho/patch-1\n\nAmended build/.gitignore"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212e9d18912b45d36a3563",
    "number": 12069,
    "body": "",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12069 from sergeyklay/3.0.x\n\nCleaned resultset"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212e9e18912b45d36a3564",
    "number": 12068,
    "body": "Hi,\n\nI am reopening PR https://github.com/phalcon/cphalcon/pull/11975 for 3.0.x branch.\n",
    "head_branch": "3.0.x-vkey-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12068 from CrNix/3.0.x-vkey-fix\n\nFixed virtual foreign key check"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212e9f18912b45d36a3565",
    "number": 12066,
    "body": "",
    "head_branch": "model-doc-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12066 from sergeyklay/model-doc-fix\n\nFixed Model doc"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212ea018912b45d36a3566",
    "number": 12064,
    "body": "Refs: #12051 \n",
    "head_branch": "doc-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12064 from sergeyklay/doc-fix\n\nAmended prerequisite packages [ci skip]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ea118912b45d36a3567",
    "number": 12063,
    "body": "",
    "head_branch": "php7/tests/cahce/output",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12063 from sergeyklay/php7/tests/cahce/output\n\nAmended Redis tests"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212ea318912b45d36a3568",
    "number": 12052,
    "body": "",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12052 from sergeyklay/3.0.x\n\nTest #11919 issue"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212ea418912b45d36a3569",
    "number": 12048,
    "body": "ExclusionIn and InclusionIn validators not checking option \"strict\" properly. Fixed\n\nOriginal placement of check is redundant\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ea518912b45d36a356a",
    "number": 12043,
    "body": "The new resources put on the live server for this to work.  I sent them to @andresgutierrez @niden @sergeyklay.\n",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12043 from dschissler/3.0.x\n\nChange Phalcon\\Debug to use 3.0 resources."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ea618912b45d36a356b",
    "number": 12042,
    "body": "- Fixed `Phalcon\\Cache\\Backend\\Redis::flush` in order to flush cache correctly\n- Enabled and cleaned tests\n",
    "head_branch": "tests/redis",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12042 from sergeyklay/tests/redis\n\nFixed Redis Cache Backend"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212ea718912b45d36a356c",
    "number": 12041,
    "body": "I guess situations like this https://forum.phalconphp.com/discussion/12207/how-to-alter-count-logic-in-querybuilderpaginator in some high complex application,  are highly possible. \n\nWith this patch developers can specify the exact number of total results ( by performing a query of their own before that )  without build-ed in counter being fired. \n\nMaybe another plus of this patch is sometimes people wants to count id, instead of *, with this patch they can do it the way they want without any dramatic changes to the framework itself.\n\n//other ideas: \nIt can be done by checking if the given value is_numeric, otherwise people can specify raw queries, or pass another builder, but i think it might end up being an overkill. \n\nexample usage : \n\n``` php\nuse Phalcon\\Paginator\\Adapter\\QueryBuilder;\n\n$paginator = new QueryBuilder(\n    [\n        'builder'    => $builder,\n        'limit'      => 20,\n        'page'       => $currentPage,\n        'totalCount' => $counterQuery->execute()->total_rows\n   ]\n);\n```\n",
    "head_branch": "PaginatorTotalCount",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ea818912b45d36a356d",
    "number": 12040,
    "body": "",
    "head_branch": "test/cahce/file_fresh",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12040 from sergeyklay/test/cahce/file_fresh\n\nAdded test for fresh cache state"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ea918912b45d36a356e",
    "number": 12039,
    "body": "I guess situations like this https://forum.phalconphp.com/discussion/12207/how-to-alter-count-logic-in-querybuilderpaginator in some high complex application,  are highly possible. \n\nWith this patch developers can specify the exact number of total results ( by performing a query of their own before that )  without build-ed in counter being fired. \n\nMaybe another plus of this patch is sometimes people wants to count id, instead of *, with this patch they can do it the way they want without any dramatic changes to the framework itself.\n\n//other ideas: \nIt can be done by checking if the given value is_numeric, otherwise people can specify raw queries, or pass another builder, but i think it might end up being an overkill. \n\nexample usage : \n\n```\n\npaginator   = new \\Phalcon\\Paginator\\Adapter\\QueryBuilder(\n   array(\n         \"builder\"  => $builder,\n          \"limit\" => 20,\n          \"page\"  => $currentPage,\n          \"totalCount\" => $counterQuery->execute()->total_rows\n   )\n);\n```\n",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212eaa18912b45d36a356f",
    "number": 12036,
    "body": "",
    "head_branch": "test/view/simple",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12036 from sergeyklay/test/view/simple\n\nTest set and get vars by View\\Simple"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212eab18912b45d36a3570",
    "number": 12033,
    "body": "Refs: #12031\n",
    "head_branch": "cache/backend/query_keys",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12033 from phalcon/cache/backend/query_keys\n\nFixed Phalcon\\Cache\\Backend\\Memory::queryKeys"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212eac18912b45d36a3571",
    "number": 12030,
    "body": "This PR proposes a fix for #12005, for Phalcon 3.0.x.\n\nI have only implemented this for the Uniqueness validator, because that is the only one that does a database lookup, which may need values to be converted to do the lookup..\n",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12030 from basilfx/3.0.x\n\nImplement convert option to Uniqueness validator (#12005)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212ead18912b45d36a3572",
    "number": 12029,
    "body": "",
    "head_branch": "php7/tests/session_bag",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12029 from sergeyklay/php7/tests/session_bag\n\nEnable Session Bag test"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212eae18912b45d36a3573",
    "number": 12028,
    "body": "",
    "head_branch": "php7/tests/firephp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12028 from sergeyklay/php7/tests/firephp\n\nEnable Firephp test"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212eb018912b45d36a3574",
    "number": 12027,
    "body": "",
    "head_branch": "php7/tests/cache",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12027 from sergeyklay/php7/tests/cache\n\nEnable File Cache test with Output Frontend"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212eb118912b45d36a3575",
    "number": 12026,
    "body": "",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12026 from sergeyklay/3.0.x\n\nCleaned Validation::rules"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212eb218912b45d36a3576",
    "number": 12024,
    "body": "",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12024 from sergeyklay/3.0.x\n\nInstall igbinary for php 7"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212eb318912b45d36a3577",
    "number": 12023,
    "body": "",
    "head_branch": "3.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12023 from sergeyklay/3.0.x\n\nFixed phpize path"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212eb518912b45d36a3578",
    "number": 12021,
    "body": "Refs: #12022\n",
    "head_branch": "mvc/view/test",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212eb618912b45d36a3579",
    "number": 12020,
    "body": "",
    "head_branch": "2.1.x-php7pg",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12020 from Jurigag/2.1.x-php7pg\n\nEnable back postgresql tests on php 7."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212eb718912b45d36a357a",
    "number": 12019,
    "body": "",
    "head_branch": "php7/postgresql",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212eb818912b45d36a357b",
    "number": 12018,
    "body": "",
    "head_branch": "2.1.x-php7pg",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212eb918912b45d36a357c",
    "number": 12017,
    "body": "This PR proposes a fix for #12005.\n\nI have only implemented this for the Uniqueness validator, because that is the only one that does a database lookup, which may need values to be converted to do the lookup.\n",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ec018912b45d36a357d",
    "number": 12016,
    "body": "",
    "head_branch": "3.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Update PhalconCssminOptimizer.php"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ec118912b45d36a357e",
    "number": 12015,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12015 from sergeyklay/2.1.x\n\nTune up Travis CI build"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ec218912b45d36a357f",
    "number": 12014,
    "body": "",
    "head_branch": "validation-dry-rules",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12014 from SidRoberts/validation-dry-rules\n\nValidation::rules() now uses reuses add()"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ec318912b45d36a3580",
    "number": 12013,
    "body": "",
    "head_branch": "loader-arrays",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12013 from SidRoberts/loader-arrays\n\nCertain properties in Loader/Validation are now definitely always arrays"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212ec418912b45d36a3581",
    "number": 12012,
    "body": "Refs: #12010\n",
    "head_branch": "phalcon/mvc/collection/find_by_id",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12012 from sergeyklay/phalcon/mvc/collection/find_by_id\n\nAdded check if a id in a valid format to the Collection::findById"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212ec618912b45d36a3582",
    "number": 12011,
    "body": "Refs: #12008\n",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12011 from sergeyklay/2.1.x\n\nDropped support of Oracle"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212ec718912b45d36a3583",
    "number": 12009,
    "body": "Refs #12008, https://github.com/phalcon/incubator/pull/647\n",
    "head_branch": "oracle",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12009 from sergeyklay/oracle\n\nDropped support of Oracle"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212ec918912b45d36a3584",
    "number": 12007,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12007 from sergeyklay/2.1.x\n\nCleanup Phalcon\\Db\\AdapterInterface::connect"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212eca18912b45d36a3585",
    "number": 12006,
    "body": "Not sure if it won't break any app.\n",
    "head_branch": "2.1.x-acl",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12006 from Jurigag/2.1.x-acl\n\nFix #12004"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212ecb18912b45d36a3586",
    "number": 12003,
    "body": "Keeping the interface/verbiage the same, renamed isSoapRequest to isSoap and isSecureRequest to isSecure. Left the existing functions as aliases (to be removed later on)\n",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #12003 from niden/2.1.x\n\nRenamed isSoapRequest to isSoap and isSecureRequest to isSecure"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212ecc18912b45d36a3587",
    "number": 11996,
    "body": "Fixes issue #10368\n**Issue description:** Relations are not working properly when using multiple columns to join models by different field names.\n**Example:**\n`$this->hasOne(['user_id', 'client_id'], 'SomeModel', ['user_id_2', 'client_id']);`\n",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ecd18912b45d36a3588",
    "number": 11990,
    "body": "Hi, \n\nhere is the PR review for issue when merging conditions inside find parameters.\nThe problem was what brackets weren't generated around the second parameter of the AND expression, thus generating logically invalid conditions in some cases.\n\nRefs #11987\n",
    "head_branch": "2.1.x-mergeFindParameters",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11990 from CrNix/2.1.x-mergeFindParameters\n\nFix for issue #11987 - merging conditions in manager.zep _mergeFindParameters method"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ece18912b45d36a3589",
    "number": 11986,
    "body": "",
    "head_branch": "experiment-2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11986 from zamronypj/experiment-2.1.x\n\nAdd setContentlength() method to Phalcon\\Http\\Response"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212ecf18912b45d36a358a",
    "number": 11985,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ed018912b45d36a358b",
    "number": 11984,
    "body": "Refs #10398\n",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11984 from sergeyklay/2.1.x\n\nFixed Phalcon\\Forms\\Form::getValue"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212ed118912b45d36a358c",
    "number": 11983,
    "body": "Currently if you call a relation with CamelCase it will make a new fetch every and not pull the one from memory, this hapens even for alias in CamelCase.\n\ni.e. $parts->robot != $parts->Robot\n\nRefs #10800, #11726\n",
    "head_branch": "Issue-10800",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11983 from rudiservo/Issue-10800\n\nProposed Fix for Issue #10800"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212ed218912b45d36a358d",
    "number": 11982,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11982 from sergeyklay/2.1.x\n\nCleanup form test"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212ed318912b45d36a358e",
    "number": 11981,
    "body": "The event still is not able to be listened to because the connect function is called in the adapter constructor and so the events manager is unable to catch this early event. This event is being fired in the correct place though so future commits should be able to resolve this.\n",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ed418912b45d36a358f",
    "number": 11980,
    "body": "The event still is not able to be listened to because the `connect` function is called in the adapter constructor and so the events manager is unable to catch this early event.  This event is being fired in the correct place though so future commits should be able to resolve this.\n",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ed518912b45d36a3590",
    "number": 11977,
    "body": "Lets say we have a form for adding a product. Now this product has a type, and based on the type some of the fields are used, other are not. What I do is create 1 form class no matter what the type is and currently we have to perform the same check twice :\n\n```\nif ($product_type === \"whatever\" ) {\n//add the field in the form\n}\n\n.... \n\nand then the same in our view\nif ($product_type === \"whatever\" ) {\n//display the field\n}\n```\n\nprobably you are saying yo yourself that we have to do the same with this implementation, and you are right, but we can skip cases like this :\n\n```\nif ($product_type === \"car\"  || $product_type === \"bike\"  || $product_type === \"boat\")\n```\n\nafter half of out fields in our form. Also the display of the form can be dictated from form class only.\n",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ed618912b45d36a3591",
    "number": 11976,
    "body": "",
    "head_branch": "simple-events",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ed818912b45d36a3592",
    "number": 11975,
    "body": "Hi,\n\nI believe I have fixed the problem with virtual foreign key consisting of only single column. When allowNulls option was set to TRUE and such column/attribute was set to a valid value (was not NULL) no check for the existence of the related record was generated and it crashed on PDO Exception. Hence no Phalcon validation message was added to the model.\n\nUnfortunately I do not have working copy of Zephyr compiler right now and cannot check the code or write proper test.\nBut my PR is a fix of a single typo so can anybody check it?\n\nThank you\n",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ed918912b45d36a3593",
    "number": 11974,
    "body": "Hi,\n\nI believe I have fixed the problem with virtual foreign key consisting of only single column. When allowNulls option was set to TRUE and such column/attribute was set to a valid value (was not NULL) no check for the existence of the related record was generated and it crashed on PDO Exception. Hence no Phalcon validation message was added to the model.\n\nUnfortunately I do not have working copy of Zephyr compiler right now and cannot check the code or write proper test.\nBut my PR is a fix of a single typo so can anybody check it?\n\nThank you\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212eda18912b45d36a3594",
    "number": 11971,
    "body": "This PR adds support for validating uniqueness of NULL values, including two tests.\n\nExample usecase: model instances that are unique as long as they are not deleted using soft-delete behavior.\n\nFor the test cases, I added an extra field to the `robots` table, as the other fields were all `NOT NULL`. Fixed other test accordingly.\n",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11971 from basilfx/2.1.x\n\nUniqueness validator with NULL values"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212edb18912b45d36a3595",
    "number": 11970,
    "body": "In db/dialect/mysql.zep some of the describe methods query INFORMATION_SCHEMA without specifying a schema name, causing records from other schemas to be pulled through.\n\nFor example, calling viewExists(\"myview\") will return true if \"myview\" exists on any database, as opposed to only looking at the current database as expected.\n\nThis pull request adds `TABLE_SCHEMA` checks to viewExists, listViews, describeReferences and tableOptions\n",
    "head_branch": "mysql_schema_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212edc18912b45d36a3596",
    "number": 11969,
    "body": "",
    "head_branch": "config-ini",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11969 from dred86/config-ini\n\nImproved Phalcon\\Config\\Adapter\\Ini"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212edd18912b45d36a3597",
    "number": 11967,
    "body": "PR #11769 for 2.1.x branch\n",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ede18912b45d36a3598",
    "number": 11965,
    "body": "",
    "head_branch": "phalcon/security/test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11965 from sergeyklay/phalcon/security/test\n\nCleanup SecurityTest"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212edf18912b45d36a3599",
    "number": 11964,
    "body": "",
    "head_branch": "security/test",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ee018912b45d36a359a",
    "number": 11954,
    "body": "i Try use for \"_cast\" return type \"-> var\" but this is the error:\n\n```\nZephir\\CompilerException: Returning type: bool but this type is not compatible with return-type hints declared in the method in /var/www/github/phalcon/config-ini/cphalcon/phalcon/config/adapter/ini.zep on line 141\n\n                        return true;\n        ---------------------------^\n```\n",
    "head_branch": "config-ini",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ee118912b45d36a359b",
    "number": 11951,
    "body": "As per issue #11940 I have added a getter to get definition, for the LazyLoader (Phalcon\\Mvc\\Micro\\LazyLoader) class\n",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11951 from Mechzeit/2.1.x\n\nMicro LazyLoader now has a getter for the definition property"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212ee218912b45d36a359c",
    "number": 11950,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11950 from sergeyklay/2.1.x\n\nAmended Route methods"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212ee318912b45d36a359d",
    "number": 11949,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11949 from sergeyklay/2.1.x\n\nAmended Request doc"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ee418912b45d36a359e",
    "number": 11948,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11948 from sergeyklay/2.1.x\n\nCode  cleanup"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212ee618912b45d36a359f",
    "number": 11946,
    "body": "Refs https://github.com/phalcon/cphalcon/issues/11941\n",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11946 from sergeyklay/2.1.x\n\nFixed Phalcon\\Session\\Flash::getMessages"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212ee718912b45d36a35a0",
    "number": 11945,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11945 from sergeyklay/2.1.x\n\nImproved Travis build"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ee718912b45d36a35a1",
    "number": 11944,
    "body": "As per issue #11940 I have added a getter to get defintiion, for the LazyLoader (Phalcon\\Mvc\\Micro\\LazyLoader) class\n",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ee918912b45d36a35a2",
    "number": 11942,
    "body": "#11941\n",
    "head_branch": "bug_11941",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212eea18912b45d36a35a3",
    "number": 11938,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11938 from sergeyklay/2.1.x\n\nFixed PHPDoc (in order to generate valid stub)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212eeb18912b45d36a35a4",
    "number": 11937,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11937 from sergeyklay/2.1.x\n\nRefactrored View Simple test"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212eec18912b45d36a35a5",
    "number": 11936,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11936 from sergeyklay/2.1.x\n\nCleanup Views"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212eed18912b45d36a35a6",
    "number": 11935,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11935 from sergeyklay/2.1.x\n\nCleaned & minor improved File cache backend"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212eee18912b45d36a35a7",
    "number": 11933,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11933 from sergeyklay/2.1.x\n\nStandardized Phalcon\\Cache\\BackendInterface::get"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212eef18912b45d36a35a8",
    "number": 11932,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11932 from sergeyklay/2.1.x\n\nPHP 7 support"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212ef018912b45d36a35a9",
    "number": 11931,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11931 from sergeyklay/2.1.x\n\nUpdated Travis build"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ef118912b45d36a35aa",
    "number": 11929,
    "body": "Fixed `Phalcon\\Validation::appendMessage` to allow append message to the empty stack [#10405](https://github.com/phalcon/cphalcon/issues/10405)\n",
    "head_branch": "validation/appendMessage",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11929 from sergeyklay/validation/appendMessage\n\nFixed Validation::appendMessage"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212ef218912b45d36a35ab",
    "number": 11927,
    "body": "Refs #11215\n",
    "head_branch": "text/dynamic",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11927 from sergeyklay/text/dynamic\n\nFixed Phalcon\\Text:dynamic() to allow custom separator"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212ef318912b45d36a35ac",
    "number": 11925,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11925 from sergeyklay/2.1.x\n\nRefactored Router tests"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212ef418912b45d36a35ad",
    "number": 11924,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11924 from sergeyklay/2.1.x\n\nFixed matching host name by Route::handle when using port on current host name"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212ef518912b45d36a35ae",
    "number": 11921,
    "body": "- Now `Request::getHttpHost` always return host name or empty string\n- Optionally `Request::getHttpHost` can validate and clean host name\n- Added `Request::getPort`. To get information about the port on which the request is made\n- Added `Request::setStrictHostCheck` and `Request::isStrictHostCheck` to manage strict validation of host name\n- Updated `Phalcon\\Http\\RequestInterface`\n\n`Request::getHttpHost` trying to find host name in following order:\n- `$_SERVER['HTTP_HOST']`\n- `$_SERVER['SERVER_NAME']`\n- `$_SERVER['SERVER_ADDR']`\n\n<br>_**Note**: validation and cleaning has a negative performance impact because they uses regular expressions._\n\n``` php\nuse Phalcon\\Http\\Request;\n\n$request = new Request;\n\n$_SERVER['HTTP_HOST'] = 'example.com';\n$request->getHttpHost(); // example.com\n\n$_SERVER['HTTP_HOST'] = 'example.com:8080';\n$request->getHttpHost(); // example.com:8080\n\n$request->setStrictHostCheck(true);\n$_SERVER['HTTP_HOST'] = 'ex=am~ple.com';\n$request->getHttpHost(); // throws UnexpectedValueException\n\n// The Request::_strictHostCheck is still true\n$_SERVER['HTTP_HOST'] = 'ExAmPlE.com';\n$request->getHttpHost(); // example.com\n\n$request->setStrictHostCheck(false);\n$_SERVER['HTTP_HOST'] = 'ExAmPlE.com';\n$request->getHttpHost(); // ExAmPlE.com\n```\n\n<hr>\n\nFixes #2573\n",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11921 from sergeyklay/2.1.x\n\nRefactored Phalcon\\Http\\Request"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212ef618912b45d36a35af",
    "number": 11920,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11920 from sergeyklay/2.1.x\n\nAmended support of HTTP methods"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212ef718912b45d36a35b0",
    "number": 11916,
    "body": "In some cases (for example when `PHP_SAPI === cli`) the `Request::getHttpHost` can return only `:`\n",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11916 from sergeyklay/2.1.x\n\nFixed Route::handle"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212ef818912b45d36a35b1",
    "number": 11915,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11915 from sergeyklay/2.1.x\n\nFixed getting host name on Router::handle"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212ef918912b45d36a35b2",
    "number": 11914,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212efa18912b45d36a35b3",
    "number": 11913,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212efb18912b45d36a35b4",
    "number": 11911,
    "body": "",
    "head_branch": "2.1.x-apcu",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11911 from Jurigag/2.1.x-apcu\n\nInstall apcu_bc-beta on php 7 tests"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212efc18912b45d36a35b5",
    "number": 11910,
    "body": "",
    "head_branch": "2.1.x-apcu",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212efd18912b45d36a35b6",
    "number": 11899,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11899 from sergeyklay/2.1.x\n\nFixed misspelling"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212efe18912b45d36a35b7",
    "number": 11898,
    "body": "Refs https://github.com/phalcon/cphalcon/issues/10396\n",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11898 from sergeyklay/2.1.x\n\nAdded optional custom delimiter for Text::camelize/uncamelize"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212eff18912b45d36a35b8",
    "number": 11897,
    "body": "",
    "head_branch": "2.1.x-config",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11897 from Jurigag/2.1.x-config\n\nFix config.zep for php7"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f0118912b45d36a35b9",
    "number": 11892,
    "body": "",
    "head_branch": "config-ini",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f0218912b45d36a35ba",
    "number": 11891,
    "body": "New class with tools for sending mails\n",
    "head_branch": "mailer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f0318912b45d36a35bb",
    "number": 11890,
    "body": "Refs #11448\n## Use case 1\n\n``` php\n$flash = new Phalcon\\Flash\\Session;\n\n$di = new Phalcon\\Di;\n$di->setShared('escaper', new Phalcon\\Escaper);\n\n$flash->setDI($di);\n\n$flash->success(\"<script>alert('This will execute as JavaScript!')</script>\");\necho $flash->output();\n// <div class=\"successMessage\">&lt;script&gt;alert(&#039;This will execute as JavaScript!&#039;)&lt;/script&gt;</div>\n```\n## Use case 2\n\n``` php\n$flash = new Phalcon\\Flash\\Session;\n$flash->setEscaperService(new Phalcon\\Escaper);\n\n$flash->success(\"<script>alert('This will execute as JavaScript!')</script>\");\necho $flash->output();\n// <div class=\"successMessage\">&lt;script&gt;alert(&#039;This will execute as JavaScript!&#039;)&lt;/script&gt;</div>\n```\n\n<hr>\n\n``` php\n$flash->setAutoescape(true); // Enable the autoescape mode in generated html\n$flash->setAutoescape(false); // Disable the autoescape mode in generated html\n$flash->getAutoescape(); // Returns the autoescape mode in generated html\n\n$flash->setEscaperService(Phalcon\\EscaperInterface $escaperService); // Sets the Escaper Service\n$flash->getEscaperService(); // Returns the Escaper Service (always)\n```\n",
    "head_branch": "autoescape-flash",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11890 from sergeyklay/autoescape-flash\n\nAdded ability to autoescape Flash messages"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212f0418912b45d36a35bc",
    "number": 11888,
    "body": "",
    "head_branch": "2.1.x-validation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11888 from Jurigag/2.1.x-validation\n\nAdded `Phalcon\\Validation\\CombinedFieldsValidator`"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212f0518912b45d36a35bd",
    "number": 11886,
    "body": "I've modified Ini.zep \n",
    "head_branch": "custom",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f0618912b45d36a35be",
    "number": 11885,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11885 from sergeyklay/2.1.x\n\nMerged fixed from 2.0.x"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212f0718912b45d36a35bf",
    "number": 11883,
    "body": "#11857\n#10655\n",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11883 from sergeyklay/2.1.x\n\nMerged Volt Macros fix from 2.0.x"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212f0918912b45d36a35c0",
    "number": 11882,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11882 from sergeyklay/2.1.x\n\nTrying to install apcu on PHP 5.6"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f0a18912b45d36a35c1",
    "number": 11881,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11881 from sergeyklay/2.1.x\n\nCleanup PresenceOf test"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212f0b18912b45d36a35c2",
    "number": 11880,
    "body": "It should be `this->_accessList` 🎱 \n",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11880 from hinablue/2.1.x\n\naddResourceAccess and dropResourceAccess check the wrong accessList"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f0c18912b45d36a35c3",
    "number": 11878,
    "body": "It should be `this->_accessList`.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f0d18912b45d36a35c4",
    "number": 11876,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11876 from sergeyklay/2.1.x\n\nRefactored Validation/Message/Group"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212f0e18912b45d36a35c5",
    "number": 11875,
    "body": "Fixed issue #11374\n",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11875 from sergeyklay/2.1.x\n\nPhalcon\\Validation\\Validator\\Digit now correctly validates digits"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212f0f18912b45d36a35c6",
    "number": 11874,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11874 from tembem/2.1.x\n\nFIX #11862 oracle lastinsertid should return int instead of array"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212f1018912b45d36a35c7",
    "number": 11873,
    "body": "Fixed issue #11386\n",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11873 from sergeyklay/2.1.x\n\nPhalcon\\Validation\\Validator\\Alpha now correctly validates non-ASCII characters"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212f1118912b45d36a35c8",
    "number": 11872,
    "body": "https://github.com/phalcon/cphalcon/issues/11444\nhttps://github.com/phalcon/cphalcon/pull/11445\nhttps://github.com/phalcon/cphalcon/issues/11446\n",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11872 from sergeyklay/2.1.x\n\nFixed flush redis database"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f1218912b45d36a35c9",
    "number": 11871,
    "body": "https://github.com/phalcon/cphalcon/issues/11501\n",
    "head_branch": "Phalcon/Mvc/Model/MetaData/Redis",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11871 from phalcon/Phalcon/Mvc/Model/MetaData/Redis\n\nAmended Phalcon\\Mvc\\Model\\MetaData\\Redis doc"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f1318912b45d36a35ca",
    "number": 11870,
    "body": "https://github.com/phalcon/cphalcon/issues/11501\n",
    "head_branch": "Phalcon/Session/Adapter/Redis",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11870 from phalcon/Phalcon/Session/Adapter/Redis\n\nAmended Phalcon\\Session\\Adapter\\Redis doc"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f1418912b45d36a35cb",
    "number": 11869,
    "body": "https://github.com/phalcon/cphalcon/issues/11501\n",
    "head_branch": "Phalcon/Cache/Backend/Redis",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11869 from phalcon/Phalcon/Cache/Backend/Redis\n\nAmended Phalcon\\Cache\\Backend\\Redis doc"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f1518912b45d36a35cc",
    "number": 11867,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11867 from sergeyklay/2.1.x\n\nClear logger queue at commit"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f1618912b45d36a35cd",
    "number": 11866,
    "body": "",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11866 from mruz/patch-2\n\nDump, skip debuging di, fix detecting private/protected properties"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212f1718912b45d36a35ce",
    "number": 11865,
    "body": "",
    "head_branch": "Phalcon/Cache/Frontend/Msgpack",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11865 from phalcon/Phalcon/Cache/Frontend/Msgpack\n\nCleanup Msgpack doc"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212f1918912b45d36a35cf",
    "number": 11864,
    "body": "Add \"INI_SCANNER_TYPED\" in parse_ini_file\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f1a18912b45d36a35d0",
    "number": 11861,
    "body": "We use msgpack alternative to igbinary, it would be interesting add it directly into Phalcon\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11861 from dred86/patch-2\n\nCreate msgpack.zep"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212f1b18912b45d36a35d1",
    "number": 11859,
    "body": "For some situations, double encoding causes problems (f.ex. &#39; becomes &amp;#39;). Being able to disable double encoding solves this problem.\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11859 from jdrmar/patch-2\n\nAllow to set double encoding setting"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212f1c18912b45d36a35d2",
    "number": 11856,
    "body": "prefix\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f1d18912b45d36a35d3",
    "number": 11855,
    "body": "prefix\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f1e18912b45d36a35d4",
    "number": 11853,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11853 from sergeyklay/2.1.x\n\nFixed issue #11733"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212f1f18912b45d36a35d5",
    "number": 11851,
    "body": "",
    "head_branch": "php7-support",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f2018912b45d36a35d6",
    "number": 11849,
    "body": "There are cases where you have helper files which don't have any classes. In composer, you add something like this to add them - \n\n``` javascript\n{\n...\n     \"autoload\": {\n         \"files\": [\"src/blah.php\"],\n     },\n...\n}\n```\n\nThe changes below will allow something like this - \n\n``` php\n$loader = new Loader();\n$loader->registerFiles(['src/blah.php']);\n```\n\n`blah.php` will added using require and all the contents will be usable as normal.\n\nThis indirectly addresses -\nhttps://github.com/phalcon/cphalcon/issues/2533\nhttps://github.com/guzzle/guzzle/issues/707\n",
    "head_branch": "load-files-using-phalcon-loader",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11849 from rahuldroy/load-files-using-phalcon-loader\n\nAdded ability to add files using \\Phalcon\\Loader"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212f2118912b45d36a35d7",
    "number": 11846,
    "body": "Allow setting whether double encoding takes place when escaping values.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f2218912b45d36a35d8",
    "number": 11845,
    "body": "I created a pull request for the wrong branch before :| Hopefully this is good now.\n",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11845 from CameronHall/2.1.x\n\nAmended Code Sample"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f2318912b45d36a35d9",
    "number": 11844,
    "body": "This should make it look more like PHP :)\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f2418912b45d36a35da",
    "number": 11841,
    "body": "There are cases where you have helper files which don't have any classes. In composer, you add something like this to add them - \n\n``` javascript\n{\n...\n     \"autoload\": {\n         \"files\": [\"src/blah.php\"],\n     },\n...\n}\n```\n\nThe changes below will allow something like this - \n\n``` php\n$loader = new Loader();\n$loader->registerFiles(['src/blah.php']);\n```\n\n`blah.php` will added using require and all the contents will be usable as normal.\n\nThis indirectly addresses -\nhttps://github.com/phalcon/cphalcon/issues/2533\nhttps://github.com/guzzle/guzzle/issues/707\n",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f2518912b45d36a35db",
    "number": 11840,
    "body": "These keys are not used anywhere further in the code. \nWith the default setting as true and the use of array in MongoDb ids (as allowed through the use of `Phalcon\\Mvc\\Collection->useImplicitObjectIds` ), it can lead to an \"Array to string conversion\" notice.\nSee also #11134 and [the comment about the use_keys parameter](http://php.net/iterator_to_array#use_keys).\n",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11840 from challet/patch-4\n\nCollection: don't keep the raw keys when converting to array"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212f2718912b45d36a35dc",
    "number": 11838,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11838 from alexprowars/2.1.x\n\nFixed issue #11823"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212f2818912b45d36a35dd",
    "number": 11836,
    "body": "- Added `Phalcon\\Security::hasLibreSsl` \n- Added `Phalcon\\Security::getSslVersionNumber`\n",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11836 from sergeyklay/2.1.x\n\nAmended Phalcon\\Security"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212f2918912b45d36a35de",
    "number": 11835,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11835 from sergeyklay/2.1.x\n\nUpdated tests proxies"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f2a18912b45d36a35df",
    "number": 11834,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11834 from sergeyklay/2.1.x\n\nFixed the Session write callback"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212f2b18912b45d36a35e0",
    "number": 11833,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11833 from sergeyklay/2.1.x\n\nThe cache backend adapters now returns boolean on call save"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212f2c18912b45d36a35e1",
    "number": 11832,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11832 from sergeyklay/2.1.x\n\nAdded Http\\Resposne 510 status code"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f2d18912b45d36a35e2",
    "number": 11826,
    "body": "What i changed in this commit:\n- Added option for adding multiple fields to validate/filters with one(same) validator/filter - also it checking for messages, labels etc, so if we have 10 `Phalcon\\Validation\\Validator\\PresenceOf` validators - we can shorten it to one add method and use array of fields, messages etc, it's working for every option except `model` in `Phalcon\\Validation\\Validator\\Uniqueness` validator(if i missed something then write it here)\n- In `Phalcon\\Validation\\Validator\\Uniqueness::isUniqueness()` i added getting Entity from validation if we don't provide any `model` so we can get rid of \"unlogical\" `model => $this` when we validating from model\n- Changed checking for strict in `Phalcon\\Validation\\Validator\\ExclusionIn` and `Phalcon\\Validation\\Validator\\InclusionIn` - it was checking for boolean value before getting it, i think it was wrong behaviour\n\nWhat needs to be done:\n- [x] tests\n- [x] update documentation in phpdoc (examples)\n- [ ] performance tests ?\n",
    "head_branch": "2.1.x-validation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11826 from Jurigag/2.1.x-validation\n\nChanges to validation"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212f2e18912b45d36a35e3",
    "number": 11825,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11825 from Green-Cat/patch-1\n\nFixes typo in Phalcon\\Security\\Random"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212f2f18912b45d36a35e4",
    "number": 11822,
    "body": "",
    "head_branch": "cleanup_php_doc",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11822 from phalcon/cleanup_php_doc\n\nCleanup Model's PHPdoc [ci skip]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f3018912b45d36a35e5",
    "number": 11821,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f3118912b45d36a35e6",
    "number": 11812,
    "body": "The same as #11796 but for 2.0.x branch\n",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f3218912b45d36a35e7",
    "number": 11811,
    "body": "",
    "head_branch": "2.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11811 from phalcon/2.0.x\n\nUpdated CHANGELOG.md [ci skip]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f3318912b45d36a35e8",
    "number": 11810,
    "body": "",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11810 from sergeyklay/2.0.x\n\nUpdated CHANGELOG.md [ci skip]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f3418912b45d36a35e9",
    "number": 11806,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11806 from Besedin86/2.1.x\n\n[2.1.x] Fixed endless loop in Phalcon\\Mvc\\Model\\Resultset::update()"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212f3618912b45d36a35ea",
    "number": 11804,
    "body": "",
    "head_branch": "2.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11804 from phalcon/2.0.x\n\n2.0.13"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212f3718912b45d36a35eb",
    "number": 11802,
    "body": "Added a global ORM setting that allows to try to find a key in column map case-insensitively if it was not found by an exact match at first time. Can be a real fix for many Oracle bugs, because Phalcon does not expect that column names are converted to uppercase by Oracle in the query result.\n\nThis is a real fix for #10532, because orm.ignore_unknown_columns just suppresses error, while _groupResult will return NULL which may have unintended consequences, and of course Model::count() will not work in this case. This may be a fix for #1652, #760, #10490, but did not check all those cases yet.\n",
    "head_branch": "2.1.x-orm-colmap-ci",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f3818912b45d36a35ec",
    "number": 11800,
    "body": "In oracle dialect it is \"TABLE alias\", without the AS. AS is only used for variable aliasing.\nI don't think it is possible without copying code from parent, because you need to remove the \"AS\" part.\n",
    "head_branch": "2.1.x-oracle-alias-patch",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11800 from Skydev0h/2.1.x-oracle-alias-patch\n\nRemove \"AS\" in prepareTable for Oracle dialect"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212f3918912b45d36a35ed",
    "number": 11798,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11798 from Besedin86/2.1.x\n\n[2.1.x] Typo in changelog"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f3a18912b45d36a35ee",
    "number": 11796,
    "body": "In some cases it's useful to have `getJoins()` method in Query Builder to check which joins are already present in Builder. \n\nUsage:\n\n``` php\n$queryBuilder = new Phalcon\\Mvc\\Model\\Query\\Builder();\n$queryBuilder->from(Robots::class);\n$queryBuilder->leftJoin(Parts::class,sprintf('%s.id = %s.robot_id',Robots::class,Parts::class));\n\n...\n\n$queryBuilder->leftJoin(Parts::class,sprintf('%s.id = %s.robot_id',Robots::class,Parts::class)); \n$result = $queryBuilder->getQuery()->execute(); // ooops... it will be error here\n\n```\n\nTherefore we can use `getJoins()` to see which joins are present in Builder to avoid this situation.\n",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11796 from Besedin86/2.1.x\n\n[NFR] getJoins() method in \\Phalcon\\Mvc\\Model\\Query\\Builder"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212f3c18912b45d36a35ef",
    "number": 11795,
    "body": "",
    "head_branch": "2.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11795 from phalcon/2.0.x\n\n2.0.12"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212f3d18912b45d36a35f0",
    "number": 11786,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11786 from sergeyklay/2.1.x\n\nUsing a settable variable for the Mongo Connection Service name"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212f3e18912b45d36a35f1",
    "number": 11782,
    "body": "",
    "head_branch": "crypt_cleanup",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11782 from phalcon/crypt_cleanup\n\nTidied up the Crypt"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212f3f18912b45d36a35f2",
    "number": 11778,
    "body": "",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11778 from sergeyklay/2.0.x\n\nUsed stable Zephir"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f4018912b45d36a35f3",
    "number": 11777,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11777 from sergeyklay/2.1.x\n\nFixed Config tests"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212f4118912b45d36a35f4",
    "number": 11776,
    "body": "",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11776 from sergeyklay/2.0.x\n\nFixed ConfigTest"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f4218912b45d36a35f5",
    "number": 11775,
    "body": "",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11775 from sergeyklay/2.0.x\n\nAmended tests for Volt::callMacro"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f4318912b45d36a35f6",
    "number": 11774,
    "body": "Ability to globally disable PHQL implicit joining based on defined model relationship keys.\n",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f4418912b45d36a35f7",
    "number": 11769,
    "body": "Fixes #11759 \n",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f4518912b45d36a35f8",
    "number": 11766,
    "body": "",
    "head_branch": "relations_tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11766 from sergeyklay/relations_tests\n\nFixed ModelsRelationsTest"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f4618912b45d36a35f9",
    "number": 11765,
    "body": "",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixed Volt::callMacro (#11765)\n\n* Fixed issue #11745\r\n\r\n* Amended Volt tests\r\n\r\n* Small cleanup"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212f4718912b45d36a35fa",
    "number": 11764,
    "body": "In the current implementation Phalcon\\Flash it is impossible to transfer an array to the method `success()`. It is the strange and differs from behavior of other methods. This patch corrects it.\nJust as the https://github.com/phalcon/cphalcon/pull/11761\n",
    "head_branch": "phalcon-flash-fixed2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11764 from Studentsov/phalcon-flash-fixed2\n\nFix method's argument in Phalcon\\Flash [2.0.x]"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f4818912b45d36a35fb",
    "number": 11761,
    "body": "In the current implementation Phalcon\\Flash it is impossible to transfer an array to the method `success()`. It is the strange and differs from behavior of other methods. This patch corrects it.\n",
    "head_branch": "phalcon-flash-fixed",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11761 from Studentsov/phalcon-flash-fixed\n\nFix method's argument in Phalcon\\Flash"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f4918912b45d36a35fc",
    "number": 11754,
    "body": "",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11754 from sergeyklay/2.0.x\n\nFixed CHANGELOG.md"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f4a18912b45d36a35fd",
    "number": 11753,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11753 from sergeyklay/2.1.x\n\nMinor tests additions"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212f4b18912b45d36a35fe",
    "number": 11750,
    "body": "#11715\n",
    "head_branch": "11715-mvc-url-regexp-bug",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11750 from Newbas/11715-mvc-url-regexp-bug\n\nUrl regexp fix"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212f4d18912b45d36a35ff",
    "number": 11742,
    "body": "",
    "head_branch": "2.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11742 from phalcon/2.0.x\n\n2.0.11"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212f4f18912b45d36a3600",
    "number": 11741,
    "body": "The contents of this PR greatly improves stability running Phalcon on PHP7. There are still couple of bugs that are causing segfaults. On the other hand, the number of memory leaks have been reduced nearly to zero when running on ZendEngine3.\n- PHQL/Volt/Annotations parsers have been rewritten to take advantage of the PHP7 memory layout\n- Mvc\\Url now passes its tests (fixed phalcon_replace_paths)\n- Code making use of the `iterator` optimizer has been rewritten to avoid memory corruption (still researching the root cause)\n- Fixed dependencies to external extensions\n- Disabled tests that won't work due to unsupported extensions for php7.\n",
    "head_branch": "php7-parsers",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11741 from phalcon/php7-parsers\n\nPHP7 compatibility improvements"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212f5018912b45d36a3601",
    "number": 11734,
    "body": "",
    "head_branch": "php7-parsers",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11734 from sergeyklay/php7-parsers\n\nRight way to install APC(u) on PHP 7"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f5118912b45d36a3602",
    "number": 11732,
    "body": "",
    "head_branch": "php7-parsers",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11732 from sergeyklay/php7-parsers\n\nFixed tests related misspelling"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f5218912b45d36a3603",
    "number": 11731,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f5318912b45d36a3604",
    "number": 11730,
    "body": "when  i use session, modelsCache and modelsMetadata service, i found phalcon create multi redis handle;\nredis of session use Backend redis handle, but redis of metadata create a new instance in construct, can't use exist reids. so i modify phalcon/mvc/model/metadata/redis.zep:\n\n> if \\Phalcon\\Cache\\Backend\\Redis handle exist in options, use it, \n>    if not exist, it create a new one.\n",
    "head_branch": "redis-share",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f5418912b45d36a3605",
    "number": 11729,
    "body": "Some time ago I added the ability to disable implicit joins on the query level and this completes that work by allowing it to be globally disabled.\n",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f5518912b45d36a3606",
    "number": 11727,
    "body": "Reference: https://forum.phalconphp.com/discussion/6347/canceling-route-execution-with-micros-before-middleware\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f5718912b45d36a3607",
    "number": 11724,
    "body": "params and matches are bind to each route, they should not suvive a loop, which may interfere in next loop\n",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11724 from phwoolcon/2.0.x\n\nReset variables(params and matches) between loops in Router::handle()"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212f5818912b45d36a3608",
    "number": 11723,
    "body": "params and matches are bind to each route, they should not suvive a loop, which may interfere in next loop\n",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11723 from phwoolcon/2.1.x\n\nReset variables(params and matches) between loops in Router::handle()"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212f5918912b45d36a3609",
    "number": 11721,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f5a18912b45d36a360a",
    "number": 11720,
    "body": "- Fixed undefined method call `Phalcon\\Mvc\\Collection\\Manager::getConnectionService`\n\nSame as [2.0.x] https://github.com/phalcon/cphalcon/pull/11719\n",
    "head_branch": "2.1.x-fix-collection-mgr",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11720 from AlexKomrakov/2.1.x-fix-collection-mgr\n\n[2.1.x] Fix undefined method call ::getConnectionService"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212f5b18912b45d36a360b",
    "number": 11719,
    "body": "- Fixed undefined method call `Phalcon\\Mvc\\Collection\\Manager::getConnectionService`\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11719 from AlexKomrakov/patch-2\n\n[2.0.x] Fix undefined method call ::getConnectionService"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212f5c18912b45d36a360c",
    "number": 11718,
    "body": "Fix php error \"Call to undefined method Phalcon\\Mvc\\Collection\\Manager::getconnectionservice()\"\nAnd Cphalcon undefined method call https://github.com/phalcon/cphalcon/blob/master/phalcon/mvc/collection.zep#L259\n\nNow it works in accordance with the documentation: https://docs.phalconphp.com/ru/latest/api/Phalcon_Mvc_Collection.html\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f5d18912b45d36a360d",
    "number": 11717,
    "body": "Fix php error \"Call to undefined method Phalcon\\Mvc\\Collection\\Manager::getconnectionservice()\"\nAnd Cphalcon undefined method call https://github.com/phalcon/cphalcon/blob/master/phalcon/mvc/collection.zep#L259\n\nNow it works in accordance with the documentation: https://docs.phalconphp.com/ru/latest/api/Phalcon_Mvc_Collection.html\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f5e18912b45d36a360e",
    "number": 11716,
    "body": "Fix php error \"Call to undefined method Phalcon\\Mvc\\Collection\\Manager::getconnectionservice()\"\nAnd Cphalcon undefined method call https://github.com/phalcon/cphalcon/blob/master/phalcon/mvc/collection.zep#L259\n\nNow it works in accordance with the documentation: https://docs.phalconphp.com/ru/latest/api/Phalcon_Mvc_Collection.html\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f5f18912b45d36a360f",
    "number": 11712,
    "body": "getTempName means \"temporary\" name, not \"temporal\"\n",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11712 from quasipickle/patch-4\n\n\"temporal\" -> \"temporary\""
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212f6018912b45d36a3610",
    "number": 11710,
    "body": "This PR permits to add static closure to service resolution hence backward compatibility with Phalcon 2.0 service definition.\n",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f6118912b45d36a3611",
    "number": 11706,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11706 from sergeyklay/2.1.x\n\nMinor test fixes"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f6218912b45d36a3612",
    "number": 11705,
    "body": "",
    "head_branch": "2.1.x-callMacro",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11705 from Jurigag/2.1.x-callMacro\n\nFix Phalcon\\Mvc\\View\\Engine\\Volt::callMacro"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f6318912b45d36a3613",
    "number": 11704,
    "body": "",
    "head_branch": "2.0.x-callMacro",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11704 from Jurigag/2.0.x-callMacro\n\nFix Phalcon\\Mvc\\View\\Engine\\Volt::callMacro"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f6418912b45d36a3614",
    "number": 11702,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11702 from sergeyklay/2.1.x\n\nEnabled Memory test"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212f6518912b45d36a3615",
    "number": 11701,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f6618912b45d36a3616",
    "number": 11700,
    "body": "Old Unit tests\n\n> Tests: 347, Assertions: 7807, Skipped: 12.\n\nNew Unit tests\n\n> Tests: 346, Assertions: 7807, Skipped: 11.\n\nCodeception tests + 1\n",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11700 from sergeyklay/2.1.x\n\nEnabled Igbinary test"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212f6718912b45d36a3617",
    "number": 11699,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11699 from sergeyklay/2.1.x\n\nAdopted RandomTest for PHP 7"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f6918912b45d36a3618",
    "number": 11698,
    "body": "getTempName means _temporary_ name, not _temporal_ name.\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f6a18912b45d36a3619",
    "number": 11697,
    "body": "getTempName means _temporary_ name, not _temporal_ name\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f6b18912b45d36a361a",
    "number": 11696,
    "body": "",
    "head_branch": "query-builder-autoescape",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11696 from SidRoberts/query-builder-autoescape\n\n[RFC] Added autoescape() helper to PHQL Query Builder"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212f6c18912b45d36a361b",
    "number": 11695,
    "body": "getTempName() is the _temporary_ name, not the _temporal_ name\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f6d18912b45d36a361c",
    "number": 11691,
    "body": "(may fix #11690)\n",
    "head_branch": "query-builder-groupby",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f6e18912b45d36a361d",
    "number": 11685,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11685 from sergeyklay/2.1.x\n\nRefactored Collection ClassChange test"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212f6f18912b45d36a361e",
    "number": 11684,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11684 from sergeyklay/2.1.x\n\nRefactored Collection Behaviors test"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212f7018912b45d36a361f",
    "number": 11682,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11682 from sergeyklay/2.1.x\n\nRefactored Application test"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212f7118912b45d36a3620",
    "number": 11681,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11681 from sergeyklay/2.1.x\n\nRefactored Metadata tests"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212f7218912b45d36a3621",
    "number": 11678,
    "body": "Refs: #11362\n",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11678 from sergeyklay/2.1.x\n\nFixed issue #11340"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212f7318912b45d36a3622",
    "number": 11677,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11677 from sergeyklay/2.1.x\n\nImproved tests"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212f7418912b45d36a3623",
    "number": 11676,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11676 from sergeyklay/2.1.x\n\nFixed and refactored Apc & Xcache tests"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212f7518912b45d36a3624",
    "number": 11675,
    "body": "",
    "head_branch": "filter/add",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11675 from sergeyklay/filter/add\n\nFixed issue #11581"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212f7618912b45d36a3625",
    "number": 11673,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11673 from sergeyklay/2.1.x\n\nFixed apcu extension config"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f7718912b45d36a3626",
    "number": 11672,
    "body": "Old test was prefixed with **`y`** it disabled test\n",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11672 from sergeyklay/2.1.x\n\nRefactored and enabled file cache test"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212f7818912b45d36a3627",
    "number": 11671,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11671 from sergeyklay/2.1.x\n\nEnabled Gettext tests"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212f7918912b45d36a3628",
    "number": 11670,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11670 from sergeyklay/2.1.x\n\nFixed skipped tests"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212f7a18912b45d36a3629",
    "number": 11669,
    "body": "Removed duplicates\n",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11669 from sergeyklay/2.1.x\n\nCleaned .gitignore"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f7b18912b45d36a362a",
    "number": 11668,
    "body": "See: https://github.com/Codeception/Codeception/issues/2779\nAnd: http://codeception.com/03-05-2016/codeception-2.2.-upcoming-features.html#params\n\nHow to test Phalcon by using Docker containers? Example:\n\n``` sh\n#!/usr/bin/env bash\n\ndocker_bin=\"$(which docker.io 2> /dev/null || which docker 2> /dev/null)\"\n\n#  1) Create Phalcon Network\n#  docker network create --driver bridge phalcon_nw\n\n[ -z \"$PHP_VERSION\" ] && echo \"Need to set PHP_VERSION variable. Fox example: 'export PHP_VERSION=7'\" && exit 1;\n[ -z \"$TRAVIS_BUILD_DIR\" ] && TRAVIS_BUILD_DIR=$(cd $(dirname \"$1\") && pwd -P)/$(basename \"$1\")\n\n#  2) Run required containers inside Phalcon Network (--net=phalcon_nw)\n#  and get the corresponding names of their hosts\n[ -z \"$TEST_DB_MYSQL_HOST\" ] && TEST_DB_MYSQL_HOST=\"phalcon_mysql\"\n[ -z \"$TEST_RS_HOST\" ] && TEST_RS_HOST=\"phalcon_redis\"\n[ -z \"$TEST_MC_HOST\" ] && TEST_MC_HOST=\"phalcon_memcached\"\n[ -z \"$TEST_BT_HOST\" ] && TEST_BT_HOST=\"phalcon_beanstalk\"\n[ -z \"$TEST_DB_MONGO_HOST\" ] && TEST_DB_MONGO_HOST=\"phalcon_mongo\"\n\nchmod +x ${TRAVIS_BUILD_DIR}/tests/_ci/entrypoint.sh\n\n#  3) Run tests\n${docker_bin} run -it --rm \\\n    --entrypoint /entrypoint.sh \\\n    --privileged=true \\\n    --net=phalcon_nw \\\n    --name test-phalcon-${PHP_VERSION} \\\n    -e TEST_DB_MYSQL_DSN=\"mysql:host=${TEST_DB_MYSQL_HOST};dbname=phalcon_test\" \\\n    -e TEST_DB_MYSQL_HOST=\"${TEST_DB_MYSQL_HOST}\" \\\n    -e TEST_DB_MYSQL_PORT=3306 \\\n    -e TEST_DB_MYSQL_USER=\"root\" \\\n    -e TEST_DB_MYSQL_PASSWD=\"\" \\\n    -e TEST_DB_MYSQL_NAME=\"phalcon_test\" \\\n    -e TEST_DB_MYSQL_CHARSET=\"utf8\" \\\n    -e TEST_RS_HOST=\"${TEST_RS_HOST}\" \\\n    -e TEST_RS_PORT=6379 \\\n    -e TEST_MC_HOST=\"${TEST_MC_HOST}\" \\\n    -e TEST_MC_PORT=11211 \\\n    -e TEST_BT_HOST=\"${TEST_BT_HOST}\" \\\n    -e TEST_BT_PORT=11300 \\\n    -e TEST_DB_MONGO_HOST=\"${TEST_DB_MONGO_HOST}\" \\\n    -e TEST_DB_MONGO_PORT=27017 \\\n    -e TEST_DB_MONGO_USER='admin' \\\n    -e TEST_DB_MONGO_PASSWD='' \\\n    -e TEST_DB_MONGO_NAME='phalcon_test' \\\n    -e PHP_VERSION=\"${PHP_VERSION}\" \\\n    -v ${TRAVIS_BUILD_DIR}/tests/_ci/backtrace.sh:/backtrace.sh \\\n    -v ${TRAVIS_BUILD_DIR}/tests/_ci/entrypoint.sh:/entrypoint.sh \\\n    -v ${TRAVIS_BUILD_DIR}/vendor:/app/vendor \\\n    -v ${TRAVIS_BUILD_DIR}/codeception.yml:/app/codeception.yml \\\n    -v ${TRAVIS_BUILD_DIR}/tests:/app/tests \\\n    -v ${TRAVIS_BUILD_DIR}/ext/modules/phalcon.so:/ext/phalcon.so \\\n    phalconphp/php:${PHP_VERSION} bash\n\n```\n\n**entrypoint.sh**:\n\n``` sh\n#!/usr/bin/env bash\n\nPURPLE=\"\\e[0;35m\"\nGREEN=\"\\033[0;32m\"\nYELLOW=\"\\e[1;33m\"\nNC=\"\\033[0m\"\n\necho -e \"\\nWelcome to the Docker testing container.\"\n\nmkdir -p /tmp/phalcon\necho \"/tmp/phalcon/core-%e.%p\" | tee /proc/sys/kernel/core_pattern &> /dev/null\n\nulimit -c unlimited\n\nexport PHP_EXTENSION_DIR=`php-config --extension-dir`\n\necho -e \"If a Segmentation Fault is happens use: ${PURPLE}bash /backtrace.sh${NC}\"\necho -e \"PHP extension path: ${PURPLE}${PHP_EXTENSION_DIR}${NC}\\n\"\n\nln -s /ext/phalcon.so ${PHP_EXTENSION_DIR}/phalcon.so\n[[ \"$PHP_VERSION\" == \"7\" ]] || ln -s /app/tests/_ci/phalcon.ini /etc/php5/cli/conf.d/50-phalcon.ini;\n[[ \"$PHP_VERSION\" != \"7\" ]] || ln -s /app/tests/_ci/phalcon.ini /etc/php/7.0/cli/conf.d/50-phalcon.ini;\n\nexport PHALCON_VERSION=`php --ri phalcon | grep \"Version =\" | awk '{print $3}'`\n\necho -e \"${GREEN}Phalcon${NC}     version ${YELLOW}${PHALCON_VERSION}${NC}\"\n/app/vendor/bin/codecept --version\n\n/app/vendor/bin/codecept build &> /dev/null\n\necho -e \"\"\n/app/vendor/bin/codecept run -v\n\nresult_codecept=$?\n\nif [ ${result_codecept} -ne 0 ]; then\n  bash /backtrace.sh\n  [[ \"$PHP_VERSION\" == \"7\" ]] || exit 1;\n  # Allow failures for PHP 7\n  [[ \"$PHP_VERSION\" != \"7\" ]] || exit 0;\nfi\n\nexit 0;\n```\n\n**backtrace.sh**:\n\n``` sh\n#!/usr/bin/env bash\n\nshopt -s nullglob\nexport LC_ALL=C\n\nfor i in /tmp/phalcon/core-*.*; do\n    if [ -f \"$i\" -a \"$(file \"$i\" | grep -o 'core file')\" ]; then\n        gdb -q $(which php) \"$i\" <<EOF\nset pagination 0\nbacktrace full\ninfo registers\nx/16i \\$pc\nthread apply all backtrace\nquit\nEOF\n    fi\ndone\n```\n\n![selection_166](https://cloud.githubusercontent.com/assets/1256298/14536877/3fff5d6a-027d-11e6-8a9b-f8b1b30162b5.png)\n",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11668 from sergeyklay/2.1.x\n\nImproved test environment"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f7c18912b45d36a362b",
    "number": 11667,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11667 from sergeyklay/2.1.x\n\nImproved Random::number"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212f7d18912b45d36a362c",
    "number": 11664,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11664 from sergeyklay/2.1.x\n\nAdded ability to generate C code for PHP 7"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f7f18912b45d36a362d",
    "number": 11663,
    "body": "The lists of column types has been extended. However, not all column types conversions exist for SQLite.\n\nThis PR adds support for the additional column types. While SQLite has no statically typed columns, they have dynamic typing and use the column name for determining the type affinity. The rules are explained in [Section 2.0](http://www.sqlite.org/datatype3.html). I have chosen column names that match MySQL the most, while still adhering to the type affinity rules. This way, as little as possible information is lost when converting from SQLite to another DBMS.\n\nI also extended the dialect tests.\n\nTogether with https://github.com/phalcon/phalcon-devtools/pull/639, I have been using this patch for almost two weeks without problems. I successfully converted from MySQL -> Phalcon Devtool Migrations -> SQLite (clean migration).\n",
    "head_branch": "sqlite-data-types",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11663 from basilfx/sqlite-data-types\n\nSqlite data types"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f8018912b45d36a362e",
    "number": 11660,
    "body": "Do not merge\n",
    "head_branch": "annotation-router-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f8118912b45d36a362f",
    "number": 11659,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11659 from sergeyklay/2.1.x\n\nGet more info about skipped or incomplete tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f8218912b45d36a3630",
    "number": 11658,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11658 from sergeyklay/2.1.x\n\nTest Beanstalk connection"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212f8318912b45d36a3631",
    "number": 11657,
    "body": "Added functionality to the Criteria::FromInput method\n\ncurrent stable has no use for values that are arrays\nit wont creak current stable default funcionality since arrays are passed as \"%Array%\"\n\nso with this modification a column with more then one parameter will have OR.\n\nexample:\n\n```\nname => [\"john\", \"jon\"] \n\n ([name] like :name0: **OR** name like :name1: [bind] => [\"name0\" => \"john\", \"name1\" => \"jon\"])\n```\n\nagain nothing fancy just some added functionality.\n\nTested and working\n",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f8418912b45d36a3632",
    "number": 11656,
    "body": "Added functionality to Criteria::FromInput method to add OR when the value for a column is an array.\n\ncurrent stable example\n'name' => 'john'\nand will return\n[conditions ]=> \"[name] like :name:\" [bind] => {[\"name\" => \"%john%\"]}\n\nmy modification will accept\n'name' => ['john', 'jon']\n\nand will return\n[conditions ]=> \"[name] like :name0: OR [name] like :name1:\" [bind] => {[\"name0\" => \"%john%\", \"name1\" => \"%jon%\"]}\n\nthis will enable filtering so much easier when we want to use multiple parameters for a column.\nit wont change default behaviour and current stable breaks if value as an array name => %Array%\n",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f8518912b45d36a3633",
    "number": 11655,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11655 from sergeyklay/2.1.x\n\nCleaned Beanstalk"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f8618912b45d36a3634",
    "number": 11654,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11654 from sergeyklay/2.1.x\n\nRemoved copypasta from Beanstalk\\Job, fixed __wakeup"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212f8718912b45d36a3635",
    "number": 11653,
    "body": "",
    "head_branch": "patch-6",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11653 from SidRoberts/patch-6\n\nFixes segfault"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212f8818912b45d36a3636",
    "number": 11652,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11652 from sergeyklay/2.1.x\n\nDo not call fwrite twice on Beanstalk::put"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f8918912b45d36a3637",
    "number": 11651,
    "body": "With this ability we can define our relations using namespace aliases.\n\nIt's just loading proper models instead of throwing that some class don't exists.\n",
    "head_branch": "2.1.x-manager",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11651 from Jurigag/2.1.x-manager\n\nAdded ability for loading aliased namespaces in manager"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212f8a18912b45d36a3638",
    "number": 11649,
    "body": "With this ability we can define our relations using namespace aliases.\n\nIt's just loading proper models instead of throwing that some class don't exists.\n",
    "head_branch": "2.1.x-manager",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f8b18912b45d36a3639",
    "number": 11648,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11648 from sergeyklay/2.1.x\n\nFixed Beanstalk default tube & optimized connection"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212f8c18912b45d36a363a",
    "number": 11647,
    "body": "- `Phalcon\\Security` is using now `Phalcon\\Security\\Random`\n- Enforced that `Phalcon\\Security::getToken()` and `Phalcon\\Security::getTokenKey()` return a random value per request not per call\n- `Phalcon\\Security::getToken()` and `Phalcon\\Security::getTokenKey()` are using now `Phalcon\\Security::_numberBytes` instead of passed as a argument or hardcoded value\n- `Phalcon\\Security::hash()` corrected not working `CRYPT_STD_DES`, `CRYPT_EXT_DES, MD5`, `CRYPT_SHA256`\n- `Phalcon\\Security::hash()` `CRYPT_SHA512` fixed wrong salt length\n- Added missing unit-tests for `Phalcon\\Security`\n",
    "head_branch": "security-improvements",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11647 from makerlabs/security-improvements\n\nPhalcon\\Security improvements"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212f8d18912b45d36a363b",
    "number": 11645,
    "body": "False merge doesn't do anything\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11645 from aaronimming/patch-3\n\nFix addValidators merge"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f8e18912b45d36a363c",
    "number": 11632,
    "body": "",
    "head_branch": "fix-testhex2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11632 from googlle/fix-testhex2\n\nFix FilterFloatTest\\testSanitizeFloatHex()"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f8f18912b45d36a363d",
    "number": 11631,
    "body": "",
    "head_branch": "fix-testhex",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f9118912b45d36a363e",
    "number": 11627,
    "body": "Added ability to call afterFetch method in:\n- `Phalcon\\Mvc\\Model\\Resultset\\Simple::toArray()`\n- `Phalcon\\Mvc\\Model::find` when searching with columns\n- `Phalcon\\Mvc\\Model::findFirst` when searching with columns\n- `Phalcon\\Mvc\\Model\\Query\\Builder` when searching with columns(but without joins)\n\nIt's using reflectionMethod and stdClass, it's not actually creating object of our model(and using then to Array() method from it), well acutally we have to create it once(to retrieve closure) - actual way is pretty fast(like 5 times than `cloneResultMap`).\n\n**What is important it's not working for joins. Maybe i will implement this some day if there will be need for it.**\n\nIf casting object type to array in zephir would work, we could possibly save some time. Right now it's using ArrayObject class.\n\n**Also what is important if unset could work on dynamic properties we could save some time in current() method.**\n",
    "head_branch": "2.1.x-resultset",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f9218912b45d36a363f",
    "number": 11625,
    "body": "- Phalcon\\Security is using now Phalcon\\Security\\Random\n- Enforced that Phalcon\\Security::getToken() and Phalcon\\Security::getTokenKey() return a random value per request not per call\n- Phalcon\\Security::getToken() and Phalcon\\Security::getTokenKey() are using now Phalcon\\Security::_numberBytes instead of passed as a argument or hardcoded value\n- Added missing unit-tests for Phalcon\\Security\n",
    "head_branch": "security-token-improvements",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f9318912b45d36a3640",
    "number": 11624,
    "body": "",
    "head_branch": "forms-hasmessagesfor",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11624 from SidRoberts/forms-hasmessagesfor\n\nForms\\Form::hasMessagesFor() now checks if the Group is empty"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212f9418912b45d36a3641",
    "number": 11623,
    "body": "",
    "head_branch": "secure_random",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11623 from sergeyklay/secure_random\n\nUse random_bytes if it is possible"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f9518912b45d36a3642",
    "number": 11621,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11621 from sergeyklay/2.1.x\n\nCleanup beanstalk"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212f9618912b45d36a3643",
    "number": 11618,
    "body": "Removed extra PHPDoc. I'm not sure that Phalcon is right place for copypasta of beanstalkd protocol\n",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11618 from sergeyklay/2.1.x\n\nCleanup beanstalk doc"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212f9718912b45d36a3644",
    "number": 11615,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11615 from Green-Cat/patch-1\n\nFixes indentation in escaper interface"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212f9818912b45d36a3645",
    "number": 11612,
    "body": "### Code to reproduce:\n\n``` php\n$di['modelsManager']->createBuilder()\n    ->columns('cedula, nombres')\n    ->from('Personnes')\n    ->groupBy('email');\n```\n### Get error\n\n``` sql\nException SQLSTATE[42000]: Syntax error or access violation: 1064 You have an error \nin your SQL syntax; check the manual that corresponds to your MySQL server version \nfor the right syntax to use near ') AS `rowcount` FROM\n```\n",
    "head_branch": "paginator_count",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f9918912b45d36a3646",
    "number": 11608,
    "body": "# Changes\n1. Modify cache redis backend, delete _PHCR\n2. Cache redis backend supports \"client\" option, now you can pass a redis client\n3. Redis's `set` method supports `ttl`,the call of `settimeout` is removed\n4. Redis has `exists`method to check if a key exists, the previous implementation uses `get` which is wrong\n# Why\n1. The redis cache backend use a special key _PHCR to store all keys used by cache. There is a issue: #10905 .According to @Green-Cat ,it is disabled in 2.0.x branch which is not true. If use _PHCR, every time we set a cache, we have to run sAdd and set commands. Store all keys in `_PHCR` will cause it expands quickly and this will influence performance.\n2. The previous implementation mixes `statsKey` and `prefix`, it uses `_PHCR` as super prefix which is not needed.\n3. The cache backend doesn't support redis option which means that we can not pass a redis connection. So if we use modelsCache and modelsMetadata, there will be two redis connections. So I modify this part and let redis option be supported, and through the lifetime of a request we can use one redis connection.\n",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f9a18912b45d36a3647",
    "number": 11603,
    "body": "- Rows like `ext/kernel/array.lo` cowered by `*.lo`\n- Rows like `ext/.libs/` cowered by `.libs`\n",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11603 from sergeyklay/2.1.x\n\nCleaned .gitignore"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f9b18912b45d36a3648",
    "number": 11599,
    "body": "If someone wonder how i found broken classes:\n\n``` php\n$path = \"_proxies/\";\n$fqcns = array();\n\n$allFiles = new RecursiveIteratorIterator(new RecursiveDirectoryIterator($path));\n$phpFiles = new RegexIterator($allFiles, '/\\.php$/');\nforeach ($phpFiles as $phpFile) {\n    $content = file_get_contents($phpFile->getRealPath());\n    $tokens = token_get_all($content);\n    $namespace = '';\n    for ($index = 0; isset($tokens[$index]); $index++) {\n        if (!isset($tokens[$index][0])) {\n            continue;\n        }\n        if (T_NAMESPACE === $tokens[$index][0]) {\n            $index += 2; // Skip namespace keyword and whitespace\n            while (isset($tokens[$index]) && is_array($tokens[$index])) {\n                $namespace .= $tokens[$index++][1];\n            }\n        }\n        if (T_CLASS === $tokens[$index][0]) {\n            $index += 2; // Skip class keyword and whitespace\n            $fqcns[] = $namespace.'\\\\'.$tokens[$index][1];\n        }\n    }\n}\n\nforeach($fqcns as $class)\n{\n    $reflection = new ReflectionClass($class);\n    if ($reflection->isInstantiable()){\n        try {\n            $reflection->newInstanceWithoutConstructor();\n        }\n        catch(Exception $e){\n            var_dump($e->getMessage());\n        }\n    }\n}\n```\n",
    "head_branch": "2.1.x-proxies-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11599 from Jurigag/2.1.x-proxies-fix\n\nProxies fix"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212f9c18912b45d36a3649",
    "number": 11590,
    "body": "@sergeyklay @daison12006013 @valVk @SidRoberts\n\nTODO, Requires discussion:\n- [x] - After binding tests\n- [x] - Discussion about `Phalcon\\Firewall\\Adapter::setRoleCallback()` - maybe diffrent name, maybe we could pass $di as parameter which will be get from dispatcher instead of writing use ($di), don't know if there is any performance difference ?\n- [x] - `Phalcon\\Firewall\\Adapter\\Acl` - what if we have controllers with same names(multi-module application i guess), maybe some convenient, standardized way of naming in acl service when we have multi-module application ? Like Module:Controller as resource name perhaps ?\n- [x] - Check tests and classes, especially tests of `Phalcon\\Firewall\\Adapter\\Annotations` - not sure if the current logic is fine(especially when we provide user roles as array and we have multiple roles in `@Deny` or `@Allow` and also if logic with controller/method checking is fine, for me it's obvious when i put `@Allow` before controller it means for me that i have access to whole controller\n- [x] - Maybe whole Firewall namespace should be put into Phalcon\\Mvc\\Dispatcher, beacause it depends from this dispatcher ?\n- ~~Methods in firewall to access current controller/action/user/role - for handling exception.~~\n\nIn future(or now) - implement firewall adapter on adding routes - not sure if we should add event manager to router, or just internally in router there should be calls into our firewall.\n",
    "head_branch": "2.1.x-firewall",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f9d18912b45d36a364a",
    "number": 11588,
    "body": "Obsolete information on changes in `Phalcon\\Crypt` is corrected.\n",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11588 from Studentsov/2.1.x\n\nUpdate CHANGELOG.md"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212f9e18912b45d36a364b",
    "number": 11580,
    "body": "",
    "head_branch": "dispatcher-previousnamespacename",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11580 from SidRoberts/dispatcher-previousnamespacename\n\nAdded previousNamespaceName property to Dispatcher."
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212f9f18912b45d36a364c",
    "number": 11578,
    "body": "Back porting some code from 2.0.0 branch, and including an update for PHP 7.0.\n\nCurrent implementation results in a SEGFAULT when run under PHP 7.0, stemming from the below code in `mvc/model/query/builder.zep`\n\n```\nlet query = <QueryInterface> dependencyInjector->get(\"Phalcon\\\\Mvc\\\\Model\\\\Query\", [phql, dependencyInjector]);\n```\n\nI could potentially fix through `create_instance_params`, but I can't find where that function is defined - nor `is_php_version` for that matter.\n\nNo unit tests since PHP 7 is not running on travis.\n",
    "head_branch": "di-seg-fault",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212fa118912b45d36a364d",
    "number": 11577,
    "body": "They are called from form->isValid() method, and can be custom methods. Any use of form->remove or form->add inside one of this function can change the set of elements to be validated.\nMoving the elements fetch after they are called remove the case where the elements being valdated are not the actual stored ones.\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212fa218912b45d36a364e",
    "number": 11576,
    "body": "clear logger queue at commit\n",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212fa318912b45d36a364f",
    "number": 11575,
    "body": "Fixed issue #11568\n",
    "head_branch": "annotation-router-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212fa418912b45d36a3650",
    "number": 11574,
    "body": "",
    "head_branch": "phalcon/mvc/micro/handle",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212fa518912b45d36a3651",
    "number": 11573,
    "body": "",
    "head_branch": "tag-2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11573 from googlle/tag-2.1.x\n\nPhalcon\\Tag::getTitle() shows a title depending on prependTitle and appendTitle"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212fa618912b45d36a3652",
    "number": 11572,
    "body": "日志事务提交，清空队列\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212fa718912b45d36a3653",
    "number": 11571,
    "body": "日志事务提交，清空队列\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212fa818912b45d36a3654",
    "number": 11569,
    "body": "I found this bug by analyzing the issue https://github.com/phalcon/cphalcon/issues/11568. I still don't know why the the action name was converted to lowercase.\n",
    "head_branch": "makerlabs-route-annotation-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212fa918912b45d36a3655",
    "number": 11567,
    "body": "",
    "head_branch": "patch-6",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11567 from SidRoberts/patch-6\n\nRemoved unused variables from Http\\Response::send()"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212faa18912b45d36a3656",
    "number": 11566,
    "body": "Fixed an issue that caused the fully qualified class to have the namespace duplicated in sufixed when handle contains a namespace itself.\n",
    "head_branch": "annotations-sufixed-patch",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11566 from Bellardia/annotations-sufixed-patch\n\nFix namespace resolution"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212fab18912b45d36a3657",
    "number": 11561,
    "body": "Finally!\n\nOk - this fixes an issue with multiple view paths. As it was, if a resource was not found in the first view path, then and error was raised and the other paths were not checked. Now - a resource (partial / whatever) is marked as 'found' if it exists in ANY of the multiple view paths.\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212fac18912b45d36a3658",
    "number": 11560,
    "body": "Allows multiple view directories where, as long as an item is found in any one of them, it is found. Currently, if it fails before it succeeds (in the loop) an error rises. Patch fixes this so, for example, a partial is 'found' if it exists in ANY of the paths.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212fad18912b45d36a3659",
    "number": 11559,
    "body": "Where you have multiple view paths/directories ... searching for anything (partial etc) fails (errors out) if the first path it tests does not have the item.\n\nPerhaps this is expected behaviour but it seems to me that the error should only rise if the item is not in ANY of the multiple paths.\n\nIf so, then the fix is simple as seen.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212fae18912b45d36a365a",
    "number": 11558,
    "body": "Rebased into 2.1.x @sergeyklay\n",
    "head_branch": "2.1.x-assets-exists",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212faf18912b45d36a365b",
    "number": 11557,
    "body": "",
    "head_branch": "2.0.x-assets-exists",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212fb118912b45d36a365c",
    "number": 11556,
    "body": "This should fix the issue.\n",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11556 from nsossonko/2.1.x\n\nFixes #11554 - Transaction Manager transaction accounting"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212fb218912b45d36a365d",
    "number": 11555,
    "body": "If an Exception is thrown, it needs to be caught within the loop and be able to continue if we need it to.\n\nFixes #2851.\n",
    "head_branch": "patch-1234567890",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11555 from SidRoberts/patch-1234567890\n\nThe beforeException dispatcher event can now forward"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212fb318912b45d36a365e",
    "number": 11553,
    "body": "If an Exception is thrown, it needs to be caught within the loop and be able to continue if we need it to.\n\nFixes #2851.\n",
    "head_branch": "patch-5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212fb418912b45d36a365f",
    "number": 11552,
    "body": "rebase https://github.com/phalcon/cphalcon/pull/11436\n",
    "head_branch": "queue_beanstalk_patch_2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11552 from Chameleon-m/queue_beanstalk_patch_2\n\nQueue beanstalk patch 2"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212fb518912b45d36a3660",
    "number": 11544,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212fb618912b45d36a3661",
    "number": 11543,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212fb718912b45d36a3662",
    "number": 11542,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212fb818912b45d36a3663",
    "number": 11541,
    "body": "Moved enum detection to top.\n",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212fb918912b45d36a3664",
    "number": 11540,
    "body": "Moved enum detection to top.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212fba18912b45d36a3665",
    "number": 11539,
    "body": "",
    "head_branch": "tag-getTitle-2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212fbb18912b45d36a3666",
    "number": 11538,
    "body": "",
    "head_branch": "tag-getTitle-new",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212fbc18912b45d36a3667",
    "number": 11537,
    "body": "It's quite hacky so I welcome anybody's opinions to make it better. :wink: \n",
    "head_branch": "countmanytomany",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212fbd18912b45d36a3668",
    "number": 11536,
    "body": "- Refactored `Paginator/Adapter/NativeArray`\n- Added missed `Collection` proxy class\n",
    "head_branch": "refactored_tests_2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212fbe18912b45d36a3669",
    "number": 11535,
    "body": "",
    "head_branch": "fix-11253",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge acb3dba46ca0eecaf87f9034228a73aeea8572ec into 1dcf782aa748b901ba0322028f28c324b4325984"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212fbf18912b45d36a366a",
    "number": 11534,
    "body": "",
    "head_branch": "refactored_tests_2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212fc018912b45d36a366b",
    "number": 11533,
    "body": "",
    "head_branch": "application-handle-2.1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212fc118912b45d36a366c",
    "number": 11532,
    "body": "It is related to the NFR mentioned in the following link:\n\nhttps://github.com/phalcon/cphalcon/issues/11275\n\nSample code to use this is following:\n\n``` php\n$config = [\n    'host'        => 'localhost',\n    'port'        => 9000,\n    'username'    => 'mysqltest',\n    'password'    => 'mysqltest',\n    'backendType' => 'mysql'\n];\n\n$connection = new Phalcon\\Db\\Adapter\\Pdo\\Sqlrelay($config);\n```\n\nHere, `backendType` is the DBMS to which Sqlrelay connects to. Sample sqlrelay.conf is:\n\n``` xml\n<?xml version=\"1.0\"?>\n<!DOCTYPE instances SYSTEM \"sqlrelay.dtd\">\n<instances>\n    <instance id=\"mysqltest\" dbase=\"mysql\" connections=\"5\" cursors=\"50\">\n        <users>\n            <user user=\"mysqltest\" password=\"mysqltest\"/>\n        </users>\n        <connections>\n            <connection string=\"user=test;password=test;db=testing;host=localhost\"/>\n        </connections>\n    </instance>\n</instances>\n```\n",
    "head_branch": "2.1.x_sqlrelay",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212fc318912b45d36a366d",
    "number": 11531,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212fc418912b45d36a366e",
    "number": 11530,
    "body": "Mcrypt is replaced with openssl in `Phalcon\\Crypt`. (https://github.com/phalcon/cphalcon/issues/11486)\nRemoved methods `setMode()`, `getMode()`, `getAvailableModes()` as not applicable to the openssl in `Phalcon\\CryptInterface`.\nUnfortunately, the reverse compatibility was lost for the reason that cryptography techniques are called differently in mcrypt and openssl libraries. Moreover, the algorithm of rijndael-256 used by default doesn't have changeover in openssl. I hope, it is not too heavy payment for transition to faster, safe and modern cryptography library.\nThere were some difficulties which are generally connected to distinctions of implementations of similar algorithms in mcrypt and openssl, and also imperfection of the current implementation of `Phalcon\\Crypt`. I will be glad if someone undertakes carrying out additional tests.\n",
    "head_branch": "studentsov-phalcon-new-crypt-upd",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge b5a071b5e97f43197f71b665e61b496c1d0202a4 into 69d57137067bcb8d0deb3921e311b6e54bafe5d0"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212fc518912b45d36a366f",
    "number": 11528,
    "body": "Mcrypt is replaced with openssl in `Phalcon\\Crypt`. (https://github.com/phalcon/cphalcon/issues/11486)\nRemoved methods `setMode()`, `getMode()`, `getAvailableModes()` as not applicable to the openssl in `Phalcon\\CryptInterface`.\nUnfortunately, the reverse compatibility was lost for the reason that cryptography techniques are called differently in mcrypt and openssl libraries. Moreover, the algorithm of rijndael-256 used by default doesn't have changeover in openssl. I hope, it is not too heavy payment for transition to faster, safe and modern cryptography library.\n",
    "head_branch": "Studentsov-phalcon-new-crypt",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212fc618912b45d36a3670",
    "number": 11526,
    "body": "",
    "head_branch": "annotations-router-tidy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212fc718912b45d36a3671",
    "number": 11525,
    "body": "",
    "head_branch": "processed",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212fc818912b45d36a3672",
    "number": 11524,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212fc918912b45d36a3673",
    "number": 11523,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212fca18912b45d36a3674",
    "number": 11522,
    "body": "Fixes #11488.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212fcb18912b45d36a3675",
    "number": 11520,
    "body": "",
    "head_branch": "tag-getTitle",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212fcc18912b45d36a3676",
    "number": 11516,
    "body": "",
    "head_branch": "http-response",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212fcd18912b45d36a3677",
    "number": 11514,
    "body": "",
    "head_branch": "beanstalk/put/doc",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212fce18912b45d36a3678",
    "number": 11512,
    "body": "Creates a validator to validate dates using DateTime\n",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212fcf18912b45d36a3679",
    "number": 11511,
    "body": "The problem was that when the target view was not found in the very first views directory, the search was aborted and an exception got thrown. This meant that the views were never searched for in the other views directories.\n\nI am not completely sure, how the `view:notFoundView` event should be handled here -- should it fire for every view not found or only when no views are found?\n",
    "head_branch": "fix-view-selection",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11511 from Ragnis/fix-view-selection\n\nFix view selection when multiple view directories have been set"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212fd018912b45d36a367a",
    "number": 11510,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212fd118912b45d36a367b",
    "number": 11506,
    "body": "`flush()` removes everything anyway so we don't need to collect any garbage.\n",
    "head_branch": "patch-7",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212fd218912b45d36a367c",
    "number": 11499,
    "body": "The `_processed` property stops the Router from being used multiple times. I can't understand the restriction as it works fine without it and the other Routers don't have this.\n",
    "head_branch": "patch-7",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212fd318912b45d36a367d",
    "number": 11498,
    "body": "It is related to the NFR mentioned in the following link:\n\nhttps://github.com/phalcon/cphalcon/issues/11491\n",
    "head_branch": "2.1.x_modified",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 1d187741a759881b001be27d8297fbc24a2586b8 into a88a9b147142a428b576c9a9c95974934af277e6"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212fd418912b45d36a367e",
    "number": 11496,
    "body": "The DI and the Models Manager are set in the constructor so we don't need to check if they are objects. See https://github.com/phalcon/cphalcon/blob/master/phalcon/mvc/model.zep#L134 and https://github.com/phalcon/cphalcon/blob/master/phalcon/mvc/model.zep#L145.\n",
    "head_branch": "mvc-model-constructor-dupe-assignments",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212fd518912b45d36a367f",
    "number": 11495,
    "body": "Now, a class that extends `\\Phalcon\\Logger\\Formatter` is forced to implement methods in the interface.\n",
    "head_branch": "formatterinterface",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212fd618912b45d36a3680",
    "number": 11494,
    "body": "It is fix of the issue mentioned in the following link:\n\nhttps://github.com/phalcon/cphalcon/issues/2778\n",
    "head_branch": "2.1.x_session",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212fd718912b45d36a3681",
    "number": 11490,
    "body": "Use of syntax of arrays and \"echo\" in PHP 5.4 style.\nThis pull request it is created for the purpose of the general coercion of a code to new style, besides, it reduces the size of the output file a little.\nOfficial documentation: http://php.net/manual/en/migration54.new-features.php\n",
    "head_branch": "studentsov-volt-patch",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 3cebcc138eb68fea20c7f0f97e64236d7d4678bf into 2cadff0aae2d0a92124a35622b1a2b0cec56e987"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212fd818912b45d36a3682",
    "number": 11489,
    "body": "Use of syntax of arrays and \"echo\" in PHP 5.4 style. In comparison with the last version (https://github.com/phalcon/cphalcon/pull/11485) changes were made to conditions of tests.\nThis pull request it is created for the purpose of the general coercion of a code to new style, besides, it reduces the size of the output file a little.\nOfficial documentation: http://php.net/manual/en/migration54.new-features.php\n",
    "head_branch": "studentsov-volt-patch",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212fd918912b45d36a3683",
    "number": 11485,
    "body": "Use of syntax of arrays and \"echo\" in PHP 5.4 style\n",
    "head_branch": "feature",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212fda18912b45d36a3684",
    "number": 11483,
    "body": "",
    "head_branch": "image/adapter/imagick_doc",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge b794eaff949bad8be435ef93d951b00d892fda9b into 985f861fa565c4a6ef40341482760389f54b711a"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212fdb18912b45d36a3685",
    "number": 11482,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212fdd18912b45d36a3686",
    "number": 11479,
    "body": "Part of #11432\n",
    "head_branch": "refactored_tests_2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212fde18912b45d36a3687",
    "number": 11476,
    "body": "Fires dispatch:beforeException event when there is any exception during the dispatch process. #11458 #11475 \n",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212fdf18912b45d36a3688",
    "number": 11475,
    "body": "Fires dispatch:beforeException event when there is any exception during the dispatch process. #11458 \n",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212fe018912b45d36a3689",
    "number": 11474,
    "body": "Adding addServers method to enable pool of servers for memcache\n",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212fe118912b45d36a368a",
    "number": 11473,
    "body": "https://github.com/phalcon/cphalcon/commit/414582359634ece82b7782b4f1b83f5f0952b0cb\n\nmy fault, sorry\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212fe218912b45d36a368b",
    "number": 11471,
    "body": "",
    "head_branch": "application-handle",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212fe318912b45d36a368c",
    "number": 11470,
    "body": "",
    "head_branch": "patch-8",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #11470 from SidRoberts/patch-8\n\nModelsManager::getHasOneAndHasMany() always returns an array."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212fe418912b45d36a368d",
    "number": 11468,
    "body": "",
    "head_branch": "patch-7",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212fe518912b45d36a368e",
    "number": 11467,
    "body": "Yay for recursion.\n",
    "head_branch": "patch-5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge fb5244ef86b21e139bec3df282baf72be186d91a into 4f07aaee0749fe164a3eb4cf2e0e4a6078f203ad"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212fe618912b45d36a368f",
    "number": 11462,
    "body": "Recently I faced with problem of building complex query and I should do this using query builder. I have not found possibilities to do this, so this is pull-request that does not break compatibility. \n",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212fe718912b45d36a3690",
    "number": 11460,
    "body": "This is related to this problem on forum : https://forum.phalconphp.com/discussion/10583/set-service-to-be-not-shared#C30309\n\nI think it adds some consistency for array syntax and option to set if service should be shared or not.\n\nAlso i guess i could possibly do PR for 2.0.x.\n",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212fe918912b45d36a3691",
    "number": 11456,
    "body": "Adding addServers method to enable pool of servers for memcache\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212fea18912b45d36a3692",
    "number": 11452,
    "body": "# Changes\n1. Modify cache redis backend, delete _PHCR\n2. Cache redis backend supports \"redis\" client option\n# Why\n1. The redis cache backend use a special key _PHCR to store all keys used by cache. There is a issue: #10905 .According to @Green-Cat ,it is disabled in 2.0.x branch which is not true. If use _PHCR, every time we set a cache, we have to run sAdd and set commands. Store all keys in _PHCR will cause it expands quickly and this will influence performance.\n2. The cache backend doesn't support redis option which means that we can not pass a redis connection. So if we use modelsCache and modelsMetadata, there will be two redis connections. So I modify this part and let redis option be supported, and through the lifetime of a request we can use one redis connection.\n",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212feb18912b45d36a3693",
    "number": 11451,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212fec18912b45d36a3694",
    "number": 11450,
    "body": "When looking how these functions were implemented, I noticed that there weren't any tests for them, and figured it would be an easy first contribution.\n",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212fee18912b45d36a3695",
    "number": 11447,
    "body": "The record always must be initialized.\nRefs: #11443\n",
    "head_branch": "validator/uniqueness",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212fef18912b45d36a3696",
    "number": 11445,
    "body": "References #11444\n",
    "head_branch": "fix-11444",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ff018912b45d36a3697",
    "number": 11441,
    "body": "Refs #11410\n",
    "head_branch": "interface_construct",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ff118912b45d36a3698",
    "number": 11438,
    "body": "If currentColumn is missing use column parametr.\n\nprevent:\n\n```\nERROR: RuntimeException Object\n(\n    [message:protected] => Trying to call method getname on a non-object\n...\n)\n```\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ff218912b45d36a3699",
    "number": 11437,
    "body": "If currentColumn is missing use column parametr.\n\nprevent:\n\n```\nERROR: RuntimeException Object\n(\n    [message:protected] => Trying to call method getname on a non-object\n...\n)\n```\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ff318912b45d36a369a",
    "number": 11436,
    "body": "php unit-tests/manual-unit.php BeanstalkTest.php BeanstalkTest\nTesting BeanstalkTest [OK]\n\nNeed rebuild phalcon for apply change.\n",
    "head_branch": "queue_beanstalk_patch_1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ff418912b45d36a369b",
    "number": 11432,
    "body": "**Work in progress. Don not merge please**\n- [x] Acl\n  - [x] Adapter\n    - [x] Memory\n  - [x] Resource\n  - [x] Role\n- [x] Annotations\n  - [x] Adapter\n    - [x] Apc\n    - [x] Files\n    - [x] Memory\n    - [x] Xcache\n  - [x] Reader\n  - [x] Reflection\n- [x] Assets\n  - [x] Filters\n    - [x] Cssmin\n    - [x] Jsmin\n    - [x] None\n  - [x] Collection\n  - [x] Inline\n    - [x] Css\n    - [x] Js\n  - [x] Manager\n  - [x] Resource\n    - [x] Css\n    - [x] Js\n- [x] Config\n  - [x] Adapter\n    - [x] Ini\n    - [x] Json\n    - [x] Php\n    - [x] Yaml\n- [x] Crypt\n- [x] Di\n  - [x] FactoryDefault\n  - [x] Service\n- [ ] Db\n  - [ ] Adapter\n    - [ ] Pdo\n      - [ ] Mysql\n      - [ ] Postgresql\n      - [ ] Sqlite\n  - [ ] Column\n  - [ ] Index\n  - [ ] Reference\n- [x] Escaper\n- [x] Filter\n- [x] Flash\n- [ ] Image\n  - [ ] Adapter\n    - [x] Gd\n    - [ ] Imagick\n- [x] Http\n  - [x] Response\n    - [x] Headers\n  - [x] Request\n    - [x] File\n- [x] Loader\n- [x] Logger\n  - [x] Adapter\n    - [x] File\n    - [x] Firephp\n  - [x] Formatter\n    - [x] Line\n  - [ ] Multiple\n- [ ] Mvc\n  - [ ] Application\n  - [x] Url\n- [x] Queue\n  - [x] Beanstalk\n    - [x] Job\n- [x] Security\n- [x] Session\n  - [x] Adapter\n    - [x] Files\n    - [x] Libmemcache\n    - [x] Memcache\n    - [x] Redis\n  - [x] Bag\n- [x] Tag\n- [x] Text\n- [x] Translate\n  - [x] Adapter\n    - [x] Csv\n    - [x] NativeArray\n    - [x] Gettext\n  - [x] Interpolator\n    - [x] IndexedArray\n    - [x] AssociativeArray\n- [x] Version\n\n<hr>\n- [ ] Merging all tests to the one place\n- [x] Updating test environment\n- [x] Deleting old and not needed tests\n- [x] Using latest Codeception\n- [ ] Setup Integration tests with Codeception Phalcon2 module\n- [x] Improving testing documentation\n- [ ] Decreasing test & build time\n- [x] Improving output report\n- [ ] Fixing broken & outdated tests\n- [x] Introducing test groups\n\n<hr>\n- Total tests: 1029\n- Done: 673\n",
    "head_branch": "refactored_tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ff518912b45d36a369c",
    "number": 11431,
    "body": "#11429\n",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge db5afb1ad6229ad3383d1461bdf3789cd6e3ee1c into ce6b79fe6a66578a0738f4d8343d8d4b75befa58"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212ff618912b45d36a369d",
    "number": 11430,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ff718912b45d36a369e",
    "number": 11428,
    "body": "Improve describeColumns to make it accord with PostgreSQL.\n1. PostgreSQL does not support \"tinyint\" and does not return the numeric size in the data type column, so the \"tinyint(1)\" if-branch is useless.\n2. PostgreSQL returns \"real\" instead of \"float\" when the data type is single-precision floating-point number and returns \"double precision\" when the data type is double-precision floating-point number.\n3. PostgreSQL returns \"bit varying\" when the data type is variable-length bit-string, so the if-branch for VARCHAR should search for \"char\" as well as \"varying\".\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ff818912b45d36a369f",
    "number": 11425,
    "body": "Hope everything is fine now\n",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ff918912b45d36a36a0",
    "number": 11423,
    "body": "Improve Postgresql adapter to make it accord with PostgreSQL\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ffa18912b45d36a36a1",
    "number": 11421,
    "body": "#11174\n",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ffb18912b45d36a36a2",
    "number": 11420,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212ffd18912b45d36a36a3",
    "number": 11419,
    "body": "",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 7a4796a0fe93c5aaac685707c1679b3d3a1568f9 into 870855fda1e846b6749b3b0cbdfb1ba3f95061b9"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "66212ffe18912b45d36a36a4",
    "number": 11418,
    "body": "Port setLogLevel to multiple as was done by tmihkil but gone stale. Add unit tests to verify the default log level is applied across multiple logs.\n\nhttps://github.com/phalcon/cphalcon/pull/10429 went stale. So I recreated it and added a unit-test.\n",
    "head_branch": "2.0.x-patch-10429",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66212fff18912b45d36a36a5",
    "number": 11417,
    "body": "Fix __set functionality to maintain variable visibility and utilize setter methods.\n",
    "head_branch": "2.0.x-patch-11286",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621300018912b45d36a36a6",
    "number": 11416,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621300118912b45d36a36a7",
    "number": 11412,
    "body": "Since `value` comes from `Tag::getValue`, which returns `null` if it's not set, then we can test that value is not null, and we should still be able to allow for falsy values.\n",
    "head_branch": "patch-11358",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621300218912b45d36a36a8",
    "number": 11406,
    "body": "",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621300318912b45d36a36a9",
    "number": 11404,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621300418912b45d36a36aa",
    "number": 11403,
    "body": "",
    "head_branch": "patch-5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621300518912b45d36a36ab",
    "number": 11402,
    "body": "",
    "head_branch": "phalcon/forms/php_doc",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge 46491dbd6456e2e5d0b234d2153c8c12a58ca7dc into 51c44e37cd8199690590eb8aa49f761ea7ca9a9d"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621300618912b45d36a36ac",
    "number": 11401,
    "body": "This syncs up the behavior with assign() and setting the value directly and also aligns the behavior of getting the property with setting the property. Comes with a test.\n",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621300718912b45d36a36ad",
    "number": 11399,
    "body": "Ref #10414 \n",
    "head_branch": "updates-change-log",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621300818912b45d36a36ae",
    "number": 11396,
    "body": "Using `is_callable` we can overload `__call` on Controllers, and catch generic action methods on controllers.\n\nUse case:\nErrors controllers where we want to define generic error actions\nCMS where we want to use `__call` to check for the content instead using a `beforeException` as a plugin\netc...\n",
    "head_branch": "patch-5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621300918912b45d36a36af",
    "number": 11394,
    "body": "",
    "head_branch": "loader",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621300b18912b45d36a36b0",
    "number": 11393,
    "body": "",
    "head_branch": "application",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 179668eb38a7a54fcca31b18c52a24cae08bf40e into 5e507f455f47365f50699e4f6a41fa46706727b3"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621300c18912b45d36a36b1",
    "number": 11392,
    "body": "",
    "head_branch": "logger-formatter-interface",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621300d18912b45d36a36b2",
    "number": 11388,
    "body": "Previously, `$request->isValidHttpMethod(\"get\")` would have returned false.\n",
    "head_branch": "patch-5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621300e18912b45d36a36b3",
    "number": 11387,
    "body": "",
    "head_branch": "mvc/collection/write_attribute",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621300f18912b45d36a36b4",
    "number": 11385,
    "body": "",
    "head_branch": "patch-7",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621301018912b45d36a36b5",
    "number": 11384,
    "body": "",
    "head_branch": "patch-6",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621301118912b45d36a36b6",
    "number": 11383,
    "body": "",
    "head_branch": "patch-5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621301218912b45d36a36b7",
    "number": 11381,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621301318912b45d36a36b8",
    "number": 11380,
    "body": "",
    "head_branch": "session-interface",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621301418912b45d36a36b9",
    "number": 11377,
    "body": "",
    "head_branch": "construct",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621301518912b45d36a36ba",
    "number": 11376,
    "body": "",
    "head_branch": "dispatcher-hasparam",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621301618912b45d36a36bb",
    "number": 11373,
    "body": "",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621301718912b45d36a36bc",
    "number": 11371,
    "body": "Addressing #11232 added additional Create, CreateIfNotExist an Update Operations.\n",
    "head_branch": "collection_cu_ops",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621301918912b45d36a36bd",
    "number": 11370,
    "body": "",
    "head_branch": "2.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621301a18912b45d36a36be",
    "number": 11369,
    "body": "Addressing #11232 added additional Create, CreateIfNotExist an Update Operations.\n",
    "head_branch": "collection_cu_ops",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621301b18912b45d36a36bf",
    "number": 11368,
    "body": "PR to devtools will follow\n",
    "head_branch": "enum_type",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "updating unit tests"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621301c18912b45d36a36c0",
    "number": 11363,
    "body": "afterFetch event should now fire.\n\nNote: I could not test using phpunit (it just shows no tests performed!) so if someone would like, you could run the tests.\n",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 746cfc394866af4c98ca10da8fb78da7af42d793 into 869cd517d8d394b8325f04b2d17100dafb496817"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621301e18912b45d36a36c1",
    "number": 11362,
    "body": "https://github.com/phalcon/cphalcon/issues/11340\n",
    "head_branch": "cleanup_11340",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621301f18912b45d36a36c2",
    "number": 11360,
    "body": "Fixes for #11359\n",
    "head_branch": "db/dialect/escape",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621302018912b45d36a36c3",
    "number": 11357,
    "body": "",
    "head_branch": "behavior-interface",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621302118912b45d36a36c4",
    "number": 11355,
    "body": "",
    "head_branch": "2.0.x-add-file-mode-option-to-metadata-files-adapter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621302218912b45d36a36c5",
    "number": 11354,
    "body": "",
    "head_branch": "forms-get",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621302318912b45d36a36c6",
    "number": 11353,
    "body": "",
    "head_branch": "2.0.x-update-documentation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621302418912b45d36a36c7",
    "number": 11352,
    "body": "",
    "head_branch": "tag/php_doc",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621302518912b45d36a36c8",
    "number": 11351,
    "body": "",
    "head_branch": "misspelling-1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621302618912b45d36a36c9",
    "number": 11349,
    "body": "",
    "head_branch": "annotations/adapter/files/php_doc",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge 00a92f065b8e4d280d5e2eb469aea55e24e7ae3a into d3c8eed550fd8db7e07326df63ebb79813a6a1d2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621302718912b45d36a36ca",
    "number": 11348,
    "body": "",
    "head_branch": "logger/adapter/firephp/php_doc",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge 2023b3a65b88ee27e677a72b3022506361c07c18 into 9bf3f68c70f58037061e9dfd73ac2c922dd06866"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621302818912b45d36a36cb",
    "number": 11345,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621302918912b45d36a36cc",
    "number": 11344,
    "body": "",
    "head_branch": "paginatorNames",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621302a18912b45d36a36cd",
    "number": 11343,
    "body": "Resend PR #10644 which was sent to `2.0.x`.\n",
    "head_branch": "pr-10644-to-21x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621302b18912b45d36a36ce",
    "number": 11342,
    "body": "",
    "head_branch": "modify-paginationNames",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621302c18912b45d36a36cf",
    "number": 11338,
    "body": "",
    "head_branch": "http/response/headers",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621302d18912b45d36a36d0",
    "number": 11336,
    "body": "",
    "head_branch": "security/php_doc",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621302e18912b45d36a36d1",
    "number": 11335,
    "body": "",
    "head_branch": "validation/message/group/to_array",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621302f18912b45d36a36d2",
    "number": 11330,
    "body": "Not exactly ground-breaking but I thought the CLI classes should have interfaces to match the MVC classes.\n",
    "head_branch": "cli-interface",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge db41081345ccee603db8daa3469fa0ec097545be into 1dd813aea8bd19e2a61b3beac0b23c69819438f6"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621303018912b45d36a36d3",
    "number": 11328,
    "body": "",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621303118912b45d36a36d4",
    "number": 11326,
    "body": "Adding to #11325, the `statusCodes` array shouldn't be a property only assigned on certain conditions.\n\n(I've built this on top of @sergeyklay's PR to avoid a merge conflict).\n",
    "head_branch": "http/response/redirect",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621303218912b45d36a36d5",
    "number": 11325,
    "body": "",
    "head_branch": "http/response/redirect",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621303318912b45d36a36d6",
    "number": 11323,
    "body": "It's a PR to save number 0 in cache. (issue #11322)\n",
    "head_branch": "2.0.x-fix-issue-11322",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621303518912b45d36a36d7",
    "number": 11321,
    "body": "I think there're some issues to work with `Model` in my project.\nso, I tried to improve `Model` for me. I hope it would be valuable to others.\n\nPlease let me know If you have an another opinion or idea.\n- It's related to #11106, #11117\n## 1. Only use write connection on save.\n\nI usually prefer write(master) connection rather than read(slave) connection while the processes to save data. That's because it's possibility to have unexpected network latency between master and slave servers.\n\nI just want to use write connection selectively.\n- global config\n\n```\nphalcon.orm.use_write_connection_on_save = On (default : On)\n```\n- example for Model::setup()\n\n```\nModel::setup(array(\n    'useWriteConnectionOnSave' => false\n));\n```\n## 2. Not check if the record exists.\n\nI don't want to check the existing record before create or update function.\nIt's just for performance. and, I think it's often unnecessary in most cases.\n- global config\n\n```\nphalcon.orm.check_existing_record_before_save = Off (default : Off)\n```\n- example for Model::setup()\n\n```\nModel::setup(array(\n    'checkExistingRecordBeforeSave' => true\n));\n```\n## 3. Fixed for checking the unique key.\n\nSometimes, `Model` has unnecessary select queries in specific case. (#11106)\nIf the field is AUTO_INCREMENT and NULL, It would not occur additional select query.\n## 4. Tidied up the code a little bit.\n",
    "head_branch": "dev-improve-db-actions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621303618912b45d36a36d8",
    "number": 11320,
    "body": "Background: https://github.com/phalcon/cphalcon/issues/11286\n\nFixes issue with __set setting anything regardless of visibility.\n",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge e601c30e27643bdc71e9ca36cfc731593aab676b into cc36345df770dfb48059ecf9965dadcb0af16a33"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621303718912b45d36a36d9",
    "number": 11318,
    "body": "",
    "head_branch": "tag/reset_input",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621303818912b45d36a36da",
    "number": 11317,
    "body": "- Added ability to persistent connection in `Phalcon\\Queue\\Beanstalk::connect`\n- Introduced `Phalcon\\Queue\\Beanstalk\\Exception`\n- Cleaned `CHANGELOG.md`\n",
    "head_branch": "beanstalk/persistent",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621303918912b45d36a36db",
    "number": 11316,
    "body": "",
    "head_branch": "mattvb91",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621303a18912b45d36a36dc",
    "number": 11314,
    "body": "",
    "head_branch": "crypt/phpdoc",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621303b18912b45d36a36dd",
    "number": 11313,
    "body": "",
    "head_branch": "fix-parser",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621303c18912b45d36a36de",
    "number": 11312,
    "body": "",
    "head_branch": "translate/gettext",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621303d18912b45d36a36df",
    "number": 11308,
    "body": "Assuming I execute `php cli.php example main param1 param2 param3`, `$this->dispatcher->getParams()` and `$params` from the parameters return different things:\n\n``` php\nclass ExampleTask extends \\Phalcon\\Cli\\Task\n{\n    public function mainAction($params)\n    {\n        print_r($this->dispatcher->getParams());\n        // Array\n        // (\n        //     [params] => Array\n        //         (\n        //             [0] => \"param1\"\n        //             [1] => \"param2\"\n        //             [2] => \"param3\"\n        //         )\n        // \n        // )\n\n        print_r($params);\n        // Array\n        // (\n        //     [0] => \"param1\"\n        //     [1] => \"param2\"\n        //     [2] => \"param3\"\n        // )\n    }\n}\n```\n\nThis PR fixes that so that it returns the same:\n\n``` php\nclass ExampleTask extends \\Phalcon\\Cli\\Task\n{\n    public function mainAction($params)\n    {\n        print_r($this->dispatcher->getParams());\n        // Array\n        // (\n        //     [0] => \"param1\"\n        //     [1] => \"param2\"\n        //     [2] => \"param3\"\n        // )\n\n        print_r($params);\n        // Array\n        // (\n        //     [0] => \"param1\"\n        //     [1] => \"param2\"\n        //     [2] => \"param3\"\n        // )\n    }\n}\n```\n\n`$this->dispatcher->getParam($paramKey)` also works as expected.\n",
    "head_branch": "cli-params",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621303e18912b45d36a36e0",
    "number": 11306,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621303f18912b45d36a36e1",
    "number": 11305,
    "body": "",
    "head_branch": "flash/phpdoc",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge 1892bdc314697e77a0a74dcade867d5850bd0c11 into 2f734ce32a4a38fbbace79a5d374968f4105bdef"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621304018912b45d36a36e2",
    "number": 11302,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621304118912b45d36a36e3",
    "number": 11301,
    "body": "I think it's reasonable to solve #11298.\n\nPlease let me know if you have another thought.\n",
    "head_branch": "2.0.x-fix-issue-11298",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621304218912b45d36a36e4",
    "number": 11300,
    "body": "",
    "head_branch": "tag/get_title",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621304318912b45d36a36e5",
    "number": 11299,
    "body": "I have add more readability in following things.\n- [x] LICENSE.md and LICENCSE.txt files.\n- [x] Moved license file to root folder which is general but obvious.\n- [x] Build status icon moved to the top of the README.md file.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621304418912b45d36a36e6",
    "number": 11297,
    "body": "",
    "head_branch": "assets/manager/phpdoc",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621304518912b45d36a36e7",
    "number": 11296,
    "body": "I'm sorry to say that I had some misunderstanding in my previous commit. (#11278)\nI realized that config.m4 is required file when installing the extension from source code.\n\nso, I changed the rule to generate config.w32 file on windows only.\n\nThanks.\n",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 2eaa47fe9dedd3b5101b2dace52f0c15c044ee13 into 649f3cd80b9c9766b7dcb5d1f75e0493912dc8df"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621304618912b45d36a36e8",
    "number": 11295,
    "body": "",
    "head_branch": "assets/resource/phpdoc",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621304718912b45d36a36e9",
    "number": 11294,
    "body": "",
    "head_branch": "sergeyklay-patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621304818912b45d36a36ea",
    "number": 11292,
    "body": "",
    "head_branch": "sergeyklay-patch-1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621304918912b45d36a36eb",
    "number": 11290,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621304b18912b45d36a36ec",
    "number": 11289,
    "body": "",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 78e38c241d30f5e5bc2d9112b99a93366012eb26 into fe827a440bb5b4c4f4fe749dae5391dfbaefe1a5"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621304c18912b45d36a36ed",
    "number": 11288,
    "body": "Issue: #11267 \n\nTODO:\n- [x] Update changelog\n- [x] Implement tests - Can someone give some advice?\n\nJust a few other notes that I need some help with:\n\nIs there a zephir equivalent of Class::class to get a classname? I dont like the way I have it here defining the classes in strings?\n\nNot sure about the naming of \"BindModelInterface\" under Phalcon\\Mvc\\Controller. Any suggestions?\n\nCan someone give me an idea what the best approach is for testing this? Or point out an already existing test class that I can add into.\n\n---\n\nThis allows for typehinting models in the controller actions which will then be loaded for you in the dispatcher:\n\n``` php\n    public function viewAction(Article $article)\n    {\n        //$article is already instantiated\n    }\n```\n\nIt also adds a  \\Phalcon\\Mvc\\Controller\\BindModelInterface which allows you to set the controllers associated model:\n\n``` php\nstatic function getModelName()\n{\n     return Article::class;\n}\n```\n\nThis is useful in cases where you have a BaseController that handles a certain action for you but still want to be able to have the model loaded:\n\nBaseController:\n\n``` php\npublic function viewAction(Model $model)\n{\n      //Will check the child controller to \"getModelName()\" to load the correct entity\n}\n```\n\nCurrently this will only work based off /route/action/{id}. Something for a next release would be to allow modifying the table column that it performs the select on instead of ID.\n",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621304d18912b45d36a36ee",
    "number": 11284,
    "body": "See [line 92](https://github.com/phalcon/cphalcon/blob/902c32675776fbcfbd3a5a6178d4cd07833c7e79/phalcon/validation/validator/uniqueness.zep#L92).\n",
    "head_branch": "uniqueness-validator",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621304e18912b45d36a36ef",
    "number": 11281,
    "body": "",
    "head_branch": "patch-9",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621304f18912b45d36a36f0",
    "number": 11280,
    "body": "Since support for php 5.3 has been deprecated, we should not allow it to be used.\n",
    "head_branch": "patch-7",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621305018912b45d36a36f1",
    "number": 11279,
    "body": "With an allow failures for now.\n",
    "head_branch": "patch-6",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621305118912b45d36a36f2",
    "number": 11278,
    "body": "There were some problems when 'gen-build.php' was executed on windows.\n",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge b18140fca3323e760a60243b093d4f01ad07210f into 42ea22336390157912bdeaaddc5b8f6bfdb2dcb9"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621305218912b45d36a36f3",
    "number": 11277,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621305318912b45d36a36f4",
    "number": 11276,
    "body": "",
    "head_branch": "fix-namespace-annotation-router",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621305418912b45d36a36f5",
    "number": 11274,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621305518912b45d36a36f6",
    "number": 11273,
    "body": "",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621305618912b45d36a36f7",
    "number": 11272,
    "body": "",
    "head_branch": "patch-5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621305718912b45d36a36f8",
    "number": 11271,
    "body": "",
    "head_branch": "patch-8",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621305818912b45d36a36f9",
    "number": 11270,
    "body": "",
    "head_branch": "sergeyklay-patch-1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge 82ddcc8b4644ea68bb6007850d0276ebb03e0b28 into 23f92a25a4d829f50d7bf71145cee538f6b0c1d6"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621305d18912b45d36a36fa",
    "number": 11266,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621305e18912b45d36a36fb",
    "number": 11265,
    "body": "This is to fix an issue that was reported over in the devtools that required FULLTEXT indexes:\nhttps://github.com/phalcon/phalcon-devtools/issues/585\n\nIm not sure what version in the changelog to change? 2.1 or 2.0.10?\n\nCan anyone think of any major issues in adding this in now? Is there a reason we didn't have fulltext indexes?\n",
    "head_branch": "adding_fulltext_index_support",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621305f18912b45d36a36fc",
    "number": 11262,
    "body": "",
    "head_branch": "patch-6",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge a68984b6c80b25b20c3f3b7021bd98165d568cd1 into 2682ae084c35d210aa3d1a05519d89048908502d"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621306018912b45d36a36fd",
    "number": 11261,
    "body": "Change the file type of DOCUMENTATION from .txt to .md\n",
    "head_branch": "fix-doc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621306118912b45d36a36fe",
    "number": 11260,
    "body": "Change the file type of DOCUMENTATION from .txt to .md\n",
    "head_branch": "fix-typo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621306218912b45d36a36ff",
    "number": 11248,
    "body": "`Tag::setDefault` does not return anything\n",
    "head_branch": "sergeyklay-patch-1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621306318912b45d36a3700",
    "number": 11247,
    "body": "Need some more tests, i will commit it later.\n\nrefs #11235\n",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621306418912b45d36a3701",
    "number": 11246,
    "body": "",
    "head_branch": "sergeyklay-patch-1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge 6d31ec57648f1b4d2d3e4d248bb8ab8dacaa7f96 into 2e27777c1aa5e7a486c10bcedeab9f276796bf54"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621306618912b45d36a3702",
    "number": 11243,
    "body": "**Work in progress. Don not merge please**\n- [x] Acl\n  - [x] Adapter\n    - [x] Memory\n  - [x] Resource\n  - [x] Role\n- [x] Annotations\n  - [x] Adapter\n    - [x] Apc\n    - [x] Files\n    - [x] Memory\n    - [x] Xcache\n  - [x] Reader\n  - [x] Reflection\n- [x] Assets\n  - [x] Filters\n    - [x] Cssmin\n    - [x] Jsmin\n    - [x] None\n  - [x] Collection\n  - [x] Inline\n    - [x] Css\n    - [x] Js\n  - [x] Manager\n  - [x] Resource\n    - [x] Css\n    - [x] Js\n- [x] Config\n  - [x] Adapter\n    - [x] Ini\n    - [x] Json\n    - [x] Php\n    - [x] Yaml\n- [x] Crypt\n- [x] Di\n  - [x] FactoryDefault\n  - [x] Service\n- [ ] Db\n  - [ ] Adapter\n    - [ ] Pdo\n      - [ ] Mysql\n      - [ ] Postgresql\n      - [ ] Sqlite\n  - [ ] Column\n  - [ ] Index\n  - [ ] Reference\n- [x] Escaper\n- [x] Filter\n- [x] Flash\n- [ ] Image\n  - [ ] Adapter\n    - [ ] Gd\n    - [ ] Imagick\n- [x] Http\n  - [x] Response\n    - [x] Headers\n  - [x] Request\n    - [x] File\n- [x] Loader\n- [x] Logger\n  - [x] Adapter\n    - [x] File\n    - [x] Firephp\n  - [x] Formatter\n    - [x] Line\n  - [ ] Multiple\n- [ ] Mvc\n  - [ ] Application\n  - [x] Url\n- [x] Queue\n  - [x] Beanstalk\n    - [x] Job\n- [x] Security\n- [x] Session\n  - [x] Adapter\n    - [x] Files\n    - [x] Libmemcache\n    - [x] Memcache\n    - [x] Redis\n  - [x] Bag\n- [x] Tag\n- [x] Text\n- [x] Translate\n  - [x] Adapter\n    - [x] Csv\n    - [x] NativeArray\n    - [x] Gettext\n  - [x] Interpolator\n    - [x] IndexedArray\n    - [x] AssociativeArray\n- [x] Version\n\n<hr>\n- [ ] Merging all tests to the one place\n- [x] Updating test environment\n- [x] Deleting old and not needed tests\n- [x] Using latest Codeception\n- [ ] Setup Integration tests with Codeception Phalcon2 module\n- [x] Improving testing documentation\n- [ ] Decreasing test & build time\n- [x] Improving output report\n- [ ] Fixing broken & outdated tests\n- [x] Introducing test groups\n\n<hr>\n- Total tests: 1031\n- Done: 660\n",
    "head_branch": "updating_tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621306718912b45d36a3703",
    "number": 11240,
    "body": "",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621306818912b45d36a3704",
    "number": 11238,
    "body": "",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621306918912b45d36a3705",
    "number": 11237,
    "body": "Add option to add function in allow method in Phalcon\\Acl\\Adapter\\Memory like this:\n\n``` php\n$acl->allow('SomeRole','SomeResource','update',function(TestResource $user,TestModel $model){\n    return $user->getId() == $model->getUser();\n});\n```\n\n Where we can put class implemting Roleable as first argument, and Resourceable as second argument. Then when we do\n\n``` php\n$acl->isAllowed($roleable,$resourcable,'update');\n```\n\nIt will call our defined method in allow if there is any.\n",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621306a18912b45d36a3706",
    "number": 11236,
    "body": "Add option to add function in allow method in Phalcon\\Acl\\Adapter\\Memory like this:\n\n``` php\n$acl->allow('SomeRole','SomeResource','update',function(TestResource $user,TestModel $model){\n    return $user->getId() == $model->getUser();\n});\n```\n\n Where we can put class implemting Roleable as first argument, and Resourceable as second argument. Then when we do\n\n``` php\n$acl->isAllowed($roleable,$resourcable,'update');\n```\n\nIt will call our defined method in allow if there is any.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621306b18912b45d36a3707",
    "number": 11225,
    "body": "Allows extending Model instances to be recognized within IDEs.\n\nReference: https://github.com/phpDocumentor/fig-standards/blob/master/proposed/phpdoc.md#715-return\n",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621306c18912b45d36a3708",
    "number": 11223,
    "body": "https://github.com/phalcon/cphalcon/pull/11181\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621306d18912b45d36a3709",
    "number": 11222,
    "body": "",
    "head_branch": "acl/adapter/memory",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621306e18912b45d36a370a",
    "number": 11221,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621306f18912b45d36a370b",
    "number": 11220,
    "body": "",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 09ad0f38fd23442233ea092d451df90ae6b0509b into 049d6ad8fba0e13cb33f4ac775c7ad7a1ea92932"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621307018912b45d36a370c",
    "number": 11219,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621307118912b45d36a370d",
    "number": 11218,
    "body": "",
    "head_branch": "patch-5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621307218912b45d36a370e",
    "number": 11216,
    "body": "Fixes Model::findFirst erroneous query in Oracle dialect reported  at phalcon/cphalcon#11033. Before this fix the generated query was limited by 'WHERE ROWNUM <=0'. However, in Oracle ROWNUM starts at 1, so the query effectively always returned zero results.\n",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621307318912b45d36a370f",
    "number": 11214,
    "body": "Fix `BadMethodCallException: Wrong number of parameters` when php error occurred.\n",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621307418912b45d36a3710",
    "number": 11213,
    "body": "fix `BadMethodCallException: Wrong number of parameters` when php error occurred on debug mode.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621307518912b45d36a3711",
    "number": 11212,
    "body": "",
    "head_branch": "cache_backend_phpdoc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621307618912b45d36a3712",
    "number": 11211,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621307718912b45d36a3713",
    "number": 11204,
    "body": "This change allow get translated messages in Exception, overriding the model's getMessages method, as suggested in the documentation (https://docs.phalconphp.com/pt/latest/reference/models.html#validation-messages) .\n",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621307818912b45d36a3714",
    "number": 11200,
    "body": "`Phalcon\\Mvc\\Model\\Criteria::getGroup` renamed to `Phalcon\\Mvc\\Model\\Criteria::getGroupBy`\n",
    "head_branch": "get_order_by",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 414582359634ece82b7782b4f1b83f5f0952b0cb into 087ae026a8783a2946be266e863a8c6894773042"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621307918912b45d36a3715",
    "number": 11196,
    "body": "It's time.\nRef phalcon/zephir#1139\n",
    "head_branch": "patch-5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621307a18912b45d36a3716",
    "number": 11195,
    "body": "#2411\n#10955\n",
    "head_branch": "issue-2411",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621307b18912b45d36a3717",
    "number": 11194,
    "body": "as in:\nhttps://github.com/phalcon/cphalcon/blob/c8d4916bbfd0cb18395fe25d8c5a663fc5077d8f/phalcon/mvc/model/query/builder.zep#L858\n",
    "head_branch": "getOrderBy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621307d18912b45d36a3718",
    "number": 11192,
    "body": "stream_get_line() works with beanstalkd streams and large buffers.\n",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621307e18912b45d36a3719",
    "number": 11191,
    "body": "",
    "head_branch": "cache_small_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621307f18912b45d36a371a",
    "number": 11187,
    "body": "",
    "head_branch": "bug_1923",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621308118912b45d36a371b",
    "number": 11184,
    "body": "#11174\n",
    "head_branch": "11174-dispatcher-does-not-set-last-handler",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621308218912b45d36a371c",
    "number": 11183,
    "body": "",
    "head_branch": "11174-dispatcher-does-not-set-last-handler",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621308318912b45d36a371d",
    "number": 11182,
    "body": "Memcache has an internal lifetime limit of 30 days, see http://stackoverflow.com/questions/1418324/memcache-maximum-key-expiration-time\nSetting something upper to this limit leads to having blank writes with no error, breaking the purpose of the session.\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621308418912b45d36a371e",
    "number": 11181,
    "body": "",
    "head_branch": "patch-5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 24b864634b52a0b181f7b9002e6901c3623d7a8d into 019e77aff8254814339c662ad3ceda03e30937bb"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621308518912b45d36a371f",
    "number": 11180,
    "body": "",
    "head_branch": "http/request/method",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621308618912b45d36a3720",
    "number": 11179,
    "body": "Memcache has an internal lifetime limit of 30 days, see http://stackoverflow.com/questions/1418324/memcache-maximum-key-expiration-time\nSetting something upper to this limit leads to having blank writes with no error, breaking the purpose of the session.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621308718912b45d36a3721",
    "number": 11178,
    "body": "as in: https://github.com/phalcon/cphalcon/blob/c8d4916bbfd0cb18395fe25d8c5a663fc5077d8f/phalcon/mvc/model/manager.zep#L1671\n",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge ff7327979bd66955f0c8de5ced4761eca19ccc62 into 1a226b142764fdd97560dc3b07d633823d2e53ee"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621308818912b45d36a3722",
    "number": 11177,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621308918912b45d36a3723",
    "number": 11176,
    "body": "",
    "head_branch": "session",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621308a18912b45d36a3724",
    "number": 11172,
    "body": "",
    "head_branch": "having",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621308b18912b45d36a3725",
    "number": 11167,
    "body": "Added a join to retrieve the onupdate and ondelete info from the information schema. Resolves issue #3219\n",
    "head_branch": "3219-onupdate-and-ondelete-references",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621308d18912b45d36a3726",
    "number": 11164,
    "body": "",
    "head_branch": "annotations_adapter_interface",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621308e18912b45d36a3727",
    "number": 11162,
    "body": "Added a join to retrieve the onupdate and ondelete info from the information schema. Resolves issue #3219\n",
    "head_branch": "3219-onupdate-and-ondelete-references",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621308f18912b45d36a3728",
    "number": 11161,
    "body": "",
    "head_branch": "mvc/model/metadata",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 875eebcdd13b2f182a1de63ba3284c08ffb6cbd3 into d0ba270b4cb306ad877b4ba089e0d88cf3e8693d"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621309018912b45d36a3729",
    "number": 11148,
    "body": "I have added the use of check_field.\n",
    "head_branch": "add-checkField-comment",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621309118912b45d36a372a",
    "number": 11147,
    "body": "if set value must be:\nthis->_readed = true;\n",
    "head_branch": "2.0.x-fix-cookie-construct",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621309218912b45d36a372b",
    "number": 11146,
    "body": "if set value must be:\nthis->_readed = true;\n",
    "head_branch": "maser-fix-cookie",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621309318912b45d36a372c",
    "number": 11145,
    "body": "Hi.\n\nI have added the use of check_field.\n",
    "head_branch": "add-checkField-comment",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621309418912b45d36a372d",
    "number": 11144,
    "body": "",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 512b6c09b08fffca32532ce4802d513863780ed7 into 6f4627d38a8da94ebc1b10b3c1acb7b7bd6897f3"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621309518912b45d36a372e",
    "number": 11143,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621309718912b45d36a372f",
    "number": 11141,
    "body": "## Changes\n1. Modify cache redis backend, delete _PHCR\n2. Cache redis backend supports \"redis\" client option\n## Why\n1. The redis cache backend use a special key `_PHCR` to store all keys used by cache. There is a issue: #10905 .According to @Green-Cat ,it is disabled in 2.0.x branch which is not true. If use `_PHCR`, every time we set a cache, we have to run `sAdd` and `set` commands. Store all keys in `_PHCR` will cause it expands quickly and this will influence performance.\n2. The `libmemecached` backend has supplied the option to disable this feature.\n3. The cache backend doesn't support redis option which means that we can not pass a redis connection. So if we use modelsCache and modelsMetadata, there will be two redis connections. So I modify this part and let redis option be supported, and through the lifetime of a request we can use one redis connection.\n",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621309818912b45d36a3730",
    "number": 11138,
    "body": "",
    "head_branch": "db/dialect/mysql",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 1a99e5b758a26b252822d9600041d8e764587f81 into 5718c5795ed6cbf301770eeabdee384fc80a4118"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621309918912b45d36a3731",
    "number": 11125,
    "body": "## Changes\n1. Modify cache redis backend, delete _PHCR\n2. Cache redis backend supports \"redis\" client option\n## Why\n1. The redis cache backend use a special key `_PHCR` to store all keys used by cache. There is a issue: #10905 .According to @Green-Cat ,it is disabled in 2.0.x branch which is not true. If use `_PHCR`, every time we set a cache, we have to run `sAdd` and `set` commands. Store all keys in `_PHCR` will cause it expands quickly and this will influence performance.\n2. The `libmemecached` backend has supplied the option to disable this feature.\n3. The cache backend doesn't support redis option which means that we can not pass a redis connection. So if we use modelsCache and modelsMetadata, there will be two redis connections. So I modify this part and let redis option be supported, and through the lifetime of a request we can use one redis connection.\n",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621309a18912b45d36a3732",
    "number": 11124,
    "body": "sorry for the first PR, my bad.\n",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 6f49f4b61d09d112aa04ce254c93ea6dbac37ed7 into 0bd4a23d28dfafb0318cf2294ece41d3d9794347"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621309b18912b45d36a3733",
    "number": 11123,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621309c18912b45d36a3734",
    "number": 11122,
    "body": "",
    "head_branch": "2.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge c8fdec8e2f8d9dbb9950b98d9acf082b99cbff3e into cb6a2fb167ed84db93de2af26ed12df7af7079ef"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621309e18912b45d36a3735",
    "number": 11121,
    "body": "1. Modify cache redis backend, delete _PHCR\n2. Cache redis backend supports \"redis\" client option\n",
    "head_branch": "2.0.8",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621309f18912b45d36a3736",
    "number": 11120,
    "body": "",
    "head_branch": "random_doc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 78cfcfc49347c3f9b2857613c7dccc815de06533 into 53d7c50902796d08d48c84910b5f2a543a53dae5"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662130a018912b45d36a3737",
    "number": 11116,
    "body": "",
    "head_branch": "patch-7",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge e90febe1172ecbdff8a097d1035d3c42e674286d into 72c94c4ee4683541ae5120ed691419daa098e534"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662130a118912b45d36a3738",
    "number": 11113,
    "body": "",
    "head_branch": "issue_11112",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 788cab8823be7c7eb661c433a640ca50a3204060 into 7ccdbd812709c148e9952fbcdf470c600cc7d4f0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662130a218912b45d36a3739",
    "number": 11111,
    "body": "",
    "head_branch": "fixed_serghei_email",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662130a318912b45d36a373a",
    "number": 11110,
    "body": "",
    "head_branch": "patch-6",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge ceb7e5d07fb1077f1ce924ef0bba77e38eab28c0 into b5cc07903397b37ffbb2e3adb8af573b6092b070"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662130a418912b45d36a373b",
    "number": 11105,
    "body": "Fixed `RouteInterface::setHttpMethods` return type \n",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662130a518912b45d36a373c",
    "number": 11104,
    "body": "Reverts phalcon/cphalcon#11072\n",
    "head_branch": "revert-11072-patch-5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662130a618912b45d36a373d",
    "number": 11103,
    "body": "Reverts phalcon/cphalcon#11072\n",
    "head_branch": "revert-11072-patch-5",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge 103c2e07f1e8ae7b62bdca84f9c5e2caa3b3cff9 into 0bdb0d792a7eecaf0509ee8caebcab94bfb9ad50"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662130a718912b45d36a373e",
    "number": 11102,
    "body": "",
    "head_branch": "text",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge f5466c58a1bda6bad01d0e893f9c1cfd2692ae70 into b3a3adec28c5ffa0d826312ae55fd6656d514a0f"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662130a818912b45d36a373f",
    "number": 11092,
    "body": "",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662130a918912b45d36a3740",
    "number": 11086,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662130aa18912b45d36a3741",
    "number": 11085,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662130ab18912b45d36a3742",
    "number": 11081,
    "body": "",
    "head_branch": "events/dettach_to_detach",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662130ac18912b45d36a3743",
    "number": 11080,
    "body": "",
    "head_branch": "events/event_interface",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 0a89d4704ef47ecbc202b567babf852440de25b5 into 8f3bde73c0848129bd236918d1c3cad3f7d725c5"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662130ae18912b45d36a3744",
    "number": 11079,
    "body": "",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662130af18912b45d36a3745",
    "number": 11076,
    "body": "",
    "head_branch": "filter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge dd97416b4e04bbee93020c700facb83099ed3c1a into 6acca855e721eb3f2c62c92034625c5d1d314650"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662130b018912b45d36a3746",
    "number": 11072,
    "body": "",
    "head_branch": "patch-5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge f843bea764887c1944e6199bf418c20cd5631f42 into c8d4916bbfd0cb18395fe25d8c5a663fc5077d8f"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662130b118912b45d36a3747",
    "number": 11071,
    "body": "In windows autoloader can't find class because generated path is invalid\n",
    "head_branch": "fix_tests_init",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662130b218912b45d36a3748",
    "number": 11067,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662130b318912b45d36a3749",
    "number": 11063,
    "body": "issue #11031\nUsage:\n\n``` PHP\nRobots::find(); //returns Robots\nRobots::find(['class' => 'Books']); // you get Books\nRobots::find(['class' => 'Phalcon\\Mvc\\Collection\\Document']); // you get Documents\nRobots::find(['class' => 'UnknowClass']); // you get php error \"Class 'UnknownClass' not found\"\nRobots::find(['class' => 'KnownClassNotImplementingInterface']); // you get phalcon exception \"Object of class 'KnownClassNotImplementingInterface' must be an implementation of Phalcon\\Mvc\\CollectionInterface or an instance of Phalcon\\Mvc\\Collection\\Document\"\n```\n\nIn case when exception must be thrown all other check become useless waste of time and that is why class check is made so early.\n",
    "head_branch": "odm-class-option",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662130b418912b45d36a374a",
    "number": 11062,
    "body": "",
    "head_branch": "acl/roles",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 6065a84c7dcb2a00f112a7fbcc440ea97effa96e into 7fdc8831d7bb80e84b17b9be6eefec809dc70e28"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662130b518912b45d36a374b",
    "number": 11060,
    "body": "1. Fixed getMessages in Session Flash Adapter. When retriving messages for a specific type, all messages get removed, so method usage is misleading, see: FlashSessionDefaultTest::testGetMessagesTypeRemoveMessages.\n2. Added test cases for Session Adapter, which slightly differs from Direct implementaiton.\n3. Added a InMemory mock helper for session adapter.\n",
    "head_branch": "2.0.x_session_flash_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662130b618912b45d36a374c",
    "number": 11059,
    "body": "",
    "head_branch": "session_flash_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662130b718912b45d36a374d",
    "number": 11055,
    "body": "This should fix #11042 although I have no real way of testing it. Hope my style follows conventions. This time for 2.0.x branch\n",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662130b818912b45d36a374e",
    "number": 11054,
    "body": "This should fix #11042 although I have no real way of testing it. Hope my style follows conventions, this is my first attempt at hacking Phalcon...\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662130b918912b45d36a374f",
    "number": 11051,
    "body": "",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662130ba18912b45d36a3750",
    "number": 11050,
    "body": "issue #11049 \n",
    "head_branch": "paginate-notice",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662130bc18912b45d36a3751",
    "number": 11048,
    "body": "",
    "head_branch": "db-typo-getsqlexpressionhaving",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662130bd18912b45d36a3752",
    "number": 11047,
    "body": "See phalcon/docs#432\n",
    "head_branch": "docs-432",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662130be18912b45d36a3753",
    "number": 11044,
    "body": "Fixed issue #11021\n",
    "head_branch": "loader/namespace/multiple_directories",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662130bf18912b45d36a3754",
    "number": 11040,
    "body": "",
    "head_branch": "sql/dialect/sqlite/indexes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662130c018912b45d36a3755",
    "number": 11039,
    "body": "",
    "head_branch": "sql/dialect/mysql/indexes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662130c118912b45d36a3756",
    "number": 11038,
    "body": "This is a quick fix for issue #10405. Please check if we should use `empty` or `isset`.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662130c218912b45d36a3757",
    "number": 11032,
    "body": "",
    "head_branch": "mvc/router/tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662130c318912b45d36a3758",
    "number": 11030,
    "body": "",
    "head_branch": "mvc/router/host_name",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 6da308e9d44ba061c089ea6d832a246148fe0191 into 23de7e94bab11cdd5b558370bc95f00dee991fc8"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662130c418912b45d36a3759",
    "number": 11028,
    "body": "Issue #11024\n",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662130c518912b45d36a375a",
    "number": 11027,
    "body": "Fix for #11024.\n",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662130c718912b45d36a375b",
    "number": 11023,
    "body": "My project had worked well with previous version of Phalcon. However,ever since version 2.0, my project got this problem:\nFatal error: Call to undefined method Phalcon\\Db\\Result\\Pdo::nextRowSet() in D:\\visual studio projects\\UtillYou\\app\\controllers\\QuestionController.php on line 25\n\nIs it because of the lack of function?\n",
    "head_branch": "2.1.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662130c818912b45d36a375c",
    "number": 11015,
    "body": "",
    "head_branch": "patch-5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662130c918912b45d36a375d",
    "number": 11013,
    "body": "issue https://github.com/phalcon/cphalcon/issues/11005\n",
    "head_branch": "base-class",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662130ca18912b45d36a375e",
    "number": 11012,
    "body": "Please confirm this behavior change\n",
    "head_branch": "hot-fix/PUT-POST-issue",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662130cb18912b45d36a375f",
    "number": 11011,
    "body": "",
    "head_branch": "patch-6",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662130cc18912b45d36a3760",
    "number": 11004,
    "body": "Fixes #11003\n",
    "head_branch": "patch-5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662130cd18912b45d36a3761",
    "number": 10998,
    "body": "",
    "head_branch": "sql/dialect/sqlite/indexes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 15a295220cf9a7fdbe3f157362d95135bd517dad into b0fd988d46413be2cfc800d316bc77adab9f3c1c"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662130ce18912b45d36a3762",
    "number": 10994,
    "body": "ref #10992\n",
    "head_branch": "hostfix-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 413722cfa4064d250b98e94599df83843d89b8fc into 91b68db0b45dae461cd093db6c54f497f3a8e405"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662130cf18912b45d36a3763",
    "number": 10993,
    "body": "In order to allow the developer to perform initialization actions\n",
    "head_branch": "boot",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge f27c7f1a4fc62d2251f5eb9e83a2fa2fec05ec11 into 6f4096ddf3aef3163669f407784658dabd5c4ec7"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662130d118912b45d36a3764",
    "number": 10991,
    "body": "",
    "head_branch": "patch-6",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662130d218912b45d36a3765",
    "number": 10987,
    "body": "In order to allow the developer to perform initialization actions\n",
    "head_branch": "patch-5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662130d318912b45d36a3766",
    "number": 10986,
    "body": "",
    "head_branch": "session_redis",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 17493b8078f657fc11eaf031153181429ef074f2 into f6fc1565802285b8a0dccf8faa79a37a018c8c27"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662130d418912b45d36a3767",
    "number": 10985,
    "body": "**Maintain compatibility with version 2.0.x**\nsee  #10957 \n\n``` php\n$repository = new \\Phalcon\\Paginator\\Repository();\n$repository->setAliases(array(\n    'myFirstPage' => $repository::PROPERTY_FIRST_PAGE,\n    'myLastPage' => $repository::PROPERTY_LAST_PAGE,\n    'myCurrentPage' => $repository::PROPERTY_CURRENT_PAGE\n));\n\n$paginator = new \\Phalcon\\Paginator\\Adapter\\NativeArray(array(\n    'data' => array_fill(0, 30, 'banana'),\n    'limit'=> 25,\n    'page' => 1,\n    'repository' => $repository\n));\n\n$page = $paginator->getPaginate();\n\n// First page\necho $page->first . PHP_EOL; // compatibility with version 2.0.x\necho $page->getFirstPage() . PHP_EOL; // Getter\necho $page->firstPage . PHP_EOL; // Magic getter\necho $page->myFirstPage . PHP_EOL; // Alias\n\n// Current page\necho $page->current . PHP_EOL; // compatibility with version 2.0.x\necho $page->getCurrentPage() . PHP_EOL; // Getter\necho $page->currentPage . PHP_EOL; // Magic getter\necho $page->myCurrentPage . PHP_EOL; // Alias\n\n// Last page\necho $page->last . PHP_EOL; // compatibility with version 2.0.x\necho $page->getLastPage() . PHP_EOL; // Getter\necho $page->lastPage . PHP_EOL; // Magic getter\necho $page->myLastPage . PHP_EOL; // Alias\n```\n",
    "head_branch": "feature-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662130d518912b45d36a3768",
    "number": 10983,
    "body": "",
    "head_branch": "patch-5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662130d618912b45d36a3769",
    "number": 10982,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 64b68c9e72d1aa4b3d9c399c74477f6820047787 into 311aeb60f12496a334ca8eedb3b0f865934f0ecb"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662130d718912b45d36a376a",
    "number": 10978,
    "body": "SQLSTATE[24000]: Invalid cursor state: 0 [FreeTDS][SQL Server]Invalid cursor state\n\nWhen create a SQL Server adapter, using odbc\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662130d818912b45d36a376b",
    "number": 10976,
    "body": "",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662130d918912b45d36a376c",
    "number": 10972,
    "body": "",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662130da18912b45d36a376d",
    "number": 10966,
    "body": "",
    "head_branch": "patch-5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 2c289b426a64f15eec9cbf43d3666a588c259309 into 58cb694bb77164ac4366d430b65c39ca5753470d"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662130db18912b45d36a376e",
    "number": 10964,
    "body": "Actually it's is not possible to handle the module not defined exception except for a catch on application launch. \nThe new _handleException is a copy from dispatcher. If an exception is needed the application will launch an event: application:beforeException where it will be possible to override the default behaviour (throw the exception)\n",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662130dc18912b45d36a376f",
    "number": 10963,
    "body": "",
    "head_branch": "camel",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662130dd18912b45d36a3770",
    "number": 10962,
    "body": "",
    "head_branch": "camel",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662130de18912b45d36a3771",
    "number": 10961,
    "body": "",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 8572ea112706bbede9b44318a72d88b6437141a7 into a5809522c60a1806f55a0cfde70c31ae78a29f94"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662130df18912b45d36a3772",
    "number": 10956,
    "body": "",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge cbfec378622692eb8a6aa21cc627913f2735d746 into 95f665efe5cffbd31a1dd39c49c59d782b884d2c"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662130e018912b45d36a3773",
    "number": 10954,
    "body": "Form Messages are now initialized in the constructor. #10953 \n",
    "head_branch": "fix-10953",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662130e118912b45d36a3774",
    "number": 10949,
    "body": "PHP 5.3 support is dropped in 2.1.x\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662130e318912b45d36a3775",
    "number": 10946,
    "body": "",
    "head_branch": "2.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662130e418912b45d36a3776",
    "number": 10944,
    "body": "Add 'index' option for select Redis database.\nMetadata and Session.\n",
    "head_branch": "sukobuto-patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662130e518912b45d36a3777",
    "number": 10943,
    "body": "See https://getcomposer.org/doc/04-schema.md\n",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 0d44215507d387717f6eb4f147a72e5f2be9d129 into 45b83002561ebb2b56180f17a55856a7ac5245c0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662130e618912b45d36a3778",
    "number": 10942,
    "body": "Fixed markdown syntax\n\n![selection_117](https://cloud.githubusercontent.com/assets/1256298/9838375/f27471b8-5a64-11e5-845a-1c66335f900c.png)\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662130e718912b45d36a3779",
    "number": 10941,
    "body": "see #10938\n",
    "head_branch": "feature-10938",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662130e918912b45d36a377a",
    "number": 10939,
    "body": "Memcached persistent connection pool for cache and session backends. Enabled per default. Cache and Session can share the same connection pool as long as `$server` and `$client` are equal.\n\n``` php\n$cache = new \\Phalcon\\Cache\\Backend\\Libmemcached($frontCache, [ \n  \"server\" => $servers,\n  \"persistent_id\" => \"my_pool\",\n  \"client\" => $client_settings\n]);\n$session = new Phalcon\\Session\\Adapter\\Libmemcached([ \n  \"lifetime\" => 3600,\n  \"server\" => $servers,\n  \"persistent_id\" => \"my_pool\",\n  \"client\" => $client_settings\n]);\n```\n\n2x Unit-Tests updated accordingly to 'purge' client settings.\nI've been using persistent memcached pool since my statsKey performance regression #10343.\n",
    "head_branch": "persistentMemcached",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662130ea18912b45d36a377b",
    "number": 10937,
    "body": "",
    "head_branch": "10871_2.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662130eb18912b45d36a377c",
    "number": 10936,
    "body": "",
    "head_branch": "10909_2.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662130ec18912b45d36a377d",
    "number": 10935,
    "body": "- **SQLite INTEGER datetype fixes**\n\n`AUTOINCREMENT` is only allowed on an `INTEGER PRIMARY KEY`.\n\n**Wrong**:\n\n``` sql\nCREATE TABLE \"tbl1\" (`id` INT PRIMARY KEY AUTOINCREMENT NOT NULL);\n```\n\n**Correct**\n\n``` sql\nCREATE TABLE \"tbl1\" (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL);\n```\n- **SQLite DATETIME datetype fixes**\n\nFixed `Column::TYPE_DATETIME` constant value now it  `DATETIME`.\nFor `TIMESTAMP` datatype need use `Column::TYPE_TIMESTAMP` constant.\n- **Fixed SQLite tests for DATETIME datetype**\n- **Added SQLite test for creating table**\n- **Added timestamp test for all dialects**\n- **New feature**:  implemented `Phalcon\\Db\\Dialect\\Sqlite::createTable` (see below):\n\n**PHP**\n\n``` php\n<?php\nuse Phalcon\\Db\\Reference;\nuse Phalcon\\Db\\Index;\nuse Phalcon\\Db\\Dialect\\Sqlite;\nuse Phalcon\\Db\\Column;\n\n$dialect = new Sqlite;\n\n$id = new Column(\n    'id',\n    [\n        'type'          => Column::TYPE_INTEGER,\n        'primary'       => true,\n        'notNull'       => true,\n        'autoIncrement' => true,\n        'first'         => true\n    ]\n);\n\n$name = new Column(\n    'name',\n    [\n        'type'    => Column::TYPE_VARCHAR,\n        'notNull' => true,\n        'size'    => 80,\n        'after'   => 'id'\n    ]\n);\n\n$status = new Column(\n    'status',\n    [\n        'type'    => Column::TYPE_CHAR,\n        'notNull' => true,\n        'size'    => 1,\n        'default' => 'y',\n        'default' => true\n    ]\n);\n\n$ref = new Reference(\n    'profiles_ibfk_1',\n    [\n        'referencedSchema'  => 'test',\n        'referencedTable'   => 'users',\n        'columns'           => ['id'],\n        'referencedColumns' => ['id']\n    ]\n);\n\n$sql = $dialect->createTable(\n     'profiles',\n     'test',\n     [\n         'columns' => [$id, $name, $status],\n         'indexes' =>\n         [\n             new Index('name', ['name'], \"UNIQUE\"),\n         ],\n         'references' => [\n            $ref\n         ]\n     ]\n);\n\necho $sql, PHP_EOL;\n```\n\n**SQL**\n\n``` sql\nCREATE TABLE \"test\".\"profiles\" (\n    `id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,\n    `name` VARCHAR(80) NOT NULL,\n    `status` CHARACTER(1) NOT NULL DEFAULT \"1\",\n    UNIQUE (\"name\"),\n    CONSTRAINT `profiles_ibfk_1` FOREIGN KEY (\"id\") REFERENCES `users`(\"id\")\n)\n```\n\n**Note** if you declare 2 times primary, 1 will be used:\n\n``` php\n$id = new Column(\n    'id',\n    [\n        'type'          => Column::TYPE_INTEGER,\n        'primary'       => true, // primary here\n        'notNull'       => true,\n        'autoIncrement' => true,\n        'first'         => true\n    ]\n);\n\n// ...\n\n$sql = $dialect->createTable(\n     'profiles',\n     'test',\n     [\n         'columns' => [$id, $name, $status],\n         'indexes' =>\n         [\n             new Index('PRIMARY', ['id']), // primary here\n             new Index('name', ['name'], \"UNIQUE\"),\n         ],\n         'references' => [\n            $ref\n         ]\n     ]\n);\n\necho $sql, PHP_EOL;\n```\n\n**Output**:\n\n``` sql\nCREATE TABLE \"test\".\"profiles\" (\n    `id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL,\n    `name` VARCHAR(80) NOT NULL,\n    `status` CHARACTER(1) NOT NULL DEFAULT \"1\",\n    UNIQUE (\"name\"),\n    CONSTRAINT `profiles_ibfk_1` FOREIGN KEY (\"id\") REFERENCES `users`(\"id\")\n)\n```\n\nAlso you can use `table-constraint` like syntax for determining primary indexes:\n\n``` php\n$id = new Column(\n    'id',\n    [\n        'type'          => Column::TYPE_INTEGER,\n        'notNull'       => true,\n        // Please note, this will not be used now\n        // AUTOINCREMENT is only allowed on an INTEGER PRIMARY KEY\n        'autoIncrement' => true,\n        'first'         => true\n    ]\n);\n\n// ...\n\n$sql = $dialect->createTable(\n     'profiles',\n     'test',\n     [\n         'columns' => [$id, $name, $status],\n         'indexes' =>\n         [\n             new Index('PRIMARY', ['id']),\n             new Index('', ['name'], \"UNIQUE\"), // You can omit first param if it is not PRIMARY\n         ],\n         'references' => [\n            $ref\n         ]\n     ]\n);\n\n\necho $sql, PHP_EOL;\n```\n\n**Output**:\n\n``` sql\nCREATE TABLE \"test\".\"profiles\" (\n    `id` INTEGER NOT NULL,\n    `name` VARCHAR(80) NOT NULL,\n    `status` CHARACTER(1) NOT NULL DEFAULT \"1\",\n    PRIMARY KEY (\"id\"),\n    UNIQUE (\"name\"),\n    CONSTRAINT `profiles_ibfk_1` FOREIGN KEY (\"id\") REFERENCES `users`(\"id\")\n)\n```\n",
    "head_branch": "sql/dialect/sqlite",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662130ed18912b45d36a377e",
    "number": 10933,
    "body": "",
    "head_branch": "sql/dialect/general",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662130ee18912b45d36a377f",
    "number": 10931,
    "body": "In this pull request is one important change.\n\nbefore this change:\n1. if `event` (before) is closure and return false -  [cancels the route execution](https://github.com/phalcon/cphalcon/blob/2.0.x/phalcon/mvc/micro.zep#L676-L678)\n2. if `event` (before) is `MiddlewareInterface` object and return false/true/... - not cancels route execution\n\nIn this change:\n1. if `event` (before) is closure and return false/true/... - **not** cancels route execution\n2. if `event` (before) is `MiddlewareInterface` and return false/true/... - not cancels route execution\n\nIf you need to cancel execution on `event` (before) - in both cases **must be** called `$microApplication->stop();`\n\nFor example:\n\n``` php\n<?php\n$app = new Phalcon\\Mvc\\Micro();\n$app->before(function () use ($app) {\n    if ($app['session']->get('auth') == false) {\n        $app->stop();\n        return false;\n    }\n    return true;\n});\n$app->handle();\n```\n\nor\n\n``` php\n<?php\nclass Auth implements Phalcon\\Mvc\\Micro\\MiddlewareInterface\n{\n    public function call(Phalcon\\Mvc\\Micro $app)\n    {\n         if ($app['session']->get('auth') == false) {\n            $app->stop();\n            return false;\n        }\n        return true;\n    }\n}\n$app = new Phalcon\\Mvc\\Micro();\n$app->before(new Access());\n$app->handle();\n```\n",
    "head_branch": "BugFix10912in2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #10931 from pauliuspetronis/BugFix10912in2.1.x\n\nBugfix #10912 (Micro Middleware (before) does not stop operation)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662130ef18912b45d36a3780",
    "number": 10929,
    "body": "",
    "head_branch": "cookie",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662130f018912b45d36a3781",
    "number": 10927,
    "body": "",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662130f118912b45d36a3782",
    "number": 10926,
    "body": "This is just an example for @lajosbencz\n\n```\n$ git clone git@github.com:phalcon/cphalcon.git\nCloning into 'cphalcon'...\nWarning: Permanently added the RSA host key for IP address '192.30.252.129' to the list of known hosts.\nremote: Counting objects: 95067, done.\nremote: Total 95067 (delta 0), reused 0 (delta 0), pack-reused 95066\nReceiving objects: 100% (95067/95067), 83.42 MiB | 27.00 KiB/s, done.\nResolving deltas: 100% (73916/73916), done.\nChecking connectivity... done.\n\n$ cd cphalcon/\n$ git remote add lajosbencz git@github.com:lajosbencz/cphalcon.git\n$ git checkout 2.1.x\nBranch 2.1.x set up to track remote branch 2.1.x from origin.\nSwitched to a new branch '2.1.x'\n\n// edit files ...\n\n$ git status\nOn branch 2.1.x\nYour branch is up-to-date with 'origin/2.1.x'.\nChanges not staged for commit:\n  (use \"git add <file>...\" to update what will be committed)\n  (use \"git checkout -- <file>...\" to discard changes in working directory)\n\n    modified:   phalcon/mvc/view/engine/volt/compiler.zep\n    modified:   unit-tests/ViewEnginesVoltTest.php\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\n\n$ git checkout -b nfr_10798\nM   phalcon/mvc/view/engine/volt/compiler.zep\nM   unit-tests/ViewEnginesVoltTest.php\nSwitched to a new branch 'nfr_10798'\n$ git add .\n$ git commit -m 'Implement NFR #10798'\n[nfr_10798 fc0b53c] Implement NFR #10798\n 2 files changed, 11 insertions(+)\n$ git push --set-upstream lajosbencz nfr_10798\nCounting objects: 355, done.\nDelta compression using up to 4 threads.\nCompressing objects: 100% (135/135), done.\nWriting objects: 100% (355/355), 110.83 KiB | 0 bytes/s, done.\nTotal 355 (delta 287), reused 272 (delta 219)\nTo git@github.com:lajosbencz/cphalcon.git\n * [new branch]      nfr_10798 -> nfr_10798\n```\n",
    "head_branch": "nfr_10798",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662130f218912b45d36a3783",
    "number": 10925,
    "body": "",
    "head_branch": "feature-10924",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge a263966cfa6d595d80b76560f5f7a3f8fbc3eae0 into 421e8577335020b35a3360b556f3ef6b8085375d"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662130f318912b45d36a3784",
    "number": 10923,
    "body": "In this pull request is one important change.\n\nbefore this change:\n1. if `event` (before) is closure and return false -  [cancels the route execution](https://github.com/phalcon/cphalcon/blob/2.0.x/phalcon/mvc/micro.zep#L676-L678)\n2. if `event` (before) is `MiddlewareInterface` object and return false/true/... - not cancels route execution\n\nIn this change:\n1. if `event` (before) is closure and return false/true/... - **not** cancels route execution\n2. if `event` (before) is `MiddlewareInterface` and return false/true/... - not cancels route execution\n\nIf you need to cancel execution on `event` (before) - in both cases **must be** called `$microApplication->stop();`\n\nFor example:\n\n``` php\n<?php\n$app = new Phalcon\\Mvc\\Micro();\n$app->before(function () use ($app) {\n    if ($app['session']->get('auth') == false) {\n        $app->stop();\n        return false;\n    }\n    return true;\n});\n$app->handle();\n```\n\nor\n\n``` php\n<?php\nclass Auth implements Phalcon\\Mvc\\Micro\\MiddlewareInterface\n{\n    public function call(Phalcon\\Mvc\\Micro $app)\n    {\n         if ($app['session']->get('auth') == false) {\n            $app->stop();\n            return false;\n        }\n        return true;\n    }\n}\n$app = new Phalcon\\Mvc\\Micro();\n$app->before(new Access());\n$app->handle();\n```\n",
    "head_branch": "BugFix10912in2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662130f418912b45d36a3785",
    "number": 10918,
    "body": "",
    "head_branch": "10909",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662130f518912b45d36a3786",
    "number": 10917,
    "body": "",
    "head_branch": "sql/dialect/postgress_precision",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge b8e359b78a39ba3b2ff6b260bda2157b6ee0a819 into 3f6a3489c5abe68ac2b25110c4cf4101776f5a2e"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662130f618912b45d36a3787",
    "number": 10915,
    "body": "See phalcon/docs#685.\n",
    "head_branch": "docs-685",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 4c2e6eea250d8709c0f882a71ec72f8a65a04184 into b05f8f74946691e7b9be0f9019877c6a2e8ada25"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662130f718912b45d36a3788",
    "number": 10913,
    "body": "This is so that php IDEs do not see the get method as returning void.\n![screenshot_2](https://cloud.githubusercontent.com/assets/3328823/9764442/14c185a0-5707-11e5-83c3-4ef7c342c517.png)\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662130f818912b45d36a3789",
    "number": 10911,
    "body": "",
    "head_branch": "10897",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662130f918912b45d36a378a",
    "number": 10910,
    "body": "",
    "head_branch": "image_save",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662130fb18912b45d36a378b",
    "number": 10906,
    "body": "",
    "head_branch": "sql/dialect/column_definition",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662130fc18912b45d36a378c",
    "number": 10903,
    "body": "This is a temporary fix for issue #2411. This is where GROUP BY clauses cause an incorrect total item count and thus page count for the QueryBuilder\n\nI appreciate that this is not the perfect fix as it doesn't use a count and a FROM subquery like it has in previous versions. However this is not a function that is supported by PHQL at this time so this fix was not possible.\n\nAnother fix I came up with involved moving the grouping into a COUNT(DISTINCT col) but it doesn't work with multiple group by clauses and is notoriously slow in older versions of MySQL.\n\nI've opted for this solution as it doesn't really change the function that much but does correct the issue.\n",
    "head_branch": "issue_2411",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662130fd18912b45d36a378d",
    "number": 10901,
    "body": "",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662130fe18912b45d36a378e",
    "number": 10900,
    "body": "",
    "head_branch": "feature-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662130ff18912b45d36a378f",
    "number": 10898,
    "body": "",
    "head_branch": "feature-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge be4f13788f4d48c6a7fcc1f9b7cdad9c415d3e3a into bca8c6682224390f420d9d7beb232b607f040ef2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621310018912b45d36a3790",
    "number": 10896,
    "body": "I am very happy to be learning and have the opportunity, thank you for your attention :)\n",
    "head_branch": "validation-cc-v2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 3c34772305ecb3629373c883f0e8e74cb6873389 into e80a8bb3cfad38ad8daf3b06a95a570a7476cfe7"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621310118912b45d36a3791",
    "number": 10895,
    "body": "",
    "head_branch": "validation-cc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621310218912b45d36a3792",
    "number": 10894,
    "body": "",
    "head_branch": "validation-cc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621310318912b45d36a3793",
    "number": 10893,
    "body": "",
    "head_branch": "validation-cc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621310418912b45d36a3794",
    "number": 10889,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge bf574625f4a597da6e9a859b0a1d21a34166576a into 742dc2f25454a1298335e166fd90fec38019f070"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621310618912b45d36a3795",
    "number": 10884,
    "body": "see #10689 \n",
    "head_branch": "issues-10689",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621310718912b45d36a3796",
    "number": 10883,
    "body": "Update `Phalcon\\Session\\Adapter`, `Phalcon\\Session\\AdapterInterface` and also full coverage of the tests... And more improvements...\n\n_Added public method:_\n- `getOption()`\n- `getCookieParams()`\n- `setCookieParams()`\n- `reset()`\n- `commit()`\n- `abort()`\n- `clear()`\n- `encode()`\n- `decode()`\n\n_Added protected method_\n- `configure()`\n\n_Added options:_\n- name (session name) \n- cookie_lifetime\n- cookie_path\n- cookie_domain\n- cookie_secure\n- cookie_httponly\n\n_`Phalcon\\Session\\Adapter\\Files` added options:_\n- savePath\n",
    "head_branch": "feature-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621310818912b45d36a3797",
    "number": 10882,
    "body": "fixes #2821\nfixes #10881\nfixes #10876\n",
    "head_branch": "hotfix-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621310918912b45d36a3798",
    "number": 10880,
    "body": "There was a missing statement in appendMessage of Phalcon\\Form\\Element. Before this patch, the unit test I added:\n\n```\nThere was 1 error:\n\n1) FormsTest::testElementAppendMessage\nRuntimeException: Trying to call method appendmessage on a non-object\n\n.../cphalcon-olivier/unit-tests/FormsTest.php:541\n```\n\nWith this patch, the unit test is working.\n",
    "head_branch": "2.0.x-elmt-appendmsg",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 6892e198dc4745c284a9f7c40c83799534c5e9fa into 83509d72123b200ce4fc67a99d46e7c492639e64"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621310a18912b45d36a3799",
    "number": 10877,
    "body": null,
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621310b18912b45d36a379a",
    "number": 10872,
    "body": "Same hook as Phalcon\\Mvc\\Controller. Useful as __construct() method is final (it was not the case in 1.3.x)\n",
    "head_branch": "fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621310c18912b45d36a379b",
    "number": 10870,
    "body": "This adapter store sessions in Mongo\n",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621310d18912b45d36a379c",
    "number": 10868,
    "body": "NFR https://github.com/phalcon/cphalcon/issues/10866\n",
    "head_branch": "2.1.x-nfr10866",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621310e18912b45d36a379d",
    "number": 10867,
    "body": "NFR https://github.com/phalcon/cphalcon/issues/10866\n",
    "head_branch": "2.1.x-nfr10866",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621310f18912b45d36a379e",
    "number": 10864,
    "body": "",
    "head_branch": "patch-5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge c45dfad78e9cd45dffe44d6e5446e84ebc4ca962 into 06794e49514d9e458b460151db16c83002d76be7"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621311018912b45d36a379f",
    "number": 10863,
    "body": "",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621311118912b45d36a37a0",
    "number": 10862,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621311218912b45d36a37a1",
    "number": 10861,
    "body": "This adapter store sessions in Mongo\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621311318912b45d36a37a2",
    "number": 10859,
    "body": "",
    "head_branch": "uuid-validator",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621311418912b45d36a37a3",
    "number": 10858,
    "body": "If you register Route like this\n\n``` php\n$router->add('/reset-password/{code}/{email}/{id}/', array(\n    'controller' => 'Auth',\n    'action' => 'reset'\n))\n```\n\nApplication is working but it cant render View via it's Auth not auth\n\nNot errors, no excepions...\n",
    "head_branch": "patch-23",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621311518912b45d36a37a4",
    "number": 10857,
    "body": "",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621311718912b45d36a37a5",
    "number": 10854,
    "body": "Moved to latest branch\n",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621311818912b45d36a37a6",
    "number": 10851,
    "body": "Solved with a slightly different approach as outline in Issue.\n\nTests to come .. all working so far (is a very basic refactor)\n",
    "head_branch": "2.1.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621311918912b45d36a37a7",
    "number": 10850,
    "body": "In 1.3.x, setTrackingKey and getTrackingKey methods were available on Phalcon\\Cache\\Backend\\Memcache and Phalcon\\Cache\\Backend\\Libmemcached.\n\nRestore also the 1.3.x behaviour of queryKeys() method : \nIf there was no statsKey defined, queryKeys() method returns void instead of throwing an exception as in 2.0.x\n",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621311a18912b45d36a37a8",
    "number": 10849,
    "body": "Fixed #10848\n",
    "head_branch": "sql/dialects/default_value",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge a6519f23197e737446d2f22218202d26c0bb40c0 into e8f0fc4360708f878a2232fcfb7773b62613c18c"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621311b18912b45d36a37a9",
    "number": 10847,
    "body": "Allow easier message handling customisation, re Translation integration and other data injection approaches.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621311c18912b45d36a37aa",
    "number": 10844,
    "body": "",
    "head_branch": "transaction_issue",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621311d18912b45d36a37ab",
    "number": 10843,
    "body": "Refs #10832  \n",
    "head_branch": "sql/dialects/current_timestamp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621311e18912b45d36a37ac",
    "number": 10841,
    "body": "Disable options[\"statsKey\"] in cache backends per default. It is required for flush() or queryKeys() which are probably rarely used in production.\nIt was also not possible to disable statKey in redis and xcache. Memcache issued some notices.\n\nMentioned previously in #10343, [forum 3310](https://forum.phalconphp.com/discussion/3310/how-to-disable-phcm-store-all-the-keys-when-using-libmemcached-)\n\nUnit-tests may fail as I do not run all cache backend on my vagrant box\n",
    "head_branch": "disableStatsKeyPerDefault2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge a58f50b30e872790ad00f08e60c966bb89eefafe into 517f85d1e86fb5558f5bd14fc9c5df44904db38a"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621311f18912b45d36a37ad",
    "number": 10838,
    "body": "TYPE_DATETIME → TYPE_TIMESTAMP\n",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621312118912b45d36a37ae",
    "number": 10837,
    "body": "In the _exists method of model the fetchOne call can return false.  That condition should not throw notices.  It should also be explicit to fetchOne for the return type.\n",
    "head_branch": "fixes/model_exists_notice",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #10837 from chet0xhenry/fixes/model_exists_notice\n\nFix notice in _exists method of model"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621312218912b45d36a37af",
    "number": 10836,
    "body": "In some cases fetchOne return false.  The _exists method should handle that condition and should be more explicit in what the return type from fetchOne.\n",
    "head_branch": "fixes/model_exists_notice",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621312318912b45d36a37b0",
    "number": 10835,
    "body": "Implements `jsonSerialize()` in mvc\\model+row+result-set and `JsonSerializable` interface.  `jsonSerialize()` is called by `json_encode()` automatically.\n\nSee  #10273 \n\nSyntax:\n\n``` php\n$robots = Robots::find();\necho json_encode( $robots );\n```\n\nRebased from 2.0.x and dropped PHP 5.3 compatibility (#10320)\n",
    "head_branch": "jsonSerialize",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 49c3dad9bf6c91ddc96c5a4cadbe70490587e863 into 428a4198d74157a6a6d3dfcf30b1037edc927b4e"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621312418912b45d36a37b1",
    "number": 10834,
    "body": "arguments are restricted as an array and passed to router directly, so router cannot handle it with custom rules.\n\n```\n         */\n        public function handle(arguments = null)\n        {\n                var moduleName, taskName, actionName,\n                        params, route, parts, pattern, routeFound, matches, paths,\n                        beforeMatch, converters, converter, part, position, matchPosition,\n                        strParams;\n\n                let routeFound = false,\n                        parts = [],\n                        params = [],\n                        matches = null,\n                        this->_wasMatched = false,\n                        this->_matchedRoute = null;\n\n                if typeof arguments != \"array\" {\n\n                        if typeof arguments != \"string\" && typeof arguments != \"null\" {\n                                throw new Exception(\"Arguments must be an array or string\");\n                        }\n\n                        for route in reverse this->_routes {\n                         ............\n```\n",
    "head_branch": "console_router",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621312518912b45d36a37b2",
    "number": 10832,
    "body": "Fixed #2850\nRefs #10448\n",
    "head_branch": "db/column/timestamp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge c425cdcaa831a4ebde0946795307479bbb311a8f into 5a8bb6a1a9b61f1cd7dac27478fd36e28182ef2c"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621312618912b45d36a37b3",
    "number": 10831,
    "body": "",
    "head_branch": "db/column/has_default",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621312718912b45d36a37b4",
    "number": 10830,
    "body": "",
    "head_branch": "db/column/has_default",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621312818912b45d36a37b5",
    "number": 10828,
    "body": "Closes #10516\n",
    "head_branch": "case_uniformity",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621312918912b45d36a37b6",
    "number": 10827,
    "body": "Adds the code property which was present in 1.3, but is currently missing in 2.0.x.\nref #10819\n",
    "head_branch": "patch-5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621312a18912b45d36a37b7",
    "number": 10826,
    "body": "This is currently making the unit tests fail on the 2.1.x branch\n",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621312b18912b45d36a37b8",
    "number": 10825,
    "body": "",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621312c18912b45d36a37b9",
    "number": 10824,
    "body": "Since support for 5.3 is fully deprecated, this can be removed.\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621312d18912b45d36a37ba",
    "number": 10823,
    "body": "",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621312e18912b45d36a37bb",
    "number": 10820,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621312f18912b45d36a37bc",
    "number": 10815,
    "body": "Added `\\Phalcon\\Secutity\\Random::base58`.\n\nFrom [Wikipedia](https://en.wikipedia.org/wiki/Base58):\n\n> Base58 is a group of binary-to-text encoding schemes used to represent large integers as alphanumeric text. It is similar to Base64 but has been modified to avoid both non-alphanumeric characters and letters which might look ambiguous when printed. It is therefore designed for human users who manually enter the data, copying from some visual source, but also allows easy copy and paste because a double-click will usually select the whole string.\n\nThe result may contain alphanumeric characters except `0`, `O`, `I` and `l`. \n\n``` php\n$random = new \\Phalcon\\Security\\Random();\n\n// Random base58 string\necho $random->base58();   // 4kUgL2pdQMSCQtjE\necho $random->base58();   // Umjxqf7ZPwh765yR\necho $random->base58(24); // qoXcgmw4A9dys26HaNEdCRj9\necho $random->base58(7);  // 774SJD3vgP\n```\n\nIf `$len` is not specified, 16 is assumed. It may be larger in future. Throws `\\Phalcon\\Security\\Exception` if secure random number generator is not available or unexpected partial read.\n\nRefs #10804\n",
    "head_branch": "feature/secure_random/base_58",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621313018912b45d36a37bd",
    "number": 10814,
    "body": "See #10804\n",
    "head_branch": "tests/secure_random",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge d96864c36d8d8f98cd6a6f507edf5bba43dd91a0 into 7ce30577c9492a104d1420a5737c865bfea27fc7"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621313118912b45d36a37be",
    "number": 10812,
    "body": "if read and write connection are set separately and a transaction detected, use transaction's connection instead of predefined readConnection, for 'for update' statements\n",
    "head_branch": "reset_readconnection",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621313318912b45d36a37bf",
    "number": 10811,
    "body": "",
    "head_branch": "2.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621313418912b45d36a37c0",
    "number": 10808,
    "body": "Phalcon\\DI -> Phalcon\\Di\n",
    "head_branch": "di-case-letters",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621313518912b45d36a37c1",
    "number": 10807,
    "body": "",
    "head_branch": "patch-8",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621313618912b45d36a37c2",
    "number": 10806,
    "body": "",
    "head_branch": "patch-8",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621313718912b45d36a37c3",
    "number": 10805,
    "body": "```\n// Check    \n$trade = \\App\\Models\\Trades::findFirst(1);\n    $trade->price_all = '85.6703707035391';\n    $trade->save();\n\n    var_dump($trade->price_all); // \"85.6703707035391\"\n```\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621313818912b45d36a37c4",
    "number": 10804,
    "body": "## \\Phalcon\\Secutity\\Random\n\nSecure random number generator class.\nProvides secure random number generator which is suitable for generating session key in HTTP cookies, etc. This class **partially** borrows [SecureRandom](http://ruby-doc.org/stdlib-2.2.2/libdoc/securerandom/rdoc/SecureRandom.html) library from Ruby.\n\nThe presented here algorithms are cryptographically secure. No `rand`, `mt_rand`, etc.\n\nIt supports following secure random number generators:\n- [libsodium](https://github.com/jedisct1/libsodium)\n- [openssl](http://php.net/manual/en/book.openssl.php)\n- [/dev/urandom](https://en.wikipedia.org/wiki//dev/random)\n### Examples\n\n``` php\n$random = new \\Phalcon\\Security\\Random();\n\n// Random binary string\n$bytes = $random->bytes();\n\n// Random hex string\necho $random->hex(10); // a29f470508d5ccb8e289\necho $random->hex(10); // 533c2f08d5eee750e64a\necho $random->hex(11); // f362ef96cb9ffef150c9cd\necho $random->hex(12); // 95469d667475125208be45c4\necho $random->hex(13); // 05475e8af4a34f8f743ab48761\n\n// Random base64 string\necho $random->base64(12); // XfIN81jGGuKkcE1E\necho $random->base64(12); // 3rcq39QzGK9fUqh8\necho $random->base64();   // DRcfbngL/iOo9hGGvy1TcQ==\necho $random->base64(16); // SvdhPcIHDZFad838Bb0Swg==\n\n// Random URL-safe base64 string\necho $random->base64Safe();           // PcV6jGbJ6vfVw7hfKIFDGA\necho $random->base64Safe();           // GD8JojhzSTrqX7Q8J6uug\necho $random->base64Safe(8);          // mGyy0evy3ok\necho $random->base64Safe(null, true); // DRrAgOFkS4rvRiVHFefcQ==\n\n// Random UUID\necho $random->uuid(); // db082997-2572-4e2c-a046-5eefe97b1235\necho $random->uuid(); // da2aa0e2-b4d0-4e3c-99f5-f5ef62c57fe2\necho $random->uuid(); // 75e6b628-c562-4117-bb76-61c4153455a9\necho $random->uuid(); // dc446df1-0848-4d05-b501-4af3c220c13d\n\n// Random number between 0 and $len\necho $random->number(256); // 84\necho $random->number(256); // 79\necho $random->number(100); // 29\necho $random->number(300); // 40\n```\n### Doc\n#### `Random::bytes($len = 16)`\n\nGenerates a random binary string. If `$len` is not specified, 16 is assumed. It may be larger in future. The result may contain any byte: `x00` - `xFF`.\n\nThrows `\\Phalcon\\Security\\Exception` if secure random number generator is not available or unexpected partial read.\n\n**Example:**\n\n``` php\n$random = new \\Phalcon\\Security\\Random();\n\n$bytes = $random->bytes();\n```\n#### `Random::hex($len = null)`\n\nGenerates a random hex string.  If `$len` is not specified, 16 is assumed. It may be larger in future. The length of the result string is usually greater of `$len`.\n\nThrows `\\Phalcon\\Security\\Exception` if secure random number generator is not available or unexpected partial read.\n\n**Example:**\n\n``` php\n$random = new \\Phalcon\\Security\\Random();\n\necho $random->hex(10); // a29f470508d5ccb8e289\n```\n#### `Random::base64($len = null)`\n\nGenerates a random base64 string. If `$len` is not specified, 16 is assumed. It may be larger in future. The length of the result string is usually greater of `$len`.\n\nSize formula: 4 *( `$len` / 3) and this need to be rounded up to a multiple of 4. For example:\n\n``` php\nround(4 * ($len / 3)) % 4 === 0) ? round(4 * ($len / 3)) : round((4 * ($len / 3) + 4 / 2) / 4 * 4\n```\n\nThrows `\\Phalcon\\Security\\Exception` if secure random number generator is not available or unexpected partial read.\n\n**Example:**\n\n``` php\n$random = new \\Phalcon\\Security\\Random();\n\necho $random->base64(12); // 3rcq39QzGK9fUqh8\n```\n#### `Random::base64Safe($len = null, $padding = false)`\n\nGenerates a random URL-safe base64 string. If `$len` is not specified, 16 is assumed. It may be larger in future. The length of the result string is usually greater of `$len`. By default, padding is not generated because `=` may be used as a URL delimiter. The result may contain `A-Z`, `a-z`, `0-9`, `-` and `_`. `=` is also used if `$padding` is true. See [RFC 3548](https://www.ietf.org/rfc/rfc3548.txt) for the definition of URL-safe base64.\n\nThrows `\\Phalcon\\Security\\Exception` if secure random number generator is not available or unexpected partial read.\n\n**Example:**\n\n``` php\n$random = new \\Phalcon\\Security\\Random();\n\necho $random->base64Safe(); // GD8JojhzSTrqX7Q8J6uug\n```\n#### `Random::uuid()`\n\nGenerates a v4 random UUID (Universally Unique IDentifier). The version 4 UUID is purely random (except the version). It doesn't contain meaningful information such as MAC address, time, etc. See [RFC 4122](https://www.ietf.org/rfc/rfc4122.txt) for details of UUID.\n\nThis algorithm sets the version number (4 bits) as well as two reserved bits. All other bits (the remaining 122 bits) are set using a random or pseudorandom data source. Version 4 UUIDs have the form xxxxxxxx-xxxx-**4**xxx-**y**xxx-xxxxxxxxxxxx where **x** is any hexadecimal digit and **y** is one of 8, 9, A, or B (e.g., `f47ac10b-58cc-4372-a567-0e02b2c3d479`).\n\nThrows `\\Phalcon\\Security\\Exception` if secure random number generator is not available or unexpected partial read.\n\n**Example:**\n\n``` php\n$random = new \\Phalcon\\Security\\Random();\n\necho $random->uuid(); // 1378c906-64bb-4f81-a8d6-4ae1bfcdec22\n```\n#### `Random::number()`\n\nGenerates a random number between 0 and `$len`.  Returns an integer: 0 <= **result** <= `$len`\n\nThrows `\\Phalcon\\Security\\Exception` if secure random number generator is not available, unexpected partial read **or $len <= 0**.\n\n**Example:**\n\n``` php\n$random = new \\Phalcon\\Security\\Random();\n\necho $random->number(16); // 8\n```\n",
    "head_branch": "feature/secure_random",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621313918912b45d36a37c5",
    "number": 10802,
    "body": "Since \\Phalcon\\DiInterface::getService returns \\Phalcon\\Di\\ServiceInterface:\n\n```\n    /**\n     * Returns the corresponding Phalcon\\Di\\Service instance for a service\n     *\n     * @param string $name \n     * @return \\Phalcon\\Di\\ServiceInterface\n     */\n    public function getService($name);\n```\n\n\\Phalcon\\Di\\ServiceInterface::setParameter should be added.\n",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621313a18912b45d36a37c6",
    "number": 10799,
    "body": "",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621313b18912b45d36a37c7",
    "number": 10797,
    "body": "For reference, before this PR, I got this error message:\n\n```\ndb_1            | ERROR:  column \"userid\" named in key does not exist at character 168\ndb_1            | STATEMENT:  CREATE TABLE \"Sid_Pomelo_Models_Users\" (\ndb_1            |               \"userID\" BIGINT NOT NULL,\ndb_1            |               \"emailAddress\" CHARACTER VARYING(255) NOT NULL,\ndb_1            |               \"password\" CHARACTER VARYING(100) NOT NULL,\ndb_1            |               PRIMARY KEY (userID)\ndb_1            |       )\n```\n\n![image](https://cloud.githubusercontent.com/assets/1364214/9275498/5e4406b6-4295-11e5-8e52-5e4c0c32b372.png)\n",
    "head_branch": "postgres-createtable-primary",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621313c18912b45d36a37c8",
    "number": 10796,
    "body": "",
    "head_branch": "postgres-createtable",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621313d18912b45d36a37c9",
    "number": 10795,
    "body": "Since \\Phalcon\\DiInterface::getService returns \\Phalcon\\Di\\ServiceInterface:\n\n```\n    /**\n     * Returns the corresponding Phalcon\\Di\\Service instance for a service\n     *\n     * @param string $name \n     * @return \\Phalcon\\Di\\ServiceInterface\n     */\n    public function getService($name);\n```\n\n\\Phalcon\\Di\\ServiceInterface::setParameter should be added.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621313f18912b45d36a37ca",
    "number": 10792,
    "body": "Update in Cookie and Cookies classes to fix #10789 \n",
    "head_branch": "issue_10789",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621314018912b45d36a37cb",
    "number": 10790,
    "body": "`Phalcon\\Forms\\Element\\Select::addOption()` incorrectly assigned the keys and values creating optgroups instead of options.\n",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621314118912b45d36a37cc",
    "number": 10786,
    "body": "if read and write connection are set separately and a transaction detected, use transaction's connection instead of predefined readConnection, for 'for update' statements\n",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621314218912b45d36a37cd",
    "number": 10777,
    "body": "",
    "head_branch": "patch-7",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge d510b156e9e4f7d8db9f9ad297c884e5aa7b0d6f into 21dd5a003cf3bcd21d70428d2548d725e4abd83a"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621314318912b45d36a37ce",
    "number": 10773,
    "body": "",
    "head_branch": "text-uncamelize-comment",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621314418912b45d36a37cf",
    "number": 10768,
    "body": "see #10759\n",
    "head_branch": "BC-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621314518912b45d36a37d0",
    "number": 10766,
    "body": "Refs https://github.com/phalcon/zephir/issues/1044\n\nRelated #10765\n",
    "head_branch": "patch-6",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621314618912b45d36a37d1",
    "number": 10765,
    "body": "Refs https://github.com/phalcon/zephir/issues/1044\n",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621314718912b45d36a37d2",
    "number": 10763,
    "body": "I was short on time and having trouble rebasing with two branches and so I started over with the latest 2.0.x code.\n",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621314818912b45d36a37d3",
    "number": 10762,
    "body": "",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621314918912b45d36a37d4",
    "number": 10760,
    "body": "Fix error #10758\n",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621314a18912b45d36a37d5",
    "number": 10757,
    "body": "as php will send an empty array for arguments\nIt produces errors when using mock objects, etc..\n(This is https://github.com/phalcon/cphalcon/pull/10565 but with __callStatic)\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621314b18912b45d36a37d6",
    "number": 10752,
    "body": "Fixes https://github.com/phalcon/phalcon-devtools/pull/464\n",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621314c18912b45d36a37d7",
    "number": 10751,
    "body": "",
    "head_branch": "issues-10749",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621314d18912b45d36a37d8",
    "number": 10741,
    "body": "",
    "head_branch": "patch-22",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621314f18912b45d36a37d9",
    "number": 10732,
    "body": "using fromInput\n\nhttps://github.com/phalcon/cphalcon/blob/master/phalcon/mvc/model/criteria.zep\n\nIts possible on line 739\ncriteria->where(join(\" AND \", conditions));\n\nCreate something like set AND or OR ?\n\nprotected $_whereType = 'AND';\n\nsetWhereType($type='and') {$this->_whereType = $type; return $this;}\ncriteria->where(join($this->_whereType , conditions));\n\n$thanks\n",
    "head_branch": "2.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621315018912b45d36a37da",
    "number": 10729,
    "body": "refs https://github.com/phalcon/cphalcon/pull/10727#issuecomment-125239212\n",
    "head_branch": "patch-21",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621315118912b45d36a37db",
    "number": 10727,
    "body": "",
    "head_branch": "patch-19",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621315218912b45d36a37dc",
    "number": 10723,
    "body": "As agreed on beforehand, when returning a namespaced PHP object, we need the backslash in front of the object.\n",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621315318912b45d36a37dd",
    "number": 10722,
    "body": "I perceive this bug to be an artifact of Phalcon's humble beginnings when it did not support nested queries.\n\nThe select routine performs correctly for the outermost `SELECT` but then fails on join conditions within an `EXISTS` subquery.  This is due to the join conditions loop first iterating on a list of all of the tables so far on a global context (which is correct for the first query).  This patch hopes to fix this issue without causing regression by accessing the AST table data from that query only (down into the AST) instead of from the global list (of everything so far merged together).\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621315418912b45d36a37de",
    "number": 10721,
    "body": "I think that the impact on the code for stability concerns is very low because this feature is skipped over with the default settings.  The options name can be changed easily once this is accepted.\n\nI also have a another fix for bug #10705 but I think that I can refactor the solution to better take advantage of calculations performed earlier in the routine.\n\nSo I see this as a two part fix with an iterative strategy;\n1. To be able to bypass the problematic implicit join code as new issues come up.\n2. To iterate on fixing bugs in the join code as they surface and thus being able to re-enable the implicit joining.\n\nIts a terrible situation to hit a blocker bug when doing complicated PHQL queries (such as nested queries) and this will allow the developer to continue building their application in PHP land by performing explicit-only joins until such a time that he has time to fix the Phalcon bug.\n",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621315518912b45d36a37df",
    "number": 10713,
    "body": "See #10709\n\nPreviously, something like these examples would have failed:\n\n``` php\n$image = new \\Phalcon\\Image\\Adapter\\Gd('image.jpg');\n// ...\n$image->save();\n```\n\nor...\n\n``` php\n$image = new \\Phalcon\\Image\\Adapter\\Gd('image.jpg');\n// ...\n$image->save('filename-without-extension');\n```\n",
    "head_branch": "fix-10709",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 9f51fc63772cdf1bae0c4aa1d1a776ae31d4a348 into f51b15642d74eac8187eaad40b26b221a0ff734e"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621315618912b45d36a37e0",
    "number": 10708,
    "body": "",
    "head_branch": "changelog",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621315718912b45d36a37e1",
    "number": 10707,
    "body": "My first phalcon pull request.\n",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621315818912b45d36a37e2",
    "number": 10706,
    "body": "make transactionManager service name be concordant.\n\n``` php\nforeach ($di->getServices() as $service) {\n    $realService = $di->get($service->getName());\n} \n```\n\nwill throw:\nService 'transactions' wasn't found in the dependency injection container\n",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621315918912b45d36a37e3",
    "number": 10703,
    "body": "",
    "head_branch": "fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621315a18912b45d36a37e4",
    "number": 10701,
    "body": "master -> 2.0.x (https://github.com/phalcon/cphalcon/pull/10693)\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621315b18912b45d36a37e5",
    "number": 10700,
    "body": "Added the backslash in front of Phalcon in annotation tags, where it was missing.\nAlso added a backslash in front of a Closure type hint, where it was missing.\n",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge d029cea1f4977d9a2d84388362254d0e06750ede into b592d919f3d5c8eac24e1cb6ee705792f9175eed"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621315c18912b45d36a37e6",
    "number": 10699,
    "body": "",
    "head_branch": "docblocks-typos",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621315d18912b45d36a37e7",
    "number": 10698,
    "body": "",
    "head_branch": "docblocks-typos",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621315e18912b45d36a37e8",
    "number": 10697,
    "body": "",
    "head_branch": "Beanstalkd-add-function-listTubes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621315f18912b45d36a37e9",
    "number": 10695,
    "body": "see #10694\n",
    "head_branch": "issues-10694",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621316018912b45d36a37ea",
    "number": 10693,
    "body": "fixed .zep for https://github.com/phalcon/cphalcon/pull/10680\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621316218912b45d36a37eb",
    "number": 10692,
    "body": "",
    "head_branch": "2.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge d2e2b52b5fcebf757d59cb776dd8f02508df30cd into dc2ab65202d78064cfcb96298d494e967bf19499"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621316318912b45d36a37ec",
    "number": 10690,
    "body": "see #10689\n",
    "head_branch": "issues-10689",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621316418912b45d36a37ed",
    "number": 10688,
    "body": "Courtesy of https://github.com/phalcon/docs/pull/562 and https://github.com/phalcon/docs/pull/550 and https://github.com/phalcon/docs/pull/441/files#diff-d364d7c89737660965668eeb475466feR22.\n",
    "head_branch": "docs-562",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621316518912b45d36a37ee",
    "number": 10687,
    "body": "",
    "head_branch": "queue-beanstalk-job-construct",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621316618912b45d36a37ef",
    "number": 10685,
    "body": "See https://github.com/phalcon/docs/issues/234\n",
    "head_branch": "mvc-view-layout-level-typo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge caf0890b5976e14576f4538bdacf13dac7544183 into 8ac8c90fb762a069f176a6d3aabe1b17686ec15a"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621316718912b45d36a37f0",
    "number": 10684,
    "body": "",
    "head_branch": "debug-tidy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621316818912b45d36a37f1",
    "number": 10683,
    "body": "",
    "head_branch": "db-dialect-qualifytablename",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621316918912b45d36a37f2",
    "number": 10682,
    "body": "",
    "head_branch": "model-metadata-redis",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 0ae1fc8e94b5a98e4ccfec0c04a06c65dfa5e8d8 into c84e92d2cf5fbc1eb4d8869c9ca0e2e0f6ab03b1"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621316a18912b45d36a37f3",
    "number": 10681,
    "body": "Fixes phalcon/phalcon-devtools#449\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621316b18912b45d36a37f4",
    "number": 10680,
    "body": "",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621316d18912b45d36a37f5",
    "number": 10678,
    "body": "Fixes phalcon/phalcon-devtools#450\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621316e18912b45d36a37f6",
    "number": 10674,
    "body": "#10665\n",
    "head_branch": "10665",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 3ae5564ba9fc1a7ad2925232e2b92c7f548ff2e7 into 1571c4af63d58011ec7fd513b3f48f95b3514c34"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621316f18912b45d36a37f7",
    "number": 10673,
    "body": "#10648\n",
    "head_branch": "2.0.x-10648-notices",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621317018912b45d36a37f8",
    "number": 10672,
    "body": "I removed the new code for organizing the LIMIT clause with a binding - in getPhql() it's incrementing the hiddenParam variable _each_ time getPhql() is called - meaning when you execute a query with a limit, it can throw a \"too many bindings\" error (for bindings than tokens)\n",
    "head_branch": "bug/limit_bindings",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621317118912b45d36a37f9",
    "number": 10671,
    "body": "I'm having some trouble with Memcached->set() and I can't access the «getResultCode()» directly (this->_memcache is private). So adding the error code in the Exception message would help.\n",
    "head_branch": "patch-5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621317218912b45d36a37fa",
    "number": 10670,
    "body": "",
    "head_branch": "session-redis",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621317318912b45d36a37fb",
    "number": 10668,
    "body": "",
    "head_branch": "string-concat",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621317418912b45d36a37fc",
    "number": 10667,
    "body": "",
    "head_branch": "json-sudo-test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621317518912b45d36a37fd",
    "number": 10664,
    "body": "",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621317618912b45d36a37fe",
    "number": 10663,
    "body": "",
    "head_branch": "fix-10662",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621317718912b45d36a37ff",
    "number": 10661,
    "body": "See #10658 \n",
    "head_branch": "volt-tel-field-array",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621317818912b45d36a3800",
    "number": 10659,
    "body": "",
    "head_branch": "postgres-double-quotes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621317918912b45d36a3801",
    "number": 10656,
    "body": "",
    "head_branch": "improve-10646",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621317a18912b45d36a3802",
    "number": 10654,
    "body": "",
    "head_branch": "typos",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621317b18912b45d36a3803",
    "number": 10653,
    "body": "~~Once https://github.com/phalcon/zephir/pull/1027 is merged, this PR should work.~~\n\nCurrently failing due at https://travis-ci.org/phalcon/cphalcon/jobs/70892925#L786, see https://github.com/phalcon/zephir/pull/1028.\n",
    "head_branch": "travis-docker",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621317c18912b45d36a3804",
    "number": 10652,
    "body": "",
    "head_branch": "text-increment",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621317d18912b45d36a3805",
    "number": 10651,
    "body": "",
    "head_branch": "simple-ifs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621317e18912b45d36a3806",
    "number": 10650,
    "body": "",
    "head_branch": "http-response-setcache",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 01bfafe0d522e4fd4ac3803841fde71ca1af1101 into d6f25fcaef3d46c03ebf2a7ee4de2d2062286a16"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621317f18912b45d36a3807",
    "number": 10649,
    "body": "",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621318018912b45d36a3808",
    "number": 10647,
    "body": "",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621318218912b45d36a3809",
    "number": 10645,
    "body": "Merging bug fixes into master\n",
    "head_branch": "2.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge 553c2f5ce7aae40020fe2ba9f6d276a0237a4155 into e69843ed16ab7531e457752433de2e7618710493"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621318318912b45d36a380a",
    "number": 10644,
    "body": "Fix an odd behavior with `$view->setLayout()` and `$view->pick()`.\nThis may not be a bug :confused: :question: \n",
    "head_branch": "issue-1933",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621318418912b45d36a380b",
    "number": 10643,
    "body": "",
    "head_branch": "mvc-collection-save",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621318518912b45d36a380c",
    "number": 10642,
    "body": "",
    "head_branch": "tag-hasvalue",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621318618912b45d36a380d",
    "number": 10641,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621318718912b45d36a380e",
    "number": 10634,
    "body": "Phalcon\\Logger\\Formatter\\Line: no more newline at end of message like in 1.3.x (#10631)\n\nNote: I didn't understand where to put unit test.\n",
    "head_branch": "2.0.x-logger-newline",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621318818912b45d36a380f",
    "number": 10630,
    "body": "",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621318918912b45d36a3810",
    "number": 10628,
    "body": "",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621318a18912b45d36a3811",
    "number": 10620,
    "body": "#10619\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621318b18912b45d36a3812",
    "number": 10617,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621318c18912b45d36a3813",
    "number": 10614,
    "body": "https://forum.phalconphp.com/discussion/7365/image-adapter-pixelate-bug\n",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621318d18912b45d36a3814",
    "number": 10612,
    "body": "Fix https://github.com/phalcon/zephir/issues/1023\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621318e18912b45d36a3815",
    "number": 10603,
    "body": "Regarding issue #10595\n",
    "head_branch": "fix/issue-10595",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621318f18912b45d36a3816",
    "number": 10602,
    "body": "In regards to issue #10595\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621319018912b45d36a3817",
    "number": 10600,
    "body": "",
    "head_branch": "column-patch-1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge 54fa817e15f24b8ff1dc73918951b9ba0adc7fa8 into 02e7b82cc1a8b1663a8023d71beac201ef411a48"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621319218912b45d36a3818",
    "number": 10599,
    "body": "",
    "head_branch": "2.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621319418912b45d36a3819",
    "number": 10597,
    "body": "",
    "head_branch": "2.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621319518912b45d36a381a",
    "number": 10594,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge c75a86cc32cbb51fa1e7b850a1b9c8d9c2dddf46 into fefb5cf6ec5127eb3126d48bd3df9a9f99594cfa"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621319618912b45d36a381b",
    "number": 10590,
    "body": "[https://forum.phalconphp.com/discussion/7365/image-adapter-pixelate-bug](https://forum.phalconphp.com/discussion/7365/image-adapter-pixelate-bug)\n",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621319718912b45d36a381c",
    "number": 10588,
    "body": "",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621319818912b45d36a381d",
    "number": 10585,
    "body": "",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621319918912b45d36a381e",
    "number": 10582,
    "body": "See #10579\n",
    "head_branch": "patch-20",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621319a18912b45d36a381f",
    "number": 10578,
    "body": "",
    "head_branch": "NFR-5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621319b18912b45d36a3820",
    "number": 10577,
    "body": "",
    "head_branch": "patch-19",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621319c18912b45d36a3821",
    "number": 10576,
    "body": "",
    "head_branch": "NFR-6",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621319d18912b45d36a3822",
    "number": 10575,
    "body": "cf #10573\n",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621319e18912b45d36a3823",
    "number": 10574,
    "body": "",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621319f18912b45d36a3824",
    "number": 10572,
    "body": "",
    "head_branch": "NFR-5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131a018912b45d36a3825",
    "number": 10571,
    "body": "Generates random text in accordance with the template:\n\n```\necho Phalcon\\Text::dynamic(\"{Hi|Hello}, my name is a {Bob|Mark|Jon}!\"); \n    // Hi my name is a Bob\n\necho Phalcon\\Text::dynamic(\"{Hi|Hello}, my name is a {Bob|Mark|Jon}!\");\n    // Hi my name is a Jon\n\necho Phalcon\\Text::dynamic(\"{Hi|Hello}, my name is a {Bob|Mark|Jon}!\");\n   // Hello my name is a Bob\n```\n",
    "head_branch": "NFR-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131a118912b45d36a3826",
    "number": 10570,
    "body": "cf #1434 \n",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131a218912b45d36a3827",
    "number": 10567,
    "body": "Restore v1.3.x behavior\n",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131a318912b45d36a3828",
    "number": 10566,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131a418912b45d36a3829",
    "number": 10565,
    "body": "arguments would receive an empty array\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge f4b679291c2878fdedfab9c5a2b2d82d1faca5f7 into a127b7433e1d4c751bf25a230d4559d5284c7839"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131a518912b45d36a382a",
    "number": 10564,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131a618912b45d36a382b",
    "number": 10560,
    "body": "Add depth to json_encode, for more flexibility.\n\nMore information: http://php.net/manual/en/function.json-encode.php\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131a818912b45d36a382c",
    "number": 10559,
    "body": "",
    "head_branch": "postgres_type",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131a918912b45d36a382d",
    "number": 10558,
    "body": "",
    "head_branch": "feature",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131aa18912b45d36a382e",
    "number": 10555,
    "body": "",
    "head_branch": "feature",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131ab18912b45d36a382f",
    "number": 10552,
    "body": "Now on branch 2.0.x\n",
    "head_branch": "fix/again-gettext",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131ac18912b45d36a3830",
    "number": 10551,
    "body": "",
    "head_branch": "fix/gettext",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131ad18912b45d36a3831",
    "number": 10550,
    "body": "",
    "head_branch": "fix/gettext",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131af18912b45d36a3832",
    "number": 10548,
    "body": "Added `Phalcon\\Debug\\Dump::toJson()`\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 6bd9b11c739fbf472bace9265752593381d0a95f into 5f365e3cc0796979cd8276c9d9e9da6034b2b95d"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131b018912b45d36a3833",
    "number": 10545,
    "body": "",
    "head_branch": "changelog",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 6588472f2bea0240c43e7f13cfc33ae74b66ee00 into c30760550737d54b073c379a095866b1c689e725"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131b118912b45d36a3834",
    "number": 10538,
    "body": "Fix for #10536\n",
    "head_branch": "issues-10536",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131b218912b45d36a3835",
    "number": 10537,
    "body": "",
    "head_branch": "NFR-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131b318912b45d36a3836",
    "number": 10534,
    "body": "",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131b418912b45d36a3837",
    "number": 10529,
    "body": "",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131b518912b45d36a3838",
    "number": 10525,
    "body": "- Cleanup local regexp\n- Digits for matching need for example for `e2dk` protocol\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131b618912b45d36a3839",
    "number": 10522,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131b718912b45d36a383a",
    "number": 10516,
    "body": "make generated IDE helpers more amicable :)\n",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131b818912b45d36a383b",
    "number": 10515,
    "body": "Reason: simpler class extending\n\nExample: \n\n``` php\nnamespace MyFooBar {\n\n    class Version extends \\Er\\Version\n    {\n        protected static function _getVersion()\n        {\n            return [6, 5, 4, 3, 2];\n        }\n    }\n}\nnamespace {\n    echo \\MyFooBar\\Version::get();\n}\n```\n",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 4643dd7229a3943bb8530eaeda13628ce072b3e4 into be0457dfeb94193e1f6c8224a58976388a674b1d"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131b918912b45d36a383c",
    "number": 10514,
    "body": "",
    "head_branch": "feature/add-session-name",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131ba18912b45d36a383d",
    "number": 10511,
    "body": "small fix: autoBegin not transmited to transaction's constructor when get() called\n",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131bb18912b45d36a383e",
    "number": 10506,
    "body": "#10502\n",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131bc18912b45d36a383f",
    "number": 10504,
    "body": "Hey!\n\nSubject:\n\n``` zep\n/**\n * Creates a query builder from criteria\n *\n * @return BuilderInterface \n */\npublic function createBuilder() {}\n```\n",
    "head_branch": "review_12345",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131bd18912b45d36a3840",
    "number": 10498,
    "body": "",
    "head_branch": "feature/session-name",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131be18912b45d36a3841",
    "number": 10494,
    "body": "",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131c018912b45d36a3842",
    "number": 10493,
    "body": "",
    "head_branch": "2.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131c118912b45d36a3843",
    "number": 10491,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131c218912b45d36a3844",
    "number": 10489,
    "body": "",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131c418912b45d36a3845",
    "number": 10488,
    "body": "",
    "head_branch": "2.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge d8ba3350abfcbd3800e4da07f85810283a2fbc5b into c705e115264fbe42d44bb3f1fbf7aebd3e2498bb"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662131c518912b45d36a3846",
    "number": 10481,
    "body": "",
    "head_branch": "db",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131c618912b45d36a3847",
    "number": 10480,
    "body": "",
    "head_branch": "bug_2113",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131c718912b45d36a3848",
    "number": 10476,
    "body": "",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131c918912b45d36a3849",
    "number": 10474,
    "body": "",
    "head_branch": "2.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131ca18912b45d36a384a",
    "number": 10473,
    "body": "When use short route path on not-found, dispatcher throw a exception.\n$router->notFound('Index::notFound');\n",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131cb18912b45d36a384b",
    "number": 10469,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131cc18912b45d36a384c",
    "number": 10468,
    "body": "",
    "head_branch": "2.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131ce18912b45d36a384d",
    "number": 10466,
    "body": "This change implements the same behaviour of the Phalcon\\Mvc\\Model::getSource() method to the Phalcon\\Mvc\\Model\\Criteria::getModelName() method.\nPhalcon\\Mvc\\Model\\Criteria::execute() now gets the model name from the method instead of the property.\n",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131cf18912b45d36a384e",
    "number": 10465,
    "body": "I would prefer to have the possibility to activate this kind of functionalities in php.ini files as in 1.3.4, i'm trying to add the code in Zephir.\n\nUpdate : I've developed the functionality in Zephir : https://github.com/phalcon/zephir/pull/985\n",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131d018912b45d36a384f",
    "number": 10464,
    "body": "This change implements the same behaviour of the Phalcon\\Mvc\\Model::getSource() method to the Phalcon\\Mvc\\Model\\Criteria::getModelName() method.\nPhalcon\\Mvc\\Model\\Criteria::execute() now gets the model name from the method instead of the property.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131d118912b45d36a3850",
    "number": 10459,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131d218912b45d36a3851",
    "number": 10449,
    "body": "",
    "head_branch": "issue-10199",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131d318912b45d36a3852",
    "number": 10445,
    "body": "",
    "head_branch": "session-adapter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131d418912b45d36a3853",
    "number": 10444,
    "body": "[see](https://github.com/KorsaR-ZN/phalcon-core/blob/bb180d1a062f9fd34cd4d43cc4d1a521207a572b/CHANGELOG.md)\n",
    "head_branch": "changelog",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131d518912b45d36a3854",
    "number": 10443,
    "body": "I changed the system of column types to be more extensible , now we can add more column type with php : \n\nCreate column type class : \n\n``` php\nnamespace MyNamespace\\ColumnType;\n\nuse Phalcon\\Db\\Column\\Type as ColumnType;\nuse Phalcon\\Db\\Column;\n\nclass Smallint extends ColumnType\n{\n    public function setup()\n    {\n        $this->dialects = [\n                \"mysql\":\"SMALLINT(#size#)\",\n                \"sqlite\":\"SMALLINT\",\n                \"postgresql\":\"SMALLINT\"\n            ];\n        $this->_autoIncrement = true;\n        $this->_scale = true;\n        $this->_isNumeric = true;\n        $this->_bindType = Column::BIND_PARAM_INT;\n    }\n    public function castValue(value) {\n        return (int)value;\n    }\n}\n```\n\nAnd add your type in the system : \n\n```\nPhalcon\\Db\\Column::addType( (new MyNamespace\\ColumnType\\Smallint()) );\n```\n\nNow you can use this new type in your model annotations for example.\n\nI'm open for all advices and contributions for optimise this, i'm a beginner with Zephir.\n",
    "head_branch": "columnTypes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131d618912b45d36a3855",
    "number": 10440,
    "body": "",
    "head_branch": "di-fully-qualified",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131d718912b45d36a3856",
    "number": 10439,
    "body": "## 2.0.2\n\n```\n$table1 = new \\Models\\Table1();\n$table2 = new \\Models\\Table2();\n\n$readConnection = $table1->getReadConnection();\n\n$builder = new \\Phalcon\\Mvc\\Model\\Query\\Builder();\n$builder->from(get_class($table1))\n   ->addFrom(get_class($table2), 't2');\n\necho $readConnection->getDialect()->select($builder->getQuery()->parse());\n```\n\n**Outputs**\n\n```\nSELECT `models\\Table1`.*, `t2`.* FROM `table1`, `table2` AS `t2`\n```\n## 2.0.3 (after merge)\n\n**Outputs**\n\n```\nSELECT `table1`.*, `t2`.* FROM `table1`, `table2` AS `t2`\n```\n",
    "head_branch": "patch-16",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131d818912b45d36a3857",
    "number": 10438,
    "body": "",
    "head_branch": "patch-17",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131d918912b45d36a3858",
    "number": 10434,
    "body": "Adds the blameable behavior, ported from incubator with a few fixes and tests added.\n",
    "head_branch": "blameable",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131da18912b45d36a3859",
    "number": 10433,
    "body": "Adds the blameable behavior, ported from incubator with a few fixes and tests added.\n",
    "head_branch": "blamable-behavior",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131db18912b45d36a385a",
    "number": 10429,
    "body": "",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131dc18912b45d36a385b",
    "number": 10424,
    "body": "",
    "head_branch": "filter_2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131dd18912b45d36a385c",
    "number": 10423,
    "body": "",
    "head_branch": "10421",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131de18912b45d36a385d",
    "number": 10418,
    "body": "",
    "head_branch": "10239",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131df18912b45d36a385e",
    "number": 10417,
    "body": "",
    "head_branch": "mvc-model-criteria-parameter-types",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131e018912b45d36a385f",
    "number": 10416,
    "body": "Steps:\n- [x] Add support for Collection Behaviors\n- [x] Implement SoftDelete and Timestampable behaviors\n- [x] Add tests\n- [x] Add to changelog\n\nrelated issue #1336\n",
    "head_branch": "behaviors-for-collections",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131e118912b45d36a3860",
    "number": 10415,
    "body": null,
    "head_branch": "collection-behaviors",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131e318912b45d36a3861",
    "number": 10414,
    "body": "Ref #1185\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131e418912b45d36a3862",
    "number": 10413,
    "body": "",
    "head_branch": "db-dialect-postgresql-whitespace",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131e518912b45d36a3863",
    "number": 10412,
    "body": "",
    "head_branch": "mvc-model-resultset-complex-underscore",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 383765533d78375e9d73ec2ebc46e35d1ad50f72 into d49e96d1406d50dc17803adfbe7c7b8e308136cf"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662131e618912b45d36a3864",
    "number": 10411,
    "body": "",
    "head_branch": "assets-manager-output-filteredjoinedcontent",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 56f33bd24688393d0904379dbbdeef926b024ea0 into c14aa81ed765619bc1a994d45b60e0edd97d99c9"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662131e718912b45d36a3865",
    "number": 10410,
    "body": "",
    "head_branch": "pointless-use",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131e818912b45d36a3866",
    "number": 10408,
    "body": "",
    "head_branch": "flash-session-getmessages",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge ee6a3f6cd8322974789437d16d9a98ac6101c36d into c9b23b653dd9bfec7c401e5e84ae455a868c13d4"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662131e918912b45d36a3867",
    "number": 10407,
    "body": "",
    "head_branch": "resulset",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge ad63d611caee0fbf7423db4301181440a10f1a59 into d158de5a1cccddb618fd3bc6dcf1307b8d3935dc"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662131ea18912b45d36a3868",
    "number": 10404,
    "body": "",
    "head_branch": "fix-10403",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131eb18912b45d36a3869",
    "number": 10402,
    "body": "This fixes a missing file in the builds causing undefined symbols\n",
    "head_branch": "2.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131ec18912b45d36a386a",
    "number": 10394,
    "body": "",
    "head_branch": "bug_10386",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131ee18912b45d36a386b",
    "number": 10393,
    "body": "",
    "head_branch": "2.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge aea71522eda0e7070feb507a81f1099af3876afa into df311308270b534f299ddd80b8af24bcb5f2e2a1"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662131ef18912b45d36a386c",
    "number": 10391,
    "body": "Add setter fallback in \"__set\" magic.\nThis is useful if you use protected (private) properties and assign a value directly to a property.\nIf this property has setter/getter functions they will be called preferably. \n",
    "head_branch": "pr/model-setter-fallback",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131f018912b45d36a386d",
    "number": 10388,
    "body": "this was default behavior of Phalcon\\Validation::getDefaultMessage prior to version 2\n",
    "head_branch": "bc-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131f118912b45d36a386e",
    "number": 10385,
    "body": "",
    "head_branch": "bug_10344",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 91520ad9869fcacb28bf44e2ded686287e91f2bf into 35462e05b9c5314ceef81b1201dfa7082ef3e0f2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131f218912b45d36a386f",
    "number": 10384,
    "body": "- Added conditional on Session adapter start() to check if the session has already been started\n- Added status() function in Session adapter to return the status of the session (disabled/none/started)\n",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge f6aa8272e9f2bc66d7fdc6a5dc14d7f9fd36c482 into 4e92e5e9b6130a0ef90d04ada0a584b15d7d1fe5"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662131f318912b45d36a3870",
    "number": 10383,
    "body": "",
    "head_branch": "issue-10371",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131f418912b45d36a3871",
    "number": 10382,
    "body": "Optimize use statements imports\n",
    "head_branch": "acl-imports",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131f518912b45d36a3872",
    "number": 10381,
    "body": "",
    "head_branch": "bug_10338",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131f618912b45d36a3873",
    "number": 10379,
    "body": "",
    "head_branch": "subquery_2.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131f818912b45d36a3874",
    "number": 10377,
    "body": "For example:\nhttp://docs.phalconphp.com/en/latest/api/Phalcon_Mvc_Model_Validator_Inclusionin.html\nhttp://docs.phalconphp.com/en/latest/api/Phalcon_Mvc_Model_Validator_Inclusionin.html\nhttp://docs.phalconphp.com/en/latest/api/Phalcon_Mvc_Model_Validator_Numericality.html\netc.\n",
    "head_branch": "docs-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131fa18912b45d36a3875",
    "number": 10376,
    "body": "For example:\nhttp://docs.phalconphp.com/en/latest/api/Phalcon_Mvc_Model_Validator_Inclusionin.html\nhttp://docs.phalconphp.com/en/latest/api/Phalcon_Mvc_Model_Validator_Inclusionin.html\nhttp://docs.phalconphp.com/en/latest/api/Phalcon_Mvc_Model_Validator_Numericality.html\netc.\n",
    "head_branch": "docs-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131fb18912b45d36a3876",
    "number": 10375,
    "body": "",
    "head_branch": "fixPostgresDialect",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 01a06e1df92ba8fb875ab7557f571bbc150249ec into aea71522eda0e7070feb507a81f1099af3876afa"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662131fc18912b45d36a3877",
    "number": 10374,
    "body": "it was changed from since version 1 and some tests in our app were failing because of it. its not very important, but wont do any harm to include it :)\n",
    "head_branch": "di-exception-message-check",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131fd18912b45d36a3878",
    "number": 10373,
    "body": "32 row prefetch was only available for simple resultset.\nAdditionally reduced code redundancies in current() \n\nTodo: Implement [\"chunks of 32 row](http://docs.phalconphp.com/en/latest/reference/models.html#model-resultsets). Unfortunately this requires rewrite of most resultset code....\n\nSee: https://github.com/phalcon/cphalcon/pull/10100#issuecomment-103437907\n",
    "head_branch": "resultsetOptimisations",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 18d30bffdc4eb170b28aadd31ae358220f386234 into f900d1f57f15ff555f4ac07ac787dfe1ae69738b"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662131fe18912b45d36a3879",
    "number": 10367,
    "body": "",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662131ff18912b45d36a387a",
    "number": 10359,
    "body": "-  I find my table via findFirst\n\n``` javascript\n$user = \\Model\\User::findFirst([                                       \n    \"(email :email: OR id = :email:) AND pw = :password:'\",  \n    'bind' => array('email' => $email, 'password' => sha1($password))                     \n]);                                                                                       \n```\n\nand is indeed get right data.\n-   I update the instance \n\n``` javascript\n$user->setLoginTime(date(\"Y-m-d H:i:s\"));                  \n$user->setLoginIp($this->request->getClientAddress());     \n```\n-  I save the instance.\n\n``` javascript\nif ($user->update() == false) {                             \n    $user->rollback(\"Cannot Update User Login info\");   \n    foreach ($user->getMessages() as $message) {            \n        echo $this->flashSession->error($message);              \n    }                                                           \n}                                                               \n```\n\nI got the error\n\n> PDOException: SQLSTATE[42S02]: Base table or view not found: 1146 Table 'username.tablename' doesn't exist \n\nso, I am confused that why I can't save the data, and also why is\n\n> username.tablename' \n\nnot \n\n> databasename.tablename' \n\n?\n",
    "head_branch": "2.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621320018912b45d36a387b",
    "number": 10356,
    "body": "",
    "head_branch": "mvc-model-serialize",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621320118912b45d36a387c",
    "number": 10355,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621320218912b45d36a387d",
    "number": 10350,
    "body": "The generation of the handler class in the dispatcher is wrong. If the handler name does not start with \\, the first char of the name will be cutted.\n\nThis will result in something like this: Api\\V1\\Controller\\etail_tableController\n\nbut it shoud be: Api\\V1\\Controller\\**D**etailTableController\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621320318912b45d36a387e",
    "number": 10349,
    "body": "https://github.com/phalcon/phalcon-devtools/blob/master/ide/gen-stubs.php#L350 throw an 'ReflectionException' with message 'Class Phalcon\\Mvc\\Collection\\CollectionInterface does not exist'\n",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge edf241c70d6c662d2209c0d8cb89e7bf589401a8 into 19ffd5574b0848800b7f87c4f6836d2afec6c96e"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621320418912b45d36a387f",
    "number": 10348,
    "body": "Fixes exception when `str` not string (for example int)\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621320618912b45d36a3880",
    "number": 10347,
    "body": "",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621320718912b45d36a3881",
    "number": 10331,
    "body": "Applied [this fix](https://github.com/phalcon/cphalcon/commit/ec52cdbc6f13e632c0c1eb64d711c1049775fc76). The bug was fixed in 1.0, but it is present in 2.0.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621320818912b45d36a3882",
    "number": 10329,
    "body": "This does introduce a problem: to override a model's source developers can only use:\n\n``` php\npublic function initialize()\n{\n    $this->setSource('new_source');\n}\n```\n\nI personally don't like overriding the `getSource()` method as it bypasses the models manager but I know many people do it.\n",
    "head_branch": "model-manager-prefix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621320918912b45d36a3883",
    "number": 10327,
    "body": "",
    "head_branch": "patch-5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621320a18912b45d36a3884",
    "number": 10326,
    "body": "",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621320b18912b45d36a3885",
    "number": 10325,
    "body": "See #10321 \n\nI've just readded lines from 1.3.4: https://github.com/phalcon/cphalcon/blob/1.3.4/ext/mvc/model/resultset/complex.c#L335\n",
    "head_branch": "fix-10321",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621320c18912b45d36a3886",
    "number": 10320,
    "body": "Implements `jsonSerialize()` in mvc\\model+row+result-set, BUT does not implement `JsonSerializable` interface as not supported by php 5.3 (otherwise `jsonSerialize()` would be called by `json_encode()` automatically).\n\nSee  #10273 \n\nSyntax:\n\n``` php\n$robots = Robots::find();\necho json_encode( $robots->jsonSerialize() );\n```\n",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621320d18912b45d36a3887",
    "number": 10318,
    "body": "",
    "head_branch": "subquery_2.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621320e18912b45d36a3888",
    "number": 10316,
    "body": "",
    "head_branch": "mvc-model-manager-getconnection",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621320f18912b45d36a3889",
    "number": 10315,
    "body": "",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621321018912b45d36a388a",
    "number": 10313,
    "body": "",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621321118912b45d36a388b",
    "number": 10312,
    "body": "",
    "head_branch": "bug_10301",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621321218912b45d36a388c",
    "number": 10311,
    "body": "",
    "head_branch": "db_10266",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621321318912b45d36a388d",
    "number": 10310,
    "body": "",
    "head_branch": "db_10266",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621321518912b45d36a388e",
    "number": 10309,
    "body": "Reverts phalcon/cphalcon#10308\n",
    "head_branch": "revert-10308-master",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621321618912b45d36a388f",
    "number": 10308,
    "body": "Fix \"Wrong number of parameters\" exception in Phalcon\\Mvc\\Collection\\Manager\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 5508906cbf4793fdfc54604a9682a982e9c4edea into 234dce936380321977146fc1445d7b5081ebd8f6"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621321718912b45d36a3890",
    "number": 10307,
    "body": "",
    "head_branch": "refactor-validation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621321818912b45d36a3891",
    "number": 10305,
    "body": "Also features `Queue\\Beanstalk::readYaml()` as a way to read YAML data from a Beanstalk server.\n",
    "head_branch": "beanstalk-stats",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621321918912b45d36a3892",
    "number": 10303,
    "body": "Also replace tree of conditions with one hash lookup.\n",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621321a18912b45d36a3893",
    "number": 10302,
    "body": "",
    "head_branch": "refactor-dispatcher-getparam",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621321b18912b45d36a3894",
    "number": 10299,
    "body": "The return is meant to be an instance of Collection, however since\n_addMap does not return anything it was NULL instead.\n",
    "head_branch": "fix-micro-collection",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621321c18912b45d36a3895",
    "number": 10298,
    "body": "Previously returned `this` in [1.3.4](https://github.com/phalcon/cphalcon/blob/1.3.4/ext/mvc/micro/collection.c#L258) as do [`get()`](https://github.com/phalcon/cphalcon/blob/2.0.x/phalcon/mvc/micro/collection.zep#L157), [`post()`](https://github.com/phalcon/cphalcon/blob/2.0.x/phalcon/mvc/micro/collection.zep#L171), _et cetera_.\n\nSee also https://github.com/phalcon/cphalcon/issues/10296#issuecomment-100293384\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621321d18912b45d36a3896",
    "number": 10295,
    "body": "",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621321e18912b45d36a3897",
    "number": 10293,
    "body": "",
    "head_branch": "refactor-debug-getarraydump",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621321f18912b45d36a3898",
    "number": 10292,
    "body": "This refactors out duplicate code introduced in #10168 and fixes the `Dispatcher::getHandlerClass` method that was returning a broken value (first character of class name missing):\n\n```\n1) DispatcherMvcTest::testDispatcher\nFailed asserting that two strings are equal.\n--- Expected\n+++ Actual\n@@ @@\n-'IndexController handler class cannot be loaded'\n+'ndexController handler class cannot be loaded'\n\n2) DispatcherMvcTest::testGetControllerClass\nFailed asserting that two strings are equal.\n--- Expected\n+++ Actual\n@@ @@\n-'Foo\\Bar\\estController'\n+'Foo\\Bar\\TestController'\n\n3) DispatcherMvcTest::testDefaultsResolve\nFailed asserting that two strings are equal.\n--- Expected\n+++ Actual\n@@ @@\n-'Foo\\IndexController'\n+'Foo\\ndexController'\n```\n",
    "head_branch": "fix-duplicated-dispatcher-code",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621322018912b45d36a3899",
    "number": 10290,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621322118912b45d36a389a",
    "number": 10289,
    "body": "See #10283 and https://github.com/phalcon/cphalcon/blob/1.3.4/ext/http/request.c#L692\n",
    "head_branch": "fix-10283",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 8fc371f55afb0f242b9932d108ae65301dd0d46b into b0b1cff3b929b22d9bc59861f8d8e992fd396b34"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621322218912b45d36a389b",
    "number": 10288,
    "body": "See #10283 and https://github.com/phalcon/cphalcon/blob/1.3.4/ext/http/request.c#L692\n",
    "head_branch": "fix-10283",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621322318912b45d36a389c",
    "number": 10287,
    "body": "See #10285 \n",
    "head_branch": "fix-10285",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621322418912b45d36a389d",
    "number": 10286,
    "body": "",
    "head_branch": "reduce_slashes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621322518912b45d36a389e",
    "number": 10282,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621322618912b45d36a389f",
    "number": 10281,
    "body": "Fixes #10279. This is also effectively a _resubmission_ of #920.\n",
    "head_branch": "fix-10279",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621322718912b45d36a38a0",
    "number": 10280,
    "body": "Add more dialect for manage postgresql tables\n",
    "head_branch": "postgresql-dialect",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge d36a5315d655a8748cd0446a734c49f8e2916208 into d6997e227429ea296fc51d10eda4b2c84142a7c8"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621322918912b45d36a38a1",
    "number": 10277,
    "body": "See http://forum.phalconphp.com/discussion/6655/route-notfound-setting-params-error\n",
    "head_branch": "router-params-substr",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621322a18912b45d36a38a2",
    "number": 10276,
    "body": "",
    "head_branch": "bug_10268",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621322b18912b45d36a38a3",
    "number": 10274,
    "body": "Same as #2332.\n\nFix for #1608 in 2.0.x\n",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 2211913540591133f8eb3ebff7d1d2fa5d8f5f10 into 87aba85b0df8f46ab07f0e1716fdc358cb805734"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621322c18912b45d36a38a4",
    "number": 10271,
    "body": "PDOException: SQLSTATE[28000] [1045] Access denied for user 'username'@'x.x.x.206' (using password: YES) \n\nbut I set host is x.x.x.117.\n\nso why phalcon said the host is x.x.x.206?\n\nand you can see the screen shot here:\n\nhttp://www.awesomescreenshot.com/image/189837/39318c098c8da4ffeca70615b4993a32\n\nso, why I can't use $db = new \\Phalcon\\Db\\Adapter\\Pdo\\Mysql() to connect my db?\n",
    "head_branch": "1.3.2",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621322d18912b45d36a38a5",
    "number": 10269,
    "body": "",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621322e18912b45d36a38a6",
    "number": 10265,
    "body": "See #10259\n",
    "head_branch": "fix-10259",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621322f18912b45d36a38a7",
    "number": 10264,
    "body": "",
    "head_branch": "routeinterface-route",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621323018912b45d36a38a8",
    "number": 10263,
    "body": "",
    "head_branch": "http-parameter-return-types",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 70563ed77fc1cbdc9c656101b562a5d621dfdff9 into 6d27aab90255fac4793bd6e08f426cad41bd6a23"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621323118912b45d36a38a9",
    "number": 10262,
    "body": "",
    "head_branch": "queue-return-false-first",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621323218912b45d36a38aa",
    "number": 10256,
    "body": "",
    "head_branch": "patch-15",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621323318912b45d36a38ab",
    "number": 10255,
    "body": "",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge ce703ee910f0da9e0a2c3c5adf2cce76c2e1361d into 9fa60c6ba609860005f6f49ab5c95ab487a3e558"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621323418912b45d36a38ac",
    "number": 10254,
    "body": "In accordance with phalcon/phalcon-devtools#332\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621323518912b45d36a38ad",
    "number": 10253,
    "body": "Bugfix for seek(position > 0) operations if seek(0) was not called before and rolling pointers are in use. Covered now by unit-test. See #10100 \n\nExample: $personas->getLast()\n\n``` php\n$personas = Personas::find());\n$this->assertInstanceOf(Personas::class, $personas->getLast());\n```\n",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621323618912b45d36a38ae",
    "number": 10251,
    "body": "~~@KorsaR-ZN, could you check [your code](https://github.com/phalcon/cphalcon/pull/10247#issuecomment-99114221) to see if this solves the problem?~~\n\nUpdate: This does solve an issue in the Paginator, but see also #10253 for the real fix.\n",
    "head_branch": "paginator-model-iterator",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge bd3c9c3dafb7a08b5128533a9c553b002330a881 into 04eb100adf74364a8541d7deb0bd56f468376064"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621323718912b45d36a38af",
    "number": 10250,
    "body": "",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621323918912b45d36a38b0",
    "number": 10247,
    "body": "",
    "head_branch": "2.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge 87aba85b0df8f46ab07f0e1716fdc358cb805734 into ad6202644b9a61dbd6c4baaa67f3fcd596083085"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621323a18912b45d36a38b1",
    "number": 10246,
    "body": "Fix for #10214 \n",
    "head_branch": "patch-14",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621323b18912b45d36a38b2",
    "number": 10243,
    "body": "",
    "head_branch": "bug_10238",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621323c18912b45d36a38b3",
    "number": 10242,
    "body": "",
    "head_branch": "db-parameter-return-types",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621323d18912b45d36a38b4",
    "number": 10241,
    "body": "",
    "head_branch": "fix-mysql-pdo-double-type",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621323e18912b45d36a38b5",
    "number": 10237,
    "body": "",
    "head_branch": "paginator-refactor",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621323f18912b45d36a38b6",
    "number": 10234,
    "body": "",
    "head_branch": "model__presave_2.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621324018912b45d36a38b7",
    "number": 10232,
    "body": "in accordance with 7a8bf80f570f15988519f3b6673315194cfc34bc\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621324118912b45d36a38b8",
    "number": 10230,
    "body": "",
    "head_branch": "volt-compiler-refactor",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621324318912b45d36a38b9",
    "number": 10229,
    "body": "",
    "head_branch": "mvc-collection-improvements",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621324418912b45d36a38ba",
    "number": 10227,
    "body": "This fixes the call to `$resource->getRealSourcePath()` by passing the source path created from the Manager and Collection.\n\nThis also cleans up an unnecessary full namespace reference to Collection.\n",
    "head_branch": "2.0.x-assets-manager-fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621324518912b45d36a38bb",
    "number": 10226,
    "body": "See #10225 \n\nThe constructor has also been refactored using `offsetSet()`.\n",
    "head_branch": "fix-10225",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge a60b0d61f484844df35d45663e4af137e28d4c61 into 34957e1899b2f65a66006ccf55a20440f601cc85"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621324618912b45d36a38bc",
    "number": 10223,
    "body": "The code has also been refactored to make it easier to follow.\n",
    "head_branch": "http-onlysuccessful",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621324718912b45d36a38bd",
    "number": 10219,
    "body": "Hopefully (!!), this should solve the recent errors in Travis.\n\nThis was first discovered in #10198.\n",
    "head_branch": "volt-slice",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621324818912b45d36a38be",
    "number": 10218,
    "body": "Forgive how minor this PR is, I'm trying to tidy up my working directory. :stuck_out_tongue: \n",
    "head_branch": "misc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621324918912b45d36a38bf",
    "number": 10217,
    "body": "fixing bug (prev PR #10166):\n\n```\n$builder = $model->getModelsManager()->createBuilder()\n->columns($columns)\n   ->addFrom('CartItems', 's')\n   ->where('s.cart_id=\"6086\"')\n   ->groupBy('s.product_id');\n\necho $readConnection->getDialect()->select($q->getQuery()->parse());\n```\n\nResult:\n\n```\nSELECT ``, ``, ``, ``, ``, ``, ``, ``, ``, ``, ``, ``, ``, ``, ``, `` FROM `cart_items` AS `s` WHERE `s`.`cart_id` = '6086' GROUP BY `s`.`product_id`\n```\n\nAnd also fix for #10160, #10135\n",
    "head_branch": "patch-12",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621324a18912b45d36a38c0",
    "number": 10211,
    "body": "This fixes #10208. \n",
    "head_branch": "fix-10208",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621324b18912b45d36a38c1",
    "number": 10209,
    "body": "Fixes issue with deep acl inheritance ( #10134 )\n",
    "head_branch": "deep_inherit_acl",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621324c18912b45d36a38c2",
    "number": 10204,
    "body": "Fixes issue with deep acl inheritance ( #10134 )\n",
    "head_branch": "deep_inherit",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621324d18912b45d36a38c3",
    "number": 10202,
    "body": "",
    "head_branch": "ouput",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621324e18912b45d36a38c4",
    "number": 10201,
    "body": "The queryKeys function was attempting to unset an undefined index (the value).\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621324f18912b45d36a38c5",
    "number": 10200,
    "body": "The queryKeys function was attempting to unset an undefined index (the value).\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621325018912b45d36a38c6",
    "number": 10198,
    "body": "",
    "head_branch": "volt_2.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621325118912b45d36a38c7",
    "number": 10194,
    "body": "In other words, the methods return the typical use case at the very end of the method and all exceptions are caught before.\n\nFor example, instead of this:\n\n``` zephir\npublic function stop() -> void\n{\n    if this->_cancelable {\n        let this->_stopped = true;\n    } else {\n        throw new Exception(\"Trying to cancel a non-cancelable event\");\n    }\n}\n```\n\n... do this:\n\n``` zephir\npublic function stop() -> void\n{\n    if !this->_cancelable {\n        throw new Exception(\"Trying to cancel a non-cancelable event\");\n    }\n\n    let this->_stopped = true;\n }\n\n```\n",
    "head_branch": "return-exceptions-first",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621325218912b45d36a38c8",
    "number": 10193,
    "body": "Added double column type to mysyl.zep to prevent PhalconException: Column type does not support scale parameter\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621325418912b45d36a38c9",
    "number": 10191,
    "body": "#1482\n\nPhalconException: Column type does not support scale parameter Exception  being thrown.\n",
    "head_branch": "2.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621325518912b45d36a38ca",
    "number": 10188,
    "body": "Hi resubmitting the patches to the correct branch. \n\nI have some unit tests for these prepared for this patch but I am having trouble getting the unit tests to actually execute.\n\nI believe I have following the instructions correctly from:\nhttps://github.com/phalcon/cphalcon/blob/master/unit-tests/README.md\n\nWhat is the best way to get assistance with this ? \nam@portland:~/cphalcon/unit-tests$ phpunit --debug -c phpunit.xml \nPHPUnit 4.2.6 by Sebastian Bergmann.\n\nConfiguration read from /home/am/cphalcon/unit-tests/phpunit.xml\n\nTime: 23 ms, Memory: 1.75Mb\n\nNo tests executed!\nam@portland:~/cphalcon/unit-tests$ \n",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621325618912b45d36a38cb",
    "number": 10187,
    "body": "Fixed phalcon/phalcon-devtools#333\n",
    "head_branch": "patch-5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge dbb6611c9d0bb34f92255fdffb6f26a3a43c20fe into 816829358759abe1f72bd19db7e0157b6efe0deb"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621325718912b45d36a38cc",
    "number": 10186,
    "body": "",
    "head_branch": "image",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621325818912b45d36a38cd",
    "number": 10185,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621325918912b45d36a38ce",
    "number": 10184,
    "body": "Phalcon\\Image\\Adapter::resize uses Phalcon\\Image::AUTO as default _master_ parameter\n",
    "head_branch": "patch-6",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 9353b4e302e3a7d382132a4aca98be4bbbfddfd8 into a8113b9c7086c999d43482e12bd70e7619d5fda8"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621325a18912b45d36a38cf",
    "number": 10183,
    "body": "Hello,\nMy previous work didn't go far enough to supporting double column types in MySQL. This appears to work with the introspection strategy and other parts of Phalcon. \n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621325b18912b45d36a38d0",
    "number": 10180,
    "body": "",
    "head_branch": "2.0.x-cache-backend-redis",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621325c18912b45d36a38d1",
    "number": 10178,
    "body": "Fixes issue with deep acl inherit ( https://github.com/phalcon/cphalcon/issues/10134 )\n",
    "head_branch": "deep_acl_inherit",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621325d18912b45d36a38d2",
    "number": 10176,
    "body": "",
    "head_branch": "Green-Cat-improved-contributing-doc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621325e18912b45d36a38d3",
    "number": 10175,
    "body": "",
    "head_branch": "view-docblock-cleanup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621325f18912b45d36a38d4",
    "number": 10174,
    "body": "",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621326018912b45d36a38d5",
    "number": 10173,
    "body": "Also fixed a bug using _imagepng_ instead of _imagejpeg_ to create png images\n\nFrom pull request #10141\n",
    "head_branch": "patch-5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621326218912b45d36a38d6",
    "number": 10172,
    "body": "can support session saved on cookie, like rails session ?\n",
    "head_branch": "2.0.x",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621326318912b45d36a38d7",
    "number": 10171,
    "body": "Reverts phalcon/cphalcon#10141\n",
    "head_branch": "revert-10141-patch-1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621326418912b45d36a38d8",
    "number": 10170,
    "body": "",
    "head_branch": "events-cleanup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 2adb3d73f478543dc725b4764c05bcc14f649816 into cceee368ec0cd324c00a02a549e67ac9359d0ae0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621326518912b45d36a38d9",
    "number": 10169,
    "body": "",
    "head_branch": "2.0.x_mysql_reference_actions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621326618912b45d36a38da",
    "number": 10168,
    "body": "Add method `Phalcon\\Dispatcher::getHandlerClass`\nUpdated method `Phalcon\\Mvc\\Dispatcher::getControllerClass`\nUpdated method `Phalcon\\Mvc\\Application::handle`\n\nIf controler action return false, will don't render view.\n",
    "head_branch": "application",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621326718912b45d36a38db",
    "number": 10167,
    "body": "",
    "head_branch": "bug_redirect",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621326818912b45d36a38dc",
    "number": 10166,
    "body": "fixing bug (prev PR #10144):\n\n```\n$builder = $model->getModelsManager()->createBuilder()\n->columns($columns)\n   ->addFrom('CartItems', 's')\n   ->where('s.cart_id=\"6086\"')\n   ->groupBy('s.product_id');\n\necho $readConnection->getDialect()->select($q->getQuery()->parse());\n```\n\nResult:\n\n```\nSELECT ``, ``, ``, ``, ``, ``, ``, ``, ``, ``, ``, ``, ``, ``, ``, `` FROM `cart_items` AS `s` WHERE `s`.`cart_id` = '6086' GROUP BY `s`.`product_id`\n```\n",
    "head_branch": "patch-11",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621326a18912b45d36a38dd",
    "number": 10165,
    "body": "submitted #10142 to 2.0.x branch\n\ncheckToken function makes sure that tokenKey exists in session, if not provided\n\n Added a utility function destroyToken to be used when checkToken\nreturns true\n\nAdded a 3rd variable to checkToken\ndestroyIfValid, which removes token key and value from session\n\nMoved token key and value session ids as protected properties\n",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621326b18912b45d36a38de",
    "number": 10164,
    "body": "Reverts phalcon/cphalcon#10142\n",
    "head_branch": "revert-10142-patch-2",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge 501eaf60d03e26064e0a4a68b835585155aee4e5 into f22e54dd3cbc26b582bea6da6cd9a42dbae7363d"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621326c18912b45d36a38df",
    "number": 10163,
    "body": "",
    "head_branch": "annotations-fetch",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621326d18912b45d36a38e0",
    "number": 10161,
    "body": "",
    "head_branch": "agim-alb-patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621326e18912b45d36a38e1",
    "number": 10159,
    "body": "",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621326f18912b45d36a38e2",
    "number": 10158,
    "body": "",
    "head_branch": "bug_redirect",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621327018912b45d36a38e3",
    "number": 10157,
    "body": "",
    "head_branch": "translate-cleanup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621327118912b45d36a38e4",
    "number": 10156,
    "body": "Fix #10143\n",
    "head_branch": "10143",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621327218912b45d36a38e5",
    "number": 10153,
    "body": "This commit:\n- enables disabled tests in the asset filter\n- fixes and reenables the version tests\n- reenables an escaper test\n",
    "head_branch": "unit-test-fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge bf4b1c0772fb421bb30872e00c2133a9c9d41f8f into 842f3f50609b2739c77eb9740f8cfc3ef83df610"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621327318912b45d36a38e6",
    "number": 10151,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621327418912b45d36a38e7",
    "number": 10148,
    "body": "",
    "head_branch": "db-cleanup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621327518912b45d36a38e8",
    "number": 10147,
    "body": "see #10131 \n",
    "head_branch": "patch-10",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621327618912b45d36a38e9",
    "number": 10146,
    "body": "",
    "head_branch": "acl-cleanup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621327718912b45d36a38ea",
    "number": 10145,
    "body": "",
    "head_branch": "cli-cleanup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621327818912b45d36a38eb",
    "number": 10144,
    "body": "This fixes bug:\n\n```\n$builder = $model->getModelsManager()->createBuilder()\n->columns($columns)\n   ->addFrom('CartItems', 's')\n   ->where('s.cart_id=\"6086\"')\n   ->groupBy('s.product_id');\n\necho $readConnection->getDialect()->select($q->getQuery()->parse());\n```\n\nResult:\n\n```\nSELECT ``, ``, ``, ``, ``, ``, ``, ``, ``, ``, ``, ``, ``, ``, ``, `` FROM `cart_items` AS `s` WHERE `s`.`cart_id` = '6086' GROUP BY `s`.`product_id`\n```\n",
    "head_branch": "patch-11",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621327918912b45d36a38ec",
    "number": 10142,
    "body": "**checkToken** function makes sure that _tokenKey_ exists in session, if not provided\n\n Added a utility function **destroyToken** to be used when checkToken\nreturns true\n\nAdded a 3rd variable to _checkToken_\ndestroyIfValid, which removes token key and value from session\n\nMoved token key and value session ids as protected properties\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 62754bd1e3235621113bd7c0623d158b43aefe9f into 874c47d34496af2ed0b745a2dc9aa7c73dd56b36"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621327a18912b45d36a38ed",
    "number": 10141,
    "body": "Replaced **strcmp** with **strcasecmp** for checking image extenstions\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 0622910963d47af869e3203f977ab97ed71aaa88 into e93893f6a0f0485e4e9a239a5d05a1de1d218f88"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621327b18912b45d36a38ee",
    "number": 10136,
    "body": "sorry\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621327c18912b45d36a38ef",
    "number": 10133,
    "body": "",
    "head_branch": "annotations-cleanup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621327d18912b45d36a38f0",
    "number": 10132,
    "body": "",
    "head_branch": "logger-cleanup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621327e18912b45d36a38f1",
    "number": 10131,
    "body": "This fixes bug, when the method returns NULL always:\n\n```\nclass SomeModel extend Phalcon\\Mvc\\Model\n{\n    /**\n     * @return string\n     */\n    public function getManufacturer()\n    {\n        if ($manufacturer = $this->manufacturer) {\n            return $manufacturer->name;\n        } else {\n            return null;\n        }\n    }\n\n    public function initialize()\n    {\n        $this->belongsTo('manufacturer_id', 'App\\Models\\Manufacturer', 'id', [\n            'alias'    => 'manufacturer',\n            'reusable' => true\n        ]);\n    }\n}\n```\n",
    "head_branch": "patch-10",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621327f18912b45d36a38f2",
    "number": 10130,
    "body": "",
    "head_branch": "mvc-cleanup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621328018912b45d36a38f3",
    "number": 10129,
    "body": "",
    "head_branch": "statuscode",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621328118912b45d36a38f4",
    "number": 10128,
    "body": "",
    "head_branch": "validation-cleanup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 2c26a5b122d583fd3397778a1efecc9b21f3213a into d45bc678a67d420c1e22c1b1207b650c5941fc1e"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621328318912b45d36a38f5",
    "number": 10127,
    "body": "",
    "head_branch": "mvc-cleanup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621328418912b45d36a38f6",
    "number": 10124,
    "body": "",
    "head_branch": "patch-18",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621328518912b45d36a38f7",
    "number": 10122,
    "body": "",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621328618912b45d36a38f8",
    "number": 10120,
    "body": "Phalcon\\Cache\\Backend\\Redis selected database.\n\n``` php\nnew Phalcon\\Cache\\Backend\\Redis($frontCache, array(\n  'host' => 'localhost',\n  'port' => 6379,\n  'index' => 1  // Added index option (database number: default index 0)\n));\n```\n\nRe-submit. (#10093)\n",
    "head_branch": "2.0.x-cache-backend-redis",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621328718912b45d36a38f9",
    "number": 10119,
    "body": "Hello,\nI ran into a few issues when porting a 1.3.x project to 2. I was hoping you could include the following changes. \n\n1) Check array key exists before accessing. \n2) Support mysql double column types\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 3db24f3b0d491e0a47dc09212331e4b550dfa973 into 850808c132908c4c59117dec85910c084b0b6a1e"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621328818912b45d36a38fa",
    "number": 10117,
    "body": "I corrected only part of the problem.\nThe rest of the fix is not possible, because Marshmallow not support links!\n\nIt works\n\n```\nif ($this->registry->data) {\n   ...\n}\n```\n",
    "head_branch": "issues-10115",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621328918912b45d36a38fb",
    "number": 10114,
    "body": "This commit refactors the logic of the model adapter of the paginator component.\n\nSome of the highlights:\n- Fixes #10107 & #2510\n- Adds docblock usage example\n- Allows for setter chaining $paginator->setLimit(25)->setCurrentPage(2)->getPaginate();\n- Refactors and simplifies the getPaginate method\n- Fixes and reactivates some relevant unit tests\n",
    "head_branch": "paginator-next-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge a5e55dc13c30b4217ac719758edc9fd9216ac15b into 4d2c987ba8183183b343a9bb138f422b3b280c9b"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621328a18912b45d36a38fc",
    "number": 10113,
    "body": "In a lot of these cases, these Exceptions won't ever get thrown because the parameter types will require the variable to have that type anyway.\n",
    "head_branch": "useless-exceptions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621328b18912b45d36a38fd",
    "number": 10112,
    "body": "Also fixes #10108.\n",
    "head_branch": "typos",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621328c18912b45d36a38fe",
    "number": 10103,
    "body": "`\\Phalcon\\Cache\\Backend\\Libmemcached::_connect()` and `\\Phalcon\\Cache\\Backend\\Memcache::save()` now also make use of Zephir's `fetch`.\n",
    "head_branch": "cache-cleanup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621328d18912b45d36a38ff",
    "number": 10100,
    "body": "The current resultset implementation does not work with appendIterator (added unit-test).\n\n\"valid()\" must not move the cursor to the next position. Now: \"next()\" and \"seek()\" move the cursor and prepare the row for hydration. Hydration is handled in \"current()\" instead of \"valid()\".\n\nIt is now safe to call valid() and current() multiple times. current() keeps the activeRow in memory. See https://github.com/phalcon/cphalcon/issues/2502\n\nArray access does not trigger re-execution if the same index is called multiple times or the index is ahead of current pointer:\n\n``` php\n$robots = Robots::find();\nfor($i = 0; $i < count($robots); ++$i) {\n  echo $robots[$i]->name;\n}\n```\n\nSee https://github.com/phalcon/cphalcon/pull/10057\n",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621328e18912b45d36a3900",
    "number": 10099,
    "body": "",
    "head_branch": "postgre-dialect",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621328f18912b45d36a3901",
    "number": 10098,
    "body": "",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621329018912b45d36a3902",
    "number": 10097,
    "body": "http://zephir-lang.com/operators.html#fetch\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621329118912b45d36a3903",
    "number": 10096,
    "body": "This relationship existed in [1.3.4](https://github.com/phalcon/cphalcon/blob/1.3.4/ext/acl/adapter.c#L67).\n",
    "head_branch": "acl-implements",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621329318912b45d36a3904",
    "number": 10093,
    "body": "Phalcon\\Cache\\Backend\\Redis selected database.\n\n``` php\nnew Phalcon\\Cache\\Backend\\Redis($frontCache, array(\n  'host' => 'localhost',\n  'port' => 6379,\n  'index' => 1  // Added index option (database number)\n));\n```\n",
    "head_branch": "2.0.x-cache-backend-redis",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621329418912b45d36a3905",
    "number": 10092,
    "body": "Re-submit. (#9979)\n",
    "head_branch": "2.0.x-logger-bag",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621329518912b45d36a3906",
    "number": 10091,
    "body": "Re-submit. (#10048)\n",
    "head_branch": "2.0.x-session",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621329618912b45d36a3907",
    "number": 10090,
    "body": "Re-submit. (#9983)\n",
    "head_branch": "2.0.x-view-engine-markdown",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621329718912b45d36a3908",
    "number": 10088,
    "body": "",
    "head_branch": "patch-9",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge e7b241d9f5e8821d189a1942b6b11fb3f00f48e4 into 97879dc4a8d7dc5284351e9aad0f176c79b25c3f"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621329818912b45d36a3909",
    "number": 10087,
    "body": "",
    "head_branch": "patch-8",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621329918912b45d36a390a",
    "number": 10086,
    "body": "Please close #2927\n",
    "head_branch": "patch-6",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621329a18912b45d36a390b",
    "number": 10085,
    "body": "Update `Phalcon\\Session\\Adapter`, `Phalcon\\Session\\AdapterInterface` and also full coverage of the tests... And more improvements...\n\n_Added public method:_\n- `getOption()`\n- `getCookieParams()`\n- `setCookieParams()`\n- `setName()`\n- `getName()`\n- `regenerateId()`\n- `reset()`\n- `commit()`\n- `abort()`\n- `clear()`\n- `status()`\n- `encode()`\n- `decode()`\n\n_Added protected method_\n- `configure()`\n- `legacySessionReset()`\n- `legacySessionAbort()`\n- `legacySessionStatus()`\n\n_Added options:_\n- name (session name) \n- cookie_lifetime\n- cookie_path\n- cookie_domain\n- cookie_secure\n- cookie_httponly\n\n_`Phalcon\\Session\\Adapter\\Files` added options:_\n- savePath\n",
    "head_branch": "NFR-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621329b18912b45d36a390c",
    "number": 10084,
    "body": "Update `Phalcon\\Session\\Adapter`, `Phalcon\\Session\\AdapterInterface` and also full coverage of the tests... And more improvements...\n\n_Added public method:_\n- `getOption()`\n- `getCookieParams()`\n- `setCookieParams()`\n- `setName()`\n- `getName()`\n- `regenerateId()`\n- `reset()`\n- `commit()`\n- `abort()`\n- `clear()`\n- `status()`\n- `encode()`\n- `decode()`\n\n_Added protected method_\n- `configure()`\n- `legacySessionReset()`\n- `legacySessionAbort()`\n- `legacySessionStatus()`\n\n_Added options:_\n- name (session name) \n- cookie_lifetime\n- cookie_path\n- cookie_domain\n- cookie_secure\n- cookie_httponly\n\n_`Phalcon\\Session\\Adapter\\Files` added options:_\n- savePath\n",
    "head_branch": "NFR-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621329c18912b45d36a390d",
    "number": 10083,
    "body": "## Major changes\n- added abstract `validate()` method to `Phalcon\\Validation\\Validator` class, made this class abstract\n- `Phalcon\\Validator` class now implements `Phalcon\\Validation\\ValidatorInterface`\n- changed \"keys\" array initialization in `Phalcon\\Cache\\Backend\\Memory`\n## Minor changes\n- removed `implements Phalcon\\Validation\\ValidatorInterface` from all `Phalcon\\Validation\\Validator\\*` classes because parent class (`Phalcon\\Validation\\Validator`) is implementing it right now\n- added \"use\" statements to  `Phalcon\\Validation\\Validator\\*` instead using fully qualified names\n",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621329d18912b45d36a390e",
    "number": 10082,
    "body": "",
    "head_branch": "whitespace",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621329e18912b45d36a390f",
    "number": 10081,
    "body": "",
    "head_branch": "mvc-router",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621329f18912b45d36a3910",
    "number": 10080,
    "body": "",
    "head_branch": "mvc-router",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132a018912b45d36a3911",
    "number": 10079,
    "body": "",
    "head_branch": "patch-5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132a218912b45d36a3912",
    "number": 10078,
    "body": "The method `Phalcon\\Mvc\\Dispatcher::getControllerClass()` doesn't work as it references a method at runtime that doesn't exist:\n\n> Fatal error: Uncaught exception 'RuntimeException' with message 'Call to undefined method Phalcon\\Mvc\\Dispatcher::gethandlername()'\n\n``` php\npublic function getControllerClass() -> string\n{\n    return this->{\"getHandlerName\"}();\n}\n```\n\nThis PR fixes that error by refactoring the building of the handler class name from `Phalcon\\Dispatcher::dispatch` into `Phalcon\\Dispatcher::getControllerClass` method. Note that this adds an additional public method to `Phalcon\\Dispatcher`, as the broken method was on `Phalcon\\Mvc\\Dispatcher`.\n\n**Small issue introduced with this change:** The method `getControllerClass` depends on the resolving of defaults in `Dispatcher::dispatch()` to work correctly which isn't great, however fixing this would require reworking how defaults are set, which is outside the scope of this change. As-is, this code won't change the current behaviour of `Dispatcher::dispatch`, but some incorrect behaviour (defaults not used) is possible if calling `getControllerClass` outside of the dispatch loop.\n",
    "head_branch": "fix-getcontrollerclass",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132a318912b45d36a3913",
    "number": 10076,
    "body": "#10061\n",
    "head_branch": "issue-10061",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132a418912b45d36a3914",
    "number": 10075,
    "body": "It will be convenient to reduce communication between classes.\nSee:\n- #10005\n- https://github.com/phalcon/cphalcon/blob/2.0.x/phalcon/forms/manager.zep#L44\n- https://github.com/phalcon/cphalcon/blob/2.0.x/phalcon/db/adapter.zep#L132\n- https://github.com/phalcon/cphalcon/blob/2.0.x/phalcon/queue/beanstalk.zep#L165\n- etc...\n\n**Examples**\n\n```\n   // Gets CLASS instance\n   instance = Phalcon\\Factory::di()->get(CLASS);\n\n   // Gets Application instance\n   instance = Phalcon\\Factory::app();\n\n   // Gets Dispatcher service\n   instance = Phalcon\\Factory::getDispatcher();\n\n   // Gets ModelManager service\n   instance = Phalcon\\Factory::getModelsManager();\n```\n",
    "head_branch": "NFR-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132a518912b45d36a3915",
    "number": 10074,
    "body": "Conflicts:\nphalcon/mvc/model/resultset/simple.zep\n\ncf #3107\n",
    "head_branch": "2.0.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132a618912b45d36a3916",
    "number": 10073,
    "body": "Missing functionality in 2.0.0 version on session bag:\niteration\narrayaccess\ncount\n",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132a718912b45d36a3917",
    "number": 10072,
    "body": "Resubmit of #10068\n",
    "head_branch": "deadcode",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132a818912b45d36a3918",
    "number": 10071,
    "body": "Resubmit of #10067\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132a918912b45d36a3919",
    "number": 10069,
    "body": "Missing functionality in 2.0.0 version on session bag:\niteration\narrayaccess\ncount\n",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132aa18912b45d36a391a",
    "number": 10068,
    "body": "",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132ab18912b45d36a391b",
    "number": 10067,
    "body": "",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132ac18912b45d36a391c",
    "number": 10065,
    "body": "",
    "head_branch": "statuscode",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132ad18912b45d36a391d",
    "number": 10062,
    "body": "",
    "head_branch": "patch-17",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132ae18912b45d36a391e",
    "number": 10058,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132af18912b45d36a391f",
    "number": 10057,
    "body": "The current resultset implementation does not work with appendIterator (added unit-test).\n\n\"valid()\" must not move the cursor to the next position. Now: \"next()\" and \"seek()\" move the cursor and prepare the row for hydration. Hydration is handled in \"current()\" instead of \"valid()\".\n\nIt is now safe to call valid() and current() multiple times. current() keeps the activeRow in memory. See https://github.com/phalcon/cphalcon/issues/2502\n\nArray access does not trigger re-execution if the same index is called multiple times or the index is ahead of current pointer:\n\n``` php\n$robots = Robots::find();\nfor($i = 0; $i < count($robots); ++$i) {\n  echo $robots[$i]->name;\n}\n```\n\nSame as PR https://github.com/phalcon/cphalcon/pull/10050 (rebase went wrong)\n",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132b018912b45d36a3920",
    "number": 10056,
    "body": "",
    "head_branch": "NFR-2_r1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132b218912b45d36a3921",
    "number": 10053,
    "body": "",
    "head_branch": "2.0.0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132b318912b45d36a3922",
    "number": 10052,
    "body": "",
    "head_branch": "print_r",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132b518912b45d36a3923",
    "number": 10051,
    "body": "",
    "head_branch": "2.0.0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge 5e313b44aabd5b0d2f1f1ab5749e23f8e451106f into fdec9db52f57e3e597f1f16ea24cf4cac96bb0c6"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662132b618912b45d36a3924",
    "number": 10050,
    "body": "The current resultset implementation does not work with appendIterator (added unit-test).\n\n\"valid()\" must not move the cursor to the next position. Now: \"next()\" and \"seek()\" move the cursor and prepare the row for hydration. Hydration is handled in \"current()\" instead of \"valid()\".\n\nIt is now safe to call valid() and current() multiple times. current() keeps the activeRow in memory.\n\nRan unit-tests locally. In case travis build fails I correct accordingly\n",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132b718912b45d36a3925",
    "number": 10048,
    "body": "When you use the \"Phalcon\\Session\\Adapter\\Files\" session disappears in the destroy.\nWhen not otherwise(Phalcon\\Session\\Adapter\\Libmemcached) remains without disappearing session.\n\nExample DI:\n\n``` php\n$di->setShared('session', function() {\n    // Use files\n    $session = new Phalcon\\Session\\Adapter\\Files();\n\n    /*\n    // Use libmemcached\n    $session = new Phalcon\\Session\\Adapter\\Libmemcached([\n        'servers' => [\n            ['host' => 'localhost', 'port' => 11211, 'weight' => 1],\n        ],\n        'client' => [],\n        'lifetime' => 3600,\n    ]);\n    */\n\n    $session->start();\n    return $session;\n});\n```\n\nExample Controller Action:\n\n``` php\npublic function testAction()\n{\n    // Session write\n    $this->session->set(\"name\", \"Michael\");\n\n    // Session read\n    if ($this->session->has(\"name\")) {\n        echo 'Name: ', $this->session->get(\"name\");\n    }\n\n    // Session destroy\n    $this->session->destroy();\n\n    // Redirect\n    return $this->response->redirect('dump');\n}\n\npublic function dumpAction()\n{\n    var_dump($_SESSION);\n\n    /*\n    // Use files\n    array (size=0)\n      empty\n\n    // Use libmemcached\n    array (size=1)\n      'name' => string 'Michael' (length=7)    \n    */    \n}\n```\n\nsession_destroy has not been called in \"Phalcon\\Session\\Adapter\\ XXX\" of class destory.\n\nProposal:\n\nEnclosing the Adapter to Phalcon\\Session class.\n\n``` php\n$di->setShared('session', function() {\n    $session = new Phalcon\\Session([\n      // Use files (default)\n      'adapter' => 'files',\n      /*\n      // Use libmemcached\n      'adapter' => 'libmemcached',\n      'options' => [\n        'servers' => [\n            ['host' => 'localhost', 'port' => 11211, 'weight' => 1],\n        ],\n        'client' => [],\n        'lifetime' => 3600,\n      ],\n      */\n    ]);\n    $session->start();\n    return $session;\n});\n```\n",
    "head_branch": "2.0.0-session",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132b818912b45d36a3926",
    "number": 10047,
    "body": "",
    "head_branch": "flash-docblock-cleanup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge b525f5b9908336a781f68f297a0abfe0ee42f9b7 into 67420d6c88d23dab3a603f4d409aaf3615b628bc"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662132ba18912b45d36a3927",
    "number": 10046,
    "body": "",
    "head_branch": "loader-docblock-cleanup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132bb18912b45d36a3928",
    "number": 10045,
    "body": "",
    "head_branch": "escaper-docblock-cleanup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132bc18912b45d36a3929",
    "number": 10043,
    "body": "https://github.com/phalcon/cphalcon/commit/481b75a90b1ece58b36f83d4f828821e161eb0f4#diff-0a0014cdd026fc43956d243d1ecebbcdR65\n",
    "head_branch": "patch-16",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132bd18912b45d36a392a",
    "number": 10042,
    "body": "refs https://github.com/phalcon/cphalcon/commit/481b75a90b1ece58b36f83d4f828821e161eb0f4#diff-0a0014cdd026fc43956d243d1ecebbcdR65\n",
    "head_branch": "patch-15",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132be18912b45d36a392b",
    "number": 10040,
    "body": "See #10014 \n",
    "head_branch": "2.0.0-issue-10014",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132bf18912b45d36a392c",
    "number": 10039,
    "body": "See #9963.\n\nI took code from Phalcon\\DI\\DefaultFactory to check all services defined in CLI class.\n",
    "head_branch": "2.0.0-issue-9963",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132c018912b45d36a392d",
    "number": 10038,
    "body": "Like #10031 for update method. In fact, condition was useless so no bug appended.\n",
    "head_branch": "2.0.0-issue-6788b",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132c118912b45d36a392e",
    "number": 10037,
    "body": "See #3201, replace #10030\n",
    "head_branch": "2.0.0-issue-3201b",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132c218912b45d36a392f",
    "number": 10036,
    "body": "",
    "head_branch": "acl-docbock-cleanup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132c318912b45d36a3930",
    "number": 10035,
    "body": "`long` to PHP's `int`\n",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge f8994a339bc9bd50e927211238cb42f2ca458936 into 3f440739fcdfb6216b10df6d6154a8b2a3f15717"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132c418912b45d36a3931",
    "number": 10034,
    "body": "`long` to PHP's `int`\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 89f231643836604e559d83bc2fb2368bc7c2c19c into cbc03eb7540aed64fee462f717f56f342c4f7657"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132c518912b45d36a3932",
    "number": 10032,
    "body": "## Major changes\n- added abstract `validate()` method to `Phalcon\\Validation\\Validator` class, made this class abstract\n- `Phalcon\\Validator` class now implements `Phalcon\\Validation\\ValidatorInterface`\n- changed \"keys\" array initialization in `Phalcon\\Cache\\Backend\\Memory`\n- added #10021 fix to make build possible\n## Minor changes\n- removed `implements Phalcon\\Validation\\ValidatorInterface` from all `Phalcon\\Validation\\Validator\\*` classes because parent class (`Phalcon\\Validation\\Validator`) is implementing it right now\n- added \"use\" statements to  `Phalcon\\Validation\\Validator\\*` instead using fully qualified names\n",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132c618912b45d36a3933",
    "number": 10031,
    "body": "See #6788 \n",
    "head_branch": "2.0.0-issue-6788",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132c718912b45d36a3934",
    "number": 10030,
    "body": "#3201\n\nI keep many lines from previous .gitignore but they may be obsolete. See end of .gitignore file.\n",
    "head_branch": "2.0.0-issue-3201",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132c818912b45d36a3935",
    "number": 10028,
    "body": "#3170\n",
    "head_branch": "2.0.0-issue-3170",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132ca18912b45d36a3936",
    "number": 10027,
    "body": "",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132cb18912b45d36a3937",
    "number": 10026,
    "body": "Fixes a typo and cleans up docblock in Phalcon\\Kernel.\n",
    "head_branch": "kernel-docblock-cleanup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132cc18912b45d36a3938",
    "number": 10025,
    "body": "Generally cleans up the unneeded docblocks but also:\n- removes mentions of the non-existing EncryptInterface\n- makes the interface match implementation in terms of variable types\n- fixes setter chaining when using setPadding method\n",
    "head_branch": "crypt-docblock-cleanup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132cd18912b45d36a3939",
    "number": 10024,
    "body": "",
    "head_branch": "filter-docblock-cleanup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132ce18912b45d36a393a",
    "number": 10023,
    "body": "## Major changes\n- added abstract `validate()` method to `Phalcon\\Validation\\Validator` class, made this class abstract\n- `Phalcon\\Validator` class now implements `Phalcon\\Validation\\ValidatorInterface`\n- changed \"keys\" array initialization in `Phalcon\\Cache\\Backend\\Memory`\n- added #10021 fix to make build possible\n## Minor changes\n- removed `implements Phalcon\\Validation\\ValidatorInterface` from all `Phalcon\\Validation\\Validator\\*` classes because parent class (`Phalcon\\Validation\\Validator`) is implementing it right now\n- added \"use\" statements to  `Phalcon\\Validation\\Validator\\*` instead using fully qualified names\n",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132cf18912b45d36a393b",
    "number": 10021,
    "body": "",
    "head_branch": "patch-7",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 5c2c45d9764d401278b4bc65636cc5063e55af3a into e79b0b69e0bd9976dc835b8c7f8c00ddaa923f3e"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132d018912b45d36a393c",
    "number": 10020,
    "body": "Adds a property called \"limit\" to the paginate object of the paginator in all three adapters.\nThis is rather useful, especially to display the limit in the view.\nRelated issue #3209.\nThe travis build error is not from this pull request, it's from a commit on the 2.0 branch. See #10021.\n",
    "head_branch": "paginator-get-limit",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132d118912b45d36a393d",
    "number": 10019,
    "body": "",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132d218912b45d36a393e",
    "number": 10018,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132d318912b45d36a393f",
    "number": 10017,
    "body": "It will be convenient to reduce communication between classes.\nSee:\n- #10005\n- https://github.com/phalcon/cphalcon/blob/2.0.0/phalcon/forms/manager.zep#L44\n- https://github.com/phalcon/cphalcon/blob/2.0.0/phalcon/db/adapter.zep#L132\n- https://github.com/phalcon/cphalcon/blob/2.0.0/phalcon/queue/beanstalk.zep#L165\n- etc...\n\n**Examples**\n\n```\n   // Gets CLASS instance\n   instance = Phalcon\\Factory::di()->get(CLASS);\n\n   // Gets Application instance\n   instance = Phalcon\\Factory::app();\n\n   // Gets Dispatcher service\n   instance = Phalcon\\Factory::getDispatcher();\n\n   // Gets ModelManager service\n   instance = Phalcon\\Factory::getModelsManager();\n```\n",
    "head_branch": "NFR-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132d518912b45d36a3940",
    "number": 10015,
    "body": "",
    "head_branch": "dispatcher-escaper-loader-registry-security-text-version-cleanup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132d618912b45d36a3941",
    "number": 10013,
    "body": "",
    "head_branch": "cache-cleanup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132d718912b45d36a3942",
    "number": 10011,
    "body": "",
    "head_branch": "assets-cleanup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132d818912b45d36a3943",
    "number": 10010,
    "body": "Please close #2927\n",
    "head_branch": "patch-6",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132d918912b45d36a3944",
    "number": 10008,
    "body": "",
    "head_branch": "validation-10006",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132da18912b45d36a3945",
    "number": 10007,
    "body": "Fixes #9994 \n",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 15406e06dfee96de3876990eef52fe2d0e7860fa into b01b3efb2f7618f602843be21a27d1a89dd982ed"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662132db18912b45d36a3946",
    "number": 10005,
    "body": "",
    "head_branch": "patch-5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132dc18912b45d36a3947",
    "number": 10004,
    "body": "**Crash build**\n- [see 1](https://travis-ci.org/KorsaR-ZN/phalcon-core/jobs/57782974#L2421)\n- [see 2](https://travis-ci.org/KorsaR-ZN/phalcon-core/jobs/57777116#L2419)\n- [see 2](https://travis-ci.org/KorsaR-ZN/phalcon-core/jobs/57685017#L2416)\n\n**Success build**\n- [see](https://travis-ci.org/KorsaR-ZN/phalcon-core/builds/57786844)\n",
    "head_branch": "fix-ci",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132dd18912b45d36a3948",
    "number": 10002,
    "body": "Added translate adapter - Gettext and more enhancements\n",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132de18912b45d36a3949",
    "number": 10001,
    "body": "Unit test is was so as not to run, but it has been tested in the local environment.\n\n```\nunit-tests/CacheTest.php\n@@ 1417 @@ class CacheTest extends PHPUnit_Framework_TestCase\n   protected function _prepareRedis()\n   {\n       if (!extension_loaded('redis') || true) {\n```\n",
    "head_branch": "2.0.0-cache-backend-redis",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132e018912b45d36a394a",
    "number": 10000,
    "body": "",
    "head_branch": "2.0.0-cache-backend-libmemcached",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132e118912b45d36a394b",
    "number": 9999,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132e318912b45d36a394c",
    "number": 9998,
    "body": "Warning: Class \"Phalcon\\Validation\\Validator\\Exception\" does not exist at compile time in cphalcon/phalcon/validation/validator/confirmation.zep on 94 [nonexistent-class]\n",
    "head_branch": "2.0.0-validation-noneexistent-class",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132e318912b45d36a394d",
    "number": 9997,
    "body": "I'm using this code for year to use a PHP class as en enum like in Java.\n\nHere is the Phalcon\\Enum class, a base class for enum.Child classes must implements the static _init method to returns an array of class instances.\n\n```\nclass MyEnum extends Phalcon\\Enum\n{\n    protected static function _init()\n    {\n        return array(\n            new self('First'),\n            new self('Second'),\n        );\n    }\n }\n```\n\nThen, each instance can be accessed using a static method equals to the instance\nname (ie. the constructor argument).\n\n```\nMyEnum::First()\n```\n\nThe same instance if returned for each call so we can use the = operator.\n\nChild classes can add other properties.\n\n```\nclass Country extends Phalcon\\Enum\n{\n    private $_code;\n    private $_language;\n\n    protected function __construct($name, $code, $language)\n    {\n        parent::__construct($name);\n        $this->_code = $code;\n        $this->_language = $language;\n    }\n\n    public function getCode() ...\n\n    public function getLanguage() ...\n\n    protected static function _init()\n    {\n        return array(\n            new self('France', 'fr_FR', 'French'),\n            ...\n        );\n    }\n}\n```\n\nThis is an example:\n\n```\n<?php\n\nclass MyEnum extends Phalcon\\Enum\n{\n    protected static function _init()\n    {\n        return [\n            new self('First'),\n            new self('Second')\n        ];\n    }\n}\n\n$a = MyEnum::First();\n$b = MyEnum::Second();\n$c = MyEnum::First();\n$d = $a;\n$e = MyEnum::valueOf('First');\n\necho '$a / $b'.PHP_EOL;\nvar_dump($a == $b, $a === $b); // false, false\necho '$a / $c'.PHP_EOL;\nvar_dump($a == $c, $a === $c); // true, true\necho '$a / $d'.PHP_EOL;\nvar_dump($a == $d, $a === $d); // true, true\necho '$a / $e'.PHP_EOL;\nvar_dump($a == $e, $a === $e); // true, true\n\nvar_dump(MyEnum::values()); // array with 2 instances\n\nvar_dump($a == 'First'); // true\n```\n\nIt's more useful than constant because you can add \"data\" to each value and you can use type checking.\n\nImplementing #9974 could be simple and powerful like:\n\n```\nclass StatusCode extends Phalcon\\Enum\n{\n    private $_label;\n    private $_code;\n\n    protected function __constuct($name, $label, $code) ...\n\n    public getLabel() ...\n\n    public getCode() ...\n\n    protected static function _init()\n    {\n        return array(\n            new self('CONTINUE', 'Continue', 100),\n            new self('SWITCHING_PROTOCOLS', 'Switching Protocols', 101),\n            new self('PROCESSING', 'Processing', 102),\n            new self('OK', 'OK', 200),\n            ...\n        );\n    }\n}\n```\n\nThen the enum can replace the statusCodes array in https://github.com/phalcon/cphalcon/blob/2.0.0/phalcon/http/response.zep#L146.\n\nAnd the Response::setStatusCode can accept a StatusCode instance instead of an int in https://github.com/phalcon/cphalcon/blob/2.0.0/phalcon/http/response.zep#L121\n",
    "head_branch": "2.0.0-enums",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132e418912b45d36a394e",
    "number": 9996,
    "body": "Issue #3247\n\nStrict type comparisons to detect changes. Need someone to check my code...\n\n@andresgutierrez This is the new pull request.\n",
    "head_branch": "2.0.0-issue-3247b",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132e618912b45d36a394f",
    "number": 9995,
    "body": "",
    "head_branch": "http-cleanup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132e718912b45d36a3950",
    "number": 9993,
    "body": "",
    "head_branch": "forms-cleanup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132e818912b45d36a3951",
    "number": 9992,
    "body": "",
    "head_branch": "di-cleanup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132e918912b45d36a3952",
    "number": 9991,
    "body": "",
    "head_branch": "translate-cleanup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132ea18912b45d36a3953",
    "number": 9990,
    "body": "",
    "head_branch": "config-cleanup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132eb18912b45d36a3954",
    "number": 9989,
    "body": "",
    "head_branch": "paginator-cleanup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132ec18912b45d36a3955",
    "number": 9988,
    "body": "",
    "head_branch": "queue-cleanup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge f4cb786928b458096b4ea5b9c25795eccc928094 into 89b29396e0cab89d1d1f564548c5485100c8a844"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662132ed18912b45d36a3956",
    "number": 9987,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132ee18912b45d36a3957",
    "number": 9986,
    "body": "",
    "head_branch": "tag-cleanup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132ef18912b45d36a3958",
    "number": 9983,
    "body": "see: #9930\n",
    "head_branch": "2.0.0-view-engine-markdown",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132f018912b45d36a3959",
    "number": 9982,
    "body": "Generic view engine compiler class.\nFor example, used to compile the Markdown.\n\n``` php\nrequire_once __DIR__ . '/Parsedown.php';\n\n$di = new Phalcon\\DI();\n$view = new Phalcon\\Mvc\\View();\n$view->setDI($di);\n\n$view->registerEngines(array(\n    '.md' => function($view, $di) {\n        $compiler = new Phalcon\\Mvc\\View\\Engine\\Compiler($view, $di);\n        // required compileSource option\n        $compiler->setOptions(array(\n            \"compiledSource\" => function($viewCode) {\n                $parsedown = new Parsedown();\n                return $parsedown->text($viewCode);\n            },\n        ));\n        return $compiler;\n    }\n));\n\n$view->start();\n$view->render('test', 'index');\n$view->finish();\n\n// test/index.md\n/*\n# Header\n\nHello _Parsedown_!\n*/\n\n// test/index.md.php\n/*\n<h1>Header</h1>\n<p>Hello <em>Parsedown</em>!</p>\n*/\n```\n",
    "head_branch": "2.0.0-view-engine-compiler",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132f118912b45d36a395a",
    "number": 9980,
    "body": "Added Phalcon\\Tag::addFunction() and hasFunction() and calls from Volt Compiler.\n\n``` php\nPhalcon\\Tag::addFunction('shuffle', function($str){\n    return str_shuffle($str);\n});\n\n$volt = new Phalcon\\Mvc\\View\\Engine\\Volt\\Compiler();\n$compilation = $volt->compileString('{{ shuffle(\"hello\") }}');\n// compilation: <?php echo $this->tag->shuffle('hello'); ?>\n```\n",
    "head_branch": "2.0.0-tag-function",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132f218912b45d36a395b",
    "number": 9979,
    "body": "Output to the specified logger adapter.\n\n``` php\n$logger = new \\Phalcon\\Logger\\Bag(array(\n    'file1' => new \\Phalcon\\Logger\\Adapter\\File($logfile1),\n    'file2' => new \\Phalcon\\Logger\\Adapter\\File($logfile2),\n));\n\n// Output: logfile1\n$logger->error('This is an error');\n\n// Output: logfile1\n$logger->file1->error('This is an error');\n\n// Output: logfile2\n$logger->file2->error('This is another error');\n```\n",
    "head_branch": "2.0.0-logger-bag",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132f318912b45d36a395c",
    "number": 9978,
    "body": "fixed return null at Phalcon\\Mvc\\Model\\Resultset:toArray() when the result is empty.\n",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132f418912b45d36a395d",
    "number": 9977,
    "body": "",
    "head_branch": "2.0.0-http-request-clientaddress",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132f518912b45d36a395e",
    "number": 9976,
    "body": "",
    "head_branch": "2.0.0-cache-libmemcached",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132f618912b45d36a395f",
    "number": 9972,
    "body": "",
    "head_branch": "mvc-cleanup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132f818912b45d36a3960",
    "number": 9971,
    "body": "I've removed a lot of the unnecessary docblocks from the DB component. I've purposely left alone any docblocks that don't have Zephir type hinting as I don't want to change the behaviour of the methods.\n",
    "head_branch": "db-cleanup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge b4fddd63b333d9c68bbdd5a9a36fd0709d398607 into 3306fd802166a187662063489bdd2b7ee2e5d218"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662132f918912b45d36a3961",
    "number": 9961,
    "body": "can't delete limit with $builder->limit(null)\n\n(for example paginator)\n",
    "head_branch": "patch-5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132fa18912b45d36a3962",
    "number": 9960,
    "body": "",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132fb18912b45d36a3963",
    "number": 9959,
    "body": "strpos returns 0 if the needle is found at position 0. So the test should be made against «false», and not return the position of the string, which won't work for examples like 'test' in 'test1234'.\n",
    "head_branch": "patch-5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132fc18912b45d36a3964",
    "number": 9958,
    "body": "",
    "head_branch": "cookie_delete_bug",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132fd18912b45d36a3965",
    "number": 9957,
    "body": "- fix segmentetion falut at Phalcon\\Mvc\\View\\Engine\\Volt:parse\n- fix runTest.sh return fail code when test failed  \n  See [here](https://travis-ci.org/phalcon/cphalcon/jobs/56410246#L2443).\n",
    "head_branch": "fix_voltparser",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132fe18912b45d36a3966",
    "number": 9953,
    "body": "The stubs are declared with `stdClass` as return type, which expands in their namespace to be `Phalcon\\Paginator\\Adapter\\stdClass`, which in turn does not exist.\nQuick fix to change it to `\\stdClass`.\n",
    "head_branch": "1.3.5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662132ff18912b45d36a3967",
    "number": 9952,
    "body": "All variables are now camel-cased and I've removed all the Docblocks (param/return statements) that I can without affecting the IDE stubs output.\n",
    "head_branch": "image",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621330018912b45d36a3968",
    "number": 9951,
    "body": "Cache backends redis and libmemcached do not stop the frontend buffer on save. Cacheable content in viewCache ouput-cache is displayed twice.\n\nReplaced \"if !stopBuffer true {\" with \"if stopBuffer === true {\" as implemented in apc-cache-backend. Also isBuffering() in memory-backend must occur before stop() is called.\n",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 6f9a353f950ed43b572234d6066f22151dec5f2e into 8dece342b7c0e8bdc3460a6dc46c073ad51994b0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621330118912b45d36a3969",
    "number": 9949,
    "body": "With `if typeof message != \"object\" { ... }`, `message` has to be an object in order to use the `setModel()` method.\n\nWith `if typeof record == \"object\" { ... }`, we know that `record` will be an object because we throw an Exception if it's not on line 2434 and we still need to check that `message` is an object to use the `setModel()` method.\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 6b424948de3b7f0248b4acecfe1cb4b94ea6a4d3 into 60f16d227a2351067fd3a1c684f9b532bc12673f"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621330218912b45d36a396a",
    "number": 9947,
    "body": "- remove unneeded docblocks\n- added more return type hints\n",
    "head_branch": "patch-14",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621330318912b45d36a396b",
    "number": 9946,
    "body": "",
    "head_branch": "imagick",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge f52b4dfcc78ae71479d4a12d8536a1c86f6a7ab2 into cb71b7a2e83afd0f302817e833490a3f74c19655"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621330418912b45d36a396c",
    "number": 9943,
    "body": "",
    "head_branch": "issue_9939",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621330518912b45d36a396d",
    "number": 9941,
    "body": "Reverts phalcon/cphalcon#9927\n",
    "head_branch": "revert-9927-patch-1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621330618912b45d36a396e",
    "number": 9940,
    "body": "",
    "head_branch": "simple-logic",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621330718912b45d36a396f",
    "number": 9938,
    "body": "",
    "head_branch": "issue_9937",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621330818912b45d36a3970",
    "number": 9929,
    "body": "unit-tests/CacheTest.php(libmemcached) becomes Segmentaion Fault.\n\nIt seems there is no client set to option of test. \n\nIf you are not a required option than to add a client option to test has been fixed.\n",
    "head_branch": "2.0.0-libmemcached",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621330a18912b45d36a3971",
    "number": 9928,
    "body": "Fix bug #6784 \n\nUpdated annotation parser.c.\n",
    "head_branch": "2.0.0-annotation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621330b18912b45d36a3972",
    "number": 9927,
    "body": "Method \"hasChanged\" takes string as a parameter, and returns boolean value.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 462dd6d7ec0f1852a1f7b8bf83b3ce5db1f5bed5 into 33e85f551c253ddff58e594e2bace5c2e55f12ef"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621330c18912b45d36a3973",
    "number": 9923,
    "body": "",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge d45ba22fe3729a0f495ec4285f2a42944367a32e into 01d7ed4564aee5d0bf3cf7805409e20cfcaff8e8"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621330d18912b45d36a3974",
    "number": 9922,
    "body": "Logs http://git.io/pWow\n",
    "head_branch": "llvm",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621330f18912b45d36a3975",
    "number": 9921,
    "body": "Logs http://git.io/pWow\n",
    "head_branch": "llvm",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621331018912b45d36a3976",
    "number": 9920,
    "body": "",
    "head_branch": "route_param",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621331118912b45d36a3977",
    "number": 9919,
    "body": "- remove unneeded docblocks\n- NS - import Logger\n- added inline for log (will speedup soon)\n- context must be an array!\n",
    "head_branch": "patch-13",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621331218912b45d36a3978",
    "number": 9918,
    "body": "",
    "head_branch": "typo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621331318912b45d36a3979",
    "number": 9915,
    "body": "Support any datatypes in annotation strategy\n",
    "head_branch": "support_othre_datatype",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621331418912b45d36a397a",
    "number": 9914,
    "body": "The method map() sends a null verb to _addMap and it's fine when you add a controllers as handlers.\n\nThis worked with 1.\\* but in 2.0 it's casted to an empty string.\nThis patch solves the problem when the route tries to add null verbs (route->via(\"\"))\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621331518912b45d36a397b",
    "number": 9912,
    "body": "This is a remake of d592ca8b5cd0f186b0a891e05fab30d33744bdb2 for 2.0.0\nFixes #2518\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621331618912b45d36a397c",
    "number": 9911,
    "body": "typo\n",
    "head_branch": "typo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621331718912b45d36a397d",
    "number": 9909,
    "body": "Hello,\nI am having a problem with viewing my phalcon site on the internet.\nI uploaded the project folder under public_html as noted by my web server provider but still i can't view my app online.\nIs there anything special i need for phalcon?\ncould you help please i am new in phalcon and it the the first phalcon app i am deploying?\nthank you in advance.\n",
    "head_branch": "1.3.3",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621331918912b45d36a397e",
    "number": 9907,
    "body": "'\\Phalcon\\Mvc\\Micro\\Collection' _addmap in the process of mounting on the micro is private because it pops up a warning, this approach impossible.\nThis fatal error pops up even as on _addMap.\n\nAnd there are modifications to the pull request.\n",
    "head_branch": "2.0.0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621331a18912b45d36a397f",
    "number": 9902,
    "body": "",
    "head_branch": "phalcon_mvc_route",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 8c59728bf6c33f043ac5fc40496d24d23ba06751 into 752b26779e9b84a6341c5e6473f950b4ec755d91"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621331b18912b45d36a3980",
    "number": 9901,
    "body": "update\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621331c18912b45d36a3981",
    "number": 9900,
    "body": "",
    "head_branch": "2.0.0_Query_executeSelect",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 1f16b972d97f634919873c8479effe4d441e48f4 into 1b227a0346fe12f9b238f913949c4e5cd0b3af8a"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621331d18912b45d36a3982",
    "number": 6782,
    "body": "fixing issue #3324 & issue #6680 \n",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621331e18912b45d36a3983",
    "number": 3552,
    "body": "`innerJoin('Robots', 'r.id = RobotsParts.robots_id', 'r', 'LEFT');` does not work, because `innerJoin()` means `join()` with 4th param `'INNER'`.\n",
    "head_branch": "fix_comment",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 37b027ac45832f7d33d3272080c9b289cc3e8908 into 87eaa1811ad127cde7682be4b22b6f3cc96b117e"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621331f18912b45d36a3984",
    "number": 3350,
    "body": "agregamos la funcion getPut que faltaba en la version 2.0.0 segun especificamos en este issues\n\nhttps://github.com/phalcon/cphalcon/issues/3337\n",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621332018912b45d36a3985",
    "number": 3348,
    "body": "Presenceof validator use function named empty to check a passed value. \nUnfortunately, this function filters values like false and 0 (zero) as well.\n\nBack to the roots v. 1.x:\nA value is null when it is identical to null or a empty string.\n",
    "head_branch": "pr_v_2/model_validator_presenceof",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621332118912b45d36a3986",
    "number": 3347,
    "body": "Not found alias function of magic methods.\n\n``` php\n$session = new Phalcon\\Session\\Adapter\\Files();\n$session->some = 'value'; // Not saved\n```\n",
    "head_branch": "session-adapter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621332218912b45d36a3987",
    "number": 3346,
    "body": "Trying to use Phalcon\\Mvc\\Model\\Resultset/Simple::toArray(true) will always fail with a fatal error:\n\nColumn 'xxx' is not part of the column map.\n",
    "head_branch": "issue-#3344",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 58c825af8e770d7a9e054c5280425f859a30d992 into b54305d60165fd4f711867632ed5d84f25b2d456"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621332318912b45d36a3988",
    "number": 3345,
    "body": "Adds the magic isset method the the view object so that view params can be checked with isset().\n\nie:\necho isset($this->view->products);\n",
    "head_branch": "feature/add_isset_to_views",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621332518912b45d36a3989",
    "number": 3342,
    "body": "If using validator of type url you get an error, because the comparison is wrong here \n\n```\ntypeof field == \"string\"  => throw Exception (\"Field name must be a string\")\n```\n\nIt is fixed to \n\n```\ntypeof field != \"string\"\n```\n",
    "head_branch": "pr_v_2/mvc_model_validator",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621332618912b45d36a398a",
    "number": 3340,
    "body": "The version number has not yet been updated to 1.3.5. This PR will fix this.\n",
    "head_branch": "1.3.5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 0954ca3e7ccd96c946c07c31e68ee32ac0c57af3 into fea73fc83b63dfdcb424445f397634215bdb9093"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621332718912b45d36a398b",
    "number": 3339,
    "body": "",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge f28c3a9b21ae48039dde43c9e0ebea786db956e2 into 6cd00d23f695dccb081a6d6fdd59037bb636086d"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621332818912b45d36a398c",
    "number": 3338,
    "body": "Example Code:\n\n``` php\n<?php\nnamespace Phalcon;\n\n$conf1 = ['keys' => ['scott', 'cheetah']];\n$conf2 = ['keys' => ['peter']];\n\n$config = new Config($conf1);\n$config->merge(new Config($conf2));\n\nvar_dump($config->toArray());\n```\n\nCurrent version output:\n\n```\nWarning: Phalcon\\Config::_merge(): Property should be string in test.php on line 8\narray(1) {\n  [\"keys\"]=>\n  array(2) {\n    [0]=>\n    string(5) \"scott\"\n    [1]=>\n    string(7) \"cheetah\"\n  }\n}\n```\n\nFixed Config::merge output:\n\n```\narray(1) {\n  [\"keys\"]=>\n  array(3) {\n    [0]=>\n    string(5) \"scott\"\n    [1]=>\n    string(7) \"cheetah\"\n    [2]=>\n    string(5) \"peter\"\n  }\n}\n```\n",
    "head_branch": "2.0.0-config",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 6835bf096314c949d0dc096a384b65029fa8abae into b74a45357f8bbf1cd05e8623a63ee2394bcc0ac1"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621332918912b45d36a398d",
    "number": 3333,
    "body": "",
    "head_branch": "2.0.0docBlock",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621332a18912b45d36a398e",
    "number": 3331,
    "body": "I hope these changes compile correctly. My PHP development environment is not currently set up.\n",
    "head_branch": "docBlock",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621332b18912b45d36a398f",
    "number": 3330,
    "body": "#3235\n\n-Added checks for form to use self getters\n-Element to prioritize using form values over tag values.\n",
    "head_branch": "hotfix/form_default_value_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621332c18912b45d36a3990",
    "number": 3329,
    "body": "",
    "head_branch": "#3327",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621332d18912b45d36a3991",
    "number": 3328,
    "body": "https://github.com/phalcon/cphalcon/blob/master/ext/logger.c#L56\n",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621332f18912b45d36a3992",
    "number": 3321,
    "body": "",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621333018912b45d36a3993",
    "number": 3319,
    "body": "Phalcon 1.3:\nhttps://github.com/phalcon/cphalcon/blob/master/ext/session/adapter.c#L702\n",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 0b5480f3828cac2d80c8903ee1dd57fd77fefd35 into fee475467976b0f77108ab1b28b57275ec641131"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621333118912b45d36a3994",
    "number": 3317,
    "body": "",
    "head_branch": "2.0.0-query-parser-zephir_init_var",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 1512f5cffbc516abaf011d4724af75cb66125c60 into 4d261a2cf15cf92ec0b9e7bde5f5653d55e19aaf"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621333218912b45d36a3995",
    "number": 3315,
    "body": "Issue #3222\n",
    "head_branch": "2.0.0-issue-3222",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621333318912b45d36a3996",
    "number": 3314,
    "body": "Issue #3295 (rewrite of pull request #3294)\n",
    "head_branch": "2.0.0-issue-3295",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621333418912b45d36a3997",
    "number": 3311,
    "body": "The ACL constants were previously booleans and threw a warning:\n\n```\nWarning: Passing possible incorrect type for parameter: Phalcon\\Acl\\Adapter\\Memory::setDefaultAction(defaultAccess), passing: bool, expecting: int in ... on ... [possible-wrong-parameter]\n```\n\n\\Phalcon\\Acl\\Adapter\\Memory::isAllowed() now also returns only boolean values instead of possibly returning the ACL constants.\n",
    "head_branch": "acl",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621333518912b45d36a3998",
    "number": 3304,
    "body": "",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621333618912b45d36a3999",
    "number": 3303,
    "body": "",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 33a2434e0ac20037ad101948f94e127f00ccb6e6 into b2f58499cff762c70fcbd67b97585ff1e55b6f0f"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621333718912b45d36a399a",
    "number": 3300,
    "body": "1) \nMethod **getHeader** extended to allow to retrieve values with regular HTTP header names like Accept-Header, Content-Type etc. It's compatible with 1.3.x code. \n_(Because the method getHeaders returns an array with keys that has regular HTTP header names. We should have the possibility to retrieve one value via HTTP header name from getHeader)_\n\n2)\nMethod **getHeaders** refactored to add common used HTTP header field names, like Content-Type and Content-Length. It's compatible with 1.3.x code. \n",
    "head_branch": "pr_v_2/request",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621333818912b45d36a399b",
    "number": 3299,
    "body": "If entity is not passed to isValid method but previously set via constructor we should bind this one.\n\nNow it's additionally possible:\n\n``` php\n$robot = Robots::findFirst();\n$form = new Form($robot);\n\n// works because we use for entity binding the model which is passed to constructor\nif ($form->isValid($_POST)) { \n    $robot->save();\n}\n```\n",
    "head_branch": "pr_v_2/form",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621333918912b45d36a399c",
    "number": 3298,
    "body": "Added missing interface which is used but has not been declared.\nFix interfaces typo in cli/dispatcher.\n",
    "head_branch": "pr_v_2/dispatcher",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621333b18912b45d36a399d",
    "number": 3296,
    "body": "Added missing interface which is used but has not been declared.\nFix interfaces typo in cli/dispatcher.\n",
    "head_branch": "pr_v_2/dispatcher",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621333c18912b45d36a399e",
    "number": 3294,
    "body": "Issue  #3271\n",
    "head_branch": "2.0.0-issue-3271",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621333d18912b45d36a399f",
    "number": 3286,
    "body": "0 can be a desired value for offsets, e.g. if you want to crop from top of the image\n\n``` php\n$image->crop(150, 193, null, 0); //crop horizontally center, vertically top \n```\n\nIt was OK in 1.3:\nhttps://github.com/phalcon/cphalcon/blob/1.3.4/ext/image/adapter.c#L429\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge f9e3c0dfb90bb2450e0c633d277bfb22f1bad700 into b7ad55036b9608ac5ff824b4f8e553aa70781313"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621333e18912b45d36a39a0",
    "number": 3284,
    "body": "The #3190 issue fixed fully **here** and in this PR https://github.com/phalcon/zephir/pull/718\n",
    "head_branch": "fixed-docblock",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621333f18912b45d36a39a1",
    "number": 3282,
    "body": "- Added `AdapterInterface::setLimit`, `AdapterInterface::getLimit`\n- Implemented `NativeArray::setLimit`, `NativeArray::getLimit`\n- Implemented `Model::setLimit`, `Model::getLimit`\n\n`QueryBuilder` already have `setLimit` and `getLimit`.\n\nCleanup PHPDoc (will be generated with `zephir stubs`)\n",
    "head_branch": "paginator-improvements",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621334018912b45d36a39a2",
    "number": 3281,
    "body": "",
    "head_branch": "fix-typo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621334118912b45d36a39a3",
    "number": 3280,
    "body": "https://github.com/phalcon/cphalcon/issues/3274\n",
    "head_branch": "issue3274",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621334218912b45d36a39a4",
    "number": 3279,
    "body": "Issue #3274 \n",
    "head_branch": "2.0.0-issue-3274",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621334518912b45d36a39a5",
    "number": 3277,
    "body": "As described here: https://github.com/phalcon/cphalcon/issues/3274\nAnd discussed in the forum here: http://forum.phalconphp.com/discussion/4554/phalcon-converts-zero-to-null-when-passed-as-last-parameter-in-u#C15206\n\nThere is an issue where Phalcon converts a single url param to null if the param is 0.\nThanks to 7thcubic who pointed to the possible problem area \nhttps://github.com/phalcon/cphalcon/blob/2.0.0/phalcon/mvc/router.zep#L575\n\nI have created a PR that may solve this.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621334718912b45d36a39a6",
    "number": 3276,
    "body": "Checking of column map always fail due to incorrect check, fixed so toArray works\nremove clean up doc blocks too\n",
    "head_branch": "2.0.0_fix_simple_to_array",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621334818912b45d36a39a7",
    "number": 3273,
    "body": "Issue #3247 \n\nStrict type comparisons to detect changes. Need someone to check my code...\n",
    "head_branch": "2.0.0-issue-3247",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621334918912b45d36a39a8",
    "number": 3272,
    "body": "Issue #3195\n",
    "head_branch": "2.0.0-issue-3195",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621334a18912b45d36a39a9",
    "number": 3270,
    "body": "Issue #3249\n",
    "head_branch": "2.0.0-issue-3249",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621334b18912b45d36a39aa",
    "number": 3268,
    "body": "Namescope and removal of doc blocks\n\nusage is\n\n<code>\npublic function scope()\n    {\n        return [\"published\" => [\"conditions\" => \"type = 1\"],\n                 \"draft\" => [\"conditions\" => \"type = ?\", \"bind\" => 2], \"jkrowling\" => [\"conditions\" => \"type = 1 & author_id = 6\"]];\n    }\n</code>\n\n<code>\nBooks::model()->published()->draft()->findAll();\nBooks::model()->jkrowling()->draft()->findAll([\"limit\" => 20]);\nBooks::model()->findAll([\"conditions\" => \"author_id = ?\", \"bind\" => 4]);\n\nBooks::model() == new Books();\n</code>\n\nIt would have to create a new instance, in order to daisy chain the scopes.\nAll scopes will be saved until findAll() is called.\n\nScopes function will return the model itself.\n\nSo unless you guys prefer\n\nBooks::published()::draft()::findAll()\n\ni guess this is it\n",
    "head_branch": "2.0.0_model_name_scope",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621334c18912b45d36a39ab",
    "number": 3267,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621334d18912b45d36a39ac",
    "number": 3266,
    "body": "",
    "head_branch": "small_fixes_2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 8543ba29ae8efc42f91851e3c68c722b04487d1a into 2ce00c2db02bf583490ab547ab0a8f5b9ba45360"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621334e18912b45d36a39ad",
    "number": 3265,
    "body": "",
    "head_branch": "patch-12",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621334f18912b45d36a39ae",
    "number": 3264,
    "body": "",
    "head_branch": "patch-11",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621335018912b45d36a39af",
    "number": 3263,
    "body": "",
    "head_branch": "patch-10",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621335118912b45d36a39b0",
    "number": 3262,
    "body": "",
    "head_branch": "small_fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621335218912b45d36a39b1",
    "number": 3261,
    "body": "Form was not calling self getters, fixed it so that adding csrf to the form would not cause problems.\n\ncsrf, if set as default for element would cause it to update everytime a new instance is created.\n\nnow it will use getCsrf().\n",
    "head_branch": "2.0.0_form_default_value_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621335318912b45d36a39b2",
    "number": 3260,
    "body": "Before reading this issue please merge #3257 and #3258 - fixes of last failing tests (excepting sqlite tests).\n\nI propose:\n- mark sqlite tests skipped (this pull request)\n- mark #3123 as critical bug\n- merge #2999\n- do not merge pull requests with failed builds\n\nReasons:\n- some contributors do not see to tests log (because build successful), but tests in this builds fails. \n  Recent example: pull request #3238 broke DbDescribeTest\n",
    "head_branch": "skip_sqlite",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 66a4c6cfbbd5428f1940e39683546f0e5ce3ccc5 into abf69a63ba181fbeb1e6ca1c490464b63d86f75e"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621335418912b45d36a39b3",
    "number": 3259,
    "body": "Another commit will be made to ensure that issent() is only called when returned_response evaluates to true.\n\nAlso want to make sure that unit tests pass with this commit...\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge a0f31485209ae307d5f6d7c35f8d1c899d46d102 into 33e85f551c253ddff58e594e2bace5c2e55f12ef"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621335518912b45d36a39b4",
    "number": 3258,
    "body": "non static access to _version in static function\nself::_checked if this var not exists in own reads and writes parent variable\n",
    "head_branch": "imagick2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 63f2594c8f691aff5b70c1ec7ec3e2c5fe732ba8 into d66550369190ae63cb74eab3c96121db1e7d4630"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621335618912b45d36a39b5",
    "number": 3257,
    "body": "",
    "head_branch": "set_state",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621335818912b45d36a39b6",
    "number": 3255,
    "body": "parameters are null in this cases\n",
    "head_branch": "builder",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621335918912b45d36a39b7",
    "number": 3254,
    "body": "",
    "head_branch": "paginator",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621335a18912b45d36a39b8",
    "number": 3253,
    "body": "preserveGlobalState option for runInSeparateProcess\n",
    "head_branch": "firephp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge ac9f546bc5c88d4fa101b3a8ee7c6bbe311b6727 into 6bb50b86d67cb527f8f82aa84e5015d1dec9805c"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621335b18912b45d36a39b9",
    "number": 3252,
    "body": "Changes in imagick api: setResourceLimit now is not static\n",
    "head_branch": "imagick",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 01d61eb7a24691b6943fd644b218dea20b49fd32 into bc63362a1508342b7d524b1f526f5ea0706524c5"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621335c18912b45d36a39ba",
    "number": 3251,
    "body": "Issue #3176 \n",
    "head_branch": "2.0.0-issue-3176",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621335d18912b45d36a39bb",
    "number": 3248,
    "body": "In Micro::handle(), issent() was being called on the return value regardless of type (if the value is an object).\nThe following error is encountered when the return value's type is not an instance of Phalcon\\Http\\Response:\n\nFatal error: Call to undefined function Xyz::issent()\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621335e18912b45d36a39bc",
    "number": 3243,
    "body": "",
    "head_branch": "merge",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621335f18912b45d36a39bd",
    "number": 3242,
    "body": "",
    "head_branch": "patch-9",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge fa8241c0ce44d8b7180184c99086322d92e3a5a1 into 4f81c42c7b94188eaa1edf0e3e296f70ff8af3e8"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621336018912b45d36a39be",
    "number": 3241,
    "body": "",
    "head_branch": "patch-8",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621336118912b45d36a39bf",
    "number": 3238,
    "body": "Problem to restore a Phalcon\\Db\\Index object from export. Method __set_state requires _indexName instead _name parameter.\n",
    "head_branch": "fix-index-set-state",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 0b9e0b3e0b603ac25c4a331d05470ce2be8e03ae into 1b706b99016363614ba8aa5c8a5cd299ad4e4458"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621336218912b45d36a39c0",
    "number": 3237,
    "body": "Only calling issent() if the returned value is an instance of Phalcon\\Http\\ResponseInterface\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621336318912b45d36a39c1",
    "number": 3236,
    "body": "Fix an error when defining typeValues of a column.\n",
    "head_branch": "fix-typeValues",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621336418912b45d36a39c2",
    "number": 3234,
    "body": "#3124\n",
    "head_branch": "1.3_email-validation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621336518912b45d36a39c3",
    "number": 3232,
    "body": "Retrieves the onUpdate and onDelete action, added checks on reference to prevent breaking of other dialects.\n",
    "head_branch": "2.0.0_mysql_reference_actions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621336618912b45d36a39c4",
    "number": 3231,
    "body": "Fix allow model to skip saving if it is unmodified, Require snapshot to be true.\n\nPrevent some database error when attempting to save with unique fields.\n",
    "head_branch": "2.0.0_skip_unmodified_model",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621336718912b45d36a39c5",
    "number": 3230,
    "body": "",
    "head_branch": "2.0.0_mysql-create-table",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621336818912b45d36a39c6",
    "number": 3229,
    "body": "Fix #3135: allow Request::getBestLanguage() to return language without dialect\n",
    "head_branch": "2.0.0_getbestlanguage-dialect",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621336918912b45d36a39c7",
    "number": 3228,
    "body": "",
    "head_branch": "2.0.0_acl_database_adapter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621336b18912b45d36a39c8",
    "number": 3225,
    "body": "Happy New Year 2015\n",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621336c18912b45d36a39c9",
    "number": 3224,
    "body": "options[\"server\"] was never used.\nthis->_collection was never set.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621336d18912b45d36a39ca",
    "number": 3220,
    "body": "Thix fix allows to name the constraint explicitly (the name wasn't taken into consideration with the old syntax)\n",
    "head_branch": "db-dialect-mysql-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621336e18912b45d36a39cb",
    "number": 3217,
    "body": "anyone got a good git tutorial?\n",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621337018912b45d36a39cc",
    "number": 3216,
    "body": "",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621337118912b45d36a39cd",
    "number": 3214,
    "body": "Hello,\n\nWith this PR, it's now possible to add several keys at the same time in delete method of Redis backend.\nThis method implement native functionnality of [phpredis driver](https://github.com/phpredis/phpredis#del-delete)\n\n``` php\n        $frontCache = new Phalcon\\Cache\\Frontend\\Data(array('lifetime' => 20));\n        $cache = new Phalcon\\Cache\\Backend\\Redis($frontCache, array(\n            'host' => 'localhost',\n            'port' => 6379\n        ));\n        $cache->save('key1', 'value1');\n        $cache->save('key2', 'value2');\n        $cache->save('key3', 'value3');\n        $cache->delete(array('key1','key2','key3'));\n```\n\nDelete method return now Long Number of keys deleted.\n\nThanks\n",
    "head_branch": "redis-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621337218912b45d36a39ce",
    "number": 3213,
    "body": "",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621337318912b45d36a39cf",
    "number": 3212,
    "body": "phpdoc for default services\nrefs https://github.com/phalcon/phalcon-devtools/blob/master/ide/1.3.4/Phalcon/DI/Injectable.php#L18\nfor autocomplete\n",
    "head_branch": "patch-7",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621337418912b45d36a39d0",
    "number": 3206,
    "body": "refs http://stackoverflow.com/questions/9597052/how-to-retrieve-request-payload\n",
    "head_branch": "patch-6",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621337518912b45d36a39d1",
    "number": 3205,
    "body": "Update for schema again.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621337618912b45d36a39d2",
    "number": 3204,
    "body": "Fixed foreign key not being created correctly for external schema.\n\nWork around.\n\nEdit web tools migrations\n\n```\n            self::$_connection->createTable($tableName, $defaultSchema, $definition);\n            if (method_exists($this, 'afterCreateTable')) {\n                $this->afterCreateTable();\n            }\n```\n- ```\n            $tableExists = true;\n      }\n  }\n  \n   if (isset($definition['references'])) {\n      if ($tableExists == true) {\n  \n          $references = array();\n          foreach ($definition['references'] as $tableReference) {\n              $references[$tableReference->getName()] = $tableReference;\n          }\n  \n          $localReferences = array();\n          $activeReferences = self::$_connection->describeReferences($tableName, $defaultSchema);\n          foreach ($activeReferences as $activeReference) {\n              $localReferences[$activeReference->getName()] = array(\n  ```\n- ```\n                        'referencedSchema' => $activeReference->getReferencedSchema(),\n                      'referencedTable' => $activeReference->getReferencedTable(),\n                      'columns' => $activeReference->getColumns(),\n                      'referencedColumns' => $activeReference->getReferencedColumns(),\n              );\n          }\n  \n          foreach ($definition['references'] as $tableReference) {\n              if (!isset($localReferences[$tableReference->getName()])) {\n                  self::$_connection->addForeignKey($tableName, $tableReference->getSchemaName(), $tableReference);\n              } else {\n  \n                  $changed = false;\n  ```\n-   if ($tableReference->getReferencedSchema()!=$localReferences[$tableReference->getName()]['referencedSchema']) {\n-             $changed = true;\n-               }\n-       if ($changed == false)\n-       {\n          if ($tableReference->getReferencedTable()!=$localReferences[$tableReference->getName()]['referencedTable']) {\n                 $changed = true;\n              }\n-           }\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621337718912b45d36a39d3",
    "number": 3202,
    "body": "Added missed PHPDoc `@return`.\n\nIDE without `@return` gives a warning when checking for the return value:\n\n``` php\nclass FooBehavior extends \\Phalcon\\Mvc\\Model\\Behavior implements \\Phalcon\\Mvc\\Model\\BehaviorInterface\n{\n    public function notify($eventType, \\Phalcon\\Mvc\\ModelInterface $model)\n    {\n        // WARNING HERE\n        if (!$this->mustTakeAction($eventType)) { \n           //\n        }\n    }\n}\n```\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621337818912b45d36a39d4",
    "number": 3200,
    "body": "",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621337918912b45d36a39d5",
    "number": 3196,
    "body": "",
    "head_branch": "fix-response",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 266dd75f751dc09573517f7ba79bcec500c29a8b into 1059e46d4963d62efd5138c963295b67271ab131"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621337a18912b45d36a39d6",
    "number": 3194,
    "body": "issue: https://github.com/phalcon/cphalcon/issues/3189\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge c52c5f107857ba47a5008281e4084f0b9eee552f into 63a226af6c5eda27d2322b7e686ca8b512c549fd"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621337b18912b45d36a39d7",
    "number": 3192,
    "body": "",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 991c2890563731616e1b61176a86dfd815529fb7 into 2dea6b4b3a9f5f7bbea14478ed119b9e9dc3c45a"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621337c18912b45d36a39d8",
    "number": 3188,
    "body": "Please just confirm the fact that «isset» in https://github.com/phalcon/cphalcon/blob/2.0.0/phalcon/cache/backend/libmemcached.zep#L86 will treat «null» as «not set» (PHP-like, but I don't know in Zephir).\n\nThis is to fix the same issue as https://github.com/phalcon/cphalcon/pull/3183, but in the session handler part.\n",
    "head_branch": "patch-5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621337e18912b45d36a39d9",
    "number": 3187,
    "body": "Fixed grammar.\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 7f06d4dc669eda05bf7060dc9c7828bf2e0410bd into 8f8ece5ef09c83081a4e7017cb29bb09ee2e01f0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621337f18912b45d36a39da",
    "number": 3185,
    "body": "Fix for: \"Uncaught exception 'RuntimeException' with message 'Trying to call method merge on a non-object'\" when calling registerDirs with merge.\n\nTest case updated to reflect a merge case.\n",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621338018912b45d36a39db",
    "number": 3183,
    "body": "Cached keys to allow flush is a big performance killer when a lot of keys are created. A timestamp-based management should be implemented (or just an increment), using only one small key.\nFor now, this change allows to disable the cached keys, enabling the developer to manage this on his own.\n",
    "head_branch": "patch-8",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621338118912b45d36a39dc",
    "number": 3182,
    "body": "As said by the Zephir compiler, this variable is unused.\n",
    "head_branch": "patch-7",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621338218912b45d36a39dd",
    "number": 3181,
    "body": "",
    "head_branch": "patch-5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621338318912b45d36a39de",
    "number": 3166,
    "body": "See https://github.com/ovr/cphalcon/tree/patch-5\n",
    "head_branch": "patch-5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621338418912b45d36a39df",
    "number": 3165,
    "body": "",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621338518912b45d36a39e0",
    "number": 3156,
    "body": "",
    "head_branch": "2.0.0_fix-view-sort",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621338618912b45d36a39e1",
    "number": 3152,
    "body": "The runTests.sh script should exit when the test fails, otherwise its not immediately clear whether the build failed.\n",
    "head_branch": "tests-exit-on-fail",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621338718912b45d36a39e2",
    "number": 3151,
    "body": "",
    "head_branch": "readme-install-instructions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621338818912b45d36a39e3",
    "number": 3142,
    "body": "Class `\\Phalcon\\Mvc\\Router` not implements interface `\\Phalcon\\Mvc\\RouterInterface`, `\\Phalcon\\Mvc\\InjectionAwareInterface`\n",
    "head_branch": "patch-5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621338918912b45d36a39e4",
    "number": 3141,
    "body": "Correction in the event `beforeModuleStart` added `moduleName` to event\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621338a18912b45d36a39e5",
    "number": 3140,
    "body": "",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621338b18912b45d36a39e6",
    "number": 3138,
    "body": "Added method `getModule()` in class `\\Phalcon\\Mvc\\Application`\nChanges in method `handle()`, gets module definition via new method `getModule()`\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621338c18912b45d36a39e7",
    "number": 3137,
    "body": "Added method `getModule()` in class `\\Phalcon\\Mvc\\Application`\nChanges in method `handle()`, gets module definition via new method `getModule()`\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621338d18912b45d36a39e8",
    "number": 3136,
    "body": "",
    "head_branch": "fix_3023",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621338e18912b45d36a39e9",
    "number": 3134,
    "body": "We have done some adjustments and fixes.\n\n1)\nMethod **getJsonRawBody** extended with boolean parameter to have a possibility to return a associative array instead of object. It's compatible with 1.3.x code.\n\n2) \nMethod **_getQualityHeader** refactored to fix poor mapped header parts and whitespacing. Now its possible to catch parts like that _\"text/html;level=1; q=0.5\"_ (http://tools.ietf.org/html/rfc7231#page-38). It's compatible with 1.3.x code. \n\n3) \nAdded a new method **getContentType** to get request content type. This method includes also the content type bugfix for php version 5.5.8 (https://bugs.php.net/bug.php?id=66606)\n\n4) \nMethod **isSoapRequested** refactored with new content type function. It's compatible with 1.3.x code.\n\n5) \nAdded a new test for content type, extend old tests because of refactoring **_getQualityHeader** and fix **isSoapRequested** test\n",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 5ea48ac808cf74bd1f515dff37d61f9a26762ea8 into 97f7a39df273baaab9f758f5aa90808dc28347aa"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621338f18912b45d36a39ea",
    "number": 3132,
    "body": "",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621339118912b45d36a39eb",
    "number": 3131,
    "body": "Creating an instance of a class `\\Phalcon\\Mvc\\Model\\Criteria` via `DI` to reduce dependence of classes.\n",
    "head_branch": "patch-model",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621339218912b45d36a39ec",
    "number": 3129,
    "body": "Find from compilation notice\n\n```\nWarning: Variable \"intTotalPages\" declared but not used in Phalcon\\Paginator\\Adapter\\QueryBuilder::getPaginate in /tmp/cphalcon/phalcon/paginator/adapter/querybuilder.zep on 172 [unused-variable]\n```\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 79280ce25ab1fddc5d4f519fec1c77f52a7b875e into dc8ced6a83da2d9e148c5ca222abc4db9e4a1604"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621339318912b45d36a39ed",
    "number": 3128,
    "body": "Model uses the toArray method to serialize model data taking into account the column mappings\n",
    "head_branch": "1.3.5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621339418912b45d36a39ee",
    "number": 3120,
    "body": "See: https://github.com/phalcon/cphalcon/issues/3069\n",
    "head_branch": "patch-6",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621339518912b45d36a39ef",
    "number": 3119,
    "body": "Allow null model:\nhttps://github.com/phalcon/cphalcon/blob/2.0.0/phalcon/mvc/model/query.zep#L2785\n\n``` php\nreturn new Status(true, null);\n```\n\nSee https://github.com/phalcon/cphalcon/issues/3069\n",
    "head_branch": "patch-5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621339618912b45d36a39f0",
    "number": 3118,
    "body": "#3114\n",
    "head_branch": "registered_engines",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621339718912b45d36a39f1",
    "number": 3117,
    "body": "#3115\n",
    "head_branch": "loader",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge df170b6cabc4699122875da9023e42c917ab6a4f into 316f5dec1169cc41858ad39df3219e90c23326a5"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621339818912b45d36a39f2",
    "number": 3116,
    "body": "- bugfixes in managing with priority\n- tests for events with priority\n- new method Phalcon\\Events\\Manager::detach to detach listener + tests for it\n",
    "head_branch": "events_manager",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621339918912b45d36a39f3",
    "number": 3113,
    "body": "Method for getting model fields with default values.\n",
    "head_branch": "default_values",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621339a18912b45d36a39f4",
    "number": 3112,
    "body": "wrong empty replacing in commit c6b1faa1ca9b7877be7e74b10ccb518dcab8fe18\n",
    "head_branch": "empty",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621339b18912b45d36a39f5",
    "number": 3109,
    "body": "Some changes:\n- registerAutoloaders is called after registering modules for all modules:\n  - It low-cost operation, but very usefull: in multimodule application each module can autoload own classes.\n- if in module class exists method 'initialize' it calles after registering\n  - It can be used for registering own routes by each module\n\nThis two changes are steps to independent reusable modules. For example https://github.com/quantum13/cphalcon/blob/694bf70888c7254218a6d0aca99c94814ee34247/unit-tests/modules/objects/Module.php\n- forward to another module #121 (registerServices called in each module in dispatch loop)\n  - useful for https://github.com/phalcon/cphalcon/issues/121#issuecomment-45719826\n- one backward incompatibility: di must be setted to application before registering modules\n",
    "head_branch": "modules",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621339c18912b45d36a39f6",
    "number": 3108,
    "body": "cf #3073 \n",
    "head_branch": "fix_3073",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621339d18912b45d36a39f7",
    "number": 3107,
    "body": "ORM enhancements : \n- Replace new builder by models manager createBuilder call on model queries\n- Late state binding on hydration (cloneResultMap call) to be able to override class creation (refs #2786) - also done here for 1.3.3 : link to #2789 \n- Add ini \"orm.late_state_binding\" (default true) to enable / disable the functionality for models as it's slower than previous implementation (due to the fact that there is no monomorphic method cache)\n\nWith this we can override the instantiation of an object to mimic Doctrine inheritance (http://the-phpjs-ldc.rgou.net/symfony1/more-with-symfony/en/09-Doctrine-Form-Inheritance.markdown)\n\n``` php\n/**\n     * Assigns values to a model inherited class from an array returning a new model.\n     *\n     * @param \\Phalcon\\Mvc\\Model $base          object to hydrate\n     * @param array              $data          data to use for hydration\n     * @param array              $columnMap     column mapping\n     * @param int                $dirtyState    object state\n     * @param boolean            $keepSnapshots keep snapshot\n     *\n     * @return \\Phalcon\\Mvc\\Model\n     */\n    public static function cloneResultMap(\n        $base,\n        $data,\n        $columnMap,\n        $dirtyState = null,\n        $keepSnapshots = null\n    ) {\n        if (isset($data['columnUsedForTableInheritance'])) {\n            $class = '\\Ournamespace\\Models\\\\' . $data['columnUsedForTableInheritance'];\n            if (class_exists($class)) {\n                $base = new $class();\n            }\n        }\n        return parent::cloneResultMap(\n            $base,\n            $data,\n            $columnMap,\n            $dirtyState,\n            $keepSnapshots\n        );\n    }\n```\n",
    "head_branch": "2.0.0_LSB",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621339e18912b45d36a39f8",
    "number": 3105,
    "body": "It looks like there is a typo, isn't it?\nIf this is a typo, is this a valid fix?\n\nSorry I'm quite new to this project.\nI don't understand it fully yet.\nPlease forgive me if I'm wrong.\n",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621339f18912b45d36a39f9",
    "number": 3102,
    "body": "See #2684\n",
    "head_branch": "2684",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133a118912b45d36a39fa",
    "number": 3100,
    "body": "Related model name without namespace.\n",
    "head_branch": "alias",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133a218912b45d36a39fb",
    "number": 3099,
    "body": "This fixes the issue with bug https://github.com/phalcon/cphalcon/issues/3098   where empty results would cause exceptions to be thrown since proper type was not being passed to result. \n",
    "head_branch": "fix_complex",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133a318912b45d36a39fc",
    "number": 3097,
    "body": "Contains fixes from the #3040 PR and fix #2065 for 2.0.0\n",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133a418912b45d36a39fd",
    "number": 3093,
    "body": "",
    "head_branch": "router",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133a518912b45d36a39fe",
    "number": 3092,
    "body": "",
    "head_branch": "autoescape",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133a618912b45d36a39ff",
    "number": 3082,
    "body": "removed double comma.\n",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133a718912b45d36a3a00",
    "number": 3078,
    "body": "Reimplement what was done in Phalcon 1.3: https://github.com/phalcon/cphalcon/blob/master/ext/tag.c#L959\n\nFixes https://github.com/phalcon/cphalcon/issues/3058\n",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge e60d03f1f970c67fae901907eedbbca20b71d1c6 into 4dc76fa1dbe3e81a108e36e53ec995cd92586b69"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662133a818912b45d36a3a01",
    "number": 3077,
    "body": "I've done some tests with phalcon and phpci.\n\nIf I try to execute the tests, the cleanFile call throws an exception that file is busy.\n\nAfter closing the logger, everything works fine.\n",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 1c513a6fa479185641ce0051639630fe3419fa57 into 0230e8d2fbe1d62f193bf2b428816c6f763961c8"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133a918912b45d36a3a02",
    "number": 3076,
    "body": "Fix https://github.com/phalcon/cphalcon/issues/3058\n- don't use the value from «default» if there's no value in params['value'] or _POST\n- find out what the real default value is: use the _displayValues[](setDefault function), or if it's not set, use the value from params['value'] or _POST\n- once the real default value is found, just test it against the real current value\n\n=> this should not break any script that didn't use the setDefault() function so far. But that will define what the «value» attribute should be: it doesn't depend on the field's value, as in «input type=text», it's a fixed value. If the value is the same as the default one, then the checked attribute is «checked».\n\nI think the big issue there is that there's no difference between the value of the checkbox and the value of the parameter. For example, if I have to code it in PHP (don't mind the HTML injections!):\n`<input type=\"text\" value=\"<?php echo $value ?>\"/>`\nbut:\n`<input type=\"radio\" value=\"X\" <?php if ($value === 'X') echo ' checked=\"checked\"' ?>/>`\n=> in the radio type, the value belongs to the input, not to the object ($value).\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133aa18912b45d36a3a03",
    "number": 3075,
    "body": "Warning: Variable \"queryParams\" assigned but not used in Phalcon\\Db\\Adapter\\Pdo::convertBoundParams in /usr/local/src/cphalcon/phalcon/db/adapter/pdo.zep on 433 [unused-variable]\n\n```\n      let queryParams = [], placeHolders = [],\n    ----------------------^\n```\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge b6baf16932668ff0d3147307645145ea543c2b78 into 58ea728351758b23736a8eb80e9c9fb8f5dd728f"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133ab18912b45d36a3a04",
    "number": 3071,
    "body": "Added events in `Phalcon\\Di`\n- beforeServiceResolve\n- afterServiceResolve\n",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133ac18912b45d36a3a05",
    "number": 3067,
    "body": "",
    "head_branch": "tabs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133ad18912b45d36a3a06",
    "number": 3066,
    "body": "",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133ae18912b45d36a3a07",
    "number": 3059,
    "body": "",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 323a507f42c04066819f128d4e37d23611d84df5 into f3f06ba182d5cfddf5397651b5489700a7b89407"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662133af18912b45d36a3a08",
    "number": 3057,
    "body": "see #3055\n",
    "head_branch": "3055",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133b018912b45d36a3a09",
    "number": 3056,
    "body": "See #3033, verify property access.\n",
    "head_branch": "model_2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133b118912b45d36a3a0a",
    "number": 3054,
    "body": "Along with other APC adapters (metadata, cache\\backend), the use of prefix and TTL would allow cache purge without purging all APC cache.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133b318912b45d36a3a0b",
    "number": 3052,
    "body": "``` zephir\nif empty \"0\" \n```\n\nreturn true which is (as far as i can see) a bug.\n\nThis fix the validator (unless zephir empty operator has to be fixed) \n",
    "head_branch": "backwardcompatibility",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133b418912b45d36a3a0c",
    "number": 3051,
    "body": "Clarify the documentation regarding whether intervals are open or not.\n",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133b518912b45d36a3a0d",
    "number": 3049,
    "body": "",
    "head_branch": "resultset_2.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133b618912b45d36a3a0e",
    "number": 3047,
    "body": "Changes in methods so that 2.0.0 is more backward compatible with 1.3.4\n- Volt _compileSource is no more final\n- getModelsManager is renamed getCollectionManager in Mvc/Collection class (changed in 1.3.3)\n- fix #3048 bug with queryKeys in Xcache backend\n",
    "head_branch": "backwardcompatibility",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133b718912b45d36a3a0f",
    "number": 3046,
    "body": "In 1.3.4, _compileSource was not final and could be overrided.\n",
    "head_branch": "volt",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133b818912b45d36a3a10",
    "number": 3045,
    "body": "",
    "head_branch": "fix_3023",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133b918912b45d36a3a11",
    "number": 3044,
    "body": "",
    "head_branch": "use_new-phpunit",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133ba18912b45d36a3a12",
    "number": 3041,
    "body": "Pull request to fix #3023 bug in 1.3.4\n",
    "head_branch": "fix_3023",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133bb18912b45d36a3a13",
    "number": 3040,
    "body": "Hi\n\nFixes:\n- int type for total items\n- fix total pages (limit 100, with 4 in db show 0.04)\n- PHP 5.3 BC\n\nWorkflow example:\n\nhttp://phalcon-module.dmtry.me/api/users\nhttp://phalcon-module.dmtry.me/api/users?limit=1\nhttp://phalcon-module.dmtry.me/api/users?limit=2\nhttp://phalcon-module.dmtry.me/api/users?limit=3\nhttp://phalcon-module.dmtry.me/api/users?limit=100\n\nWithout patch it works like https://gist.github.com/ovr/43af99f5eca8dd74dca1\n\nThx\n\n![](http://s.pikabu.ru/post_img/2013/05/17/9/1368796778_1338513910.gif)\n",
    "head_branch": "phalcon_2-paginator_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 57ccbeb8ed9d8ebf26dac88eed5b6efd84ba964b into b55c35a96479a5e90f9681f6013fbc47985c49d7"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133bc18912b45d36a3a14",
    "number": 3039,
    "body": "Fix an issue that appears after fix for #2997\n\nIf assets outputCss or outputJs methods are called and join is false, an error is raised, that target path equals source path.\n\nAlso includes a test for this issue.\n",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133bd18912b45d36a3a15",
    "number": 3038,
    "body": "This clarifies whether Between and StringLength do inclusive checks.\n",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133be18912b45d36a3a16",
    "number": 3037,
    "body": "",
    "head_branch": "2.0.0_2985_GdCropBug",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 133cdda619dc0aab39582c14277a81be37076695 into de1e67d34e2b705013c52bdac963e487c4d5c7fa"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133bf18912b45d36a3a17",
    "number": 3036,
    "body": "Fix an issue that appears after fix for #2997\n\nIf assets outputCss or outputJs methods are called and join is false, an error is raised, that target path equals source path.\n\nAlso includes a test for this issue.\n",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133c018912b45d36a3a18",
    "number": 3030,
    "body": "add image tests\ncheck and enable other tests\nremove is_readable from CSV translate adaptor (sometimes travis return failed build)\nbuild passed by https://github.com/akaNightmare/cphalcon/pull/2\n",
    "head_branch": "enable_tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133c118912b45d36a3a19",
    "number": 3028,
    "body": "Previously it was not clear from the documentation or C-sourcecode whether it is \"longer-than\" or \"at least\"; same for max.\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133c218912b45d36a3a1a",
    "number": 3027,
    "body": "It wasn't clear, neither from documentation, nor from the C sourcecode, whether this is a test of min<=x<=max, min<x<max, or variations thereof.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133c318912b45d36a3a1b",
    "number": 3026,
    "body": "If we need to extend the dialect, we have to overload the getSqlExpression(). See https://github.com/phalcon/cphalcon/issues/2952 and http://forum.phalconphp.com/discussion/1748/date-sub-interval-mysql\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 0cf33a88a706678fe7a2632c7aecdc6bdd03db89 into 1fe4c8024c26672a2008601f80fa92b94006dfd3"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133c418912b45d36a3a1c",
    "number": 3025,
    "body": "Test has been changed because subject of issue - setting RawValue('default').\nCurrent test don't works because it updates primary key, but in current version updates of primary keys not supported (http://forum.phalconphp.com/discussion/2989/update-primary-keys)\n",
    "head_branch": "fix_test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133c518912b45d36a3a1d",
    "number": 3022,
    "body": "",
    "head_branch": "model_refactoring",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge c8a07d5df663b94248a7099be7cca85ca9549499 into f6b848e63486c0cd06c9d650691d7d83108fdb42"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662133c618912b45d36a3a1e",
    "number": 3021,
    "body": "",
    "head_branch": "doc-imageAdapter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge e802a2dbaf55d496f7ee16d473c327629c72b020 into 0dd36fc542314da7f51a274f095348e2299f1fbc"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662133c718912b45d36a3a1f",
    "number": 3019,
    "body": "",
    "head_branch": "request-getURI",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133c818912b45d36a3a20",
    "number": 3017,
    "body": "Per ticket #2930 \n",
    "head_branch": "2.0.0_2930_getErrorFromPdo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 6984c749eca4f18333f6c639737d46d3e00472a8 into 27ebfe2f5de3622848659d02cba20d0f0eae37dc"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662133c918912b45d36a3a21",
    "number": 3016,
    "body": "See #2988 for information. The result now is:\n\n```\n$c = new \\Phalcon\\Config(['test' => 'toto', 2 => 'abc', 'test2' => ['A', 'B', 'C']]);\n\nvar_dump($c);\nvar_dump($c->{2});\nvar_dump($c->test2->toArray());\n```\n\n```\nobject(Phalcon\\Config)#1 (3) {\n  [\"test\"]=>\n  string(4) \"toto\"\n  [\"2\"]=>\n  string(3) \"abc\"\n  [\"test2\"]=>\n  object(Phalcon\\Config)#2 (3) {\n    [\"0\"]=>\n    string(1) \"A\"\n    [\"1\"]=>\n    string(1) \"B\"\n    [\"2\"]=>\n    string(1) \"C\"\n  }\n}\nstring(3) \"abc\"\narray(3) {\n  [0]=>\n  string(1) \"A\"\n  [1]=>\n  string(1) \"B\"\n  [2]=>\n  string(1) \"C\"\n}\n```\n",
    "head_branch": "2.0.0_2988_ConfigArrayBehavior",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133ca18912b45d36a3a22",
    "number": 3015,
    "body": "build passed - https://github.com/akaNightmare/cphalcon/pull/1\n",
    "head_branch": "fix-travis-build",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133cc18912b45d36a3a23",
    "number": 3013,
    "body": "",
    "head_branch": "issue-3012",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133cd18912b45d36a3a24",
    "number": 3011,
    "body": "",
    "head_branch": "issue-3010",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 1195238f350d7da94f37c966e067efde96537e32 into 99738facf3772e3c1fdbfef6f4633dd72634f798"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133ce18912b45d36a3a25",
    "number": 3009,
    "body": "fixed #2887 \n",
    "head_branch": "2.0.0_2887_spellingOfAccess",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge a464e4cf87dc5e806ac5566cc536661d678cbdf6 into b5315d2062af72ce51072a9595b683bcbb5b07ba"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133cf18912b45d36a3a26",
    "number": 3008,
    "body": "Tiny fix for #2906 \n",
    "head_branch": "2.0.0_2906_refreshForFluentInterface",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133d018912b45d36a3a27",
    "number": 3007,
    "body": "Per #2985 a tiny fix to retrieve the height of an image in the GD adapter\n",
    "head_branch": "2.0.0_2985_GdCropBug",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133d118912b45d36a3a28",
    "number": 3006,
    "body": "From what I could see, the actual headers were being returned, they were just ALL UPPERCASED. So if you had a \"Foo-Bar\" header according to getallheaders() $request->getHeaders() made it \"FOO-BAR\". Adjusted accordingly.\n",
    "head_branch": "2.0.0_2294_MissingCustomHeaders",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133d218912b45d36a3a29",
    "number": 3005,
    "body": "",
    "head_branch": "2.0.0_2644_defaultStatusCodes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133d318912b45d36a3a2a",
    "number": 3004,
    "body": "A very quick and simple addition that allows partials to be retrieved as strings\n",
    "head_branch": "2.0.0_getPartial",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133d418912b45d36a3a2b",
    "number": 3003,
    "body": "Issue #2397 describes a security bug because of unsafe characters being allowed to be written to the filesystem.\n",
    "head_branch": "2.0.0_2397_fileCacheKeyAsFilename",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 269f550de3ed6a78f97e46670de0d54617f109c6 into 29a6c27ba487be7a4517abb28b341a3b0f7f6b41"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662133d518912b45d36a3a2c",
    "number": 3002,
    "body": "",
    "head_branch": "2.0.0_getPartial",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133d618912b45d36a3a2d",
    "number": 3001,
    "body": "Instead of propose #2931 allow to pass params for string where condition for update\nnew param in updateAsDict\n\nexample:\n\n```\n  $success = $connection->update(\n      \"robots\",\n      array(\"name\"),\n      array(\"New Astro Boy\", $some_unsafe_id),\n      \"id = ?\"\n  );\n```\n",
    "head_branch": "branch_update",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133d718912b45d36a3a2e",
    "number": 3000,
    "body": "Temporary run composer before installing prereqs\n\nhttps://github.com/composer/composer/issues/3405\n",
    "head_branch": "using_last_version_of_composer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133d818912b45d36a3a2f",
    "number": 2999,
    "body": "I think branch 2.0.0 must be stable, so builds of pull requests must be successful.\n\nNow builds are successful even if tests failed in it.\n\n@phalcon Could you please check build status of pull requests before merge\n@akaNightmare \nyour pull request #2974 brokes all tests in 5.3 and adds 2 failures in 5.5+ (https://travis-ci.org/phalcon/cphalcon/builds/40434159)\nand #2982 adds one new failure in php 5.5+ (https://travis-ci.org/phalcon/cphalcon/jobs/40434388)\n",
    "head_branch": "build_fail_on_test_fail",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133da18912b45d36a3a30",
    "number": 2998,
    "body": "Didn't pick this error up before submitting my change in #2997, sorry. There was code in the assets manager that depended on a `typeof` check and started running because the property default is now an array. Changed this to use `count()` instead.\n\nAs a side note, it looks like there's quite a few places in the code where null would be returned instead of an array as indicated by the doc comment, because the code is written with lazy array allocation. What's the preference? In PHP user-land, I'd expect to get an array back if a method indicates it returns an array of something.\n",
    "head_branch": "2997-amend",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133db18912b45d36a3a31",
    "number": 2997,
    "body": "The `_collection` property in `Phalcon\\Assets\\Manager` is null by default, and\nimplicitly becomes an array when `Phalcon\\Assets\\Manager::add` is called. This\ncauses a fatal error when for example `outputJs()` or `outputCss()` is called\nwithout adding resources, which is a normal use case.\n\n```\nFatal error: Uncaught exception 'Exception' with message 'The argument is not initialized or iterable()' in phalcon/assets/manager.zep:693\n```\n",
    "head_branch": "asset-collection-empty-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 5c3ab2399a6661dd2ac022aecc0e99e6086a1b22 into 838915abd5fe58fa893e18deffbdb29bf38f2a0f"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133dc18912b45d36a3a32",
    "number": 2996,
    "body": "Fixes https://github.com/phalcon/cphalcon/issues/2954 according to @dreamsxin work.\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133dd18912b45d36a3a33",
    "number": 2995,
    "body": "Adjust the `notSave` and `afterSave` event. \n",
    "head_branch": "model_event",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133de18912b45d36a3a34",
    "number": 2994,
    "body": "See #1615\n",
    "head_branch": "1615",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133df18912b45d36a3a35",
    "number": 2992,
    "body": "Test on the type of options is wrong\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133e018912b45d36a3a36",
    "number": 2991,
    "body": "I think there's a return missing, because when I save a Model, nothing is returned (null), even if the value exists in the memcached server.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133e118912b45d36a3a37",
    "number": 2990,
    "body": "Related #2934\n\nPort of Doctrine DBAL SQLParserUtils\n\nUsage:\n\n```\n$songs = $connection->fetchAll(\n        'select * from songs where name in (?) order by id',\n        Db::FETCH_ASSOC,\n        array(array('Born to Die', 'Off to Races', 'Blue Jeans'))\n    );\n\n    $connection->delete(\n        'songs',\n        'name in (?)',\n        array(array('name1','name2'))\n    );\n\n    $persons = Robots::find(array(\n        \"id in (:ids:)\",\n        'bind' => array('ids' => array(1, 2, 3)),\n        'bindTypes' => array('ids' => Column::BIND_PARAM_INT_ARRAY)\n    ));\n\n    $persons = Robots::find(array(\n        \"id in (?0)\",\n        'bind' => array(array(1, 2, 3))\n    ));\n\n    $persons = Robots::findById(array(1, 2, 3));\n```\n\nOriginal class is under MIT licence. In which form I must write copyright notices in ported files?\nNow I write default template for such files:\nhttps://github.com/quantum13/cphalcon/blob/bind_array/phalcon/db/utils/sqlparser.zep\nhttps://github.com/quantum13/cphalcon/blob/bind_array/tests/unit/Phalcon/Db/Utils/SQLParserTest.php\n",
    "head_branch": "bind_array",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133e218912b45d36a3a38",
    "number": 2989,
    "body": "",
    "head_branch": "NestedSet",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133e318912b45d36a3a39",
    "number": 2986,
    "body": "if columnMap defined we must use only mapped name\n",
    "head_branch": "toarray_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133e418912b45d36a3a3a",
    "number": 2982,
    "body": "",
    "head_branch": "firephp_logger",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133e518912b45d36a3a3b",
    "number": 2978,
    "body": "...s\n\nMore info here: http://forum.phalconphp.com/discussion/3855/phalcon-20-libmemcached-problem#C12829\n",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133e618912b45d36a3a3c",
    "number": 2975,
    "body": "Problem:\nIf you inherit the acl memory adapter and call inside your class $this->allow(...) then following exception will thrown.\n\n_ErrorException: Invalid callback PhalconTest\\Acl\\Adapter\\Memory::_allowordeny, cannot access private method PhalconTest\\Acl\\Adapter\\Memory::_allowOrDeny()_\n\nThis pull request is a quick fix. I think the real issue appears in compilation from zephir to c.\n",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge ac4e4c27f244c7f1518d0266ce51b990a0e7c7db into 2e1ebd18d3c52047ef02614f1786709bd325bbc2"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133e718912b45d36a3a3d",
    "number": 2974,
    "body": "general code was:\n`if typeof instance !== \"object\"` -> `if !(instance instanceof self)` and\n`if typeof value === \"object\" && typeof instance->{key} === \"object\"` had the same situation, but in the iteration Zephir throws some exception like\n`Phalcon\\self does not exist`, please pay attention to this case, thanx\n\nAlso config can have numerical keys as properties (example `PDO::MYSQL_ATTR_INIT_COMMAND => 'SET NAMES utf8'`), why do u exclude numerical type?\n",
    "head_branch": "config_merge",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133e818912b45d36a3a3e",
    "number": 2973,
    "body": "Replaced a number of user_call_func() calls for closures and replaced them with {ClosureName}(). This resolved a number of unit-tests that were giving segmentation faults.\n\nSee #2914.\n\nNot all of the tests work now, the MicroMvcTest::testMicroNotFound_T169 still seg faults on the NotFoundHandler closure, no matter what I do with it. The only way to have the test pass is to replace the closure with a boolean and not have it execute the closure.\n",
    "head_branch": "upstream-2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133ea18912b45d36a3a3f",
    "number": 2972,
    "body": "add tests\nfix typo in nativearray translate adaptor\n",
    "head_branch": "translator_csv_adapter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge ed99077e627184e8f58bf440f1753fce8e4dead6 into df29533f606784fccb6da1d5d91988189fc9c277"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662133eb18912b45d36a3a40",
    "number": 2970,
    "body": "Per issue #2906 - tiny tiny thing.\n",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133ec18912b45d36a3a41",
    "number": 2969,
    "body": "",
    "head_branch": "model_2.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133ed18912b45d36a3a42",
    "number": 2968,
    "body": "Per issue #2901, added a strict option to the InclusionIn validator(s)\n",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 7bbdc05a0ea45863a954cd53d03f03269b683c8a into 7c335d3d30056bf0bbdd3d5f2571e491e467779f"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662133ee18912b45d36a3a43",
    "number": 2966,
    "body": "See #2937\n",
    "head_branch": "postgresql_schema",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133ef18912b45d36a3a44",
    "number": 2964,
    "body": "fix for for https://github.com/phalcon/cphalcon/issues/2963\nAdding support for Config->count() since  it is supported in phalcon 1.3 , \n",
    "head_branch": "2963_count_missing",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge f62c5ce599dc0af1bc6de10d9e0484729e8bfc04 into ec2c347141e377311e97c671ddacb54b28d09a4a"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662133f018912b45d36a3a45",
    "number": 2960,
    "body": "",
    "head_branch": "meta_annotations2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 84f394037ec14c69841bb118e3846ffad768898b into b334ef821759adf63e17c6867342c8676193018e"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662133f118912b45d36a3a46",
    "number": 2959,
    "body": "See #2954 Updated `Phalcon\\Mvc\\Model\\Metadata\\Strategy\\Annotations::getColumnMaps`\n",
    "head_branch": "294",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133f218912b45d36a3a47",
    "number": 2958,
    "body": "",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 4ff9888205fc33a6f84a29fbdf193b6521e4b01d into c7cad94021d399b5fce8cee03982e69c0f34eb4d"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662133f318912b45d36a3a48",
    "number": 2949,
    "body": "See #2949 \n",
    "head_branch": "postgresql_schema",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133f418912b45d36a3a49",
    "number": 2946,
    "body": "``` shell\nphp -S localhost:8080 -t .\nPHP 5.4.32 Development Server started at Tue Oct 28 15:50:43 2014\nListening on http://localhost:8080\nDocument root is /www/public/test/manicure_test_1/public\nPress Ctrl-C to quit.\n[Tue Oct 28 15:51:15 2014]  Script:  '/www/public/api.php'\n/cphalcon/ext/http/request.c(1739) :  Freeing 0x032C0B30 (5 bytes), script=/www/public/api.php\nLast leak repeated 6 times\n[Tue Oct 28 15:51:15 2014]  Script:  '/www/public/api.php'\n/cphalcon/ext/http/request.c(1738) :  Freeing 0x032C3FA8 (32 bytes), script=/www/public/api.php\nLast leak repeated 6 times\n```\n",
    "head_branch": "http_request2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133f718912b45d36a3a4a",
    "number": 2945,
    "body": "``` php\n$file = 'Phalcon.png';\n$validator = new \\Phalcon\\Validation\\Validator\\File();\n$mimes = array('image/png', 'image/jpeg');\n$minwidth = 100;\n$maxwidth = 1024;\n$minheight = 100;\n$maxheight = 1024;\nif (!$validator->valid($file, $minsize, $maxsize, $mimes, $minwidth, $maxwidth, $minheight, $maxheight)) {\n        var_dump($validator->getType());exit;\n}\n```\n",
    "head_branch": "image_valid",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133f818912b45d36a3a4b",
    "number": 2944,
    "body": "Fix missing #2943\n",
    "head_branch": "dev/yaml",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 212d477cb6be199a48a0f7d6cedee647347bac6d into c2d86a793d81860b76949badd0252ac3772c863a"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662133fa18912b45d36a3a4c",
    "number": 2943,
    "body": "Adding config file use Yaml\n",
    "head_branch": "yaml",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133fb18912b45d36a3a4d",
    "number": 2929,
    "body": "",
    "head_branch": "1.3.4",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge 6809e1b5f7dc24139f4c6cc612c66f8335fd9d7b into 9ce2bb076d6134794b3224e214a578d3a7ee0bf4"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662133fc18912b45d36a3a4e",
    "number": 2928,
    "body": "",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 0a7cc78663d0f48eb77dae39ef0f792d5121fdcf into b6a1d4caa246b5e93350164f65bd42d53d94a73f"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662133fd18912b45d36a3a4f",
    "number": 2923,
    "body": "via github web\n\nbecause\n\n```\nFatal error: Call to undefined method Phalcon\\Logger\\Adapter\\File::critical()\n```\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge d953544dff19a7dd02055f01f5a0ce1b19be5b34 into 81b848558e9f4670c3e0cd956666476091deed26"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662133fe18912b45d36a3a50",
    "number": 2919,
    "body": "This PR adds definition for a BOOLEAN type column which is compatible with branch 1.3.x\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662133ff18912b45d36a3a51",
    "number": 2918,
    "body": "",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 4284c20f4dd8d68a19129f80bbd426077a1f6407 into 9f37d8d94ee51ae37c1d15a8a7766c4046a44e02"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621340018912b45d36a3a52",
    "number": 2917,
    "body": "# MVC: Entity Management\n\nMVC: Entity Management - this is a common functionality for ORM (Models) and ODM (Mongo Collections).\nUsing this feature you can implement your own ODM/ORM (eg. ODM for CouchDB).\n\n!!! IMPORTANT !!! This feature has full backward compatibility!\n\nThis is very handy if you want to write a module that can work with different databases.\nEg.\n\n``` php\ninterface UserInterface extends \\Phalcon\\Mvc\\EntityInterface\n{\n    // some additional code here\n}\n```\n\nImplements as collection:\n\n``` php\nclass UserCollection extends \\Phalcon\\Mvc\\Collection implements UserInterface\n{\n    // some additional code here\n}\n```\n\nImplements as model:\n\n``` php\nclass UserModel extends \\Phalcon\\Mvc\\Model implements UserInterface\n{\n    // some additional code here\n}\n```\n\nUsing #1:\n\n``` php\n\n$user = DI::getDefault()->get('newuserinstance');\n// i don't know the $user is model or collection or something else.\nif ($user instanceof \\Phalcon\\Mvc\\EntityInterface) {\n  // i can do it :)\n  $user->writeAttribute('name', 10);\n  $name = $user->readAttribute('name');\n  $user->create();\n  $user->update();\n  $user->save();\n  $user->delete();  \n}\n\nif ($user instanceof \\Phalcon\\Mvc\\StaticFinderInterface) {\n  $users = $user::find(['limit' => 10]);\n}\n\n```\n\nUsing #2:\n\n``` php\nclass Example\n{\n    public function deleteUser(UserInterface $user)\n    {\n        // I do not care, it is a model or a collection, or something else. I need to remove! :)\n        $status = $user->delete(); \n\n        echo $status? 'ok' : 'not deleted';\n    }\n}\n\n$example = new Example();\n$dbUser = UserModel::findFirst();\n$mongoUser = UserCollection::findFirst();\n\n$example->deleteUser($dbUser); // ok\n$example->deleteUser($mongoUser); // ok\n```\n\nIn the EM have been created the following general components:\n\nPhalcon\\Mvc\\EntityInterface\nPhalcon\\Mvc\\Entity\nPhalcon\\Mvc\\Entity\\ManagerInterface\nPhalcon\\Mvc\\Entity\\Manager\nPhalcon\\Mvc\\Entity\\Exception\nPhalcon\\Mvc\\Entity\\MessageInterface\nPhalcon\\Mvc\\Entity\\Message\nPhalcon\\Mvc\\Entity\\BehaviorInterface\nPhalcon\\Mvc\\Entity\\Behavior\nPhalcon\\Mvc\\Entity\\ResultsetInterface\nPhalcon\\Mvc\\Entity\\StaticFinderInterface\nPhalcon\\Mvc\\Entity\\ValidatorInterface\nPhalcon\\Mvc\\Entity\\Validator\nPhalcon\\Mvc\\Entity\\Validator\\Email\nPhalcon\\Mvc\\Entity\\Validator\\Exclusionin\nPhalcon\\Mvc\\Entity\\Validator\\Inclusionin\nPhalcon\\Mvc\\Entity\\Validator\\Numericality\nPhalcon\\Mvc\\Entity\\Validator\\PresenceOf\nPhalcon\\Mvc\\Entity\\Validator\\Regex\nPhalcon\\Mvc\\Entity\\Validator\\StringLength\nPhalcon\\Mvc\\Entity\\Validator\\Url\nPhalcon\\Mvc\\Entity\\Behavior\\SoftDelete\nPhalcon\\Mvc\\Entity\\Behavior\\Timestampable\n\nWas implemented new inheritance hierarchy in the classes and interfaces:\n- Phalcon\\Mvc\\CollectionInterface extends from Phalcon\\Mvc\\EntityInterface\n- Phalcon\\Mvc\\Collection extends from Phalcon\\Mvc\\Entity and implements Phalcon\\Mvc\\CollectionInterface\n- Phalcon\\Mvc\\Collection\\Exception extends from Phalcon\\Mvc\\Entity\\Exception\n- Phalcon\\Mvc\\Collection\\ManagerInterface extends from Phalcon\\Mvc\\Entity\\ManagerInterface\n- Phalcon\\Mvc\\Collection\\Manager extends from Phalcon\\Mvc\\Entity\\Manager and implements Phalcon\\Mvc\\Collection\\ManagerInterface\n- Phalcon\\Mvc\\ModelInterface extends from Phalcon\\Mvc\\EntityInterface\n- Phalcon\\Mvc\\Model extends from Phalcon\\Mvc\\Entity and implements Phalcon\\Mvc\\ModelInterface\n- Phalcon\\Mvc\\Model\\Exception extends from Phalcon\\Mvc\\Entity\\Exception\n- Phalcon\\Mvc\\Model\\ManagerInterface extends from Phalcon\\Mvc\\Entity\\ManagerInterface\n- Phalcon\\Mvc\\Model\\Manager extends from Phalcon\\Mvc\\Entity\\Manager and implements Phalcon\\Mvc\\Model\\ManagerInterface\n- Phalcon\\Mvc\\Model\\ResultsetInterface extends from Phalcon\\Mvc\\Entity\\ResultsetInterface\n\nFor backward compatibility were left dummy classes and interfaces:\n- Phalcon\\Mvc\\Model\\MessageInterface\n- Phalcon\\Mvc\\Model\\Message\n- Phalcon\\Mvc\\Model\\BehaviorInterface\n- Phalcon\\Mvc\\Model\\Behavior\n- Phalcon\\Mvc\\Model\\ValidatorInterface\n- Phalcon\\Mvc\\Model\\Validator\n- Phalcon\\Mvc\\Model\\Validator\\Email\n- Phalcon\\Mvc\\Model\\Validator\\Exclusionin\n- Phalcon\\Mvc\\Model\\Validator\\Inclusionin\n- Phalcon\\Mvc\\Model\\Validator\\Numericality\n- Phalcon\\Mvc\\Model\\Validator\\PresenceOf\n- Phalcon\\Mvc\\Model\\Validator\\Regex\n- Phalcon\\Mvc\\Model\\Validator\\StringLength\n- Phalcon\\Mvc\\Model\\Validator\\Url\n- Phalcon\\Mvc\\Model\\Behavior\\SoftDelete\n- Phalcon\\Mvc\\Model\\Behavior\\Timestampable\n\nGeneral of them have hierarchy:\n- Phalcon\\Mvc\\Model\\MessageInterface extends from Phalcon\\Mvc\\Entity\\MessageInterface\n- Phalcon\\Mvc\\Model\\Message extends from Phalcon\\Mvc\\Entity\\Message and implements Phalcon\\Mvc\\Model\\MessageInterface\n- Phalcon\\Mvc\\Model\\BehaviorInterface extends from Phalcon\\Mvc\\Entity\\BehaviorInterface\n- Phalcon\\Mvc\\Model\\Behavior extends from Phalcon\\Mvc\\Entity\\Behavior and implements Phalcon\\Mvc\\Model\\BehaviorInterface\n- Phalcon\\Mvc\\Model\\ValidatorInterface extends from Phalcon\\Mvc\\Entity\\ValidatorInterface\n- Phalcon\\Mvc\\Model\\Validator extends from Phalcon\\Mvc\\Entity\\Validator and implements Phalcon\\Mvc\\Model\\ValidatorInterface\n\nTo the entity were moved the next general methods:\n- fireEvent();\n- fireEventCancel();\n- appendMessage();\n- validationHasFailed();\n- getMessages();\n- assign();\n- setDirtyState();\n- getDirtyState();\n- readAttribute();\n- writeAttribute();\n- save();\n- create();\n- update();\n- delete();\n- setSnapshotData();\n- skipOperation();\n- getOperationMade();\n\nTo the entity manager were moved the next general methods:\n- initialize();\n- isInitialized();\n- getLastInitialized();\n- addBehavior();\n- notifyEvent();\n- missingMethod();\n- load();\n- keepSnapshots();\n- isKeepingSnapshots();\n- useDynamicUpdate();\n- isUsingDynamicUpdate();\n\nAlso in the Phalcon\\Mvc\\Entity and Phalcon\\Mvc\\Entity\\Manager have been moved/implemented common functional for Models/Collections.\n",
    "head_branch": "entity",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621340118912b45d36a3a53",
    "number": 2916,
    "body": "",
    "head_branch": "patch-5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 559b00c3976218099d128a45bd1cae3bafa4ebc8 into 1ef29e4be12276adc1c2d2073bbe67ec52eda54d"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621340218912b45d36a3a54",
    "number": 2915,
    "body": "",
    "head_branch": "1.3.4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 5f610e5d469a72b45144e4b816bd370e6d56f162 into e738b7ad7aa2e1a5ce2703160b5fd9068ab77041"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621340318912b45d36a3a55",
    "number": 2903,
    "body": "Adding code styles standing\n",
    "head_branch": "editorconfig",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621340418912b45d36a3a56",
    "number": 2902,
    "body": "Corrected a spelling error\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621340618912b45d36a3a57",
    "number": 2899,
    "body": "",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 562a2e601b3903420df2c44db50fac9e204c328a into 9abf2cbf00d3a5d1d01dc5b82aacaf4222dd616e"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621340718912b45d36a3a58",
    "number": 2889,
    "body": "The volt function \"include\" always throws exception if template was not found. This pull requests changes this behaviour:\n\n1) new function \"require\" is added that works as \"include\" used to work before\n2) \"include\" now ignores missing templates\n\nTo achieve this, partial method had to be changed too: an 3rd optional parameter \"ignore_missing\" was added. This parameter had to be taken into account in simple view, but there it has no effect (partial always throws exceptions on missing files, because it is not supported there)\n\nUsage:\n{% include \"partials/nonexistent.volt\" %} (never fails)\n{% require \"partials/nonexistent.volt\" %} (fails if the partial nonexistent.volt doesn't exist)\n{{ partial(\"partials/nonexistent\", ['a': 'abc'], true) }} (never fails because of the third optional parameter)\n\nThis can be usefull when including e.g. page context help which is optional. There is no simple solution how to test the existence of a partial before using it. This function should solve it.\n\nThis pull request was created as a followup of PR #2367 (rebased on 1.3.4)\n",
    "head_branch": "include_require_1.3.4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621340818912b45d36a3a59",
    "number": 2888,
    "body": "cf #2790 for Phalcon 2.0\n",
    "head_branch": "1.3.4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621340a18912b45d36a3a5a",
    "number": 2885,
    "body": "",
    "head_branch": "utils",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621340c18912b45d36a3a5b",
    "number": 2884,
    "body": "https://github.com/phalcon/incubator/blob/master/Library/Phalcon/Utils/Slug.php\n",
    "head_branch": "utils",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621340d18912b45d36a3a5c",
    "number": 2881,
    "body": "",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621340e18912b45d36a3a5d",
    "number": 2880,
    "body": "",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621340f18912b45d36a3a5e",
    "number": 2878,
    "body": "Change all header name to lowercase to compatible with SPDY protocol\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621341118912b45d36a3a5f",
    "number": 2875,
    "body": "Fix #2815 It is now possible to change the controller or action name in event handler for event: \"dispatch:beforeDispatch\"\n\nFix #2855 Correct value of variable _activeRenderPath in event handler 'view:afterRenderView'\n\nFix #2874 fixed.\n",
    "head_branch": "1.3.4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621341218912b45d36a3a60",
    "number": 2868,
    "body": "Fix #2815 \nFix #2855 \n",
    "head_branch": "1.3.4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621341318912b45d36a3a61",
    "number": 2866,
    "body": "``` error\ncphalcon/ext/phalcon/annotations/reader.zep.c:16:43: fatal error: ext/reflection/php_reflection.h: No such file or directory\n```\n",
    "head_branch": "model_toarray2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge b149f29de8f325cf63dd50c2fd6d43a3a69fa581 into da4bfc2392f1c99477161037244655fecd3c0dba"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621341418912b45d36a3a62",
    "number": 2864,
    "body": "Support use rename fields.\n",
    "head_branch": "model_toarray",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621341518912b45d36a3a63",
    "number": 2862,
    "body": "Make it for 1.3.4\n\nPlease go to https://github.com/phalcon/cphalcon/pull/2514 to check details.\n",
    "head_branch": "1.3.4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621341618912b45d36a3a64",
    "number": 2861,
    "body": "",
    "head_branch": "afterfetch2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621341718912b45d36a3a65",
    "number": 2860,
    "body": "",
    "head_branch": "1.3.4-issue2420",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621341818912b45d36a3a66",
    "number": 2859,
    "body": "Fix bug about simple resultsets use `toArray`, don't call models's method `afterFetch`\n",
    "head_branch": "afterfetch",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621341918912b45d36a3a67",
    "number": 2858,
    "body": "",
    "head_branch": "patch-5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 0953e472f997a2a2ff4ed2852b2d0b525b4c4502 into f27000c5c1f266425ee93c80b4a972815adceece"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621341a18912b45d36a3a68",
    "number": 2857,
    "body": "refs https://github.com/phalcon/cphalcon/issues/2836\nWork on this w8\n",
    "head_branch": "2836_nfr_phalcon_config_merge",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621341b18912b45d36a3a69",
    "number": 2854,
    "body": "- page next always one less than it should be\n- cleaned up logic and variables\n\nTested under invo.\n",
    "head_branch": "fix-paginator-model-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621341c18912b45d36a3a6a",
    "number": 2853,
    "body": "to improve code completion on IDEs.\nsorry for https://github.com/phalcon/cphalcon/pull/2852\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621341d18912b45d36a3a6b",
    "number": 2852,
    "body": "to improve code completion on IDEs :sushi:\n",
    "head_branch": "develop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621341e18912b45d36a3a6c",
    "number": 2848,
    "body": "createTable support, column type and index fixes, pseudo composite primary key support, improved unit tests.\n\nSQLite PRAGMA queries do not provide all the information necessary for a robust implementations of adapter->describeIndexes or other such functions.\n\nI think a simple schema parser (SELECT sql FROM sqlite_master WHERE tbl_name = ?) is necessary.  I'm happy to write it if the team is interested.\n",
    "head_branch": "sqlite2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621342018912b45d36a3a6d",
    "number": 2847,
    "body": "getExtension not work, this fix issue\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621342118912b45d36a3a6e",
    "number": 2846,
    "body": "It is now possible to change the controller or action name in event handler for event: \"dispatch:beforeDispatch\"\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621342218912b45d36a3a6f",
    "number": 2843,
    "body": "getExtension  not work, this fix issue\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621342318912b45d36a3a70",
    "number": 2842,
    "body": "",
    "head_branch": "paginator",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 49169de14684720f5116802c087d28c81ad8674b into fc19823c9532d0dce8f9eb742c07b39a8407ead4"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621342418912b45d36a3a71",
    "number": 2841,
    "body": "See #2840 \n",
    "head_branch": "issue-2840",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 6cf9875381160786e8da6427358fb3d8e59e9bbf into e0e03bd2213cc84070664709d365b92d9d1f1e20"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621342518912b45d36a3a72",
    "number": 2839,
    "body": "",
    "head_branch": "CHANGELOG",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621342618912b45d36a3a73",
    "number": 2838,
    "body": "",
    "head_branch": "1.3.3",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621342718912b45d36a3a74",
    "number": 2835,
    "body": "See #2829\n",
    "head_branch": "issue-2829",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 257d558b4a549c6327623e468c3a0b087c88caec into 1f9518eb0c715649a0085cbd2ee702e1ec0f14d1"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621342818912b45d36a3a75",
    "number": 2834,
    "body": "",
    "head_branch": "columnmap",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621342a18912b45d36a3a76",
    "number": 2832,
    "body": "Copied from the Mysql dialect and massaged a bit.\n\nSince sqlite doesn't support a normal primary key when auto increment is used, I had to wrap the whole thing in a transaction (savepoint).\n\nThere's also a little fix to the listTables function so it behaves like .tables in the command line tool.  Otherwise migrations keep dumping out internal (sqlite_*) tables.\n\n[I used this script for testing with the invo project.](https://gist.github.com/h0tw1r3/dff4243ab9dec2354ef0)\n\nTodo: see line 552 of diff below.  I'm not sure how to check the value against the columns list, or even if I'm going about it properly.\n",
    "head_branch": "sqlite",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621342b18912b45d36a3a77",
    "number": 2831,
    "body": "I am learning GIT, this is a test change\n",
    "head_branch": "MdBranhc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621342c18912b45d36a3a78",
    "number": 2830,
    "body": "",
    "head_branch": "mdBranch",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621342d18912b45d36a3a79",
    "number": 2828,
    "body": "See #2819\n",
    "head_branch": "issue-2819",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge e68de3918cf6c31200d759ef21ca5506a831d841 into b723b73c994b8f8cd7df3b1ff835c2a0de9d6e3a"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621342e18912b45d36a3a7a",
    "number": 2827,
    "body": "```\n> ./install\ngcc\n> env CC=gcc-4.9 ./install\ngcc-4.9\n```\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621342f18912b45d36a3a7b",
    "number": 2820,
    "body": "Model Getters not working as documented, [Initializing/Preparing fetched records](http://docs.phalconphp.com/pl/latest/reference/models.html#initializing-preparing-fetched-records)\n",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 2cb8820537c536060eb2fd4837069af3c736409e into 155db69e99ffe1bb08f672692fb73022ad07dc1d"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621343018912b45d36a3a7c",
    "number": 2818,
    "body": "",
    "head_branch": "simpleview_render",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 9eaa31c2ee6d8447280bae9f4fe9a56cc2bafcb3 into 316f5dec1169cc41858ad39df3219e90c23326a5"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621343118912b45d36a3a7d",
    "number": 2817,
    "body": "Get the connection through the model.\n",
    "head_branch": "2816",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 0eba00f2765f9f297cc2bd5bbdc2c186c0c63dea into 0ce84acfa3d745b14b67050a9cf2283a83d5869e"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621343218912b45d36a3a7e",
    "number": 2807,
    "body": "",
    "head_branch": "security",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621343318912b45d36a3a7f",
    "number": 2804,
    "body": "- updated to Phalcon\\Cli\\Router (Phalcon\\Mvc\\ Router like.)\n- parse the argument at Phalcon\\Cli\\Console::setArgument.\n- get/set the option of the argument (-opt, --opt, --opt=OPT) at Phalcon\\Cli\\Dispatcher::setOptions, getOptions\n\nsample code: https://gist.github.com/kjdev/956c7837d7fd50c45f12\n",
    "head_branch": "2.0.0-cli",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621343418912b45d36a3a80",
    "number": 2802,
    "body": "Cause the Adapter log function implement PSR-3 in `adapter.zep` line 259,\n\n```\npublic function log($level, $message = null, array $content = array())\n```\n\nAnd there is the conditions in line 272,\n\n```\nif message === null {\n```\n\nBUT the `multiple.zep`, line 78 use the old way,\n\n```\nlogger->log(message, type);\n```\n\nWhen I use the multiple to log something,\n\n```\n$logger = new \\Phalcon\\Logger\\Multiple();\n$logger->push(new \\Phalcon\\Logger\\Adapter\\File('/tmp/file.log');\n$logger->log(\"This is a message\");\n$logger->log(\"This is a message\", \\Phalcon\\Logger::ERROR);\n```\n\nAnd the `file.log` is wrong,\n\n```\n[Wed, 10 Sep 14 15:13:54 +0800][EMERGENCY] 7\n[Wed, 10 Sep 14 15:13:54 +0800][EMERGENCY] 3\n```\n\nit should be,\n\n```\nlogger->log(type, message);\n```\n\nAnd the `file.log` is good like this,\n\n```\n[Wed, 10 Sep 14 16:13:07 +0800][DEBUG] This is a message\n[Wed, 10 Sep 14 16:13:07 +0800][ERROR] This is a message\n```\n\nAlso I update the unit-tests to test the logger \"type\" and \"message\" must be match.\n",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 892c70002c233b6a5d003c8c58ba0cfa6166fe0a into 3955d66a10b741c7d62407abcc0610571cee4d7c"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621343518912b45d36a3a81",
    "number": 2799,
    "body": "Fixed Issue #2798 \n",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 1d0cc90d98ec29100a15caf0bd1cfe81fb54e26f into 12656455ef34df98e31aa786f9835c1431f72431"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621343618912b45d36a3a82",
    "number": 2793,
    "body": "First I apologize to have broken gen-build... still don't really understand why this step is required... condtional buildtime option should be enough...\n\nas 379c258 and d9ded2a are mostly enough to allow \"100% free\" build, this minor change allow\n\n1/ to avoid both headers to be included in big phalcon.c\n\n2/ allow to gen-build + build when non-free file are drop, as this step is mandatory for downstream distribution where non-free sources cannot even be part of the source.\n\nSee an exemple how this can be done for phalcon\nhttps://github.com/remicollet/remirepo/blob/master/php/php-phalcon/strip.sh\n\nP.S. perhaps you can even drop the js(css)minifier.h, and keep only one, without the \"Douglas Crockford Fucking License\"... (as this function prototype is obviously from Phalcon project not, from D.C.) but I don't want to touch any non-free source code.\n",
    "head_branch": "issue-non-free3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621343718912b45d36a3a83",
    "number": 2792,
    "body": "",
    "head_branch": "issue-non-free2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621343818912b45d36a3a84",
    "number": 2791,
    "body": "",
    "head_branch": "fix_2774",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge d9ded2ae91afbf9a4b1f515c18c4a99760b2df5c into 14b3c7678783e59b56db28ba0c914b9432bfe5ac"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621343918912b45d36a3a85",
    "number": 2790,
    "body": "ORM enhancements : \n- Replace new builder by models manager createBuilder call on model queries\n- Late state binding on hydration (cloneResultMap call) to be able to override class creation (refs #2786) - also done here for 1.3.3 : link to #2789 \n\nWith this we can override the instantiation of an object to mimic Doctrine inheritance (http://the-phpjs-ldc.rgou.net/symfony1/more-with-symfony/en/09-Doctrine-Form-Inheritance.markdown)\n\n``` php\n/**\n     * Assigns values to a model inherited class from an array returning a new model.\n     *\n     * @param \\Phalcon\\Mvc\\Model $base          object to hydrate\n     * @param array              $data          data to use for hydration\n     * @param array              $columnMap     column mapping\n     * @param int                $dirtyState    object state\n     * @param boolean            $keepSnapshots keep snapshot\n     *\n     * @return \\Phalcon\\Mvc\\Model\n     */\n    public static function cloneResultMap(\n        $base,\n        $data,\n        $columnMap,\n        $dirtyState = null,\n        $keepSnapshots = null\n    ) {\n        if (isset($data['columnUsedForTableInheritance'])) {\n            $class = '\\Ournamespace\\Models\\\\' . $data['columnUsedForTableInheritance'];\n            if (class_exists($class)) {\n                $base = new $class();\n            }\n        }\n        return parent::cloneResultMap(\n            $base,\n            $data,\n            $columnMap,\n            $dirtyState,\n            $keepSnapshots\n        );\n    }\n```\n",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621343a18912b45d36a3a86",
    "number": 2789,
    "body": "Late state binding on hydration (cloneResultMap call) to be able to override Model creation depending on data (refs #2786)\n",
    "head_branch": "1.3.3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621343b18912b45d36a3a87",
    "number": 2787,
    "body": "",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621343c18912b45d36a3a88",
    "number": 2784,
    "body": "",
    "head_branch": "docs_and_tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621343d18912b45d36a3a89",
    "number": 2783,
    "body": "Adding 3 methods:\nfetchColumn - returns the first field if first row in a SQL query result\ninsertAsDict, updateAsDict - more convenient versions of insert/update (doctrine dbal like)\n",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 5f6c9e2180f15d70e4b6c96181d609304d2de713 into e5b407c2d40def1a1d148878cdf78188bf6c820c"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621343f18912b45d36a3a8a",
    "number": 2775,
    "body": "Testing HAVE_JSON is not reliable.\n\nPHP can be build --without-json, and json extension available from another build (ex: pecl/jsonc used in free linux distribution, debian, fedora, mageia, ...)\n",
    "head_branch": "issue-json",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621344018912b45d36a3a8b",
    "number": 2774,
    "body": "Douglas Crockford code is non-free (per FSF definition) as liberty #0 is not granted (restriction).\n\nThis is a blocker to include this framework in any downstream distributions which strictly respect the free License (Fedora, Debian, ...). See: https://fedoraproject.org/wiki/Licensing:Main?rd=Licensing#SoftwareLicenses  (search for JSON.org)\n\nSo this patch, which is noop with standard build, allow to build using --without-non-free option and disable those filters.\n",
    "head_branch": "issue-non-free",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 379c258e03959a8a1482d8cb498b67b8de7f0bc0 into a25743cc0ea1b3048505df6d56cf621e98dccbd5"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621344118912b45d36a3a8c",
    "number": 2772,
    "body": "Signed-off-by: Remi Collet fedora@famillecollet.com\n\nSee https://github.com/phalcon/cphalcon/pull/2770\n",
    "head_branch": "issue-56",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge f3e58e7ff4746a0607aae182c46578ac349aa73f into 03e388897885d7f6e7e732994641f1cd91fd31df"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621344218912b45d36a3a8d",
    "number": 2770,
    "body": "```\n=====================================================================\nPHP         : /usr/bin/php \nPHP_SAPI    : cli\nPHP_VERSION : 5.6.0\nZEND_VERSION: 2.6.0\nPHP_OS      : Linux - Linux schrodingerscat.famillecollet.com 3.14.17-100.fc19.x86_64 #1 SMP Thu Aug 14 17:17:26 UTC 2014 x86_64\n....\n====================================================================\nTEST RESULT SUMMARY\n---------------------------------------------------------------------\nExts skipped    :    0\nExts tested     :  183\n---------------------------------------------------------------------\nNumber of tests :  116               114\nTests skipped   :    2 (  1.7%) --------\nTests warned    :    0 (  0.0%) (  0.0%)\nTests failed    :    0 (  0.0%) (  0.0%)\nExpected fail   :    0 (  0.0%) (  0.0%)\nTests passed    :  114 ( 98.3%) (100.0%)\n---------------------------------------------------------------------\nTime taken      :   37 seconds\n=====================================================================\n```\n",
    "head_branch": "issue-php56",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621344318912b45d36a3a8e",
    "number": 2768,
    "body": "",
    "head_branch": "interface",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 999c0c28be2719a28e452d07055e8589141b3408 into 7332f85f86ea3d8db6d77543d9c04166108fc138"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621344418912b45d36a3a8f",
    "number": 2766,
    "body": "",
    "head_branch": "assets",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621344518912b45d36a3a90",
    "number": 2765,
    "body": "Fix error\n`PHP Fatal error:  xxxxx must be compatible with xxxxx(xxxxx) in Unknown on line 0`\n",
    "head_branch": "interface",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621344618912b45d36a3a91",
    "number": 2751,
    "body": "Hopefully this PR fixes #1106 and aid #906.\n#1106 turned into a blocking issue for our project that's is already in production, that's why I'm trying to patch this one ASAP.\n\nThis is my first contribution attempt, so I'll probably need some help from you guys...\nTests seems green from here but still some details that I'm not 100% sure if they're OK, so I left some comments in the diff about this.\n\nAlso, I suppose that isn't possible to patch two or more branches in the same PR, right? I'll create a PR for `1.3.3` soon.\n",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621344718912b45d36a3a92",
    "number": 2748,
    "body": "type processing is the same as TYPE_INTEGER (typeReference()).\ntype name is a `BIGINT` instead of `INT`.\n\n``` php\nnew \\Phalcon\\Db\\Column(\n    'name', array(\n        'type' => 'BIGINT',\n        'typeReference' => \\Phalcon\\Db\\Column::TYPE_INTEGER,\n        'size' => 20,\n        'unsigned' => true,\n        'notNull' => false\n    )\n```\n\ntype name is `ENUM`.\nspecify the set value in typeValues().\n\n``` php\nnew \\Phalcon\\Db\\Column(\n    'name', array(\n        'type' => 'ENUM',\n        'typeValues' => array('A', 'B', 'C'),\n        'notNull' => true,\n        'default' => 'A'\n    )\n```\n",
    "head_branch": "2.0.0-db-column",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621344818912b45d36a3a93",
    "number": 2747,
    "body": "",
    "head_branch": "validaion_exception",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621344918912b45d36a3a94",
    "number": 2746,
    "body": "",
    "head_branch": "filter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621344a18912b45d36a3a95",
    "number": 2745,
    "body": "",
    "head_branch": "query_excetion",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621344b18912b45d36a3a96",
    "number": 2743,
    "body": "I don't know if my change is correct or not, but currently, you clean the \"build\" files, then test if phalcon is not loaded you exit without create the build files.\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 8f9d2a43a16688f179ba7f0ca64f86138222bcd1 into b6141d02cc3282cfd1cbece7f300267f325537d2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621344c18912b45d36a3a97",
    "number": 2740,
    "body": "This PR fixes the following MSVC compilation issue:\n\n```\next\\phalcon\\phalcon.c(108557) : error C2275: 'uint32_t' : illegal use of this type as an expression\n        .\\win32/php_stdint.h(85) : see declaration of 'uint32_t'\next\\phalcon\\phalcon.c(108576) : error C2275: 'uint32_t' : illegal use of this type as an expression\n        .\\win32/php_stdint.h(85) : see declaration of 'uint32_t'\n```\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 3ba1eafaae5599e3d002f9e9baa093403aa36bad into 778bb01835b11d42cc64067fe26823c266fb823c"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621345018912b45d36a3a98",
    "number": 2734,
    "body": "Fixes #2658 - Oracle Model::find() not working. The bug was caused by missing column names in the generated SELECT statement.\n",
    "head_branch": "1.3.3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621345118912b45d36a3a99",
    "number": 2733,
    "body": "",
    "head_branch": "paginator",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621345418912b45d36a3a9a",
    "number": 2729,
    "body": "Fixes Oracle Model ::find() not working #2658\n\nThe bug was manifesting itself as \"PDOException: SQLSTATE[HY000]: General error: 936 OCIStmtExecute: ORA-00936: missing expression\" because the query generated by Model::find() for Oracle did not contain column names.\n",
    "head_branch": "1.3.3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621345518912b45d36a3a9b",
    "number": 2728,
    "body": "Phalcon generated invalid SQL query for Oracle (missing column names) when using Model::find() method.\n",
    "head_branch": "1.3.3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621345618912b45d36a3a9c",
    "number": 2727,
    "body": "Fix #2401 for 2.0.0\n",
    "head_branch": "2.0.0_aggregators_cache",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge dbd05eb055f9c8f5c608519732381afe084b1139 into 36eb1a03e69cb1d87c52f7a0b0048e970b6ff7b0"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621345918912b45d36a3a9d",
    "number": 2724,
    "body": "Fixes incorrectly generated SELECT statements in Oracle dialect when using Model::find().\nhttps://github.com/phalcon/cphalcon/issues/2658\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621345a18912b45d36a3a9e",
    "number": 2720,
    "body": "",
    "head_branch": "mvc_dispatcher",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621345b18912b45d36a3a9f",
    "number": 2718,
    "body": "",
    "head_branch": "2.0.0-db-default",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621345c18912b45d36a3aa0",
    "number": 2716,
    "body": "",
    "head_branch": "model_resultset_simple",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621345e18912b45d36a3aa1",
    "number": 2715,
    "body": "",
    "head_branch": "model_forupdate",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 8da5b79db1c35359b56bd8dd5f286cb5044f280a into e8fa67698feaf3cd0ce815e15064aff799d2f3b3"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621345f18912b45d36a3aa2",
    "number": 2710,
    "body": "I don't know if my change is correct or not, but currently, you clean the \"build\" files, then test if phalcon is not loaded you exit without create the build files.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621346018912b45d36a3aa3",
    "number": 2704,
    "body": "2 first commits:\nI have implemented all functions of \\Phalcon\\Paginator\\Adapter\\queryBuilder (and added comments - same as branch 1.x).\n\nNow you can activate paginator test in phpunit.xml.\n\nthird commit:\nPlease do a big check for the third commit, I have rewrite the function \\Phalcon\\Http\\request->getUploadedFiles(boolean)\n\nNow all phpunit tests work (requestTest.php)\n\nFourth commit: Fix memcache set function call parameters\n    before: memcache->set(lastKey, cachedContent, tt1);\n    after: memcache->set(lastKey, cachedContent, 0, tt1);\nphp manual: http://php.net/manual/en/memcache.set.php \n",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621346118912b45d36a3aa4",
    "number": 2701,
    "body": "",
    "head_branch": "route",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621346218912b45d36a3aa5",
    "number": 2697,
    "body": "If the value is not null, When set `_readed` to true.\n",
    "head_branch": "cookies",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621346318912b45d36a3aa6",
    "number": 2693,
    "body": "",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621346418912b45d36a3aa7",
    "number": 2691,
    "body": "Code for `replace` could be:\n\n``` zephir\nif replace {\n    if typeof replace != \"array\" && typeof replace != \"string\"{\n        throw new Exception(\"Parameter replace must be an array or a string\");\n    }\n    let text = str_replace(replace, \" \", text);\n}\n```\n\nbut https://github.com/phalcon/zephir/issues/480 \n",
    "head_branch": "2.0.0_slug",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621346518912b45d36a3aa8",
    "number": 2690,
    "body": "Test failing on windows due to incorrect end of line assumption\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621346618912b45d36a3aa9",
    "number": 2689,
    "body": "I don't know why to check if the value is empty. If you can fetch the value, it's configured.\n",
    "head_branch": "2.0.0-issue2688",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621346718912b45d36a3aaa",
    "number": 2681,
    "body": "",
    "head_branch": "1.3.3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621346818912b45d36a3aab",
    "number": 2680,
    "body": "",
    "head_branch": "2.0.0_image",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621346918912b45d36a3aac",
    "number": 2676,
    "body": "",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621346a18912b45d36a3aad",
    "number": 2675,
    "body": "",
    "head_branch": "2.0.0_dump",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621346b18912b45d36a3aae",
    "number": 2673,
    "body": "",
    "head_branch": "2.0.0_assets_resource",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 1d5e1c0cd7d3a8590d7d474ca02930e908c27c82 into 825bef0c4742755228b33ebc578ff93af53ae963"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621346c18912b45d36a3aaf",
    "number": 2671,
    "body": "",
    "head_branch": "2.0.0-db-default",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621346d18912b45d36a3ab0",
    "number": 2663,
    "body": "",
    "head_branch": "query_getsingleresult",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621346f18912b45d36a3ab1",
    "number": 2662,
    "body": "Fixed declation error.\n\n```\nFatal error: Declaration of Phalcon\\Db\\Adapter\\Pdo::__construct() must be compatible with Phalcon\\Db\\AdapterInterface::__construct($descriptor) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Db\\Index::__construct() must be compatible with Phalcon\\Db\\IndexInterface::__construct($indexName, $columns, $type) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Db\\Index::__set_state() must be compatible with Phalcon\\Db\\IndexInterface::__set_state($data) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Db\\Reference::__construct() must be compatible with Phalcon\\Db\\ReferenceInterface::__construct($referenceName, $definition) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Db\\Reference::__set_state() must be compatible with Phalcon\\Db\\ReferenceInterface::__set_state($data) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Di\\Service::__set_state() must be compatible with Phalcon\\Di\\ServiceInterface::__set_state($attributes) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\Criteria::bind() must be compatible with Phalcon\\Mvc\\Model\\CriteriaInterface::bind($bindParams) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\Criteria::bindTypes() must be compatible with Phalcon\\Mvc\\Model\\CriteriaInterface::bindTypes($bindTypes) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\Criteria::inWhere() must be compatible with Phalcon\\Mvc\\Model\\CriteriaInterface::inWhere($expr, $values) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\Criteria::notInWhere() must be compatible with Phalcon\\Mvc\\Model\\CriteriaInterface::notInWhere($expr, $values) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Mvc\\Model\\Criteria::fromInput() must be compatible with Phalcon\\Mvc\\Model\\CriteriaInterface::fromInput($dependencyInjector, $modelName, $data) in Unknown on line 0\nFatal error: Declaration of Phalcon\\Paginator\\Adapter\\QueryBuilder::__construct() must be compatible with Phalcon\\Paginator\\AdapterInterface::__construct($config) in Unknown on line 0\n```\n",
    "head_branch": "2.0.0-declaration",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 1fd529ce8c024c55d0e490f935f1415a4fb80a06 into fcc4b47f4ce10851209a859128ca652bf618fa61"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621347018912b45d36a3ab2",
    "number": 2654,
    "body": "",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621347118912b45d36a3ab3",
    "number": 2653,
    "body": "",
    "head_branch": "2.0.0_db_tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621347218912b45d36a3ab4",
    "number": 2652,
    "body": "when you set a relationship items (hasMany), you add all available items\nin related field.\n\nAn error has been done, each time you add value (and not item) in\nrelated array.\n",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621347318912b45d36a3ab5",
    "number": 2649,
    "body": "",
    "head_branch": "response_setJsonContent",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621347418912b45d36a3ab6",
    "number": 2640,
    "body": "Fix https://github.com/phalcon/cphalcon/issues/2401\n",
    "head_branch": "aggregators_cache",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621347518912b45d36a3ab7",
    "number": 2639,
    "body": "",
    "head_branch": "logger_mltiple",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621347618912b45d36a3ab8",
    "number": 2635,
    "body": "语义上似乎有问题，修改下\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621347718912b45d36a3ab9",
    "number": 2622,
    "body": "See #2065\n",
    "head_branch": "paginator_querybuilder_1.3.3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 64b7fc29b5fdd8f13079eee4fee88b04a62b3382 into 16723eedf1d44288e9d12fe18405beeb9e63fa0a"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621347818912b45d36a3aba",
    "number": 2616,
    "body": "- Phalcon\\Db\\Adapter\\Pdo\\Postgresql\n  - Implemented.\n- Phalcon\\Db\\Adapter\\Pdo\\Sqlite\n  - Implemented.\n- Phalcon\\Db\\Adapter\n  - Fixed describeIndexes method.\n  - Fixed describeReferences method.\n- Phalcon\\Db\\Adapter\\Pdo\n  - Added convertBoundParams method.\n- Phalcon\\Db\\Adapter\\Pdo\\Mysql\n  - Fixed describeColumns method.\n- Phalcon\\Db\\Column\n  - Fixed __set_state method.\n- Phalcon\\Db\\Dialect\\Postgresql\n  - Fixed sql.\n- Phalcon\\Db\\Dialect\\sqlite\n  - Deleted unused variable.\n- Phalcon\\Db\\Index\n  - Fixed __constructor method.\n- Phalcon\\Db\\Reference\n  - Fixed __set_state method.\n- Unit tests that pass\n  - DbBindTest.php\n  - DbDialectTest.php\n  - DbTest.php\n  - DbDescribeTest.php\n",
    "head_branch": "2.0.0-db",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 0e2471fc926398e39c1f57c8cc9ca14d75faa1e6 into 5c77ae2fcc33d8e3bcbe5746d34c654d675a1475"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621347918912b45d36a3abb",
    "number": 2614,
    "body": "[Document](http://docs.phalconphp.com/en/latest/api/Phalcon_Validation.html#methods)  and [2.0's code](https://github.com/phalcon/cphalcon/blob/6915f4d55bebe02dcfd93cd10bc7d2ebdce86132/phalcon/validation.zep#L99) returns messages, that is `Phalcon\\Validation\\Message\\Group`'s object.\n\n![screenshot 2014-07-15 21 04 57](https://cloud.githubusercontent.com/assets/366888/3584403/6a9d701e-0c18-11e4-9276-12f4077d443f.png)\n\nBut 1.3.2 returns `false` (`beforeValidation()`'s return value) in following code.\n\nhttp://docs.phalconphp.com/en/latest/reference/validation.html#validation-events\n\n``` php\n<?php\n\nuse Phalcon\\Validation;\nuse Phalcon\\Validation\\Message;\n\nclass MyValidation extends Validation\n{\n    public function beforeValidation($data, $entity, $messages)\n    {\n        $messages->appendMessage(new Message('hoge', 'hoge', 'hoge'));\n        return false;\n    }\n...\n```\n\nin controller\n\n``` php\n<?php\n\nclass IndexAction extends ControllerBase\n{\n    public function validateAction()\n    {\n        $validation = new MyValidation();\n        $validation->add('hoge', new PresenceOf());\n        $messages = $validation->validate($post);\n        var_dump($messages);\n        $this->view->disable();\n        return false;\n    }\n...\n```\n\n```\n$ curl http://localhost/index/validate -X POST -d \"hoge=\"\nbool(false)\n```\n\nit should be following result?\n\n```\n$ curl http://localhost/index/validate -X POST -d \"hoge=\"\nobject(Phalcon\\Validation\\Message\\Group)#51 (2) {\n  [\"_position\":protected]=>\n  NULL\n  [\"_messages\":protected]=>\n  array(1) {\n    [0]=>\n    object(Phalcon\\Validation\\Message)#52 (4) {\n      [\"_type\":protected]=>\n      string(4) \"hoge\"\n      [\"_message\":protected]=>\n      string(4) \"hoge\"\n      [\"_field\":protected]=>\n      string(4) \"hoge\"\n      [\"_code\":protected]=>\n      int(0)\n    }\n  }\n}\n```\n",
    "head_branch": "1.3.3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621347a18912b45d36a3abc",
    "number": 2613,
    "body": "",
    "head_branch": "model_error_message",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621347b18912b45d36a3abd",
    "number": 2611,
    "body": "",
    "head_branch": "image",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge af2a72efd71989eddfb2abacf3b6912cce1e1a54 into 06d8bbcbc30a3afd56d3a91e44eaab0b683c7fb0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621347c18912b45d36a3abe",
    "number": 2609,
    "body": "",
    "head_branch": "2.0.0-db-default",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621347d18912b45d36a3abf",
    "number": 2608,
    "body": "",
    "head_branch": "libmemcached_updated",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621347f18912b45d36a3ac0",
    "number": 2607,
    "body": "",
    "head_branch": "2.0.0_fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621348018912b45d36a3ac1",
    "number": 2603,
    "body": "Remove include file, only call php function.\n",
    "head_branch": "gettext",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 777131de965f54b877be52d354d10451f0e7462f into 081468e734f080653eef19f5dd6fb9b5b821b785"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621348118912b45d36a3ac2",
    "number": 2602,
    "body": "Implemented SQLite class unit-tests/DbDialectTest.php test to pass through.\n",
    "head_branch": "2.0.0-db-sqlite",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 955ebc926884e5f9eb5b473d8be3be964597d5c8 into aa8c1d4b7150f68bcbf6266bed7385de65d2f087"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621348218912b45d36a3ac3",
    "number": 2601,
    "body": "Added referential actions (ON DELETE, ON UPDATE on MySQL). \n",
    "head_branch": "2.0.0-db-reference",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge bea9e91e6cae34ce4034be22049797ea33f4938f into ee264bf2052b42aff2c951e2c3c17e735b27f7b4"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621348318912b45d36a3ac4",
    "number": 2600,
    "body": "Implemented SQLite class unit-tests/DbDialectTest.php test to pass through.\n",
    "head_branch": "2.0.0-db-sqlite",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621348418912b45d36a3ac5",
    "number": 2598,
    "body": "FOREIGN KEY Constraints.\n\nAdded referential actions (ON DELETE, ON UPDATE on MySQL). \n",
    "head_branch": "1.3.3-db-reference",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621348518912b45d36a3ac6",
    "number": 2595,
    "body": "",
    "head_branch": "cache",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621348618912b45d36a3ac7",
    "number": 2589,
    "body": "``` php\n\\Phalcon\\Mvc\\Model::setup(array(\n    'astCache' => false\n));\n```\n",
    "head_branch": "ast_cache",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621348718912b45d36a3ac8",
    "number": 2584,
    "body": "Add method\n`Phalcon\\Cache\\Backend\\Memache::increment`\n`Phalcon\\Cache\\Backend\\Memache::decrement`\n`Phalcon\\Cache\\Backend\\Libmemached::increment`\n`Phalcon\\Cache\\Backend\\Libmemached::decrement`\n",
    "head_branch": "redis_2.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621348818912b45d36a3ac9",
    "number": 2582,
    "body": "",
    "head_branch": "group",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621348918912b45d36a3aca",
    "number": 2581,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 86bf487e354dffbd799ef9d07e73d8ca0039999b into 109e2bb92d6c0191616f105f78a636040afd7372"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621348a18912b45d36a3acb",
    "number": 2578,
    "body": "...yItemName is false to return an empty messageGroup instead of throwing an exception saying \"messages is not iterable\".\n\nIn phalcon 1.3 the case was cleanly handled.\n",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621348b18912b45d36a3acc",
    "number": 2571,
    "body": "",
    "head_branch": "redis",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621348c18912b45d36a3acd",
    "number": 2570,
    "body": "",
    "head_branch": "fix_me",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621348e18912b45d36a3ace",
    "number": 2566,
    "body": "",
    "head_branch": "1923",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621348f18912b45d36a3acf",
    "number": 2563,
    "body": "``` php\n<?php\n\nclass Robots extends \\Phalcon\\Mvc\\Model {\n}\n\nclass GooleRobot extends Robots {\n\n    public function getSource()\n    {\n        return 'robots';\n    }\n\n    public function beforeQuery($builder)\n    {\n        $builder->andWhere('type = :type:', array('type' => 'google'))\n    }\n}\n```\n",
    "head_branch": "model_beforequery",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621349018912b45d36a3ad0",
    "number": 2561,
    "body": "",
    "head_branch": "collection_delete",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621349118912b45d36a3ad1",
    "number": 2560,
    "body": "See #2557 \n",
    "head_branch": "2557",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge c47fcdcfc172367983618b98295d022368280300 into abb0ff6014414dca5eb850f105fe3c166f7eaa48"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621349218912b45d36a3ad2",
    "number": 2552,
    "body": "",
    "head_branch": "2536",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621349318912b45d36a3ad3",
    "number": 2548,
    "body": "",
    "head_branch": "2.0.0_fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 970cc91de038499ca64e078724ce6a9f7ccc475c into 458f5c84d1d12270e8e65670218be076b5f135f3"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621349418912b45d36a3ad4",
    "number": 2545,
    "body": "",
    "head_branch": "response_redirect",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621349518912b45d36a3ad5",
    "number": 2544,
    "body": "This PR is a fix for the issue #2535.\n",
    "head_branch": "issue_2535",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621349618912b45d36a3ad6",
    "number": 2543,
    "body": "",
    "head_branch": "model_query",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621349718912b45d36a3ad7",
    "number": 2542,
    "body": "See #2277\n",
    "head_branch": "security-hash-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621349818912b45d36a3ad8",
    "number": 2538,
    "body": "",
    "head_branch": "issue_2140",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621349918912b45d36a3ad9",
    "number": 2537,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge d6529abb9f40a119f2b8da62be27a07659a9065a into 4a5f1ed85e48345d8d2c6af2988c773999ca0d36"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621349a18912b45d36a3ada",
    "number": 2534,
    "body": "See #2521\n",
    "head_branch": "2521",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621349b18912b45d36a3adb",
    "number": 2528,
    "body": "See #2526\n",
    "head_branch": "issue_2526",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge dc49cab2dae17ab0361087e9ab0f503a1ab12017 into a292ea6ae5b68723d1ec043cc4c9b6b52b634481"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621349c18912b45d36a3adc",
    "number": 2527,
    "body": "In PHP5.5.11,\n\n``` C\n    if (PHALCON_IS_FALSE(row_count)) {\n```\n\nWhen row_count value is 0, can into.\nSee https://github.com/phalcon/cphalcon/blob/1.3.3/ext/db/result/pdo.c#L280\n",
    "head_branch": "bug_php5.5.11",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621349e18912b45d36a3add",
    "number": 2525,
    "body": "Zephir\\CompilerException: Variable 'servers' cannot be read because it's not initialized in /home/ikhrustalev/Desktop/work/cphalcon/phalcon/session/adapter/libmemcached.zep on line 87\n\n```\n   [\"servers\": servers, \"client\": client, \"prefix\": prefix]\n----------------------^\n```\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621349f18912b45d36a3ade",
    "number": 2524,
    "body": "Zephir\\CompilerException: Cannot read variable 'cache_mode' because it wasn't declared in /home/ikhrustalev/Desktop/work/cphalcon/phalcon/mvc/view.zep on line 608\n\n```\n   if cache_mode {\n-----------------^\n```\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 68e71151d2469a94c5911508114ed87d66685eda into cb38388f1a8cc2984d44ee787e98c04aee2e0527"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662134a018912b45d36a3adf",
    "number": 2523,
    "body": "In a cycle, use the `PHALCON_INIT_VAR`.\n",
    "head_branch": "model__set",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 31c2307094c8471cc326575a34e338100aafdd3b into a840979d336b6337d36078d194da44d39ab1b062"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662134a118912b45d36a3ae0",
    "number": 2520,
    "body": "",
    "head_branch": "issue_2518",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662134a218912b45d36a3ae1",
    "number": 2514,
    "body": "We all know name of class::method in php is not case-sensitive, so if you type: http://test.com/foo/bar/isadmin in your browser, and actually the class::method is `\\Foo\\BarController::isAdminAction()`, this is all OK. But if I want to do something with `dispatcher` and `annotation`, such as permissions validation, I would get nothing if I try to do  `$annotation->getMethod(\"\\Foo\\BarController\", \"isadminAction\")`.\n\nThis is what I did for permissions validation in `disaptcher:beforeExecuteRoute` event.\n\n``` php\npublic function beforeExecuteRoute(\\Phalcon\\Events\\Event $event, \\Phalcon\\Mvc\\Dispatcher $dispatcher)\n    {\n        $annotations = new \\Phalcon\\Annotations\\Adapter\\Memory();\n        $anno = $annotations->getMethod($dispatcher->getActiveController(), $dispatcher->getActiveMethod());\n        if($anno->count() == 0 || !$anno->has('acl')) {\n            return true;\n        }\n\n        $aclAnno = $anno->get('acl');\n\n        if($aclAnno->getNamedArgument(\"login\") === true) {\n            if(!$this->di->has('user')) {\n                $this->needLogin();\n                return false;\n            }\n        }\n\n        if($aclAnno->getNamedArgument(\"auth\") === true) {\n\n            $list = $this->di->get('user')->getAcl(\"deleted = 0\");\n            if($list->count() == 0) {\n                $this->needAuth();\n                return false;\n            }\n            foreach ($list as $item) {\n                $isOK = true;\n                if($item->module != '*' && $this->module != $item->module) {\n                    $isOK = false;\n                    continue;\n                }\n                if($item->controller != '*' && $this->controller != $item->controller) {\n                    $isOK = false;\n                    continue;\n                }\n                if($item->action != '*' && $this->action != $item->action) {\n                    $isOK = false;\n                    continue;\n                }\n                if($isOK == true) return true;\n            }\n\n            $this->needAuth();\n            return false;\n        }\n\n        return true;\n    }\n```\n",
    "head_branch": "1.3.3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662134a318912b45d36a3ae2",
    "number": 2509,
    "body": "",
    "head_branch": "paginator_model",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662134a418912b45d36a3ae3",
    "number": 2507,
    "body": "#1 - Since the last merge, 2 files generate errors compilation.\n- phalcon\\mvc\\view.zep\n- phalcon\\session\\addapter\\libmemcached.zep\n\nRead commits for more information about errors\n#2 - Implement getPreviousControllerName and getPreviousActionName functions in Dispatcher class\n",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662134a518912b45d36a3ae4",
    "number": 2505,
    "body": "",
    "head_branch": "1.3.2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 99b74f66e2b5eb874d37876b50cd14e158d09432 into a840979d336b6337d36078d194da44d39ab1b062"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662134a618912b45d36a3ae5",
    "number": 2504,
    "body": "",
    "head_branch": "1.3.3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662134a918912b45d36a3ae6",
    "number": 2503,
    "body": "",
    "head_branch": "1.3.2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662134aa18912b45d36a3ae7",
    "number": 2500,
    "body": "I believe that this PR will fix some issue connected with generating and compiling Phalcon and fix AclTest\n\ncompared with: https://github.com/phalcon/cphalcon/blob/1.3.3/ext/acl/adapter/memory.c#L649\n",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662134ab18912b45d36a3ae8",
    "number": 2492,
    "body": "`\\Phalcon\\Logger\\Formatter::interpolate` leaves a closing } behind when using numeric indices for `context`. That is, the following produces the message `Hello World}`:\n\n```\n<?php\n$logger = new Phalcon\\Logger\\Adapter\\Stream(\"php://stdout\");\n$logger->info(\"Hello {0}\", ['World']);\n```\n\nThis seems to happen because the code doesn't take into account that the return value of `spprintf` does not count the terminating NUL character.\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662134ac18912b45d36a3ae9",
    "number": 2491,
    "body": "`\\Phalcon\\Logger\\Formatter::interpolate` leaves a closing } behind when using numeric indices for `context`. That is, the following produces the message `Hello World}`:\n\n```\n<?php\n$logger = new Phalcon\\Logger\\Adapter\\Stream(\"php://stdout\");\n$logger->info(\"Hello {0}\", ['World']);\n```\n\nThis seems to happen because the return value of `spprintf` does not count the terminating NUL character.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662134ad18912b45d36a3aea",
    "number": 2490,
    "body": "Can someone code review/comment?\n\nNot sure where to stick this in terms of namespacing. Came across a gist for base62 encode/decode and thought I would contribute to phalcon by converting it to zephir\n",
    "head_branch": "features/base62-encoder",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662134af18912b45d36a3aeb",
    "number": 2489,
    "body": "Anyone able to code review and comment? I was reading articles on pgsql sharding/scaling, which lead to using base62 to generate composite id for an api, which lead me to think it could be a good small class to add to phalcon\n",
    "head_branch": "features/base62-encoder",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662134b018912b45d36a3aec",
    "number": 2484,
    "body": "the current version of getTokenKey requires a length parameter but it was not the case in 1.3 and the rest of the function handles a null value as expected.\n",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662134b118912b45d36a3aed",
    "number": 2482,
    "body": "Fixed unit-tests/TagTest.php to pass.\n",
    "head_branch": "2.0.0-tag",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662134b218912b45d36a3aee",
    "number": 2481,
    "body": "Can happens that `isSent()` method is called on non `ResponseInterface` compatible objects.\nAnother way to avoid this is to add `isSent()` method to `ResponseInterface`.\n",
    "head_branch": "response-issent-fix-1.3.2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662134b318912b45d36a3aef",
    "number": 2479,
    "body": "Supported \\Phalcon\\Db\\Index: TYPE for 2.0.\n\nMySQL Only.\n",
    "head_branch": "2.0.0-db-index",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662134b418912b45d36a3af0",
    "number": 2478,
    "body": "Update unit-test MySQL Database Foregin Key for 2.0 branch.\n",
    "head_branch": "2.0.0-db-foreignkey",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662134b518912b45d36a3af1",
    "number": 2474,
    "body": "",
    "head_branch": "group",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662134b618912b45d36a3af2",
    "number": 2473,
    "body": "",
    "head_branch": "group_2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662134b918912b45d36a3af3",
    "number": 2469,
    "body": "- Move declaration of a zval\n- Regenerated builds\n\n1.3.2 Alpha 1 will build fine on VC11 now.\n\nI've recompiled with the dirty fix for #2277 (not included in the PR)\nhttps://github.com/WooDzu/cphalcon-windows/tree/master/1.3.2%20-%20ALPHA%201/26-05-2014\n",
    "head_branch": "1.3.2-msvc-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 469f01675d300a5689c1150ebd1cbbc7230cce0a into 113a45d2ae004cf0ea310043d8c35c1d23029060"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662134ba18912b45d36a3af4",
    "number": 2467,
    "body": "To fix issue #2466\n",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662134bc18912b45d36a3af5",
    "number": 2465,
    "body": "w8\ndevelop\n",
    "head_branch": "volt_fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 4316e8f285ff6518a60bbd025b1b076b6dc3ca6f into bf03f674ad33920221c3d9b1193400b4418f6eaa"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662134bd18912b45d36a3af6",
    "number": 2461,
    "body": "Hello,\n\nI have working a little on collection and filters assets classes.\n\nI fixed 2 test-unit errors but know I have a \"segmentation fault\" on testFilterMultiplesSourcesFilterNoJoin function line 440.\n\nAnother things, zephir dynamic setter (example: protected _prefix { get, set }; on collection.zep line 30) doesn't return current object. Some tests of assetsTest.php use this feature.\n\nRegards,\n",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662134be18912b45d36a3af7",
    "number": 2460,
    "body": "",
    "head_branch": "touch",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 2633ac19f8e0db782703ab6b1aa285bf681e1a03 into d3ab56e01fbfa39b49350ba34d2dc295c2c03701"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662134bf18912b45d36a3af8",
    "number": 2458,
    "body": "",
    "head_branch": "libmemcached_2.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge fc4e0114f3910e28132cb2e387027339ee423db2 into 2d1c3c733f97d2ce12bbe4d94d08621da49bed39"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662134c018912b45d36a3af9",
    "number": 2455,
    "body": "``` php\nnew Reference(\"users_friends_users_2\", [\n      'referencedTable' => \"users\",\n      'columns' => [\"friend_id\"],\n      'referencedColumns' => [\"user_id\"]\n])\n```\n\nExpected:\n\n``` sql\nCONSTRAINT `users_friends_users_2` FOREIGN KEY (`friend_id`) REFERENCES `users` (`user_id`)\n```\n\nResult:\n\n``` sql\nCONSTRAINT `users_friends_users_2` FOREIGN KEY (`user_id`) REFERENCES `users` (`user_id`)\n```\n",
    "head_branch": "1.3.2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662134c318912b45d36a3afa",
    "number": 2454,
    "body": "",
    "head_branch": "1.3.2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 16266cfd85284967392eb136cbde835781795e29 into 98d8489eafb9bed9f265bf86b4dbeb5fce00cfaa"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662134c418912b45d36a3afb",
    "number": 2451,
    "body": "Check property is same column name.\n",
    "head_branch": "model__set",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662134c518912b45d36a3afc",
    "number": 2449,
    "body": "Issues: #1989\n\nPhalcon\\Db\\Index\n- Add to the type constructors\n- Add a getType method\n\nPhalcon\\Db\\Dialect/Mysql, Sqlite\n- Update create Index process\n",
    "head_branch": "1.3.2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge c843e60cbcb55ed1b72e1eefb58309ff4d894603 into aa8fa35764c506a994dd88d90e191ac181a8dc72"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662134c618912b45d36a3afd",
    "number": 2448,
    "body": "Support\n\n``` php\n$builder->setDi($di)\n        ->from('Robots')\n        ->groupBy('id, name');\n```\n",
    "head_branch": "model_query_builder_group",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662134c718912b45d36a3afe",
    "number": 2446,
    "body": "",
    "head_branch": "1.3.2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662134c818912b45d36a3aff",
    "number": 2442,
    "body": "1) PaginatorTest::testArrayPaginator_t445\nFailed asserting that 2 matches expected 1.\n\n/home/vagrant/cphalcon-2.x.x/unit-tests/PaginatorTest.php:204\n\nBug : Divide by an integer return an integer.\nFix : Add floatval on denominator to return a float\n\nuse test-unit \"PaginatorTest\" to check fix\n",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662134c918912b45d36a3b00",
    "number": 2441,
    "body": "",
    "head_branch": "translate",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662134cb18912b45d36a3b01",
    "number": 2440,
    "body": "",
    "head_branch": "1.3.2_build",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 26c088c3d242e761d138eba94e4cfcf28075cde9 into 5ad418c737e9362a4f97cb3f8bafe61dc6c0e3c4"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662134cc18912b45d36a3b02",
    "number": 2437,
    "body": "i feel that it would be nice :)\n",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 3602a9330fa016bd5735ac28375c4713cf5e91bf into f9f4370996d845fd40f2717eaa4ab46c90b99723"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662134cd18912b45d36a3b03",
    "number": 2436,
    "body": "Use pecl yaml.\n",
    "head_branch": "yaml",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662134ce18912b45d36a3b04",
    "number": 2433,
    "body": "See #1803\n",
    "head_branch": "bug_join_alias",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662134cf18912b45d36a3b05",
    "number": 2425,
    "body": "See #2415\n",
    "head_branch": "model_query",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662134d018912b45d36a3b06",
    "number": 2424,
    "body": "commit 5c9bf86,\n\nProblem : the function valid respond false the first time when the fetchAll must be done.\n\nSolution : set directly rows field after the fetch.\n\nExample to reproduce :\n#1 Create table\n\nCREATE TABLE IF NOT EXISTS `user` (\n  `user_id` int(10) unsigned NOT NULL AUTO_INCREMENT,\n  `email` varchar(70) CHARACTER SET utf8 NOT NULL,\n  `password` char(32) CHARACTER SET utf8 NOT NULL,\n  PRIMARY KEY (`user_id`),\n  UNIQUE KEY `email_password` (`email`,`password`)\n) ENGINE=InnoDB  DEFAULT CHARSET=latin1 AUTO_INCREMENT=3 ;\n\nINSERT INTO `user` (`user_id`, `email`, `password`) VALUES\n(1, 'example1@gmail.com', 'pass1'),\n(2, 'example2@test.com', 'pass2');\n#2 (use scaffold of phalcon-devtool)\n\nphalcon scaffold --table-name user\n#3 Search all result (juste enter in http://127.0.0.1/user/index page\n\nor check like this :\n$users = User::find();\nwhile ($users->valid() !== false) {\n    echo \"user : \" . $users->current()->email . '<br />';\n}\n\ncommit 8af3f1e,\n\nFix resultSet->seek function. replace range by while loop because range(0, 0) do one loop and apply next function.\n",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 8af3f1ed49b758d99c3d66cee30e30d186f5b10a into 9492155769caf61848887d7738af2bec4e17967c"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662134d118912b45d36a3b07",
    "number": 2421,
    "body": "",
    "head_branch": "acl_bug",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662134d218912b45d36a3b08",
    "number": 2420,
    "body": "Another patch, this time to 1.3.2 branch. Sorry :)\n",
    "head_branch": "1.3.2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662134d318912b45d36a3b09",
    "number": 2418,
    "body": "",
    "head_branch": "2402_issue",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662134d418912b45d36a3b0a",
    "number": 2417,
    "body": "Ignoring \"value\" attrib when Phalcon renders textareas.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662134d518912b45d36a3b0b",
    "number": 2410,
    "body": "",
    "head_branch": "httpclient_stream",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662134d618912b45d36a3b0c",
    "number": 2409,
    "body": "",
    "head_branch": "httpclient1.3.2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662134d718912b45d36a3b0d",
    "number": 2395,
    "body": "See #2394\n",
    "head_branch": "MessageInterface",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662134d818912b45d36a3b0e",
    "number": 2392,
    "body": "",
    "head_branch": "relative_namespace",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662134d918912b45d36a3b0f",
    "number": 2389,
    "body": "",
    "head_branch": "view_cache_2.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662134db18912b45d36a3b10",
    "number": 2388,
    "body": "",
    "head_branch": "tag_linkto_2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662134dc18912b45d36a3b11",
    "number": 2387,
    "body": "See #2386\n",
    "head_branch": "2386",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662134dd18912b45d36a3b12",
    "number": 2385,
    "body": "Fixing a typo when closing the Mime type check resource.\n",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662134de18912b45d36a3b13",
    "number": 2379,
    "body": "As long as the cache action view, See #2377\n\n``` php\n$this->view->cache(array(\"key\" => \"mykey\", \"lifetime\" => 2, \"level\" => 1, \"mode\" => \\Phalcon\\Mvc\\View::CACHE_MODE_INVERSE));\n```\n",
    "head_branch": "view_cache",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662134df18912b45d36a3b14",
    "number": 2378,
    "body": "See #2375\n",
    "head_branch": "2375",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662134e018912b45d36a3b15",
    "number": 2367,
    "body": "The volt function \"include\" always throws exception if template was not found. This pull requests changes this behaviour:\n\n1) new function \"require\" is added that works as \"include\" used to work before\n2) \"include\" now ignores missing templates\n\nTo achieve this, partial method had to be changed too: an 3rd optional parameter \"ignore_missing\" was added. This parameter had to be taken into account in simple view, but there it has no effect (partial always throws exceptions on missing files, because it is not supported there)\n\nUsage:\n        {% include \"partials/nonexistent\" %} (never fails)\n        {% require \"partials/help.volt\" %}      (fails if help.volt is missing)\n        {{ partial(\"partials/help\", ['a': 'abc'], true) }} (never fails)\n",
    "head_branch": "include_require",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662134e118912b45d36a3b16",
    "number": 2366,
    "body": "This _may_ not work for all adapters, but won't break anything.\nSee (http://www.php.net/manual/en/pdostatement.rowcount.php)\n",
    "head_branch": "pdo_affected_rows",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662134e218912b45d36a3b17",
    "number": 2365,
    "body": "If in database set default value, Will model save it, check the value.\n",
    "head_branch": "model_meta_default",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662134e318912b45d36a3b18",
    "number": 2359,
    "body": "",
    "head_branch": "view_lower",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662134e418912b45d36a3b19",
    "number": 2354,
    "body": "This pull request adds the missing interface functions, described in issue #2196.\n",
    "head_branch": "issue_2196",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662134e518912b45d36a3b1a",
    "number": 2353,
    "body": "",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662134e618912b45d36a3b1b",
    "number": 2352,
    "body": "",
    "head_branch": "strategy_2.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662134e718912b45d36a3b1c",
    "number": 2345,
    "body": "See #2143\n",
    "head_branch": "2143",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662134e818912b45d36a3b1d",
    "number": 2344,
    "body": "",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662134e918912b45d36a3b1e",
    "number": 2342,
    "body": "Middlewares do not stop operation when `before` event triggered in `Micro` as documented http://docs.phalconphp.com/en/latest/reference/micro.html#middleware-events.\n\nThis PR makes `return false` and `stop` method in middleware work as same as which in anonymous function for `before` event.\n",
    "head_branch": "1.3.2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662134ea18912b45d36a3b1f",
    "number": 2341,
    "body": "",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662134eb18912b45d36a3b20",
    "number": 2340,
    "body": "",
    "head_branch": "2.0.0_beta1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge b128ef0f89b0624ed265515d5619b9499b08f329 into fd5b37957b9c137e1fb88f3927b1f8bd8001572d"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662134ec18912b45d36a3b21",
    "number": 2339,
    "body": "``` php\n$session = new \\Phalcon\\Session\\Adapter\\Files();\nvar_dump($session);\n$session->start();\nvar_dump($session);\n```\n\nProperty can't updated.\n\n``` output\nobject(Phalcon\\Session\\Adapter\\Files)#57 (3) {\n  [\"_uniqueId\":protected]=>\n  NULL\n  [\"_started\":protected]=>\n  bool(false)\n  [\"_options\":protected]=>\n  NULL\n}\nobject(Phalcon\\Session\\Adapter\\Files)#57 (3) {\n  [\"_uniqueId\":protected]=>\n  NULL\n  [\"_started\":protected]=>\n  bool(false)\n  [\"_options\":protected]=>\n  NULL\n}\n```\n",
    "head_branch": "session_set",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662134ed18912b45d36a3b22",
    "number": 2337,
    "body": "PR for #2321\n@niden Hopefully the right branch now ;)\n",
    "head_branch": "fix_form_add",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 85c8414a53e790c0fbb905d11e66281b98327059 into 82960cb177a02d7ddeb7b84f1ce96baa41b21cb7"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662134ef18912b45d36a3b23",
    "number": 2335,
    "body": "",
    "head_branch": "model_updated",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662134f018912b45d36a3b24",
    "number": 2334,
    "body": "XHTML5 constant\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662134f118912b45d36a3b25",
    "number": 2333,
    "body": "Middlewares do not stop operation when `before` event triggered in `Micro` as documented http://docs.phalconphp.com/en/latest/reference/micro.html#middleware-events.\n\nThis PR makes `return false` and `stop` method in middleware work as same as which in anonymous function for `before` event.\n",
    "head_branch": "1.3.1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662134f218912b45d36a3b26",
    "number": 2332,
    "body": "Makes it possible to define default route with `@Route('/')` annotation\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 412db0d17b1d865bb836e207b6a28e9ab95de321 into 8366b306440f2f45320b047f808114e4a09353b4"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662134f318912b45d36a3b27",
    "number": 2331,
    "body": "",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662134f418912b45d36a3b28",
    "number": 2328,
    "body": "#2019\n",
    "head_branch": "issue2019",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 27831cb5bf75b03d189e225e01733b315abc0961 into 8b02d87d996ca60715c221b90d287eb543d0ecb4"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662134f518912b45d36a3b29",
    "number": 2327,
    "body": "I've noticed that the api reference in the docs doesn't match the @param-s specified in the source, and this can lead to this: http://forum.phalconphp.com/discussion/2050/how-to-use-model-skipattributes-i-failed-to-work-it-out-\n\nThe thing missing is the ZEND_BEGIN_ARG_INFO_EX macro for each method, that is used by the php ReflectionClass to get the method parameters.\n\nI could do this work for all the classes but it's a big work to do, and i'd like to know what @phalcon has in mind to solve this (maybe there's a better way, maybe we have to wait for 2.0). Thanks.\n",
    "head_branch": "model_methods_reflection",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662134f618912b45d36a3b2a",
    "number": 2325,
    "body": "See #2319 \n",
    "head_branch": "2319",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662134f718912b45d36a3b2b",
    "number": 2323,
    "body": "PR for #2321\n",
    "head_branch": "fix_form_add",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662134f818912b45d36a3b2c",
    "number": 2316,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662134f918912b45d36a3b2d",
    "number": 2314,
    "body": "See #2313\n",
    "head_branch": "2313",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662134fa18912b45d36a3b2e",
    "number": 2307,
    "body": "See #2229 \n",
    "head_branch": "issue2229",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662134fb18912b45d36a3b2f",
    "number": 2306,
    "body": "",
    "head_branch": "session_memcache_zep",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 624633f479773ea09edad954d5d5b7804e9d3aab into 3e3a75477556dfe380bc4a5ad1085f7829c9f41e"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662134fc18912b45d36a3b30",
    "number": 2303,
    "body": "",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662134fd18912b45d36a3b31",
    "number": 2299,
    "body": "",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge bced373f22a3f9c0491a80db000efa6db0319f6c into 54ef471b82f218cd84821e34f015d15b4c98cbfa"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662134ff18912b45d36a3b32",
    "number": 2298,
    "body": "See #2231\n",
    "head_branch": "session_libmemcached",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621350018912b45d36a3b33",
    "number": 2296,
    "body": "",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 88b57145c2532293fa28c159da1130eca359e835 into af5910f50d78423229b3ac9bd74de92bbdcc4447"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621350118912b45d36a3b34",
    "number": 2293,
    "body": "",
    "head_branch": "session_libmemcached",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621350218912b45d36a3b35",
    "number": 2289,
    "body": "See #2231\n",
    "head_branch": "2231_memcache",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621350318912b45d36a3b36",
    "number": 2286,
    "body": "\\Phalcon\\Tag::XHTML5 was returning empty string\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621350418912b45d36a3b37",
    "number": 2281,
    "body": "",
    "head_branch": "2278",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 21d16f730f1f45574fe71fbb07e215e24f604b26 into 2bf72c2799422079f51943fe0b9786115703c5c6"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621350518912b45d36a3b38",
    "number": 2280,
    "body": "It's a shame that there's no real answer for anyone working with SQL server. A sql server driver that works with the ORM is needed.\n",
    "head_branch": "2.0.0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621350618912b45d36a3b39",
    "number": 2276,
    "body": "",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 67f49119afeb0d495f7fc3f75e1ab8358c9e6f5c into 35c703ba29d7c9a54e93d95bee0d05f7fc8bc733"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621350718912b45d36a3b3a",
    "number": 2275,
    "body": "See #2250 \nChange \n\n``` c\nif (phalcon_array_isset_string_fetch(&distinct, definition, SS(\"distinct\"))) {\n```\n\nto\n\n``` c\nif (phalcon_array_isset_string_fetch(&distinct, definition, SS(\"definition\"))) {\n```\n",
    "head_branch": "2250",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621350818912b45d36a3b3b",
    "number": 2274,
    "body": "See #2251\n",
    "head_branch": "2251",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge a73b50f84a9e43b20da455c08158d71f7e39103f into f3a493544542ea3c556480284e1d6720ad129fb4"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621350918912b45d36a3b3c",
    "number": 2273,
    "body": "See https://github.com/phalcon/cphalcon/pull/2246#issuecomment-39120684\n",
    "head_branch": "repair",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 9156bfdf6d0da4fd614752652135f3dbbd681f0b into c14720a94cf10f4ece41cbe9671fd5ac8c0c1185"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621350b18912b45d36a3b3d",
    "number": 2272,
    "body": "See https://github.com/phalcon/cphalcon/pull/2246#issuecomment-39120684\n",
    "head_branch": "updated_1.3.2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621350c18912b45d36a3b3e",
    "number": 2265,
    "body": "Add namespace support for view\n",
    "head_branch": "1.3.2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621350d18912b45d36a3b3f",
    "number": 2264,
    "body": "See #2259\n",
    "head_branch": "2259",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621350e18912b45d36a3b40",
    "number": 2263,
    "body": "See #2262\n",
    "head_branch": "2262",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 316c92f9514452677f071907a74ef477735ae65b into 75276a4e63f83cc81bfbd9c8886d4cd808737a9e"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621350f18912b45d36a3b41",
    "number": 2260,
    "body": "Please do not merge this one yet.\n\nRequestTest unit test suite updated + code updated to act the same as 1.3.0 instead of 1.2.6\n",
    "head_branch": "2.0.0-request-issues",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621351018912b45d36a3b42",
    "number": 2258,
    "body": "See #2244\n",
    "head_branch": "2244",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621351118912b45d36a3b43",
    "number": 2256,
    "body": "When working with unit test frameworks like PHPSpec and PHPUnit, it's impossible to mock/stub entities that inherit from Phalcon\\Mvc\\Model, since the framework is not able to use it's own constructor into the extended class. When mocking or stubbing, you'll get an error like this:\n\n```\nFatal error: Cannot override final method Phalcon\\Mvc\\Model::__construct()\n```\n\nThis is a serious problem for any large project with a serious approach to code quality. I'm sure this causing a lot of problems for other developers and it's a very simple change. There's no reason for the Model constructor to be final.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621351218912b45d36a3b44",
    "number": 2255,
    "body": "it's an int between -128 and 127\n",
    "head_branch": "1.3.1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 0d72f09ea5ec8f298a8cd26109291ab6f587f7d7 into f6566e825adbbb0468b75e57faf30f0951631aba"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621351318912b45d36a3b45",
    "number": 2249,
    "body": "",
    "head_branch": "fix-2111",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621351418912b45d36a3b46",
    "number": 2248,
    "body": "See #2002\n",
    "head_branch": "tag_1.3.2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621351518912b45d36a3b47",
    "number": 2247,
    "body": "",
    "head_branch": "validator_allowempty",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621351718912b45d36a3b48",
    "number": 2246,
    "body": "Use phalcon_camelize for namesapce \nAdd \\Phalcon\\Session\\Adapter::setId\nFixed #1932 Phalcon\\Http\\Request\\File extend SplFileInfo\nFixed #2018 add method \\Phalcon\\Db\\Result\\Pdo::nextRowset \n",
    "head_branch": "updated_1.3.2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 355b002cb6ad2a326ac0d9a79a629fda510fe55e into 27facc2010450479b9828b5df57ea0ec9d104908"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621351818912b45d36a3b49",
    "number": 2245,
    "body": "",
    "head_branch": "fix-2111",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621351a18912b45d36a3b4a",
    "number": 2242,
    "body": "Can happens that `isSent()` method is called on non `ResponseInterface` compatible objects.\nAnother way to avoid this is to add `isSent()` method to `ResponseInterface`.\n",
    "head_branch": "response-issent-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621351b18912b45d36a3b4b",
    "number": 2237,
    "body": "it's an int between 0 and 127\n",
    "head_branch": "1.3.1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621351c18912b45d36a3b4c",
    "number": 2234,
    "body": "",
    "head_branch": "1.3.1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge 8c79696bc3ab8ca6e6ed07e87c6c1464620c4371 into 8c5fa646eeb7b3bb6cc42aaf2b8e468d2e3119b8"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621351d18912b45d36a3b4d",
    "number": 2232,
    "body": "``` php\n$di->set('session', function () {\n    $session = new \\Phalcon\\Session\\Adapter\\Files();\n    if (isset($_POST['PHPSESSION'])) {\n        $session->setId($_POST['PHPSESSION']);\n    }\n    $session->start();\n\n    return $session;\n});\n\n```\n",
    "head_branch": "nfr_session_1.3.2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621351e18912b45d36a3b4e",
    "number": 2228,
    "body": "",
    "head_branch": "updated",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621351f18912b45d36a3b4f",
    "number": 2223,
    "body": "For a while, Travis CI has supported allowed failures in your build\nmatrix - jobs that are allowed to fail, without affecting the status of\nthe entire build.\n\nHowever, even if some of the items in your build matrix are allowed failures, Travis CI will still wait for them to finish before marking the build as finished. Even if all of the other jobs are done, Travis CI won't mark the build as finished until the allowed failures are done, despite the fact that allowed failures won't ultimately affect the status of the build.\n- [Fast-Finish Builds with Allowed Failures](http://blog.travis-ci.com/2013-11-27-fast-finishing-builds/)\n- [Rows That are Allowed To Fail](http://docs.travis-ci.com/user/build-configuration/#Rows-That-are-Allowed-To-Fail)\n",
    "head_branch": "travis",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621352118912b45d36a3b50",
    "number": 2220,
    "body": "See the discussion here:\nhttp://forum.phalconphp.com/discussion/1479/multiple-joins-in-oo-notation-fail\n\nFrom what I saw, the problem was that the `current_joins` was merged with the `join` array instead of appended, so it resulted in something like this:\n\n``` php\narray(\n    //first join\n    0 => array(\n        'type' => \"LEFT\",\n        'conditions' => \"...\",\n    ),\n\n    //all the following joins\n    'type' => \"LEFT\",\n    'conditions' => \"...\",\n)\n```\n\ninstead of\n\n``` php\narray(\n    //first join\n    0 => array(\n        'type' => \"LEFT\",\n        'conditions' => \"...\",\n    ),\n\n    //all the following joins\n    1 => array(\n        'type' => \"LEFT\",\n        'conditions' => \"...\",\n    ),\n)\n```\n\nI don't know how to copy a zval and I'm guessing I couldn't edit `current_joins` directly, so to avoid editing too much code I simpy added an array of array that can be merged with `current_joins` or copy-written on `merged_joins`.\n",
    "head_branch": "issue2157",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621352218912b45d36a3b51",
    "number": 2217,
    "body": "This pull request adds the missing interface functions, described in issue #2196.\n",
    "head_branch": "issue_2196",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621352318912b45d36a3b52",
    "number": 2213,
    "body": "",
    "head_branch": "nfr_validate",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge bde1bbcf92d42ba0bb615901635f6b4a4367b473 into 80d24d6de719f57142550c345cd01ff72e27e70e"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621352418912b45d36a3b53",
    "number": 2212,
    "body": "",
    "head_branch": "issue_2002_1.3.2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621352518912b45d36a3b54",
    "number": 2211,
    "body": "",
    "head_branch": "issue_2018_1.3.2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621352618912b45d36a3b55",
    "number": 2210,
    "body": "``` php\n$di->set('router', function () {\n        $router = new \\Phalcon\\Mvc\\Router();\n        $router->add(\n            \"/admin/:namespace/:controller/:action\",\n            array(\n                \"namespace\" => 1,\n                \"controller\" => 2,\n                \"action\"     => 3\n            )\n        );\n        return $router;\n});\n```\n\nWhen use url:`http://localhost/admin/my/index/index`, error:\n`my\\IndexController handler class cannot be loaded`\n",
    "head_branch": "namespace_1.3.2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621352718912b45d36a3b56",
    "number": 2209,
    "body": "",
    "head_branch": "issue_1932_1.3.2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621352818912b45d36a3b57",
    "number": 2208,
    "body": "See the discussion here:\nhttp://forum.phalconphp.com/discussion/1479/multiple-joins-in-oo-notation-fail\n\nFrom what I saw, the problem was that the `current_joins` was merged with the `join` array instead of appended, so it resulted in something like this:\n\n``` php\narray(\n    //first join\n    0 => array(\n        'type' => \"LEFT\",\n        'conditions' => \"...\",\n    ),\n\n    //all the following joins\n    'type' => \"LEFT\",\n    'conditions' => \"...\",\n)\n```\n\ninstead of\n\n``` php\narray(\n    //first join\n    0 => array(\n        'type' => \"LEFT\",\n        'conditions' => \"...\",\n    ),\n\n    //all the following joins\n    1 => array(\n        'type' => \"LEFT\",\n        'conditions' => \"...\",\n    ),\n)\n```\n\nThis is my first attempt at editing phalcon code, I have some experience with c code but none with php extension. I didn't tried but i guessed I couldn't edit `current_joins` directly, so phalcon_array_append is out of the question. I don't know how to copy a zval, so to avoid editing too much code I simpy added an array of array that can be merged with `current_joins` or copy-written on `merged_joins`.\n",
    "head_branch": "issue2157",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 2c635e31823b12ee1b0713fbfbbac9fe187acf83 into 8c79696bc3ab8ca6e6ed07e87c6c1464620c4371"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621352918912b45d36a3b58",
    "number": 2207,
    "body": "",
    "head_branch": "fix-2111",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621352a18912b45d36a3b59",
    "number": 2201,
    "body": "``` php\n$di->set('router', function () {\n        $router = new \\Phalcon\\Mvc\\Router();\n        $router->add(\n            \"/admin/:namespace/:controller/:action\",\n            array(\n                \"namespace\" => 1,\n                \"controller\" => 2,\n                \"action\"     => 3\n            )\n        );\n        return $router;\n});\n```\n\nWhen use url:`http://localhost/admin/my/index/index`, error:\n`my\\IndexController handler class cannot be loaded`\n",
    "head_branch": "namespace",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621352b18912b45d36a3b5a",
    "number": 2197,
    "body": "This pull request adds the missing interface functions, described in issue #2196.\n",
    "head_branch": "issue_2196",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621352d18912b45d36a3b5b",
    "number": 2195,
    "body": "Stable ;-)\n",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 26cfa079d4a40df543a85d8d1c5c0b7489398175 into aad4287ef0b88bfc04600b3c1d8ea5fde8e7778c"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621352e18912b45d36a3b5c",
    "number": 2191,
    "body": "",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621352f18912b45d36a3b5d",
    "number": 2190,
    "body": "",
    "head_branch": "1.3.0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621353018912b45d36a3b5e",
    "number": 2189,
    "body": "",
    "head_branch": "fix-2111",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621353118912b45d36a3b5f",
    "number": 2184,
    "body": "",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621353218912b45d36a3b60",
    "number": 2183,
    "body": "",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 0073ef2fad6556972950f617d4f35e235e22d8a8 into e5a847f8f04f6d9180dc4d2e444411e697c55431"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621353318912b45d36a3b61",
    "number": 2179,
    "body": "See #2018 a\n",
    "head_branch": "issue_2018",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621353418912b45d36a3b62",
    "number": 2178,
    "body": "Before\n\n``` php\nif (!empty($this->idcard)) {\n    $this->validate(new Uniqueness(array(\n        'field' => 'idcard',\n        'message' => 'exists'\n    )));\n}\n```\n\nNow\n\n``` php\n$this->validate(new Uniqueness(array(\n    'field' => 'idcard',\n    'message' => 'exists'\n)), TRUE);\n```\n",
    "head_branch": "model_validate2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621353518912b45d36a3b63",
    "number": 2177,
    "body": "``` php\nUsers::remove(array('id <= :id:', array('id' => 2)));\n```\n",
    "head_branch": "nfr_models_remove",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621353618912b45d36a3b64",
    "number": 2176,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621353718912b45d36a3b65",
    "number": 2174,
    "body": "See #1932\n",
    "head_branch": "issue_1932",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621353818912b45d36a3b66",
    "number": 2173,
    "body": "See #1992\n",
    "head_branch": "nfr_1992",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 4cf03e636b84881635c746f33d1228c4d2ba44b7 into c8f7bd830aeea66f042e2bf0d23cd51c5ca563cf"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621353918912b45d36a3b67",
    "number": 2169,
    "body": "",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 2b5dbdff1dabbaf98b45d6cee0b0e67fcfdab8dd into fbf75122bc753c5bbbc59430d379f899f35c2e90"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621353a18912b45d36a3b68",
    "number": 2168,
    "body": "Getting changes from phalcon master\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621353b18912b45d36a3b69",
    "number": 2167,
    "body": "Getting changes from phalcon master\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621353e18912b45d36a3b6a",
    "number": 2162,
    "body": "",
    "head_branch": "1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621353f18912b45d36a3b6b",
    "number": 2158,
    "body": "See #2140\n",
    "head_branch": "issue_2140",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621354018912b45d36a3b6c",
    "number": 2156,
    "body": "",
    "head_branch": "bug_2151_1.3.1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge a9676d23164a6c5888a5b7cd0011174187efa101 into 07dd407bae8119baaeb146285eff3bc14f02affc"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621354118912b45d36a3b6d",
    "number": 2155,
    "body": "See #2151 \n\n``` php\n$robot = new Robots;\nvar_dump($robot->validation());\n```\n\nThrows an exception ErrorException: `First argument is not an array`\n",
    "head_branch": "bug_2151",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge f91cbb9be67d1babb7a7ca4c9b7f4a6460ca71a3 into b0c765d409b1436f425758ef42e6a3027e5d9fbd"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621354318912b45d36a3b6e",
    "number": 2150,
    "body": "",
    "head_branch": "1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 9f076812dfc17350658cb38d54c017d0f39e930a into 21e42f2e736633543fcf6edb931d3abeebeda168"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621354418912b45d36a3b6f",
    "number": 2148,
    "body": "",
    "head_branch": "issues_2412",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 559f6fc5448b876ace0cc42848534a842f902dad into d343ee46c9e822a9e0e78cb1931ccdc769a5af88"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621354518912b45d36a3b70",
    "number": 2144,
    "body": "Is it intended for the Generator to have ext/kernel/mbstring.h and ext/kernel/mbstring.c in  phalcon_c_priority_files.php? I believe, no since it breaks the generator script\n\nThese results in the following errors:\nC:\\php-sdk>php F:\\SVN\\cphalcon\\build\\gen-build.php\n\n``` batch\nGenerating safe build... \nFatal error: Uncaught exception 'Exception' with message 'file(F:/SVN/cphalcon/ext/kernel/mbstring.h): failed to open stream: No such file or directory on line 168 in F:\\SVN\\cphalcon\\build\\_resource\\Phalcon\\Build\\Generator\\File\\PhalconC.php' in F:\\SVN\\cphalcon\\build\\_resource\\Phalcon\\bootstrap.php on line 14\n\nException: file(F:/SVN/cphalcon/ext/kernel/mbstring.h): failed to open stream: No such file or directory on line 168 in F:\\SVN\\cphalcon\\build\\_resource\\Phalcon\\Build\\Generator\\File\\PhalconC.php in F:\\SVN\\cphalcon\\build\\_resource\\Phalcon\\bootstrap.php on line 14\n\nCall Stack:\n    1.0131     127760   1. {main}() F:\\SVN\\cphalcon\\build\\gen-build.php:0\n    1.0361     149160   2. Phalcon\\Build\\Generator->run() F:\\SVN\\cphalcon\\build\\gen-build.php:9\n    1.1067     248608   3. Phalcon\\Build\\Generator_Safe->run() F:\\SVN\\cphalcon\\build\\_resource\\Phalcon\\Build\\Generator.php:52\n    1.1067     249008   4. Phalcon\\Build\\Generator_Safe->generateFiles() F:\\SVN\\cphalcon\\build\\_resource\\Phalcon\\Build\\Generator\\Safe.php:84\n    3.7714     284368   5. Phalcon\\Build\\Generator_File_PhalconC->generate() F:\\SVN\\cphalcon\\build\\_resource\\Phalcon\\Build\\Generator\\Safe.php:95\n    3.9134     310960   6. Phalcon\\Build\\Generator_File_PhalconC->addPriorityFiles() F:\\SVN\\cphalcon\\build\\_resource\\Phalcon\\Build\\Generator\\File\\PhalconC.php:72\n    4.7635     319880   7. Phalcon\\Build\\Generator_File_PhalconC->appendSource() F:\\SVN\\cphalcon\\build\\_resource\\Phalcon\\Build\\Generator\\File\\PhalconC.php:131\n    4.7635     319944   8. file() F:\\SVN\\cphalcon\\build\\_resource\\Phalcon\\Build\\Generator\\File\\PhalconC.php:168\n    4.8025     321264   9. Phalcon\\Build\\{closure}() F:\\SVN\\cphalcon\\build\\_resource\\Phalcon\\Build\\Generator\\File\\PhalconC.php:168\n```\n\nThis PR removes mbstring header and source file from phalcon_c_priority_files.php and let Generator pass through\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621354618912b45d36a3b71",
    "number": 2141,
    "body": "See #2069 \n",
    "head_branch": "1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621354718912b45d36a3b72",
    "number": 2139,
    "body": "",
    "head_branch": "1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 0dc4ec4b143d222a2c1d15b91c08c39d449a643a into a81106660cd88d4668b29e02fa90aa9ac2b6c321"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621354818912b45d36a3b73",
    "number": 2135,
    "body": "See #2131\n\n``` php\nComment::query()\n    ->where('topicid=:topicid:')\n    ->bind(array('topicid' => 1)\n    ->cache(array('lifetime' => 70, 'key' => 'questions'))\n    ->execute() ;\n```\n",
    "head_branch": "issues_2131",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge ce519d75f912510dd6ac31c5f76515b075c7ded7 into 146bd97863a92fe6d2dad769e030f9812405910f"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621354918912b45d36a3b74",
    "number": 2133,
    "body": "From now on every diff will ensure the framework works on HHVM.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621354a18912b45d36a3b75",
    "number": 2130,
    "body": "Corrections to prerequisite packages for 1.3.0 (verified on Ubuntu, Suse, Fedora, and CentOS), and other small tweaks.\n",
    "head_branch": "1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge de49765a492452d79ee414ea0303a3762fbd4b68 into 82dbafaa940a129817aae05aea50d180df83b883"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621354b18912b45d36a3b76",
    "number": 2124,
    "body": "1) Introductory text is now consistent with the Phalcon website\n2) Windows install process is now a simplified 4-step list\n3) Miscellaneous small tweaks.\n",
    "head_branch": "1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 430d2d59c26214e2ebf10fcf7743971a123c5ca4 into 9f3c811f0cab6df0a90aff18a942507fc3385ec6"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621354c18912b45d36a3b77",
    "number": 2123,
    "body": "1) Some grammatical fixes\n2) Add instructions for CentOS / Fedora in the Requirements section\n",
    "head_branch": "1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge bc791a7b18ea52304820f5514dd5cb23456c3bb9 into 7cbf88abeb8c0c06c03e3ba707e5dfa85d147a78"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621354d18912b45d36a3b78",
    "number": 2122,
    "body": "1) Some grammatical fixes\n2) Add instructions for CentOS / Fedora in the Requirements section\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621354f18912b45d36a3b79",
    "number": 2121,
    "body": " -implement getter\\setter for SQLVariables, SQLBindTypes\n- Phalcon\\Db\\Profiler now can pass sqlVariables, sqlBindTypes\n",
    "head_branch": "2120_issue_profiler_params",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621355018912b45d36a3b7a",
    "number": 2119,
    "body": "Backend Cache File class fixes \n",
    "head_branch": "2.0-cache-fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 8adba4857a631590427fffbc70177d2ddd642ee5 into 5ce96345c504590420bca0525080e2006a4b6531"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621355118912b45d36a3b7b",
    "number": 2115,
    "body": "",
    "head_branch": "fix-2111",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621355218912b45d36a3b7c",
    "number": 2114,
    "body": "fix DateTime Namespace\n",
    "head_branch": "patch-6",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621355318912b45d36a3b7d",
    "number": 2112,
    "body": "See #2045\n",
    "head_branch": "nfr_2045",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621355418912b45d36a3b7e",
    "number": 2108,
    "body": "",
    "head_branch": "1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge f6ae654d90f994b53fa70cfe97cd84fa8cbead09 into bcf176da79bc15d22c2099534d0cde2e7d2ab4a2"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621355518912b45d36a3b7f",
    "number": 2107,
    "body": "See #2100\n",
    "head_branch": "nfr_2100",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 4e1f8df1a0cd8438399fd3142328f33aa0d05b80 into 441d7dea084c639023ac2a470c0f2c9437b0a710"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621355618912b45d36a3b80",
    "number": 2106,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621355718912b45d36a3b81",
    "number": 2105,
    "body": "See https://github.com/phalcon/cphalcon/pull/1935#issuecomment-36145774\n",
    "head_branch": "1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge e06fae80ea651510dc50d0db43c0ed8a2d37e393 into 3331707aedc0066a5180a289268ccde0e0552352"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621355818912b45d36a3b82",
    "number": 2102,
    "body": "fix @return tag\n",
    "head_branch": "patch-5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621355918912b45d36a3b83",
    "number": 2101,
    "body": "",
    "head_branch": "1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge e295815ad72fbf91e892fa8dbb79bdb3a24207db into 4ba9eee64a099be78ae5b553e9669b9107a228b5"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621355a18912b45d36a3b84",
    "number": 2099,
    "body": "",
    "head_branch": "1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621355b18912b45d36a3b85",
    "number": 2094,
    "body": "Fix #1999\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621355c18912b45d36a3b86",
    "number": 2093,
    "body": "",
    "head_branch": "1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621355d18912b45d36a3b87",
    "number": 2092,
    "body": "This tests direct value modifications in the session bag as described in #2091\n",
    "head_branch": "1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621355e18912b45d36a3b88",
    "number": 2087,
    "body": "",
    "head_branch": "1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge f9982458d29f52653ad4297844b58a85c70f02e7 into e75216f3e34575dd6f1219d85dc7aaa1c4065909"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621355f18912b45d36a3b89",
    "number": 2086,
    "body": "See #2085\n",
    "head_branch": "1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge b2cafd6e5d85c4cc31d9db73ce3901603a7dd7d6 into 45e4acbd8b8b564b764d50a4237d9728aaf961b6"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621356118912b45d36a3b8a",
    "number": 2084,
    "body": "See #2081\n",
    "head_branch": "1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621356218912b45d36a3b8b",
    "number": 2080,
    "body": "See #2044\n",
    "head_branch": "issue-2044",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621356318912b45d36a3b8c",
    "number": 2079,
    "body": "",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 597c0d127688dbc5f9dd7ed6247dd92486dc8e51 into 2cc70033ad85a333a016689cfc5eac2a547bfe9b"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621356418912b45d36a3b8d",
    "number": 2078,
    "body": "",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621356518912b45d36a3b8e",
    "number": 2077,
    "body": "See #2071\n",
    "head_branch": "issue-2071",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621356618912b45d36a3b8f",
    "number": 2076,
    "body": "",
    "head_branch": "router_typo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621356718912b45d36a3b90",
    "number": 2075,
    "body": "See #1550\n",
    "head_branch": "memcached",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge b3cf092e78206b558f331cff5c0c8d96a411b617 into b6bfa194d153d64b29479c1ada337d33c0812220"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621356918912b45d36a3b91",
    "number": 2074,
    "body": "This PR shoudn't be merged until Travis won't be fixed\n",
    "head_branch": "2.0.0-Travis-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621356a18912b45d36a3b92",
    "number": 2073,
    "body": "Quick update of tests enabled in stable phpunit testsuite\n",
    "head_branch": "2.0.0-unit-tests-21-02-2014",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 7de5e787a483cc5f37814add11d3b965afe87883 into d4f9a300172e0a8dafbb646b1805321cb1ff98d7"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621356b18912b45d36a3b93",
    "number": 2072,
    "body": "This is the final part of function/method call optimization commit series.\n\nMain changes:\n- all function/method call now use `return_value_ptr` instead of `return_value`: this greatly allowed to reduce the number of memory allocations (the old approach with `PHALCON_INIT_VAR` + `phalcon_call_method` required one extra memory allocation and deallocation which is gone now);\n- greatly reduced the number of macros in `kernel/fcall.h`: for example, `PHALCON_CALL_METHOD()` macro can accept any number of parameters and thus there is no need to have `phalcon_call_method_pXXX` macros;\n- implemented smart function/method caching which allows to cache both userland and internal functions. This allowed to get rid of `kernel/alt/fcall.c` (the same optimizations are applied to all kinds of functions) and gives at least +20 rps with the concurrency level of 256 on the smallest DigitalOcean instance;\n  - PHALCON_CALL family of macros automatically observes the return values thus there is no need to call `PHALCON_OBS_VAR()` on the return value anymore;\n  - the change resulted in ~2000 deleted lines of code.\n\nBonuses:\n- fix memory leaks;\n- fix bugs in the unit tests\n",
    "head_branch": "fcall-opt",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 548610c32ea7519a40c3ed30815ae511965aa57a into e0d56391814801a4ac5abf25f7eb48e750736a01"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621356c18912b45d36a3b94",
    "number": 2067,
    "body": "Hi,\n\nAs before - please do NOT merge this ticket as I will be adding commits to it.\n\nThanks,\n\nKamil\n",
    "head_branch": "2.0.0-unit-tests-again",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621356d18912b45d36a3b95",
    "number": 2063,
    "body": "",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621356e18912b45d36a3b96",
    "number": 2061,
    "body": "Hi,\n\n@phalcon - please do not merge this PR yet. I would like to keep it open as I will add changes to it.\n\nThanks in advance,\n\nKamil\n",
    "head_branch": "2.0.0-unit-tests-fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621356f18912b45d36a3b97",
    "number": 2059,
    "body": "",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621357018912b45d36a3b98",
    "number": 2057,
    "body": "Stable testsuite to be hopefully always run successfully.\n",
    "head_branch": "2.0.0-phpunit-xml",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 705ae00f3cf18d379afdb120edc5bd1df4770831 into 3cfa86f566493dd849d1273f42658edf17349d3e"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621357118912b45d36a3b99",
    "number": 2054,
    "body": "See https://github.com/phalcon/cphalcon/issues/2002\n\n``` php\necho Phalcon\\Tag::linkTo(array('signup/register', 'Register Here!', 'query' => array('a' => 1, 'b' => 2)))\n```\n\n``` output\n<a href=\"/signup/register?a=1&b2\">Register Here!</a>\n```\n",
    "head_branch": "nfr2002",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621357218912b45d36a3b9a",
    "number": 2053,
    "body": "Small fix\n",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge e687afb3f33fcf6615bc91048b9630f9126cd6eb into ef37a9377ada53b474f28ef69cb1033677b070a2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621357418912b45d36a3b9b",
    "number": 2051,
    "body": "Namespaces fixes to successfully pass generate step for 2.0.0 branch\n\nPS. @phalcon  - is there any chance that 2.0.0 branch will be fully compilable? I remember that we had some conversation that it would be nice if new changes would be checked before merging? That would help people to contribute/update/fix.\n\nThanks in advance.\n\nKamil\n",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 505c6144b467d060b705049f020342e33cb0243f into c698af327f3fd3a95d4672e9572c53da2f89757e"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621357518912b45d36a3b9c",
    "number": 2049,
    "body": "See #2047\n",
    "head_branch": "issue-2047",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 73e7214cb1956c3de50ca1370c2d7c842b6adf73 into 78a19952726198667a1976211839b5125ac2a212"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621357618912b45d36a3b9d",
    "number": 2038,
    "body": "",
    "head_branch": "1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 63c9ddb9ab10bb88a8befb32fc052637f9e677bb into b63c263d8526823d5d2cde1efdffc3cdb419b48a"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621357718912b45d36a3b9e",
    "number": 2036,
    "body": "",
    "head_branch": "1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 0291ad56badad65c45f9bc1b96f5641d2a863273 into 17f73155cfef6d3fda7a2040baa6b65f5cdb40db"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621357818912b45d36a3b9f",
    "number": 2035,
    "body": "",
    "head_branch": "cleanup-diinterface",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 682df4a9ac71ea76e8a029fc7adab2681392a2f1 into 41797564b74a5f72ea459c2f2098f1ff1936f6dc"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621357918912b45d36a3ba0",
    "number": 2034,
    "body": "!!! The below affects only `Phalcon\\DiInterface`, no changes were made to `Phalcon\\DI` itself.\n- Remove `setShared()` method because it is a shorthand for `set($name, $definition, true)`;\n- Remove `attempt()` method because it is a shorthand for `has()` + `set()`\n- Rename `setRaw()` to `setService()` because `getRaw()` is actually `getService()` + `$service->getDefinition()`\n- Remove `getRaw()` because it is `getService()` + `$service->getDefinition()`\n- Modify `setService($name, $raw_definition)` to `setService($raw_definition)` because service name can be retrieved from the definition.\n\nThis results in\n\n``` php\ninterface DiInterface\n{\n    public function set($name, $definiton, $shared = null);\n    public function remove($name);\n    public function get($name, $parameters = null);\n    public function getShared($name, $parameters = null);\n    public function getService($name);\n    public function setService($raw_definition);\n    public function has($name);\n    public function wasFreshInstance();\n    public function getServices();\n    public static function setDefault($dependency_injector);\n    public static function getDefault();\n    public static function reset();\n}\n```\n",
    "head_branch": "cleanup-diinterface",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge fa5e329efa489ebd079bc0ca0c02905884bded2e into c47318016241ae4517a3133095b37a64576bb597"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621357a18912b45d36a3ba1",
    "number": 2030,
    "body": "See #1971\n",
    "head_branch": "issue-1971",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge acdc2af71aa3f446d43060afb5417f64b8a45339 into 69b3de18601f715859aaa6bdf998bcc987a82347"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621357b18912b45d36a3ba2",
    "number": 2029,
    "body": "",
    "head_branch": "http_response",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge c983baec68b91b32cdb7a3e1e1f9eeb40a6005b0 into ae8476944816c333b016ec165f7e9e43a7589c70"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621357c18912b45d36a3ba3",
    "number": 2026,
    "body": "- fix optimizers\n- fix Image class\n- build sources\n",
    "head_branch": "fix_critical_for_build",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621357f18912b45d36a3ba4",
    "number": 2025,
    "body": "",
    "head_branch": "fix_critical_for_build",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621358018912b45d36a3ba5",
    "number": 2024,
    "body": "",
    "head_branch": "fix_critical_for_build",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621358218912b45d36a3ba6",
    "number": 2022,
    "body": "Not sure if this is the best way of doing it but without this fix build fails with the fallowing fatal error\n\n```\next\\phalcon\\phalcon.c(2353) : fatal error C1083: Cannot open include file: 'main/php_config.h': No such file or directory\n```\n",
    "head_branch": "1.3.0-include-issue",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 303fd00987e2f780ad40b37d72de460385ec3b32 into b1d0b3b4ff113d5bb2679ee674b6d21d2041104e"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621358318912b45d36a3ba7",
    "number": 2017,
    "body": "fix params type\n",
    "head_branch": "patch-5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 987f065b99034e682bb7460d2556abed356a879a into 85d94236929e36d211ac78487889bae272c51f62"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621358418912b45d36a3ba8",
    "number": 2014,
    "body": "See #1999\n",
    "head_branch": "issue-1999",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621358518912b45d36a3ba9",
    "number": 2007,
    "body": "See #1998\n",
    "head_branch": "issue-1998",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621358618912b45d36a3baa",
    "number": 2006,
    "body": "",
    "head_branch": "scan-build",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 1fcf6d22c3383d36090a3a8ea97ae7f9358cf089 into 003be7cca620e38ca86aa7f6de6b1cb648c5a9b1"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621358718912b45d36a3bab",
    "number": 2005,
    "body": "See phalcon/zephir@5d20f31e3b9d7afe3203922b6506345716dcec06\n",
    "head_branch": "valgrind-setlocale",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621358818912b45d36a3bac",
    "number": 2004,
    "body": "Rationale:\n- classes are instantiated by the user (unless this is a specific class that Phalcon instantiates) and we don't care what parameters the constructor accepts (the user cares about that), therefore there is no reason for us to have constructors in the interface definitions;\n- magic methods are not called by Phalcon, therefore we should not require that they be present in the definition\n",
    "head_branch": "interfaces",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621358918912b45d36a3bad",
    "number": 2003,
    "body": "- Remove not used code\n- Add `const` where appropriate\n- Annotate parameters as `not NULL` where appropriate to help static code analyzers find possible bugs\n- Move helper functions to `object.h` and make them inline\n",
    "head_branch": "obj-opt",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621358a18912b45d36a3bae",
    "number": 1996,
    "body": "",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 0bb92a7c9eb68661cd2e4b11e5f24fff36ed0f90 into f94b1a43f23e9c429f67dab69c5f1ee399511951"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621358b18912b45d36a3baf",
    "number": 1994,
    "body": "- Fix invalid memory read in Phalcon\\Mvc\\Router\\Group\n- Fix crashes under valgrind when Zend MM is used\n- Double the number of preallocated frames (based on the longest execution path)\n- More sanity checks for the debug mode\n",
    "head_branch": "1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge c823e4a2148c952aa006bb058aefa648520d4474 into e7b6c419f0d1be8abe6cf387c23dbc8675c53f21"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621358c18912b45d36a3bb0",
    "number": 1993,
    "body": "",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 753ac1b6e1684055d1da6a76dd192b7ac2801f60 into 503e4de3c63aa4b21b2b535721e6e1f810aee3c5"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621358d18912b45d36a3bb1",
    "number": 1990,
    "body": "fix @return value\n",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 0f2d22a5f69dceb8713e0e73a6edae480ff9971b into c7b8a0be5e5a85b6373d0f556dd0756eea02c3bd"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621358f18912b45d36a3bb2",
    "number": 1988,
    "body": "",
    "head_branch": "linkto",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621359018912b45d36a3bb3",
    "number": 1987,
    "body": "Currently Phalcon preallocates one global memory frame that persists across requests. This PR changes this behavior by preallocating 10 memory frames (in one chunk). This results in fewer memory allocations during request processing.\n\n**Valgrind stats** (`USE_ZEND_ALLOC=0 valgrind $(phpenv which php) /usr/bin/phpunit -c unit-tests/phpunit.xml`)\n- **before:** total heap usage: 7,551,361 allocs, 7,547,627 frees, 869,478,218 bytes allocated\n- **after:** total heap usage: 7,453,755 allocs, 7,450,068 frees, 859,840,913 bytes allocated\n\n97.5k less memory allocations (this is not the cheapest operation), 9.1 MiB reused.\n",
    "head_branch": "memory-opt",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621359118912b45d36a3bb4",
    "number": 1985,
    "body": "",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 26cf5189c01f38bb00fa9f0024292896ba696bb0 into 40237c4b7f27844e5e18424ea7ce2645de3e4572"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621359218912b45d36a3bb5",
    "number": 1984,
    "body": "",
    "head_branch": "issue-1983",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge c12d4e6274926f50bf2565de01ae788c786fcbd2 into c614d87260382e51d153d7653d9841563426619b"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621359318912b45d36a3bb6",
    "number": 1982,
    "body": "",
    "head_branch": "1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621359418912b45d36a3bb7",
    "number": 1979,
    "body": "",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 08cf02872581472f5277e5678dfb8bda8215f8e4 into 43ae966ab85afc8b4db54803f65b07988d804161"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621359518912b45d36a3bb8",
    "number": 1978,
    "body": "...rmissions\n",
    "head_branch": "1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge a22717d43213e27f41b0423d319e9d24312921f2 into 0f5fb9acb7d6818a6b102ce37c0a25a728de3a7d"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621359618912b45d36a3bb9",
    "number": 1973,
    "body": "See #1886 — this one is the corrected PR and targeted at 1.3.0 branch\n",
    "head_branch": "issue-1886",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge b537a2279d37572020ff9f5f0285b233ea4a5f0a into bf1651c0088d471b90da0bfbf42a18d576d77cb6"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621359718912b45d36a3bba",
    "number": 1972,
    "body": "",
    "head_branch": "array-opt",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621359818912b45d36a3bbb",
    "number": 1968,
    "body": "\\Phalcon\\Validation\\Message must has been meant.\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621359a18912b45d36a3bbc",
    "number": 1967,
    "body": "",
    "head_branch": "1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621359b18912b45d36a3bbd",
    "number": 1966,
    "body": "Fix #1938, #1961; reverts #1078.\n\nBonuses:\n- Relaxed the requirement for the route to start with a slash (see https://github.com/phalcon/cphalcon/blob/1.3.0/ext/kernel/framework/router.c#L175 and @xboston 's [test](https://github.com/phalcon/cphalcon/issues/1938#issuecomment-33894753))\n- Merge slashes when prefix ends and pattern starts with a slash (`$this->setPrefix('/test-class/')->add('/test/{id:\\d}')` will result in `/test-class/test/1`, not `/test-class//test/1`)\n",
    "head_branch": "issue-1938",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge eed33fd7a94d340acad706f2c372affabcb8a9d5 into 8a1a504ba1e590beb2a3cea9c563a4d73e4691a8"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621359c18912b45d36a3bbe",
    "number": 1965,
    "body": "",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 64ccd99d2da7496c7c659612e84a7d6a6f6194b7 into 9ea158a49938295d6511078ee2fe8efcb37276bf"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621359d18912b45d36a3bbf",
    "number": 1958,
    "body": "See #1955\n",
    "head_branch": "issue-1955",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621359e18912b45d36a3bc0",
    "number": 1957,
    "body": "",
    "head_branch": "reflection",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621359f18912b45d36a3bc1",
    "number": 1956,
    "body": "",
    "head_branch": "1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662135a018912b45d36a3bc2",
    "number": 1954,
    "body": "phalcon.php has now -r-xr-xr-x permissions on root, after installing the user should do\n`sudo chown {user}.{user} ~/.phalcon/phalcon-devtools/phalcon.php`\n`sudo chown {user}.{user} /usr/bin/phalcon`\nso he/she can execute the command phalcon without sudo\n",
    "head_branch": "1.2.5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662135a118912b45d36a3bc3",
    "number": 1952,
    "body": "See #1801, #1934\n",
    "head_branch": "issue-1934",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 3accbe9049887bfd739975775911cc28f0128db0 into 5e7f0f042ae337991673323c9518b176c0ec586d"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662135a218912b45d36a3bc4",
    "number": 1951,
    "body": "",
    "head_branch": "phalcon_require",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge a2b6f388c74ee135a75ebdb718ad144a9a42a7b3 into 90a56f4affbe53fd23a4bf2e902d4d80dad3a91d"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662135a318912b45d36a3bc5",
    "number": 1944,
    "body": "See #1868\n",
    "head_branch": "issue-1868",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662135a418912b45d36a3bc6",
    "number": 1943,
    "body": "StringLength validator did not return error code on maximum length violation\n",
    "head_branch": "1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662135a518912b45d36a3bc7",
    "number": 1942,
    "body": "See #1182\n",
    "head_branch": "issue-1182",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge f844cd290d65948676ce81066a1a258eacd964ed into 747a8470b1d3bddcbad8fcec26b7fa0015b3d483"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662135a618912b45d36a3bc8",
    "number": 1941,
    "body": "See #886\n",
    "head_branch": "issue-886",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662135a718912b45d36a3bc9",
    "number": 1940,
    "body": "See https://github.com/phalcon/cphalcon/issues/1011#issuecomment-22564422\n\nThis allows to skip `Phalcon\\Db\\Column::BIND_PARAM_INT` for the parameters bound to LIMIT clause.\n",
    "head_branch": "issue-1011",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662135a818912b45d36a3bca",
    "number": 1939,
    "body": "",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge bd238e3f54de7c8071579beb9330c52d6d03a548 into 920769b5f9f362ec164ec36168de4031f41e9549"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662135a918912b45d36a3bcb",
    "number": 1935,
    "body": "See #1209\n\nA registry is a container for storing objects and values in the application space. By storing the value in a registry, the same object is always available throughout the application.\n\nIn addition to ArrayAccess, Phalcon\\Registry implements ArrayAccess, Countable, Serializable and Iterator interfaces. For PHP 5.4 and higher, JsonSerializable interface is implemented.\n\nPhalcon\\Registry is very fast (it is typically faster than any userspace implementation of the registry); however, this comes at a price: Phalcon\\Registry is a final class and cannot be inherited from.\n\nThough Phalcon\\Registry exposes methods like `__get()`, `offsetGet()`, `count()` etc, it is not recommended to invoke them manually (these method exists mainly to match the interfaces the registry implements): `$registry->__get('property')` is several times slower than `$registry->property`.\n\nInternally all the magic methods (and interfaces except JsonSerializable) are implemented using object handlers or similar techniques: this allows to bypass relatively slow method calls.\n",
    "head_branch": "registry",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662135aa18912b45d36a3bcc",
    "number": 1929,
    "body": "See #1905\n",
    "head_branch": "issue-1905",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662135ac18912b45d36a3bcd",
    "number": 1928,
    "body": "Also references specific issue #1895  \n",
    "head_branch": "1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662135ad18912b45d36a3bce",
    "number": 1927,
    "body": "See #1904\n",
    "head_branch": "issue-1904",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662135ae18912b45d36a3bcf",
    "number": 1926,
    "body": "",
    "head_branch": "1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge f2782a3d19bb045b820d16a8c88a2ed2fdcc5845 into 1ec94a47d842dbce97ba5185a053f46af25e81de"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662135af18912b45d36a3bd0",
    "number": 1920,
    "body": "See #1919\n",
    "head_branch": "issue-1919",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662135b018912b45d36a3bd1",
    "number": 1918,
    "body": "",
    "head_branch": "version_constants",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662135b118912b45d36a3bd2",
    "number": 1917,
    "body": "Phalcon Kernel:\n- fix `phalcon_hash_get()` when type is `BP_VAR_RW` or `BP_VAR_W`;\n- `null` offset passed to `phalcon_update_property_array()` appends a new element;\n- added `object_properties_init()` for PHP 5.3\n\nPhalcon\\Session\\BagInterface:\n- added `remove()` method to the interface\n\nPhalcon\\Session\\Adapter:\n- implements ArrayAccess, Countable, IteratorAggregate\n- optimized using object handlers\n- __get() and offsetGet() return values by reference to allow indirect modification (see #1895)\n\nPhalcon\\Session\\Bag:\n- implements ArrayAccess, Countable, IteratorAggregate\n- __get() and offsetGet() return values by reference to allow indirect modification (see #1895)\n",
    "head_branch": "issue-1895",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662135b218912b45d36a3bd3",
    "number": 1916,
    "body": "",
    "head_branch": "1.2.6",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662135b418912b45d36a3bd4",
    "number": 1915,
    "body": "",
    "head_branch": "1.2.6",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 78380417811e60497a348f92e74d125ea7f4f1af into 964552d8a32d5b7a26256003040abd9e45855b2d"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662135b518912b45d36a3bd5",
    "number": 1914,
    "body": "",
    "head_branch": "issue-1912",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 22c23913cbd9c8f83f41bd7b1b8363ccdc4e6873 into 626f01b13d4dceeef0511e12fa832a12049a048b"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662135b618912b45d36a3bd6",
    "number": 1913,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662135b718912b45d36a3bd7",
    "number": 1910,
    "body": "info: https://github.com/GregOriol/phalcon-devtools/commit/400ed6bdeb02ad219c55743b98651881f6c32321\n",
    "head_branch": "patch-5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662135b818912b45d36a3bd8",
    "number": 1909,
    "body": "Info: https://github.com/phalcon/phalcon-devtools/pull/167\n",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662135b918912b45d36a3bd9",
    "number": 1901,
    "body": "",
    "head_branch": "1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 060c8ce10562e45dc6cac60c571f19a1cdd267b0 into 626f01b13d4dceeef0511e12fa832a12049a048b"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662135ba18912b45d36a3bda",
    "number": 1900,
    "body": "Because almost all bases on Router::getRouteByName (for example Url plugin in\nviews) it is a bottleneck in a\napplication with bigger set of routes. Each time when Router::getRouteByName\nwon't find a route in a lookput table, it will try to generate this\ntable.\n\nI know it's not the cleaniest solution and it can be improved. The best way would be requiring to define a route name while adding it to router. Also weren't if merge was correct (based on code from master) because branch 1.3.0 does not compile.\n",
    "head_branch": "1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 66b6120bfe5e998ece8b359e10915206e1dd0cdc into 5809b6ee90606fb4bf5cbcd2f8801a083c4a5bd5"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662135be18912b45d36a3bdb",
    "number": 1899,
    "body": "",
    "head_branch": "performance-router-getbyname",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662135bf18912b45d36a3bdc",
    "number": 1898,
    "body": "Because almost all bases on `Router::getRouteByName` (for example Url plugin in\nviews) it is a bottleneck in a\napplication with bigger set of routes. Each time when `Router::getRouteByName`\nwon't find a route in a lookput table, it will try to generate this\ntable.\n\nI know it's not the cleaniest solution and it can be improved. The best way would be requiring to define a route name while adding it to router.\n",
    "head_branch": "performance-router-getbyname",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662135c018912b45d36a3bdd",
    "number": 1897,
    "body": "Because almost all bases on `Router::getRouteByName` (for example Url plugin in\nviews) it is a bottleneck in a\napplication with bigger set of routes. Each time when getRouteByName\nwon't find a route in a lookput table, it will try to generate this\ntable.\n\nI know it's not the cleaniest solution and it can be improved. The best way would be requiring to define a route name while adding it to router.\n",
    "head_branch": "performance-router-getbyname",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662135c118912b45d36a3bde",
    "number": 1894,
    "body": "Hi\n\nI found that by calling:\n\n`$response->setStatusCode(200, 'OK');\n   $response->setStatusCode('404', 'NotFound');\n   $response->setStatusCode('409', 'Conflict');`\n\nPhalcon\\Response will `setRaw` 3 HTTP headers (which are invalid response). Code here:\nhttps://github.com/phalcon/cphalcon/blob/1.3.0/ext/http/response.c#L250\n\nThere's some problem with that code - could somebody please give me a hand?\n\nThanks in advance,\n\nKamil\n",
    "head_branch": "1.3.0-http-update",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662135c218912b45d36a3bdf",
    "number": 1888,
    "body": "When `phalcon.register_psr3_classes` php.ini option is set, the following things are registered:\n- interfaces:\n  - Psr\\Log\\LoggerAwareInterface\n  - Psr\\Log\\LoggerInterface\n- classes:\n  - Psr\\Log\\AbstractLogger\n  - Psr\\Log\\InvalidArgumentException\n  - Psr\\Log\\LogLevel\n  - Psr\\Log\\NullLogger\n- traits (only for PHP 5.4+):\n  - Psr\\Log\\LoggerAwareTrait\n  - Psr\\Log\\LoggerTrait\n\nPlus, if PHP is 5.3.9 or newer, Phalcon\\Logger\\Adapter implements Psr\\Log\\LoggerInterface. Also, Adapter and derived classes may throw Psr\\Log\\InvalidArgumentException instead of Phalcon\\Logger\\Exception when the input arguments are not valid.\n",
    "head_branch": "psr-3-logger",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662135c318912b45d36a3be0",
    "number": 1886,
    "body": "http://docs.phalconphp.com/en/latest/reference/models-cache.html#caching-resultsets\n\nI found the 'lifetime' option for using models cache at this reference.\nHowever, the 'lifetime' option does not work.\nSo I propose to use this change, or fix reference.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662135c418912b45d36a3be1",
    "number": 1884,
    "body": "- fix tag.zep file\n- fix CssMinOptimizer and JsMinOptimizer\n",
    "head_branch": "fix_build_2.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge d106f0050a80e12885d384b6f5e360f612e83ba4 into 66be9382e0cc3fdc220f80c5dabada03b1cb7859"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662135c518912b45d36a3be2",
    "number": 1880,
    "body": "See #1078\n",
    "head_branch": "issue-1078",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge bde144404f29d141c4cdd74f0ae0ef0857d6569e into 4ffebd2512bae15a9293deb4a2e7a175f1c21e7b"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662135c618912b45d36a3be3",
    "number": 1873,
    "body": "This includes:\n- all debug/warning/etc methods accept optional $context parameter (`array $context = array()`)\n- log() method has its arguments backwards: first $level, then $message. We can accept both this and the old way\n- Psr\\Log\\LogLevel constants are string, therefore our methods accept both string and integer values\n",
    "head_branch": "psr-3-logger",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662135c918912b45d36a3be4",
    "number": 1871,
    "body": "",
    "head_branch": "1.2.6",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 05bcd0c6548fd9256ef78cd3fe51150a774dc436 into ca7a9609d15cd2b66aa9ac177f281c1efa3d106a"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662135ca18912b45d36a3be5",
    "number": 1866,
    "body": "See #1864\n",
    "head_branch": "issue-1864",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662135cd18912b45d36a3be6",
    "number": 1865,
    "body": "",
    "head_branch": "compiler-errors",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 8a647db573b64cf15fdb306e9e929df415a60a29 into 94db605a7862ee39e9467cf199aeb7e52f032998"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662135ce18912b45d36a3be7",
    "number": 1859,
    "body": "Similar to #1846\n",
    "head_branch": "fcall-opt",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 01a77d64fb880c9ce664a8b8e633f9a0dc7c8c6f into 95b82346ff30cf787f95df600df992fb750685d4"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662135d218912b45d36a3be8",
    "number": 1858,
    "body": "",
    "head_branch": "Codeception",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662135d318912b45d36a3be9",
    "number": 1853,
    "body": "See #1852\n",
    "head_branch": "issue-1852",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge f1cba545c61ceac496c5f7acf8d36865419239a8 into d3b3d36718f911a14f515dacac8c26328f2f9737"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662135d418912b45d36a3bea",
    "number": 1850,
    "body": "See #1849\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662135d518912b45d36a3beb",
    "number": 1847,
    "body": "",
    "head_branch": "1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 74f52419dfff0a7e30963771687d4675a97dc011 into f8b581f16bf837e9cd225297c86f584bdd5486e8"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662135d618912b45d36a3bec",
    "number": 1846,
    "body": "phalcon_call_user_function():\n- make use of `zend_fcall_info_cache` to avoid expensive `zend_is_callable()` checks\n- use `return_value_ptr` instead of `return_value` to enable return value optimization\n\nAdded `phalcon_call_func_aparams`:\n\n``` c\nint phalcon_call_func_aparams(zval **return_value_ptr, const char *func_name, uint func_length, uint param_count, zval **params TSRMLS_DC)\n```\n\nUnlike `phalcon_call_func_params` it uses `zval**` (**a**rray) to pass the parameters and not variadic arguments (functions with  variadic arguments cannot be inlined)\n\nPHALCON_CALL_FUNCTION:\n- use `phalcon_call_func_params` instead of `phalcon_call_func_params`\n- drop `return_value` (this makes `phalcon_call_func_pXXX_ex` and `phalcon_call_func_pXXX` behave identically)\n- drop `nparams` because the number of function arguments is calculated automatically\n- do not pass extra `NULL` when the called function does not need any arguments\n- use `RETURN_ON_FAILURE` macros\n\nPHALCON_CALL_xxx macros:\n- merged GNU and non-GNU versions of macros (for gcc-incompatible compilers `__builtin_constant_p(s)` is `#define`'d to 0)\n\nNow that `PHALCON_CALL_FUNCTION()` macro can detect the number of function arguments automatically, we don't need `phalcon_call_func_pXXX`, `phalcon_return_call_func_pXXX`, `phalcon_call_func_pXXX_noret`, `phalcon_call_func_pXXX_ex` macros — they all have been replaced with `PHALCON_CALL_FUNCTION`\n\nOther things:\n- added `phalcon_return_call_function()` inline function which is used when the return value of the called function is passed directly into `return_value` and `return_value_ptr`. The function is useful when you need to do a cleanup on exception or call failure before returning;\n- added `PHALCON_CALL_FUNCTIONW()` and `PHALCON_RETURN_CALL_FUNCTIONW()` which do the same as `PHALCON_CALL_FUNCTION()` and `PHALCON_RETURN_CALL_FUNCTION()` but do not restore the memory frame;\n- added `__attribute__((warn_unused_result))` to all `phalcon_call_xxx` functions, as failure to check the result of the call may lead to unexpected things\n\nHow it breaks the API:\n\nUsed to be:\n\n``` c\nPHALCON_INIT_VAR(result);\nphalcon_call_func_p1(result, \"function\", parameter);\n```\n\nNow:\n\n``` c\nPHALCON_OBS_VAR(result);\nPHALCON_CALL_FUNCTION(&result, \"function\", parameter)\n```\n\nAdvantages:\n- less memory allocations (`return_value` is now allocated by Zend; used to be: allocated by Phalcon, desstroyed by Zend, reallocated by Zend)\n- less code\n- faster function calls due to `zend_fcall_info_cache`\n",
    "head_branch": "fcall-opt",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 60f6e50136eaaea9ccaf9338afab8de23045daab into c069990620363b57fc4ee64196fbb50ed7d044c3"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662135d718912b45d36a3bed",
    "number": 1842,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662135d818912b45d36a3bee",
    "number": 1836,
    "body": "I tried to run UTs and figure out that there was missing part which I added.\n\nPS. Every first time when I compile I'm getting segfault, then when I run compile second time(without changing the code) works fine.\n",
    "head_branch": "2.0.0-random-updates-ut-related",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 39f83427e119e49a6f34f777ffba7cc866314ed8 into 6e378cbd2377e5a3de9c13fb19fb50986aa7d73d"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662135d918912b45d36a3bef",
    "number": 1834,
    "body": "See #1483\n",
    "head_branch": "issue-1483",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662135db18912b45d36a3bf0",
    "number": 1831,
    "body": "See #1828\n",
    "head_branch": "issue-1828",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662135dc18912b45d36a3bf1",
    "number": 1830,
    "body": "",
    "head_branch": "1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge de6ddcf9196ebd5879c7d349897d82efe8e7e009 into 9d839423eebfa02d8ed101a0baf7ecf8f6662762"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662135dd18912b45d36a3bf2",
    "number": 1829,
    "body": "This is a hack but it works: before we register our classes, we call `setlocale(LC_ALL, \"C\");` — this will make sure that all Phalcon classes and methods will be lowercased the way we expect it. After that we restore the original locale.\n\nThe next step is to make sure that we always use lowercased names when we invoke Phalcon methods.\n",
    "head_branch": "1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge d742ebfbca9a41cc6ac8b7e903de77b4df1fba36 into d5dbce234164760174ef1ceea1fe30fbb843859e"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662135de18912b45d36a3bf3",
    "number": 1825,
    "body": "Right now Phalcon's function cache is per-request. This PR makes the cache global and allows it to survive across requests giving performance boost :-)\n",
    "head_branch": "persistent-fcall-cache",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662135df18912b45d36a3bf4",
    "number": 1823,
    "body": "Use `is_phalcon_class()` function introduced earlier to detect Phalcon classes instead of less reliable `Z_OBJCE_P(object)->type == ZEND_INTERNAL_CLASS`.\n\n`is_phalcon_class()` is used mainly to avoid expensive function calls and use much faster native functions.\n",
    "head_branch": "is_phalcon_class",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 212be718661078faeeab11990946f2be730bb3df into a0ca0c31279b261c11507c190306b6eb8d112c7b"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662135e118912b45d36a3bf5",
    "number": 1822,
    "body": "Files from 1.3.0 were appended to build/ by accident and this broke builds\n",
    "head_branch": "1.2.5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge ac54b06cd77911d6caa46b3c7aedd36434b51ed5 into 059b2e03958598e5b527ac9779617aed99d1adcb"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662135e218912b45d36a3bf6",
    "number": 1821,
    "body": "Files from 1.3.0 were appended to build/ by accident and this broke builds\n",
    "head_branch": "1.2.5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge ac54b06cd77911d6caa46b3c7aedd36434b51ed5 into 2c5bf9fd432d39b0dec3acd51d1919af94a5d159"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662135e518912b45d36a3bf7",
    "number": 1820,
    "body": "Right now \\Phalcon\\Version::get() shows 1.2.5 BETA 1.\n",
    "head_branch": "1.2.5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 4c90b3ac9f027496c5276b4f22fdbec3570691ab into f31c1682f147343eb08bbcc847452541e6552097"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662135e818912b45d36a3bf8",
    "number": 1819,
    "body": "Right now \\Phalcon\\Version::get() shows 1.2.5 BETA 1.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge c49e813a23698c79658a75624eb881c4705ddf67 into 45aafb0826ef803849f5cc769f373da4ca52ceb5"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662135eb18912b45d36a3bf9",
    "number": 1818,
    "body": "Right now \\Phalcon\\Version::get() says 1.2.5 BETA 1.\n",
    "head_branch": "1.2.5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662135ec18912b45d36a3bfa",
    "number": 1814,
    "body": "This one mainly adds support for default messages, \"allowEmpty\" option and optimizations.\n",
    "head_branch": "validators",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 17e604bb3a87fda08f8284adc4ce8098fd0dee76 into 2e0dbd2378b1857e12ddde482892612fc6536bde"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662135ed18912b45d36a3bfb",
    "number": 1813,
    "body": "\"Options\", not \"Attribute\" and \"array\", not \"string\"\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge be0b9f6fcd4d401b23778d4f4f682d1c5ac60859 into 50db0e90286fdf5e5016b5222a213c037b081b5b"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662135f118912b45d36a3bfc",
    "number": 1812,
    "body": "",
    "head_branch": "1.2.5",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge f31c1682f147343eb08bbcc847452541e6552097 into 97201ea8a0f148b9642dc0e079fa976d1442997d"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662135f218912b45d36a3bfd",
    "number": 1811,
    "body": "",
    "head_branch": "interned-strings",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 8a4df47a8b6622ed106cf5fa232e9b71fb33bc01 into a0532132fa9ba935a1305c53480361f89ac3aa7d"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662135f318912b45d36a3bfe",
    "number": 1808,
    "body": "I found a problem with `install` script:\n\n```\n/root/php/cphalcon/build/64bits/libtool: line 482: CDPATH: command not found\nlibtool: Version mismatch error.  This is libtool 2.4.2, but the\nlibtool: definition of this LT_INIT comes from an older release.\nlibtool: You should recreate aclocal.m4 with macros from libtool 2.4.2\nlibtool: and run autoconf again.\n```\n\nSolution is running `aclocal`, `libtoolize`, `autoheader` and `autoreconf` before running `configure` and `make`. I found that similar lines was added to `travis-install` some time ago. So I used it here to fix problem.\n\nAs requested branch 1.2.5.\n",
    "head_branch": "1.2.5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662135f418912b45d36a3bff",
    "number": 1807,
    "body": "I found a problem with `install` script:\n\n```\n/root/php/cphalcon/build/64bits/libtool: line 482: CDPATH: command not found\nlibtool: Version mismatch error.  This is libtool 2.4.2, but the\nlibtool: definition of this LT_INIT comes from an older release.\nlibtool: You should recreate aclocal.m4 with macros from libtool 2.4.2\nlibtool: and run autoconf again.\n```\n\nSolution is running `aclocal`, `libtoolize`, `autoheader` and `autoreconf` before running `configure` and `make`. I found that similar lines was added to `travis-install` some time ago. So I used it here to fix problem.\n\nAs requested branch 1.3.0.\n",
    "head_branch": "1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662135f518912b45d36a3c00",
    "number": 1805,
    "body": "I found a problem with `install` script:\n\n```\n/root/php/cphalcon/build/64bits/libtool: line 482: CDPATH: command not found\nlibtool: Version mismatch error.  This is libtool 2.4.2, but the\nlibtool: definition of this LT_INIT comes from an older release.\nlibtool: You should recreate aclocal.m4 with macros from libtool 2.4.2\nlibtool: and run autoconf again.\n```\n\nSolution is running `aclocal`, `libtoolize`, `autoheader` and `autoreconf` before running `configure` and `make`. I found that similar lines was added to `travis-install` some time ago. So I used it here to fix problem.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662135f618912b45d36a3c01",
    "number": 1802,
    "body": "See #1681\n",
    "head_branch": "issue-1681",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662135f718912b45d36a3c02",
    "number": 1799,
    "body": "See #1763\n",
    "head_branch": "issue-1763",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662135f818912b45d36a3c03",
    "number": 1798,
    "body": "See #1783\n",
    "head_branch": "issue-1783",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 25a6a6ad317ea416287231248c1980e5f288b42e into a659ac7ca03bb6bdde540f248f49e6e61ee723aa"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662135f918912b45d36a3c04",
    "number": 1797,
    "body": "See #1783\n",
    "head_branch": "1.2.5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 8ff66b837d2463b1fbdbe4e96aee69ced51f7dd0 into ecc36aad3e782511a53b78f69591e144724f9424"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662135fa18912b45d36a3c05",
    "number": 1796,
    "body": "ie,\n\n```\n[phalcon]\nextension = phalcon.so\nphalcon.orm.events = On\nphalcon.orm.virtual_foreign_keys = On\nphalcon.orm.column_renaming = On\nphalcon.orm.not_null_validations = On\nphalcon.orm.exception_on_failed_save = Off\nphalcon.orm.enable_literals = On\n```\n",
    "head_branch": "ini",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662135fb18912b45d36a3c06",
    "number": 1795,
    "body": "See #1108\n",
    "head_branch": "issue-1108",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662135fc18912b45d36a3c07",
    "number": 1794,
    "body": "",
    "head_branch": "1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662135fd18912b45d36a3c08",
    "number": 1793,
    "body": "Just getters and setter for querybuilder paginator's adapter + UT\n",
    "head_branch": "1.3.0-querybuilder",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662135fe18912b45d36a3c09",
    "number": 1792,
    "body": "See #1790, #1791\n",
    "head_branch": "tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge b85f07836bb619804de6e84fea7c97d1d762b6fa into 4e525dd5282c76bf5bc1f6ea5b02e8aea36ba260"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621360018912b45d36a3c0a",
    "number": 1789,
    "body": "",
    "head_branch": "1.2.5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621360118912b45d36a3c0b",
    "number": 1787,
    "body": "See #1786\n",
    "head_branch": "issue-1786",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621360318912b45d36a3c0c",
    "number": 1785,
    "body": "In brief, what has been done:\n- all header files had [include guards](http://en.wikipedia.org/wiki/Include_guard) added\n- arginfo and class method tables were moved from headers to sources (exception: interfaces and bases classes have arginfo in the header — this allows to reuse it by the child classes and interface implementors)\n- source files do not `#include \"phalcon.h\"` anymore — they #include only the files they need\n- zend_class_entry definitions were moved from phalcon.c to respective source files — now if someone needs to add a new class, there are less places in the code to modify\n- gcc-compatible compilers are instructed to generate dependency files (*.d): this is what automake usually does but because PHP uses only autoconf, this had to be done manually (pros: if you change a file, all dependent files need to be rebuilt. Before this, if you touch a header file, `make` won't rebuild anything and you need to rebuild the entire project).\n\nWhy this is good:\n- the compiler has to process fewer files (when the source file #include'd phalcon.h, the compiler had to process all headers regardless whether the source file needed them)\n- include guards will allow to use static inline functions in the headers — this could be used to replace macros (functions are type safe, macros aren't)\n- less symbols are exposed, this reduces the size of the debug information and allows for extra optimizations.\n\nBenchmarks:\n\n**1.3.0 branch**\n\n```\n$ du -hs ext \n7,5M    ext\n\n$ cd ext; time sh -c 'phpize --clean && phpize && ./configure CFLAGS=\"-O1 -g -Wall -Werror\" && make -B -j75 install'\n\nreal    1m37.913s\nuser    3m17.824s\nsys     0m46.596s\n\nMax LA: 55.12\n\n$ du -h modules/phalcon.so\n\n193M    modules/phalcon.so\n\n$ NO_INTERACTION=1 make test\n\n=====================================================================\nTEST RESULT SUMMARY\n---------------------------------------------------------------------\nExts skipped    :    0\nExts tested     :   46\n---------------------------------------------------------------------\n\nNumber of tests :   91                85\nTests skipped   :    6 (  6.6%) --------\nTests warned    :    0 (  0.0%) (  0.0%)\nTests failed    :    0 (  0.0%) (  0.0%)\nExpected fail   :    0 (  0.0%) (  0.0%)\nTests passed    :   85 ( 93.4%) (100.0%)\n---------------------------------------------------------------------\nTime taken      :   28 seconds\n=====================================================================\n```\n\n**This branch:**\n\n```\n$ du -hs ext \n7,6M    ext\n\n$ cd ext; time sh -c 'phpize --clean && phpize && ./configure CFLAGS=\"-O1 -g -Wall -Werror\" && make -B -j75 install'\n\nreal    0m41.058s\nuser    1m13.126s\nsys     0m37.876s\n\nMax LA: 30.77\n\n$ du -h modules/phalcon.so\n9,6M    modules/phalcon.so\n\n$ NO_INTERACTION=1 make test\n\n=====================================================================\nTEST RESULT SUMMARY\n---------------------------------------------------------------------\nExts skipped    :    0\nExts tested     :   46\n---------------------------------------------------------------------\n\nNumber of tests :   91                85\nTests skipped   :    6 (  6.6%) --------\nTests warned    :    0 (  0.0%) (  0.0%)\nTests failed    :    0 (  0.0%) (  0.0%)\nExpected fail   :    0 (  0.0%) (  0.0%)\nTests passed    :   85 ( 93.4%) (100.0%)\n---------------------------------------------------------------------\nTime taken      :   10 seconds\n=====================================================================\n```\n\nSummary:\n- 1.3.0:\n  - compilation time: 1m37.913s\n  - max load average: 55.12\n  - binary size: 193M\n  - time taken for tests: 28 seconds\n- this branch:\n  - compilation time: 41.058s (**58.07% faster**)\n  - max load average: 30.77 (**44.18% less**)\n  - binary size: 9.6M (**95.03% smaller**)\n  - time taken for tests: 10 seconds (**64% faster**)\n",
    "head_branch": "deps",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621360418912b45d36a3c0d",
    "number": 1782,
    "body": "fix from https://github.com/phalcon/docs/pull/306\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621360518912b45d36a3c0e",
    "number": 1781,
    "body": "fix from https://github.com/phalcon/docs/pull/306\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621360618912b45d36a3c0f",
    "number": 1778,
    "body": "",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 8e3b57c6ba29be3412b5836bfc81aae7a32a1c95 into 86143b0617224514d1b9b1e0a87be50c59bf96a8"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621360718912b45d36a3c10",
    "number": 1775,
    "body": "See #1682\n",
    "head_branch": "issue-1682",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621360818912b45d36a3c11",
    "number": 1772,
    "body": "See #1770\n",
    "head_branch": "issue-1770",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621360918912b45d36a3c12",
    "number": 1771,
    "body": "",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621360a18912b45d36a3c13",
    "number": 1769,
    "body": "Hi,\n\nI added Validation\\Validator\\Url validator that follows the same logic as  Mvc\\Model\\Validator\\Url class and validators classes. 2 UTs are also included.\n\nThanks,\n\nKamil\n",
    "head_branch": "1.3.0-url-validator",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621360c18912b45d36a3c14",
    "number": 1768,
    "body": "",
    "head_branch": "1.2.5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621360d18912b45d36a3c15",
    "number": 1767,
    "body": "",
    "head_branch": "1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621360e18912b45d36a3c16",
    "number": 1765,
    "body": "See #1764\n\nPlus optimizations in Phalcon\\Forms\\Form and Phalcon\\Validation\\Message\\Group plus bug fixes elsewhere\n",
    "head_branch": "issue-1764",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621360f18912b45d36a3c17",
    "number": 1762,
    "body": "",
    "head_branch": "php-master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621361018912b45d36a3c18",
    "number": 1759,
    "body": "Generate a PBKDF2 key derivation of a supplied password\n\nImplementation details:\n- uses the native C implementation (faster than used by PHP BTW) if `hash` extension is available during compile time\n- otherwise, tries to call `hash_pbkdf2()` if PHP is 5.5.0+\n- otherwise, implements PBKDF2 algorithm using `hash_hmac` and loops (my C implementation is based on [this PHP code](https://raw.github.com/rchouinard/hash_pbkdf2-compat/master/src/hash_pbkdf2.php))\n\nExposed functions:\n- Phalcon\\Security::deriveKey()\n- Phalcon\\Security::pbkdf2() — this one is marked as internal because it is used only for testing\n",
    "head_branch": "derive_key",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621361218912b45d36a3c19",
    "number": 1758,
    "body": "- Constant-time string comparison in Phalcon\\Security::checkHash() (#1755)\n- Phalcon\\Logger\\Adapter::commit() clear the queue (#1742)\n- Fix PHP Notices in Phalcon\\Debug::onUncaughtException() (#1683)\n",
    "head_branch": "1.2.5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621361318912b45d36a3c1a",
    "number": 1757,
    "body": "See #1755\n",
    "head_branch": "issue-1755",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621361418912b45d36a3c1b",
    "number": 1751,
    "body": "Initial and Basic Configuration for phalcon and phalcon dev tools for Ubuntu and Apache\n",
    "head_branch": "1.2.5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621361518912b45d36a3c1c",
    "number": 1750,
    "body": "Initial and Basic Configuration for phalcon and phalcon dev tools for Ubuntu and Apache written in python\n",
    "head_branch": "sescob",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621361618912b45d36a3c1d",
    "number": 1748,
    "body": "See #1742\n",
    "head_branch": "issue-1742",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621361718912b45d36a3c1e",
    "number": 1743,
    "body": "",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621361818912b45d36a3c1f",
    "number": 1738,
    "body": "",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621361b18912b45d36a3c20",
    "number": 1737,
    "body": "Merge from 1.3.0\n",
    "head_branch": "1.3.0-hhvm",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621361c18912b45d36a3c21",
    "number": 1733,
    "body": "See #1701 \n\n``` php\n$user = User::findFirst();\nprint_r($user->toArray(array('username', 'email')));\n```\n\noutput\n\n``` out\nArray\n(\n    [username] => aradabaugh\n    [email] => adam@example.com\n)\n```\n",
    "head_branch": "nfr_1701",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621361d18912b45d36a3c22",
    "number": 1732,
    "body": "",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621361f18912b45d36a3c23",
    "number": 1729,
    "body": "",
    "head_branch": "volt-compiler",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621362018912b45d36a3c24",
    "number": 1728,
    "body": "This is intended to fix #1624\n",
    "head_branch": "issue-1624",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621362118912b45d36a3c25",
    "number": 1727,
    "body": "Bugs fixed:\n- #1624 \n- #1723 \n",
    "head_branch": "1.2.5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621362218912b45d36a3c26",
    "number": 1726,
    "body": "(cherry picked from commit 0d74b3002a99c3773ef8afe9871d6dcfe0b93c9e)\n",
    "head_branch": "tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621362318912b45d36a3c27",
    "number": 1725,
    "body": "See #1723\n",
    "head_branch": "issue-1723",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621362418912b45d36a3c28",
    "number": 1722,
    "body": "See #1716\n",
    "head_branch": "1.2.5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621362518912b45d36a3c29",
    "number": 1721,
    "body": "See #1714\n",
    "head_branch": "issue-1714",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621362618912b45d36a3c2a",
    "number": 1720,
    "body": "See #1716\n",
    "head_branch": "issue-1716",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621362818912b45d36a3c2b",
    "number": 1719,
    "body": "PDO/Adapter updates from 1.2.5 - https://github.com/phalcon/cphalcon/pull/1562\n",
    "head_branch": "1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621362918912b45d36a3c2c",
    "number": 1715,
    "body": "See #1682\n",
    "head_branch": "issue-1682",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621362a18912b45d36a3c2d",
    "number": 1713,
    "body": "See #1707\n",
    "head_branch": "issue-1707",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621362b18912b45d36a3c2e",
    "number": 1710,
    "body": "See #1692\n",
    "head_branch": "nfr_1679",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621362c18912b45d36a3c2f",
    "number": 1709,
    "body": "See #1683\n",
    "head_branch": "1683_1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621363018912b45d36a3c30",
    "number": 1708,
    "body": "See #1683\n",
    "head_branch": "1683_1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621363118912b45d36a3c31",
    "number": 1705,
    "body": "",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621363218912b45d36a3c32",
    "number": 1702,
    "body": "",
    "head_branch": "bug_1663_1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621363318912b45d36a3c33",
    "number": 1700,
    "body": "Test case:\n\n``` php\n$di = new \\Phalcon\\Di\\FactoryDefault();\necho Phalcon\\Tag::submitButton('ľščťžýáíéôňď'), PHP_EOL;\n```\n\nResult:\n\n```\n<input type=\"submit\" value=\"ľščťžýáíéôňď\" />\n[Sun Dec 15 21:28:24 2013]  Script:  '/home/vladimir/workspace/cphalcon/1681.php'\n/home/vladimir/workspace/cphalcon/ext/kernel/memory.c(350) :  Freeing 0x7F29ED5A84E0 (32 bytes), script=/home/vladimir/workspace/cphalcon/1681.php\n```\n",
    "head_branch": "1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621363418912b45d36a3c34",
    "number": 1699,
    "body": "See #1965\n",
    "head_branch": "issue-1695",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621363518912b45d36a3c35",
    "number": 1694,
    "body": "- Fix #1688\n- Phalcon\\Mvc\\Router optimization\n",
    "head_branch": "router",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621363618912b45d36a3c36",
    "number": 1693,
    "body": "Optimized:\n- Phalcon\\Db\n- Phalcon\\Db\\Adapter\n- Phalcon\\Db\\Index\n- Phalcon\\Db\\Profiler\n- Phalcon\\Db\\Reference\n- Phalcon\\Db\\Result\\Pdo\n",
    "head_branch": "db-opt",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621363718912b45d36a3c37",
    "number": 1692,
    "body": "See #1679\n\n``` php\necho Phalcon\\Tag::linkTo('http://phalconphp.com/en/', 'Phalcon Home', FALSE);\necho Phalcon\\Tag::linkTo(array('http://phalconphp.com/en/', 'text' => 'Phalcon Home', 'local' => FALSE));\necho Phalcon\\Tag::linkTo('mailto:dreamsxin@gmail.com', 'dreamsxin@gmail.com', FALSE);\n```\n\noutput:\n`<a href=\"<a href=\"http://phalconphp.com/en/\">Phalcon Home</a>`\n`<a href=\"<a href=\"http://phalconphp.com/en/\">Phalcon Home</a>`\n`<a href=\"mailto:dreamsxin@gmail.com\">dreamsxin@gmail.com</a>`\n",
    "head_branch": "1679",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621363818912b45d36a3c38",
    "number": 1691,
    "body": "See #1690\n",
    "head_branch": "bug_1690p",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621363918912b45d36a3c39",
    "number": 1689,
    "body": "See #1664\n",
    "head_branch": "issue-1664",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621363a18912b45d36a3c3a",
    "number": 1687,
    "body": "",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621363b18912b45d36a3c3b",
    "number": 1686,
    "body": "",
    "head_branch": "issue-1642",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621363c18912b45d36a3c3c",
    "number": 1685,
    "body": "See https://github.com/ritter/docs/commit/6bef5bb0395c7bb3152db14abda78d4ca2c6250f\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621363d18912b45d36a3c3d",
    "number": 1684,
    "body": "See https://github.com/ritter/docs/commit/6bef5bb0395c7bb3152db14abda78d4ca2c6250f\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621364018912b45d36a3c3e",
    "number": 1680,
    "body": "",
    "head_branch": "1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621364118912b45d36a3c3f",
    "number": 1678,
    "body": "",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621364218912b45d36a3c40",
    "number": 1677,
    "body": "I improved `README.md` to give visibility for the Incubator (that is an awesome source) and enhance some extra contents for Windows' installation.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621364318912b45d36a3c41",
    "number": 1675,
    "body": "",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621364418912b45d36a3c42",
    "number": 1674,
    "body": "- Fix #1642, close #1670\n- Get rid of hardcoded numbers for fetch modes\n",
    "head_branch": "issue-1642",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621364618912b45d36a3c43",
    "number": 1673,
    "body": "See #1556\n",
    "head_branch": "1.2.5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621364718912b45d36a3c44",
    "number": 1672,
    "body": "See #1556\n",
    "head_branch": "issue-1556",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621364818912b45d36a3c45",
    "number": 1671,
    "body": "See #1646\n",
    "head_branch": "issue-1646",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621364918912b45d36a3c46",
    "number": 1670,
    "body": "See #1642, Change `Phalcon\\Db::FETCH_*` same `PDO::FETCH_*`\n",
    "head_branch": "1642_1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621364c18912b45d36a3c47",
    "number": 1669,
    "body": "See #1642, Change `Phalcon\\Db::FETCH_*` same `PDO::FETCH_*`\n",
    "head_branch": "1642_1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621364d18912b45d36a3c48",
    "number": 1668,
    "body": "",
    "head_branch": "translate",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621364e18912b45d36a3c49",
    "number": 1667,
    "body": "See #1662 when `setDocType(HTML5)` then `getDocType` not return.\n",
    "head_branch": "1662_1.2.5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621364f18912b45d36a3c4a",
    "number": 1666,
    "body": "See #1662 when `setDocType(HTML5)` then `getDocType` not return.\n",
    "head_branch": "1662_1.2.5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621365018912b45d36a3c4b",
    "number": 1665,
    "body": "",
    "head_branch": "1663_1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621365218912b45d36a3c4c",
    "number": 1660,
    "body": "This had to be done some day.\n",
    "head_branch": "1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621365318912b45d36a3c4d",
    "number": 1659,
    "body": "See #1654\n",
    "head_branch": "1.2.5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621365418912b45d36a3c4e",
    "number": 1657,
    "body": "- simplify `appendMessages()` by using `get_iterator()` and native iterator interface;\n- implement native iterator interface (strictly speaking, this was not necessary as `Iterator` will fall back to calling userspace rewind()/current()/valid()/next() if the native interface is not implemented, but NI makes `foreach` iteration much faster).\n\n`Phalcon\\Validation\\Message\\Group` is used mainly as a testbed and if everything goes well, I will apply these optimizations to result sets where they will really matter.\n",
    "head_branch": "group_iterator",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621365518912b45d36a3c4f",
    "number": 1655,
    "body": "See #1654\n",
    "head_branch": "issue-1654",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621365618912b45d36a3c50",
    "number": 1653,
    "body": "",
    "head_branch": "native-array",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621365718912b45d36a3c51",
    "number": 1651,
    "body": "",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621365818912b45d36a3c52",
    "number": 1650,
    "body": "Queue:\n- peekDelayed()\n- peekBuried()\n- watch() bug fix\n\nJob:\n- kick()\n- bury()\n- release()\n- touch()\n\nMisc:\n- tests\n",
    "head_branch": "beanstalk",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621365a18912b45d36a3c53",
    "number": 1649,
    "body": "The correct response to `watch` command is `WATCHING`, not `WATCH`.\n",
    "head_branch": "1.2.5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621365a18912b45d36a3c54",
    "number": 1641,
    "body": "See https://github.com/phalcon/cphalcon/issues/1480#issuecomment-29870992\n",
    "head_branch": "1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621365c18912b45d36a3c55",
    "number": 1640,
    "body": "See #1637 \n",
    "head_branch": "1.2.5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621365d18912b45d36a3c56",
    "number": 1639,
    "body": "See #1637\n",
    "head_branch": "issue-1637",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621365e18912b45d36a3c57",
    "number": 1638,
    "body": "Hi,\n\nI changed small detail - where() method can take int(unit tests proves that).\n\nBtw. I figure out that parent constructor isn't called when extending Phalcon\\Mvc\\Model class. After fixing that issue most of unit test of Query builder will work(maybe all of them). Could somebody give me a hand with that?\n\nThanks in advance,\n\nKamil\n",
    "head_branch": "2.0.0-builder-fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621365f18912b45d36a3c58",
    "number": 1635,
    "body": "- Do not try to serialize connection resource;\n- Forcefully set `_connection` to `null` upon wakeup;\n- Validate `_parameters` on wakeup.\n",
    "head_branch": "beanstalk-queue",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621366018912b45d36a3c59",
    "number": 1634,
    "body": "",
    "head_branch": "beanstalk-job",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621366118912b45d36a3c5a",
    "number": 1633,
    "body": "",
    "head_branch": "setcurrentpage",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621366218912b45d36a3c5b",
    "number": 1632,
    "body": "- Remove `_config` property because it is not used;\n- Use integers instead of zvals in `getPaginate()`\n- Optimize `__construct()` to get rid of the memory frame\n",
    "head_branch": "paginator_builder",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621366318912b45d36a3c5c",
    "number": 1629,
    "body": "I added some small fixes to Http\\Request.zep file and the rest is result of fresh C code from .zep regeneration.\n",
    "head_branch": "2.0.0-http-request",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621366418912b45d36a3c5d",
    "number": 1627,
    "body": "(cherry picked from commit 255094b7825f0f16e3b3957d497ad4b634e9cf0a)\n",
    "head_branch": "1.2.5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621366518912b45d36a3c5e",
    "number": 1626,
    "body": "",
    "head_branch": "1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621366618912b45d36a3c5f",
    "number": 1623,
    "body": "See #1480\n",
    "head_branch": "issue-1480",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621366818912b45d36a3c60",
    "number": 1622,
    "body": "",
    "head_branch": "1.2.5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621366918912b45d36a3c61",
    "number": 1621,
    "body": "- use native functions for file/socket I/O;\n- fix #1612;\n- fix #1348;\n- optimize methods.\n",
    "head_branch": "beanstalk",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621366b18912b45d36a3c62",
    "number": 1619,
    "body": "- Fix #1348\n- Fix #1612\n",
    "head_branch": "1.2.5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621366c18912b45d36a3c63",
    "number": 1618,
    "body": "",
    "head_branch": "beanstalk",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621366d18912b45d36a3c64",
    "number": 1617,
    "body": "- Do not allow to override superglobals in views;\n- Use `zend_hash_merge_ex()` instead of manual iteration over the array and `phalcon_set_symbol()`\n- Get rid of the memory frame in `Phalcon\\Mvc\\View\\Engine\\Php::render()`\n- Make `Phalcon\\Mvc\\View\\Engine::render()` return boolean\n- Optimize `Phalcon\\Mvc\\View\\Engine\\Volt::length()`\n- Optimize `Phalcon\\Mvc\\View\\Engine\\Volt::isIncluded()`\n",
    "head_branch": "view-superglobals",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621366e18912b45d36a3c65",
    "number": 1614,
    "body": "",
    "head_branch": "revert-1600",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621366f18912b45d36a3c66",
    "number": 1613,
    "body": "See #1575\n",
    "head_branch": "1.2.5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621367018912b45d36a3c67",
    "number": 1611,
    "body": "See #1607\n",
    "head_branch": "issue-1607",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621367218912b45d36a3c68",
    "number": 1610,
    "body": "`Phalcon\\Http\\Request::getBasicAuth`\n`Phalcon\\Http\\Request::getDigestAuth`\n`Phalcon\\Assets\\Collection::setTargetLocal`\n`Phalcon\\Mvc\\Model::selectWriteConnection`\n\n``` error\n/home/travis/build/dreamsxin/cphalcon/ext/phalcon/logger/adapter/file.c: In function ‘zim_Phalcon_Logger_Adapter_File_logInternal’:\n\n/home/travis/build/dreamsxin/cphalcon/ext/phalcon/logger/adapter/file.c:202:2: error: too few arguments to function ‘zephir_fwrite’\n\n./kernel/file.h:38:6: note: declared here\n\nmake: *** [phalcon/logger/adapter/file.lo] Error 1\n\nmake: *** Waiting for unfinished jobs....\n```\n",
    "head_branch": "nfr_2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621367318912b45d36a3c69",
    "number": 1606,
    "body": "Implementation of Phalcon\\Mvc\\Model\\Row using object handlers. Since this class is used quite often in MVC application, this implementation will make those application a bit faster and a bit less memory consuming.\n",
    "head_branch": "fast-row",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621367418912b45d36a3c6a",
    "number": 1604,
    "body": "",
    "head_branch": "issue-1506",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621367518912b45d36a3c6b",
    "number": 1603,
    "body": "```\n/home/vladimir/workspace/cphalcon/ext/mvc/model/row.c: In function ‘zim_Phalcon_Mvc_Model_Row_toArray’:\n/home/vladimir/workspace/cphalcon/ext/mvc/model/row.c:159:13: error: assignment from incompatible pointer type [-Werror]\n  properties = Z_OBJ_HT_P(this_ptr)->get_properties(this_ptr TSRMLS_CC);\n             ^\n/home/vladimir/workspace/cphalcon/ext/mvc/model/row.c:167:2: error: passing argument 1 of ‘zend_hash_internal_pointer_reset_ex’ from incompatible pointer type [-Werror]\n  zend_hash_internal_pointer_reset_ex(properties, &hp0);\n  ^\nIn file included from /home/vladimir/.phpenv/versions/5.5.4-debug-zts/include/php/Zend/zend.h:286:0,\n                 from /home/vladimir/.phpenv/versions/5.5.4-debug-zts/include/php/main/php.h:34,\n                 from /home/vladimir/workspace/cphalcon/ext/mvc/model/row.c:24:\n/home/vladimir/.phpenv/versions/5.5.4-debug-zts/include/php/Zend/zend_hash.h:183:15: note: expected ‘struct HashTable *’ but argument is of type ‘struct zval *’\n ZEND_API void zend_hash_internal_pointer_reset_ex(HashTable *ht, HashPosition *pos);\n               ^\n/home/vladimir/workspace/cphalcon/ext/mvc/model/row.c:168:2: error: passing argument 1 of ‘zend_hash_get_current_data_ex’ from incompatible pointer type [-Werror]\n  while (zend_hash_get_current_data_ex(properties, (void**) &hd, &hp0) == SUCCESS) {\n  ^\nIn file included from /home/vladimir/.phpenv/versions/5.5.4-debug-zts/include/php/Zend/zend.h:286:0,\n                 from /home/vladimir/.phpenv/versions/5.5.4-debug-zts/include/php/main/php.h:34,\n                 from /home/vladimir/workspace/cphalcon/ext/mvc/model/row.c:24:\n/home/vladimir/.phpenv/versions/5.5.4-debug-zts/include/php/Zend/zend_hash.h:182:14: note: expected ‘struct HashTable *’ but argument is of type ‘struct zval *’\n ZEND_API int zend_hash_get_current_data_ex(HashTable *ht, void **pData, HashPosition *pos);\n              ^\n/home/vladimir/workspace/cphalcon/ext/mvc/model/row.c:169:3: error: implicit declaration of function ‘phalcon_get_current_key’ [-Werror=implicit-function-declaration]\n   PHALCON_GET_HKEY(key, ah0, hp0);\n   ^\ncc1: all warnings being treated as errors\nmake: *** [mvc/model/row.lo] Помилка 1\n```\n",
    "head_branch": "1.2.5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621367618912b45d36a3c6c",
    "number": 1601,
    "body": "This PR addresses an issue in Phalcon\\Loader.\n\nAffected function is Phalcon\\Loader::getCheckedPath() which returns invalid path on windows in some cases.\nTo reproduce this issue just run LoaderTest::testsEvents() on windows. See attached screenshot for result\n\n![loadertest-testevents](https://f.cloud.github.com/assets/2228236/1609104/c5a208a0-552d-11e3-85d3-f28bc4e67025.png)\n\nThe problem is in function **phalcon_fix_path()** where a conditional statement incorrectly assumes that\n if a trailing path separator from users was specified it'll always be the same as system path separator. \n\n---\n\nThis PR was tested on\n- Windows 7 x64, PHP 5.5.3 x86, Phalcon 1.2.5 x86\n",
    "head_branch": "1.2.5-local",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621367718912b45d36a3c6d",
    "number": 1600,
    "body": "This PR adds a test case for issue #1527\n\nUniqueness validator incorrectly fails validation\n",
    "head_branch": "1.3.0-issue-1527",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621367818912b45d36a3c6e",
    "number": 1595,
    "body": "See #1506\n",
    "head_branch": "issue_1506",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621367918912b45d36a3c6f",
    "number": 1594,
    "body": "See #1506\n",
    "head_branch": "model_1506",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621367a18912b45d36a3c70",
    "number": 1593,
    "body": "See #1532\n\n``` php\n    public function testIssue1532()\n    {\n        @unlink(__DIR__ . '/assets/production/1532.js');\n        $di = new \\Phalcon\\DI\\FactoryDefault();\n        $assets = new \\Phalcon\\Assets\\Manager();\n        $assets->useImplicitOutput(false);\n        $assets->collection('js')\n            ->addJs('unit-tests/assets/jquery.js')\n            ->join(true)\n            ->addFilter(new Phalcon\\Assets\\Filters\\Jsmin())\n            ->setTargetPath(__DIR__ .'/assets/production/1532.js')\n            ->setTargetLocal(FALSE)\n            ->setPrefix('//phalconphp.com/')\n            ->setTargetUri('js/jquery.js');\n\n        $this->assertEquals($assets->outputJs('js'), '<script type=\"text/javascript\" src=\"//phalconphp.com/js/jquery.js\"></script>' . PHP_EOL);\n    }\n```\n",
    "head_branch": "issue_1532",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621367b18912b45d36a3c71",
    "number": 1591,
    "body": "This PR addresses an issue in Phalcon\\Loader.\n\nAffected function is Phalcon\\Loader::getCheckedPath() which returns invalid path on windows in some cases.\nTo reproduce this issue just run LoaderTest::testsEvents() on windows. See attached screenshot for result\n\n![loadertest-testevents](https://f.cloud.github.com/assets/2228236/1609104/c5a208a0-552d-11e3-85d3-f28bc4e67025.png)\n\nThe problem is in function **phalcon_fix_path()** where a conditional statement incorrectly assumes that\n if a trailing path separator from users was specified it'll always be the same as system path separator. \n\n---\n\nThis PR was tested on\n- Windows 7 x64, PHP 5.5.3 x86, Phalcon 1.3.0 x86\n- Ubuntu 13.10, PHP 5.5.3 x86, Phalcon 1.3.0 x86\n",
    "head_branch": "1.3.0-loader-paths",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621367c18912b45d36a3c72",
    "number": 1590,
    "body": "Hi,\n\nAs per conversation in #1583. with this PR I would like to resolve all Travis CI issues.\n\nThat's work in progress - I will be thankful for any help.\n\nKamil\n",
    "head_branch": "2.0.0-travis-try",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621367f18912b45d36a3c73",
    "number": 1589,
    "body": "Hi,\n\nAs per conversation in #1583. with this PR I would like to resolve all Travis CI issues.\n\nThat's work in progress - I will be thankful for any help.\n\nKamil\n",
    "head_branch": "2.0.0-travis-try",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621368018912b45d36a3c74",
    "number": 1588,
    "body": "This PR addresses some minor differences in unit testing between windows and *nix\nApperently windows wasn't taken into account when writting the tests, which doesn't surprise me at all =]\n\nIn most cases different line ends when comparing two strings. PHPUnit won't like these and fail the asserts.\n\nThere are also some symlinked files which don't work on windows since it won't recognise them.\nLet me know if you know a better way for handling this, I simply replaced the simlinks with the files they were pointing to.\nI realize this is not elegant solution.\n\n---\n\nThe PR also includes a few minor stubs for ViewCacheTest and updated Phalcon\\Mvc\\View::render() to return instance of itself as expected in docblock\n\n``` php\n/**\n* Executes render process from dispatching data\n*\n*<code>\n* //Shows recent posts view (app/views/posts/recent.phtml)\n* $view->start()->render('posts', 'recent')->finish();\n*</code>\n*\n* @param string $controllerName\n* @param string $actionName\n* @param array $params\n* @return Phalcon\\Mvc\\View\n*/\n```\n\nExcuse me for submitting two things in the same PR. I'm happy to make them separate if you prefer that \n\nEDIT: There actually three different things here. I've also marked some of the tests with docblock **@require extension** \n\nThese require mcrypt\n- CryptTest::testEncryption()\n- CryptTest::testPadding()\n- CryptTest::testEncryptBase64()\n\nThis one requires fileinfo\n- RequestTest::testIssues1442()\n\n---\n\nThis PR was tested on\n- Windows 7 x64, PHP 5.5.3 x86, Phalcon 1.3.0 x86\n- Ubuntu 13.10, PHP 5.5.3 x86, Phalcon 1.3.0 x86\n",
    "head_branch": "1.3.0-unit-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621368118912b45d36a3c75",
    "number": 1587,
    "body": "",
    "head_branch": "1.2.5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621368218912b45d36a3c76",
    "number": 1586,
    "body": "",
    "head_branch": "1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621368318912b45d36a3c77",
    "number": 1584,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621368418912b45d36a3c78",
    "number": 1583,
    "body": "With changes added to this pull request current version of Phalcon 2.0 can be fully compiled and loaded.\n\nI regenerated some file but fix was inside ext/phalcon/mvc/collection/manager.c file.\n\nAfter this change and second pull on zephir accepted Phalcon can be compiled again - maybe it would be worth to start run Travis CI on it?\n\nThanks,\n\nKamil\n",
    "head_branch": "2.0.0-random-fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621368518912b45d36a3c79",
    "number": 1581,
    "body": "See #1575\n",
    "head_branch": "issue-1575",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621368618912b45d36a3c7a",
    "number": 1579,
    "body": "I was unable to zephir generate on phalcon 2.0 source before those changes. Now the whole generation goes well but compilation is broken:\n\n```\nlibtool: compile:  gcc -I. -I/var/www/cphalcon/ext -DPHP_ATOM_INC -I/var/www/cphalcon/ext/include -I/var/www/cphalcon/ext/main -I/var/www/cphalcon/ext -I/usr/include/php5 -I/usr/include/php5/main -I/usr/include/php5/TSRM -I/usr/include/php5/Zend -I/usr/include/php5/ext -I/usr/include/php5/ext/date/lib -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -DHAVE_CONFIG_H -O2 -c /var/www/cphalcon/ext/phalcon/mvc/collection/manager.c  -fPIC -DPIC -o phalcon/mvc/collection/.libs/manager.o\n/var/www/cphalcon/ext/phalcon/mvc/collection/manager.c: In function 'zim_Phalcon_Mvc_Collection_Manager_initialize':\n/var/www/cphalcon/ext/phalcon/mvc/collection/manager.c:203:83: error: 'true' undeclared (first use in this function)\n/var/www/cphalcon/ext/phalcon/mvc/collection/manager.c:203:83: note: each undeclared identifier is reported only once for each function it appears in\nmake: *** [phalcon/mvc/collection/manager.lo] Error 1\n```\n",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621368718912b45d36a3c7b",
    "number": 1574,
    "body": "See #1567\n",
    "head_branch": "issue-1567",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621368818912b45d36a3c7c",
    "number": 1573,
    "body": "Added CentOS build dependencies\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621368918912b45d36a3c7d",
    "number": 1572,
    "body": "See #1555\n",
    "head_branch": "issue-1555",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621368a18912b45d36a3c7e",
    "number": 1571,
    "body": "",
    "head_branch": "http_request_digest",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621368b18912b45d36a3c7f",
    "number": 1569,
    "body": "Addition to README: check for github version and rebuild outdated extension\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621368c18912b45d36a3c80",
    "number": 1568,
    "body": "Sorry about PR 1563. I've just realized you're not using spaces\n",
    "head_branch": "1.3.0-tests-views-indents",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621368d18912b45d36a3c81",
    "number": 1566,
    "body": "See #1534\n",
    "head_branch": "issue-1534",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621368e18912b45d36a3c82",
    "number": 1565,
    "body": "See #1529\n",
    "head_branch": "issue-1529",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621368f18912b45d36a3c83",
    "number": 1564,
    "body": "",
    "head_branch": "image_2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621369118912b45d36a3c84",
    "number": 1563,
    "body": "Added some tests for setters and getters, partials and getActiveRenderPath()\n\nHopefully travis will like them this time \n",
    "head_branch": "1.3.0-tests-views",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621369218912b45d36a3c85",
    "number": 1562,
    "body": "- added tinyint(1) as boolean for mysql, oracle, postresql, sqlite.\n- added timestamp as date for mysql.\n- decribeColumns method has been refactored in oracle, postesql, sqlite.\n- added constraint creation for foreign key\n",
    "head_branch": "1.2.5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621369318912b45d36a3c86",
    "number": 1560,
    "body": "This PR is for testing Phalcon\\Mvc\\View\\Simple\nCould you pls check if I'm doing caching correctly?\n\nOnly tested on Phalcon 1.3.0 atm, will do 2.0.0 soon\n",
    "head_branch": "1.3.0-tests-viewsimple",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621369418912b45d36a3c87",
    "number": 1559,
    "body": "",
    "head_branch": "migration-2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621369518912b45d36a3c88",
    "number": 1557,
    "body": "",
    "head_branch": "migration-2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621369618912b45d36a3c89",
    "number": 1551,
    "body": "Please see #1548 . Without the header declaration build fails.\n",
    "head_branch": "1.3.0-local-build",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621369718912b45d36a3c8a",
    "number": 1549,
    "body": "",
    "head_branch": "migration-2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621369818912b45d36a3c8b",
    "number": 1545,
    "body": "See #1536 \n",
    "head_branch": "1536_for_1.2.5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621369918912b45d36a3c8c",
    "number": 1544,
    "body": "See #1536\n",
    "head_branch": "1536",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621369a18912b45d36a3c8d",
    "number": 1539,
    "body": "",
    "head_branch": "filterinterface",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621369b18912b45d36a3c8e",
    "number": 1538,
    "body": "Resubmitted #1525 to 1.2.5 branch\n",
    "head_branch": "1.2.5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621369c18912b45d36a3c8f",
    "number": 1531,
    "body": "Same https://github.com/phalcon/cphalcon/pull/1530\n",
    "head_branch": "model_validator_1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621369d18912b45d36a3c90",
    "number": 1530,
    "body": "``` php\n        $this->validate(new StringLengthValidator(array(\n            'max' => 20,\n            'min' => 1,\n            'messageMaximum' => 'messageMaximum',\n            'messageMinimum' => 'messageMinimum'\n        )));\n```\n\nThat must be throw error\n\n``` c\n    PHALCON_INIT_VAR(field);\n    phalcon_call_method_p1(field, this_ptr, \"getoption\", option);\n    if (Z_TYPE_P(field) != IS_STRING) {\n        PHALCON_THROW_EXCEPTION_STR(phalcon_mvc_model_exception_ce, \"Field name must be a string\");\n        return;\n    }\n```\n\n`````` c\nPHP_METHOD(Phalcon_Mvc_Model_Validator, getOption){\n    // ```\n    RETURN_MM_EMPTY_STRING(); // change to RETURN_MM_NULL()\n}\n``````\n",
    "head_branch": "model_validator",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621369e18912b45d36a3c91",
    "number": 1525,
    "body": "Update link to download library for windows.\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621369f18912b45d36a3c92",
    "number": 1523,
    "body": "",
    "head_branch": "1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136a018912b45d36a3c93",
    "number": 1522,
    "body": "",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136a218912b45d36a3c94",
    "number": 1521,
    "body": "",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136a318912b45d36a3c95",
    "number": 1519,
    "body": "``` php\nclass Robots extends Phalcon\\Mvc\\Model\n{\n    /**\n     * Dynamically selects a shard\n     *\n     * @param array $intermediate\n     * @param array $bindParams\n     * @param array $bindTypes\n     */\n    public function selectWriteConnection($intermediate, $bindParams, $bindTypes)\n    {\n        //Check if there is a 'where' clause in the select\n        if (isset($intermediate['where'])) {\n\n            $conditions = $intermediate['where'];\n\n            //Choose the possible shard according to the conditions\n            if ($conditions['left']['name'] == 'id') {\n                $id = $conditions['right']['value'];\n                if ($id > 0 && $id < 10000) {\n                    return $this->getDI()->get('dbShard1');\n                }\n                if ($id > 10000) {\n                    return $this->getDI()->get('dbShard2');\n                }\n            }\n        }\n\n        //Use a default shard\n        return $this->getDI()->get('dbShard0');\n    }\n\n}\n```\n",
    "head_branch": "selectWriteConnection",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136a618912b45d36a3c96",
    "number": 1518,
    "body": "``` php\nclass Robots extends Phalcon\\Mvc\\Model\n{\n    /**\n     * Dynamically selects a shard\n     *\n     * @param array $intermediate\n     * @param array $bindParams\n     * @param array $bindTypes\n     */\n    public function selectWriteConnection($intermediate, $bindParams, $bindTypes)\n    {\n        //Check if there is a 'where' clause in the select\n        if (isset($intermediate['where'])) {\n\n            $conditions = $intermediate['where'];\n\n            //Choose the possible shard according to the conditions\n            if ($conditions['left']['name'] == 'id') {\n                $id = $conditions['right']['value'];\n                if ($id > 0 && $id < 10000) {\n                    return $this->getDI()->get('dbShard1');\n                }\n                if ($id > 10000) {\n                    return $this->getDI()->get('dbShard2');\n                }\n            }\n        }\n\n        //Use a default shard\n        return $this->getDI()->get('dbShard0');\n    }\n\n}\n```\n",
    "head_branch": "selectWriteConnection",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136a718912b45d36a3c97",
    "number": 1517,
    "body": "In `phalcon_update_property_array`\nSee #1513\n",
    "head_branch": "1513",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136a818912b45d36a3c98",
    "number": 1514,
    "body": "Hi,\n\nI added support for route name when mounting routes as a collection.\nMaybe it would be worth to change that(name - string) to array of options?\nThan it would use key as a name of setter and call it to assign the value.\n\nThanks,\n\nKamil\n",
    "head_branch": "1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136a918912b45d36a3c99",
    "number": 1512,
    "body": "\"emergence\" is \"appearance\"\n\n`emergence()` method is set to be a (deprecated) alias of `emergency()`\n",
    "head_branch": "logger",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136aa18912b45d36a3c9a",
    "number": 1510,
    "body": "See #1509\n",
    "head_branch": "issue-1509",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136ab18912b45d36a3c9b",
    "number": 1508,
    "body": "See #1495\n",
    "head_branch": "issue-1495",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136ac18912b45d36a3c9c",
    "number": 1507,
    "body": "See #1504\n",
    "head_branch": "issue-1504",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136ad18912b45d36a3c9d",
    "number": 1505,
    "body": "Mongo db workaround\n\nNext compilation issue is:\n\n```\n/var/www/cphalcon/ext/phalcon/db/adapter.c: In function 'zim_Phalcon_Db_Adapter_insert':\n/var/www/cphalcon/ext/phalcon/db/adapter.c:451:6: error: 'zend_phalcon_globals' has no member named 'db'\n/var/www/cphalcon/ext/phalcon/db/adapter.c:461:7: error: 'zend_phalcon_globals' has no member named 'db'\n/var/www/cphalcon/ext/phalcon/db/adapter.c: In function 'zim_Phalcon_Db_Adapter_update':\n/var/www/cphalcon/ext/phalcon/db/adapter.c:550:7: error: 'zend_phalcon_globals' has no member named 'db'\n/var/www/cphalcon/ext/phalcon/db/adapter.c:580:6: error: 'zend_phalcon_globals' has no member named 'db'\n/var/www/cphalcon/ext/phalcon/db/adapter.c: In function 'zim_Phalcon_Db_Adapter_delete':\n/var/www/cphalcon/ext/phalcon/db/adapter.c:654:6: error: 'zend_phalcon_globals' has no member named 'db'\nmake: *** [phalcon/db/adapter.lo] Error 1\n```\n\nthis line generates one of above:\n\n```\nif globals_get(\"db.escape_identifiers\") {\n```\n\nwhich means that globals_get function doesn't return false or anything like that - but where is it actually declared?\n\nPS. I would like to get to the point that I will be able to compile Phalcon 2.0 then I will write dev documentation(mentioned in different PR)\n\nThanks in advance,\n\nKamil\n",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136ae18912b45d36a3c9e",
    "number": 1503,
    "body": "See #1501\n",
    "head_branch": "issue-1501",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136af18912b45d36a3c9f",
    "number": 1498,
    "body": "This fixes a bug that prevents the EMERGENCY log type being displayed correctly.\n(cherry picked from commit 7cb8f4bb52a069a3146f7c69789dca384f499206)\n",
    "head_branch": "logger",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136b018912b45d36a3ca0",
    "number": 1497,
    "body": "See #987\n",
    "head_branch": "1.2.5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136b118912b45d36a3ca1",
    "number": 1496,
    "body": "See #1494\n",
    "head_branch": "issue-1494",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136b318912b45d36a3ca2",
    "number": 1493,
    "body": "(cherry picked from commit 7ae941db3f7bd0c7d432b939c3de7cccb6bed757)\n\nConflicts:\n    .travis.yml\n",
    "head_branch": "memcached",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136b418912b45d36a3ca3",
    "number": 1492,
    "body": "Fix #1486 for v1.3.0\n",
    "head_branch": "bug_1486_1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136b518912b45d36a3ca4",
    "number": 1491,
    "body": "See #1486 Inconsistency in Tag::stylesheetLink/javascriptInclude - local links\n",
    "head_branch": "bug_1486",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136b618912b45d36a3ca5",
    "number": 1490,
    "body": "This fixes a bug that prevents the EMERGENCY log type being displayed correctly.\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136b718912b45d36a3ca6",
    "number": 1489,
    "body": "This fixes a bug that prevents the EMERGENCY log type being displayed correctly.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136b818912b45d36a3ca7",
    "number": 1488,
    "body": "See #1485\n",
    "head_branch": "issue-1485",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136b918912b45d36a3ca8",
    "number": 1487,
    "body": "Forgot to implement offsetUnset in the previous PR.\n",
    "head_branch": "fastdi",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136ba18912b45d36a3ca9",
    "number": 1481,
    "body": "Fix #1449 for 1.2.5 plus added the commit from https://github.com/phalcon/cphalcon/pull/1475\n",
    "head_branch": "1.2.5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136bb18912b45d36a3caa",
    "number": 1479,
    "body": "See #1448\n",
    "head_branch": "1448",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136be18912b45d36a3cab",
    "number": 1478,
    "body": "See #1448\n",
    "head_branch": "1448",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136bf18912b45d36a3cac",
    "number": 1477,
    "body": "",
    "head_branch": "request_file",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136c018912b45d36a3cad",
    "number": 1476,
    "body": "I spent some time to make constructor up-to-date in version 2.0.\n\nPS. I don't even know how to build it straight from changed zep souce(phalcon dir)? neither how to run unit test with usage of this particular version?\n\nPS. PS. README.md doesn't say anything about dev builds(normally it was ./install in /ext dir but now it's different). Maybe it would be worth to create a README.dev.md to help people from 'outside' to clone, do their bit, unit test and create pull requests.\n\nThanks in advance,\n\nKamil\n",
    "head_branch": "2.0.0-query-builder-update",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136c118912b45d36a3cae",
    "number": 1475,
    "body": "Update windows dll instructions on readme.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136c318912b45d36a3caf",
    "number": 1473,
    "body": "",
    "head_branch": "fastdi",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136c418912b45d36a3cb0",
    "number": 1472,
    "body": "Here are tests run with Codeception engine. Basically, in those tests Codeception does nothing special that PHPUnit can't, yet it looks like the tests lacked a proper structure. So moving tests into Codeception should be not just changing the file location, but also some refactoring in order to gain more readability and maintainability of tests. The ideal test is that can be taken into documentation. \n\n``` php\n<?php\n    public function testTagSelect()\n    {\n        expect(\n            Tag::select(array(\n                'some_name',\n                \\Robots::find(),\n                'using' => array('id', 'name')\n            ))\n        )->equals(\n            '<select name=\"some_name\" id=\"some_name\">' . PHP_EOL\n            . chr(9) . '<option value=\"1\">Robotina</option>' . PHP_EOL\n            . chr(9) . '<option value=\"2\">Astro Boy</option>' . PHP_EOL\n            . chr(9) . '<option value=\"3\">Terminator</option>' . PHP_EOL\n            . '</select>'\n        );\n    }\n\n```\n\nLooks a way like a documentation. Or:\n\n``` php\n<?php\n    public function testUrlForControllerAction()\n    {\n        $this->router()\n            ->add('/admin/:controller/p/:action', array('controller' => 1, 'action'=> 2))\n            ->setName('adminProducts');\n\n        expect(\n            $this->url()->get(array(\n                'for'        => 'adminProducts',\n                'controller' => 'products',\n                'action'     => 'index',\n            ))\n        )->equals('/admin/products/p/index');\n    }\n\n```\n\nSo I'd like to propose some simple rules for writing tests:\n- separation helpers from tests. All preparation methods should be moved into helpers. Thus, no Model/TestCase ierarchy needed. \n- usage of `expect()` instead of assertion. This is taken from Codeception/Verify project. A bit more readable then `assert`. Much easier to get what is actual, and what is expected.\n- docblocks should not be used for comments. Currently they are just the source of confusion: Because of this :( \n  https://github.com/DavertMik/cphalcon/blob/Codeception/php-tests/tests/Phalcon/Url/UnitTest.php#L190\n- and yes, the shorter tests are, the more are they easy to maintain. \n- test name is exact the same name of tested class + \"Test\" suffix.\n\n---\n\nFile Structure:\n\ntests are in `tests` dir. There are 3 suites: \n- functional - TestGuy (not used)\n- integration - DbGuy - with database - PhalconDbHelper  + PhalconApiHelper\n- unit - CodeGuy - without database - PhalconApiHelper\n\n*Guy classes contain all passed methods from Helper classes. They are generated with `built` command in order to provide multiple inheritance from helpers/modules. Take a look into `tests/_helper` files, and especially PhalconDbHelper and PhalconApiHelper.\n\nAll data (fixtures, etc) should be put into `tests/_data` dir.\n\n---\n\nRun Tests:\n\n```\nphp codecept.phar run \n\n```\n\nRun Unit Tests:\n\n```\nphp codecept.phar run unit\n\n```\n\nRun Integration Tests:\n\n```\nphp codecept.phar run integration\n\n```\n\nRun only Tag test\n\n```\nphp codecept.phar run tests/unit/Phalcon/TagTest.php \n\n```\n\n---\n\nGenerate new unit test for Phalcon\\Mvc\\Router class\n\n```\nphp codecept.phar generate:test unit \"Phalcon\\Mvc\\Router\"\n\n```\n\nP.S. Currently integration tests run for MySQL only. That's limitation of Codeception which I'm going to fix in next version.\nP.S.S. RIght now some Tag tests are failing. Not sure why :( \n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136c518912b45d36a3cb1",
    "number": 1471,
    "body": "",
    "head_branch": "issue-1470",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136c618912b45d36a3cb2",
    "number": 1469,
    "body": "See #1466\n",
    "head_branch": "issue-1466",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136c718912b45d36a3cb3",
    "number": 1468,
    "body": "See #1467\n",
    "head_branch": "issue-1467",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136c818912b45d36a3cb4",
    "number": 1464,
    "body": "See     #1462\n\n``` php\n$this->dispatcher->getPreviousControllerName();\n$this->dispatcher->getPreviousActionName();\n```\n",
    "head_branch": "1462",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136c918912b45d36a3cb5",
    "number": 1463,
    "body": "Fix #1422 \n\n``` php\n$data = array(\n    \"status\",\n    array(\"Active\" => array('A1' => 'A One', 'A2' => 'A Two'), \"B\" => \"B One\")\n);\necho Tag::selectStatic($data);\n```\n\n``` html\n<select id=\"status\" name=\"status\">\n    <optgroup label=\"Active\">\n    <option value=\"A1\">A One</option>\n    <option value=\"A2\">A Two</option>\n    </optgroup>\n    <option value=\"B\">B One</option>\n</select>\n```\n",
    "head_branch": "tag_select",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136ca18912b45d36a3cb6",
    "number": 1460,
    "body": "- Phalcon\\Cache\\Backend\\Memory::flush() has incorrect arginfo\n- Added increment() and decrement() to Phalcon\\Cache\\BackendInterface\n",
    "head_branch": "arginfo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136cb18912b45d36a3cb7",
    "number": 1459,
    "body": "See #1457\n",
    "head_branch": "issue-1457",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136cc18912b45d36a3cb8",
    "number": 1458,
    "body": "See #1451\n",
    "head_branch": "issue-1451",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136cd18912b45d36a3cb9",
    "number": 1456,
    "body": "See #1455\n",
    "head_branch": "issue-1455",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136ce18912b45d36a3cba",
    "number": 1454,
    "body": "See #1446\n",
    "head_branch": "issue-1446",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136cf18912b45d36a3cbb",
    "number": 1453,
    "body": "See #1449\n",
    "head_branch": "issue-1449",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136d018912b45d36a3cbc",
    "number": 1445,
    "body": "See https://github.com/phalcon/cphalcon/pull/1440#issuecomment-27129147\n",
    "head_branch": "issue-406",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136d118912b45d36a3cbd",
    "number": 1444,
    "body": "See #1442 \nUse `finfo_open` to get mime type\n",
    "head_branch": "request_file",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136d218912b45d36a3cbe",
    "number": 1441,
    "body": "",
    "head_branch": "1.2.5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136d318912b45d36a3cbf",
    "number": 1440,
    "body": "See #406\n",
    "head_branch": "issue-406",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136d418912b45d36a3cc0",
    "number": 1439,
    "body": "config.php\n\n``` php\n<?php\n\nreturn array(\n        \"database\" => array(\n            \"adapter\" => \"mysql\",\n            \"host\" => \"localhost\",\n            \"username\" => \"user\",\n            \"password\" => \"passwd\",\n            \"name\" => \"demo\"\n        ),\n    );\n```\n\nUse\n\n``` php\n$config = new Phalcon\\Config\\Adapter\\Php('../app/config/config.php');\n```\n",
    "head_branch": "config",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136d518912b45d36a3cc1",
    "number": 1438,
    "body": "- Phalcon\\Http\\Cookies::__toString() should not throw exceptions (#1427)\n- Phalcon\\Http\\Cookies::__toString() should return a string (#1428)\n",
    "head_branch": "1.2.5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136d618912b45d36a3cc2",
    "number": 1436,
    "body": "This is the same as issue #1435, I just moved it to the 1.3.0 branch. Last character was being ignored in camelize so CAMELIZE would return CamelizE.\n",
    "head_branch": "camelfix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136d818912b45d36a3cc3",
    "number": 1435,
    "body": "Camelize now loops through the last character. Before it stopped one character short and would not change the case of that character.\n",
    "head_branch": "camelize-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136d918912b45d36a3cc4",
    "number": 1432,
    "body": "Trying to run the php-unit tests and I am getting a syntax error. Looks like there is some misplaced code in here.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136da18912b45d36a3cc5",
    "number": 1430,
    "body": "Phalcon\\Translate is not used anywhere in the source and provides absolutely no functionality.\n",
    "head_branch": "translate",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136db18912b45d36a3cc6",
    "number": 1429,
    "body": "``` php\n$_POST = array(\n    'type' => 'mechanical', \n    'name' => 'Astro Boy',\n    'year' => 1952, \n    'token' => '123456'\n);\n$robot = new Robots();\n$robot->assign($_POST, array('type' => 1, 'name' => 1, 'year' => 1), TRUE);\n```\n",
    "head_branch": "model_assign",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136dc18912b45d36a3cc7",
    "number": 1427,
    "body": "See #1413, #1428 \n",
    "head_branch": "issue-1413",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136dd18912b45d36a3cc8",
    "number": 1424,
    "body": "",
    "head_branch": "build",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136de18912b45d36a3cc9",
    "number": 1421,
    "body": "Currently `build/install` script builds Phalcon without -DPHALCON_RELEASE which results in the debug code being placed into the library.\n",
    "head_branch": "1.2.4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136df18912b45d36a3cca",
    "number": 1420,
    "body": "See #1413\n",
    "head_branch": "issue-1413",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136e118912b45d36a3ccb",
    "number": 1419,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136e418912b45d36a3ccc",
    "number": 1418,
    "body": "See #1413\n\nPlus updated changelog and regenerated build/ files\n",
    "head_branch": "1.2.4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136e518912b45d36a3ccd",
    "number": 1416,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136e618912b45d36a3cce",
    "number": 1414,
    "body": "Hi,\n\nI believe that this part is not needed?\n\nThanks,\n\nKamil\n",
    "head_branch": "1.3.0-tidy-up",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136e718912b45d36a3ccf",
    "number": 1412,
    "body": "",
    "head_branch": "xcache-1.2.3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136e818912b45d36a3cd0",
    "number": 1411,
    "body": "See #1409\n\n``` php\n$Acl = new Phalcon\\Acl\\Adapter\\Memory();\n$Acl->allow('*', $resource, $actions);\n```\n\nFatal error: Uncaught exception 'Phalcon\\Acl\\Exception' with message 'Role \"*\" does not exist in ACL\n",
    "head_branch": "acl",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136eb18912b45d36a3cd1",
    "number": 1407,
    "body": "#1404 with all conflicts resolved and bugs fixed\n\n```\ngit diff 68af6979785ac75cf8439c033aa7b18cc1e21394 faf66ef2c62995becd432f6dd2ea6aac80efbf21\n```\n\nshould show differences only in build/\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136ec18912b45d36a3cd2",
    "number": 1406,
    "body": "",
    "head_branch": "1.2.4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136ef18912b45d36a3cd3",
    "number": 1404,
    "body": "",
    "head_branch": "1.2.4",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136f018912b45d36a3cd4",
    "number": 1403,
    "body": "",
    "head_branch": "put",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136f118912b45d36a3cd5",
    "number": 1402,
    "body": "See #1401\n",
    "head_branch": "issue-1401",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136f218912b45d36a3cd6",
    "number": 1400,
    "body": "See #1399\n",
    "head_branch": "issue-1399",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136f318912b45d36a3cd7",
    "number": 1398,
    "body": "See #1397\n",
    "head_branch": "issue-1397",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136f418912b45d36a3cd8",
    "number": 1396,
    "body": "Constructor patch.\n\nPS. This is already fixed in 1.3.0\n",
    "head_branch": "1.2.4-builder-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge b2e3cbed25fec336db0d5f5011873abedc8663cb into 5061bdca1db01bc603f440aa60be94852407249d"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662136f518912b45d36a3cd9",
    "number": 1395,
    "body": "Fix #1352 Add Flush for Cache\n",
    "head_branch": "flush",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136f618912b45d36a3cda",
    "number": 1394,
    "body": "See #1392\n",
    "head_branch": "issue-1392",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136f818912b45d36a3cdb",
    "number": 1393,
    "body": "Plus fix #1392\n",
    "head_branch": "1.2.4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136f918912b45d36a3cdc",
    "number": 1390,
    "body": "See #1379\n- fix memory leaks;\n- sync base.c with parser.c\n",
    "head_branch": "issue-1379",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136fa18912b45d36a3cdd",
    "number": 1389,
    "body": "Apply @dreamsxin 's fixes to other parsers\n\nSee #1379\n",
    "head_branch": "issue-1379",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136fb18912b45d36a3cde",
    "number": 1387,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136fc18912b45d36a3cdf",
    "number": 1386,
    "body": "See #706\n\n``` php\n$form = new \\Phalcon\\Forms\\Form();\n$form->add(new \\Phalcon\\Forms\\Element\\Text('name'));\n\n$form->add(new \\Phalcon\\Forms\\Element\\Text('before'), 'name', true); // add before\n$form->add(new \\Phalcon\\Forms\\Element\\Text('after'), 'name'); // add after\n```\n",
    "head_branch": "form",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136fd18912b45d36a3ce0",
    "number": 1384,
    "body": "",
    "head_branch": "tag-volt-1.2.4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge c47023250b0755dd9524076354fb91a9e3465c98 into b4ea33cb7d65e7d6464c0a34b9a7b8165ae9d78d"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662136fe18912b45d36a3ce1",
    "number": 1383,
    "body": "Fix #1379 \nIn phvolt_internal_parse_view function use MAKE_STD_ZVAL,\nin phvolt_parse_view function use zval_ptr_dtor free it.\n",
    "head_branch": "view",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge e6b6490894df6d60dfe698a3ec24242864ea3acf into 8a466a6ba4d04fb8d22436a757a17f122380b4cb"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662136ff18912b45d36a3ce2",
    "number": 1382,
    "body": "See #1377; cherry picked from commit a9e7ba23fb02ed8ee51073167914769c7612cf23\n",
    "head_branch": "issue-1377",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge de67cbdf4952774b2e541478215e37277817cf7a into cb714c41a24f4260eeda37f68e703a8bbb664bcc"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621370018912b45d36a3ce3",
    "number": 1381,
    "body": "See #1379\n",
    "head_branch": "issue-1379",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge bc57595ecfbcbeab4d4987485437a64e0b49b62d into b3a088a097630b65f2b5c66694c58374ae95d0b9"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621370218912b45d36a3ce4",
    "number": 1378,
    "body": "See #1375\n",
    "head_branch": "1.2.4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 06748eb78d9efad4dcf05abc9f3c0e78af992c17 into 3d0c48dbb54b090558029311b3f2d00322b8511a"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621370318912b45d36a3ce5",
    "number": 1375,
    "body": "This PR fixes (almost) all errors found by [scan-build](http://clang-analyzer.llvm.org/scan-build.html) plus bugs found by Valgrind (#1368, #1369, #1370, #1371)\n",
    "head_branch": "scan-build",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge e064141b3c604c156f4ab39c335d7fc66e40a10c into 204557c5908b448c5de5cd5f845cfb9f6f55813d"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621370418912b45d36a3ce6",
    "number": 1374,
    "body": "The updated PR accoring to #1083 against the 1.3.0 branch.\nThis time, I haven't pushed the phalcon.c and phalcon.h files cause I noticed they're most likely impossible to merge. I'll send another PR against the docs once this got through the review. \n",
    "head_branch": "feature-1083",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 4d74e2eac551b51c31bf6e7591be7be95a0a48e0 into 10f9886922a8b3127e38d297e471fe5e1812adca"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621370518912b45d36a3ce7",
    "number": 1372,
    "body": "",
    "head_branch": "1.3.0-comments",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge f9155ec3f281a7015fd70301fd7a1067f0c13b87 into 73288a1a347b6bcff6cc754bd02e9cacc829ef7f"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621370618912b45d36a3ce8",
    "number": 1366,
    "body": "See #1362\n",
    "head_branch": "issue-1362",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 07159568ee34f67151c1506dc3e0b24455741737 into 5eb89852f2bdf5a731253f348a22553810115ca0"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621370718912b45d36a3ce9",
    "number": 1365,
    "body": "See https://github.com/phalcon/cphalcon/issues/1363\n",
    "head_branch": "tag-title-separator",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 00a00f981f986af27daad4c0ec90fe6e9e644cb2 into 536744da14759fab2ddc1b83daccd86b311906c4"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621370818912b45d36a3cea",
    "number": 1361,
    "body": "- use phpunit instead of manual-unit because manual-unit does not implement all assertions used in the tests;\n- pass --quiet to lcov and genhtml to keep the build log clean\n",
    "head_branch": "coverage",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge badcc319272fb9d5cda7f12bee04467bfdbfcb50 into 54426118d8ea804df68d900d9807681dea748087"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621370a18912b45d36a3ceb",
    "number": 1360,
    "body": "",
    "head_branch": "1.2.4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge b52d26e5a7f20ad6732136cf71732e7816c76270 into ac325e2ad741b4ddb33962c21ab007ecbdad8e41"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621370b18912b45d36a3cec",
    "number": 1359,
    "body": " Implement #1353 add `safe` param for \\Phalcon\\Crypt::encryptBase64\n",
    "head_branch": "1353",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 661d4e25fb47f0b49a66408f339ab0245d54f6a6 into 45a32a58e8b4995d22d94c1468f7a8367f4a2d5b"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621370c18912b45d36a3ced",
    "number": 1358,
    "body": "Let \\Phalcon\\Session implementation automatically deleted.\n\nSee [NFR] Implement Phalcon\\Flash\\Session::isset(). https://github.com/phalcon/cphalcon/issues/1342\n\nHe said: I wanted to use ->flashsession because it auto-removes message once it's been accessed.\n",
    "head_branch": "session",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge c1f874ac466f48f8e04a30a1c752e985a1013d3c into ed7ad581c24d9fea34409a84ce39e79884898526"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621370d18912b45d36a3cee",
    "number": 1357,
    "body": "See #1349\n",
    "head_branch": "issue-1349",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 41889b202f34377873b55cde98656c7b7856c816 into f90743d7a59537ea997cb26cfa1231736cbb1941"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621370e18912b45d36a3cef",
    "number": 1356,
    "body": "See #1342\n",
    "head_branch": "issue-1342",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge bb8f202663176e8545bb0bbb4b170ea4603c3b61 into c153b9482ae1768a7e4e6e39c32548bd935193dd"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621370f18912b45d36a3cf0",
    "number": 1355,
    "body": "The bug was introduced in cc8bc086381dc0b8d2b8a2751f29c0667545da33\n\nSee #1350\n",
    "head_branch": "issue-1350",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge b7bf4a51f8889a94257da53dfff8cf1c219b5bef into a01c8b72b7b6209c1a15c37d752532460c908759"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621371218912b45d36a3cf1",
    "number": 1354,
    "body": "See #1347\n",
    "head_branch": "1.2.4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge bb401013ead04adec607c5c25abcc24f9ab2d597 into 533ba0023e38dc2dac5293d0e893c693bfba523d"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621371318912b45d36a3cf2",
    "number": 1347,
    "body": "The initial idea of this PR was to introduce Phalcon\\Security\\computeHmac() function which computes [HMAC](http://en.wikipedia.org/wiki/Hash-based_message_authentication_code) of the given message — it can be used to verify both the data integrity and the authentication of a message. One of its possible applications is to verify that the cookies were not tampered with.\n\nBug fixes included into this PR:\n- Issue #1340\n- Issue #1343\n- Issue #1345\n\nTo properly fix #1340 (and similar bugs in the rest of the code) I have made these changes:\n- `PHALCON_SEPARATE_PARAM()` now always separates its parameter — regardless of its refcount;\n- introduced `phalcon_fetch_parameters_ex()` function and `fetch_params_ex()` macro — these ones return `zval**` instead of `zval*`. However, this allows to use `SEPARATE_ZVAL()` on the returned arguments without worrying about memory leaks;\n- introduced convenience macros for type conversion — `PHALCON_ENSURE_IS_xxx()`. These ones take `zval**` as their argument, separate it if it is not a reference and perform type conversion. These macros are friendly to memory frames; they can work with method arguments but only if the arguments were fetched with `fetch_params_ex()`.\n",
    "head_branch": "security",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge b99919b3281d85cbd7aeb7feae8995f89a8f4d3a into cd6fd6f3b247cd3af4a8162c16b43d1d89aefdd5"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621371518912b45d36a3cf3",
    "number": 1346,
    "body": "",
    "head_branch": "http_request",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 43cc871cf81e50cb71c3b495c7225374a558b105 into 768111dbfaf098e92e61fdea9387bfd6a2b7e397"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621371618912b45d36a3cf4",
    "number": 1339,
    "body": "This PR:\n- fixes 'Array to string conversion' error in Phalcon\\Tag\\Select::selectField\n- adds several tests from unit-tests/ to php-tests/\n- adds support for local database configs to php-tests/\n- fixes several incorrect tests\n",
    "head_branch": "tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge d2de4fd4a89528e9f20a1257b8a1eb53ddc7b4e9 into 6cd15bffd2f71ab70624fa0eca7e2bd1f148fb09"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621371818912b45d36a3cf5",
    "number": 1338,
    "body": "See #1131 and #1137\n",
    "head_branch": "1.2.4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 0e901fd6d74082106bac470d5913ad21aa7cfb25 into 42cdf58b793a874cccb6d8c0f2098b0880a43364"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621371918912b45d36a3cf6",
    "number": 1337,
    "body": "Bug fix for: #1331\n- change of dettach to detach\n",
    "head_branch": "1.3.0-issue-1331",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 6e6f3c96348c740e9c8b9b4208adbab867f87564 into e93282395ce27af81ba61da4844200aca6f61786"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621371b18912b45d36a3cf7",
    "number": 1335,
    "body": "See #1312\n",
    "head_branch": "tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge b187af3f8b768af97095111234c89154f950e668 into 42a4f37e48d1b9a51dacec7b3dac2ffee92a2327"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621371c18912b45d36a3cf8",
    "number": 1334,
    "body": "See https://travis-ci.org/sjinks/cphalcon#L596\n",
    "head_branch": "view-engines",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge d2d22e2ae69d4ecf4cf9aab04e82ddff716c523e into ba602978978527e8ed9bc71555415ab61dc69493"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621371d18912b45d36a3cf9",
    "number": 1333,
    "body": "",
    "head_branch": "1.2.4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge c8c7476ee44a3f039678fc1b47579e00c810ca89 into f872e508a56a1fbe67aa18a254a7d478450bb2ea"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621371e18912b45d36a3cfa",
    "number": 1332,
    "body": "See phalcon/incubator#44\n",
    "head_branch": "incubator-44",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge c3180c2287a8fd91525ec1f3bf2e45bbedfc28d6 into 75313f484a02666077968f8ff5ee202c69843617"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621371f18912b45d36a3cfb",
    "number": 1330,
    "body": "",
    "head_branch": "1.2.4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 26f3d8cfe1640b5665afae57bdf418fe871d3d01 into bb0b31c4b5ea6965314e3a9e09bc07eed01f22fa"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621372018912b45d36a3cfc",
    "number": 1328,
    "body": "See #1327\n",
    "head_branch": "issue-1327",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge bc5c6510b3b1a717df461683349969f2fa02cfaa into f58df2a28f04b8d5e1f8240cc6752a6066c7a424"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621372118912b45d36a3cfd",
    "number": 1326,
    "body": "See #907\n",
    "head_branch": "issue-907",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 5b7f9e217f345c6b938b11b5c034330ea9b49f8c into 962531c04cd4a4fe2dbfaeded7b29902f6e13926"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621372218912b45d36a3cfe",
    "number": 1325,
    "body": "See #1315\n",
    "head_branch": "issue-1315",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge ebf1cf79884f9aabdfa8095cefc8eb82b1f83d05 into ade611e0fe7ecff10ba2a73702c2875f7c4d61af"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621372318912b45d36a3cff",
    "number": 1323,
    "body": "See #824\nSee http://www.w3schools.com/html/html5_form_input_types.asp\n",
    "head_branch": "issue-824",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 8ed77656faf105f9b2b34f312bf5634ca7187c1d into 6d9ee7f07dd65ae692a024480251d6f8fb3cfbb2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621372418912b45d36a3d00",
    "number": 1322,
    "body": "See #907, #1320\n",
    "head_branch": "issue-1320",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 880041b69a899b947899622295f3f94fed36c0d3 into 8a1d6551282b194df27e1e5b9ca9b266cf5d2c20"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621372618912b45d36a3d01",
    "number": 1321,
    "body": "More cases where we can use permanent zvals.\n",
    "head_branch": "perm-zvals",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 9b16d4d636540adb8db2496c005a15b1c6ae4924 into c5adecab87deca84819266b149ab757550941094"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621372718912b45d36a3d02",
    "number": 1319,
    "body": "See #1242\n\n1c9fa6e gives usage example\n",
    "head_branch": "issue-1242",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 1c9fa6ee1bc24f61ae718aa8a201a645cd6042b6 into 38ed6f7c076062bcfa63ae5a258133947038185e"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621372818912b45d36a3d03",
    "number": 1318,
    "body": "",
    "head_branch": "1.2.4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge f6483e4c129a73074a30e27d4671f9b122bfe3b9 into e22c0defeaf41a9a29600aaf9dff4e03d044769a"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621372918912b45d36a3d04",
    "number": 1317,
    "body": "See #1314\n",
    "head_branch": "issue-1314",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 5643691b96d6571726a35103fecd4d3a8a65d772 into 9d16ea97bd59e3b3a1c8d0b16de3f1ee75804372"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621372a18912b45d36a3d05",
    "number": 1316,
    "body": "[NRF] Model::validate add param\n\n``` php\npublic function validation()\n{\n        $this->validate('status', 'is_int');\n        $this->validate('status', array(\n            'is_int',\n            'message' => 'status must be integer'\n        ));\n        $this->validate('status', array(\n            array(\n                'Some_Class::some_method',   // validate one\n                array('in_array', array(':value', array(1, 2, 3))) // validate two\n            ),\n            'message' => 'status must be one of the available options'\n        ));\n        $this->validate(new ExclusionIn(array(\n            'field' => 'status',\n            'domain' => array('A', 'I')\n        )));\n        if ($this->validationHasFailed() == true) {\n            return false;\n        }\n    }\n```\n",
    "head_branch": "model_validate",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621372b18912b45d36a3d06",
    "number": 1313,
    "body": "In this PR:\n- fix incorrect doctypes for HTML5 and HTML 4.01 Frameset\n- integrate PHP regression tests into PHPUnit (now we can run them from the single place)\n",
    "head_branch": "tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge c395b9aaaa0229e45dd5581d9fddfed23ab844f7 into b9c0c2452417174eb66d8317b08867dbccb3e7b6"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621372c18912b45d36a3d07",
    "number": 1311,
    "body": "Do not run PHPT test suite from PHPUnit\n",
    "head_branch": "1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge b009def217e5f19f2eccbf6192230f19588dfbc7 into 25d22fd5a1052f47fd04be3b019de663ae020fa4"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621372d18912b45d36a3d08",
    "number": 1310,
    "body": "See #1309\n",
    "head_branch": "issue-1309",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 88f934e130b8496bfd9256ff02375171b4591939 into d89c1de106891826c22f174df376816c1cc5ecc3"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621372e18912b45d36a3d09",
    "number": 1308,
    "body": "README:\n- updated the list of the packages needed to build Phalcon (#1245)\n\nCONTRIBUTING:\n- added a section on bug reports\n- howto: build phalcon in debug mode\n- howto: get the backtrace with gdb (maybe move to Wiki?)\n",
    "head_branch": "issue-1245",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 7b43eb8df69aea640ba9f39cf258a47611c54229 into 1bb3e4ddf07fa4820c34c223579deea68861906d"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621373118912b45d36a3d0a",
    "number": 1307,
    "body": "In this PR:\n- added more regression tests (they were taken from php-tests directory — is it used anywhere?)\n- added support for test coverage\n- modified build file generator.\n\nThe most interesting part is \"test coverage\".\n\nNow Phalcon can be build with --enable-coverage key, ie\n\n``` bash\nphpize\n./configure --enable-coverage\nmake\n```\n\nThis requires `lcov` and `genhtml` programs (`apt-get install lcov` in Debian and Ubuntu).\n\nTo get the test coverage, run\n\n``` bash\nmake coverage\n```\n\nThis will run regression tests, unit tests and then produce test coverage information in `coverage/` directory (open `coverage/index.html` in the browser to view the details).\n\nThis is what the report looks like: https://www.diigo.com/item/image/3zdqq/hjpw\n\nThis can be useful if someone wants to write more tests as it shows completely grey areas not covered by any tests.\n",
    "head_branch": "tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 96bf3848c5cde187052a3f26d171c4088e2ccc34 into 54fadc963995e7e20603e243908a5f740df5c942"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621373318912b45d36a3d0b",
    "number": 1305,
    "body": "See #1303\n",
    "head_branch": "1.2.4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 43ff6482ddddfa7e2ffc2269e95e5033fcae939b into b0837ce56a1a6c886cfdabf5a946f29f87222598"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621373418912b45d36a3d0c",
    "number": 1304,
    "body": "See #1303\n\nBuild for PHP 5.5 fails because of the issue addressed in #1302\n",
    "head_branch": "issue-1303",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 29ec64a2375cc20df69255a4649c6a701e69299f into 5e249c1d077b0665756127ea3eecd757a21bc3c4"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621373518912b45d36a3d0d",
    "number": 1302,
    "body": "This is what was implemented in 2.0.0 / Zephir and appears to be very useful optimization. In some cases it helps avoid creation of the memory frame because we don't need `PHALCON_INIT_VAR` anymore.\n\nIn addition, this PR fixes the bug when a function calls another function (passing it its return_value and return_value_ptr) and the called function throws an exception:\n\n``` c\nPHP_FUNCTION(test1)\n{\n    phalcon_call_function_p0_ex(return_value, return_value_ptr, \"test2\");\n}\n\nPHP_FUNCTION(test2)\n{\n    zend_throw_exception(...);\n}\n```\n\nIn this scenario, Zend (`zend_call_function()`) detects the exception and frees the variable `return_value_ptr` [points to](http://lxr.php.net/xref/PHP_5_5/Zend/zend_execute_API.c#967). But because `test1` passed to `test2` its own `return_value`/`return_value_ptr`, `test2` frees `test1`'s return value. Then, after `test2` and `test1` return, Zend sees there is an active exception and tries to free the return value of `test1` which was already freed on return from `test2` and segmentation fault happens.\n\nWe tried to address this issue in the past (in `phalcon_alt_call_method`) but that fix is not applicable to all kinds of static calls because they are dispatched via `zend_call_function`.\n",
    "head_branch": "perm-zvals",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 9fc74d74d5ad79df67cd9016d1cb41a6c7d21503 into c33d65ae30b96194b0aa6b6b264832e8537de45f"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621373818912b45d36a3d0e",
    "number": 1301,
    "body": "",
    "head_branch": "feature/1083",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621373918912b45d36a3d0f",
    "number": 1297,
    "body": "For example,\n\n``` php\n<?php\n$object = new stdClass();\n$object->title = 'Hello \"world!\"';\n\n$form = new Phalcon\\Forms\\Form($object);\n$form->add(new Phalcon\\Forms\\Element\\Text(\"title\"));\necho $form->render('title');\n```\n\nwhen run, it produces something like this:\n\n```\nWarning: Uncaught exception 'Phalcon\\Tag\\Exception' with message 'A dependency injector container is required to obtain the \"escaper\" service' in /home/vladimir/workspace/cphalcon/1190.php:8\nStack trace:\n#0 [internal function]: Phalcon\\Tag::getEscaperService()\n#1 [internal function]: Phalcon\\Tag::_inputField('text', Array)\n#2 [internal function]: Phalcon\\Tag::textField(Array)\n#3 [internal function]: Phalcon\\Forms\\Element\\Text->render(NULL)\n#4 /home/vladimir/workspace/cphalcon/1190.php(8): Phalcon\\Forms\\Form->render('title')\n#5 {main}\n  thrown in /home/vladimir/workspace/cphalcon/1190.php on line 8\n\nFatal error: Phalcon\\Tag::_inputField(): Call to undefined function self::getescaperservice() in /home/vladimir/workspace/cphalcon/1190.php on line 8\n```\n\n\"Fatal error\" message should not be there.\n",
    "head_branch": "fcall-diag",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 1b4f5f271c2e329a06acf66e0130ce329554367f into aa8090b8af54e4a7c25ab8fb2c845e0e8ef5b657"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621373a18912b45d36a3d10",
    "number": 1295,
    "body": "Fix nfr #1238\n",
    "head_branch": "1238",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 7d49a79fd733b5d1858f65fdfb1cd1de5fc729b9 into 60200da251fdae67028c29732d34d2615ec5b153"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621373b18912b45d36a3d11",
    "number": 1293,
    "body": "Pros:\n- phalcon_fetch_static_property_ce() does not need PHALCON_OBS_VAR()\n- phalcon_fetch_static_property_ce() and phalcon_update_static_property_ce() use zend_class_entry — this saves hash table lookup.\n\nPlus:\n- use interned strings in \\Phalcon\\Tag\n",
    "head_branch": "static-properties",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 7dbb9804c8398eb2991184db465fd4160c1e2bf3 into 27c21771271be521955d251e0b7d1d66c8caca07"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621373c18912b45d36a3d12",
    "number": 1291,
    "body": "",
    "head_branch": "memleaks",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge bfae0e2ae623e4c264037e87ead1f861e108e498 into 4ae45b7d24fae217af97a91f737cddc65fcd7753"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621373d18912b45d36a3d13",
    "number": 1290,
    "body": "",
    "head_branch": "1.2.4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge c1bcc58682ad7a67ccb685676b4857b04dc4f1f8 into b535b42bb2510d809aba25a48b049fe899b17c99"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621373e18912b45d36a3d14",
    "number": 1289,
    "body": "See #1130\n",
    "head_branch": "1.2.4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge fe37fd0e967f2f5997a84715221c151fc226a037 into f87c44a8d9e38174b438ab7be3a9f69465daa7c7"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621373f18912b45d36a3d15",
    "number": 1288,
    "body": "See #1130\n",
    "head_branch": "issue-1130",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 2127255c8bd6b8f7d90d4de3ec004c94c114da28 into 4b81f539ed89fcbf085acaaee77e07af84307f29"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621374118912b45d36a3d16",
    "number": 1287,
    "body": "See #1284\n",
    "head_branch": "1.2.4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 956d7baf4ad0da4f3d6c809b62c4a12193628bcd into a9bed5d23d5a8dd1efbef444d2e9635d786e2660"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621374218912b45d36a3d17",
    "number": 1286,
    "body": "See #1284\n",
    "head_branch": "issue-1284",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 4baad63f6efcf206f72d65fdab3dd5329a5b33ab into 6914186e3af713e758a2e1bddefc5e5d799054a8"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621374318912b45d36a3d18",
    "number": 1283,
    "body": "",
    "head_branch": "1.2.4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 005971b9556a7c799eb65582d6667f570682d592 into a0c4bf723205896c690267694532de36f8a2f582"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621374418912b45d36a3d19",
    "number": 1281,
    "body": "",
    "head_branch": "remove",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 46d1793e8c088219a504ee51019b54d166d693e7 into fe2db32e8be70f3ad663e1187fef6a8f60fc5a58"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621374518912b45d36a3d1a",
    "number": 1279,
    "body": "See #1277\n",
    "head_branch": "issue-1277",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 5a7bc48d1c84e32877be4e29fcb3f8c94ba55a0a into 731f24248469db107997b8a98abe489b24fecea2"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621374818912b45d36a3d1b",
    "number": 1278,
    "body": "See #1277\n",
    "head_branch": "1.2.4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge ab427ebe3add185b73f4d6c7c47cde187c1a30f2 into 747dd0fb3d962f9a0d55d539c2a9b982b48256cd"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621374918912b45d36a3d1c",
    "number": 1274,
    "body": "See #1273\n",
    "head_branch": "issue-1273",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 26d4133729b00366bcd8547b300a6beb0855e3c7 into 70e1a017c1b38ddd93c06329486ec64ae71c92fc"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621374a18912b45d36a3d1d",
    "number": 1272,
    "body": "",
    "head_branch": "bug_volt",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 2cba1b5ad1ab9c5f3f42ba682fa8bd2f87caf3d9 into a3dccb402f1afdcc239c122046c357565af8f679"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621374b18912b45d36a3d1e",
    "number": 1271,
    "body": "See #1263\n",
    "head_branch": "issue-1263",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 0aa63b3b531407b5230fa264d5972bf0b084fc4b into edaab956f1f8dc68dba3ce88e30d166c33b42d3b"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621374d18912b45d36a3d1f",
    "number": 1270,
    "body": "See #1263\n",
    "head_branch": "1.2.4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 574b3604f5e50468ff1cc7dc93f084e01788012f into c320f63feefda919b06b0e8255a269e3a914a1f5"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621374e18912b45d36a3d20",
    "number": 1269,
    "body": "Determine if current DirectoryIterator item is a symbolic link\n\n1) CacheTest::testDataMemcachedCache\n\nPHP Notice: Undefined index: SCRIPT_NAME in /home/travis/.phpenv/versions/5.5.0/share/pyrus/.pear/php/PHPUnit/Util/Filter.php on line 69\n\nNotice: Undefined index: SCRIPT_NAME in /home/travis/.phpenv/versions/5.5.0/share/pyrus/.pear/php/PHPUnit/Util/Filter.php on line 69\n\nFailed asserting that false is true\n",
    "head_branch": "about_build",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 927fba31a0fb18408c366c3ece7b35b1f959210a into 19c41c2a7096f1077fd4957fe273472e3a4a780b"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621374f18912b45d36a3d21",
    "number": 1268,
    "body": "Issue #1226 Change param allowEmpty to notAllowEmpty Use ZVAL_FALSE() here to make sure we remain backwards compatible\n",
    "head_branch": "1226",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge b0edf49e35b1afc293ac54191df562960396b4ff into 70e1a017c1b38ddd93c06329486ec64ae71c92fc"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621375018912b45d36a3d22",
    "number": 1267,
    "body": "Fix #1265 add param $noRecursive for http\\request\n",
    "head_branch": "1265",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 464c40a313ca2755fe104c8ea9aab278564b37bd into 2451e80ce3ae0e981aa4612de7f14643a39bb09d"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621375118912b45d36a3d23",
    "number": 1266,
    "body": "Variables declared  at a start of a block\n",
    "head_branch": "nfr_request",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 3945b3103efe059faef2ef118b4b316746dafa3f into 6a0e6d47e8e5c2162fb79a4019e1369dfbaa186b"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621375218912b45d36a3d24",
    "number": 1261,
    "body": "",
    "head_branch": "max_pass_len",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 8fd185c586fa2f4873a8694ad67591b031ca3f32 into 4c85e87b11bf764630453b2572ad5d7c6e8dfa94"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621375318912b45d36a3d25",
    "number": 1260,
    "body": "See #1258\n",
    "head_branch": "issue-1258",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 1317dcca33bce698a25da5124124e7e6f42cc20c into f7a9dc54e5fbcfa24f58f03ee7c07473507bcaa4"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621375418912b45d36a3d26",
    "number": 1259,
    "body": "See #1258\n",
    "head_branch": "1.2.4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 8cf9ec4fdf726f42c71abbb0dba3aa9d74fb8e8a into 16dff654967afff7039a79bb8dd765cdd6d7466b"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621375818912b45d36a3d27",
    "number": 1257,
    "body": "",
    "head_branch": "1.2.4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge a321ca8add47b4b3eab930f9d4dde3909dbd9f6e into 4295d32ea5903b51623051a1e5f068fec75feb5e"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621375918912b45d36a3d28",
    "number": 1256,
    "body": "",
    "head_branch": "tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge a4610abd41804c5ad86743dc42a1c44344439828 into b97aef3fadb8a5aa90362563193eff7d3320a1c6"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621375a18912b45d36a3d29",
    "number": 1255,
    "body": "See #1254\n",
    "head_branch": "zend_execute_internal",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge eaf7b3d662731ff4a101f9cbe5b0211df46117c1 into dcf9d493fb42ea93407a95634ab52b5e24fdd12a"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621375b18912b45d36a3d2a",
    "number": 1254,
    "body": "",
    "head_branch": "1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621375e18912b45d36a3d2b",
    "number": 1252,
    "body": "",
    "head_branch": "1.2.3.1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 4bf6674fa0752fd0d484543b28642401af6ef031 into ae632810ff279d56cfebb29d2e4cbce0e7b9a4be"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621375f18912b45d36a3d2c",
    "number": 1251,
    "body": "See #905\n",
    "head_branch": "issue-905",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 6da8921b22878136867856851cd9cfbc9c534563 into 8b8bc808dde188530a063fdc4d13c6646de86032"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621376018912b45d36a3d2d",
    "number": 1250,
    "body": "",
    "head_branch": "nfr_request",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 54e369f7c9b718e9cf2b1fc4314452d1389e227c into ef5c57c954af12326518b8003f0a6bb2097c0aa1"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621376118912b45d36a3d2e",
    "number": 1249,
    "body": "",
    "head_branch": "image",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 715f64c49e6e02816294ed2ff9b4c7592b1fa5ee into a061f9ac63793f303bc147020c22cce284875a71"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621376218912b45d36a3d2f",
    "number": 1248,
    "body": "Use imagecreatefromstring replace imagecreatefrompng\nSee #1246 \n",
    "head_branch": "bug_1246",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621376418912b45d36a3d30",
    "number": 1247,
    "body": "See #1243\n",
    "head_branch": "issue-1243",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge b728a9914b580def9bbec5901b185698c3a1cfa0 into bc3836173633f8039031e782e78a7142521cb3b9"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621376518912b45d36a3d31",
    "number": 1245,
    "body": "Adding required package to build 1.3.*\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621376618912b45d36a3d32",
    "number": 1244,
    "body": "Adding missing package that is required to build 1.3.*\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621376718912b45d36a3d33",
    "number": 1241,
    "body": "",
    "head_branch": "nfr_getJsonRawBody",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 0e98d2afa81750f7eab3d7f9a22bca093fd8312d into 64c27399127a039a300f4a8c074c53f50071375d"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621376818912b45d36a3d34",
    "number": 1237,
    "body": "",
    "head_branch": "mcrypt",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 1ea7161ff96f227fd9b1d826ca669674464181c2 into 6e9ad6a44f25325d35793d5e14503246064f0a60"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621376918912b45d36a3d35",
    "number": 1236,
    "body": "Hi,\n\nYes, that's my second try. I added support for 'conditions' key with bind params and bind types in constructor of Mvc\\Model\\Query\\Builder class.\n\nCould you please do a code review of/help me with following code?\n\nThanks,\n\nKamil\n",
    "head_branch": "1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 4d4a3c079f8cf08c6fb110ad342a5251caba872d into f5bedfffbc567b945f9267898f4c65eeafd334e5"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621376a18912b45d36a3d36",
    "number": 1235,
    "body": "`zend_get_constant()` returns 1 or 0, not SUCCESS or FAILURE\n",
    "head_branch": "zend_get_constant",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 52b472c19af2e03433358016ef7bf9252b244967 into 3585034110d82d1640e1a9618459325fee4c0ebc"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621376b18912b45d36a3d37",
    "number": 1234,
    "body": "In 4.0.2 APCu changed (again!) the signature of APCIterator and therefore a special treatment is needed to work around that change.\n",
    "head_branch": "apcu",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 42442418ff304c65d5221a4795bb1a7170fb8513 into 068667a4ee46b5c2601bbbb6fcf56d11caa37bd8"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621376c18912b45d36a3d38",
    "number": 1233,
    "body": "See #1198\n\nThe build fails for PHP 5.5 because APCu guys managed to break it :-(\n",
    "head_branch": "issue-1198",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 0ace81fca062e98cb9a8dc6ad5e8317a40556b6a into cf1d6c208ae0cce923e50a06f533ad6f19d81771"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621376d18912b45d36a3d39",
    "number": 1232,
    "body": "",
    "head_branch": "2.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 4a6879a1e44dec78bc6192a6b91905a61be76159 into 44b949ce5e33f61cc2680442caf04929ff6f0b8b"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621376f18912b45d36a3d3a",
    "number": 1231,
    "body": "Also regenerated build files, thus now Phalcon can be compiled in Windows.\n",
    "head_branch": "1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 33f8ee7f129cde0ce93b1a79f828c50c07178870 into 9b95292847496f35fb2c3d64616268f057d35f93"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621377018912b45d36a3d3b",
    "number": 1230,
    "body": "",
    "head_branch": "model",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 7d5cfc5cc8233718283d84c4ce171c18287af08b into a3a9f885e104511e81ba7c36aca037f2881ece81"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621377118912b45d36a3d3c",
    "number": 1229,
    "body": "Determine whether there is increasing array index\nFix BUG  #1222\n",
    "head_branch": "1222",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 2de58f31601f50bcb844b9acca07048768718d48 into d681b2d0c4d31cb90441624a412fd16a047f83ea"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621377218912b45d36a3d3d",
    "number": 1228,
    "body": "When\n\n``` php\nclass Contacts extends \\Phalcon\\Mvc\\Model\n{\n    /**\n     * Initialize method for model.\n     */\n    public function initialize()\n    {\n        $this->setSchema(\"\");\n    }\n}\n// ...\n$result= $this->getDI()->get('modelsManager')\n    ->createBuilder()\n    ->columns('*')\n    ->from('Accounts')\n    ->join('Contacts', 'Contacts.account_id = Accounts.id')\n   ->limit(10)\n   -> getQuery()->execute();\n```\n\nSQL error in `\"\".\"contacts\"`:\n\n``` SQL\nSELECT ... FROM \"accounts\" INNER JOIN \"\".\"contacts\" ON \"contacts\".\"account_id\" = \"accounts\".\"id\"  LIMIT 10\n```\n",
    "head_branch": "model",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621377318912b45d36a3d3e",
    "number": 1227,
    "body": "Add a parameter `allowEmpty` for Http\\Request::get\\Http\\Request::getQuery\\Http\\Request::getPost\n",
    "head_branch": "issues_1226",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 2d315c0645e06098e2a967c75ae8fce9285a8ee7 into 70341017b422c89b57c23613ac62b5e4956c938f"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621377418912b45d36a3d3f",
    "number": 1224,
    "body": "",
    "head_branch": "round",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 8d80dbfc67376f4ad0a401578d82f7fcdacf46d3 into 7ce9c702b6794f07e7ff4b5ac270e9fd62c61fb0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621377518912b45d36a3d40",
    "number": 1223,
    "body": "",
    "head_branch": "1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 3c2c46c40a7ea0745726a147c964ecca9d1e7663 into 6979900a6497528451fa5e66a05c75856718f6dc"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621377618912b45d36a3d41",
    "number": 1221,
    "body": "Fix BUG #1214\nMerge @sjinks #1220 PHALCON_INIT_NVAR(_PNULL) optimization\n",
    "head_branch": "bug_1214_new",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 05e44109a495ddf8170098ac812dc7dbf00b49be into 5eebbe6312f616453546358ae77bd7f25765b232"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621377718912b45d36a3d42",
    "number": 1220,
    "body": "Replaces calls to\n\n``` c\nzval_ptr_dtor(&z);\nPHALCON_ALLOC_ZVAL(z);\n```\n\nwith\n\n``` c\nzval_dtor(z);\nZVAL_NULL(z);\n```\n\nwhen `Z_REFCOUNT_P(z) == 1`.\n\nThis:\n- makes sure that the new variable will not changes its location in memory (and thus `PHALCON_INIT_NVAR()` can be used after `PHALCON_SEPARATE_PARAM()` — this will make Image code more readable — @dreamsxin, please watch this thread!)\n- reduces the number of memory (re)allocations\n\nWhen manual-unit.php is run under valgrind:\n- **before:** 1,994,062 allocs, 1,993,839 frees, 355,849,237 bytes allocated\n- **after:** 1,968,935 allocs, 1,968,712 frees, 355,062,535 bytes allocated\n",
    "head_branch": "memory",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge ca8348dae904a0cec5cd14918bdbf4a3b99a5e5b into 67dd2b2a8ab1f460fd2b6bed5d1be815792bb227"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621377818912b45d36a3d43",
    "number": 1219,
    "body": "",
    "head_branch": "events-weak-ref",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge d79912b830a56efa82aff399a18a1cfc58491618 into 8f82c941ebbc4890584b45f76296b332ce63e198"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621377b18912b45d36a3d44",
    "number": 1218,
    "body": "Most changes:\n- cleaned the script and configuration\n- made all build files to be synchronized to the original ones\n- made it more stable\n- optimized speed - on my laptop it became 2.5x faster - from 27s before to 11s after the changes\n- didn't change the generated file locations, so that other scripts (and local dev environments) do not need to be changed\n\nThe much more detailed descriptions are in the commits.\n\nPlease, run the script on Linux and try to build Phalcon from `safe` and one of optimized directories (`32bits` or `64bits`). While I verified it on my Windows, it needs to be checked under Linux as well.\n",
    "head_branch": "1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge c9679d1e1a75bfb7d2e4785494186e21a650a997 into a462ba2c32130a4e4830df686c5fb253882380bd"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621377d18912b45d36a3d45",
    "number": 1217,
    "body": "",
    "head_branch": "slug",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621377e18912b45d36a3d46",
    "number": 1216,
    "body": "",
    "head_branch": "xss",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 7459b3dcaadbda0d160de9eb3aaebe8e46c1cf9c into 45bd7a35532ce3d87032e8c821aedf5bad64bdef"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621377f18912b45d36a3d47",
    "number": 1215,
    "body": "Fix BUG #1214 \nFix some BUG\nPerfect unit-tests/ImageTest.php\n",
    "head_branch": "bug_1214",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621378018912b45d36a3d48",
    "number": 1213,
    "body": "Hi,\n\nI added support for 'conditions' key with bind params and bind types in constructor of Mvc\\Model\\Query\\Builder class.\n\nCould you please do a code review of/help me with following code?\n\nThanks,\n\nKamil\n",
    "head_branch": "1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621378218912b45d36a3d49",
    "number": 1212,
    "body": "See #1210\n",
    "head_branch": "issue-1210",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge f491edf8729e28a44ad2a0e66ca00c570d5baacc into 5ee9d1191a66be5c48cc48496a5b0c811936596d"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621378318912b45d36a3d4a",
    "number": 1208,
    "body": "Hi,\n\nThis time I added support for 'limit' key working as limit (int $limit, [int $offset]) method.\n\nI'll try to code as many points as I will be able to form my previous pull request(https://github.com/phalcon/cphalcon/pull/1205). Sorry for pushing this \"one by one\" but it take huge amount of time for me to get my head around C(as I'm not a C developer) so I prefer to send something before somebody else will fix/write it.\n\nThanks,\n\nKamil\n",
    "head_branch": "1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 9b9f25aa52df0157b869f4e97028f7401e8186c9 into 6fabb3f032aa13edd06e6823b3329482d78ed733"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621378418912b45d36a3d4b",
    "number": 1206,
    "body": "",
    "head_branch": "image_1.3.0_updated",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 7fe0502b18342b3ddb05a3e463fe1be7ab1aaabc into b6729c42e0970d27e059f58cb982a8e5861faf1f"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621378518912b45d36a3d4c",
    "number": 1205,
    "body": "Hi,\n\nI added support for defining 'offset' via constructor but there's many more to updated:\n\nlimit key could take array of 2 values (limit, offset) as the limit() method does limit (int $limit, [int $offset])\n\n'conditions' key could take:\narray(\n    array(string $conditions, [array $bindParams], [array $bindTypes])\n)\nor at least:\narray(string $conditions, [array $bindParams], [array $bindTypes])\n\n'having' key could work in the same way as 'conditions' but it could be simplified to single array(string $conditions, [array $bindParams], [array $bindTypes])\n\nadding explicit DESC or ASC to 'order' value like that array('name DESC', 'id ASC') causes following exception thrown:\nUncaught exception 'Phalcon\\Mvc\\Model\\Exception' with message 'Scanning error before 'name DESC], [id ...'\n\n'models' key(added by me) could take also alias to be the same as addFrom (string $model, [string $alias])\n\nlack of support for following: join, innejJoin, leftJoin, rightJoin, orWhere, betweenWhere, notBetweenWhere, inWhere, notInWhere.\n\nPS. Why all those function aren't simply using methods of that class instead of setting them inside constructor?\n\nPS. PS. On master branch there's still this 'having' typo which makes usage of 'having' key impossible.\n\nI hope that all above makes sense and it' at least a little bit helpful.\n\nThanks,\n\nKamil\n",
    "head_branch": "1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge a870ae71dec67fd5e143de21d79cc265ae3d2568 into b5d626760adf2151c7e4c029ca032a7677a8688f"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621378618912b45d36a3d4d",
    "number": 1204,
    "body": "Hi,\n\nI fixed 'having' key in parameters I also added 'offset' but there's many more to update:\n- limit key could take array of 2 values (limit, offset) as the limit() method does limit (int $limit, [int $offset])\n- 'conditions' key could take:\n  array(\n      array(string $conditions, [array $bindParams], [array $bindTypes])\n  )\n  or at least:\n  array(string $conditions, [array $bindParams], [array $bindTypes])\n- 'having' key could work in the same way as 'conditions' but it could be simplified to single  array(string $conditions, [array $bindParams], [array $bindTypes])\n- adding explicit DESC or ASC to 'order' value like that array('name DESC', 'id ASC') causes following exception thrown:\n  Uncaught exception 'Phalcon\\Mvc\\Model\\Exception' with message 'Scanning error before 'name DESC], [id ...'\n\nPS. Why all those function aren't simply using methods of that class instead of setting them inside constructor?\n\nI hope that all above makes sense and it' at least a little bit helpful.\n\nThanks,\n\nKamil\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621378718912b45d36a3d4e",
    "number": 1197,
    "body": "See #1190\n",
    "head_branch": "issue-1190",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge c7bb02971d933efb4d5fb00a6ff39cc1775ec112 into 03ec63c539aa63b27f15d7433547780710277a55"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621378818912b45d36a3d4f",
    "number": 1195,
    "body": "Use PHP 5.5 new GD function\n",
    "head_branch": "image_1.3.0_updated",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge e51b21eb9783cc0a5d038172fb16b7d788eb07d7 into e3d5a5264c16c2c42102d92d419d7d3f35f381f1"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621378b18912b45d36a3d50",
    "number": 1187,
    "body": "",
    "head_branch": "fix_release_build",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 7ffd036438bbb75d3005b5d9fd29b7c480497a8d into e3e20961acdb6b72b0674a1ec7e130559c13fee9"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621378c18912b45d36a3d51",
    "number": 1181,
    "body": "``` php\n    $client = new \\Phalcon\\Http\\Client('http://localhost/upload.php', 'POST');\n    $client->setData(array('key' => 'value', 'key1' => 'value1'));\n    $client->setFiles(array('unit-tests/assets/phalconphp.jpg'));\n    if ($client->send()) {\n        $code = $client->getResponseStatus();\n        $body = $client->getResponseBody();\n    }\n```\n",
    "head_branch": "nfr_http_client",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621378d18912b45d36a3d52",
    "number": 1180,
    "body": "``` php\n    $client = new \\Phalcon\\Http\\Client('http://localhost/upload.php', 'POST');\n    $client->setData(array('key' => 'value', 'key1' => 'value1'));\n    $client->setFiles(array('unit-tests/assets/phalconphp.jpg'));\n    if ($client->send()) {\n        $code = $client->getResponseStatus();\n        $body = $client->getResponseBody();\n    }\n```\n",
    "head_branch": "nfr_http_client",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621378e18912b45d36a3d53",
    "number": 1179,
    "body": "See #1175\n",
    "head_branch": "issue-1175",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 2becb185578626e49b749af55e9ea96580762ebd into 529aab891f7926256a354808873b33bf89c774f8"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621378f18912b45d36a3d54",
    "number": 1178,
    "body": "",
    "head_branch": "1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge a95d0be7531072af7337e6db31a2bcc136fb0dd2 into 0dadbcb61541cc5fe001174c4bb70457e267be07"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621379018912b45d36a3d55",
    "number": 1177,
    "body": "This should add _code class variable, setter, getter and hopefully not break everything. If maintainers will approve I will continue adding code support to Model messages and validators.\n",
    "head_branch": "nfr-1171",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621379118912b45d36a3d56",
    "number": 1173,
    "body": "See https://travis-ci.org/sjinks/cphalcon/jobs/10730081#L964\n\nFixed: https://travis-ci.org/sjinks/cphalcon/builds/10750313\n",
    "head_branch": "invalid-read",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge f6853a36e42594617de01362302501039c2dbd26 into ce1f17df43cc28bb476e105791596fb8e0581832"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621379218912b45d36a3d57",
    "number": 1169,
    "body": "Fix:\n- implicit declaration of XXX\n- variable XXX may be used uninitialized\n\nAdded -Werror flag to .travis.yml to enforce the code without warnings.\n",
    "head_branch": "compiler-warnings",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 1f3c2d35adf257a81c04dd57b25caf6653458632 into 4d7a1c3d0da97fe83d0d6294506dda757d681605"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621379318912b45d36a3d58",
    "number": 1168,
    "body": "I hope I'm doing it right\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge fd2f963b7ab675f7a18e535a3b5cc09b1ffda1d3 into 83f78ef8abca3b27fc9f2100ee8c013f1af82eac"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621379418912b45d36a3d59",
    "number": 1167,
    "body": "I hope this helps a little bit\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621379518912b45d36a3d5a",
    "number": 1165,
    "body": "Affects compilation for PHP 5.3.x/Win\n",
    "head_branch": "interned-len",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge bb74e218b2fb1b66f04e7ddfcc6e52fed05cdd4b into 4bc855d11160e3161f8fc16f8eb14023b269f375"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621379618912b45d36a3d5b",
    "number": 1163,
    "body": "- fixed windows paths to unix paths, so that slash can be used in all comparisons\n- simplified algorithm by using recursive directory iterator\n",
    "head_branch": "1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 47329a548c65702e2ef0958a1829533aad5eb901 into dfccbe63ed1ae89e3fdc60f17805cdfdcd9508bc"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621379718912b45d36a3d5c",
    "number": 1161,
    "body": "See https://github.com/phalcon/cphalcon/issues/1029\n\n``` php\necho $form->label('telephone', array('class' => 'form-control'));\n```\n\n``` dispaly\n<label for=\"telephone\" class=\"form-control\">telephone</label>\n```\n",
    "head_branch": "nfr_1029",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge c8327f69aeb5f915500c6e8cfd6cc46f345eb191 into 8a936d6c899e3aa4677b32f145ec3917f32a1f31"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621379818912b45d36a3d5d",
    "number": 1159,
    "body": "https://github.com/phalcon/cphalcon/issues/1158\n",
    "head_branch": "bug_1158",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge d3ff8e9115b75fb7f62101bf7828ceb57af3a533 into 9069465bf91a6c700760a5043ac29e99273132bd"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621379918912b45d36a3d5e",
    "number": 1153,
    "body": "See #1040\n\nWhat this patch does is suppresses (un)camelize when controller name comes from the annotation parser (as in this case we will deal with the real controller name which does not need to be camelized).\n",
    "head_branch": "issue-1040",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621379a18912b45d36a3d5f",
    "number": 1152,
    "body": "Storing numeric's in memory cache adapter currently breaks the values. Will resolve and fix it with increment & decrement implementation\n",
    "head_branch": "bug/numericMemoryCache",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621379c18912b45d36a3d60",
    "number": 1149,
    "body": "```\nTesting ImageTest Segmentation fault (збережено знімок оперативної пам’яті)\n\nProgram terminated with signal 11, Segmentation fault.\n#0  0x000000000099c418 in zend_update_static_property (scope=0x1ccccf0, name=0x7fb38a146664 \"_checked\", name_length=8, value=0x0) at /tmp/php-build/source/5.5.0/Zend/zend_API.c:3805\n3805                                    Z_TYPE_PP(property) = Z_TYPE_P(value);\n\n#0  0x000000000099c418 in zend_update_static_property (scope=0x1ccccf0, name=0x7fb38a146664 \"_checked\", name_length=8, value=0x0) at /tmp/php-build/source/5.5.0/Zend/zend_API.c:3805\n#1  0x00007fb3899948cd in phalcon_update_static_property_ce (ce=0x1ccccf0, name=0x7fb38a146664 \"_checked\", len=8, value=0x0) at /home/vladimir/workspace/cphalcon/ext/kernel/object.c:1261\n#2  0x00007fb38999491c in phalcon_update_static_property (class_name=0x7fb38a14666d \"phalcon\\\\image\\\\adapter\\\\gd\", class_length=24, name=0x7fb38a146664 \"_checked\", name_length=8, value=0x0)\n    at /home/vladimir/workspace/cphalcon/ext/kernel/object.c:1270\n#3  0x00007fb389bd010c in zim_Phalcon_Image_Adapter_GD_check (ht=0, return_value=0x31dedd8, return_value_ptr=0x7fffc92423e0, this_ptr=0x0, return_value_used=1) at /home/vladimir/workspace/cphalcon/ext/image/adapter/gd.c:134\n#4  0x00007fb38998a5ed in phalcon_execute_internal (execute_data_ptr=0x7fffc9242300, fci=0x7fffc9242400, return_value_used=1) at /home/vladimir/workspace/cphalcon/ext/phalcon.c:367\n#5  0x0000000000979d87 in zend_call_function (fci=0x7fffc9242400, fci_cache=0x7fffc92422d0) at /tmp/php-build/source/5.5.0/Zend/zend_execute_API.c:959\n#6  0x00007fb38998e053 in phalcon_call_user_function (function_table=0x188d240, object_pp=0x0, function_name=0x287ac28, retval_ptr=0x2c20b48, retval_ptr_ptr=0x0, param_count=0, params=0x7fffc92426b8)\n    at /home/vladimir/workspace/cphalcon/ext/kernel/fcall.c:112\n#7  0x00007fb38998eddc in phalcon_call_static_zval_str_func_vparams (return_value=0x2c20b48, return_value_ptr=0x0, mixed_name=0x7fffc92425e0, method_name=0x7fb38a14645a \"check\", method_len=5, param_count=0, ap=0x7fffc92425f8)\n    at /home/vladimir/workspace/cphalcon/ext/kernel/fcall.c:321\n#8  0x00007fb38998f390 in phalcon_call_static_func_params (return_value=0x0, return_value_ptr=0x0, class_name=0x7fb38a14666d \"phalcon\\\\image\\\\adapter\\\\gd\", class_length=24, method_name=0x7fb38a14645a \"check\", method_length=5, \n    param_count=0) at /home/vladimir/workspace/cphalcon/ext/kernel/fcall.c:429\n#9  0x00007fb389bd02a3 in zim_Phalcon_Image_Adapter_GD___construct (ht=3, return_value=0x2c77e98, return_value_ptr=0x7fb395eebd10, this_ptr=0x316ab38, return_value_used=0) at /home/vladimir/workspace/cphalcon/ext/image/adapter/gd.c:163\n#10 0x00007fb38998a63c in phalcon_execute_internal (execute_data_ptr=0x7fb395eebfe8, fci=0x0, return_value_used=0) at /home/vladimir/workspace/cphalcon/ext/phalcon.c:371\n#11 0x00000000009cc6c9 in zend_do_fcall_common_helper_SPEC (execute_data=0x7fb395eebfe8) at /tmp/php-build/source/5.5.0/Zend/zend_vm_execute.h:545\n#12 0x00000000009cce6b in ZEND_DO_FCALL_BY_NAME_SPEC_HANDLER (execute_data=0x7fb395eebfe8) at /tmp/php-build/source/5.5.0/Zend/zend_vm_execute.h:678\n#13 0x00000000009cbd8a in execute_ex (execute_data=0x7fb395eebfe8) at /tmp/php-build/source/5.5.0/Zend/zend_vm_execute.h:356\n#14 0x00000000009cbe12 in zend_execute (op_array=0x7fb395f23cc0) at /tmp/php-build/source/5.5.0/Zend/zend_vm_execute.h:381\n#15 0x000000000098d6f4 in zend_execute_scripts (type=8, retval=0x0, file_count=3) at /tmp/php-build/source/5.5.0/Zend/zend.c:1316\n#16 0x00000000008f5783 in php_execute_script (primary_file=0x7fffc9244de0) at /tmp/php-build/source/5.5.0/main/main.c:2481\n#17 0x0000000000a3bbaf in do_cli (argc=2, argv=0x188c600) at /tmp/php-build/source/5.5.0/sapi/cli/php_cli.c:993\n#18 0x0000000000a3ceed in main (argc=2, argv=0x188c600) at /tmp/php-build/source/5.5.0/sapi/cli/php_cli.c:1377\n```\n",
    "head_branch": "image-crash",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge b41c0e20ac22d647c842d004da330cd643e9cb86 into 6438859fcdd935be64ddec519da4f8e65e0c0dbb"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621379c18912b45d36a3d61",
    "number": 1147,
    "body": "This is especially useful for Travis tests as we can test both cases when return value optimization is enabled (default) or disabled (ie, due to 3rd party extensions) and detect errors early.\n",
    "head_branch": "optional-rvo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge e722cc8ac4472202ada48cc84bb8871046267a0a into 0b75ce26266fa583692f8883a46cfc13b3b69e4a"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621379e18912b45d36a3d62",
    "number": 1146,
    "body": "Phalcon\\Mvc\\Model::setup() docs supplemented by available options\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge abcf5bb9b5be7082b35ab97bd6f7e4a4b9a56b1c into 246967800c64562d728f3ecd1f0ef891efe71cab"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621379f18912b45d36a3d63",
    "number": 1145,
    "body": "",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 226a7dc9783a10a6e257060e140fa98087125340 into 509186387ceda885173f6505ff4430fef42f3a67"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662137a018912b45d36a3d64",
    "number": 1144,
    "body": "Phalcon\\Mvc\\Model::setup() docs supplemented by available options\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662137a118912b45d36a3d65",
    "number": 1143,
    "body": "Phalcon\\Mvc\\Model::setup() docs supplemented by available options\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662137a218912b45d36a3d66",
    "number": 1142,
    "body": "add callable type for Events::attach\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662137a318912b45d36a3d67",
    "number": 1141,
    "body": "",
    "head_branch": "annotations",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge e93325e8d44e991e3a8a1468408b024672437e7c into 3fb5d8e8cb66582831c37058a965abd7a4cc2eec"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662137a418912b45d36a3d68",
    "number": 1139,
    "body": "Fix bug #1128,      add double type for column\n",
    "head_branch": "bug_1128",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 4aaa1fe5ed38764bdb9fa4472e9c94470933d8a5 into f52cabb919e2f932e9b4370c3fd096424c90f57a"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662137a518912b45d36a3d69",
    "number": 1137,
    "body": "Phalcon\\Utils\\Date is date helper.\n",
    "head_branch": "nfr_date",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662137a618912b45d36a3d6a",
    "number": 1136,
    "body": "Move lemon.c and lempar.c to the single location instead of having them everywhere.\n",
    "head_branch": "one-lemon",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 3b657702eb86d9a0b9188af1dd7794465861356c into 2ba3e2f6692f92ca1aff813251efa9d35e43d68d"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662137a718912b45d36a3d6b",
    "number": 1135,
    "body": "This is a fix for #1083. It looks like the suggested changes for memcached are already done in 2.0 (if you want to I can prepare a PR against that too). I'm sorry about the formatting issue for the PR review, tried to fix it but seem to be screwed up anyways ... I was not sure where to send the PR against and how to handle phalcon.c in a PR. Since incr and decr are atomic, this is very useful i guess.\n\nI thought about error handling in that implementation, but increase or decrease a non-numeric value simply raises a notice (which I was not able to prevent without shutup in userspace) and a not-existent value returns false. I can't really think of any other error-related use case.\n",
    "head_branch": "feature/1083",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662137a818912b45d36a3d6c",
    "number": 1132,
    "body": "Memory usage as reported by valgrind:\n- **Before:** total heap usage: 167,926 allocs, 97,608,376 bytes allocated\n- **After:** total heap usage: 167,095 allocs, 97,550,362 bytes allocated\n\nMemory usage via `memory_get_usage()` (real / PHP):\n- **before:** (4194304) (4699096)\n- **after:** (3932160) (4639400)\n\nTested with:\n- `USE_ZEND_ALLOC=0 valgrind $(phpenv which php) unit-tests/manual-unit.php ModelsQueryParsingTest.php ModelsQueryParsingTest`\n- `$(phpenv which php) unit-tests/manual-unit.php ModelsQueryParsingTest.php ModelsQueryParsingTest`\n\nThe goal was to see how viable this optimization is — I did not try to replace all strings with interned ones.\n",
    "head_branch": "sql-query",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 31edc11badeba4853751fa90b33646c4412f3f90 into 106699651fc4e66a647d2a28f2cd291b03425d4d"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662137a918912b45d36a3d6d",
    "number": 1131,
    "body": "Scenario:\n\n``` c\nPHP_METHOD(SomeClass, someMethod)\n{\n    phalcon_call_method_p0_ex(return_value, return_value_ptr, this_ptr, \"anotherMethod\");\n}\n```\n\nIf SomeClass::anotherMethod() throws an exception, phalcon_alt_call_method() will destroy its return_value (which is the same as SomeClass::someMethod()'s return_value) and set it to NULL. When SomeClass::someMethod() returns, EG(exception) will not be NULL and phalcon_alt_call_method() will try to destroy the already destroyed return_value and will crash.\n\nSomething like this:\n\n```\n#0  0x0000000000976502 in zval_delref_p (pz=0x0) at /tmp/php-build/source/5.5.0/Zend/zend.h:409\n#1  0x000000000097675f in i_zval_ptr_dtor (zval_ptr=0x0, __zend_filename=0x7f47df285898 \"/home/vladimir/workspace/cphalcon/ext/kernel/alternative/fcall.c\", __zend_lineno=839) at /tmp/php-build/source/5.5.0/Zend/zend_execute.h:76\n#2  0x0000000000977a3c in _zval_ptr_dtor (zval_ptr=0x7fff526fd2b8, __zend_filename=0x7f47df285898 \"/home/vladimir/workspace/cphalcon/ext/kernel/alternative/fcall.c\", __zend_lineno=839)\n    at /tmp/php-build/source/5.5.0/Zend/zend_execute_API.c:426\n#3  0x00007f47df03c360 in phalcon_alt_call_method (fci=0x7fff526fcfe0, ce=0x33ac140, hash_key=10432451519307380380, method_name=0x7f47df4d7e28 \"_getexpression\", method_len=14, method_key=11293103426560632820)\n    at /home/vladimir/workspace/cphalcon/ext/kernel/alternative/fcall.c:839\n#4  0x00007f47df03c985 in phalcon_alt_call_user_method (ce=0x33ac140, object_pp=0x7fff526fd078, method_name=0x7f47df4d7e28 \"_getexpression\", method_len=14, retval_ptr=0x7f47daa6b920, retval_ptr_ptr=0x7fff526fd2b8, param_count=1, \n    params=0x7fff526fd0c0, method_key=11293103426560632820) at /home/vladimir/workspace/cphalcon/ext/kernel/alternative/fcall.c:959\n#5  0x00007f47df01b505 in phalcon_call_method_vparams (return_value=0x7f47daa6b920, return_value_ptr=0x7fff526fd2b8, object=0x7f47daa66590, method_name=0x7f47df4d7e28 \"_getexpression\", method_len=14, method_key=11293103426560632820, \n    param_count=1, ap=0x7fff526fd168) at /home/vladimir/workspace/cphalcon/ext/kernel/fcall.c:255\n#6  0x00007f47df01bc45 in phalcon_call_method_params (return_value=0x0, return_value_ptr=0x7fff526fd2b8, object=0x7f47daa66590, method_name=0x7f47df4d7e28 \"_getexpression\", method_len=14, method_key=11293103426560632820, param_count=1)\n    at /home/vladimir/workspace/cphalcon/ext/kernel/fcall.c:391\n#7  0x00007f47df1607df in zim_Phalcon_Mvc_Model_Query__getSelectColumn (ht=1, return_value=0x7f47daa6b538, return_value_ptr=0x7fff526fd530, this_ptr=0x7f47daa66590, return_value_used=1)\n    at /home/vladimir/workspace/cphalcon/ext/mvc/model/query.c:1190\n#8  0x00007f47df03c31e in phalcon_alt_call_method (fci=0x7fff526fd580, ce=0x33ac140, hash_key=12003194334336468502, method_name=0x7f47df4d886c \"_getselectcolumn\", method_len=16, method_key=16594755089970257330)\n    at /home/vladimir/workspace/cphalcon/ext/kernel/alternative/fcall.c:831\n#9  0x00007f47df03c985 in phalcon_alt_call_user_method (ce=0x33ac140, object_pp=0x7fff526fd618, method_name=0x7f47df4d886c \"_getselectcolumn\", method_len=16, retval_ptr=0x7f47daa6ace0, retval_ptr_ptr=0x0, param_count=1, \n    params=0x7fff526fd660, method_key=16594755089970257330) at /home/vladimir/workspace/cphalcon/ext/kernel/alternative/fcall.c:959\n#10 0x00007f47df01b505 in phalcon_call_method_vparams (return_value=0x7f47daa6ace0, return_value_ptr=0x0, object=0x7f47daa66590, method_name=0x7f47df4d886c \"_getselectcolumn\", method_len=16, method_key=16594755089970257330, \n    param_count=1, ap=0x7fff526fd708) at /home/vladimir/workspace/cphalcon/ext/kernel/fcall.c:255\n#11 0x00007f47df01bc45 in phalcon_call_method_params (return_value=0x7f47daa6ace0, return_value_ptr=0x0, object=0x7f47daa66590, method_name=0x7f47df4d886c \"_getselectcolumn\", method_len=16, method_key=16594755089970257330, \n    param_count=1) at /home/vladimir/workspace/cphalcon/ext/kernel/fcall.c:391\n#12 0x00007f47df16a0a2 in zim_Phalcon_Mvc_Model_Query__prepareSelect (ht=0, return_value=0x7f47daa69d58, return_value_ptr=0x7fff526fdc20, this_ptr=0x7f47daa66590, return_value_used=1)\n    at /home/vladimir/workspace/cphalcon/ext/mvc/model/query.c:2613\n#13 0x00007f47df03c31e in phalcon_alt_call_method (fci=0x7fff526fdc70, ce=0x33ac140, hash_key=5007302758549953425, method_name=0x7f47df4d8935 \"_prepareselect\", method_len=14, method_key=11087669581410963027)\n    at /home/vladimir/workspace/cphalcon/ext/kernel/alternative/fcall.c:831\n#14 0x00007f47df03c985 in phalcon_alt_call_user_method (ce=0x33ac140, object_pp=0x7fff526fdd08, method_name=0x7f47df4d8935 \"_prepareselect\", method_len=14, retval_ptr=0x7f47daa64e08, retval_ptr_ptr=0x0, param_count=0, params=0xeed4f8, \n    method_key=11087669581410963027) at /home/vladimir/workspace/cphalcon/ext/kernel/alternative/fcall.c:959\n#15 0x00007f47df01b505 in phalcon_call_method_vparams (return_value=0x7f47daa64e08, return_value_ptr=0x0, object=0x7f47daa66590, method_name=0x7f47df4d8935 \"_prepareselect\", method_len=14, method_key=11087669581410963027, \n    param_count=0, ap=0x7fff526fddf8) at /home/vladimir/workspace/cphalcon/ext/kernel/fcall.c:255\n#16 0x00007f47df01bc45 in phalcon_call_method_params (return_value=0x7f47daa64e08, return_value_ptr=0x0, object=0x7f47daa66590, method_name=0x7f47df4d8935 \"_prepareselect\", method_len=14, method_key=11087669581410963027, param_count=0)\n    at /home/vladimir/workspace/cphalcon/ext/kernel/fcall.c:391\n#17 0x00007f47df16fdec in zim_Phalcon_Mvc_Model_Query_parse (ht=0, return_value=0x7f47daa638a8, return_value_ptr=0x7f47eb59ff70, this_ptr=0x7f47daa66590, return_value_used=1)\n    at /home/vladimir/workspace/cphalcon/ext/mvc/model/query.c:3408\n#18 0x00007f47df0171ac in phalcon_execute_internal (execute_data_ptr=0x7f47eb5a10e8, fci=0x0, return_value_used=1) at /home/vladimir/workspace/cphalcon/ext/phalcon.c:371\n#19 0x00000000009cc6c9 in zend_do_fcall_common_helper_SPEC (execute_data=0x7f47eb5a10e8) at /tmp/php-build/source/5.5.0/Zend/zend_vm_execute.h:545\n#20 0x00000000009cce6b in ZEND_DO_FCALL_BY_NAME_SPEC_HANDLER (execute_data=0x7f47eb5a10e8) at /tmp/php-build/source/5.5.0/Zend/zend_vm_execute.h:678\n#21 0x00000000009cbd8a in execute_ex (execute_data=0x7f47eb5a10e8) at /tmp/php-build/source/5.5.0/Zend/zend_vm_execute.h:356\n#22 0x00000000009cbe12 in zend_execute (op_array=0x7f47eb5bffc8) at /tmp/php-build/source/5.5.0/Zend/zend_vm_execute.h:381\n#23 0x000000000098d6f4 in zend_execute_scripts (type=8, retval=0x0, file_count=3) at /tmp/php-build/source/5.5.0/Zend/zend.c:1316\n#24 0x00000000008f5783 in php_execute_script (primary_file=0x7fff52700590) at /tmp/php-build/source/5.5.0/main/main.c:2481\n#25 0x0000000000a3bbaf in do_cli (argc=4, argv=0x2fdc600) at /tmp/php-build/source/5.5.0/sapi/cli/php_cli.c:993\n#26 0x0000000000a3ceed in main (argc=4, argv=0x2fdc600) at /tmp/php-build/source/5.5.0/sapi/cli/php_cli.c:1377\n```\n\nThis happened for this case:\n\n```\n$ $(phpenv which php) unit-tests/manual-unit.php ModelsQueryParsingTest.php ModelsQueryParsingTest\nTesting ModelsQueryParsingTest SQLSTATE[HY000] [2002] No such file or directory\n#0 [internal function]: PDO->__construct('mysql:host=loca...', 'root', 'M1dn19ht', Array)\n#1 [internal function]: Phalcon\\Db\\Adapter\\Pdo->connect(Array)\n#2 /home/vladimir/workspace/cphalcon/unit-tests/ModelsQueryParsingTest.php(62): Phalcon\\Db\\Adapter\\Pdo->__construct(Array)\n#3 [internal function]: ModelsQueryParsingTest->{closure}()\n#4 [internal function]: Phalcon\\DI\\Service->resolve(NULL, Object(Phalcon\\DI))\n#5 [internal function]: Phalcon\\DI->get('db', NULL)\n#6 [internal function]: Phalcon\\DI->getShared('db')\n#7 [internal function]: Phalcon\\Mvc\\Model\\Manager->getReadConnection(Object(Robots))\n#8 [internal function]: Phalcon\\Mvc\\Model->getReadConnection()\n#9 [internal function]: Phalcon\\Mvc\\Model\\MetaData\\Strategy\\Introspection->getMetaData(Object(Robots), Object(Phalcon\\DI))\n#10 [internal function]: Phalcon\\Mvc\\Model\\MetaData->_initialize(Object(Robots), 'robots-robots', 'robots', NULL)\n#11 [internal function]: Phalcon\\Mvc\\Model\\MetaData->readMetaData(Object(Robots))\n#12 [internal function]: Phalcon\\Mvc\\Model\\MetaData->hasAttribute(Object(Robots), 'id')\n#13 [internal function]: Phalcon\\Mvc\\Model\\Query->_getQualified(Array)\n#14 [internal function]: Phalcon\\Mvc\\Model\\Query->_getExpression(Array)\n#15 [internal function]: Phalcon\\Mvc\\Model\\Query->_getSelectColumn(Array)\n#16 [internal function]: Phalcon\\Mvc\\Model\\Query->_prepareSelect()\n#17 /home/vladimir/workspace/cphalcon/unit-tests/ModelsQueryParsingTest.php(262): Phalcon\\Mvc\\Model\\Query->parse()\n#18 /home/vladimir/workspace/cphalcon/unit-tests/manual-unit.php(119): ModelsQueryParsingTest->testSelectParsing()\n#19 /home/vladimir/workspace/cphalcon/unit-tests/manual-unit.php(154): PHPUnit_Framework_TestCase::main('ModelsQueryPars...')\n#20 {main}\n```\n\n**This is a temporary fix** as it only covers the case when the methods are called by Phalcon using its phalcon_call_XXX() functions. It does **not** cover the scenario when SomeClass::someMethod() is called from the userspace.\n",
    "head_branch": "rvo-segfault",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge b52c7368f1d6c9d6db65dfde223258694cd589f2 into 89578f688624b81083465a8b6ce9a42e1f44ce2b"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662137aa18912b45d36a3d6e",
    "number": 1129,
    "body": "The intention was to replace all hardcoded numbers with the constants from scanner.h but in addition I optimized several methods (only obvious things were optimized and this is why there is still some room for improvement).\n",
    "head_branch": "sql-query",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 690348ed0f69dbdefb851bc88483b77323ddd79d into 5f8a6250a4d1f3e1a735329129c46f54f8e9ca70"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662137ab18912b45d36a3d6f",
    "number": 1126,
    "body": "_mem_block_check() crashes PHP 5.5 if the variable was not emalloc()'d.\n",
    "head_branch": "memory",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 90cc4a216fcb291cfbf9103f91b883c0f2991263 into a6d0fe06c97c388d518cc293ad084b2f54d8e39e"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662137ad18912b45d36a3d70",
    "number": 1125,
    "body": "",
    "head_branch": "bug_1103",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge fc4d4d6bd34f2f4cad1181500123fa2a464e4915 into 44271670cfd1533a24a7846174c6efc7df792ef0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662137ae18912b45d36a3d71",
    "number": 1122,
    "body": "See #1115\n\nBonus:\n- PHQL parser's grammar has been simplified\n",
    "head_branch": "issue-1115",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 490e504876ca6a456785485e38bc82d92969c207 into cbe2303bbf45102b89276815d870b73648f02e51"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662137af18912b45d36a3d72",
    "number": 1121,
    "body": "Did not submit complete for https://github.com/phalcon/cphalcon/pull/1120\n\nCause the following error last submission 1120, I am sorry, next time I will pay attention to.\n\n``` display\n/home/travis/build/phalcon/cphalcon/ext/image/adapter.c: In function ‘zim_Phalcon_Image_Adapter_crop’:\n\n/home/travis/build/phalcon/cphalcon/ext/image/adapter.c:368:2: error: too few arguments to function ‘zend_print_zval_r’\n\n/home/travis/.phpenv/versions/5.3.26/include/php/Zend/zend.h:577:15: note: declared here\n\n/home/travis/build/phalcon/cphalcon/ext/image/adapter.c:369:2: error: too few arguments to function ‘zend_print_zval_r’\n\n/home/travis/.phpenv/versions/5.3.26/include/php/Zend/zend.h:577:15: note: declared here\n\n/home/travis/build/phalcon/cphalcon/ext/image/adapter.c: In function ‘zim_Phalcon_Image_Adapter_text’:\n\n/home/travis/build/phalcon/cphalcon/ext/image/adapter.c:708:37: warning: unused variable ‘replacement’ [-Wunused-variable]\n\n/home/travis/build/phalcon/cphalcon/ext/image/adapter.c:708:27: warning: unused variable ‘pattern’ [-Wunused-variable]\n\nmake: *** [image/adapter.lo] Error 1\n\nmake: *** Waiting for unfinished jobs....\n```\n",
    "head_branch": "bug_image_1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge a2a4f40e8c349fb7c7846b648e1acbe4bab22670 into e815ee3137058cdf9ad1b72180437077c2740e8a"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662137b018912b45d36a3d73",
    "number": 1120,
    "body": "",
    "head_branch": "bug_image_1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 0929db63edd0ceaa6baa86d9d31b06ce9db6fda0 into 6fda7c177436c94b5cf1e25404dd63cb321988cf"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662137b218912b45d36a3d74",
    "number": 1119,
    "body": "See #1118\n",
    "head_branch": "issue-1118",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 5ff2737f57e9daa219642d477a9976012b112058 into 757a366c2797a695f9e8747df7830e9dd0793581"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662137b318912b45d36a3d75",
    "number": 1114,
    "body": "",
    "head_branch": "image",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 3b88e9d3a7a6851fc3f95264c8b2d3bb80c8c511 into 7c80406dd4dd9f3c1a45c5c5c26a757092ce5e05"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662137b518912b45d36a3d76",
    "number": 1113,
    "body": "",
    "head_branch": "do_alloca",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 48c81c121fa2c17cce41ed2b08f98bb4d0ad8c47 into 35b0113d155f29e21803ebcf8d63a512fb5c21d4"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662137b618912b45d36a3d77",
    "number": 1112,
    "body": "The tests [proved](https://github.com/sjinks/phalcon-kernel-test/blob/master/testbed.c#L553) that Zend Engine reclaims all memory allocated with `emalloc()` on unclean shutdown automatically.\n",
    "head_branch": "unclean-shutdown",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 03aae4957e1d347122612f81c74a465918e7eb87 into a4d6cc6c91dc6e248b1049d746df9516ad8fa820"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662137b718912b45d36a3d78",
    "number": 1110,
    "body": "",
    "head_branch": "image_1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662137b818912b45d36a3d79",
    "number": 1104,
    "body": "See #1095\n",
    "head_branch": "issue-1095",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge bafd8262b060096ad40c3d8e64a3e36a719a9900 into 78c1dbd478799319e06699ab0d7401eec6962453"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662137b918912b45d36a3d7a",
    "number": 1102,
    "body": "",
    "head_branch": "1.2.3",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge 678ac32a675fcdd5d9b06b49b6943b041b26b84c into a0e5c9f1de3cdb87fdebbdeeb6a9e7029813788a"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662137ba18912b45d36a3d7b",
    "number": 1100,
    "body": "See #1099\n",
    "head_branch": "1099",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 0cc045eb53e31cc29eaa48548fc36b95c4fb983b into a0241e2d4b9701af71832175983f019280d185e7"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662137bb18912b45d36a3d7c",
    "number": 1098,
    "body": "See #1091\n",
    "head_branch": "issue-1091",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 5e6f676cc968aabf88dab20bbaa56e1a38461789 into d318426bb3ca6e6bfa76612e5b548f3ed9a23ce6"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662137bc18912b45d36a3d7d",
    "number": 1097,
    "body": "- Use _mem_block_check() API on every zval\\* before trying to free it\n",
    "head_branch": "mem-diag",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge a804b6c70d0a938bcdaaa24492ae798714969a9e into ee125929ba9ecc6c38ef03fd52980a67ad71bc7f"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662137be18912b45d36a3d7e",
    "number": 1094,
    "body": "",
    "head_branch": "1.2.3",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge bbf835503461a3a2001a69d21608ac99e161cd2c into eeadd7149df71ef2077b56bf356a1ebe020c73ef"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662137bf18912b45d36a3d7f",
    "number": 1093,
    "body": "In brief:\n- **before**: 80,098 allocs, 80,073 frees, 50,238,672 bytes allocated\n- **after**: 79,686 allocs, 79,661 frees, 15,219,256 bytes allocated\n\nTested with\n\n``` bash\nUSE_ZEND_ALLOC=0 valgrind $(phpenv which php) unit-tests/manual-unit.php CacheTest.php CacheTest\n```\n\nBug fixes:\n- 6c37bad: looks like it is not always safe to store zval*\\* as references to properties in PHP 5.4+ (zval*\\* points to the location where the property is stored and the properties sometimes migrate); this will probably fix the bug with crashing session bag\n- c46c766 implements Phalcon\\Cache\\Backend\\Memory::queryKeys()\n- 00f2177 adds checks to phalcon_call_XXX to ensure that all arguments are `zval*`'s\n- e69c7ba fixes bugs in Libmemcached that crippled past the review\n",
    "head_branch": "cache",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge f87520518fd78cdaa4e4e18f794bacb84ada48ee into 6ce8ff2ba91d2c3b80e22b4fcbaad1360e96b6e4"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662137c018912b45d36a3d80",
    "number": 1088,
    "body": "Add getDefault*() methods to Router class.\nhttps://github.com/phalcon/cphalcon/issues/1087\n",
    "head_branch": "issues_1087",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 17422f230feeda817c057a9e04ebc15359db56b5 into 4b69a3590d32271c9bb9c8db15c61739468b58fa"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662137c118912b45d36a3d81",
    "number": 1081,
    "body": "Add function text for Image, Draw a string horizontally\nAdd function blur for Image \n",
    "head_branch": "image_updated",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge d50f22bdac893529d8e9a1141248aa91e8b2abee into 77ffac9e3c4c863acff6e0f9af29c708a13d187b"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662137c218912b45d36a3d82",
    "number": 1077,
    "body": "",
    "head_branch": "bag-crash",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge f030ffe75522d2c6a8788f9efd1a3fb93cb60d72 into 1875ea2c3aa91763d12681bca93ba87520d2dbd3"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662137c318912b45d36a3d83",
    "number": 1076,
    "body": "If image not exists and set the width and height, then create a new image.\n",
    "head_branch": "image_updated",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 5c966b4fc90fa4799e93409f6f7fce0c537589dc into d9c4039352e54ce381fff6ecefd95bf068827363"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662137c418912b45d36a3d84",
    "number": 1075,
    "body": "Added initial support for return_value_ptr to fcall.c and alternative/fcall.c\n\nThis will allow us to avoid copy constructors in many cases.\n\nFor example, in this case:\n\n``` php\n$frontCache = new Phalcon\\Cache\\Frontend\\None(array('lifetime' => 10));\n$cache = new Phalcon\\Cache\\Backend\\Memory($frontCache);\n```\n\ncurrently only\n\n``` php\n$string = str_repeat('a', 5000000);\n$cache->save('test-data', $string);\n$s1 = $frontCache->afterRetrieve($string);\n$s2 = $frontCache->afterRetrieve($string);\n$s3 = $frontCache->afterRetrieve($string);\n```\n\nwill not waste additional RAM (due to `phalcon_execute_internal` trick) but this will:\n\n``` php\n$string = str_repeat('a', 5000000);\n$cache->save('test-data', $string);\n$s1 = $cache->get('test-data');\n$s2 = $cache->get('test-data');\n$s3 = $cache->get('test-data');\n```\n\n$s1, $s2, $s3 will use ~5MB each.\n\nThe patch adds support for retval_ptr_ptr to fcall.c (the code has to be rewritten to take advantage of retval_ptr_ptr — this optimization cannot be applied transparently without breaking things) and allows functions to take advantage of retval_ptr_ptr if it is available\n",
    "head_branch": "rvo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 886940e6b15885252fa7369230fd6bd6b174de72 into 0134f25e2814ecf9d546b4f09d9795cf4376f275"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662137c518912b45d36a3d85",
    "number": 1072,
    "body": "",
    "head_branch": "patch-8",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 9f06dfa9a5addb3b3ebfb08cbfe77857bbc3a0ed into b0d1aabd7d07b7ddff846b626d62fd227edbbd24"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662137c618912b45d36a3d86",
    "number": 1071,
    "body": "",
    "head_branch": "patch-7",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 1aaf53377d048979da089bcdd3e69ce86124c8be into af2853dcbea297fc0038859336ad700a8eb11d3e"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662137c718912b45d36a3d87",
    "number": 1070,
    "body": "",
    "head_branch": "patch-6",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 97bcf2584c56e79c6fbe6323a263a3997f5596c6 into ec5553ad56204acdb91c0a394e140fd6ebe93c17"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662137c818912b45d36a3d88",
    "number": 1069,
    "body": "Moved from pull request on master to 1.3.0\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 93d0801668786b705bbdc677958fec8090cd66db into a375c5af9aff8401a01cf3e53a96d55791d747c9"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662137c918912b45d36a3d89",
    "number": 1067,
    "body": "See https://github.com/phalcon/cphalcon/issues/1031#issuecomment-22481934\n",
    "head_branch": "memleak-1031",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 728ca3d076bf11b28f7c41246447ef738cdfbfeb into dc7e7ca6cc799d2c21909c9b0fb96da3ae21d1be"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662137ca18912b45d36a3d8a",
    "number": 1064,
    "body": "",
    "head_branch": "issues_1051_1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 5ba0766e17665d20ae6dbc13d98810dc35daa711 into c7fafb4ec034b35347a4b27aeb0a22e52d341bbd"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662137cb18912b45d36a3d8b",
    "number": 1063,
    "body": "add master option TENSILE, Allows any tensile pictures.\n",
    "head_branch": "image_updated",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 31d6f95432f68db3fa47c36fa3e541d8e1b3e07d into e42af73da8fda57b4bb601f36832e51e83ce6340"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662137cc18912b45d36a3d8c",
    "number": 1062,
    "body": "Multiple calls skipAttributes \\* will combine their values \n",
    "head_branch": "issues_1051",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 92e71536e2ff9442f1a774d6a90290b996a4fbf3 into 590ad47134110475c1f301f8d1a18f3357973fdc"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662137ce18912b45d36a3d8d",
    "number": 1061,
    "body": "small comment fix\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662137cf18912b45d36a3d8e",
    "number": 1058,
    "body": "",
    "head_branch": "patch-5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662137d018912b45d36a3d8f",
    "number": 1057,
    "body": "",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662137d118912b45d36a3d90",
    "number": 1056,
    "body": "",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 74eb1f8942843834eae0fae7ec8d5d5391b2ef46 into d7af0082e38edf4d3e7380816cb0603720e3a02f"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662137d418912b45d36a3d91",
    "number": 1054,
    "body": "",
    "head_branch": "1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 7dad4fdf7e36aec6557f0c6f1e99b882c17266dd into 3c4547447e0bc26f6f1c58c355196c3cb726c83a"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662137d518912b45d36a3d92",
    "number": 1052,
    "body": "Let function skipAttributes and skipAttributesOnUpdate additional fields.\nhttps://github.com/phalcon/cphalcon/issues/1051\n",
    "head_branch": "bug_skipAttributes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662137d618912b45d36a3d93",
    "number": 1050,
    "body": "Keep the GIF animation for Imagick\n",
    "head_branch": "image_updated",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 25cb80246ce7852eacf52d7573ffe505dac7b316 into f89d1bb1d7212c0f9757ddb0a28d4aea8c59dda0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662137d718912b45d36a3d94",
    "number": 1049,
    "body": "Bug was introduced in 782f746\n",
    "head_branch": "interfaces-bug-fix-1.2.3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662137d818912b45d36a3d95",
    "number": 1048,
    "body": "Bug was introduced in 782f746ae141ea9a9a34f7c5e49c158ed349cd15\n",
    "head_branch": "interfaces-bug-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 2bba604a8a52bd5bc9060d4919f3183e203fe268 into 623af11a8d8ec39dadca2a9066f3bfc10624380b"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662137d918912b45d36a3d96",
    "number": 1047,
    "body": "",
    "head_branch": "rvo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge a3d223e700e797cb3c9ba886b66df68b38ded41d into c07b8814261c2b7427decf92c603b3515a5778ca"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662137da18912b45d36a3d97",
    "number": 1046,
    "body": "http://forum.phalconphp.com/discussion/741/memory-challenge-for-phalcon-user-space-code-wins-\n",
    "head_branch": "rvo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge e9589048d6906e51be54f4dbdc615aef1fe097bd into be4c68b066e8ff958874f01b9e758e37d33dfd85"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662137db18912b45d36a3d98",
    "number": 1044,
    "body": "",
    "head_branch": "1.2.3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge a48171f1c9a2da90f5610d6b7bc51ea7edd9fe7a into ed9735d27a512cfd640088b369d872c3b75b1324"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662137dd18912b45d36a3d99",
    "number": 1043,
    "body": "As discussed.\n\nbc9586c adds data validation to __wakeup() and makes object injection impossible.\n3f09a62 adds temporary fix (adds missing macros to mvc/view/engine/volt/parser.h) to make sure that the code will be compiled (this fixes #1042 at the moment).\n",
    "head_branch": "razor",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 3f09a6220429046430515fca300403ce8a8717a0 into d17128572c1865ae9cb8380ba9c4d5325df9502b"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662137de18912b45d36a3d9a",
    "number": 1041,
    "body": "",
    "head_branch": "image_class",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 35aeaf984ec17a77c784164fbc4b74bdf62cba1a into 9f96c64a6926a5967cd481a66e49e72badf03271"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662137df18912b45d36a3d9b",
    "number": 1039,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 84c875461c834e82e3ef62d2afece4ee01462ceb into cb622ed5f02ab3ca6f6d317e7bc2a1ce6b336ee0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662137e018912b45d36a3d9c",
    "number": 1038,
    "body": "",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 1c7ac12c73d13c38d213a5129cffd1e7e6c5079e into 4eed07d1805648fa32d293f41afd114f1f8baa14"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662137e118912b45d36a3d9d",
    "number": 1035,
    "body": "See #1024\n",
    "head_branch": "issue-1024",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 24b00be51d556fdadea13ecec3a69b471ed08385 into 34610fbfb836c09fe4f6da1160954d1fa29e9cd7"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662137e218912b45d36a3d9e",
    "number": 1033,
    "body": "This fixes the \"Syntax error, unexpected token IDENTIFIER\" when using macros.\n\nSee: http://forum.phalconphp.com/discussion/729/macros-do-not-work\n\nThis is my first pull request. Please, comment if I'm not following some pattern.\n",
    "head_branch": "parser_macro_bug_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 4eb9fa81f028b9f07c120ff38d0aa423bae8b839 into 3031810422479bbd3338f5c09dcc683253b95940"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662137e318912b45d36a3d9f",
    "number": 1030,
    "body": "",
    "head_branch": "image_class",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 17ae9632bdc5865f6a5d0dcb2c193c4aab417a37 into 2581070ec75dce6f73ae38cdb393eb22ec7a60a9"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662137e418912b45d36a3da0",
    "number": 1028,
    "body": "https://github.com/phalcon/cphalcon/issues/1022\n",
    "head_branch": "bug_1022_1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 4e54cac47f694f65c45738c9e44248b2569289e6 into 98c6e0cfd25fd99bb9b4d3f8ca5e048fc98fea16"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662137e718912b45d36a3da1",
    "number": 1027,
    "body": "https://github.com/phalcon/cphalcon/issues/1022\n",
    "head_branch": "bug_1022_1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662137e818912b45d36a3da2",
    "number": 1026,
    "body": "https://github.com/phalcon/cphalcon/issues/1022\n",
    "head_branch": "bug_1022",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 71fc9d25f74a2ea6457ed48667539a8066b27942 into ed9735d27a512cfd640088b369d872c3b75b1324"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662137e918912b45d36a3da3",
    "number": 1025,
    "body": "[NFR]Whether can add an image class.\nhttps://github.com/phalcon/cphalcon/issues/902\n",
    "head_branch": "image_class",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 78620850ac3f46e0083447fafa7fc7e5d657631d into 2c5df2d42ce4c2bdcae515113133f70036c5cce4"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662137eb18912b45d36a3da4",
    "number": 1023,
    "body": "See #1011\n\nThough the tests are passed, I would still consider this implementation beta.\n\nPlease review the code carefully in case I am missing something.\n",
    "head_branch": "issue-1011",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 4f259f79f1b31fd51c352f518ceee83a4bcda7bf into cf42b58c04b10574495b717f925c5d0b427f245a"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662137ec18912b45d36a3da5",
    "number": 1020,
    "body": "See #1018\n",
    "head_branch": "issue-1018-1.2.2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 9d49d2a6a5556cfeaf78a600f0430340e607bef0 into 550fd3ce70c701bb259fa42bef60432772a92157"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662137ed18912b45d36a3da6",
    "number": 1019,
    "body": "See #1018\n",
    "head_branch": "issue-1018",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 5922abc107f798276c1c526455d282ab1c9cf74e into d39cfb94309b8bedb6666a6c52ea3dcc03c091d3"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662137ee18912b45d36a3da7",
    "number": 1017,
    "body": "[NFR]Whether can add an image class.\nhttps://github.com/phalcon/cphalcon/issues/902\n",
    "head_branch": "image_class",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662137ef18912b45d36a3da8",
    "number": 1015,
    "body": "- use phalcon_fetch_property instead of phalcon_read_property because this allows to avoid creation of the memory frame\n",
    "head_branch": "escaper",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge f96ec1e6513ee77aed48fbae1073700f14ca6871 into 01022229a5204a94a6fcaa235b5a4fd6ea7873fe"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662137f018912b45d36a3da9",
    "number": 1014,
    "body": "- use return_value wherever possible instead of temporary variables;\n- use phalcon_fetch_property() instead of phalcon_read_property() (return value then does not have to be observed)\n- use phalcon_array_isset_fetch() to combine isse()/fetch() operations and avoid extra search pass\n- validate arguments and throw exceptions before the memory frame is created\n- do not convert NULLs to zvals unless absolutely necessary\n",
    "head_branch": "di",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 934c03991425bb795e33597a88b4058263703c54 into a4ff1cd112833849f72d5d0d8eea742b43523529"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662137f118912b45d36a3daa",
    "number": 1010,
    "body": "",
    "head_branch": "1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 017f087666de20f8fbc0fa386f65b2e3cb94d3a8 into e7d066d9c42acc221949ba743757280cf74fe4ff"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662137f218912b45d36a3dab",
    "number": 1009,
    "body": "This patch makes sure that the memory frame is restored by that very function which created it.\n\nIf a function tries to restore the frame it did not create, a warning is printed and backtrace is provided.\n\nThis ensures the proper frame nesting.\n\nThe patch also detects when a MM function/macro (like `PHALCON_INIT_VAR()`) is invoked without calling `PHALCON_MM_GROW()` first.\n\nAll checks are performed only when `PHALCON_RELEASE` macro is not defined and therefore the patch affects only developer builds.\n",
    "head_branch": "mm",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 40c210ff2e2bbef2b1b9fa570f87d0fe1473d080 into d5235aa97655a62941ad5c0669bd19537cb61d23"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662137f318912b45d36a3dac",
    "number": 1008,
    "body": "",
    "head_branch": "1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge ae79e1c3dcaeb3c66bd1909e639df1e4c8e26386 into bc4627da69c2b56e318905823034b54f9908ce8e"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662137f618912b45d36a3dad",
    "number": 1007,
    "body": "",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662137f918912b45d36a3dae",
    "number": 1006,
    "body": "",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662137fb18912b45d36a3daf",
    "number": 1005,
    "body": "See #1000\n\nThis is #1003 backported to 1.2.2\n",
    "head_branch": "issue-1000-1.2.2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 210de473bd828b91df92061e282e1bbc11301103 into 437d48dba4fde8cbc15d508030880e1806517c71"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662137fe18912b45d36a3db0",
    "number": 1004,
    "body": "See #1000\n\nThis is #1003 backported to 1.2.2\n",
    "head_branch": "issue-1000-1.2.2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662137ff18912b45d36a3db1",
    "number": 1003,
    "body": "See #1000\n",
    "head_branch": "issue-1000",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 2722cb6745d05057e6338056d300d4b89bb47c26 into d84991864a4e5fca7abc17a65e752067603db3ab"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621380018912b45d36a3db2",
    "number": 1002,
    "body": "See #1001\n",
    "head_branch": "issue-1001",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 53826ae849cc65e7a282c80752e8b5c6942ab67a into c800012cfe43afd87d91fe1745a942578b7e3c22"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621380118912b45d36a3db3",
    "number": 999,
    "body": "",
    "head_branch": "bug_1.2.2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 8b65ec6bebb42ef36e72029f7eddb014ee186148 into 7915b80b4f2d8dfa29ac6093bc8555318a0b057a"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621380218912b45d36a3db4",
    "number": 997,
    "body": "Finally this seems to work :-)\n",
    "head_branch": "mongo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge c3baf339e88aca69d0f3c084753c9ac26c186888 into 1393ecf39af80d6d92ab783c02e25792d56d660e"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621380318912b45d36a3db5",
    "number": 996,
    "body": "See http://forum.phalconphp.com/discussion/703/annotationadapter-getproperty-error\n",
    "head_branch": "annotations_adapter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 4759bc68b3e69ed1c2aa9995bff577942788158f into c702360325c4ea7550f094f286efd5a9c44c2928"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621380418912b45d36a3db6",
    "number": 995,
    "body": "See http://forum.phalconphp.com/discussion/703/annotationadapter-getproperty-error\n",
    "head_branch": "annotations_adapter_1.2.2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 2c43eab0b0e276d5b00496cd45ce6ab2d79eb419 into a2c59804ddee83600a35ca5022a7182b9d8bd750"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621380518912b45d36a3db7",
    "number": 990,
    "body": "Travis is slow sometimes and the data in the cache could expire sooner than we want them to.\nThis also fixes the tests when php is run under valgrind.\n",
    "head_branch": "cache-test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 92b4d9868b9ad0f353c4325bad555bf8887dbc1e into 08f2da9a200f31ff19e0e130deba784af23140c8"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621380718912b45d36a3db8",
    "number": 989,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621380818912b45d36a3db9",
    "number": 988,
    "body": "See #987\n",
    "head_branch": "issue-987",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 7f591a261899e6a969603845810477dc1097d8ed into 1be6ab977b206c94be57769645fa0cc3a565de1f"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621380918912b45d36a3dba",
    "number": 986,
    "body": "",
    "head_branch": "segfault-config",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 4389388a24e962a4b273e8f1b8d12afb4a387baa into 75ee6f943235ff03df95e7e40d362ebc02f48800"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621380a18912b45d36a3dbb",
    "number": 985,
    "body": "",
    "head_branch": "segfault-config-1.2.2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 45fbecb25395a18d23c94a7ca7b3af24a1f80acd into 134186becd907412ff02f30b9d0885095b402a98"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621380b18912b45d36a3dbc",
    "number": 984,
    "body": "Overall:\n- Self Cost has decreased from 1.90% to 1.76%\n- Inclusive Cost has decreased from 1.94% to 1.93%\n- Reduced memory consumption: less variables are observed, memory frames are used only where necessary\n\nBonus: implemented #782\n",
    "head_branch": "issue-782",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 1c5df566bf89dbb2a1219914938b7e2a1f118a4d into 63a062277dcaf74b093be0ce17e4b30e7f5bb81c"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621380c18912b45d36a3dbd",
    "number": 982,
    "body": "Backport to 1.2.2\n",
    "head_branch": "issue-980-1.2.2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 9d72ad3e23252eb0baa374f3e8f09fff8bb9c244 into b04d46b74f7f05ea4ae2b6cd1b7db02e18dd2bdc"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621380d18912b45d36a3dbe",
    "number": 981,
    "body": "See #980\n",
    "head_branch": "issue-980",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 1b2f780ddaef1036fbe6753ee536e85117c6849f into d06979d7fca75d663a774de113b97951fe8c31cc"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621380e18912b45d36a3dbf",
    "number": 977,
    "body": "This patch mainly adds [possessive quantifiers](http://www.regular-expressions.info/possessive.html) to the patterns generated by Phalcon\\Mvc\\Route and Phalcon\\Mvc\\Router\\Route\n\nMatch `/this-will-not-match!/` against `#^/([a-zA-Z0-9_-]++)/?+#` will be almost two times faster than match against `#^/([a-zA-Z0-9_-]+)/?$#` or `#^/([a-zA-Z0-9_-]+)[/]{0,1}$#`.\n",
    "head_branch": "regexps",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 37203157eaca12ed3c68fe970cf4b1a29caf2db3 into 18a9fe9084005f4dc06d4029cb7ee4c44bb790dc"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621380f18912b45d36a3dc0",
    "number": 976,
    "body": "- phalcon_throw_exception_XXX() functions do not restore the memory frame anymore (and thus can be safely used from the kernel);\n- PHALCON_THROW_EXCEPTION_STR and PHALCON_THROW_EXCEPTION_ZVAL macros take care of restoring memory frame\n- PHALCON_THROW_EXCEPTION_STRW and PHALCON_THROW_EXCEPTION_ZVALW are just aliases for phalcon_throw_exception_string and phalcon_throw_exception_zval\n- all calls to phalcon_throw_exception_string replaced with PHALCON_THROW_EXCEPTION_STR macro\n",
    "head_branch": "exceptions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 823dddcbd7831183f2a48536cc46744da604d2f2 into d572b8f8bbb7d1a7e62d9debe310feb73a446c60"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621381018912b45d36a3dc1",
    "number": 974,
    "body": "",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 24c49ebb4627b76f11e8b749bccd39f80bc00544 into 8e522e3794798babd78423c3c7177889dcf493af"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621381118912b45d36a3dc2",
    "number": 973,
    "body": "",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 8d51cb3c47106407c02fc7a1265c94e61f8a640c into 2439192e7b6eecdfbbb114b2aac6b5eb2d44e298"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621381218912b45d36a3dc3",
    "number": 972,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 1b62092bdbad136cae96c69316abf2269867e88f into da5d779f39e45e8fe235af564142485c0b3025c9"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621381318912b45d36a3dc4",
    "number": 970,
    "body": "This will help package maintainers (e.g., Fedora guys) who want to run `make test` on their build server but do not have all the databases set up.\n",
    "head_branch": "tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 81ff4a887a32b8de19eada77e4056982742f5bee into 6fa1247dcb393ed7d719bae4a5dbc4d7e7cd2800"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621381618912b45d36a3dc5",
    "number": 968,
    "body": "",
    "head_branch": "compiler-warnings",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 99c54efd9b66eff4f679ac19e8a12bd3cfeceab8 into a9e69466c948db4c174e8227fc3be358e391d9df"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621381918912b45d36a3dc6",
    "number": 967,
    "body": "",
    "head_branch": "compiler-warnings",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge e740ecb373e6df0eb21eaf6a995965fcb6f4452c into fdff06da1d02a36e82aeee922b5e2dee828f58cd"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621381a18912b45d36a3dc7",
    "number": 966,
    "body": "Backport of 1.3.0 patch\n",
    "head_branch": "has_many_to_many",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge f2eb8d5826b58fa9068d64b263768c316c67b1e7 into 0590af06cf73ba741df6672befef12feee53021d"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621381b18912b45d36a3dc8",
    "number": 965,
    "body": "See #942\n",
    "head_branch": "issue-942",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 35fbb2a0f60396a121136ac6995837548452266f into b67bc9248e6b53aeba35bd5589d83f419e4ffdd4"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621381c18912b45d36a3dc9",
    "number": 960,
    "body": "The macro was updated to restore the memory frame and the function was modified not to touch memory frames. This allows to use phalcon_is_iterable_ex() function in the kernel code where memory frames are avoided to boost performance.\n\nNow that phalcon_is_iterable_ex() became smaller, it has more chances to be inlined when used in the kernel code.\n",
    "head_branch": "phalcon_is_iterable",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 7c20afdd1f56aad6e1eb2ab838d487fd6bba26c3 into 0671b9c6103531fcd000e5b226be7e4be84ceb47"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621381d18912b45d36a3dca",
    "number": 959,
    "body": "See #938\n",
    "head_branch": "issue-938",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 023d349dbb46c45e4d1b10ecdb44c15679d0f6a9 into eb03bec788c924477fdd0fef5ec58b788826b375"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621381e18912b45d36a3dcb",
    "number": 958,
    "body": "",
    "head_branch": "issues951_1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge eb5eb656d4666cec0b789d6ea15490bbbc09255a into 63886a2a5c4f188280f163b710ef54f6907876a2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621381f18912b45d36a3dcc",
    "number": 957,
    "body": "",
    "head_branch": "assets951",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 33abf69be653f37738d2c187d38ef63cf4bccf46 into 255e0627e1e70ec1c1da8dc4d0bd20c2889b2aa0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621382018912b45d36a3dcd",
    "number": 956,
    "body": "See #955\n",
    "head_branch": "console",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 021646eb46a7a66f31e10924185fa95f4d3b5a8d into 3369218c3bb03a436a21b1fb586c065b0432917b"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621382218912b45d36a3dce",
    "number": 955,
    "body": "Updated comments on handle() method.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge b22c4685a47e8e842eb16235bfe37bba135a1b39 into a9aa2eee0a196d41832e61dc1ad95ef5166355b5"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621382318912b45d36a3dcf",
    "number": 954,
    "body": "- renamed all macros to follow the same style: phalcon_call_WHAT_pX(_noret)\n- fixed inconsistencies in restoring memory frame on failure in phalcon_create_instance(_params)\n- use variadic arguments instead of arrays in phalcon_call_WHAT_params()\n- added phalcon_has_constructor_ce() which reuses the existing class entry (calls to Z_OBJCE_P() are expensive)\n- removed a lot of functions from kernel/fcall.h — now that we don't need array to pass the parameters, we can use variadic macros instead\n- use do_alloca()/free_alloca() macros from Zend instead of emalloc()/efree(): if the block to be allocated is not large, alloca() will be used (much faster than emalloc()); otherwise, emalloc() will be used as a fallback\n- introduced optimized macros PHALCON_CALL_FUNCTION, PHALCON_CALL_METHOD, PHALCON_CALL_PARENT, PHALCON_CALL_SELF, PHALCON_CALL_STATIC: they wrap phalcon_call_XXX_params() functions and restore memory frame on failures. If the compiler is GCC, these macros expand to pretty optimized calls: when the method or function name is a known compile time constant, its hash can also be computed at **compile time**. If the name is not a literal (say, a variable), then instead of `sizeof()` we use `strlen()` to make sure that the length will be correct.\n\nPS: I will address failed Mongo tests in my next PR as they are not related to fcall.\n",
    "head_branch": "fcall",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 3b33bc465b1e6804c5ef6a4e6d4281fa2b85233b into fb64615f3c6f5c066a5daed632fec7b7d6883618"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621382418912b45d36a3dd0",
    "number": 953,
    "body": "",
    "head_branch": "bug_947",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge c3166d9f3a483cd54afda0e0a1fe9ee2b28dba09 into 06d5033ac222b3b84df571c413495125ada49ceb"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621382518912b45d36a3dd1",
    "number": 949,
    "body": "- Use `make --silent` to hide not needed details from the build\n- Dropped `-fno-delete-null-pointer-checks` — if the code does not work without them, we are doing something wrong and this needs to be fixed. Fedora and other Linux distros will drop that flag anyway\n- Added `-std=gnu90` flag to catch some things Windows compiler won't be happy with\n- Fixed variable reference in unit-tests/ci/install_prereqs.sh\n- Removed Mongo hack from the code\n",
    "head_branch": "travis-bugs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 9535235ecd51f04275ea9fc2d6a55b438ddf3739 into 7a0c019eb17819c5bbe5bf47be4dc8232b48fd1e"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621382618912b45d36a3dd2",
    "number": 948,
    "body": "[zend_do_inheritance()](http://lxr.php.net/xref/PHP_5_3/Zend/zend_compile.c#2876) copies all functions from the parent class function table into the inherited class function table. Therefore, if a parent has implemented a function, it will be present in its child's function table.\n\nAs a consequence, we don't have to traverse all zend_class_entries and look for the function: if it is defined by a parent, we will see it in our scope.\n\nThus, if we don't look up the scope, we\n- save a call to zend_str_tolower_dup (and emalloc()/efree())\n- possibly save a call to zend_inline_hash_func()\n- save a call to phalcon_hash_quick_exists()\n\nFor usual method calls and static self:: calls we don't need phalcon_find_scope() at all — `EG(scope) = Z_OBJCE_P(obj)` is sufficient.\n\nFor parent calls we only need to check if our class is present in the inheritance of the given `this_ptr`.\nIt will be faster to compare zend_class_entries than class names though (I will probably address this later).\n",
    "head_branch": "lookup-scope",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 5473d22388effb1fde8c93ac63fca9ada72c0cd3 into a2a74a4e3e2810e7292127ba6f3574b6b719b053"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621382718912b45d36a3dd3",
    "number": 946,
    "body": "phalcon_create_instance_params() already checks whether params array is empty and therefore there is no need to perform those checks again in the code.\n",
    "head_branch": "phalcon_create_instance_params",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 894e7bd9c6a1801c8ce1b11eb85d17cd5abfef50 into 44b65e73fe08c6378325c951b11d190e4a9f49de"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621382818912b45d36a3dd4",
    "number": 945,
    "body": "- phalcon_array_is_associative()\n- phalcon_array_keys()\n",
    "head_branch": "array_funcs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 07c52ffc005c56c093f15ba13a19c531be7e8b03 into 01fc1157c23208da6364d6566895cf7daa7957f2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621382918912b45d36a3dd5",
    "number": 943,
    "body": "This will allow to handle the situations like this:\n\n``` php\nclass A\n{\n    static $prop = 1;\n\n    public static function get()\n    {\n            return static::$prop;\n    }\n}\n\nclass B extends A\n{\n    static $prop = 2;\n}\n\necho B::get(), \"\\n\";\n```\n\nThis can be useful if a child class wants to override parent's static property.\n\nSupported types:\n- self::$property;\n- parent::$property;\n- static::$property (late static binding).\n\nAdded functions:\n- phalcon_fetch_self_class(): fetches zend_class_entry\\* corresponding to self;\n- phalcon_fetch_parent_class(): fetches zend_class_entry\\* corresponding to parent;\n- phalcon_fetch_static_class(): fetches zend_class_entry\\* corresponding to static;\n- phalcon_read_static_property_ce(): same as phalcon_read_static_property() but uses zend_class_entry\\* instead of class_name;\n- phalcon_update_static_property_ce(): same as phalcon_update_static_property() but uses zend_class_entry\\* instead of class_name;\n- phalcon_read_class_property(): phalcon_fetch_XXX_class() and phalcon_read_static_property_ce() combined\n",
    "head_branch": "read_class_property",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 4f634b70ef98b5a7092c0f4bfc6992854f3c07d5 into e1a9e5aa7cbd6cf80f10a230f7ac018d6f0720fb"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621382a18912b45d36a3dd6",
    "number": 941,
    "body": "",
    "head_branch": "paginator_adapter_model",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge cffb538bc8f976eb03699e6d1c3ce3f3e5cdf757 into 975e8bd03007f968c0c4ae04d3526721f3dbdb83"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621382b18912b45d36a3dd7",
    "number": 940,
    "body": "",
    "head_branch": "decimal_scale_1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 110e6b53bae638a3633d28c5e7f7ada8e6071f33 into 852ffd9e9c630db78ee9523a42e380960f8e6fba"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621382c18912b45d36a3dd8",
    "number": 937,
    "body": "Mongo/PHP 1.4.2 fixes the bug in MongoCollection::save() which lead to memory corruption.\n",
    "head_branch": "update-mongo-driver",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge bb5ffdb75aa747fae0e04002baa7305b17da369a into 2f48fa88c410266ae8b317c43f7c962a3026d926"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621382d18912b45d36a3dd9",
    "number": 936,
    "body": "Native:\n- realpath()\n- basename()\n- addslashes()\n- var_export()\n- gettype()\n- ceil()\n- is_dir()\n- unlink()\n- filemtime()\n- strval()\n- array_values()\n- defined()\n- constant()\n- date()\n- trigger_error()\n- connection_aborted()\n- reset()\n- in_array()\n",
    "head_branch": "native-funcs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 58cf2d4064d69a6fb30aaf8d28914f9eaf116dcd into db4316ea80aef97a58c8e819fc16caba54d9ccd3"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621382e18912b45d36a3dda",
    "number": 935,
    "body": "https://github.com/phalcon/phalcon-devtools/issues/56\n",
    "head_branch": "decimal_scale",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge a3550b414303ba16223a8a01008cc849afb2da74 into d6c3e0840dd60501041226747c3845d8ddf743e4"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621382f18912b45d36a3ddb",
    "number": 934,
    "body": "",
    "head_branch": "decimal_scale",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621383018912b45d36a3ddc",
    "number": 932,
    "body": "",
    "head_branch": "changelog",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge eeaf2c7efe41ac0e428313017bbf3d44fd9afb94 into 6d134c644950999f1be8c23b603b7d21bad9fead"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621383118912b45d36a3ddd",
    "number": 931,
    "body": "",
    "head_branch": "issue-835",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 3622be471e9e1e865593fe5945785482780e9cd0 into e034f33c69f45b95a9f9e211e50d433f80e5f210"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621383318912b45d36a3dde",
    "number": 930,
    "body": "",
    "head_branch": "1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 34e52da0bcd80de24a29811d51bbba49e25df085 into b3f7e18f2ebebdc319f4fce172ed7fe53b13faa7"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621383418912b45d36a3ddf",
    "number": 929,
    "body": "",
    "head_branch": "1.2.1-sj",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621383518912b45d36a3de0",
    "number": 928,
    "body": "Otherwise trigger_error() + PHALCON_MM_RESTORE() may lead to a crash.\n\nPossibly fixes #911\n",
    "head_branch": "clean-fatal",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge f68a6205c35a08d1683c850e7bbfd4ba91bfdc59 into c307a28171afebb4185b0b19017dcfe89844f562"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621383618912b45d36a3de1",
    "number": 927,
    "body": "As described here: https://github.com/phalcon/cphalcon/issues/469#issuecomment-21536424\n",
    "head_branch": "garbage-collection",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 46f3955ed886b9987c3605fc88f8ea1795c71b06 into 07aeec072c49083c9a272446f73307f416c3f9db"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621383718912b45d36a3de2",
    "number": 923,
    "body": "https://github.com/phalcon/phalcon-devtools/issues/56\nMigration error: decimal column type\nLose scale.\n",
    "head_branch": "decimal_scale",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621383818912b45d36a3de3",
    "number": 922,
    "body": "See #701\n",
    "head_branch": "issue-701",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 01f794d50248720413dce1f537c4c5b6ed93ad3b into 210aa9a19053ffeb10991d8bcb49583560846e7a"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621383918912b45d36a3de4",
    "number": 921,
    "body": "See #885\n",
    "head_branch": "issue-885",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 1ca31982f77483f4d2e5fa042d26a6add433e0cc into 2304b520e810c9c8b9cf7d68523bf0699ad9ac71"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621383a18912b45d36a3de5",
    "number": 920,
    "body": "See #908\n\nWhen `key` is a string and is not found in the array returned by `_getSessionMessages()`, an empty array is returned.\n",
    "head_branch": "issue-908",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge a3a425666db96dd77db7cd128ee0025df81c78cf into d75abcc5d043c92152a70ee6ad0d9a8a2954e4cb"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621383b18912b45d36a3de6",
    "number": 919,
    "body": "Fix bug #826 Paginator, wrong value for next page\n",
    "head_branch": "1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621383d18912b45d36a3de7",
    "number": 918,
    "body": "If a method is called with too many or too few arguments, `phalcon_fetch_parameters()` throws an exception, restores the topmost memory frame and returns FAILURE. phalcon_fetch_params() notices FAILURE and attempts to restore someone else's stack frame. Which, of course, may lead to very interesting crashes :-)\n\nDev version will show smth like this:\n\n```\nWARNING: calling phalcon_memory_restore_stack() without an active memory frame!\n#0  0x7fefcaee98db [/home/vladimir/.phpenv/versions/5.3.26/lib/php/extensions/debug-zts-20090626/phalcon.so(phalcon_print_backtrace+0x2f) [0x7fefcaee98db]]\n#1  0x7fefcaf04473 [/home/vladimir/.phpenv/versions/5.3.26/lib/php/extensions/debug-zts-20090626/phalcon.so(phalcon_memory_restore_stack+0x74) [0x7fefcaf04473]]\n#2  0x7fefcb0f27a4 [/home/vladimir/.phpenv/versions/5.3.26/lib/php/extensions/debug-zts-20090626/phalcon.so(zim_Phalcon_Escaper_escapeJs+0x66) [0x7fefcb0f27a4]]\n#3  0xb0069f [php() [0xb0069f]]\n#4  0xb01112 [php() [0xb01112]]\n#5  0xaff5b0 [php(execute+0x54f) [0xaff5b0]]\n#6  0xac232d [php(zend_execute_scripts+0x2ff) [0xac232d]]\n#7  0xa1af98 [php(php_execute_script+0x5c9) [0xa1af98]]\n#8  0xbce139 [php() [0xbce139]]\n#9  0x7fefd5cf1ea5 [/lib/x86_64-linux-gnu/libc.so.6(__libc_start_main+0xf5) [0x7fefd5cf1ea5]]\n#10  0x432429 [php() [0x432429]]\n```\n",
    "head_branch": "phalcon_fetch_params",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 704a3c4ac44bf0e9c7ec3228464990016a030621 into a5d8ebdb2fa31952df3fc7677d80bad2c486b369"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621383e18912b45d36a3de8",
    "number": 917,
    "body": "See #903\n",
    "head_branch": "issue-903",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge e12bfdda72c77212953dd18b54ceff5b8a04a737 into 5cec130b67851b729f36fc023410353b2da7248b"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621383f18912b45d36a3de9",
    "number": 916,
    "body": "See #802, #910, #914\n\nBonus: free all allocated memory on fatal error _without_ segmentation faults (should we backport this to 1.2.1?)\n",
    "head_branch": "issue-802",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 13b931882a7d6afde19aa0a370b0c228e1a5daab into 6fdc9c032a8b2098f79236d974f891d1c61bc018"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621384018912b45d36a3dea",
    "number": 915,
    "body": "isset function of the view will be false.\n\nPHP Controller:\n\n``` php\nclass IndexController extends \\Phalcon\\Mvc\\Controller\n{\n    public function indexAction()\n    {\n        $this->view->msg = 'Message';\n    }\n}\n```\n\nPHP View:\n\n```\n<?php echo $this->view->msg ?>\n<?php if (isset($this->view->msg)): ?>\nEnable Message\n<?php endif ?>\n<?php if (isset($this->view->test)): ?>\nEnable Test\n<?php endif ?>\n```\n\nOutput:\n\n```\nMessage\n```\n\nUpdate Output:\n\n```\nMessage\nEnable Message\n```\n",
    "head_branch": "1.2.1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 1de706a99d6b95c977730281f128495849e5c3a5 into 272160f80353e1ba67e287989ca1707fd43a928c"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621384118912b45d36a3deb",
    "number": 913,
    "body": "class Phalcon\\Cache\\Backend\\Libmemcached\n\ncache backend class by using memcached PECL extension.\n\n``` php\n// Cache data for 2 days\n$frontCache = new Phalcon\\Cache\\Frontend\\Data(array(\n   \"lifetime\" => 172800\n));\n\n//Create the Cache setting memcached connection options\n$cache = new Phalcon\\Cache\\Backend\\Libmemcached($frontCache, array(\n    'servers' => array(\n        array('host' => 'localhost',\n              'port' => 11211,\n              'weight' => 1),\n    ),\n    'client' => array(\n        Memcached::OPT_HASH => Memcached::HASH_MD5,\n        Memcached::OPT_PREFIX_KEY => 'prefix.',\n    )\n));\n\n//Cache arbitrary data\n$cache->save('my-data', array(1, 2, 3, 4, 5));\n\n//Get data\n$data = $cache->get('my-data');\n```\n\nOptions specified constructor is unlike Phalcon\\Cache\\Backend\\Memcache.\nOthers are the same.\n",
    "head_branch": "1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 8ce9f0de5688ddf10f06e4f7a3a684b7dc25f6ec into 010d15d3ee06f5a01a5bb4ca7bdba465e7080227"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621384218912b45d36a3dec",
    "number": 912,
    "body": "- The root memory frame will now survive across requests\n",
    "head_branch": "mm",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge e18a27cad67556b54fc1137a4658528a03830f5c into 4beb87a3c761d703d42ae8e5424e6a6b225f54de"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621384618912b45d36a3ded",
    "number": 910,
    "body": "",
    "head_branch": "1.3.0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge 6a215762623224307a89703f23746de08bb7db86 into 32df424a0197187713596e9548adef80dd67112a"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621384718912b45d36a3dee",
    "number": 904,
    "body": "",
    "head_branch": "1.3.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621384a18912b45d36a3def",
    "number": 901,
    "body": "",
    "head_branch": "1.2.1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge cc337c9025d97d6d914891ae440796ae02bcd6b2 into 2a3dcb97f3ba36f389cd7aa29d8e81fb81e961e3"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621384b18912b45d36a3df0",
    "number": 900,
    "body": "See #897\n",
    "head_branch": "issue-897",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 767ab60956e7bbdbb0e02137c82eba1cf92b12ba into c5962dcea9e097573da73388d7bba5a88bfa6dd5"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621384c18912b45d36a3df1",
    "number": 896,
    "body": "",
    "head_branch": "1.2.1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 822644bc921adbee76a2f3d286cc1b0e208c8842 into 3fd3c4241aa15013e9c5f6c6fa5783ab986c63b3"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621384d18912b45d36a3df2",
    "number": 895,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 236def7bba2b0f6eecddd835fbb485f61a2c55ca into d57f237be57da3b828a084257c9ef14bfd920be8"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621385018912b45d36a3df3",
    "number": 894,
    "body": "- Updated changelog with all modifications happened so far since 1.2.0 (please check if I have missed anything)\n- Removed detection of PHP filter extension at compile time as we cannot use its native functions without patching PHP anyway\n- Fixed Phalcon\\Mvc\\Url::get()'s arginfo to match UrlInterface\n",
    "head_branch": "changelog",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 6e0811ac7cdc052a9385327f4846c1ac8f43941b into 46f5ac54290a99450cc20716b4baf2b845bd3b3a"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621385118912b45d36a3df4",
    "number": 893,
    "body": "- do not call erealloc() on every call to phalcon_memory_observe()/phalcon_memory_alloc()\n- do not waste the very first memory frame\n- free the root memory frame and its structures only during RSHUTDOWN or MSHUTDOWN; this helps reduce the number of calls to emalloc()/efree()\n- use ecalloc() instead of emalloc() when allocating a memory frame (no need to zero out memory)\n- safe erealloc()\n- number of observed variables per frame is not limited with PHALCON_MAX_MEMORY_STACK anymore\n\nOn a large scale, when running manual-unit.php, there are almost 15,000 less calls to efree(), 68,000 less calls to emalloc(), cost of the call to phalcon_memory_observe() is almost 2 times less now (tested with callgrind).\n",
    "head_branch": "mm",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge b646a0280408ed35289fd923d6fcdd7bac216794 into c0378c0d920c0ce7a6b40971abe0d600bdd1e4dc"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621385218912b45d36a3df5",
    "number": 891,
    "body": "This is mostly useful for x86_64 architecture because pointers are larger than plain integers.\n\nExample:\n\n``` c\ntypedef struct _phannot_scanner_token {\n  int opcode;\n  char *value;\n  int len;\n} phannot_scanner_token;\n```\n\npointers are 8 bytes, integers are 4 bytes; pointers must be aligned at 8 bytes boundary, integers at 4 bytes boundary; thus, after `opcode` there will be a padding 4 bytes long. Plus, the structure itself will have to be padded to 8 bytes boundary.\n\nTherefore, the actual size will be (4+8+4)+4+4=24 bytes; 16 bytes are payload, 8 bytes are padding.\n\nIf we move `value` to the front:\n\n``` c\ntypedef struct _phannot_scanner_token {\n  char *value;\n  int opcode;\n  int len;\n} phannot_scanner_token;\n```\n\n`value` will be at 8 bytes boundary and `opcode` and `len` will be at 4 bytes boundary; the size of the structure is 16 bytes (a multiple of 8) and the structure does not have to be padded.\n\nThus, reordering in this case allowed to reduce the size of the structure in 1.5 times. Not bad.\n",
    "head_branch": "reorder-fields",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 4d298356889b32c628ff31345c13c7de6d6109c8 into 59f350ea9cedde198e8ec33a83a6d0c6ef1a13bc"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621385318912b45d36a3df6",
    "number": 890,
    "body": "- Faster phalcon_start_with_str\n- Faster phalcon_start_with_str_str\n- Faster phalcon_end_with_str\n",
    "head_branch": "string-opt",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 066aa3418dedff19b45111993c14c78154c5c1e8 into ef5201f825e1b4bb6edbbbe45eedddb95a475931"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621385418912b45d36a3df7",
    "number": 889,
    "body": "- get raw request body from `SG(request_info).raw_post_data`, not via PHP streams;\n- faster getMethod();\n- fast path in isMETHOD() — do not call getMethod() if the calling class is Phalcon\\Http\\Request\n- optimize getHeaders()\n- optimize _getQualityHeader()\n- optimize _getBestQuality()\n",
    "head_branch": "get-method",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 0598d54902a84c445039462a9051152a853e8514 into 9be7508e881ab5baeb29da4a3b6ae01575715dbd"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621385518912b45d36a3df8",
    "number": 888,
    "body": "See #878, #884 — this fixes them.\n\nFor #878: if we have a file array like this:\n\n``` html\n<p>file1:<input type=\"file\" name=\"photo[]\"></p>\n<p>file2:<input type=\"file\" name=\"photo[]\"></p>\n<p>file3:<input type=\"file\" name=\"photo[][]\"></p>\n<p>file4:<input type=\"file\" name=\"photo[][]\"></p>\n<p>file5:<input type=\"file\" name=\"photo[][][]\"></p>\n<p>file6:<input type=\"file\" name=\"photo[][][][][]\"></p>\n```\n\nthe keys will be:\n- photo.0\n- photo.1\n- photo.2.0\n- photo.3.0\n- photo.4.0.0\n- photo.5.0.0.0.0\n\nMain features:\n- Phalcon\\Http\\Request::hasFiles() understands file arrays and returns correct number of uploaded files\n- Phalcon\\Http\\Request::getUploadedFiles() understands file arrays\n\nAlso:\n- added getKey() method to Phalcon\\Http\\Request\\File\n- `key` is passed as an optional second parameter to Phalcon\\Http\\Request\\File::__construct()\n- added getError() method to Phalcon\\Http\\Request\\File (can be useful when all files are retrieved, not only those uploaded successfully)\n- added __set_state() and isUploadedFile() methods to Phalcon\\Http\\Request\\File (the first one is meant for testing, the second one can be used to make sure that the file was really uploaded to the server and $_FILES is not forged)\n\nSuggestions:\n- getUploadedFiles() should probably return an associative array, the key being the second argument to `Phalcon\\Http\\Request\\File::__construct()`. I don't think this will break the existing implementations.\n- add getKey(), getError() and possibly isUploadedFile() to Phalcon\\Request\\FileInterface\n",
    "head_branch": "hasfiles-nested",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge a821e78eb188ac170195b4b8b8d2482ad2b1b38c into 4d3e5db9016269cad00845b76a7ebb8ff44e3633"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621385618912b45d36a3df9",
    "number": 887,
    "body": "See #864\n\nImplemented padding schemes:\n- PKCS7 padding\n- ANSI X.923 padding\n- ISO 10126 padding\n- ISO/IEC 7816-4 padding\n- zero padding (partially reversible)\n- space padding (partially reversible)\n",
    "head_branch": "issue-864",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 1d6b75854199b62422805cfb3005524e9a68f9d4 into 3046598ab521dee7b312041a616c089b968acace"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621385818912b45d36a3dfa",
    "number": 883,
    "body": "fix issues #878 Add functon getKey for request/file\nfix bug #821 minify file size is 0\n",
    "head_branch": "1.2.1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621385b18912b45d36a3dfb",
    "number": 882,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621385c18912b45d36a3dfc",
    "number": 881,
    "body": "class Phalcon\\Cache\\Backend\\Libmemcached\n\ncache backend class by using memcached PECL extension.\n\n```\n// Cache data for 2 days\n$frontCache = new Phalcon\\Cache\\Frontend\\Data(array(\n   \"lifetime\" => 172800\n));\n\n//Create the Cache setting memcached connection options\n$cache = new Phalcon\\Cache\\Backend\\Libmemcached($frontCache, array(\n    'servers' => array(\n        array('host' => 'localhost',\n              'port' => 11211,\n              'weight' => 1),\n    ),\n    'client' => array(\n        Memcached::OPT_HASH => Memcached::HASH_MD5,\n        Memcached::OPT_PREFIX_KEY => 'prefix.',\n    )\n));\n\n//Cache arbitrary data\n$cache->save('my-data', array(1, 2, 3, 4, 5));\n\n//Get data\n$data = $cache->get('my-data');\n```\n\nOptions specified constructor is unlike Phalcon\\Cache\\Backend\\Memcache.\nOthers are the same. \n",
    "head_branch": "1.2.1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621385d18912b45d36a3dfd",
    "number": 880,
    "body": "",
    "head_branch": "1.2.1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621385e18912b45d36a3dfe",
    "number": 879,
    "body": "Updated function comments for better readability & grammar\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 7d043f9d8b9cb0a7b22b7fad359212a16aa75ed3 into b906c43f651d4b0d50f0a39ceb4adc39b1cd2797"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621386218912b45d36a3dff",
    "number": 877,
    "body": "See #723\n\nThe only difference is that query parameters are passed as the optional second argument (can be either an array or object).\n",
    "head_branch": "issue-723",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 0575dec145322dd1e02052e509d730d101dfd6c5 into 5331bbfab32005ae135fa527b35ecfcc9fef6c7e"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621386318912b45d36a3e00",
    "number": 875,
    "body": "This can be useful for cases where the application does not need sessions (ie, WordPress does not use sessions):\n\n``` php\n$di = new \\Phalcon\\DI();\n$di->set('cookies', function () {\n        $cookies = new Phalcon\\Http\\Response\\Cookies();\n        $cookies->useEncryption(false);\n        return $cookies;\n});\n\n$di->set('response', function() { return new \\Phalcon\\Http\\Response(); });\n$di->getShared('cookies')->set('gift_order', '2221dddd', time()+86400, '/');\n$di->getShared('response')->send();\n```\n\nIf `session` is not added to DI, it won't be used — this can be useful in some cases, especially if sessions are stored in the database: if we don't need session, we can save some CPU ticks by not connecting to the database etc.\n",
    "head_branch": "cookie-session",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 1421f27b04cdad932ba401564c909384db3028f7 into 9edafa2809ce8c902188e1239fdb70adb487352a"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621386418912b45d36a3e01",
    "number": 873,
    "body": "See #866\n",
    "head_branch": "issue-866",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge e9bf551150f86bff979dcb4477b3bbaea814e56e into 0a6b25b2755e458309c035b51f376d34a08171a9"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621386518912b45d36a3e02",
    "number": 872,
    "body": "Update dot direvtive parse of Ini files.\n\nINI file.\n\n```\n# test.ini\n[test]\nparent.property = On\nparent.property2 = \"yeah\"\nparent.property3.baseuri = /phalcon/\nparent.property4.models.metadata = memory\nparent.property5.database.adapter = mysql\nparent.property5.database.host = localhost\nparent.property5.database.username = user\nparent.property5.database.password = passwd\nparent.property5.database.name = demo\nparent.property6.test[] = a\nparent.property6.test[] = b\nparent.property6.test[] = c\n```\n\nPHP execute.\n\n```\n$ini = new \\Phalcon\\Config\\Adapter\\Ini('/test.ini');\n$ini->toArray();\n```\n\nResult (default)\n\n```\narray(\n  'test' => array(\n    'parent' => array(\n      'property' => 1,\n      'property2' => 'yeah',\n      'property3' => '/phalcon/',\n      'property4' => 'memory',\n      'property5' => 'demo',\n      'property6' => array(a', 'b', 'c'),\n    )))\n```\n\nResult (Update source)\n\n```\narray(\n  'test' => array(\n    'parent' => array(\n      'property' => 1,\n      'property2' => 'yeah',\n      'property3' => array('baseuri' => '/phalcon/'),\n      'property4' => array(\n        'models' => array('metadata' => 'memory')\n      ),\n      'property5' => array(\n        'database' => array(\n          'adapter' => 'mysql',\n          'host' => 'localhost',\n          'username' => 'user',\n          'password' => 'passwd',\n          'name' => 'demo')\n        ),\n      'property6' => array(\n        'test' => array('a', 'b', 'c')\n      ))))\n```\n",
    "head_branch": "1.2.1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge fa9962985d065111bd928067618d169f288eb845 into 3809225d8c9558d6d4c8d9bf055ae56f5f71f361"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621386818912b45d36a3e03",
    "number": 870,
    "body": "fix for #821 https://github.com/dreamsxin/cphalcon/commit/b33f808a746bde4f3a1858efdf1d63d057fc952d\n\n``` php\n      * If the collection must not be joined we must print a HTML for each one\n      */\n     if (Z_TYPE_P(filters) == IS_ARRAY) { \n-      if (!zend_is_true(join)) {\n+      if (zend_is_true(join)) {\n         if (zend_is_true(local)) {\n\n```\n",
    "head_branch": "1.2.1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621386b18912b45d36a3e04",
    "number": 869,
    "body": "",
    "head_branch": "1.2.1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621386c18912b45d36a3e05",
    "number": 868,
    "body": "Update dot direvtive parse.\n\nINI file.\n\n```\n# test.ini\n[test]\nparent.property = On\nparent.property2 = \"yeah\"\nparent.property3.baseuri = /phalcon/\nparent.property4.models.metadata = memory\nparent.property5.database.adapter = mysql\nparent.property5.database.host = localhost\nparent.property5.database.username = user\nparent.property5.database.password = passwd\nparent.property5.database.name = demo\nparent.property6.test[] = a\nparent.property6.test[] = b\nparent.property6.test[] = c\n```\n\nPHP execute.\n\n```\n$ini = new \\Phalcon\\Config\\Adapter\\Ini('/test.ini');\n$ini->toArray();\n```\n\nResult (default)\n\n```\narray(\n  'test' => array(\n    'parent' => array(\n      'property' => 1,\n      'property2' => 'yeah',\n      'property3' => '/phalcon/',\n      'property4' => 'memory',\n      'property5' => 'demo',\n      'property6' => array(a', 'b', 'c'),\n    )))\n```\n\nResult (Update source)\n\n```\narray(\n  'test' => array(\n    'parent' => array(\n      'property' => 1,\n      'property2' => 'yeah',\n      'property3' => array('baseuri' => '/phalcon/'),\n      'property4' => array(\n        'models' => array('metadata' => 'memory')\n      ),\n      'property5' => array(\n        'database' => array(\n          'adapter' => 'mysql',\n          'host' => 'localhost',\n          'username' => 'user',\n          'password' => 'passwd',\n          'name' => 'demo')\n        ),\n      'property6' => array(\n        'test' => array('a', 'b', 'c')\n      ))))\n```\n",
    "head_branch": "1.2.1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621386d18912b45d36a3e06",
    "number": 865,
    "body": "- db4f9ae: because APC and XCache cannot be loaded together, add XCache emulation via APC so that we can test XCache backends;\n- 81e6f27: add tests of APC and XCache adapters to AnnotationsAdaptersTest (only of APC and XCache present; XCache emulation may be used)\n- b5ff26d: add test of XCache adapter to ModelsMetadataAdaptersTest\n",
    "head_branch": "tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge b5ff26d17e124d58304a54cba0dd523d68429df2 into 7c441ea64713022ff28528ee781ffff6aa7dd165"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621386e18912b45d36a3e07",
    "number": 863,
    "body": "See #861\n",
    "head_branch": "issue-861",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 7dd3e96e66efaca9f767c6eb87ccfc80375c2504 into 76e5a805ff9434f2ada77c4230020d9f4f2dc68f"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621386f18912b45d36a3e08",
    "number": 862,
    "body": "Plus:\n- fix ModelsTransactionsTest::testTransactionsPostgresql() test;\n- testTransactionsSqlite() can be skipped if sqlite is not available\n",
    "head_branch": "tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge f64ffe510534211a8f377cc87a527eef84e10e2c into d551b09359eb0f634da4c16bd55b1e913f19ec32"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621387018912b45d36a3e09",
    "number": 860,
    "body": "See #858\n- Fixed memory corruption in APC/XCache cache backends\n- Fixed memory leaks in Phalcon\\Cache\\Backend\\Apc::queryKeys\n- Optimizations\n",
    "head_branch": "issue-858",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 55fde6717d65e8732f925a998cedc89fbcd7be7a into 0461f9c5e4b227b2685c9170926a14f910e27e05"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621387418912b45d36a3e0a",
    "number": 857,
    "body": "Add a parameter for the function setFileToSend, showing up in the Browser instead of to download.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 755e49e12fc870de246b5cef40e74e894fd26935 into 335df6d70691d2ade522a583df918f3679854c1e"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621387818912b45d36a3e0b",
    "number": 855,
    "body": "",
    "head_branch": "1.2.1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621387918912b45d36a3e0c",
    "number": 854,
    "body": "update\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621387a18912b45d36a3e0d",
    "number": 852,
    "body": "See #851\n",
    "head_branch": "issue-851",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge f19e5a9adc0efe375344c60bd3e21207cc4c2ff8 into 85052c7252cedaf7a134bf512b303f83493af479"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621387c18912b45d36a3e0e",
    "number": 850,
    "body": "Plus updated gen-build.php to make sure that build/ files can still be built.\n",
    "head_branch": "bug-fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 1915c13a12f46c8b6879cb9ea4e77fc413213bbe into 64a70456e23edabba6fc2a76fd8aa64581ccba01"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621387d18912b45d36a3e0f",
    "number": 849,
    "body": "```\n==10576== Invalid read of size 1\n==10576==    at 0x10BE34AC: phalcon_alt_call_user_method (fcall.c:918)\n==10576==    by 0x10BBFC8C: phalcon_call_method_params_internal (fcall.c:409)\n==10576==    by 0x10BBFED3: phalcon_call_method_params (fcall.c:458)\n==10576==    by 0x10BC0227: phalcon_call_method_four_params (fcall.c:520)\n==10576==    by 0x10C18E84: zim_Phalcon_Db_Adapter_Pdo_connect (pdo.c:243)\n==10576==    by 0x10BE2F25: phalcon_alt_call_method (fcall.c:477)\n==10576==    by 0x10BE36A2: phalcon_alt_call_user_method (fcall.c:947)\n==10576==    by 0x10BBFC8C: phalcon_call_method_params_internal (fcall.c:409)\n==10576==    by 0x10BBFED3: phalcon_call_method_params (fcall.c:458)\n==10576==    by 0x10BBFF3F: phalcon_call_method_one_param (fcall.c:467)\n==10576==    by 0x10C17D2B: zim_Phalcon_Db_Adapter_Pdo___construct (pdo.c:93)\n==10576==    by 0xB0069E: zend_do_fcall_common_helper_SPEC (zend_vm_execute.h:322)\n==10576==  Address 0xc6b54d7 is 3 bytes after a block of size 4 alloc'd\n==10576==    at 0x4C2CD7B: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)\n==10576==    by 0xA8FB3E: zend_strndup (zend_alloc.c:2517)\n==10576==    by 0x6F4EE7: pdo_dbh_init (pdo_dbh.c:1393)\n==10576==    by 0x6EFC41: zm_startup_pdo (pdo.c:379)\n==10576==    by 0xAC9ACC: zend_startup_module_ex (zend_API.c:1617)\n==10576==    by 0xAD473E: zend_hash_apply (zend_hash.c:674)\n==10576==    by 0xAC9CE1: zend_startup_modules (zend_API.c:1666)\n==10576==    by 0xA1A6B0: php_module_startup (main.c:2074)\n==10576==    by 0xBCBD57: php_cli_startup (php_cli.c:398)\n==10576==    by 0xBCCE2E: main (php_cli.c:770)\n==10576== \n==10576== Invalid read of size 1\n==10576==    at 0x10BE34AC: phalcon_alt_call_user_method (fcall.c:918)\n==10576==    by 0x10BBFC8C: phalcon_call_method_params_internal (fcall.c:409)\n==10576==    by 0x10BBFED3: phalcon_call_method_params (fcall.c:458)\n==10576==    by 0x10BBFF3F: phalcon_call_method_one_param (fcall.c:467)\n==10576==    by 0x10C1AF03: zim_Phalcon_Db_Adapter_Pdo_execute (pdo.c:536)\n==10576==    by 0x10BE2F25: phalcon_alt_call_method (fcall.c:477)\n==10576==    by 0x10BE36A2: phalcon_alt_call_user_method (fcall.c:947)\n==10576==    by 0x10BBFC8C: phalcon_call_method_params_internal (fcall.c:409)\n==10576==    by 0x10BBFED3: phalcon_call_method_params (fcall.c:458)\n==10576==    by 0x10BC00E1: phalcon_call_method_three_params (fcall.c:498)\n==10576==    by 0x10C2B20F: zim_Phalcon_Db_Adapter_delete (adapter.c:723)\n==10576==    by 0xB0069E: zend_do_fcall_common_helper_SPEC (zend_vm_execute.h:322)\n==10576==  Address 0xc6b54d7 is 3 bytes after a block of size 4 alloc'd\n==10576==    at 0x4C2CD7B: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)\n==10576==    by 0xA8FB3E: zend_strndup (zend_alloc.c:2517)\n==10576==    by 0x6F4EE7: pdo_dbh_init (pdo_dbh.c:1393)\n==10576==    by 0x6EFC41: zm_startup_pdo (pdo.c:379)\n==10576==    by 0xAC9ACC: zend_startup_module_ex (zend_API.c:1617)\n==10576==    by 0xAD473E: zend_hash_apply (zend_hash.c:674)\n==10576==    by 0xAC9CE1: zend_startup_modules (zend_API.c:1666)\n==10576==    by 0xA1A6B0: php_module_startup (main.c:2074)\n==10576==    by 0xBCBD57: php_cli_startup (php_cli.c:398)\n==10576==    by 0xBCCE2E: main (php_cli.c:770)\n==10576== \n==10576== Invalid read of size 1\n==10576==    at 0x10BE34AC: phalcon_alt_call_user_method (fcall.c:918)\n==10576==    by 0x10BBFC8C: phalcon_call_method_params_internal (fcall.c:409)\n==10576==    by 0x10BBFED3: phalcon_call_method_params (fcall.c:458)\n==10576==    by 0x10BC0065: phalcon_call_method_two_params (fcall.c:489)\n==10576==    by 0x10D4B166: zim_Phalcon_Mvc_Model_Manager_load (manager.c:366)\n==10576==    by 0x10BE2F25: phalcon_alt_call_method (fcall.c:477)\n==10576==    by 0x10BE36A2: phalcon_alt_call_user_method (fcall.c:947)\n==10576==    by 0x10BBFC8C: phalcon_call_method_params_internal (fcall.c:409)\n==10576==    by 0x10BBFED3: phalcon_call_method_params (fcall.c:458)\n==10576==    by 0x10BBFF3F: phalcon_call_method_one_param (fcall.c:467)\n==10576==    by 0x10D2CB9D: zim_Phalcon_Mvc_Model_Query__prepareSelect (query.c:2572)\n==10576==    by 0x10BE2F25: phalcon_alt_call_method (fcall.c:477)\n==10576==  Address 0x173b3bb7 is 0 bytes after a block of size 7 alloc'd\n==10576==    at 0x4C2CD7B: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)\n==10576==    by 0xA8F53E: _emalloc (zend_alloc.c:2348)\n==10576==    by 0xA8FADC: _estrndup (zend_alloc.c:2503)\n==10576==    by 0xA6377C: lex_scan (zend_language_scanner.l:1701)\n==10576==    by 0xAA5A46: zendlex (zend_compile.c:4976)\n==10576==    by 0xA543CC: zendparse (zend_language_parser.c:3285)\n==10576==    by 0xA5BFA5: compile_file (zend_language_scanner.l:364)\n==10576==    by 0x761D78: phar_compile_file (phar.c:3394)\n==10576==    by 0xA5C1CE: compile_filename (zend_language_scanner.l:407)\n==10576==    by 0xB131BC: ZEND_INCLUDE_OR_EVAL_SPEC_TMP_HANDLER (zend_vm_execute.h:5255)\n==10576==    by 0xAFF5AF: execute (zend_vm_execute.h:107)\n==10576==    by 0xAAE3DA: zend_call_function (zend_execute_API.c:969)\n==10576== \n==10576== Invalid read of size 1\n==10576==    at 0x10BE34AC: phalcon_alt_call_user_method (fcall.c:918)\n==10576==    by 0x10BBF84E: phalcon_call_method_internal (fcall.c:340)\n==10576==    by 0x10BBFDE3: phalcon_call_method_ex (fcall.c:438)\n==10576==    by 0x10D2CD67: zim_Phalcon_Mvc_Model_Query__prepareSelect (query.c:2578)\n==10576==    by 0x10BE2F25: phalcon_alt_call_method (fcall.c:477)\n==10576==    by 0x10BE36A2: phalcon_alt_call_user_method (fcall.c:947)\n==10576==    by 0x10BBF84E: phalcon_call_method_internal (fcall.c:340)\n==10576==    by 0x10BBFDE3: phalcon_call_method_ex (fcall.c:438)\n==10576==    by 0x10D35032: zim_Phalcon_Mvc_Model_Query_parse (query.c:3503)\n==10576==    by 0x10BE2F25: phalcon_alt_call_method (fcall.c:477)\n==10576==    by 0x10BE36A2: phalcon_alt_call_user_method (fcall.c:947)\n==10576==    by 0x10BBF84E: phalcon_call_method_internal (fcall.c:340)\n==10576==  Address 0x173b3bb7 is 0 bytes after a block of size 7 alloc'd\n==10576==    at 0x4C2CD7B: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)\n==10576==    by 0xA8F53E: _emalloc (zend_alloc.c:2348)\n==10576==    by 0xA8FADC: _estrndup (zend_alloc.c:2503)\n==10576==    by 0xA6377C: lex_scan (zend_language_scanner.l:1701)\n==10576==    by 0xAA5A46: zendlex (zend_compile.c:4976)\n==10576==    by 0xA543CC: zendparse (zend_language_parser.c:3285)\n==10576==    by 0xA5BFA5: compile_file (zend_language_scanner.l:364)\n==10576==    by 0x761D78: phar_compile_file (phar.c:3394)\n==10576==    by 0xA5C1CE: compile_filename (zend_language_scanner.l:407)\n==10576==    by 0xB131BC: ZEND_INCLUDE_OR_EVAL_SPEC_TMP_HANDLER (zend_vm_execute.h:5255)\n==10576==    by 0xAFF5AF: execute (zend_vm_execute.h:107)\n==10576==    by 0xAAE3DA: zend_call_function (zend_execute_API.c:969)\n==10576== \n==10576== Invalid read of size 1\n==10576==    at 0x10BE34AC: phalcon_alt_call_user_method (fcall.c:918)\n==10576==    by 0x10BBF84E: phalcon_call_method_internal (fcall.c:340)\n==10576==    by 0x10BBFDE3: phalcon_call_method_ex (fcall.c:438)\n==10576==    by 0x10D2CF31: zim_Phalcon_Mvc_Model_Query__prepareSelect (query.c:2581)\n==10576==    by 0x10BE2F25: phalcon_alt_call_method (fcall.c:477)\n==10576==    by 0x10BE36A2: phalcon_alt_call_user_method (fcall.c:947)\n==10576==    by 0x10BBF84E: phalcon_call_method_internal (fcall.c:340)\n==10576==    by 0x10BBFDE3: phalcon_call_method_ex (fcall.c:438)\n==10576==    by 0x10D35032: zim_Phalcon_Mvc_Model_Query_parse (query.c:3503)\n==10576==    by 0x10BE2F25: phalcon_alt_call_method (fcall.c:477)\n==10576==    by 0x10BE36A2: phalcon_alt_call_user_method (fcall.c:947)\n==10576==    by 0x10BBF84E: phalcon_call_method_internal (fcall.c:340)\n==10576==  Address 0x173b3bb7 is 0 bytes after a block of size 7 alloc'd\n==10576==    at 0x4C2CD7B: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)\n==10576==    by 0xA8F53E: _emalloc (zend_alloc.c:2348)\n==10576==    by 0xA8FADC: _estrndup (zend_alloc.c:2503)\n==10576==    by 0xA6377C: lex_scan (zend_language_scanner.l:1701)\n==10576==    by 0xAA5A46: zendlex (zend_compile.c:4976)\n==10576==    by 0xA543CC: zendparse (zend_language_parser.c:3285)\n==10576==    by 0xA5BFA5: compile_file (zend_language_scanner.l:364)\n==10576==    by 0x761D78: phar_compile_file (phar.c:3394)\n==10576==    by 0xA5C1CE: compile_filename (zend_language_scanner.l:407)\n==10576==    by 0xB131BC: ZEND_INCLUDE_OR_EVAL_SPEC_TMP_HANDLER (zend_vm_execute.h:5255)\n==10576==    by 0xAFF5AF: execute (zend_vm_execute.h:107)\n==10576==    by 0xAAE3DA: zend_call_function (zend_execute_API.c:969)\n==10576== \n==10576== Invalid read of size 1\n==10576==    at 0x10BE34AC: phalcon_alt_call_user_method (fcall.c:918)\n==10576==    by 0x10BBF84E: phalcon_call_method_internal (fcall.c:340)\n==10576==    by 0x10BBFDE3: phalcon_call_method_ex (fcall.c:438)\n==10576==    by 0x10D364D4: zim_Phalcon_Mvc_Model_Query__executeSelect (query.c:3675)\n==10576==    by 0x10BE2F25: phalcon_alt_call_method (fcall.c:477)\n==10576==    by 0x10BE36A2: phalcon_alt_call_user_method (fcall.c:947)\n==10576==    by 0x10BBFC8C: phalcon_call_method_params_internal (fcall.c:409)\n==10576==    by 0x10BBFED3: phalcon_call_method_params (fcall.c:458)\n==10576==    by 0x10BC00E1: phalcon_call_method_three_params (fcall.c:498)\n==10576==    by 0x10D43982: zim_Phalcon_Mvc_Model_Query_execute (query.c:5023)\n==10576==    by 0x10BE2F25: phalcon_alt_call_method (fcall.c:477)\n==10576==    by 0x10BE36A2: phalcon_alt_call_user_method (fcall.c:947)\n==10576==  Address 0x173b3bb7 is 0 bytes after a block of size 7 alloc'd\n==10576==    at 0x4C2CD7B: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)\n==10576==    by 0xA8F53E: _emalloc (zend_alloc.c:2348)\n==10576==    by 0xA8FADC: _estrndup (zend_alloc.c:2503)\n==10576==    by 0xA6377C: lex_scan (zend_language_scanner.l:1701)\n==10576==    by 0xAA5A46: zendlex (zend_compile.c:4976)\n==10576==    by 0xA543CC: zendparse (zend_language_parser.c:3285)\n==10576==    by 0xA5BFA5: compile_file (zend_language_scanner.l:364)\n==10576==    by 0x761D78: phar_compile_file (phar.c:3394)\n==10576==    by 0xA5C1CE: compile_filename (zend_language_scanner.l:407)\n==10576==    by 0xB131BC: ZEND_INCLUDE_OR_EVAL_SPEC_TMP_HANDLER (zend_vm_execute.h:5255)\n==10576==    by 0xAFF5AF: execute (zend_vm_execute.h:107)\n==10576==    by 0xAAE3DA: zend_call_function (zend_execute_API.c:969)\n==10576== \n==10576== Invalid read of size 1\n==10576==    at 0x10BE34AC: phalcon_alt_call_user_method (fcall.c:918)\n==10576==    by 0x10BBF84E: phalcon_call_method_internal (fcall.c:340)\n==10576==    by 0x10BBFDE3: phalcon_call_method_ex (fcall.c:438)\n==10576==    by 0x10D07A95: zim_Phalcon_Mvc_Model_MetaData_readMetaData (metadata.c:344)\n==10576==    by 0x10BE2F25: phalcon_alt_call_method (fcall.c:477)\n==10576==    by 0x10BE36A2: phalcon_alt_call_user_method (fcall.c:947)\n==10576==    by 0x10BBFC8C: phalcon_call_method_params_internal (fcall.c:409)\n==10576==    by 0x10BBFED3: phalcon_call_method_params (fcall.c:458)\n==10576==    by 0x10BBFF3F: phalcon_call_method_one_param (fcall.c:467)\n==10576==    by 0x10D0A386: zim_Phalcon_Mvc_Model_MetaData_hasAttribute (metadata.c:1050)\n==10576==    by 0x10BE2F25: phalcon_alt_call_method (fcall.c:477)\n==10576==    by 0x10BE36A2: phalcon_alt_call_user_method (fcall.c:947)\n==10576==  Address 0x173b3bb7 is 0 bytes after a block of size 7 alloc'd\n==10576==    at 0x4C2CD7B: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)\n==10576==    by 0xA8F53E: _emalloc (zend_alloc.c:2348)\n==10576==    by 0xA8FADC: _estrndup (zend_alloc.c:2503)\n==10576==    by 0xA6377C: lex_scan (zend_language_scanner.l:1701)\n==10576==    by 0xAA5A46: zendlex (zend_compile.c:4976)\n==10576==    by 0xA543CC: zendparse (zend_language_parser.c:3285)\n==10576==    by 0xA5BFA5: compile_file (zend_language_scanner.l:364)\n==10576==    by 0x761D78: phar_compile_file (phar.c:3394)\n==10576==    by 0xA5C1CE: compile_filename (zend_language_scanner.l:407)\n==10576==    by 0xB131BC: ZEND_INCLUDE_OR_EVAL_SPEC_TMP_HANDLER (zend_vm_execute.h:5255)\n==10576==    by 0xAFF5AF: execute (zend_vm_execute.h:107)\n==10576==    by 0xAAE3DA: zend_call_function (zend_execute_API.c:969)\n==10576== \n==10576== Invalid read of size 1\n==10576==    at 0x10BE34AC: phalcon_alt_call_user_method (fcall.c:918)\n==10576==    by 0x10BBF84E: phalcon_call_method_internal (fcall.c:340)\n==10576==    by 0x10BBFDE3: phalcon_call_method_ex (fcall.c:438)\n==10576==    by 0x10D07AFA: zim_Phalcon_Mvc_Model_MetaData_readMetaData (metadata.c:347)\n==10576==    by 0x10BE2F25: phalcon_alt_call_method (fcall.c:477)\n==10576==    by 0x10BE36A2: phalcon_alt_call_user_method (fcall.c:947)\n==10576==    by 0x10BBFC8C: phalcon_call_method_params_internal (fcall.c:409)\n==10576==    by 0x10BBFED3: phalcon_call_method_params (fcall.c:458)\n==10576==    by 0x10BBFF3F: phalcon_call_method_one_param (fcall.c:467)\n==10576==    by 0x10D0A386: zim_Phalcon_Mvc_Model_MetaData_hasAttribute (metadata.c:1050)\n==10576==    by 0x10BE2F25: phalcon_alt_call_method (fcall.c:477)\n==10576==    by 0x10BE36A2: phalcon_alt_call_user_method (fcall.c:947)\n==10576==  Address 0x173b3bb7 is 0 bytes after a block of size 7 alloc'd\n==10576==    at 0x4C2CD7B: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)\n==10576==    by 0xA8F53E: _emalloc (zend_alloc.c:2348)\n==10576==    by 0xA8FADC: _estrndup (zend_alloc.c:2503)\n==10576==    by 0xA6377C: lex_scan (zend_language_scanner.l:1701)\n==10576==    by 0xAA5A46: zendlex (zend_compile.c:4976)\n==10576==    by 0xA543CC: zendparse (zend_language_parser.c:3285)\n==10576==    by 0xA5BFA5: compile_file (zend_language_scanner.l:364)\n==10576==    by 0x761D78: phar_compile_file (phar.c:3394)\n==10576==    by 0xA5C1CE: compile_filename (zend_language_scanner.l:407)\n==10576==    by 0xB131BC: ZEND_INCLUDE_OR_EVAL_SPEC_TMP_HANDLER (zend_vm_execute.h:5255)\n==10576==    by 0xAFF5AF: execute (zend_vm_execute.h:107)\n==10576==    by 0xAAE3DA: zend_call_function (zend_execute_API.c:969)\n==10576== \n==10576== Invalid read of size 1\n==10576==    at 0x10BE34AC: phalcon_alt_call_user_method (fcall.c:918)\n==10576==    by 0x10BBF84E: phalcon_call_method_internal (fcall.c:340)\n==10576==    by 0x10BBFDE3: phalcon_call_method_ex (fcall.c:438)\n==10576==    by 0x10CFE24A: zim_Phalcon_Mvc_Model_MetaData_Strategy_Introspection_getMetaData (introspection.c:90)\n==10576==    by 0x10BE2F25: phalcon_alt_call_method (fcall.c:477)\n==10576==    by 0x10BE36A2: phalcon_alt_call_user_method (fcall.c:947)\n==10576==    by 0x10BBFC8C: phalcon_call_method_params_internal (fcall.c:409)\n==10576==    by 0x10BBFED3: phalcon_call_method_params (fcall.c:458)\n==10576==    by 0x10BC0065: phalcon_call_method_two_params (fcall.c:489)\n==10576==    by 0x10D06ACA: zim_Phalcon_Mvc_Model_MetaData__initialize (metadata.c:164)\n==10576==    by 0x10BE2F25: phalcon_alt_call_method (fcall.c:477)\n==10576==    by 0x10BE36A2: phalcon_alt_call_user_method (fcall.c:947)\n==10576==  Address 0x173b3bb7 is 0 bytes after a block of size 7 alloc'd\n==10576==    at 0x4C2CD7B: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)\n==10576==    by 0xA8F53E: _emalloc (zend_alloc.c:2348)\n==10576==    by 0xA8FADC: _estrndup (zend_alloc.c:2503)\n==10576==    by 0xA6377C: lex_scan (zend_language_scanner.l:1701)\n==10576==    by 0xAA5A46: zendlex (zend_compile.c:4976)\n==10576==    by 0xA543CC: zendparse (zend_language_parser.c:3285)\n==10576==    by 0xA5BFA5: compile_file (zend_language_scanner.l:364)\n==10576==    by 0x761D78: phar_compile_file (phar.c:3394)\n==10576==    by 0xA5C1CE: compile_filename (zend_language_scanner.l:407)\n==10576==    by 0xB131BC: ZEND_INCLUDE_OR_EVAL_SPEC_TMP_HANDLER (zend_vm_execute.h:5255)\n==10576==    by 0xAFF5AF: execute (zend_vm_execute.h:107)\n==10576==    by 0xAAE3DA: zend_call_function (zend_execute_API.c:969)\n==10576== \n==10576== Invalid read of size 1\n==10576==    at 0x10BE34AC: phalcon_alt_call_user_method (fcall.c:918)\n==10576==    by 0x10BBF84E: phalcon_call_method_internal (fcall.c:340)\n==10576==    by 0x10BBFDE3: phalcon_call_method_ex (fcall.c:438)\n==10576==    by 0x10CFE2BE: zim_Phalcon_Mvc_Model_MetaData_Strategy_Introspection_getMetaData (introspection.c:93)\n==10576==    by 0x10BE2F25: phalcon_alt_call_method (fcall.c:477)\n==10576==    by 0x10BE36A2: phalcon_alt_call_user_method (fcall.c:947)\n==10576==    by 0x10BBFC8C: phalcon_call_method_params_internal (fcall.c:409)\n==10576==    by 0x10BBFED3: phalcon_call_method_params (fcall.c:458)\n==10576==    by 0x10BC0065: phalcon_call_method_two_params (fcall.c:489)\n==10576==    by 0x10D06ACA: zim_Phalcon_Mvc_Model_MetaData__initialize (metadata.c:164)\n==10576==    by 0x10BE2F25: phalcon_alt_call_method (fcall.c:477)\n==10576==    by 0x10BE36A2: phalcon_alt_call_user_method (fcall.c:947)\n==10576==  Address 0x173b3bb7 is 0 bytes after a block of size 7 alloc'd\n==10576==    at 0x4C2CD7B: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)\n==10576==    by 0xA8F53E: _emalloc (zend_alloc.c:2348)\n==10576==    by 0xA8FADC: _estrndup (zend_alloc.c:2503)\n==10576==    by 0xA6377C: lex_scan (zend_language_scanner.l:1701)\n==10576==    by 0xAA5A46: zendlex (zend_compile.c:4976)\n==10576==    by 0xA543CC: zendparse (zend_language_parser.c:3285)\n==10576==    by 0xA5BFA5: compile_file (zend_language_scanner.l:364)\n==10576==    by 0x761D78: phar_compile_file (phar.c:3394)\n==10576==    by 0xA5C1CE: compile_filename (zend_language_scanner.l:407)\n==10576==    by 0xB131BC: ZEND_INCLUDE_OR_EVAL_SPEC_TMP_HANDLER (zend_vm_execute.h:5255)\n==10576==    by 0xAFF5AF: execute (zend_vm_execute.h:107)\n==10576==    by 0xAAE3DA: zend_call_function (zend_execute_API.c:969)\n==10576== \n==10576== Invalid read of size 1\n==10576==    at 0x10BE34AC: phalcon_alt_call_user_method (fcall.c:918)\n==10576==    by 0x10BBF84E: phalcon_call_method_internal (fcall.c:340)\n==10576==    by 0x10BBFDE3: phalcon_call_method_ex (fcall.c:438)\n==10576==    by 0x10CFE332: zim_Phalcon_Mvc_Model_MetaData_Strategy_Introspection_getMetaData (introspection.c:99)\n==10576==    by 0x10BE2F25: phalcon_alt_call_method (fcall.c:477)\n==10576==    by 0x10BE36A2: phalcon_alt_call_user_method (fcall.c:947)\n==10576==    by 0x10BBFC8C: phalcon_call_method_params_internal (fcall.c:409)\n==10576==    by 0x10BBFED3: phalcon_call_method_params (fcall.c:458)\n==10576==    by 0x10BC0065: phalcon_call_method_two_params (fcall.c:489)\n==10576==    by 0x10D06ACA: zim_Phalcon_Mvc_Model_MetaData__initialize (metadata.c:164)\n==10576==    by 0x10BE2F25: phalcon_alt_call_method (fcall.c:477)\n==10576==    by 0x10BE36A2: phalcon_alt_call_user_method (fcall.c:947)\n==10576==  Address 0x173b3bb7 is 0 bytes after a block of size 7 alloc'd\n==10576==    at 0x4C2CD7B: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)\n==10576==    by 0xA8F53E: _emalloc (zend_alloc.c:2348)\n==10576==    by 0xA8FADC: _estrndup (zend_alloc.c:2503)\n==10576==    by 0xA6377C: lex_scan (zend_language_scanner.l:1701)\n==10576==    by 0xAA5A46: zendlex (zend_compile.c:4976)\n==10576==    by 0xA543CC: zendparse (zend_language_parser.c:3285)\n==10576==    by 0xA5BFA5: compile_file (zend_language_scanner.l:364)\n==10576==    by 0x761D78: phar_compile_file (phar.c:3394)\n==10576==    by 0xA5C1CE: compile_filename (zend_language_scanner.l:407)\n==10576==    by 0xB131BC: ZEND_INCLUDE_OR_EVAL_SPEC_TMP_HANDLER (zend_vm_execute.h:5255)\n==10576==    by 0xAFF5AF: execute (zend_vm_execute.h:107)\n==10576==    by 0xAAE3DA: zend_call_function (zend_execute_API.c:969)\n==10576== \n==10576== Invalid read of size 1\n==10576==    at 0x10BE34AC: phalcon_alt_call_user_method (fcall.c:918)\n==10576==    by 0x10BBF84E: phalcon_call_method_internal (fcall.c:340)\n==10576==    by 0x10BBFDE3: phalcon_call_method_ex (fcall.c:438)\n==10576==    by 0x10D07EC9: zim_Phalcon_Mvc_Model_MetaData_readMetaDataIndex (metadata.c:403)\n==10576==    by 0x10BE2F25: phalcon_alt_call_method (fcall.c:477)\n==10576==    by 0x10BE36A2: phalcon_alt_call_user_method (fcall.c:947)\n==10576==    by 0x10BBFC8C: phalcon_call_method_params_internal (fcall.c:409)\n==10576==    by 0x10BBFED3: phalcon_call_method_params (fcall.c:458)\n==10576==    by 0x10BC0065: phalcon_call_method_two_params (fcall.c:489)\n==10576==    by 0x10D08D3D: zim_Phalcon_Mvc_Model_MetaData_getAttributes (metadata.c:618)\n==10576==    by 0x10BE2F25: phalcon_alt_call_method (fcall.c:477)\n==10576==    by 0x10BE36A2: phalcon_alt_call_user_method (fcall.c:947)\n==10576==  Address 0x173b3bb7 is 0 bytes after a block of size 7 alloc'd\n==10576==    at 0x4C2CD7B: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)\n==10576==    by 0xA8F53E: _emalloc (zend_alloc.c:2348)\n==10576==    by 0xA8FADC: _estrndup (zend_alloc.c:2503)\n==10576==    by 0xA6377C: lex_scan (zend_language_scanner.l:1701)\n==10576==    by 0xAA5A46: zendlex (zend_compile.c:4976)\n==10576==    by 0xA543CC: zendparse (zend_language_parser.c:3285)\n==10576==    by 0xA5BFA5: compile_file (zend_language_scanner.l:364)\n==10576==    by 0x761D78: phar_compile_file (phar.c:3394)\n==10576==    by 0xA5C1CE: compile_filename (zend_language_scanner.l:407)\n==10576==    by 0xB131BC: ZEND_INCLUDE_OR_EVAL_SPEC_TMP_HANDLER (zend_vm_execute.h:5255)\n==10576==    by 0xAFF5AF: execute (zend_vm_execute.h:107)\n==10576==    by 0xAAE3DA: zend_call_function (zend_execute_API.c:969)\n==10576== \n==10576== Invalid read of size 1\n==10576==    at 0x10BE34AC: phalcon_alt_call_user_method (fcall.c:918)\n==10576==    by 0x10BBF84E: phalcon_call_method_internal (fcall.c:340)\n==10576==    by 0x10BBFDE3: phalcon_call_method_ex (fcall.c:438)\n==10576==    by 0x10D07F34: zim_Phalcon_Mvc_Model_MetaData_readMetaDataIndex (metadata.c:406)\n==10576==    by 0x10BE2F25: phalcon_alt_call_method (fcall.c:477)\n==10576==    by 0x10BE36A2: phalcon_alt_call_user_method (fcall.c:947)\n==10576==    by 0x10BBFC8C: phalcon_call_method_params_internal (fcall.c:409)\n==10576==    by 0x10BBFED3: phalcon_call_method_params (fcall.c:458)\n==10576==    by 0x10BC0065: phalcon_call_method_two_params (fcall.c:489)\n==10576==    by 0x10D08D3D: zim_Phalcon_Mvc_Model_MetaData_getAttributes (metadata.c:618)\n==10576==    by 0x10BE2F25: phalcon_alt_call_method (fcall.c:477)\n==10576==    by 0x10BE36A2: phalcon_alt_call_user_method (fcall.c:947)\n==10576==  Address 0x173b3bb7 is 0 bytes after a block of size 7 alloc'd\n==10576==    at 0x4C2CD7B: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)\n==10576==    by 0xA8F53E: _emalloc (zend_alloc.c:2348)\n==10576==    by 0xA8FADC: _estrndup (zend_alloc.c:2503)\n==10576==    by 0xA6377C: lex_scan (zend_language_scanner.l:1701)\n==10576==    by 0xAA5A46: zendlex (zend_compile.c:4976)\n==10576==    by 0xA543CC: zendparse (zend_language_parser.c:3285)\n==10576==    by 0xA5BFA5: compile_file (zend_language_scanner.l:364)\n==10576==    by 0x761D78: phar_compile_file (phar.c:3394)\n==10576==    by 0xA5C1CE: compile_filename (zend_language_scanner.l:407)\n==10576==    by 0xB131BC: ZEND_INCLUDE_OR_EVAL_SPEC_TMP_HANDLER (zend_vm_execute.h:5255)\n==10576==    by 0xAFF5AF: execute (zend_vm_execute.h:107)\n==10576==    by 0xAAE3DA: zend_call_function (zend_execute_API.c:969)\n==10576== \n==10576== Conditional jump or move depends on uninitialised value(s)\n==10576==    at 0x10BD1C45: phalcon_lcfirst (string.c:1302)\n==10576==    by 0x10D20CE9: zim_Phalcon_Mvc_Model_Query__getSelectColumn (query.c:1207)\n==10576==    by 0x10BE2F25: phalcon_alt_call_method (fcall.c:477)\n==10576==    by 0x10BE36A2: phalcon_alt_call_user_method (fcall.c:947)\n==10576==    by 0x10BBFC8C: phalcon_call_method_params_internal (fcall.c:409)\n==10576==    by 0x10BBFED3: phalcon_call_method_params (fcall.c:458)\n==10576==    by 0x10BBFF3F: phalcon_call_method_one_param (fcall.c:467)\n==10576==    by 0x10D2E307: zim_Phalcon_Mvc_Model_Query__prepareSelect (query.c:2711)\n==10576==    by 0x10BE2F25: phalcon_alt_call_method (fcall.c:477)\n==10576==    by 0x10BE36A2: phalcon_alt_call_user_method (fcall.c:947)\n==10576==    by 0x10BBF84E: phalcon_call_method_internal (fcall.c:340)\n==10576==    by 0x10BBFDE3: phalcon_call_method_ex (fcall.c:438)\n==10576== \n==10576== Conditional jump or move depends on uninitialised value(s)\n==10576==    at 0x10BCD946: _zval_dtor (zend_variables.h:32)\n==10576==    by 0x10BD1C5E: phalcon_lcfirst (string.c:1303)\n==10576==    by 0x10D20CE9: zim_Phalcon_Mvc_Model_Query__getSelectColumn (query.c:1207)\n==10576==    by 0x10BE2F25: phalcon_alt_call_method (fcall.c:477)\n==10576==    by 0x10BE36A2: phalcon_alt_call_user_method (fcall.c:947)\n==10576==    by 0x10BBFC8C: phalcon_call_method_params_internal (fcall.c:409)\n==10576==    by 0x10BBFED3: phalcon_call_method_params (fcall.c:458)\n==10576==    by 0x10BBFF3F: phalcon_call_method_one_param (fcall.c:467)\n==10576==    by 0x10D2E307: zim_Phalcon_Mvc_Model_Query__prepareSelect (query.c:2711)\n==10576==    by 0x10BE2F25: phalcon_alt_call_method (fcall.c:477)\n==10576==    by 0x10BE36A2: phalcon_alt_call_user_method (fcall.c:947)\n==10576==    by 0x10BBF84E: phalcon_call_method_internal (fcall.c:340)\n==10576== \n==10576== Invalid read of size 1\n==10576==    at 0x10BE34AC: phalcon_alt_call_user_method (fcall.c:918)\n==10576==    by 0x10BBF84E: phalcon_call_method_internal (fcall.c:340)\n==10576==    by 0x10BBFDE3: phalcon_call_method_ex (fcall.c:438)\n==10576==    by 0x10D4AA5E: zim_Phalcon_Mvc_Model_Manager_initialize (manager.c:248)\n==10576==    by 0x10BE2F25: phalcon_alt_call_method (fcall.c:477)\n==10576==    by 0x10BE36A2: phalcon_alt_call_user_method (fcall.c:947)\n==10576==    by 0x10BBFC8C: phalcon_call_method_params_internal (fcall.c:409)\n==10576==    by 0x10BBFED3: phalcon_call_method_params (fcall.c:458)\n==10576==    by 0x10BBFF3F: phalcon_call_method_one_param (fcall.c:467)\n==10576==    by 0x10C8490C: zim_Phalcon_Mvc_Model___construct (model.c:179)\n==10576==    by 0x10BE2F25: phalcon_alt_call_method (fcall.c:477)\n==10576==    by 0x10BE36A2: phalcon_alt_call_user_method (fcall.c:947)\n==10576==  Address 0x17857787 is 0 bytes after a block of size 7 alloc'd\n==10576==    at 0x4C2CD7B: malloc (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)\n==10576==    by 0xA8F53E: _emalloc (zend_alloc.c:2348)\n==10576==    by 0xA8FADC: _estrndup (zend_alloc.c:2503)\n==10576==    by 0xA6377C: lex_scan (zend_language_scanner.l:1701)\n==10576==    by 0xAA5A46: zendlex (zend_compile.c:4976)\n==10576==    by 0xA543CC: zendparse (zend_language_parser.c:3285)\n==10576==    by 0xA5BFA5: compile_file (zend_language_scanner.l:364)\n==10576==    by 0x761D78: phar_compile_file (phar.c:3394)\n==10576==    by 0xA5C1CE: compile_filename (zend_language_scanner.l:407)\n==10576==    by 0xB131BC: ZEND_INCLUDE_OR_EVAL_SPEC_TMP_HANDLER (zend_vm_execute.h:5255)\n==10576==    by 0xAFF5AF: execute (zend_vm_execute.h:107)\n==10576==    by 0xAAE3DA: zend_call_function (zend_execute_API.c:969)\n==10576== \n```\n",
    "head_branch": "valgrind",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 17012987a2d91e2a957b36f1d45661b9b05fc0c0 into c5d648935702c0e820cb1ae8ec3540109b7278f6"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621387e18912b45d36a3e10",
    "number": 848,
    "body": "Looks like it is sometimes possible to eliminate calls to update_property because read_property does not separate the returned value.\n\nThe idea is described in [this test case](https://github.com/sjinks/phalcon-kernel-test/blob/master/testbed.c#L73) and is implemented in `Phalcon\\Mvc\\Router\\Route::construct()`.\n\nThe result is:\n- directly saved 80 bytes of RAM (amd64)\n- -2 or -3 variables tracked by the MM\n- eliminated call to update_property.\n\nIf you are OK with this optimization, I think there are places where this can be implemented.\n",
    "head_branch": "router",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621387f18912b45d36a3e11",
    "number": 847,
    "body": "- array_unshift() (used in Phalcon\\Mvc\\View\\Engine\\Volt\\Compiler::resolveFilter())\n- array_values()\n- array_key_exists()\n",
    "head_branch": "array-funcs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 4c863cbd94eb2c109fb39e247dc3f51d436b047d into d6a3e33515b9194bdb8c765c6282ffc246540b2a"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621388018912b45d36a3e12",
    "number": 846,
    "body": "Use parallelism wherever possible to make Travis CI builds/test faster.\n\nIn particular:\n- parallel compilation\n- parallel installation of all dependencies\n- parallel set up of the databases\n\nThis reduced the overall build time (for all used PHP versions) from ~20 minutes to 12.\n\nPS: this is to be merged to 1.2.1, not to master\n",
    "head_branch": "ci-cleanup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 1a01985ce665dbb3b827067d75defb2cd1272f37 into 270508972243501c287cfdf6a7a7edfb213dd44c"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621388118912b45d36a3e13",
    "number": 845,
    "body": "The idea was taken from the [https://github.com/phalcon/incubator/tree/master/Library/Phalcon/Logger](incubator).\n\nThe adapter is meant to send messages to FireBug with FirePHP extension enabled.\n\nThis implementation differs from the incubator's:\n- `_initialized` and `_index` properties are static — if by accident the user instantiates two loggers, FirePHP will be very confused;\n- very long messages are split into 5KB chunks so that Firefox be able to read the headers properly.\n\nBonuses:\n- much shorter version of `Phalcon\\Logger\\Formatter::getTypeString()`\n- results returned by json_encode() are always NUL-terminated (otherwise Zend Engine complains loudly if PHP is built with debugging support)\n",
    "head_branch": "logger-firephp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge c997e988c825b2bf228f45d3c3513a720d04ab5b into e29a21a9528cae4d32898d1c47a284b796370d34"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621388218912b45d36a3e14",
    "number": 844,
    "body": "Implementation of Phalcon\\Config\\Adapter\\Json from the [incubator](https://github.com/phalcon/incubator/blob/master/Library/Phalcon/Config/Adapter/Json.php). Uses native functions and therefore should be pretty fast.\n",
    "head_branch": "config-adapter-json",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge f7c59118e83e9ba92d9cf076bc8057eebffc4c77 into 624cd166c9a0a9d0b816f63044c60aff847fe251"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621388418912b45d36a3e15",
    "number": 843,
    "body": "Features:\n- removed duplicated code\n- removed `noreturn` parameter (`return_value == NULL` when the caller does not want the return value) — less arguments => more opportunities for inlining\n- reorganized macros in kernel/fcall.h a bit (for readability)\n- removed not used code\n\nUnrelated but required changes:\n- fix spurious segfaults in `kernel/string.c` due to not initialized `use_copy`\n- updated php_phalcon.h in build/\n- added missing headers/sources to gen-build.php\n- instructed gen-build.php not to strip system headers\n",
    "head_branch": "fcall",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 84469ae180a7718ff51a22df1dd29aac118f6862 into cd01796860cbefcdd05d42c284a3064beb3c4f7c"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621388518912b45d36a3e16",
    "number": 842,
    "body": "Plus a lot of optimizations.\n\nNow ConfigTest takes 0.9210 seconds (vs 1.1139) on PHP 5.4.10 ZTS+Debug.\nTaking into account that the config tests are pretty simple, these 0.2 seconds can be seen as significant improvement.\n\nAs a bonus, Phalcon\\Config now supports numeric properties.\n",
    "head_branch": "config-obj-handlers",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge c11f65ac4bfa5ce989bbb3faac19b8b31235a378 into b444d7ca846252cebb1c9e8b7a15a32a7a5ba32f"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621388618912b45d36a3e17",
    "number": 841,
    "body": "See #838\n",
    "head_branch": "issue-838",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge d033a92ce15eaf0b4f14007e51a2e0db4b534278 into 1c0552ff5a076b6ffca0a976b6646794c8e9db8e"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621388718912b45d36a3e18",
    "number": 840,
    "body": "Right now Phalcon uses SPL, PCRE, JSON, Session modules if they present at compile time. Those modules can be built either statically into PHP or as DSOs.\n\nIf a module Phalcon depends on is built as a DSO and then later is disabled in php.ini, this may lead to very interesting crashes due to unresolved external symbol. Module dependencies will ensure that all required modules are present at runtime and provide meaningful diagnostics if one of the required modules is missing.\n\nThis PR implements the following:\n- 0ca55d6 and 4db3834 add known module dependencies to config.m4 (strictly speaking this is necessary only when Phalcon is built statically into PHP (as an offtopic, if Phalcon is built into PHP and LTO is enabled, this could give quite noticeable performance improvement due to better opportunities for inlining and IPO)) and phalcon.c; this will ensure the correct order of initialization of extensions\n- 4db3834 also removes conditional checks against old ZEND_MODULE_API_NO numbers (those numbers correspond to PHP 4.x, if I am not mistaken) and adds `GINIT` function used to initialize module globals (this is the preferred way over `ZEND_INIT_MODULE_GLOBALS(phalcon, php_phalcon_init_globals, NULL)` used for backwards compatibility with ancient PHP versions)\n- f2392c9 introduces kernel/session.c and kernel/session.h which provide transparent access to the PHP Session API (either via calls to native functions or via calls to the userland); f4d1ee6 uses this API in `ext/session/adapter.c` (this looks better than a bunch of #ifdefs)\n- bce8607 provides an abstraction for `preg_match` regardless whether PCRE is available at compile time and now it is sufficient to call `phalcon_preg_match` without any #ifdefs\n\nTo be done:\n- 0ca55d6 works reliably only for *nix; Windows builds currently use a hack (in the bottom of php_phalcon.h) because I don't know the equivalent for `AC_CHECK_HEADER()` for `config.w32`; in other words, nothing has changed for Windows. I need help here.\n- `build/*/config.m4` will need to be updated, too\n",
    "head_branch": "module-deps",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 17ef2905ef623181afd21b50b471d6a5a83f0cce into b444d7ca846252cebb1c9e8b7a15a32a7a5ba32f"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621388818912b45d36a3e19",
    "number": 837,
    "body": "See #829\n",
    "head_branch": "issue-829",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge c251b21b63ceefb105b7ab17793eef8ef1b4a718 into b444d7ca846252cebb1c9e8b7a15a32a7a5ba32f"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621388b18912b45d36a3e1a",
    "number": 836,
    "body": "Features:\n- use native json_encode() and json_decode() if they are available\n- use native memory_get_usage()\n- use native zend_zval_type_name() instead of userspace gettype()\n- use native zend_fetch_debug_backtrace() instead of debug_backtrace()\n- use native counterparts for header() and headers_sent()\n- use native session_start() and session_id()\n- use native ob_get_level()\n- use native lcfirst()\n- updated gen-build.php and rebuilt release files\n",
    "head_branch": "native-funcs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 95171fbf3d1b69930a1962163da820f1c432b42c into f3a0e196f58c914857906c31c4689ad863155cca"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621388c18912b45d36a3e1b",
    "number": 834,
    "body": "- grow should be 0 when MM is not used\n- do not use MM if no memory allocation takes place\n",
    "head_branch": "mm",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 0dff66a833621aa89b230658096c3e1fa268d21d into 670e315d08d960d9de3271a57f4bf529b53bf4eb"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621388d18912b45d36a3e1c",
    "number": 833,
    "body": "Plus:\n- do not use MM in Phalcon\\Escaper::escapeUrl, Phalcon\\Text::camelize, Phalcon\\Text::uncamelize\n- bug fix for phalcon_fast_strpos() when `needle` is empty\n- fix too early return in Phalcon\\Cache\\Backend\\Xcache::queryKeys\n",
    "head_branch": "string-optimization",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 02eaf7563e56dbbdbea39d58dd9c38bf8d259220 into 3ba16eeefbc3f1340ca08a3922baaa1d04b991e5"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621388e18912b45d36a3e1d",
    "number": 832,
    "body": "See #831\n",
    "head_branch": "issue-831",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge f348ec9daf86bf130438a9505d6402820991e183 into 4e81f8dee7e0ac9cfec3d6de9a7a95d5e7183e6e"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621388f18912b45d36a3e1e",
    "number": 830,
    "body": "Changes:\n- dropped `array_merge_recursive_n()` because it was a duplicate of `phalcon_array_merge_recursive_n()`\n- introduced `phalcon_get_current_key_w()` that returns a `zval` that boxes the current key; this zval does not have to be destroyed, therefore PHALCON_MM_GROW()/PHALCON_MM_RESTORE() can be sometimes avoided;\n- removed `TSRMLS` from `phalcon_array_merge_recursive_n()` thanks to `phalcon_get_current_key_w()`\n",
    "head_branch": "faster-merge",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 9ec1f6d9966f48d4948defce17f22038f25e010c into 78dfb6de6aa57f18e12e8934b9efb64da53f2b1e"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621389018912b45d36a3e1f",
    "number": 829,
    "body": "No section.\n\n```\n# test.ini\nhoge=test\nfoo=bar\n\n# PHP\n$config = new \\Phalcon\\Config\\Adapter\\Ini(__DIR__ . '/test.ini');\n$config->toArray();\n// => Fatal error: Phalcon\\Config\\Adapter\\Ini::__construct(): The argument is not iterable()\n\n// => Update:\n// array(2) {\n//   'hoge' => \"test\"\n//   'foo' => \"bar\"\n// }\n```\n\nNo section items.\n\n```\n# test.ini\n[section]\nhoge=test\n[empty]\n[test]\nfoo=bar\n\n# PHP\n$config = new \\Phalcon\\Config\\Adapter\\Ini(__DIR__ . '/test.ini');\n$config->toArray();\n// =>\n// array(2) {\n//   'section' => array(1) { 'hoge' => \"test\" }\n//   'test' => array(1) { 'foo' => \"bar\" }\n// }\n\n// => UPDATE:\n// array(2) {\n//   'section' => array(1) { 'hoge' => \"test\" }\n//   'empty' => array(0) {}\n//   'test' => array(1) { 'foo' => \"bar\" }\n// }\n```\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 8a8509e3277ceae732ebeb256380b47ad2e5e9d6 into 660ba13d950f529e04e8c0a131d327dfc84f8efa"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621389318912b45d36a3e20",
    "number": 828,
    "body": "See #810\n",
    "head_branch": "issue-810",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 2d9b4e1023067d8d3b8c050096cb198e6236a59e into 412289eeb22e143d9798db39bbcc3f1880331baf"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621389418912b45d36a3e21",
    "number": 827,
    "body": "- PHALCON_INIT_VAR_OLD is not used anywhere\n- remove dead assignment from phalcon_serialize()\n- fix bug in `phalcon_eol` (return empty string instead of \\0)\n",
    "head_branch": "dead-code-elimination",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 72c7af8fbfdb7b288befc19f6bea56fe78354f49 into a91d9753fa797ff59377c4803112d2c663fb2115"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621389518912b45d36a3e22",
    "number": 825,
    "body": "Fixes:\n- ‘phalcon_less_equal_long’ declared ‘static’ but never defined — implemented the function\n- ‘phalcon_try_execute’ declared ‘static’ but never defined — commented out the definition\n- ‘phalcon_restore_symbol_table’ declared ‘static’ but never defined — commented out the definition\n- 'phalcon_call_user_function_ex', 'phalcon_call_function', 'phalcon_lookup_class_ex' and 'phalcon_lookup_class' declared ‘static’ but never defined — implementation is provided only for PHP <= 5.3.9, therefore I moved their definitions under `#if PHP_VERSION_ID <= 50309`\n- 'phalcon_alt_call_user_method_ex' declared 'static' but never defined — commented out their definitions.\n",
    "head_branch": "compiler-warnings",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge e4d595241ced0c79509bd15de8fdebf7635eae02 into f690e55d82be83b4d39278d7828d9ba117f2bb04"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621389718912b45d36a3e23",
    "number": 823,
    "body": "Iteration 2 as mentioned in #822: removed `TSRMLS_DC` from the functions that do not need it (anymore) and updated dependencies.\n",
    "head_branch": "array_tsrmls",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge a4fd2880dc0758c9c6164f50f879c8f19c82dcce into e177ef27959666429962aba1546de33686337081"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621389818912b45d36a3e24",
    "number": 822,
    "body": "Changes:\n- isset/unset/update/fetch functions are now more consistent with PHP's behavior (ie, they accept all scalar key types, properly handle string keys consisting of digits etc);\n- use Zend's SEPARATE_ZVAL() macro;\n- phalcon_array_{is,un}set() do not need a temporary zval anymore — -1 memory allocation, -1 type conversion\n- phalcon_array_update_zval() and phalcon_array_fetch() do not zval need type conversions anymore;\n- phalcon_array_fetch family does memory allocation in one place which makes it easier to find potential issues;\n- replaced php_error_docref() with zend_error() — this is what SPL and new extensions prefer to use nowadays. The advantage is that zend_error() does not need TSRMLS_CC. Therefore on the next iteration we will be able to get rid of TSRMLS_CC in the array functions and this will allow to save some stack/registers, give more opportunities to inlining and give a bit faster code.\n\nPS: optimizations resulted in -110 lines, less code to maintain for more features :grinning:\n",
    "head_branch": "array-opt",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 4ca4f032a6475cf3375a60ec38d04f0fb9947308 into 3f61ae4522ae42b6439b70aca89ff4484ea70693"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621389918912b45d36a3e25",
    "number": 820,
    "body": "**_Rebased #734 against 1.2.1**_\n\nSee #732\n",
    "head_branch": "issue-732",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge b3275640e5b9833646e95c5df4243063e67dae14 into c95cc91a9a9edfcdb633b8e60747933f25bf3486"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621389a18912b45d36a3e26",
    "number": 819,
    "body": "**_Rebased #799 against 1.2.1**_\n- APC, Mongo and Memcache are [preinstalled by Travis](http://about.travis-ci.org/docs/user/languages/php/#Preinstalled-PHP-extensions);\n- `phpenv config-add` is the [preferred way](http://about.travis-ci.org/docs/user/languages/php/#Custom-PHP-configuration) to modify the configuration\n- install APCu from PECL (PHP 5.5), do not download it directly\n",
    "head_branch": "ci-cleanup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 6d40fdff2a5356f2fd4138bd466878febf571c83 into d5f1dcde28fcd7e12af4bf5c4f6494bb2cf6df0a"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621389b18912b45d36a3e27",
    "number": 818,
    "body": "See #812\n\n**_Rebased #814 against 1.2.1**_\n",
    "head_branch": "issue-812",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 549bdc4b8b9f2287f7406985a9b6ec5cb98dcbe5 into 71453c51f77d92e4a25569c47ad55d2ffa71e3b5"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621389c18912b45d36a3e28",
    "number": 817,
    "body": "This allows one to generate 32bits/phalcon.c and 64bits/phalcon.c on the same computer, without having to switch to a VM.\n\n**_Rebased #813 against 1.2.1**_\n",
    "head_branch": "hash_32_64",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge c08a204c2be306681965dbb653b5beb4e71fff60 into 7dc4370605498cf595249851d68fc3299c6ce2e6"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621389d18912b45d36a3e29",
    "number": 816,
    "body": "Added boolean type as TINYINT(1)\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 1dbc01e1bff9e26cba9f8e0be589e71b318d5a0f into 02b3dfe22dc050d64be8d8a562ff9e6d819ae635"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621389e18912b45d36a3e2a",
    "number": 814,
    "body": "See #812\n\nThe proposed fix is to check whether the class exists before trying to `include()` the file.\n",
    "head_branch": "issue-812",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621389f18912b45d36a3e2b",
    "number": 813,
    "body": "This allows one to generate 32bits/phalcon.c and 64bits/phalcon.c on the same computer, without having to switch to a VM.\n",
    "head_branch": "hash_32_64",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662138a018912b45d36a3e2c",
    "number": 808,
    "body": "",
    "head_branch": "1.2.0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662138a118912b45d36a3e2d",
    "number": 801,
    "body": "See #800\n",
    "head_branch": "compiler-warnings",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 0c266335643d24d7d367cc00f4a3171e8a8ee199 into 4b4274e8812c964a9780dca04445225d889a8ee6"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662138a318912b45d36a3e2e",
    "number": 799,
    "body": "- APC, Mongo and Memcache are [preinstalled by Travis](http://about.travis-ci.org/docs/user/languages/php/#Preinstalled-PHP-extensions);\n- `phpenv config-add` is the [preferred way](http://about.travis-ci.org/docs/user/languages/php/#Custom-PHP-configuration) to modify the configuration\n- install APCu from PECL (PHP 5.5), do not download it directly\n",
    "head_branch": "ci-cleanup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662138a418912b45d36a3e2f",
    "number": 798,
    "body": "Removed php-tests/ci/ (not used) in favor of unit-tests/ci/\n",
    "head_branch": "cleanup",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 6ebb59639ba00ba6f0b6e0c59143e31a81c9893c into f3f6954ebd4cd81006000e004f8e80da81b89462"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662138a518912b45d36a3e30",
    "number": 795,
    "body": "See https://github.com/phalcon/cphalcon/pull/794#issuecomment-20562908\n\nI am not 100% sure but it is possible that Travis reads .travis.yml from the master branch — chances are that you will need to copy .travis.yml from 1.2.9 to master.\n",
    "head_branch": "1.2.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 4a3c131729dedc2ef83dbf8e5aee425bdc7240ac into a20ed33c0ab64dfb378255572d1fb0476b54e857"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662138a618912b45d36a3e31",
    "number": 794,
    "body": "In brief:\n- fix broken tests (e.g, PostgreSQL is used in SQLite tests);\n- add missing tests;\n- skip tests if the required backend (Mongo, Memcache) is not available\n- allow one to skip tests for unavailable DB backends\n",
    "head_branch": "tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge eab83700fa1ee5eeb0f51bdae002e96f7b1870f4 into cab7c46a0f3790f9d0e303994510a10a3aa2ff19"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662138a718912b45d36a3e32",
    "number": 792,
    "body": "- Adds back AnnotationsAdaptersTest (it was misspelt as AnnotationsAdapterTest because of which manual-unit.php failed)\n- Makes sure that TestClass is included only once (it is required by both AnnotationsAdapterTest and AnnotationsTest)\n- Allows one to use config.db.local.php for local tests (the file is gitignore'd and won't be committed by accident to the tree)\n",
    "head_branch": "tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge b4fe4d0e27d682bba1429761dfcf52ab7ebe2c1a into 32757bab73e4e6761908c481f9f42b06555ec9a5"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662138a818912b45d36a3e33",
    "number": 791,
    "body": "Updated to work with PHP 5.5\n",
    "head_branch": "native-apc-iterator",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge e29cf502001d3b91ea9e205fe19b70027c4a4950 into 9fe8c766abac84eb50dbf39275b98f9d98287e3d"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662138a918912b45d36a3e34",
    "number": 790,
    "body": "Please take a look, this seems to fix it.\n\nHowever, the same needs to be applied to other functions.\n",
    "head_branch": "array-separation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662138aa18912b45d36a3e35",
    "number": 789,
    "body": "[As discussed](https://github.com/phalcon/cphalcon/issues/776#issuecomment-20500171)\n\nThis pull request changes these functions and macros:\n- phalcon_array_isset_string => phalcon_array_isset_quick_string\n- phalcon_array_update_string => phalcon_array_update_quick_string\n- phalcon_array_fetch_string => phalcon_array_fetch_quick_string\n- phalcon_call_method_XXX => phalcon_call_method_XXX_key\n- phalcon_function_exists => phalcon_function_exists_ex\n- phalcon_function_exists_ex => phalcon_function_quick_exists_ex\n- phalcon_isset_property => phalcon_isset_property_quick\n- phalcon_lookup_class_ce => phalcon_lookup_class_ce_quick\n- phalcon_read_property_this => phalcon_read_property_this_quick\n- phalcon_return_property => phalcon_return_property_quick\n- phalcon_update_property_this => phalcon_update_property_this_quick\n- phalcon_method_exists => phalcon_method_exists_ex\n- phalcon_method_exists_ex => phalcon_method_quick_exists_ex\n\nChanges:\n- RETURN_MEMBER expands to phalcon_return_property_quick, not phalcon_return_property\n\nRemoves:\n- macros declared as deprecated in fcall.h (all occurrences are replaced with their non-deprecated counterparts)\n\nBonuses:\n- fix memleak in phalcon_array_merge_recursive_n\n- userspace intval replaced with phalcon_get_intval in db/dialect/oracle.c\n- calls to userspace setcookie() replaced with php_setcookie() in ext/http/response/cookies.c\n\nThough all Travis CI tests have passed, please review the changes carefully!\n",
    "head_branch": "quick",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 0326fb0381c9adecc3eebf01c124178b34a9c708 into 5a28688a6bde2565faca34fdec53d231185977ec"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662138ab18912b45d36a3e36",
    "number": 788,
    "body": "See #787\n",
    "head_branch": "issue-787",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 397baa6d58cec74fc964fe674e30fffecf16c13f into d82e5edfaa0fbe893921346829fe176dba96661b"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662138ac18912b45d36a3e37",
    "number": 783,
    "body": "I received a \"Unrecognised CPU. Please email the following to: P@draigBrady.com\" build warning on my Digital Ocean VM during installation. I emailed Pádraig Brady, he responded quickly, pushed a new version of gcccpuopt (V0.99.11), I downloaded it, verified it works on a few architectures, and then committed it.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662138ad18912b45d36a3e38",
    "number": 781,
    "body": "See #780\n",
    "head_branch": "issue-780",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 965a06f36b4d738e55e1f0da47a5a49e83ede1c1 into 2e1f90e73f605d076d9a8f23506df7757ef3a010"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662138ae18912b45d36a3e39",
    "number": 779,
    "body": "",
    "head_branch": "issue-776",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge c48ee12c42f5a9cbe26b1b23f7a3d0467d10ae43 into 615ee1d774518e2102012ca44825cddbdb2a9e4a"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662138af18912b45d36a3e3a",
    "number": 778,
    "body": "See #776\n\n**Please review carefully**\n",
    "head_branch": "issue-776",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 190cd7c076f6a22b27c2552c91388c3d43fa58c3 into 301acf2370dc2617598bcd96aa264b805f58a846"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662138b018912b45d36a3e3b",
    "number": 777,
    "body": "Changes:\n- `phalcon_clone()`: renamed `destiny` to `destination`\n- `phalcon_read_property()`: made it a wrapper around `zend_read_property()` because:\n  - in case of `!Z_OBJ_HT_P(object)->read_property` `EG(scope)` was not restored;\n  - `silent` argument was not honored in calls to `Z_OBJ_HT_P(object)->read_property` (the condition should have been `silent ? BP_VAR_IS : BP_VAR_R`)\n  - `zend_read_property()` does exactly the same as `phalcon_read_property()` — no overhead but ensures compatibility with the future PHP versions\n- `phalcon_read_property_zval()`: a wrapper around `phalcon_read_property()`;\n- `phalcon_update_property_string()`: a wrapper around `zend_update_property()` with no overhead;\n- `phalcon_update_property_zval()` and `phalcon_update_property_zval_zval()`: wrappers around `zend_update_property()`\n- `phalcon_update_property_empty_array()`: `phalcon_update_property_zval()` with an empty array\n\nIn most cases all overhead is that zend_read/update_property() cannot be inlined into a Phalcon function;  however, almost all phalcon_update_property_XXX functions call their zend_update_property_XXX counterparts, thus this probably is not an issue.\n\nThe advantage is the smaller code (can have more in L1i cache :-) ) and compatibility with the future PHP versions without #ifdef's\n",
    "head_branch": "object-refactoring",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 4019e9091b8b5753dedb7771a599c0fd415f91c3 into bb5cd66790c6575751b6bd82977e0a33e125e61e"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662138b118912b45d36a3e3c",
    "number": 774,
    "body": "See #773\n",
    "head_branch": "warnings",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 8efcb1a4eb4cd0792b4431c44b90cd008f87aa36 into 8889a7b04876a351602895c441b05f2b7844641b"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662138b218912b45d36a3e3d",
    "number": 772,
    "body": "See #771\n",
    "head_branch": "issue-771",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 61ba9d7c263e93241f8b643f58806552d7cd5e26 into 326e4f2d4406fa8fa4ea14334a57894d5b6fb1a2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662138b318912b45d36a3e3e",
    "number": 770,
    "body": "These are unlikely to happen unless someone wants to crash Phalcon.\n\nFirst one:\n\n``` php\n$c = new \\Phalcon\\Mvc\\View\\Engine\\Volt\\Compiler(new \\Phalcon\\Mvc\\View());\n$c->compileIf(array(), false);\n```\n\nIn this case:\n\n``` c\nzval *expr_code; /* not initialized */\n\nif (phalcon_array_isset_string(statement, SS(\"expr\"))) {\n    PHALCON_OBS_VAR(expr);\n    phalcon_array_fetch_string(&expr, statement, SL(\"expr\"), PH_NOISY_CC);\n\n    PHALCON_INIT_VAR(expr_code);\n    phalcon_call_method_p1(expr_code, this_ptr, \"expression\", expr);\n}\n/* if we take 'else' branch (!isset($statement['expr'])), $expr_code will be left uninitialized resulting in a crash */\nPHALCON_SCONCAT_SVS(compilation, \"<?php if (\", expr_code, \") { ?>\");\n```\n\nSecond one (this one is harder to reproduce but still possible):\n\n``` php\n$c = new \\Phalcon\\Mvc\\View\\Engine\\Volt\\Compiler(new \\Phalcon\\Mvc\\View());\n$c->compileMacro(array('name' => 'test', 'parameters' => array()), false);\n```\n\nIn this case:\n\n``` c\nzval *block_code; /* not initialized */\n\n\nif (phalcon_array_isset_string(statement, SS(\"block_statements\"))) {\n/* ... */\n    PHALCON_INIT_VAR(block_code);\n    phalcon_call_method_p2(block_code, this_ptr, \"_statementlist\", block_statements, extends_mode);\n}\n/* Take 'false' branch (!isset($statement['block_statements'])), $block_code will be left uninitialized resulting in a crash */\nPHALCON_SCONCAT_VS(code, block_code, \"<?php } ?>\");\n```\n\nI do understand that these scenarios are highly unlikely IRL (the parser won't allow this, one need to invoke compileXXX statements manually), but it is better not to leave any chance to crashes :-)\n",
    "head_branch": "volt-segfaults",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 7e58e553472cd92e141225a28dbe2525fd05ed74 into e977eb5ccb195cd53e9e7e865484a09e7e17b5e4"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662138b418912b45d36a3e3f",
    "number": 769,
    "body": "See #768\n",
    "head_branch": "issue-768",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 08b6653d1c5dd66d5cd1533a926a73d3211ce148 into 811a48e82405a924ce456bfa287752fcb077c2cf"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662138b518912b45d36a3e40",
    "number": 766,
    "body": "Hides phalcon_print_backtrace() function in the release mode\n",
    "head_branch": "fix-backtrace",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 398bc0d724377b13f10822e564848f29fac70052 into 32520d23543e658265e7d8a9e9207f8c112e48e0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662138b618912b45d36a3e41",
    "number": 765,
    "body": "Please do not merge until Travis confirms that all tests are passed\n",
    "head_branch": "native-buffering",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge e56588ebdc62679091e1fe7abe0b5c4a3a8081e1 into 71d1576bdd721be8a93ed45e711d91f481130fb4"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662138b718912b45d36a3e42",
    "number": 763,
    "body": "Because:\n- they are faster;\n- userspace output buffering functions will end up calling them anyway.\n",
    "head_branch": "native-buffering",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge ae351d15ffe1ff0e595c46ac86c35c677c084673 into f3583a5954a1b6f9259908f811372cb9d9549159"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662138b818912b45d36a3e43",
    "number": 762,
    "body": "See https://github.com/phalcon/cphalcon/pull/737#issuecomment-20327981\n",
    "head_branch": "oracle-aliasing",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge c340f7ff1d6041db41fcfc42dd1a38966e6f2ead into 930935794772178478ffa38b6c3df07b72c5a6cf"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662138b918912b45d36a3e44",
    "number": 756,
    "body": "665b680880d6a4f8cc561ba82d8082938716ab9c introduce `phalcon_base64_encode()` and `phalcon_base64_decode()` which were declared with `TSRMLC_DC`.\n\nHowever, the rest of the code did not pass `TSRMLS_CC` to them which resulted in errors:\n\n```\n/home/travis/build/phalcon/cphalcon/ext/crypt.c: In function ‘zim_Phalcon_Crypt_encryptBase64’:\n\n/home/travis/build/phalcon/cphalcon/ext/crypt.c:352:2: error: too few arguments to function ‘phalcon_base64_encode’\n\n/home/travis/build/phalcon/cphalcon/ext/kernel/string.h:76:13: note: declared here\n\n/home/travis/build/phalcon/cphalcon/ext/crypt.c: In function ‘zim_Phalcon_Crypt_decryptBase64’:\n\n/home/travis/build/phalcon/cphalcon/ext/crypt.c:376:2: error: too few arguments to function phalcon_base64_decode’\n\n/home/travis/build/phalcon/cphalcon/ext/kernel/string.h:77:13: note: declared here\n```\n",
    "head_branch": "fix_phalcon_base64",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 6ba0a047b98a7addae701ef37d7d53c547fd9876 into 63ad2b3ea824f721630578a33b2d3bccf747dc3c"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662138bb18912b45d36a3e45",
    "number": 755,
    "body": "See https://github.com/phalcon/cphalcon/pull/745#issuecomment-20315971\n\n**Note:** the code is for Linux only. In theory should work for MacOS as well but I have no Mac to test.\n\nFor Mac all it will take is\n\n``` patch\n-#ifdef linux \n+#if defined(linux) || defined(whatever is defined on mac)\n```\n\nFor Windows this solution can probably be used: http://stackoverflow.com/a/5699483/1046773\n",
    "head_branch": "backtrace",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge b3954dafa56aa908f397c32f49c726c1b4a0aafd into 665b680880d6a4f8cc561ba82d8082938716ab9c"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662138bc18912b45d36a3e46",
    "number": 753,
    "body": "See https://github.com/phalcon/cphalcon/pull/745#issuecomment-20303312\n",
    "head_branch": "base-app-crash",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge fb539ec29077638eb7fa645ac4ab37abf1f49570 into 430a30dc4e3beda59587dc4d3f63f9c0e137c662"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662138bd18912b45d36a3e47",
    "number": 752,
    "body": "See #750\n",
    "head_branch": "issue-750",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge d79dd010fb19fa3a286bbcdf7a11fe61f5fcf8cf into 66011a4df5560160b05134cad7a75f1e78fc5bd6"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662138be18912b45d36a3e48",
    "number": 751,
    "body": "See https://github.com/phalcon/cphalcon/pull/737#issuecomment-20273767\n",
    "head_branch": "issue-726",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge ec00bbceaee62d9026b889b30b1095cff2bbe5ae into be39769e4760f6dd09dc7afdc25347e49af8ed2b"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662138bf18912b45d36a3e49",
    "number": 747,
    "body": "Provides the implementation of the stub method (wherever appropriate) plus changes `view.schema` to `schema.view` for CREATE/DROP VIEW statements.\n",
    "head_branch": "dialect-sqlite",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 1217450f4015ea747d4f470f5f90ccfa5fbbbcbb into 48a06c338002ce3e2af090b14f027048b7cd2c17"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662138c018912b45d36a3e4a",
    "number": 746,
    "body": "This pull requests replaces calls like `phalcon_call_func_p1(serialized, \"base64_encode\", data);` with a call to the native `php_base64_encode()`/`php_base64_decode()`. The advantage is that there is much less overhead to call a native function than to call a function via Zend API.\n\nSame for `md5()`: it is replaces with calls to native `PHP_MD5Init/Update/Final()` functions.\n",
    "head_branch": "native-base64",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge d849f953a782bb95154fe34feccc560ba7b5eee0 into 4b72745edd7207d110237b77250cf1b1d57ad00d"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662138c118912b45d36a3e4b",
    "number": 745,
    "body": "Fix issues similar to #741\n\n**Please review carefully!**\n",
    "head_branch": "segfaults",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662138c218912b45d36a3e4c",
    "number": 744,
    "body": "Similar to #741\n\nTest case:\n\n``` php\n<?php\n$v = new Phalcon\\Tag;\ntry {\n        $v->setDI(0); // segfault\n}\ncatch (Exception $e) {\n        echo \"Exception caught!\\n\";\n}\n\ntry {\n        $v->setDefaults(0);\n}\ncatch (Exception $e) {\n        echo \"Exception caught!\\n\"; // segfault\n}\n```\n",
    "head_branch": "issue-744",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 1d002dd67eb4a066029c81e599bedbec479bd617 into a36c3f82a08fc9cc0f420dc6f5cfd0f562ef8a01"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662138c318912b45d36a3e4d",
    "number": 743,
    "body": "Similar to #741 — when bind() is passed invalid parameters, segmentation fault happens.\n\nTest case:\n\n``` php\n<?php\n$v = new Phalcon\\Validation;\ntry {\n        $v->bind(0, 0); // segfaults here\n}\ncatch (Exception $e) {\n        echo \"Exception caught!\\n\";\n}\n```\n",
    "head_branch": "issue-743",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 44387a329c85962a8d7e5e0da9095e5e6f1e8d9a into 1e3e20dae2ebb4da10f162f0a716b9b05c5e4ace"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662138c418912b45d36a3e4e",
    "number": 742,
    "body": "See #741\n",
    "head_branch": "issue-741",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662138c518912b45d36a3e4f",
    "number": 740,
    "body": "See #738\n\nPlus implementation of Phalcon\\Validation\\Message\\Group::offsetUnset()\n",
    "head_branch": "issue-738",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge d263255b7171b6c4499082e312e9491763e27a1e into fb9a6d0268d6d3e7b03a0b8df1700cc8f68efbef"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662138c618912b45d36a3e50",
    "number": 739,
    "body": "See #731\n",
    "head_branch": "issue-731",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 50cc77b6218d91ea75043dd06a219db3f6b80bcd into 0eb3752141939bd5c1a1e9cb48ff8246123f3d63"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662138c718912b45d36a3e51",
    "number": 737,
    "body": "Done\n",
    "head_branch": "1.2.0-Oracle",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 72bde09f44c461dc5da6a560b5c637a9af190474 into f9751f08463e2e32bb8e515cc8612c67cfec43f7"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662138c818912b45d36a3e52",
    "number": 736,
    "body": "See #735\n",
    "head_branch": "issue-735",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 8761a0a86c9b45cd031a59548d279d2652660223 into 4e3a7be962630221f157edeef9d36d6d436fe00a"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662138ca18912b45d36a3e53",
    "number": 734,
    "body": "See #732\n",
    "head_branch": "issue-732",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662138cb18912b45d36a3e54",
    "number": 730,
    "body": "See Issue #696\n",
    "head_branch": "config-696-b",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662138cc18912b45d36a3e55",
    "number": 722,
    "body": "APCIterator, being native Zend class, provides faster access to its Iterator interface via zend_object_iterator.\n\nzend_object_iterator methods are faster because they are called as C functions vs call via userspace.\n\nOn the other hand, hardly is `Phalcon\\Cache\\Backend\\Apc::queryKeys()` called so often to see the difference.\n",
    "head_branch": "native-apc-iterator",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge e3288bb3ed0206fdbc98b42c9c7271723e1f4b1c into 9df85f74f8346b090fb7b26c7d9f7814498f5c71"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662138cd18912b45d36a3e56",
    "number": 721,
    "body": "This patch adds `-fvisibility=hidden` if it is supported (and gcc is 4.0 or better).\nQuoting the gcc manual,\n\n> Using this feature can very substantially improve linking and load times of shared object libraries, produce more optimized code, provide near-perfect API export and prevent symbol clashes.  It is strongly recommended that you use this in any shared objects you distribute.\n\nDSO sizes with and without -fvisibility=hidden (Ubuntu 13.04 amd64):\n\n```\nphalcon.so.default: 3,017,680 bytes\nphalcon.so.hidden: 2,984,834 bytes\n```\n\nThere is an option (commented out) to use Link Time Optimization — it is turned off because it _may_ break something and therefore is not a recommended choice for the production system.\n",
    "head_branch": "opt-build",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 9044ab39e05c04912ff41a606b2b76fbebcdb6e1 into c6fe64ad0387cb275af473745a862b94a8910293"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662138ce18912b45d36a3e57",
    "number": 720,
    "body": "igbinary is a drop-in replacement for PHP's serialize()/unserialize() functions.\n\nigbinary is faster than PHP's serializer (provided that `igbinary.compact_strings=Off`) and its output is usually smaller (which could be a good advantage if you have to keep a lot of (large) data).\n\nPlus, http://www.niden.net/2011/11/fast-serialization-of-data-in-php-how.html mentions igbinary and therefore it would be good to support it in Phalcon :)\n",
    "head_branch": "igbinary",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge c7f9fb0bfbf1eb676a3a26f300ba064d57804482 into d350dff647bcfd0dde7fb49748b2f8eb97229fdd"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662138d018912b45d36a3e58",
    "number": 718,
    "body": "- The correct class name is `Phalcon\\Annotations\\Reflection`, not `Phalcon\\Annotations\\Refactor`\n- `assertEquals()` should be used to compare two values, not `assertTrue()`\n",
    "head_branch": "tests-fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge aec36def8d45afc1db112ba4da68b0755a5b79fd into 800825097156a96c5e5bafc5fea0094bef9871f6"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662138d118912b45d36a3e59",
    "number": 717,
    "body": "More fixes\n",
    "head_branch": "docs-fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge ca0a82c249439cd52681c9afcb902315c9998336 into c0625fe222138ba1d3bd7820d964f48f80cfdf76"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662138d218912b45d36a3e5a",
    "number": 716,
    "body": "XCache is a popular and ofetn used alternative to APC and has a very similar API.\n\nThe implementation of the backend is a mix of Phalcon\\Cache\\Backend\\Apc and Phalcon\\Cache\\Backend\\Memcache (as XCache does not have a counterpart of APCIterator).\n",
    "head_branch": "xcache",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 51abfb19ef27d65dcef2ead87576369544e764d2 into 728d1698acb2c34e44e385c3b7041ecc2ea9eb41"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662138d318912b45d36a3e5b",
    "number": 714,
    "body": "- Fixed a typo in Phalcon\\Cache\\Backend\\Apc\n- Fixed Phalcon\\Validator => Phalcon\\Validation\n",
    "head_branch": "docs-fixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge e644203403d88c461ff6a8d26b827053a2e18ccf into adb0b980b90fb27eea593fbacc8c4a82f4559c80"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662138d518912b45d36a3e5c",
    "number": 707,
    "body": "",
    "head_branch": "1.2.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662138d618912b45d36a3e5d",
    "number": 702,
    "body": "Since you can't override the constructor of a Task derived class, I think can be useful let the user to implement an initialize() method, to init all the stuff every action, implemented in the task itself, needs.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge c105ecabbf9dd23e5f4d76f75c53301b86ba3e97 into 57bb7eeede9ab687baf9757d14094e89e43d1565"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662138d718912b45d36a3e5e",
    "number": 694,
    "body": "You can do cross-db transactions now:\n\n``` php\n $manager = new \\Phalcon\\Mvc\\Model\\Transaction\\Manager();\n\n $manager->setDbService(\"vs_hotel\");\n $tran1 = $manager->get();\n\n $manager->setDbService(\"vs_common\");\n $tran2 = $manager->get();\n\n $pointModel = new PointModel();\n $pointModel->setTransaction($tran2);\n $pointModel->name = \"ttt\";\n $pointModel->position = \"[122, 3432]\";\n $pointModel->city_id = 323;\n $pointModel->city_py = \"hello\";\n\n if($pointModel->save() == false) {\n     foreach($pointModel->getMessages() as $message) {\n         echo $message->__toString() . PHP_EOL;\n     }\n     $manager->rollback();\n }\n\n $eqsModel = new EQSModel();\n $eqsModel->setTransaction($tran1);\n $eqsModel->out_id = \"343\";\n $eqsModel->entity_id = 3343;\n $eqsModel->vendors = \"[fdfd]\";\n\n if($eqsModel->save() == false) {\n     foreach($eqsModel->getMessages() as $message) {\n         echo $message->__toString() . PHP_EOL;\n     }\n     echo \"=====---eqs rollback---======\\n\";\n     $manager->rollback();\n }\n$manager->commit();\n```\n",
    "head_branch": "1.2.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 934c09cd87e6fb1f2cb3c8478b165277b8102552 into 5d74e44180f52ab45f8f00faa2e8130147c0db23"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662138d818912b45d36a3e5f",
    "number": 675,
    "body": "Was implemented functionality: SAVEPOINT (Nested Transactions With Savepoints)\n\nIn dialect was added a new methods:\n- createSavepoint\n- releaseSavepoint\n- rollbackSavepoint\n- supportsSavepoints\n- supportsReleaseSavepoints\n\nIn database adapter was added a new methods:\n- createSavepoint\n- releaseSavepoint\n- rollbackSavepoint\n- isNestedTransactionsWithSavepoints\n- setNestedTransactionsWithSavepoints\n\nAlso was changed logic of transactions, so now nested transactions fully supported by database level :)\n\nWas extended Unit-Tests:\n- DbTest\n- DbDialectTest\n",
    "head_branch": "db-savepoint",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge c05fa913eb859f355ac6254ad9cbef6d291a0794 into 398f47996b062cc7c7238470f353deff07185b38"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662138da18912b45d36a3e60",
    "number": 673,
    "body": "Was implemented functionality for working with Views. \nImplemented in dialects: sqlite, mysql, postgresql, oracle.\n\nThere're methods:\n- listViews\n- createView\n- dropView\n- viewExists\n",
    "head_branch": "db-views",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge d9a7382012bc5a748659582da31fef69e3fc0e4b into 398f47996b062cc7c7238470f353deff07185b38"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662138db18912b45d36a3e61",
    "number": 666,
    "body": "Issue #664: If the attributes of the element is not set, Phalcon\\Forms\\Element::getAttributes() returns NULL, must empty array.\n",
    "head_branch": "issue-664",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 0b25388b3d6291006ed58a2f1c772575f547ffb7 into 3b8a23423a40781bd4c3dee4af82255cb6fc06d9"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662138dc18912b45d36a3e62",
    "number": 663,
    "body": "_this pull for discussion #658_\n\nI wrote a simple implementation for [NFR] Events & Weak References which uses WeakRef php-extension. \nSome simple example of how it works/how it use.\n\n``` php\n\nclass MyFirstListener\n{\n    public function afterShow()\n    {\n        echo 'show first listener';\n    }\n}\n\nclass MySecondListener\n{\n    public function afterShow()\n    {\n        echo 'show second listener';\n    }\n}\n\n\n$eventsManager = new \\Phalcon\\Events\\Manager();\n\n$firstListener = new MyFirstListener();\n$secondListener = new MySecondListener();\n\n$eventsManager->attach('my', $firstListener); // without weakref\n$eventsManager->attach('my', new WeakRef($secondListener)); // with weakref\n\n// fire when two listeners still exists.\n$eventsManager->fire('my:afterShow', null);\n/**\n * will be shown:\n * - show first listener\n * - show second listener\n */\nunset($firstListener);\nunset($secondListener);\n\n\n\n// fire when two listeners was unsetted.\n$eventsManager->fire('my:afterShow', null);\n/**\n * will be shown only:\n * - show first listener\n */\n\n```\n",
    "head_branch": "events-weak-ref",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662138dd18912b45d36a3e63",
    "number": 662,
    "body": "See #611\n",
    "head_branch": "cookies-domain",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 4f09d2f6e852f2f9f73337442e212a237381014e into 9911f5a2dea4536898e5804bdf50d01a78374929"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662138de18912b45d36a3e64",
    "number": 660,
    "body": "See #595\n",
    "head_branch": "fix-transaction-failed-extends",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 71d2ddd21a46bb72ee270c09b0cded738805f41d into d434e3b5fe718b9778094c11a01b9850fb68fcbd"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662138df18912b45d36a3e65",
    "number": 656,
    "body": "See https://github.com/phalcon/cphalcon/issues/595\n",
    "head_branch": "issue-595",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662138e018912b45d36a3e66",
    "number": 652,
    "body": "Hola al ejecutar los unittest de php me daba dos errores uno fichero no encontrado y despues de solucionar los un duplicate class\n",
    "head_branch": "phpunit-patch",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662138e118912b45d36a3e67",
    "number": 650,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 12e18d74536e92f86c771c6a8b294c0b8ee4821e into a3110665c87884ab802fe4eb8238ba640ef729d7"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662138e218912b45d36a3e68",
    "number": 645,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 89c5a24a930e545d6d2c9e66256f79c5e1e1a3ff into 14a3d9e6b8012d2634987a9037dec0510eeecc0b"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662138e318912b45d36a3e69",
    "number": 644,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge c490429e52ddb5af8f76eb73eff13745482ba9f4 into 0c0a9274c356874217f82aee75ed477ce8a495a3"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662138e418912b45d36a3e6a",
    "number": 636,
    "body": "since libtoolize on mac is called glibtoolize, it needs to be checked and set correctly for compiling the framework in Mac OS X\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 4007bf5cf3a681510369fc75e5b00bfa1029fa8f into 6e549d288538e989802f54416ae2bb5f0ba2834f"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662138e518912b45d36a3e6b",
    "number": 625,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge c3aaf69f191038879d4e7ecb7e9d2de8a097e62b into 2511ff20b874582a52a9076c2a9d24ec72108d33"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662138e618912b45d36a3e6c",
    "number": 620,
    "body": "Fix Oracle numRows\n",
    "head_branch": "1.2.0-Oracle",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 23a06ecfa911deb8647a1cd4c155fbbb99893804 into 97b4ad4ff8bdb2f109a026ca2f651f7c471dad6f"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662138e818912b45d36a3e6d",
    "number": 619,
    "body": "fir error in:\n      $this->validate(new UniquenessValidator(array(\n          'field' => array('username','phone')\n      )));\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge ebd3d666c82f48acb35384de49fc39b2acde2359 into f9f9ded4f9b3947bedb4658047793e96c5448649"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662138e918912b45d36a3e6e",
    "number": 617,
    "body": "Oracle adapter need this fix, to work in 1.1.0+\n\nApply this for 1.1.0 and 1.2.0\n",
    "head_branch": "1.2.0-Oracle",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 23a06ecfa911deb8647a1cd4c155fbbb99893804 into 273baa716c9c40afe5a794ef98604084a46a2cbd"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662138ea18912b45d36a3e6f",
    "number": 615,
    "body": "",
    "head_branch": "1.1.0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge 00b3853078a289e960757d58baecaabd654db57e into 273baa716c9c40afe5a794ef98604084a46a2cbd"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662138eb18912b45d36a3e70",
    "number": 613,
    "body": "corrects differences:\n\n``` php\nPhalcon\\Http\\RequestInterface::\n    hasFiles();\nPhalcon\\Http\\Request::\n    hasFiles($notErrored = null);\n\nPhalcon\\Http\\RequestInterface::\n    getUploadedFiles();\nPhalcon\\Http\\Request::\n    getUploadedFiles($notErrored = null);\n```\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 9db70990ec46b51e1ab713dbfde266279b2e09b1 into 618ae13cb9b1f3f6bdfb7914f5739f80090573ba"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662138ed18912b45d36a3e71",
    "number": 607,
    "body": "",
    "head_branch": "1.1.0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge 2eeee8baf1f958bcf7a2763fea34283d7bbeda86 into 49b0789e69d7bf10bbf17e5ba06c3fe1ab10e871"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662138ee18912b45d36a3e72",
    "number": 594,
    "body": "",
    "head_branch": "patch-6",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge a2c0f6cc8b2e91e51e8e4e445c4db6b8618fafc3 into cfbaa1d005864620780b4677fea5e5165018da77"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662138ef18912b45d36a3e73",
    "number": 593,
    "body": "",
    "head_branch": "patch-5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 5ecee2a060f80e6d46dc647cc2ca69e15ca6ddcc into fa434e72c37af0e34a1264227462bb4ccdcb1894"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662138f018912b45d36a3e74",
    "number": 592,
    "body": "",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 1ea7132ad26efc0769706f7af34a2e15233a03e6 into 25a9cc4b8b17a87533a015612b96377d7315d0e5"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662138f218912b45d36a3e75",
    "number": 591,
    "body": "",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662138f318912b45d36a3e76",
    "number": 590,
    "body": "",
    "head_branch": "1.1.0-Oracle",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 97e46a8a790586a480dd23393e29aebb8e66486b into e11f23b239cf75b94e3ba632b05d5cf8ee9dc829"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662138f418912b45d36a3e77",
    "number": 588,
    "body": "",
    "head_branch": "fix-doc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge df677cf8ee6cd5576d2cea5d097b67d7ec14be5d into 87ccb880fce5fd96c6e4470b52e7c0bab98648e0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662138f518912b45d36a3e78",
    "number": 587,
    "body": "",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 811486aa458419c2731537d7c1847e3db7effc60 into 8bb353d05df11c4eb2d8a7cde01bae47c0dd9d73"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662138f718912b45d36a3e79",
    "number": 585,
    "body": "Oracle refactor to 1.1.0\n",
    "head_branch": "1.1.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 0d03b69e7be8fd9406158a0409e5fe9bc43ac1c4 into 0ba74dcda076097cae53c95d9d56a92862570f21"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662138f818912b45d36a3e7a",
    "number": 581,
    "body": "",
    "head_branch": "1.1.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 557ebdbc7740668a13c229603ff09a9713e9beae into 64768e6b37dc831c12095f1b5828512255e7c148"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662138fa18912b45d36a3e7b",
    "number": 575,
    "body": "spelling mistakes\n",
    "head_branch": "1.1.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge e1fc0a05d8775035a01f5106d68d6472a630ffcd into 4107d98eaa82a7a5056c164a4156c3e3546b023b"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662138fc18912b45d36a3e7c",
    "number": 574,
    "body": "",
    "head_branch": "1.1.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 61ed93304f7b35251c7bba2876baba118c119ffe into cd16dffbb454247ddb0fa4acf32bbbcf2f51de71"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662138fd18912b45d36a3e7d",
    "number": 572,
    "body": "",
    "head_branch": "1.1.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 5022f68b8f3b91d519e113700403cef7e0a9fbf4 into 3cbb3d1905667da0a40b0091286c59f33cd0027d"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "662138fe18912b45d36a3e7e",
    "number": 567,
    "body": "Minor fix to describeColumns in Oracle dialect\n",
    "head_branch": "1.1.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 78e4b05dc07394c779daab58d73a2591700e8615 into f3181f65b1d264e1568c358a01cee5268e4000e6"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662138ff18912b45d36a3e7f",
    "number": 563,
    "body": "modified:   php-tests/tests/Phalcon/Tag/UnitTest.php\n",
    "head_branch": "1.1.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 33b52c5f7c5dee5c6b23afcc1b9d719deb047508 into 662d5f3950fc0ec4749cfd1817ebf9ef2b59c239"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621390118912b45d36a3e80",
    "number": 556,
    "body": "New pull request to branch 1.1.0.\n",
    "head_branch": "oracle",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621390318912b45d36a3e81",
    "number": 554,
    "body": "Added phalcon_eol in kernel/string\nAdded Tag::tagHtml\n",
    "head_branch": "1.1.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 8a5731aed9006d882b9f259c8688c9a259337ae9 into 57166366fe1764e6ba1ec88925841a35f77c7288"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621390418912b45d36a3e82",
    "number": 540,
    "body": "",
    "head_branch": "patch-6",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge b83f738d207b10e5cad76bfabef5e212c255d906 into a39aaa3cb7b60727d8db371e2647cf6a6bde0756"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621390518912b45d36a3e83",
    "number": 539,
    "body": "",
    "head_branch": "patch-5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621390618912b45d36a3e84",
    "number": 538,
    "body": "",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 11ed1abe8c3c4c2e7e073189d28d8c542e814043 into 61b01a46daf9f21e9f0b55d4ada5787be9790474"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621390718912b45d36a3e85",
    "number": 529,
    "body": "",
    "head_branch": "1.0.1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge 23cd2baf75b6280d83912eaa3ba74af2b6a47bce into a42855af11a11ba84edf08dad44b2f9c1eecd8c6"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621390818912b45d36a3e86",
    "number": 523,
    "body": "",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 0426f83da84534b0adeae2b53a151f1980f04aea into 1e78e552704c2cfbbf675c018a6aa9f83d3b6938"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621390b18912b45d36a3e87",
    "number": 520,
    "body": "Now I need help to test it.\n",
    "head_branch": "oracle",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621390c18912b45d36a3e88",
    "number": 505,
    "body": "fix model offset #504\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 97f65a14936f929d0cb1db6926002de58bc0df75 into 23ff00b3ce45accef174042700afb061327e3723"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621390d18912b45d36a3e89",
    "number": 500,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge d4a546cb9ad45f452dcd809591d5774c1c5217ff into 63e562b21736fbc661c9bc8d4c9bbf7813d2fbb5"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621390f18912b45d36a3e8a",
    "number": 498,
    "body": "",
    "head_branch": "1.0.0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge 0d052fc760f0f7e87cee87a02c7933cd2d67c7d5 into de8d1e401b0066b03ee3a361193c0dd85448217d"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621391018912b45d36a3e8b",
    "number": 489,
    "body": "",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 3745fb14c9ff6fa87c7ac694948247f5cbe19e83 into bc1461558bfb738a2a5754960464ce5a181e1633"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621391318912b45d36a3e8c",
    "number": 488,
    "body": "",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621391418912b45d36a3e8d",
    "number": 487,
    "body": "",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621391518912b45d36a3e8e",
    "number": 486,
    "body": "pull request for issue #471\n",
    "head_branch": "volt-cache-lifetime",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 4f479615506db914d9def0ecacc5268d1ef97296 into c29e62c4cbdba33a66511f108317837205bbf60c"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621391718912b45d36a3e8f",
    "number": 479,
    "body": "",
    "head_branch": "1.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge fe4e3378a342bacc29ce760d1cc5c1c1dc6fb4db into 49f81c48e9ad1a898d96a30b0d8e7da87c0ee592"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621391818912b45d36a3e90",
    "number": 468,
    "body": "https://github.com/phalcon/cphalcon/issues/465\n\nCheck it, please, and give me advises if i'am wrong.\n",
    "head_branch": "1.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge ec064683cbf2c603058c6cb735a3840aa128466a into da00140ae7dd7cd1262fd314444c2f560412f153"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621391918912b45d36a3e91",
    "number": 455,
    "body": "Added ucwords/capitalize filter in Volt compiler\nMigrated the Security test in the new suite\n",
    "head_branch": "1.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 879fdde1e48f97c3f1260ec295e6e1bccbf0d634 into 43c0b77828cc3eac512bfa63a515f734a2a9f445"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621391a18912b45d36a3e92",
    "number": 428,
    "body": "",
    "head_branch": "1.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge a8cfcf889c3576b926bbf167d21945455635c8d4 into 2d6b298a66d32091b0a256561e67dbdef7cc4316"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621391b18912b45d36a3e93",
    "number": 426,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621391d18912b45d36a3e94",
    "number": 416,
    "body": "",
    "head_branch": "0.9.1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge 3b76de706986c59c05371a07aec4b1996a907382 into 7b3b060c202e486d0b6c715693d6ed4258b08bb7"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621391e18912b45d36a3e95",
    "number": 415,
    "body": "",
    "head_branch": "0.9.1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge 3b76de706986c59c05371a07aec4b1996a907382 into c1c730244256eadabcb62cdd5c0f8283eda3e5f3"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621391f18912b45d36a3e96",
    "number": 405,
    "body": "subj. (fixes to branch 0.9.1)\n",
    "head_branch": "0.9.1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge ea17a50f59d77144d55551586f839736b294a47f into 93e3ce81e99b821b9f3d9335486e201bc9de97f8"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621392018912b45d36a3e97",
    "number": 402,
    "body": "subj\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621392218912b45d36a3e98",
    "number": 392,
    "body": "",
    "head_branch": "0.9.0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge 7a5076f7d26cc72758a6f5edb1b743b08b43e7e7 into 7b3b060c202e486d0b6c715693d6ed4258b08bb7"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621392318912b45d36a3e99",
    "number": 389,
    "body": "Adding more test scenarios for testClientAddress\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621392418912b45d36a3e9a",
    "number": 388,
    "body": "",
    "head_branch": "0.9.0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge f65b3d3b8787fc9b0c88322af953078daeddb78a into b874305c524cd3267ae589d44f1a35b1f5dbcd58"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621392518912b45d36a3e9b",
    "number": 386,
    "body": "",
    "head_branch": "0.9.0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621392618912b45d36a3e9c",
    "number": 313,
    "body": "",
    "head_branch": "0.8.0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge 090524dc80ce46e91d7dddea8933cdce21871e95 into 9c1da7288dc7c6849705abb2e2e1b0223acf3e6f"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621392718912b45d36a3e9d",
    "number": 312,
    "body": "",
    "head_branch": "0.8.0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge ead8c9df3678605ec1258766569b4e38d3f1cb75 into a6d50a617786c89cd8bf32dfa527d8d20d178818"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621392918912b45d36a3e9e",
    "number": 311,
    "body": "",
    "head_branch": "0.8.0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge 10cbc511c5e6109da17c4a3cb2514729e9d3ee22 into e9e71ed5e7f8a701e7bf943f5a0fb7afe9d1bf73"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621392a18912b45d36a3e9f",
    "number": 280,
    "body": "",
    "head_branch": "0.8.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge a2bb9832ee5a4febbefc70420b95f4179a9b58f8 into 8556d8b83501c6aa8f86f3b20bc8733bf64e7ba0"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621392b18912b45d36a3ea0",
    "number": 233,
    "body": "",
    "head_branch": "0.7.0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621392c18912b45d36a3ea1",
    "number": 232,
    "body": "modified:   php-tests/tests/Phalcon/Acl/Adapter/Memory/UnitTest.php\n",
    "head_branch": "0.7.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 39854472b78422c32705e22918481beacf04b373 into b8d1b15c8b783656cffff13522bf0eb4280efbf8"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621392d18912b45d36a3ea2",
    "number": 230,
    "body": "",
    "head_branch": "0.7.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 8f7e7fb4fe86d13c1e233facf192836440ea226e into 54860127c0fc0ae9fc093c25ded4c9743a132976"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621392f18912b45d36a3ea3",
    "number": 228,
    "body": "This is going to be used as the new suite. Tests will slowly be migrated to the new suite under php-tests.\n\nThere is quite a bit of work that needs to be completed especially when setting up the fixtures for each table but for the most part it is working just fine now. I have quite a lot of tests that I will port within the next week or so in the new suite so that the migration moves smoothly. The key is that we are running the same (and more) tests.\n\nComponents changed thus far Tag, Version, Url.\n",
    "head_branch": "0.7.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 86698f9510113dad4128e3495f039cd5c4e0e723 into 43fd8ccf097b1e9aef52b8198474787e38bc7617"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621393018912b45d36a3ea4",
    "number": 219,
    "body": "yast2 -i php5-devel to suse\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621393118912b45d36a3ea5",
    "number": 190,
    "body": "",
    "head_branch": "tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 8fb6b2a26533200c1f8a3f1670bb536b08884e01 into b429f06c5d5a7b712e62df63f7b0c2bf0cfcd256"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621393218912b45d36a3ea6",
    "number": 178,
    "body": "",
    "head_branch": "0.6.1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge a5538452edb9cc95477ff7779a7bf7080314cc14 into 0e9feb75ab74ce92d473d2dd0cf26aeb471d67e1"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621393318912b45d36a3ea7",
    "number": 176,
    "body": "",
    "head_branch": "0.6.1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge 496901c797b841f21d70104f96aac2c52279f73a into 0e9feb75ab74ce92d473d2dd0cf26aeb471d67e1"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621393418912b45d36a3ea8",
    "number": 174,
    "body": "",
    "head_branch": "tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge e2b2f4a6a7d3d1572381ac4e3fcc651e4ac65afa into 2b444481fb347f68e092b21ec1a2ebfb0b829493"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621393518912b45d36a3ea9",
    "number": 171,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621393718912b45d36a3eaa",
    "number": 170,
    "body": "",
    "head_branch": "tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 769816a562f8a3664af165e9af13831ea93a746a into 2d230ff356e72a9f4d99dc807ad3cd445c7c421f"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621393818912b45d36a3eab",
    "number": 162,
    "body": "modified:   .travis.yml\n",
    "head_branch": "tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 3ed98ade8c2b99f92e5cfab4e91fde7c01eed9a2 into d3d1f0a53bdb4c03f2919d52579eddd385f54b13"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621393918912b45d36a3eac",
    "number": 161,
    "body": "",
    "head_branch": "tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 0fea26801bbee8b48934133dc169ad3b12fd89d6 into d6cc7b2f032e42bf045211bc461b11231ef0a103"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621393a18912b45d36a3ead",
    "number": 157,
    "body": "",
    "head_branch": "master",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621393b18912b45d36a3eae",
    "number": 156,
    "body": "",
    "head_branch": "0.6.0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621393c18912b45d36a3eaf",
    "number": 152,
    "body": "I added a router path 'namespace' to specify the namepsace for the controller in the router.\n\nhttps://groups.google.com/forum/?fromgroups=#!topic/phalcon/K36wHrFXREY\n",
    "head_branch": "0.6.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 394d3f3f2ede35bfde525ceed1169db3a264851c into c49098f6fd0f51309598ce7f242ada9527dc262d"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621393e18912b45d36a3eb0",
    "number": 150,
    "body": "modified:   build/phalcon.c\n    modified:   ext/mvc/view/engine/volt/compiler.c\n",
    "head_branch": "0.6.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge dbf647fb684dc579b6f8f6d52423263aa277108b into 434336cad1694ec3017d075f224846774363c172"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621393f18912b45d36a3eb1",
    "number": 148,
    "body": "modified:   .travis.yml\n",
    "head_branch": "tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge e1afc733868c489da3581947ada9dd4745df0bd0 into 9158956c88e1f4911bfb260843db9193e114b30a"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621394018912b45d36a3eb2",
    "number": 147,
    "body": "Reworking tests\n",
    "head_branch": "tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 1526792124bfbbe09cb6426901417af9eb4dc1b5 into 434336cad1694ec3017d075f224846774363c172"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621394118912b45d36a3eb3",
    "number": 131,
    "body": "Related issue #81\n\nI've done functional tests for _File_ and _APC_ backends on OSX.\n",
    "head_branch": "0.6.0-phalcon-cache-exists",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge fdfc772fe622f62cb7c9b96214d94695f0944726 into 86e2f55f901e04fa9e1bc474e08ceabb70802d1d"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621394218912b45d36a3eb4",
    "number": 126,
    "body": "For issue #116\n\nI try to implement this feature with using current coding style and methods. I have no idea if my approach (including methods naming and constants) fits Phalcon. I'll update the documentation repository if everything is ok.\n\nPlease review.\n",
    "head_branch": "0.6.0-phalcon-tag-doctype",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge e34ff66de66cc3b60094d6bff4a7a811981cc1cc into 71f33b53bb0f4f3228655ecf5298f323cb8ccc14"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621394318912b45d36a3eb5",
    "number": 125,
    "body": "",
    "head_branch": "master",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge 5ee86156b97e8448601e4259bd12f33eacff9f5a into 2f2446bf2d686be3f3f7ee0ad451ce677b8b6009"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621394418912b45d36a3eb6",
    "number": 122,
    "body": "",
    "head_branch": "0.5.2",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge 2f2446bf2d686be3f3f7ee0ad451ce677b8b6009 into e7b36c31f057ab71ca6a12ba32d5436e516b9a9f"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621394618912b45d36a3eb7",
    "number": 120,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge fd1231a82f0d1145da9c7f6cf8acec0c4490a235 into 7d269d3b70b5d9c021b44e9c31aefa3afdc180d5"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621394718912b45d36a3eb8",
    "number": 99,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 4c90d7218bdb66ccbc5cf455494d9b26f360830f into 4dd28f4ecd642f8f524ba47479d7c3618e248795"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621394818912b45d36a3eb9",
    "number": 89,
    "body": "",
    "head_branch": "0.5.0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge 0f9646d378b929fe7de40d06208a294d7645d190 into 31d2a135fea7fd90712095bbcceda66373bda11f"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621394918912b45d36a3eba",
    "number": 88,
    "body": "",
    "head_branch": "0.5.0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge 7ad3cdd539ebfc58242a3d96b0ad812c51cfa2bb into ddcf32dd5cae13f7a8998ef1bd3968efcea922ff"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621394a18912b45d36a3ebb",
    "number": 87,
    "body": "This still appears to be working after my merge to 0.5.1 with it's different file layout.\n",
    "head_branch": "0.5.1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge e9ecd0df368a3a1e209dd84d54aaff2df6b16f2c into 2c5a48f9e35865613df07be78a523e1acd640d9f"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621394c18912b45d36a3ebc",
    "number": 86,
    "body": "Hi, \n\nI have patched EventManager and Event class that EventManager::fire can send data to EventLisener.\n\nIt's useful that we can send (temperate) data to event listener instead of setting in object's properties. \n\nAnd I also patched CLI\\Console , Mvc\\Application 's 'beforeStartModule' and 'afterStartModule' send module_name to event listener, so listener can determine which module will starting or started.\n\nSimilar:\nhttp://api.jquery.com/event.data/\n\nSigned-off-by: Rack Lin racklin@gmail.com\n",
    "head_branch": "dev/event_data",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 5adc641795cc08fb5b29f7206c1727d7f41c2a19 into 38e1cbb40cbda526b59e278089e82f8beb0a564f"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621394d18912b45d36a3ebd",
    "number": 85,
    "body": "Many users complain about :\n\n```\ndyld: lazy symbol binding failed: Symbol not found: _phalcon_call_method_params_normal\n  Referenced from: /usr/local/Cellar/php/5.3.10/lib/php/extensions/no-debug-non-zts-20090626/phalcon.so\n  Expected in: flat namespace\n\ndyld: Symbol not found: _phalcon_call_method_params_normal\n  Referenced from: /usr/local/Cellar/php/5.3.10/lib/php/extensions/no-debug-non-zts-20090626/phalcon.so\n  Expected in: flat namespace\n```\n\nThat's because cphalcon is compiled with llvm-gcc, installed with xcode 4.2 + command line tools.\n\nUsing static inline will compatible with gcc and clang-llvm .\n\nhttp://clang.llvm.org/compatibility.html#inline\n\nfixes #25 #29\n\nSigned-off-by: Rack Lin racklin@gmail.com\n",
    "head_branch": "bugfix/compatible_llvm_gcc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 0050bcca147ae79589adb74c3687d2daa264cb50 into d83980854232f15362143418159f88f4d33821d5"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621394e18912b45d36a3ebe",
    "number": 64,
    "body": "If access rights are inherited and the access to the resource from inherited resource will be negated, isAllowed should return 0.\n",
    "head_branch": "0.5.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge bfe4da1faaec5a9994b3760f50a23dede152be9b into e5343236911c29e4a47e1f2df32548d72e891987"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621394f18912b45d36a3ebf",
    "number": 62,
    "body": "Fixed Postgresql connection type-checking bug.\n\nAnd added testPostgresqlSchemas to unit-tests.\n\nSigned-off-by: Rack Lin racklin@gmail.com\n",
    "head_branch": "0.5.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 30a334616df771a72f3d59629b1f10df452ebc11 into bbd6d8bb593f1936225e421cf949514d0554f7ab"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621395018912b45d36a3ec0",
    "number": 60,
    "body": "Console->registerModules are rewrite:\nUsing array_merge instead of update the modules settings, this is useful that devtools register internal modules will not override by userspace app.\n\nFixed event name typo.\n\nAdded registerModules tests.\n\nSigned-off-by: Rack Lin racklin@gmail.com\n",
    "head_branch": "dev/cli",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge f45dac06a851cad46101a74a5e07bb02c0d7fbaf into 7093b8d1b406cf96beb8afd2855a5d398744319a"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621395118912b45d36a3ec1",
    "number": 59,
    "body": "I have add Phalcon\\CLI\\Console \\Phalcon\\CLI\\Task for helping develop command-line applications with Phalcon Framework.\n\nIt clone from Phalcon\\Mvc\\Application so , it supports:\n1. single / multiple modules apps.\n2. namespace tasks\n3. dependency injection / event manager support.\n\nmore usage example:   https://gist.github.com/3658914\n\nSigned-off-by: Rack Lin racklin@gmail.com\n",
    "head_branch": "dev/cli",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge c02b7ca2a14e4be1dcb18588002fbd0864459c15 into 28b3bfef3da938a626ef8b982b4ccb17a2d1a0a0"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621395218912b45d36a3ec2",
    "number": 58,
    "body": "Hi.\n\nI have added Sqlite support for phalcon (adapter and dialect) and unit tests for sqlite testing.\n\nSigned-off-by: Rack Lin racklin@gmail.com\n",
    "head_branch": "dev/sqlite",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge bfbda696ffcf48a44c9bdb3b63a4fd63b2223554 into efa5d67911f14face14e0c0918f57bbad76c5480"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621395318912b45d36a3ec3",
    "number": 52,
    "body": "Hi,\n\nI have added the unit test for logger time format. It passes, so I assume the issue with logger was correctly resolved.\n\nBest\nWojtek\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 904b570b8cd91f0ca1ba73794bd30678cb282342 into a03deab602659bf95b0ff0dd1adda323ece895f0"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621395418912b45d36a3ec4",
    "number": 51,
    "body": "PostgreSQL describeColumns on table which has multiple columns as primary key will throw exception bug. \nAdded listTables / describeColumns / describeIndexes support schema .\n\nFixes #50 \n\nSigned-off-by: Rack Lin racklin@gmail.com\n",
    "head_branch": "bugfix/postgresql_describe",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 5b3e354e3e629ed5802db5c097ac203924f91dcb into 72fb3d6b3e1693aa8a547b09c6553030937b3715"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621395618912b45d36a3ec5",
    "number": 49,
    "body": "Replace magic number to constant PDO_ATTR_*\n\nSigned-off-by: Rack Lin racklin@gmail.com\n",
    "head_branch": "dev/replace_magicnumber_pdo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge a1bd5f26f38fda69c20dc7d334a1edd8d0fc0351 into 0d5ff4ef58eb51eefdef22429a7e57bdb4f745b5"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621395718912b45d36a3ec6",
    "number": 48,
    "body": "PostgreSQL adapter will execute \"SET search_path TO '???'\" statement when connectted if schema is setting in config.\n\nEx:\n\n``` php\n\n$configPostgresql = array(\n  'host' => '127.0.0.1',\n  'username' => 'postgres',\n  'password' => '',\n  'dbname' => 'phalcon_test',\n  'schema' => 'public'\n);\n\n$connection = new Phalcon\\Db\\Adapter\\Pdo\\Postgresql($configPostgresql);\n\n```\n\nSigned-off-by: Rack Lin racklin@gmail.com\n",
    "head_branch": "dev/pgsql_schema",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge d730c089b7ea730bdd43697482624091ddaf4a5f into bade2e9f0b615e2af231482fcdec5ea886e29ab3"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621395818912b45d36a3ec7",
    "number": 36,
    "body": "Hi, I can't test it because I can't complie phalcon.\n\nSorry\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 0ad82fc43f798a8f371c7ab8c94f75353fd136a1 into 69ed2f6cb1c21d4d6a82a89df68ab706a775d0b1"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621395918912b45d36a3ec8",
    "number": 35,
    "body": "",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 827dd6a451aa886ac9bfd0378738fa7ed58f3b13 into f9bceef1caab963ec9d740b53a8b3a1458d0a256"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621395a18912b45d36a3ec9",
    "number": 34,
    "body": "Fixe a broken link to download page.\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 6eab81b214314729f5873eb7082ba048fd4da6be into 6a1ad6ce7b7c5cb3f4a35e99781523364d5a8570"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621395b18912b45d36a3eca",
    "number": 32,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621395c18912b45d36a3ecb",
    "number": 28,
    "body": "This fixes the failing tests.  See here: http://travis-ci.org/#!/jerejones/cphalcon/builds/1818322\nThis also adds a script for generating the files in /release.\nIt also modifies the VS2008 project file to build using the /release directory in Release targets and to build using the /dev directory in Debug targets.\n",
    "head_branch": "upstream",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 938ede80679aa6dc85ae9381922e56ee176be1b9 into 038b5c28b846d17b8bf1989dfed75036123a2f40"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621395d18912b45d36a3ecc",
    "number": 27,
    "body": "This changes a lot of the render methods to return strings instead of directly calling setContent.  It does result in some repetitive code which could probably be refactored to be cleaner.  I'm happy to do that if you would like.\n\nThe benefit of that is that partial views can render without calling setContent.  They do have to be echo'd now which is a change to their usage, but I just couldn't think of a solution that kept their current usage without rewriting the entire thing.  I took the easy way out. :)\n\nI also added a test case for multiple partial views and modified the rest of the views tests so that they pass on Windows.  Using PHP_EOL instead of a hard coded \"\\n\" should let them pass on Linux and Windows.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 4674dafa8b8b7a07f71787a7823cb85cf3c83760 into d860f23b226214e5e7505307b033eda79b13ceac"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621395e18912b45d36a3ecd",
    "number": 26,
    "body": "Updates Phalcon_Session so that it starts a session only once and only when necessary.  Get/Set/Has/Destroy functions work correctly and efficiently even if start() hasn't been called.\n\nThis pull request also updates the VS2008 project file to handle recent file deletions and additions.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 669e9d0480e2911095e56bac11883c3c0df63101 into 08081c3cce26d779b5634d8bb3e01e8af2ab51ad"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621395f18912b45d36a3ece",
    "number": 23,
    "body": "",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 49eaa0072e85675acd5b56212fffe8ef85d1e664 into ae4b7ae189d052a9c80b8e62487d00d16ea49dd6"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621396018912b45d36a3ecf",
    "number": 21,
    "body": "The instructions for building are in README.md in the /win32 directory.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 598e81adf053b095a87de0bc91a154acdc04d20c into 26b02788af440bb113ae14da769e9dd8198c3eca"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621396118912b45d36a3ed0",
    "number": 7,
    "body": "Implementing expected behavior.\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge 6571123610ddb854a8cc5c06feb2e5b2d2b8e939 into bb248579589e6ea5981b23b84d1df6229edbc479"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": true
  }
]