[
  {
    "_id": "662113f0ac254a19ac2909af",
    "number": 2438,
    "body": "# Description\r\n\r\n[libmc](https://github.com/douban/libmc) is a memcached client similar to https://github.com/pinterest/pymemcache/tree/master \r\n\r\nThis pr support libmc instrumentation\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\nNot yet, just tested with tutorial flask app.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "add-libmc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662113f1ac254a19ac2909b0",
    "number": 2436,
    "body": "\r\n\r\n# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes #2428\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "codeboten/baggage-processor",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662113f2ac254a19ac2909b1",
    "number": 2434,
    "body": "Depends on proposed changes to opentelementry python:\r\n  https://github.com/open-telemetry/opentelemetry-python/pull/3852\r\n\r\n# Description\r\n\r\nThis is an early PR that proposes to add jaeger remote sampling support to the contrib repo.\r\nGiven that this is a port, there are multiple issues to discuss, from code style to overall approach to \r\nproperly integrating these samplers into the opentelemetry-python trace client lib.\r\n\r\nOnce all TODO's are resolved, in this PR and the PR it depends on, docs need to be added/updated.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Ported unit tests from `jaeger-client-python`\r\n- [x] For lack of end-to-end tests, I put together a sample flask app and, running alongside a jaeger agent, manually verified that remote configuration changes indeed sync over to the client and change the client's sampling decision behavior.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] Yes. - Link to PR: https://github.com/open-telemetry/opentelemetry-python/pull/3852\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project (I believe so)\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "steve/jaeger-remote-sampler",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662113f3ac254a19ac2909b2",
    "number": 2433,
    "body": "As a continuation of https://github.com/open-telemetry/opentelemetry-python-contrib/issues/2351 , it's a good idea to have a consolidated place where the semantic convention status of each instrumentation exists.",
    "head_branch": "instr",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add section for semantic convention status for instrumentations (#2433)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662113f4ac254a19ac2909b3",
    "number": 2431,
    "body": "# Description\r\n\r\nAdd testing against elasticsearch client 7.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] tox\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "tests-against-elasticsearch-7",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662113f5ac254a19ac2909b4",
    "number": 2430,
    "body": "# Description\n\nFix typo in CHANGELOG.md\n\nFixes # (issue)\n\n## Type of change\n\n- [x] Typo\n\n- [x] Changelogs have been updated\n\n",
    "head_branch": "fix-changelog-typo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662113f6ac254a19ac2909b5",
    "number": 2429,
    "body": "\r\n# Description\r\n\r\nSee open-telemetry/community#2056 for background\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nnot applicable\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [N/A] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated -- please let me know if a changelog update is required and I will provide it in the PR\r\n- [N/A] Unit tests have been added\r\n- [N/A] Documentation has been updated\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662113f7ac254a19ac2909b6",
    "number": 2427,
    "body": "# Description\r\n\r\nTo avoid \"security\" reports.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated",
    "head_branch": "bump-django-versions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "django: Bump django version to latest (#2427)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662113f8ac254a19ac2909b7",
    "number": 2425,
    "body": "Http migration plan for wsgi.\r\n\r\nFor changes NOT related to span attributes, we simply snap to the new semantic conventions like for [span name](https://github.com/open-telemetry/semantic-conventions/blob/main/docs/http/http-spans.md#name).\r\n\r\nCredits to @lmolkova for the original [pr](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/2024/files).",
    "head_branch": "wsgi",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662113f9ac254a19ac2909b8",
    "number": 2424,
    "body": "Fixes #2423",
    "head_branch": "issue_2423",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662113faac254a19ac2909b9",
    "number": 2422,
    "body": "# Description\r\n\r\nPick 6.0 as the baseline. Elasticsearch 2 client was EOL in 2018, Elasticsearch 5 in 2019.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] tox\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "drop-ancient-elasticsearch-versions-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662113fbac254a19ac2909ba",
    "number": 2421,
    "body": "Fixes #2419 ",
    "head_branch": "issue_2419",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662113fcac254a19ac2909bb",
    "number": 2420,
    "body": "# Description\r\n\r\nTest against recent elasticsearch versions\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "tests-against-elasticsearch-7-8",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662113fdac254a19ac2909bc",
    "number": 2418,
    "body": "# Description\r\n\r\nFor Lambda invocations with an event that contains a `requestContext` property, the current code throws an `UnboundLocalError` if an exception (of other type) is thrown in the function execution, due to the `result` variable being accessed before being initialized. This PR simply makes sure that is initialized before being used.\r\n\r\n\r\nFixes #2399 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] ran `tox -e py38-test-instrumentation-aws-lambda`\r\n- [x] ran `tox -e py39-test-instrumentation-aws-lambda`\r\n- [x] ran `tox -e py310-test-instrumentation-aws-lambda`\r\n- [x] ran `tox -e py311-test-instrumentation-aws-lambda`\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix-issue-2399",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662113feac254a19ac2909bd",
    "number": 2416,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes #2415 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix-celery-tests-tasks",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix: instrumentation-celery test tasks CustomError (#2416)\n\n* fix: instrumentation-celery test tasks CustomError\r\n\r\n* chore: lint\r\n\r\n---------\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662113ffac254a19ac2909be",
    "number": 2414,
    "body": "# Description\r\n\r\nNo need to test on versions we don't support anymore. \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] tox\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "drop-unsupported-python-versions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "tox: stop testing on python < 3.8 (#2414)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211400ac254a19ac2909bf",
    "number": 2413,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "lzchen-patch-10",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211401ac254a19ac2909c0",
    "number": 2411,
    "body": "Http migration plan for flask and wsgi\r\n\r\nCredits to @lmolkova for the original [pr](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/2024/files).",
    "head_branch": "flask",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211402ac254a19ac2909c1",
    "number": 2409,
    "body": "# Description\r\n\r\nNot every user of pydantic is using tortoise orm so checking for tortoise orm should be enough.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated",
    "head_branch": "no-need-tortoiseorm-instrumentation-for-pydantic",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211403ac254a19ac2909c2",
    "number": 2408,
    "body": "# Description\r\n\r\nWhen I added the `opentelemetry-instrumentation-django` package and started the server with `python manage.py runserver` calling `DjangoInstrumentor().instrument()` in manage.py, inbound HTTP request spans were correctly created.\r\n\r\nHowever, when using **Django with Gunicorn**, there was a problem: inbound HTTP request spans were not created.\r\nTo solve this problem, I spent a lot of time reading the `opentelemetry-instrumentation-django` code and found that adding `opentelemetry-instrumentation-asgi` would solve this problem. I have arrived at the solution.\r\n\r\nThe current implementation [silently turns off instrumentation in certain situations](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/v0.45b0/instrumentation/opentelemetry-instrumentation-django/src/opentelemetry/instrumentation/django/middleware/otel_middleware.py#L199-L200), such as using Gunicorn. \r\n\r\nInstrumentation library users will expect the instrumentation to work correctly if the call to `DjangoInstrumentor().instrument()` succeeds and there are no warnings in the logs. Also, the documentation does not mention the need to add `opentelemetry-instrumentation-asgi`.\r\n\r\n- https://opentelemetry-python.readthedocs.io/en/latest/examples/django/README.html\r\n- https://opentelemetry-python.readthedocs.io/en/latest/examples/fork-process-model/README.html\r\n\r\nThis wastes a lot of time for many developers. Therefore, I have added a log that shows how to deal with this problem instead of silently disabling instrumentation when it occurs.\r\n\r\n\r\nRelated: #2043 #2296\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- No test, because only adding log.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "django_asgi_log",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211404ac254a19ac2909c3",
    "number": 2407,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nThis is purely a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nWe ran into a need to filter health checks out of our ASGI application's telemetry. I found that the filtering was already supported but not present in the docs. \r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\nNo\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [NA] Followed the style guidelines of this project\r\n- [NA] Changelogs have been updated\r\n- [NA] Unit tests have been added\r\n- [X] Documentation has been updated\r\n",
    "head_branch": "add-excluded-urls-docs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211405ac254a19ac2909c4",
    "number": 2404,
    "body": "# Description\r\n\r\nThe SqlAlchemy commenter is currently using the library version in the comment it emits, e.g.:\r\n\r\n```\r\n{\r\n  'db_driver': 'psycopg2', \r\n  'db_framework': 'sqlalchemy:0.45b0'\r\n}\r\n```\r\n\r\nWe should instead be using the sqlalchemy version here, as [SqlCommenter did before](https://github.com/google/sqlcommenter/blob/c447d218a1b8ff628571b22cf4e74f2a6fe2e38a/python/sqlcommenter-python/google/cloud/sqlcommenter/sqlalchemy/executor.py#L57)\r\n\r\n## Type of change\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nCurrently no tests, not sure how to test this in your testing setup. Please let me know how you want me to test!\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [N/A] Documentation has been updated\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211406ac254a19ac2909c5",
    "number": 2397,
    "body": "# Description\r\nAn attempt at adding support for pika's `channel.consume` function (today we only support `basic_get` and `basic_consume`.\r\nFixes #1432 \r\n\r\nCurrently works only as a global instrumentation (using `PikaInstrumentor.instrument()`) and not for a per-channel instrumentation (using `PikaInstrumentor.instrument_channel(c)`). This is due to an implementation difficulty.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Added unit tests \r\n- [X] compared code since pika 0.12 to make sure it works the same way \r\n- [X] Tested against the following real-world scenario code (replicates my use case):\r\n```\r\nimport pika\r\nimport requests\r\nfrom pika.adapters.blocking_connection import BlockingChannel\r\n\r\n\r\ndef do_consume(channel: BlockingChannel):\r\n    method, properties, body = next(channel.consume(\"test_queue\", auto_ack=True, ))\r\n    return method, properties, body\r\n\r\ndef main():\r\n    connection = pika.BlockingConnection()\r\n    channel = connection.channel()\r\n    while True:\r\n        method, property, body = do_consume(channel)\r\n        print(method, property, body)\r\n        res = requests.get('https://example.com')\r\n\r\n\r\nif __name__ == '__main__':\r\n  main()\r\n```\r\n- [X] Tested against the following real-world scenario code (replicates doc's use case):\r\n```\r\nimport pika\r\nimport requests\r\nfrom pika.adapters.blocking_connection import BlockingChannel\r\n\r\ndef main():\r\n    connection = pika.BlockingConnection()\r\n    channel = connection.channel()\r\n    for method, property, body in channel.consume(\"test_queue\", auto_ack=True):\r\n        print(method, property, body)\r\n        res = requests.get('https://example.com')\r\n\r\nif __name__ == '__main__':\r\n  main()\r\n```\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "pika-consume",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211407ac254a19ac2909c6",
    "number": 2396,
    "body": "# Description\r\n\r\nThis PR adds support for exporting Otel Spans to SQS Queues. The messages to SQS Queue is transported based on size limit for sqs messages. Hence each SQS message is a batch of spans. Upon testing, it is calculated that each sqs message can have upto ~70 Otel Spans.\r\n\r\nFixes # (issue)\r\n#2383 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [X] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [X] Documentation has been updated\r\n",
    "head_branch": "otel-sqs-exporter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211408ac254a19ac2909c7",
    "number": 2395,
    "body": null,
    "head_branch": "appr",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update contrib repo approvers list (#2395)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211408ac254a19ac2909c8",
    "number": 2394,
    "body": "# Description\r\n\r\nRelease 0.1.4. Wait for https://github.com/open-telemetry/opentelemetry-python-contrib/pull/2387\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "azure-detector-0.1.4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Azure resource detector 0.1.4 (#2394)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211409ac254a19ac2909c9",
    "number": 2392,
    "body": "# Description\r\n\r\nWhile updating our setup from operator 0.94.0 we started to have errors in python applications that were fine before.\r\n\r\nIt looks like asyncio was added on version 0.95.0 https://github.com/open-telemetry/opentelemetry-operator/pull/2677/files#diff-e8feb6bbad63df255d68837a72bc1c440ad0cac92b0406281d64879682e41c52R19\r\n\r\n```\r\n[2024-04-04 10:06:41,746] [7] [ERROR] Exception in callback AsyncioInstrumentor.trace_future.<locals>.callback(<Future cancelled>) at /otel-auto-instrumentation-python/opentelemetry/instrumentation/asyncio/__init__.py:309\r\nhandle: <Handle AsyncioInstrumentor.trace_future.<locals>.callback(<Future cancelled>) at /otel-auto-instrumentation-python/opentelemetry/instrumentation/asyncio/__init__.py:309>\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.11/asyncio/events.py\", line 84, in _run\r\n    self._context.run(self._callback, *self._args)\r\n  File \"/otel-auto-instrumentation-python/opentelemetry/instrumentation/asyncio/__init__.py\", line 310, in callback\r\n    exception = f.exception()\r\n                ^^^^^^^^^^^^^\r\nasyncio.exceptions.CancelledError \r\n```\r\n\r\n\r\nOur scenario is an application using faust to consume kafka messages. https://faust.readthedocs.io/en/latest/\r\nQuite a big legacy application with many consumers, so it was a bit hard to extract the exact scenario.\r\n\r\n\r\nThe problem is when a callback invokes the `exception()` function, which is expected to throw exception in some conditions.\r\n\r\nIn this PR we catch them instead of letting them be propagated.\r\n\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ x ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nI've re-build it and the errors logs were gone\r\n\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix/asyncio-cancelled-error",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621140aac254a19ac2909ca",
    "number": 2391,
    "body": "Failing context manager builds for pylint https://github.com/open-telemetry/opentelemetry-python-contrib/actions/runs/8526936705/job/23357250130?pr=2388",
    "head_branch": "test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove context manager check (#2391)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621140bac254a19ac2909cb",
    "number": 2389,
    "body": "# Description\r\n\r\nRTD build is currently broken https://readthedocs.org/projects/opentelemetry-python-contrib/builds/23234246/\r\n\r\nUpdate config per https://blog.readthedocs.com/use-build-os-config/\r\n\r\nFixes #2380\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix-rtd-build",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "readthedocs: update build os config (#2389)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621140cac254a19ac2909cc",
    "number": 2388,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "lzchen-patch-9",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621140dac254a19ac2909cd",
    "number": 2387,
    "body": null,
    "head_branch": "vm",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Change meta data service timeout to 200ms (#2387)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621140eac254a19ac2909ce",
    "number": 2385,
    "body": "… _trace_prerun\r\n\r\n# Description\r\n\r\nCurrently incoming baggage does not get picked up. So this PR applies the fix described in the original issue.\r\n\r\nFixes #784 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nThe original issue has steps to reproduce.\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix/opentelemetry-instrumentation-celery-baggage",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621140fac254a19ac2909cf",
    "number": 2384,
    "body": "…operly configured independently of the order of instrumentation (this helps especially in case of autoinstrumentation)\r\n\r\n- add method to perform proper logging initialisation\r\n- add unittests\r\n\r\n# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\nI have changed the logging instrumentation in a way that ensures proper log setup no matter if the application (log) was already configured.\r\nThe changes are in a way s.t. we check before applying log level and format to check if basicConfig should be used. Otherwise we are going to modify the log level and handlers \"manually\".\r\n\r\nI also changed the uninstrument method (which is mainly for the `test_uninstrumented` test. Because as soon as we changed the log format and we \"uninstrument\" the application, then the logs cannot be formatted anymore.\r\n\r\nThe changes are highly inspired by [this](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1939) open pull request. So props, to figure out a neat way to resolve this issue go to @rjduffner.\r\n\r\nFixes # (issue)\r\n\r\n* Fixes #2346\r\n* Fixes opentelemetry-python#3473 ([opentelemetry-pthon](https://github.com/open-telemetry/opentelemetry-python/issues/3473))\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nI have written unit tests to prove that everything should work as expected.\r\n\r\nTo verify this with some application, you can locally install the repo and perform auto-instrumentation of an application. There it can be verified that the issues mentioned above are gone.\r\n\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix/logging-instrumentation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211410ac254a19ac2909d0",
    "number": 2382,
    "body": "# Description\r\nThe AWS resource detectors currently are not picked up when using the new `OTEL_EXPERIMENTAL_RESOURCE_DETECTORS` environment variable because they are not registered under the [opentelemetry_resource_detector](https://github.com/open-telemetry/opentelemetry-python/blob/721beb8b530e7a830c1e27b70c2fb9af6465baf1/opentelemetry-sdk/src/opentelemetry/sdk/resources/__init__.py#L191-L194) entry point.\r\n\r\nThis PR adds the relevant section to the sdk-aws pyproject.toml file to allow the resource detectors to be used.\r\n\r\nFixes #1861, fixes #2370\r\n\r\n## Type of change\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\nAdded the following line to my Dockerfile in an otel-instrumented test Flask app:\r\n```\r\nRUN echo \"\\n\\n[opentelemetry_resource_detector]\\naws_elastic_beanstalk =\r\nopentelemetry.sdk.extension.aws.resource.beanstalk:AwsBeanstalkResourceDetector\"\r\n >>\r\n/usr/local/lib/python3.12/site-packages/opentelemetry_sdk_extension_aws-2.0.1.dist-info/entry_points.txt\r\n```\r\n\r\nThe logs showed that the relevant resource attributes were set:\r\n```\r\nweb_1             | {\r\nweb_1             |     \"resource_metrics\": [\r\nweb_1             |         {\r\nweb_1             |             \"resource\": {\r\nweb_1             |                 \"attributes\": {\r\nweb_1             |                     \"telemetry.sdk.language\": \"python\",\r\nweb_1             |                     \"telemetry.sdk.name\":\r\n\"opentelemetry\",\r\nweb_1             |                     \"telemetry.sdk.version\": \"1.20.0\",\r\nweb_1             |                     \"cloud.provider\": \"aws\",\r\nweb_1             |                     \"cloud.platform\":\r\n\"aws_elastic_beanstalk\",\r\nweb_1             |                     \"service.name\": \"otel_test\",\r\nweb_1             |                     \"service.instance.id\": \"abc123\",\r\nweb_1             |                     \"service.namespace\": \"12345\",\r\nweb_1             |                     \"service.version\": \"0.0.1\",\r\nweb_1             |                     \"telemetry.auto.version\": \"0.41b0\"\r\nweb_1             |                 },\r\nweb_1             |                 \"schema_url\": \"\"\r\nweb_1             |             },\r\nweb_1             |             \"scope_metrics\": [],\r\nweb_1             |             \"schema_url\": \"\"\r\nweb_1             |         }\r\nweb_1             |     ]\r\nweb_1             | }\r\n```\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add AWS resource detector entry points (#2382)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211410ac254a19ac2909d1",
    "number": 2381,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "lzchen-patch-8",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211411ac254a19ac2909d2",
    "number": 2379,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "lzchen-patch-7",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211412ac254a19ac2909d3",
    "number": 2378,
    "body": "Copy log updates from `release/v1.24.x-0.45bx`.",
    "head_branch": "opentelemetrybot/copy-change-log-updates-from-release-v1.24.x-0.45bx",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211413ac254a19ac2909d4",
    "number": 2376,
    "body": "Update version to `1.25.0.dev/0.46b0.dev`.",
    "head_branch": "opentelemetrybot/update-version-to-1.25.0.dev-0.46b0.dev",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Update version to 1.25.0.dev/0.46b0.dev (#2376)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211414ac254a19ac2909d5",
    "number": 2375,
    "body": "Prepare release 1.24.0/0.45b0.",
    "head_branch": "opentelemetrybot/prepare-release-1.24.0-0.45b0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[release/v1.24.x-0.45bx] Prepare release 1.24.0/0.45b0 (#2375)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211415ac254a19ac2909d6",
    "number": 2374,
    "body": "# Description\r\n\r\ngRPC metadata has traditionally been represented as nested tuples, so when injecting new metadata, interceptors needed to convert to a mutable type and then back into a nested tuple. However, for async gRPC, the `aio.Metadata` class breaks this conversion, and the conversion is unnecessary anyway since the data is already mutable.\r\n\r\nFixes #2373 \r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nTODO\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "2373-grpc-metadata-workaround",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211416ac254a19ac2909d7",
    "number": 2372,
    "body": "# Description\r\n\r\nPython AwsLambdaInstrumentor attribute settings are not consistent with the [latest faas semconv](https://github.com/open-telemetry/semantic-conventions/blob/main/docs/faas/aws-lambda.md#all-triggers). Specifically, I think these instrumentor changes are needed which are updated in this PR:\r\n\r\n1. `ResourceAttributes.FAAS_ID` --> `ResourceAttributes.CLOUD_RESOURCE_ID`\r\n2. `SpanAttributes.FAAS_EXECUTION` --> `SpanAttributes.FAAS_INVOCATION_ID`\r\n\r\nLooking at the semconvgen on main, `faas.id` and `faas.execution` are deprecated and should be replaced by `cloud.resource_id` and `faas.invocation_id`, respectively (described [here](https://github.com/open-telemetry/opentelemetry-python/blob/29c293fbb120ff8b760519a25e0530b5ab05af83/opentelemetry-semantic-conventions/src/opentelemetry/semconv/resource/__init__.py#L647-L650) and [here](https://github.com/open-telemetry/opentelemetry-python/blob/29c293fbb120ff8b760519a25e0530b5ab05af83/opentelemetry-semantic-conventions/src/opentelemetry/semconv/trace/__init__.py#L1321-L1324)).\r\n\r\nFixes #2371 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "update-aws-lambda-span-attributes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Change AwsLambdaInstrumentor span attrs to meet faas semconv (#2372)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211417ac254a19ac2909d8",
    "number": 2367,
    "body": "# Description\r\n\r\nImplements adding `cloud.account.id` span attribute by AwsLambdaInstrumentor to meet [current semconv](https://github.com/open-telemetry/semantic-conventions/blob/80a2d1a8f70c96c51e541827c7548ba42bb77876/docs/faas/aws-lambda.md?plain=1#L42). It is defined in Python semconvgen [here](https://github.com/open-telemetry/opentelemetry-python/blob/694445f6a39ab55826b955320c74650e1d2395ae/opentelemetry-semantic-conventions/src/opentelemetry/semconv/resource/__init__.py#L61-L64). This doesn't seem to replace a deprecated/migrated attribute key. In [AWS Lambda Context](https://docs.aws.amazon.com/lambda/latest/dg/python-context.html) there is no account accessor so this does the split described in the semconv instead.\r\n\r\nFixes [# 2368](https://github.com/open-telemetry/opentelemetry-python-contrib/issues/2368)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [X] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "aws-lambda-cloud-account-id",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add cloud.account.id attribute by AwsLambdaInstrumentor (#2367)\n\n* Add cloud.account.id attribute by AwsLambdaInstrumentor\r\n\r\n* Changelog\r\n\r\n* Update test\r\n\r\n* lint"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211418ac254a19ac2909d9",
    "number": 2363,
    "body": "# Description\r\n\r\nThis fixes a bug when using grpcio>=1.60.0 and the gRPC telemetry. Introduced by https://github.com/grpc/grpc/pull/34347 a tuple metadata is always converted to a `Metadata` object which follows the Python grpc docs and typing. In the current opentelemetry implementation there is a conversion to an `OrderedDict` which causes :\r\n```python\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nself = Metadata((('key', 'value'),)), key = ('key', 'value')\r\n\r\n    def __getitem__(self, key: MetadataKey) -> MetadataValue:\r\n        \"\"\"When calling <metadata>[<key>], the first element of all those\r\n        mapped for <key> is returned.\r\n        \"\"\"\r\n        try:\r\n>           return self._metadata[key][0]\r\nE           KeyError: ('key', 'value')\r\n```\r\n\r\nThis PR makes use of the `Metadata` object directly and propagates it as such. \r\nThis could cause regressions for some following interceptors handling metadata as tuples (same way this regression happened), I'm not sure if this would qualify as a breaking change though.\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nAdded metadata in grpc tests\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211419ac254a19ac2909da",
    "number": 2362,
    "body": "Bumps [black](https://github.com/psf/black) from 22.3.0 to 24.3.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/psf/black/releases\">black's releases</a>.</em></p>\n<blockquote>\n<h2>24.3.0</h2>\n<h3>Highlights</h3>\n<p>This release is a milestone: it fixes Black's first CVE security vulnerability. If you\nrun Black on untrusted input, or if you habitually put thousands of leading tab\ncharacters in your docstrings, you are strongly encouraged to upgrade immediately to fix\n<a href=\"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-21503\">CVE-2024-21503</a>.</p>\n<p>This release also fixes a bug in Black's AST safety check that allowed Black to make\nincorrect changes to certain f-strings that are valid in Python 3.12 and higher.</p>\n<h3>Stable style</h3>\n<ul>\n<li>Don't move comments along with delimiters, which could cause crashes (<a href=\"https://redirect.github.com/psf/black/issues/4248\">#4248</a>)</li>\n<li>Strengthen AST safety check to catch more unsafe changes to strings. Previous versions\nof Black would incorrectly format the contents of certain unusual f-strings containing\nnested strings with the same quote type. Now, Black will crash on such strings until\nsupport for the new f-string syntax is implemented. (<a href=\"https://redirect.github.com/psf/black/issues/4270\">#4270</a>)</li>\n<li>Fix a bug where line-ranges exceeding the last code line would not work as expected\n(<a href=\"https://redirect.github.com/psf/black/issues/4273\">#4273</a>)</li>\n</ul>\n<h3>Performance</h3>\n<ul>\n<li>Fix catastrophic performance on docstrings that contain large numbers of leading tab\ncharacters. This fixes\n<a href=\"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-21503\">CVE-2024-21503</a>.\n(<a href=\"https://redirect.github.com/psf/black/issues/4278\">#4278</a>)</li>\n</ul>\n<h3>Documentation</h3>\n<ul>\n<li>Note what happens when <code>--check</code> is used with <code>--quiet</code> (<a href=\"https://redirect.github.com/psf/black/issues/4236\">#4236</a>)</li>\n</ul>\n<h2>24.2.0</h2>\n<h3>Stable style</h3>\n<ul>\n<li>Fixed a bug where comments where mistakenly removed along with redundant parentheses\n(<a href=\"https://redirect.github.com/psf/black/issues/4218\">#4218</a>)</li>\n</ul>\n<h3>Preview style</h3>\n<ul>\n<li>Move the <code>hug_parens_with_braces_and_square_brackets</code> feature to the unstable style\ndue to an outstanding crash and proposed formatting tweaks (<a href=\"https://redirect.github.com/psf/black/issues/4198\">#4198</a>)</li>\n<li>Fixed a bug where base expressions caused inconsistent formatting of ** in tenary\nexpression (<a href=\"https://redirect.github.com/psf/black/issues/4154\">#4154</a>)</li>\n<li>Checking for newline before adding one on docstring that is almost at the line limit\n(<a href=\"https://redirect.github.com/psf/black/issues/4185\">#4185</a>)</li>\n<li>Remove redundant parentheses in <code>case</code> statement <code>if</code> guards (<a href=\"https://redirect.github.com/psf/black/issues/4214\">#4214</a>).</li>\n</ul>\n<h3>Configuration</h3>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/psf/black/blob/main/CHANGES.md\">black's changelog</a>.</em></p>\n<blockquote>\n<h2>24.3.0</h2>\n<h3>Highlights</h3>\n<p>This release is a milestone: it fixes Black's first CVE security vulnerability. If you\nrun Black on untrusted input, or if you habitually put thousands of leading tab\ncharacters in your docstrings, you are strongly encouraged to upgrade immediately to fix\n<a href=\"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-21503\">CVE-2024-21503</a>.</p>\n<p>This release also fixes a bug in Black's AST safety check that allowed Black to make\nincorrect changes to certain f-strings that are valid in Python 3.12 and higher.</p>\n<h3>Stable style</h3>\n<ul>\n<li>Don't move comments along with delimiters, which could cause crashes (<a href=\"https://redirect.github.com/psf/black/issues/4248\">#4248</a>)</li>\n<li>Strengthen AST safety check to catch more unsafe changes to strings. Previous versions\nof Black would incorrectly format the contents of certain unusual f-strings containing\nnested strings with the same quote type. Now, Black will crash on such strings until\nsupport for the new f-string syntax is implemented. (<a href=\"https://redirect.github.com/psf/black/issues/4270\">#4270</a>)</li>\n<li>Fix a bug where line-ranges exceeding the last code line would not work as expected\n(<a href=\"https://redirect.github.com/psf/black/issues/4273\">#4273</a>)</li>\n</ul>\n<h3>Performance</h3>\n<ul>\n<li>Fix catastrophic performance on docstrings that contain large numbers of leading tab\ncharacters. This fixes\n<a href=\"https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-21503\">CVE-2024-21503</a>.\n(<a href=\"https://redirect.github.com/psf/black/issues/4278\">#4278</a>)</li>\n</ul>\n<h3>Documentation</h3>\n<ul>\n<li>Note what happens when <code>--check</code> is used with <code>--quiet</code> (<a href=\"https://redirect.github.com/psf/black/issues/4236\">#4236</a>)</li>\n</ul>\n<h2>24.2.0</h2>\n<h3>Stable style</h3>\n<ul>\n<li>Fixed a bug where comments where mistakenly removed along with redundant parentheses\n(<a href=\"https://redirect.github.com/psf/black/issues/4218\">#4218</a>)</li>\n</ul>\n<h3>Preview style</h3>\n<ul>\n<li>Move the <code>hug_parens_with_braces_and_square_brackets</code> feature to the unstable style\ndue to an outstanding crash and proposed formatting tweaks (<a href=\"https://redirect.github.com/psf/black/issues/4198\">#4198</a>)</li>\n<li>Fixed a bug where base expressions caused inconsistent formatting of ** in tenary\nexpression (<a href=\"https://redirect.github.com/psf/black/issues/4154\">#4154</a>)</li>\n<li>Checking for newline before adding one on docstring that is almost at the line limit\n(<a href=\"https://redirect.github.com/psf/black/issues/4185\">#4185</a>)</li>\n<li>Remove redundant parentheses in <code>case</code> statement <code>if</code> guards (<a href=\"https://redirect.github.com/psf/black/issues/4214\">#4214</a>).</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/psf/black/commit/552baf822992936134cbd31a38f69c8cfe7c0f05\"><code>552baf8</code></a> Prepare release 24.3.0 (<a href=\"https://redirect.github.com/psf/black/issues/4279\">#4279</a>)</li>\n<li><a href=\"https://github.com/psf/black/commit/f00093672628d212b8965a8993cee8bedf5fe9b8\"><code>f000936</code></a> Fix catastrophic performance in lines_with_leading_tabs_expanded() (<a href=\"https://redirect.github.com/psf/black/issues/4278\">#4278</a>)</li>\n<li><a href=\"https://github.com/psf/black/commit/7b5a657285f38126bf28483478bbd9ea928077ec\"><code>7b5a657</code></a> Fix --line-ranges behavior when ranges are at EOF (<a href=\"https://redirect.github.com/psf/black/issues/4273\">#4273</a>)</li>\n<li><a href=\"https://github.com/psf/black/commit/1abcffc81816257985678f08c61584ed4287f22a\"><code>1abcffc</code></a> Use regex where we ignore case on windows (<a href=\"https://redirect.github.com/psf/black/issues/4252\">#4252</a>)</li>\n<li><a href=\"https://github.com/psf/black/commit/719e67462c80574c81a96faa144886de6da84489\"><code>719e674</code></a> Fix 4227: Improve documentation for --quiet --check (<a href=\"https://redirect.github.com/psf/black/issues/4236\">#4236</a>)</li>\n<li><a href=\"https://github.com/psf/black/commit/e5510afc06cd238cd0cba4095283943a870a7e7b\"><code>e5510af</code></a> update plugin url for Thonny (<a href=\"https://redirect.github.com/psf/black/issues/4259\">#4259</a>)</li>\n<li><a href=\"https://github.com/psf/black/commit/6af7d1109693c4ad3af08ecbc34649c232b47a6d\"><code>6af7d11</code></a> Fix AST safety check false negative (<a href=\"https://redirect.github.com/psf/black/issues/4270\">#4270</a>)</li>\n<li><a href=\"https://github.com/psf/black/commit/f03ee113c9f3dfeb477f2d4247bfb7de2e5f465c\"><code>f03ee11</code></a> Ensure <code>blib2to3.pygram</code> is initialized before use (<a href=\"https://redirect.github.com/psf/black/issues/4224\">#4224</a>)</li>\n<li><a href=\"https://github.com/psf/black/commit/e4bfedbec2e8b10cc6b7b31442478f05db0ce06d\"><code>e4bfedb</code></a> fix: Don't move comments while splitting delimiters (<a href=\"https://redirect.github.com/psf/black/issues/4248\">#4248</a>)</li>\n<li><a href=\"https://github.com/psf/black/commit/d0287e1f7558d97e6c0ebd6dc5bcb5b970e2bf8c\"><code>d0287e1</code></a> Make trailing comma logic more concise (<a href=\"https://redirect.github.com/psf/black/issues/4202\">#4202</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/psf/black/compare/22.3.0...24.3.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=black&package-manager=pip&previous-version=22.3.0&new-version=24.3.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/open-telemetry/opentelemetry-python-contrib/network/alerts).\n\n</details>",
    "head_branch": "dependabot/pip/black-24.3.0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621141aac254a19ac2909db",
    "number": 2361,
    "body": "# Description\r\n\r\nUse a list, rather than a comma separate string to represent repeated HTTP request and response headers.\r\n\r\nfixes #2360\r\nfixes #2358\r\nfollowup to #2266\r\n\r\n**This will need to be rebased once #2266 is merged**, it'll also need a changelog and documentation updates, but I'll wait for agreement before doing that work.\r\n\r\n❗❗❗  see the penultimate commit 0fa0a36e7463e279862f8d74a5dac27683dfc85c for the actual logic here.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\ntests updated\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added/updated\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "repeated-headers-list",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621141aac254a19ac2909dc",
    "number": 2359,
    "body": "# Description\r\n\r\nThis fixes a regression caused in #2020 where request.url stopped being of `httpx.URL` type, causing issues with request/response hooks. #2020  was an major breaking change as discussed in https://github.com/open-telemetry/opentelemetry-python-contrib/pull/2020#discussion_r1531532146\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nNo new tests added at this time, this fixes a major regression in 0.44b0.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix-httpx-regression",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "regression-fix: retain httpx.URL type on request.url (#2359)\n\n* fix: retain httpx.URL type on request.url\r\n\r\nThis fixes a regression caused in #2020 where request.url stopped being of `httpx.URL` type, causing issues with request/response hooks.\r\n\r\n* Update CHANGELOG.md\r\n\r\n* tests: adding assertions to verify request.url on hooks is a httpx.URL\r\n\r\n* fixup: adjust check to consider httpx < 0.20.0\r\n\r\n* fixup: keep code dry\r\n\r\n---------\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621141bac254a19ac2909dd",
    "number": 2356,
    "body": "# Description\r\n\r\nWIP/PoC\r\n\r\nAdds FAAS semconv opt-in to the existing implementation for HTTP opt-in. The new attributes are based on [aws-lambda.md](https://github.com/open-telemetry/semantic-conventions/blob/main/docs/faas/aws-lambda.md#all-triggers) semconv. Both FAAS and HTTP semconv opt-in are set dependingon on `OTEL_SEMCONV_STABILITY_OPT_IN` which is a comma-delimited string. Currently if set as `\"default\"` then both FAAS and HTTP use the old semconv, and any empty is default. Examples:\r\n\r\n|`OTEL_SEMCONV_STABILITY_OPT_IN`  |http  | faas  |\r\n|-----------------------------------------|-----|------|\r\n| empty                                                          | old   | old   |\r\n|`\"default\"`                                                  | old   | old   |\r\n|`\"http\"`                                                       | new  | old   |\r\n|`\"faas\"`                                                       | old  | new   |\r\n|`\"faas/dup\"`                                               | old  | both  |\r\n|`\"http,faas\"`                                               | new  | new  |\r\n|`\"http/dup,faas/dup\"`                               | both  | both |\r\n|`\"http/dup,faas\"`                                       | both  | new |\r\n\r\nAdds `AwsLambdaInstrumentor` usage of the FAAS opt-in. Setting of span attributes in this instrumentor depends on `span.is_recording()` after the call to `start_as_current_span`. So I made the new `_set_*` methods for the FAAS opt-in do direct `span.set_attribute` calls though this is not as uniform.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [X] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nI've packaged a custom version of layer-python (e.g. [release 0.4.0](https://github.com/open-telemetry/opentelemetry-lambda/releases/tag/layer-python%2F0.4.0)) with these changes and set `OTEL_SEMCONV_STABILITY_OPT_IN` before invoking an equipped AWS Lambda function.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "lambda-instrumentor-opt-in",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621141cac254a19ac2909de",
    "number": 2355,
    "body": "# Description\r\n\r\nbulk requests can be too big and diverse to make sense as db statement. Other than that the sanitizer currently only handles dicts so it's crashing.\r\n\r\nCloses former PR #2150\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] tox\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix-elasticsearch-bulk-sanitizing",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "elasticsearch: don't set body as db statement for bulk requests (#2355)\n\n* elasticsearch: don't set body as db statement for bulk requests\r\n\r\nbulk requests can be too big and diverse to make sense as db statement.\r\nOther than that the sanitizer currently only handles dicts so it's\r\ncrashing.\r\n\r\nCloses #2150\r\n\r\nCo-authored-by: Jason Mobarak <git@jason.mobarak.name>\r\nCo-authored-by: Quentin Pradet <quentin.pradet@gmail.com>\r\n\r\n* Update CHANGELOG\r\n\r\n* Please the linter\r\n\r\n---------\r\n\r\nCo-authored-by: Jason Mobarak <git@jason.mobarak.name>\r\nCo-authored-by: Quentin Pradet <quentin.pradet@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621141dac254a19ac2909df",
    "number": 2354,
    "body": "# Description\r\n\r\nRun `shellcheck --severity=warning` and fix all issues - some from main repo, a dead variable, a safety check to make sure `rm -rf` doesn't erase the file system, etc.\r\n\r\nIf desired, I could add a PR for enabling a shellcheck CI step similar to https://github.com/open-telemetry/opentelemetry-lambda/pull/396\r\n\r\n# Does This PR Require a Core Repo Change?\r\nSome scripts from the core repo also changed, linking both directions for completeness:\r\n- [x] Yes. - Link to PR: https://github.com/open-telemetry/opentelemetry-python/pull/3789\r\n- [ ] No.\r\n\r\n",
    "head_branch": "shellcheck_warnings",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix all issues from shellcheck --severity=warning (#2354)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621141eac254a19ac2909e0",
    "number": 2353,
    "body": "# Description\r\n\r\nAsyncio send function does not have a name. This checks for name before tracing.\r\n\r\nFixes #2340\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nUsed the repro case in issue #2340 \r\n\r\nI am also running tests locally but they are taking a long time...\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "async-iterator-bug",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621141fac254a19ac2909e1",
    "number": 2349,
    "body": "Fixes #2348",
    "head_branch": "issue_2348",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Skip celery test case if running in PyPy (#2349)\n\nFixes #2348\r\n\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211420ac254a19ac2909e2",
    "number": 2347,
    "body": "# Description\r\n\r\nA couple of build scripts were not setting -e to detect errors in commands (the other scripts already were).\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n",
    "head_branch": "shell_set_dashe",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use set -e to catch errors in all scripts (#2347)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211421ac254a19ac2909e3",
    "number": 2345,
    "body": "Fixes #2344",
    "head_branch": "issue_2344",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix docker test dependencies (#2345)\n\nFixes #2344"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211422ac254a19ac2909e4",
    "number": 2342,
    "body": "# Description\r\n\r\nSetting `metrics`  in `__init__` corrupts the singleton state of BaseInstrumentor. Aslo moves `task_id_to_start_time` instance variable to class-level in order to prevent resetting of the dictionary when/if multiple calls to constructor happens.\r\n\r\nFixes #2029 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n* Added a unit test `test_duplicate_instrumentaion` wich reproduces the errors (fails without the patch)\r\n\r\nProblem can be reproduced by running the provided testcase without the `__init__.py` changes for celery instrumentation.  It is worth noting that this problem is very similar to #1791  as @marcuslimdw  points out in issue #2029 . \r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "celery-duplicated-instrumentation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Celery duplicated instrumentation (#2342)\n\n* * Adding (failing) testcase to cover Issue #2029\r\n\r\n* * move Instance variables to class variables. Since the object in question will be a singelton. This will resolve #2029 where multiple calls to the instrumentation will assign Null values.\r\n\r\n* * black formatting\r\n\r\n* * Changelog stub entry, PR # to follow\r\n\r\n* * updating the pullrequest number\r\n\r\n* * remove superfluous constructor\r\n\r\n* * moving Change log to unreleased section\r\n\r\n---------\r\n\r\nCo-authored-by: Shalev Roda <65566801+shalevr@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211422ac254a19ac2909e5",
    "number": 2338,
    "body": "\r\n# Description\r\n\r\nRemove async keyword that did not make the test run and then fix tests to send the traceparent as header instead of query string.\r\n\r\nFixes #2336\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] tox\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix-django-sync-middleware",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "instrumentation/django: fix test_trace_parent (#2338)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211423ac254a19ac2909e6",
    "number": 2335,
    "body": "# Description\r\n\r\nFix some runtime warnings spotted running tests.\r\n\r\nFixes #2334 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] tox\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix-asynciorelated-warnings",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix asyncio related warnings in tests (#2335)\n\n* aiopg: fix runtime warnings when running tests\r\n\r\nFixes:\r\nRuntimeWarning: coroutine 'MockCursor.execute' was never awaited\r\n    cursor.execute(query)\r\n\r\n* aio-pika: no need to return an awaitable in mocked method\r\n\r\nNo need to return an awaitable since the mocked method awaits\r\nitself.\r\nFixes:\r\n    RuntimeWarning: coroutine 'sleep' was never awaited\r\n\r\n---------\r\n\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211424ac254a19ac2909e7",
    "number": 2333,
    "body": "# Description\r\n\r\nFix sorting in instrumentation/README\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nIt doesn't change code\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix-soring-instrumentation-readme",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211425ac254a19ac2909e8",
    "number": 2332,
    "body": "Fixes #2331",
    "head_branch": "issue_2331",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Refactor use of changedir in tox.ini (#2332)\n\nFixes #3745"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211426ac254a19ac2909e9",
    "number": 2329,
    "body": "Fixes #2328",
    "head_branch": "issue_2328",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove [test] package from _template (#2329)\n\nFixes #2328"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211427ac254a19ac2909ea",
    "number": 2327,
    "body": "Fixes #2235",
    "head_branch": "issue_2235",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove [test] package from opentelemetry-instrumentation (#2327)\n\nFixes #2235"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211427ac254a19ac2909eb",
    "number": 2326,
    "body": "# Description\r\n\r\nThe metric description for http.server.duration should be Measures the duration of inbound HTTP requests while we're using measures the duration of the inbound HTTP request.\r\n\r\nThe same description is placed for all http.server.duration\r\n\r\nFixes #2298 \r\n\r\n\r\nSince version 1.2.2 of Otel the description of http.server.duration changes to **\"Duration of HTTP server requests.\"** for that reason instead of setting \"Measures the duration of inbound HTTP requests.\" As the [issue](https://github.com/open-telemetry/opentelemetry-python-contrib/issues/2298) asks I set the new description **\"Duration of HTTP server requests.\"**\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- Run unit tests with tox\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "feature/convention-http-server-duration",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Feature/convention http server duration (#2326)\n\n* feat: add http.duration convention\r\n\r\n* feat: add http.duration convention\r\n\r\n* feat: replace for the last description version Duration of HTTP client requests\r\n\r\n* feat: add new description to histogram"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211428ac254a19ac2909ec",
    "number": 2325,
    "body": "Fixes #2237",
    "head_branch": "issue_2237",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove [test] package from distro (#2325)\n\nFixes #2237"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211429ac254a19ac2909ed",
    "number": 2324,
    "body": "Fixes #2234",
    "head_branch": "issue_2234",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove [test] package from sdk-extension-aws (#2324)\n\nFixes #2234"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621142aac254a19ac2909ee",
    "number": 2323,
    "body": "Fixes #2233",
    "head_branch": "issue_2233",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove [test] package from exporter-prometheus-remote-write (#2323)\n\nFixes #2233"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621142bac254a19ac2909ef",
    "number": 2322,
    "body": "Fixes #2232",
    "head_branch": "issue_2232",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove [test] package from exporter-richconsole (#2322)\n\nFixes #2232"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621142cac254a19ac2909f0",
    "number": 2321,
    "body": "Fixes #2231",
    "head_branch": "issue_2231",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove [test] package from propagator-ot-trace (#2321)\n\nFixes #2231"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621142dac254a19ac2909f1",
    "number": 2320,
    "body": "Fixes #2230",
    "head_branch": "issue_2230",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove [test] package from propagator-aws-xray (#2320)\n\nFixes #2230"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621142eac254a19ac2909f2",
    "number": 2319,
    "body": "Fixes #2228",
    "head_branch": "issue_2228",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove [test] package from resource-detector-container (#2319)\n\nFixes #2228"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621142eac254a19ac2909f3",
    "number": 2318,
    "body": "Fixes #2236",
    "head_branch": "issue_2236",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove [test] package from opentelemetry-contrib-instrumentations (#2318)\n\nFixes #2236"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621142fac254a19ac2909f4",
    "number": 2317,
    "body": "Fixes #2229",
    "head_branch": "issue_2229",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove [test] package from opentelemetry-resource-detector-azure (#2317)\n\nFixes #2229"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211430ac254a19ac2909f5",
    "number": 2316,
    "body": "Fixes #2226",
    "head_branch": "issue_2226",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove [test] package from urllib3 instrumentation (#2316)\n\nFixes #2226"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211431ac254a19ac2909f6",
    "number": 2315,
    "body": "Fixes #2219",
    "head_branch": "issue_2219",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove [test] package from sqlalchemy instrumentation (#2315)\n\nFixes #2219\r\n\r\nCo-authored-by: Shalev Roda <65566801+shalevr@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211432ac254a19ac2909f7",
    "number": 2314,
    "body": "Fixes #2203",
    "head_branch": "issue_2203",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove [test] package from httpx instrumentation (#2314)\n\nFixes #2203"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211433ac254a19ac2909f8",
    "number": 2313,
    "body": "Fixes #2200",
    "head_branch": "issue_2200",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove [test] package from falcon instrumentation (#2313)\n\nFixes #2200"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211434ac254a19ac2909f9",
    "number": 2312,
    "body": "Fixes #2199",
    "head_branch": "issue_2199",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove [test] package from elasticsearch configuration (#2312)\n\nFixes #3745"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211435ac254a19ac2909fa",
    "number": 2311,
    "body": "Fixes #2198",
    "head_branch": "issue_2198",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove [test] package for django instrumentation (#2311)\n\nFixes #2198"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211435ac254a19ac2909fb",
    "number": 2310,
    "body": "Fixes #2211",
    "head_branch": "issue_2211",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove [test] package from pymemcache instrumentation (#2310)\n\nFixes #2211"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211436ac254a19ac2909fc",
    "number": 2309,
    "body": "Fixes #2308",
    "head_branch": "issue_2308",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove [test] package from psycopg instrumentation (#2309)\n\nFixes #2308"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211437ac254a19ac2909fd",
    "number": 2307,
    "body": "Fixes #2210",
    "head_branch": "issue_2210",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove [test] package from psycopg2 instrumentation (#2307)\n\nFixes #2210"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211438ac254a19ac2909fe",
    "number": 2306,
    "body": "Fixes #2209",
    "head_branch": "issue_2209",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove [test] package from pika instrumentation (#2306)\n\nFixes #2209"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211439ac254a19ac2909ff",
    "number": 2303,
    "body": "Fixes #2218",
    "head_branch": "issue_2218",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove [test] package from sklearn instrumentation (#2303)\n\nFixes #2218"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621143aac254a19ac290a00",
    "number": 2302,
    "body": "# Description\r\n\r\nWith the just-release opentelemetry-instrumentation-flask 0.44b0 I get this from the flask instrumentation:\r\n\r\nDeprecationWarning: The '__version__' attribute is deprecated and will be removed in Flask 3.1. Use feature detection or 'importlib.metadata.version(\"flask\")' instead.\r\n\r\nI add the lower bound of importlib_metadata as 4.0 because of pep 566 \r\nhttps://github.com/python/importlib_metadata/blob/v6.0.0/CHANGES.rst#v400\r\n\r\nFixes #2297\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n I dont think this would have an extra test\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "feature/remove-version-flask-alias",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "feat: add importlib metadata default on flask module (#2302)\n\n* feat: add importlib metadata default\r\n\r\n* feat: add importlib metadata default\r\n\r\n* feat: add importlib metadata default\r\n\r\n* Fix lint\r\n\r\n---------\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621143bac254a19ac290a01",
    "number": 2300,
    "body": "# Description\r\n\r\nAs per https://github.com/open-telemetry/opentelemetry-python-contrib/issues/2055#issuecomment-1918148101, `type` in `opentelemetry-instrumentation-asgi` is not a good name for something specific to asgi.\r\n\r\nAs per discussion on https://github.com/open-telemetry/opentelemetry-python-contrib/pull/2145#issuecomment-1933035603, instead of removing `type`, we should change its name.\r\n\r\nThis replaces #2145.\r\n\r\nFixes #2055\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] `opentelemetry-instrumentation-asgi` tests updated\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "asgi.event.type",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "rename `type` to `asgi.event.type` in ASGI instrumentation (#2300)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621143cac254a19ac290a02",
    "number": 2299,
    "body": "# Description\r\n\r\nRemoves `opentelemetry-instrumentation-aiohttp-server` from libraries list used to [find](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/8daa8ad48108775d8e799a3abc3ed06f84b4c00e/opentelemetry-instrumentation/src/opentelemetry/instrumentation/bootstrap.py#L102-L108) and install instrumentors that match installed Python frameworks at bootstrap.\r\n\r\nFor example: with Opentelemetry 1.23.0/0.44b0, Python 3.9 and aiohttp 3.9.3 in a test environment, I get `RuntimeError` at `opentelemetry-bootstrap`:\r\n\r\n```\r\nERROR: Could not find a version that satisfies the requirement opentelemetry-instrumentation-aiohttp-server==0.44b0 (from versions: none)\r\nERROR: No matching distribution found for opentelemetry-instrumentation-aiohttp-server==0.44b0\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.9/site-packages/opentelemetry/instrumentation/bootstrap.py\", line 35, in wrapper\r\n    return func(package)\r\n  File \"/usr/local/lib/python3.9/site-packages/opentelemetry/instrumentation/bootstrap.py\", line 51, in _sys_pip_install\r\n    subprocess.check_call(\r\n  File \"/usr/local/lib/python3.9/subprocess.py\", line 373, in check_call\r\n    raise CalledProcessError(retcode, cmd)\r\nsubprocess.CalledProcessError: Command '['/usr/local/bin/python', '-m', 'pip', 'install', '-U', '--upgrade-strategy', 'only-if-needed', 'opentelemetry-instrumentation-aiohttp-server==0.44b0']' returned non-zero exit status 1.\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/usr/local/bin/opentelemetry-bootstrap\", line 8, in <module>\r\n    sys.exit(run())\r\n  File \"/usr/local/lib/python3.9/site-packages/opentelemetry/instrumentation/bootstrap.py\", line 156, in run\r\n    cmd()\r\n  File \"/usr/local/lib/python3.9/site-packages/opentelemetry/instrumentation/bootstrap.py\", line 118, in _run_install\r\n    _sys_pip_install(lib)\r\n  File \"/usr/local/lib/python3.9/site-packages/opentelemetry/instrumentation/bootstrap.py\", line 43, in wrapper\r\n    raise RuntimeError(msg)\r\nRuntimeError: Error calling system command \"/usr/local/bin/python -m pip install -U --upgrade-strategy only-if-needed opentelemetry-instrumentation-aiohttp-server==0.44b0\" for package \"opentelemetry-instrumentation-aiohttp-server==0.44b0\"\r\n```\r\n\r\nThis PR temporarily patches https://github.com/open-telemetry/opentelemetry-python-contrib/issues/2053 until PyPI package is made available.\r\n\r\nRelated to https://github.com/open-telemetry/opentelemetry-python-contrib/pull/2258.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nIn a python:3.9 docker container, I have a FastAPI app that uses aiohttp 3.9.3. I locally installed a working copy of `opentelemetry-instrumentation` and its dependencies (`pip install -Ie <dir>`). The updated `libraries` list stops the `RuntimeError` from happening and bootstrap finishes.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes.\r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "comment-out-aiohttp-server-bootstrap-gen",
    "is_a_fork": true,
    "comments": [
      "Investigating the `generate` failure. EDIT: addressed in [e19b13a](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/2299/commits/e19b13aef8edace4a17faad1e228a878e6494911)",
      "Closing because can be addressed by this existing PR: https://github.com/open-telemetry/opentelemetry-python-contrib/pull/2101"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621143dac254a19ac290a03",
    "number": 2295,
    "body": "Fixes #2208",
    "head_branch": "issue_2208",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove [test] package from mysqlclient instrumentation (#2295)\n\nFixes #2208"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621143dac254a19ac290a04",
    "number": 2294,
    "body": "Fixes #2207",
    "head_branch": "issue_2207",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove [test] package from mysql instrumentation (#2294)\n\nFixes #2207"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621143eac254a19ac290a05",
    "number": 2293,
    "body": "Fixes #2205",
    "head_branch": "issue_2206",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove [test] package from logging instrumentation (#2293)\n\nFixes #2206"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621143fac254a19ac290a06",
    "number": 2292,
    "body": "Fixes #2205",
    "head_branch": "issue_2205",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove [test] package from kafka-python instrumentation (#2292)\n\nFixes #2205"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211440ac254a19ac290a07",
    "number": 2291,
    "body": "Fixes #2204",
    "head_branch": "issue_2204",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove [test] package from jinja2 instrumentation (#2291)\n\nFixes #2204"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211441ac254a19ac290a08",
    "number": 2290,
    "body": "Fixes #2202",
    "head_branch": "issue_2202",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove [test] package from grpc instrumentation (#2290)\n\nFixes #2202"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211442ac254a19ac290a09",
    "number": 2289,
    "body": "Fixes #2201",
    "head_branch": "issue_2201",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove [test] package from fastapi instrumentation (#2289)\n\nFixes #2201"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211443ac254a19ac290a0a",
    "number": 2288,
    "body": "Fixes #2197",
    "head_branch": "issue_2197",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove [test] package from dbapi instrumentation (#2288)\n\nFixes #2197"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211444ac254a19ac290a0b",
    "number": 2287,
    "body": "Fixes #2196",
    "head_branch": "issue_2196",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove [test] package from confluent-kafka instrumentation (#2287)\n\nFixes #2196"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211444ac254a19ac290a0c",
    "number": 2286,
    "body": "Fixes #2195",
    "head_branch": "issue_2195",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove [test] package from celery instrumentation (#2286)\n\nFixes #2195"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211445ac254a19ac290a0d",
    "number": 2285,
    "body": "Fixes #2194",
    "head_branch": "issue_2194",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove [test] package from cassandra instrumentation (#2285)\n\nFixes #2194"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211446ac254a19ac290a0e",
    "number": 2284,
    "body": "Fixes #2193",
    "head_branch": "issue_2193",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove [test] package from botocore instrumentation (#2284)\n\nFixes #2193"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211447ac254a19ac290a0f",
    "number": 2283,
    "body": "Fixes #2227",
    "head_branch": "issue_2227",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove [test] package from wsgi instrumentation (#2283)\n\nFixes #2227"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211448ac254a19ac290a10",
    "number": 2282,
    "body": "Fixes #2225",
    "head_branch": "issue_2225",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove [test] package from urllib instrumentation (#2282)\n\nFixes #2225"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211449ac254a19ac290a11",
    "number": 2281,
    "body": "Fixes #2224",
    "head_branch": "issue_2224",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove [test] package from tortoiseorm instrumentation (#2281)\n\nFixes #2224"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621144aac254a19ac290a12",
    "number": 2280,
    "body": "Fixes #2223",
    "head_branch": "issue_2223",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove [test] package from tornado instrumentation (#2280)\n\nFixes #2223"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621144bac254a19ac290a13",
    "number": 2279,
    "body": "Fixes #2222",
    "head_branch": "issue_2222",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove [test] package from system-metrics instrumentation (#2279)\n\nFixes #2222"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621144cac254a19ac290a14",
    "number": 2278,
    "body": "Fixes #2221",
    "head_branch": "issue_2221",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove [test] package from starlette instrumentation (#2278)\n\nFixes #2221"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621144cac254a19ac290a15",
    "number": 2277,
    "body": "Fixes #2220",
    "head_branch": "issue_2220",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove [test] package from sqlite3 instrumentation (#2277)\n\nFixes #2220"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621144dac254a19ac290a16",
    "number": 2276,
    "body": "Fixes #2217",
    "head_branch": "issue_2217",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove [test] package from requests instrumentation (#2276)\n\nFixes #2217"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621144eac254a19ac290a17",
    "number": 2275,
    "body": "Fixes #2216",
    "head_branch": "issue_2216",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove [test] package from remoulade instrumentation (#2275)\n\nFixes #2216"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621144fac254a19ac290a18",
    "number": 2274,
    "body": "Fixes #2215",
    "head_branch": "issue_2215",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove [test] package from redis instrumentation (#2274)\n\nFixes #2215"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211450ac254a19ac290a19",
    "number": 2273,
    "body": "Fixes #2214",
    "head_branch": "issue_2214",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove [test] package from pyramid instrumentation (#2273)\n\nFixes #2214"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211451ac254a19ac290a1a",
    "number": 2272,
    "body": "Fixes #2213",
    "head_branch": "issue_2213",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove [test] package from pymysql instrumentation (#2272)\n\nFixes #2272"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211452ac254a19ac290a1b",
    "number": 2271,
    "body": "Fixes #2213",
    "head_branch": "issue_2213",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211452ac254a19ac290a1c",
    "number": 2270,
    "body": "Fixes #2213",
    "head_branch": "issue_2213",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211453ac254a19ac290a1d",
    "number": 2269,
    "body": "Fixes #2212",
    "head_branch": "issue_2212",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove [test] package from pymongo instrumentation (#2269)\n\nFixes #2212"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211454ac254a19ac290a1e",
    "number": 2268,
    "body": "Fixes #2212",
    "head_branch": "issue_2212",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211455ac254a19ac290a1f",
    "number": 2267,
    "body": "1. Include message in RELEASING.md to fix SHA for failing `main` builds\r\n2. Fix `build.sh` quotations\r\n3. Change the ordering of validation of PR merging in `release.yml` to run",
    "head_branch": "fix-release",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix various release scripts aspects (#2267)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211456ac254a19ac290a20",
    "number": 2266,
    "body": "# Description\r\n\r\nCurrently with some http middleware (ASGI and WSGI), if you send multiple headers with the same key, only the last value is kept. This is obviously wrong.\r\n\r\n**Subtlety:** [the docs](https://opentelemetry.io/docs/specs/semconv/http/http-spans/#:~:text=is%20not%20recommended.-,The%20attribute%20value%20MUST%20consist%20of%20either%20multiple%20header%20values%20as%20an%20array%20of%20strings%20or%20a%20single%2Ditem%20array%20containing%20a%20possibly%20comma%2Dconcatenated%20string%2C%20depending%20on%20the%20way%20the%20HTTP%20library%20provides%20access%20to%20headers.,-%5B2%5D%3A%20The) allow you to use either a list of header values where the keys are repeated or a single item list with the values comma separated.\r\n\r\nObviously a list of each value would be preferable (no information is lost, easier to reconstruct), however:\r\n* this would means changing the signature of numerous public methods\r\n* and, changing the docstring which perversely (presumably according to some old spec) specificly say you'll get a single item list with values comma seprated\r\n\r\nI've therefor chosen to do the non-breaking but less correct thing so far, happy to change if that's preferred - if so, please let me know how it should be changed.\r\n\r\nI also assume doing it this way avoids issues around `OTEL_SEMCONV_STABILITY_OPT_IN`.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] test are updated\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "avoid-loosing-repeated-headers",
    "is_a_fork": true,
    "comments": [
      "cc @adriangb as we were discussing this.",
      "@aabmass you mentioned in https://github.com/open-telemetry/opentelemetry-python-contrib/pull/2260#issuecomment-1961830196 this this sounds good to you, please could this be reviewed (or at least have tests started).",
      "I have resolved conflicts again, is there anything stopping this from being merged?",
      "@samuelcolvin falcon test cases are failing, please take a look.",
      "> @samuelcolvin falcon test cases are failing, please take a look.\r\n\r\nThanks for reviewing @ocelotl, tests are hopefully now passing. Everything I've run has passed.",
      "> > this would means changing the signature of numerous public methods\r\n> > and, changing the docstring which perversely (presumably according to some old spec) specificly say you'll get a single item list with values comma seprated\r\n> \r\n> @ocelotl @xrmx any thoughts on this?\r\n\r\nNo particular thoughts except that maybe we can track this on a new issue \r\n \r\n> I was actually confused reading the code, because It looks like this signature for [`SanitizeValue.sanitize_header_values()`](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/e923938646341c2ec54d7ba55cb486b1a2b6e7b7/util/opentelemetry-util-http/src/opentelemetry/util/http/__init__.py#L88-L93) is already wrong (it's returning a `dict[str, list[str]]` 😓 Were there other signatures?\r\n\r\nFixing typing is considered breaking compatibility?",
      "> Fixing typing is considered breaking compatibility?\r\n\r\nI would say this is clearly a bug. I think that was the only signature to change but I could be wrong. I also doubt any \"user\" is using these private methods.",
      "Well the methods aren't private, which makes them public IMHO.\r\n\r\nIn Pydantic we've been bitten a lot by people using non-private methods even when they're not documented.\r\n\r\nThe current situation is a definite bug, and this is strictly better than what's on `main`, so I would suggest merging this and discussion further in a new issue?",
      "> Fixing typing is considered breaking compatibility?\r\n\r\n@xrmx To be clear, I'm not talking about just type hints, to fix this \"properly\" we need to change some methods to return `dict[str, str]` to `dict[str, list[str]`.",
      "> @xrmx To be clear, I'm not talking about just type hints, to fix this \"properly\" we need to change some methods to return `dict[str, str]` to `dict[str, list[str]`.\r\n\r\nWhich methods do you mean? I think the existing functions like `collect_custom_headers_attributes()` and `collect_custom_response_headers_attributes()` are already returning `dict[str, list[str]]` because the signature of `sanitize_header_values()` is wrong",
      "I guess you mean this parameter would need to changed https://github.com/open-telemetry/opentelemetry-python-contrib/blob/113d346b5b301d1f198f153a3c5dcdcaba81f5ce/util/opentelemetry-util-http/src/opentelemetry/util/http/__init__.py#L90 I think we could add an overload for a `dict[str, list[str]]` input. Lets move discussion to a new issue",
      "Okay, I'll update those functions to work with header values as lists.",
      "> Okay, I'll update those functions to work with header values as lists.\r\n\r\nOkay, I've re-read. I think this is ready and follow can happen on #2360 and a new PR.",
      "> > Okay, I'll update those functions to work with header values as lists.\r\n> \r\n> Okay, I've re-read. I think this is ready and follow can happen on #2360 and a new PR.\r\n\r\n@samuelcolvin tests are failing, please take a look. @aabmass are we good to merge once these tests are fixed?",
      "> > > Okay, I'll update those functions to work with header values as lists.\r\n> > \r\n> > \r\n> > Okay, I've re-read. I think this is ready and follow can happen on #2360 and a new PR.\r\n> \r\n> @samuelcolvin tests are failing, please take a look. @aabmass are we good to merge once these tests are fixed?\r\n\r\nDisregard, seems like the test case failures are unrelated to this PR. :v:",
      "@ocelotl good to merge?",
      "> @ocelotl good to merge?\r\n\r\ngood to merge :sunglasses: "
    ],
    "commit_messages": [
      "avoid losing repeated HTTP headers (#2266)\n\n* avoid loosing repeated HTTP headers\r\n\r\n* fix fof wsgi, test in falcon\r\n\r\n* add changelog\r\n\r\n* add more tests\r\n\r\n* linting\r\n\r\n* fix falcon and flask\r\n\r\n* remove unused test\r\n\r\n---------\r\n\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211457ac254a19ac290a21",
    "number": 2265,
    "body": "Copy log updates from `release/v1.23.x-0.44bx`.",
    "head_branch": "opentelemetrybot/copy-change-log-updates-from-release-v1.23.x-0.44bx",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Copy change log updates from release/v1.23.x-0.44bx (#2265)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211458ac254a19ac290a22",
    "number": 2263,
    "body": "Prepare release 1.23.0/0.44b0.",
    "head_branch": "opentelemetrybot/prepare-release-1.23.0-0.44b0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Prepare release 1.23.0/0.44b0 (#2263)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211459ac254a19ac290a23",
    "number": 2262,
    "body": "Update version to `1.24.0.dev/0.45b0.dev`.",
    "head_branch": "opentelemetrybot/update-version-to-1.24.0.dev-0.45b0.dev",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Update version to 1.24.0.dev/0.45b0.dev (#2262)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211459ac254a19ac290a24",
    "number": 2260,
    "body": "# Description\r\n\r\nHTTP request and response headers (attributes `http.request.header.*` and `http.response.header.*`) should be normalized by just being converted to lowercase, not replacing underscore with dash.\r\n\r\nThis is made clear in the docs [here](https://opentelemetry.io/docs/specs/semconv/attributes-registry/http/):\r\n\r\n<img width=\"862\" alt=\"image\" src=\"https://github.com/open-telemetry/opentelemetry-python-contrib/assets/4039449/c8900db8-47a9-4fe0-81b2-3684e1a5cc1f\">\r\n<img width=\"893\" alt=\"image\" src=\"https://github.com/open-telemetry/opentelemetry-python-contrib/assets/4039449/37324b1e-a4ea-4b88-b67d-06906ac8f251\">\r\n\r\nYou can also see the correct behavior in the go library [here](https://github.com/open-telemetry/opentelemetry-go-contrib/blob/b39c37112e11b24fdcdef1f55482bdbd70cf1a03/instrumentation/net/http/httptrace/otelhttptrace/clienttrace.go#L341).\r\n\r\nThe current incorrect behavior of `replace('_', '-')` is extremely problematic since you can't know what the original header was - e.g. if you see a key `http.request.header.foo_bar` what was the original value? It could have been `foo-bar` or `foo_bar`.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] replaced all the tests expecting the incorrect behavior\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "fix-http-header-normalization",
    "is_a_fork": true,
    "comments": [
      "Thanks for the PR @samuelcolvin. I did some digging and it looks like the OTel conventions were changed in https://github.com/open-telemetry/semantic-conventions/pull/369 but used to require this normalization. We should definitely fix it, but I think it might need to be gated behind the `OTEL_SEMCONV_STABILITY_OPT_IN` environment variable described [here](https://opentelemetry.io/docs/specs/semconv/http/http-spans/#:~:text=2%20and%20SPDY.-,Warning,-Existing%20HTTP%20instrumentations).\r\n\r\n@lmolkova @lzchen could we merge this PR today or does it need to be controlled by `OTEL_SEMCONV_STABILITY_OPT_IN`? I'm not sure how we could emit `http/dup` if there is only one attribute key in question.",
      "@aabmass \r\n\r\nThis might be a bigger discussion on how we should be handling the new http semantic convention migrations. For now, please hold off on this PR. Will bring this up in the weekly SIG.",
      "@lzchen ok understood, can we at least run tests, so I know it's passing.\r\n\r\nAlso, if this won't get merged yet, could we merge #2266 instead first please? There's no \"http semantic convention migrations\" issue there, just a bug.",
      "> can we at least run tests, so I know it's passing.\r\n\r\nRunning now\r\n\r\n> Also, if this won't get merged yet, could we merge #2266 instead first please? There's no \"http semantic convention migrations\" issue there, just a bug.\r\n\r\nThat SGTM as it's just a bug 👍",
      "From discussion of 07/11/2024 SIG, just an update on what is blocking this PR. Some of the instrumentations that this pr touches still has not been migrated to new semantic conventions as of yet, most notably django, falcon, pyramid, starlette and tornado. Since `django` is the only one remaining for the [stable http semantic migration plan](https://github.com/open-telemetry/opentelemetry-python-contrib/issues/2453), once that instrumentation is migrated, we can go ahead with this change as we have agreed that it is fine to make breaking/semantic convention changes outright to the other instrumentations since they are all in beta."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621145aac254a19ac290a25",
    "number": 2259,
    "body": "# Description\r\n\r\nJust fixes the broken URL to the aio-pika page. ",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: emanuelef / name: Emanuele Fumagalli  (e453f05f86dc6b3938d3d03be0bdd003b62d1dd1, 4521f6c8c62f159654276d291d1f2e80fb08d9e5, 9fbe23256806075dc29166eb0a22099e6dacf0e5)</li><li>:white_check_mark: login: lzchen / name: Leighton Chen  (73501a93902a6f60acf7bf63761122956de70e26)</li></ul>"
    ],
    "commit_messages": [
      "Fix OpenTelemetry Aio-pika instrumentation link (#2259)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621145bac254a19ac290a26",
    "number": 2258,
    "body": "Removing `opentelemetry-instrumentation-aiohttp-server` and `opentelemetry-resource-detector-container` from being erroneously uploaded in our release script.\r\n\r\nAlso skipping `opentelemetry-resource-detector-azure` as Azure maintainers have informed us they are currently releasing this package manually.\r\n\r\nSee https://github.com/open-telemetry/opentelemetry-python-contrib/issues/2053 for details.",
    "head_branch": "script",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Skipping certain folders in release script (#2258)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621145cac254a19ac290a27",
    "number": 2257,
    "body": "Fixes #2256",
    "head_branch": "issue_2256",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove werkzeug from Flask instrumentation dependencies (#2257)\n\nFixes #2256"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621145dac254a19ac290a28",
    "number": 2254,
    "body": "# Description\r\n\r\nhttps://github.com/open-telemetry/opentelemetry-python-contrib/issues/2177\r\n\r\nFixes # 2177\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] New feature (non-breaking change which adds functionality)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nUsed custom AWS Sigv4 authentication object to export metrics to Amazon Managed Prometheus service directly, as the following code:\r\n\r\n```\r\n    from opentelemetry.sdk.metrics import MeterProvider\r\n    from opentelemetry.sdk.metrics.export import PeriodicExportingMetricReader\r\n    from opentelemetry.exporter.prometheus_remote_write import (\r\n    PrometheusRemoteWriteMetricsExporter,\r\n)\r\n    from requests_auth_aws_sigv4 import AWSSigV4\r\n\r\n    aws_auth = AWSSigV4('aps',\r\n        aws_access_key_id=AWS_ACCESS_KEY_ID,\r\n        aws_secret_access_key=AWS_SECRET_ACCESS_KEY,\r\n        region='eu-west-1',\r\n    )\r\n    exporter = PrometheusRemoteWriteMetricsExporter(\r\n        endpoint='REMOTE_WRITE_ENDPOINT',\r\n        headers={},\r\n        auth=aws_auth, \r\n    )\r\n\r\n    reader = PeriodicExportingMetricReader(exporter, 1000)\r\n    provider = MeterProvider(metric_readers=[reader])\r\n\r\n    FlaskInstrumentor().instrument_app(app, meter_provider=provider)\r\n```\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "angelotessaro-issue_2177",
    "is_a_fork": true,
    "comments": [
      " <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/220524743/2254/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-missing-id.svg\" alt=\"CLA Missing ID\" align=\"left\" height=\"28\" width=\"328\"></a> <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/220524743/2254/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-not-signed.svg\" alt=\"CLA Not Signed\" align=\"left\" height=\"28\" width=\"328\"></a><br/><br /><ul><li>:white_check_mark: login: ocelotl / name: Diego Hurtado  (7119a8636a0f3a8b5719800181b3035f1e13a137)</li><li> :x: The email address for the commit (0691243c78fc070b7fb710c3d4760d0e68df6e00) is not linked to the GitHub account, preventing the EasyCLA check. Consult <a href='https://confluence.linuxfoundation.org/pages/viewpage.action?pageId=86641302' target='_blank'>this Help Article</a> and <a href='https://help.github.com/en/github/committing-changes-to-your-project/why-are-my-commits-linked-to-the-wrong-user' target='_blank'>GitHub Help</a> to resolve. (To view the commit's email address, add .patch at the end of this PR page's URL.) For further assistance with EasyCLA, <a href='https://jira.linuxfoundation.org/servicedesk/customer/portal/4' target='_blank'>please submit a support request ticket</a>.</li></ul><!-- Date Modified: 2024-06-28 20:23:33.548039 -->",
      "@angelotessaro please sign the CLA"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621145eac254a19ac290a29",
    "number": 2253,
    "body": "# Description\r\nAt the current stage, Python OpenTelemetry does not support thread instrumentation. It is unable to pass the correct context in the execution thread context, leading to broken trace-IDs when users invoke threads. This results in the inability to properly trace operations.\r\n\r\nFixes #737\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nI have written the `test_threading.py` file for testing, which includes `threading.Thread` and `threading.Timer`, and have also used `futures.ThreadPoolExecutor` for testing.\r\n\r\n- [x] tox -e test-instrumentation-threading\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "otel-threading",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: changemyminds / name: Changemyminds  (57bd9c092e974ebe3a29b7997f147e65f8d6808f, 016101e8cf8d0cdf2bc37edc2bc823279fef868f, 0f9a25cabbcda55a9e4f0d482196d53c91dfc90b, fe9e0938fb11069b2ab722127716df59c0b5a283, e7b6d44062b1aab85ef5dfc74bd14d8bcb723396, 1a6767be16d68016014f1130ae92fd899c2f820d, 58a56208009944d5921fbe8a7573175adc135e7f, 707997171a496967867d821c6e91665c287cbe9b, 0b06bb3bce3bd6fc31ffc54f95125f9dd933605a, 3a59dbbadbe20e66d0ec4a38bf3e9afa1aa020cc, cc19d41fe7cb203624db66e6999166237d2b219e, d02b81e689999c7f050a5091eaa5c2e6e57def45, 009641ca024ff949adf075a5f7a07b6b01439c90, 8a5a38a69b391262915037acf80bccc37910befd, 4ce00e0e393f37d41775d7257a2eb63d4543ee1b, f673c6c98d1149ba88e2f2ea78e591def8dda3ad, c4e14a7ff44cd68dda28e99fec8cbf4f474cb2c4, d264789a4fcc825cf39da43c264077f1dfb94b64, 71a2ecb6ed2b32bf139e01286705ddccdc4e73c2)</li><li>:white_check_mark: login: aabmass / name: Aaron Abbott  (d4fce0fe92bde253f11a32817966e0237714db3a)</li></ul>",
      "@changemyminds thanks for the PR. There was a lot of discussion on the other PR that was never merged https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1582. Can you explain how this PR is different or if there is something fundamentally wrong with the other PR? It's been a while so we could all use a refresher",
      "> @changemyminds thanks for the PR. There was a lot of discussion on the other PR that was never merged #1582. Can you explain how this PR is different or if there is something fundamentally wrong with the other PR? It's been a while so we could all use a refresher\r\n\r\nI think the goal of both PRs is the same: they aim to pass the correct context into the execution thread context, but there are some differences.\r\n\r\n- PR #1582 uses a Monkey Patch on the Thread class.\r\n- This PR applies a Monkey Patch via the Thread method and takes the threading timer into consideration.\r\n\r\nI don't know why PR #1582 wasn't merged; that's why I have submitted a new PR. I am trying to make improvements with this one. Should I still wait for another PR? I have used this feature in my project, and it works well.",
      "@srikanthccv you put a lot of effort into reviewing https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1582. Are you OK with moving forward with this PR since that one has gone stale?",
      "I am fine with this. The original author may not be able to take it forward so it's for the best to have someone take over that work and continue. I'd make them co-authors since they spent a non-trivial amount of work on it.",
      "@srikanthccv should I also migrate the unit test case from the #1582 to this PR?",
      "If it adds value and is not already covered by another test please do.",
      "@srikanthccv Done. Please take a look thanks.\r\n![image](https://github.com/open-telemetry/opentelemetry-python-contrib/assets/13563347/404843c5-e801-461d-8194-c62670cedfbc)\r\n",
      "Hi @aabmass, do you have any other suggestions for this PR? Could you help me resolve the conversation if there are no issues or further discussion needed? Thanks.",
      "You can just resolve the conversations once they're addressed. The PR looks good to me",
      "Hi @aabmass could you ask other reviewers to review this PR? If there are no issue, can we merge it? I'm concerned that this PR will be overlooked. Thanks.",
      "Don't be concerned. It will not be ignored as long as there are no open conversations and the requested feedback is addressed.",
      "> Don't be concerned. It will not be ignored as long as there are no open conversations and the requested feedback is addressed.\r\n\r\nThanks for your replying but should I period update the branch in this PR? Because I need to rebbae the branch again and again to ensure the PR is the newer same with the main btanch.",
      "You don't need to unless there are some code conflicts that should be resolved which shouldn't be the case since this is a brand new instrumentation.",
      "> You don't need to unless there are some code conflicts that should be resolved which shouldn't be the case since this is a brand new instrumentation.\r\n\r\nGot it, thanks",
      "Any update news? Should I help to solve the conflicted branch issue?",
      "Yes, please fix the conflicts.",
      "Hi @aabmass , @ocelotl , @lzchen, @srikanthccv , I apologize for the mistake. I accidentally updated the wrong branch when syncing with the `otel-threading` branch, which caused the previous commit about @ocelotl  to disappear. I'm very sorry for the inconvenience.\r\n\r\nI have updated the CHANGELOG.md, fixed the conflicts, and changed the tox.ini test library approach to the pip test-requirements.txt approach. Please help me review it again. Thank you.",
      "@ocelotl with the merge of this PR, does that mean that https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1582 is no longer necessary and should be closed?",
      "> @ocelotl with the merge of this PR, does that mean that #1582 is no longer necessary and should be closed?\r\n\r\nRight, closed #1582, thanks.",
      "Hi All,\r\n\r\nDo we have plans to publish package for this?\r\nhttps://github.com/open-telemetry/opentelemetry-python-contrib/tree/main/instrumentation/opentelemetry-instrumentation-threading\r\n\r\n`pip install opentelemetry-instrumentation-threading`\r\ndoesn't yet resolve any version, not even 0.46b0.dev\r\n\r\n```\r\n└> pip install opentelemetry-instrumentation-threading                                                                                                                                                                       [23/05/24|11:22am]\r\nERROR: Could not find a version that satisfies the requirement opentelemetry-instrumentation-threading (from versions: none)\r\nERROR: No matching distribution found for opentelemetry-instrumentation-threading\r\n\r\nand\r\n\r\n└> pip install -v \"opentelemetry-instrumentation-threading==0.46b0.dev\"                                                                                                                                                      [23/05/24|11:15am]\r\nUsing pip 23.0.1 from /Users/naane/devt/.venv/lib/python3.10/site-packages/pip (python 3.10)\r\nERROR: Could not find a version that satisfies the requirement opentelemetry-instrumentation-threading==0.46b0.dev (from versions: none)\r\nERROR: No matching distribution found for opentelemetry-instrumentation-threading==0.46b0.dev\r\n```\r\n",
      "@nrajb this change is not apart of a release yet but will be part of the next one, 0.46b0."
    ],
    "commit_messages": [
      "feat: add opentelemetry-instrumentation-threading library (#2253)\n\n* feat: add opentelemetry-instrumentation-threading library\r\n\r\n* fix: update python file with black formatter\r\n\r\n* fix: modified title underline too short issue\r\n\r\n* fix: modified library sorted via isort tool\r\n\r\n* fix: modified CHANGELOG.md and remove unused parameter\r\n\r\n* test: migrated unit test cases from the #1582 to this project\r\n\r\n* chroe: updated the tox.ini test commands\r\n\r\n* fix: fixed the lint issue\r\n\r\n* feat: support ThreadPool and update document\r\n\r\n* fix: fixed the lint issue\r\n\r\n* refactor: remove redundant class and simplify capture OTel context usage\r\n\r\n* fix: removed unused parameter\r\n\r\n* test: added a new test case for thread pool\r\n\r\n* fix: remove unused return response\r\n\r\n* refactor: compared the array\r\n\r\n* fix: remove f-string\r\n\r\n* fix: fixed pylint issue\r\n\r\n* fix: test library\r\n\r\n* fix: updated CHANGELOG.md\r\n\r\n---------\r\n\r\nCo-authored-by: Aaron Abbott <aaronabbott@google.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621145fac254a19ac290a2a",
    "number": 2252,
    "body": "Fixes #2192",
    "head_branch": "issue_2192",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove [test] package from boto3sqs instrumentation (#2252)\n\nFixes #2192"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621145fac254a19ac290a2b",
    "number": 2251,
    "body": "Fixes #2191",
    "head_branch": "issue_2191",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove [test] package from boto instrumentation (#2251)\n\nFixes #2191"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211460ac254a19ac290a2c",
    "number": 2250,
    "body": "Fixes #2190",
    "head_branch": "issue_2190",
    "is_a_fork": true,
    "comments": [
      "I need to update the requirements file, marking as draft to prevent accidental merging."
    ],
    "commit_messages": [
      "Remove [test] package from aws-lambda instrumentation (#2250)\n\nFixes #2190"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211461ac254a19ac290a2d",
    "number": 2249,
    "body": "Fixes #2189",
    "head_branch": "issue_2189",
    "is_a_fork": true,
    "comments": [
      "I need to update the requirements file, marking as draft to prevent accidental merging."
    ],
    "commit_messages": [
      "Remove [test] package from asyncpg instrumentation (#2249)\n\nFixes #2189"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211462ac254a19ac290a2e",
    "number": 2248,
    "body": "Fixes #2188",
    "head_branch": "issue_2188",
    "is_a_fork": true,
    "comments": [
      "I need to update the requirements file, marking as draft to prevent accidental merging."
    ],
    "commit_messages": [
      "Remove [test] package from asyncio instrumentation (#2248)\n\nFixes #2188"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211463ac254a19ac290a2f",
    "number": 2247,
    "body": "Fixes #2187",
    "head_branch": "issue_2187",
    "is_a_fork": true,
    "comments": [
      "I need to update the requirements file, marking as draft to prevent accidental merging."
    ],
    "commit_messages": [
      "Remove [test] package from asgi instrumentation (#2247)\n\nFixes #2187"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211464ac254a19ac290a30",
    "number": 2245,
    "body": "# Description\r\n\r\nThis adds a try-except to AwsLambdaInstrumentor in case the instrumented lambda handler function raises an exception. Instrumentor will record an exception event to the span and mark its status as Error. The exception is then re-raised after trace and metrics `force_flush` so telemetry is still exported, and the lambda exception is still raised instead of silenced.\r\n\r\nThis is similar to what some of the other instrumentors are already doing, for example: [requests](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/b6492a7999ebf5bdbad3ff71ceab6288b63e3233/instrumentation/opentelemetry-instrumentation-requests/src/opentelemetry/instrumentation/requests/__init__.py#L219-L230), asgi (via [try-except](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/b6492a7999ebf5bdbad3ff71ceab6288b63e3233/instrumentation/opentelemetry-instrumentation-asgi/src/opentelemetry/instrumentation/asgi/__init__.py#L376-L389) to set attributes and [finally](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/b6492a7999ebf5bdbad3ff71ceab6288b63e3233/instrumentation/opentelemetry-instrumentation-asgi/src/opentelemetry/instrumentation/asgi/__init__.py#L625-L626) to export telemetry).\r\n\r\nFixes [#2246](https://github.com/open-telemetry/opentelemetry-python-contrib/issues/2246)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [X] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [X] Unit tests e.g. `tox -e py39-test-instrumentation-aws-lambda`\r\n- [X] Manual tests: I built [Otel Python lambda layer](https://github.com/open-telemetry/opentelemetry-lambda/tree/main/python) with this update and invoked a lambda function that immediately does `raise Exception`. Exception is parsed into the function response and an instance of [Otel Collector](https://github.com/open-telemetry/opentelemetry-lambda/tree/main/collector) received the spans with error status and events.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "lambda-instrumentor-handler-exceptions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "AwsLambdaInstrumentor handles and re-raises handler function exception (#2245)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211465ac254a19ac290a31",
    "number": 2244,
    "body": "Fixes #2186",
    "head_branch": "issue_2186",
    "is_a_fork": true,
    "comments": [
      "I need to update the requirements file, marking as draft to prevent accidental merging."
    ],
    "commit_messages": [
      "Remove [test] package from aio-pika instrumentation (#2244)\n\nFixes #2186"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211466ac254a19ac290a32",
    "number": 2243,
    "body": "Fixes #2185",
    "head_branch": "issue_2185",
    "is_a_fork": true,
    "comments": [
      "I need to update the requirements file, marking as draft to prevent accidental merging."
    ],
    "commit_messages": [
      "Remove [test] package from aiopg instrumentation (#2243)\n\nFixes #2185"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211467ac254a19ac290a33",
    "number": 2242,
    "body": "Fixes #2184",
    "head_branch": "issue_2184",
    "is_a_fork": true,
    "comments": [
      "I need to update the requirements file, marking as draft to prevent accidental merging."
    ],
    "commit_messages": [
      "Remove [test] package from aiohttp-server instrumentation (#2242)\n\nFixes #2184"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211467ac254a19ac290a34",
    "number": 2241,
    "body": "# Description\r\n\r\nContinuing from the work done in https://github.com/open-telemetry/opentelemetry-python-contrib/pull/2026 by @adriangb, this adds three new keyword parameters to `FastAPIInstrumentor().instrument_app`:\r\n* `http_capture_headers_server_request`\r\n* `http_capture_headers_server_response`\r\n* `http_capture_headers_sanitize_fields`\r\n\r\nAll of course have the same meaning and behavior as in the asgi `OpenTelemetryMiddleware` - they're just passed straight through to that middleware.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nAdded `TestHTTPAppWithCustomHeadersParameters`\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "fastapi-header-parameters",
    "is_a_fork": true,
    "comments": [
      "sorry about that, linting fixed hopefully.",
      "Lgtm too. Please could you fix the Changelog merge conflict that popped up after the 1.23.0 release.",
      "> Lgtm too. Please could you fix the Changelog merge conflict that popped up after the 1.23.0 release.\r\n\r\nThanks, done.",
      "@lzchen I've corrected those things."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211468ac254a19ac290a35",
    "number": 2240,
    "body": "# Description\r\n\r\nThe links used in the contributing.md file had inconsistencies, for example some links were permalinks and others were not.\r\n\r\nFixes #2239\r\n\r\n\r\n**I did not add an entry in the changelog because I did not see it necessary**\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nAs it is a documentation change, it should not be tested\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "feature/update-md-files",
    "is_a_fork": true,
    "comments": [
      "I think this small change doesnt warrants an entry on the changelog, could you take a look? @ocelotl ",
      "Could it be that it has to be merged manually? @lzchen "
    ],
    "commit_messages": [
      "chore: fix md based on rules and fix bad links (#2240)\n\n* chore: fix md based on rules and fix bad links\r\n\r\n* chore: add index to contribuiting and readme files\r\n\r\n---------\r\n\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>\r\nCo-authored-by: Shalev Roda <65566801+shalevr@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211469ac254a19ac290a36",
    "number": 2238,
    "body": "Fixes #2183",
    "head_branch": "issue_2183",
    "is_a_fork": true,
    "comments": [
      "I need to update the requirements file, marking as draft to prevent accidental merging."
    ],
    "commit_messages": [
      "Remove [test] package from aiohttp-client instrumentation (#2238)\n\nFixes #2183"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621146aac254a19ac290a37",
    "number": 2181,
    "body": "# Description\r\n\r\nPkgresource dependency is [deprecated](https://setuptools.pypa.io/en/latest/pkg_resources.html#package-discovery-and-resource-access-using-pkg-resources), on this pr i replaced pkg_resource for importlib.metadata.\r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python-contrib/issues/2180\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Run with tox the unit tests\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "feature/pkgresource-deprecation",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: Rodrigo-Novas  (070d5669d72c1a122d9b24b77bc719c4bd892c25, 9cae8054e85c9d31565c5347c101d51c1362e1bd, 99502c9c27c54baa2d60051283737c5b1618d6c2, 86f56efc15e14a422373408400f191d5c07c4e98, 1358c12722d43d77df611c679ed0839a5880341c, bf10494c688eb6dae1d3e2b6d381fb6e87f0df12, 9750c8ba06d945fcf9b9cb7297b9c57e0e14fd82, 11926dfcaab8ab63f3d619251e7bd07fae12dcb7, bf4491573e20b06814e1a11feeae2d524c7717e3, 780bcd5298721c9e8e9f612dd35a87ba05007e3c, 2364780d5343b418bb1bc59c71b9260384f4d747)</li><li>:white_check_mark: login: ocelotl / name: Diego Hurtado  (8dc274fc876ca7146af8423c3d6044af03559385)</li></ul><!-- Date Modified: 2024-09-23 07:24:57.724563 -->",
      "@Rodrigo-Novas please sign the CLA :v:",
      "Is there an expected ETA on this?",
      "I believe this would also fix:\r\n- https://github.com/open-telemetry/opentelemetry-python-contrib/issues/1970",
      "Hope this gets picked back up! Great work so far!",
      "Hey there! Could you prioritize the code review for this PR? It's for migrating to Python 3.12. Thanks a bunch! :D ",
      "Any ETA on this?\r\nthe package is broken in modern python versions due to undeclared `pkg_resources` usage.",
      "@Rodrigo-Novas \r\n\r\nAre you still working on this? If so we can prioritize getting this reviewed and merged. It is difficult to know what the current status is so please close the conversations that you think have been resolved and note down the open topics that still need to be discussed. Feel free to also join the Python SIG if you want to bring this issue up to the community specifically.",
      "We are also getting hit with this on every unit test run. It would be great to get a fix in.",
      "> @Rodrigo-Novas\r\n> \r\n> Are you still working on this? If so we can prioritize getting this reviewed and merged. It is difficult to know what the current status is so please close the conversations that you think have been resolved and note down the open topics that still need to be discussed. Feel free to also join the Python SIG if you want to bring this issue up to the community specifically.\r\n\r\n@lzchen \r\n\r\nIts ok for me, you can review it!",
      "> We are also getting hit with this on every unit test run. It would be great to get a fix in.\r\n\r\ni will try to fix it",
      "Switching from `pkg_resource` to `importlib.metadata` also helps us to reduce OTEL Python layer Lambda coldstart.",
      "When is this PR expected to be approved and merged?",
      "> When is this PR expected to be approved and merged?\r\n\r\nWhen it's ready",
      "> When is this PR expected to be approved and merged?\r\n\r\nWe are trying to get more eyes on this PR, we realize it is important for many people. The issue at hand here is not particularly easy to solve (kudos to @Rodrigo-Novas for the work so far!) since it deals with replacing an old library with a new one where there is not necessarily a 1:1 relationship between old library and new library components. To make matters even more complicated, the new library has been implemented very inconsistently, so its behavior for Python 3.x is not the same as for Python 3.y.\r\n\r\nWe are working on this and we'll merge as soon as we can :slightly_smiling_face: ",
      "For anyone following - this is currently blocked by (at minimum) https://github.com/open-telemetry/opentelemetry-python/pull/4177, as well as a new release needed for https://github.com/open-telemetry/opentelemetry-python/pull/4181 .  Some of our assumptions in the previous discussions mentioned need to be re-addressed if we swap to relying on the stdlib in python <= 3.11, which will delay this a bit further.",
      "> For anyone following - this is currently blocked by (at minimum) [open-telemetry/opentelemetry-python#4177](https://github.com/open-telemetry/opentelemetry-python/pull/4177), as well as a new release needed for [open-telemetry/opentelemetry-python#4181](https://github.com/open-telemetry/opentelemetry-python/pull/4181) . Some of our assumptions in the previous discussions mentioned need to be re-addressed if we swap to relying on the stdlib in python <= 3.11, which will delay this a bit further.\r\n\r\nWe're keeping importlib_metadata as dependency and PRs run against main of branch of core repo so no need for releases. The current blocker for me is this https://github.com/open-telemetry/opentelemetry-python-contrib/pull/2181#discussion_r1760870946",
      "@xrmx I think this should have been closed by #2871, right?",
      "Closing, since this has been included in #2871. Thanks everyone!"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621146bac254a19ac290a38",
    "number": 2178,
    "body": "I get an error when mocking out the context manager in the current tests.\r\n\r\n![image](https://github.com/open-telemetry/opentelemetry-python-contrib/assets/11580155/a91a1029-fc76-4cef-839a-d833421a97d3)\r\n\r\n1. Fixes tests to properly mock out `urlopen`\r\n2. Fixes tests to use `WINDOWS_ATTRIBUTES` for the windows tests.\r\n3. Extract helper methods `_get_azure_vm_metadata` out of class `_AzureVMMetadataServiceRequestor`\r\n4. Suppress instrumentation for urllib call\r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python-contrib/issues/2179\r\n",
    "head_branch": "vm",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix azure vm resource detector tests/Suppress instrumentation for urllib call (#2178)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621146cac254a19ac290a39",
    "number": 2174,
    "body": "Fixes #2173",
    "head_branch": "issue_2173",
    "is_a_fork": true,
    "comments": [
      "superseded by #2170 "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621146dac254a19ac290a3a",
    "number": 2172,
    "body": "Fixes #2171",
    "head_branch": "issue_2171",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove references to 3.7 (#2172)\n\nFixes #2171"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621146eac254a19ac290a3b",
    "number": 2170,
    "body": "Fixes #2164\r\nFixes #2173",
    "head_branch": "issue_2164",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix celery and urllib tests (#2170)\n\n* Update core SHA\r\n\r\nFixes #2173\r\n\r\n* Fix celery and urllib tests\r\n\r\nFixes #2164"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621146fac254a19ac290a3c",
    "number": 2167,
    "body": "# Description\r\n\r\nThe `opentelemetry-propagator-aws-xray` package uses [`requests`](https://pypi.org/project/requests/) in its tests,\r\n\r\nhttps://github.com/open-telemetry/opentelemetry-python-contrib/blob/8fd2105ceae604cf39a67f1c4dd154753b43fcd1/propagator/opentelemetry-propagator-aws-xray/tests/test_aws_xray_propagator.py#L18\r\n\r\nhttps://github.com/open-telemetry/opentelemetry-python-contrib/blob/8fd2105ceae604cf39a67f1c4dd154753b43fcd1/propagator/opentelemetry-propagator-aws-xray/tests/performance/benchmarks/test_benchmark_aws_xray_propagator.py#L15\r\n\r\nbut lacks a direct dependency on it in the `tests` extra:\r\n\r\nhttps://github.com/open-telemetry/opentelemetry-python-contrib/blob/8fd2105ceae604cf39a67f1c4dd154753b43fcd1/propagator/opentelemetry-propagator-aws-xray/pyproject.toml#L30-L31\r\n\r\nThis has probably not been noticed because there are already test dependencies on `requests` elsewhere in the repository, e.g. in `opentelemetry-instrumentation-fastapi` and in `opentelemetry-exporter-prometheus-remote-write`, so it ends up installed when testing the repository as a whole.\r\n\r\nThis PR simply adds the missing dependency.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nThis was considered too trivial to test.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated **N/A**\r\n- [ ] Unit tests have been added **N/A**\r\n- [ ] Documentation has been updated **N/A**\r\n",
    "head_branch": "xray-test-requests",
    "is_a_fork": true,
    "comments": [
      "I see now that the dependency is also handled in `tox.ini`,\r\n\r\nhttps://github.com/open-telemetry/opentelemetry-python-contrib/blob/8fd2105ceae604cf39a67f1c4dd154753b43fcd1/tox.ini#L475\r\n\r\nbut I don’t see any reason it *shouldn’t* appear in the test extra. Instead, I’m pushing an extra commit that would remove the manual `pip install requests` from `tox.ini`.",
      "Will this PR still be required after https://github.com/open-telemetry/opentelemetry-python-contrib/pull/2320 ?",
      "> Will this PR still be required after #2320 ?\r\n\r\nNo, if the `test` extras are going away, as in #2320, then this PR makes no sense."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621146fac254a19ac290a3d",
    "number": 2163,
    "body": "Fixes #2162",
    "head_branch": "issue_2162",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update core SHA (#2163)\n\nFxes #2162"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211470ac254a19ac290a3e",
    "number": 2161,
    "body": "# Description\r\n\r\nThere are six ways to access the SQS API via `boto3`:\r\n\r\n- `client = boto3.client(\"sqs\")`\r\n- `client = boto3.Session().client(\"sqs\")`\r\n- `sqs = boto3.resource(\"sqs\")`\r\n- `sqs = boto3.Session().resource(\"sqs\")`\r\n- `sqs = boto3.session.Session().client(\"sqs\")`\r\n- `sqs = boto3.session.Session().resource(\"sqs\")`\r\n\r\nThe existing wrapper tied into `boto3.client` to wrap a generated `botocore.client.SQS` class.\r\nThe change here targets the deeper `session.Session.client` method, extending instrumentation to the remaining 5 initialization strategies.\r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python-contrib/issues/1699\r\nFixes https://github.com/open-telemetry/opentelemetry-python-contrib/issues/1996\r\n\r\n## Type of change\r\n\r\n> Note: I'm not sure whether to consider this a bug fix or new feature.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Unit Tests\r\n- [x] Installed patch and sent/received 4 SQS messages (using the 4 methods). Verified message attributes on send, verified span context on receive.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n",
    "head_branch": "boto3sqs/resource",
    "is_a_fork": true,
    "comments": [
      "Just a note: Read through the relevant boto3 source and optimized this a bit from the initial commit."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211471ac254a19ac290a3f",
    "number": 2160,
    "body": "# Description\r\n\r\nFedora 40 will ship with SQLAlchemy 2. A `python-sqlalchemy1.4` compat package will be available for now, but the idea is that this should be a temporary stopgap.\r\n\r\nCurrently, there are 17 test failures with SQLAlchemy 2.0.25, all similar to the one represented at the end of the PR text. This PR fixes them all by ensuring that plain-text query strings in the tests are always wrapped in `sqlalchemy.text()`. It also updates an example in a doc-string.\r\n\r\nNote that no changes were required to the actual library implementation.\r\n\r\nFixes # (**I did not file an issue.**)\r\n\r\n## Type of change\r\n\r\nIt’s hard to say whether to characterize this as a bug fix, a new feature, or neither, since it primarily just expands compatibility in the tests. There is certainly no breaking change, and I don’t think it requires a documentation update.\r\n\r\n# How Has This Been Tested?\r\n\r\nI applied this as a patch to the [`python-opentelemetry-contrib` package](https://src.fedoraproject.org/rpms/python-opentelemetry-contrib) and confirmed it fixed the test failures. You can test it by running the sqlalchemy instrumentation tests with SQLAlchemy 2.x in whatever way makes the most sense to you.\r\n\r\nI could try adding testing with SQLAlchemy 2.x to `tox.ini`, but this is a little hard for me to test locally, especially the Docker part.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated **No, should I?**\r\n- [ ] Unit tests have been added **N/A, this fixes tests**\r\n- [ ] Documentation has been updated **N/A**\r\n\r\nSample test failure (before this PR):\r\n\r\n```\r\n___________ TestSqlalchemyInstrumentation.test_create_engine_wrapper ___________\r\n\r\nself = <sqlalchemy.engine.base.Connection object at 0x7f87397c7c80>\r\nstatement = 'SELECT\\t1 + 1;', parameters = None\r\n\r\n    def execute(\r\n        self,\r\n        statement: Executable,\r\n        parameters: Optional[_CoreAnyExecuteParams] = None,\r\n        *,\r\n        execution_options: Optional[CoreExecuteOptionsParameter] = None,\r\n    ) -> CursorResult[Any]:\r\n        r\"\"\"Executes a SQL statement construct and returns a\r\n        :class:`_engine.CursorResult`.\r\n    \r\n        :param statement: The statement to be executed.  This is always\r\n         an object that is in both the :class:`_expression.ClauseElement` and\r\n         :class:`_expression.Executable` hierarchies, including:\r\n    \r\n         * :class:`_expression.Select`\r\n         * :class:`_expression.Insert`, :class:`_expression.Update`,\r\n           :class:`_expression.Delete`\r\n         * :class:`_expression.TextClause` and\r\n           :class:`_expression.TextualSelect`\r\n         * :class:`_schema.DDL` and objects which inherit from\r\n           :class:`_schema.ExecutableDDLElement`\r\n    \r\n        :param parameters: parameters which will be bound into the statement.\r\n         This may be either a dictionary of parameter names to values,\r\n         or a mutable sequence (e.g. a list) of dictionaries.  When a\r\n         list of dictionaries is passed, the underlying statement execution\r\n         will make use of the DBAPI ``cursor.executemany()`` method.\r\n         When a single dictionary is passed, the DBAPI ``cursor.execute()``\r\n         method will be used.\r\n    \r\n        :param execution_options: optional dictionary of execution options,\r\n         which will be associated with the statement execution.  This\r\n         dictionary can provide a subset of the options that are accepted\r\n         by :meth:`_engine.Connection.execution_options`.\r\n    \r\n        :return: a :class:`_engine.Result` object.\r\n    \r\n        \"\"\"\r\n        distilled_parameters = _distill_params_20(parameters)\r\n        try:\r\n>           meth = statement._execute_on_connection\r\nE           AttributeError: 'str' object has no attribute '_execute_on_connection'\r\n\r\n/usr/lib64/python3.12/site-packages/sqlalchemy/engine/base.py:1412: AttributeError\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nself = <tests.test_sqlalchemy.TestSqlalchemyInstrumentation testMethod=test_create_engine_wrapper>\r\n\r\n    def test_create_engine_wrapper(self):\r\n        SQLAlchemyInstrumentor().instrument()\r\n        from sqlalchemy import create_engine  # pylint: disable-all\r\n    \r\n        engine = create_engine(\"sqlite:///:memory:\")\r\n        cnx = engine.connect()\r\n>       cnx.execute(\"SELECT\t1 + 1;\").fetchall()\r\n\r\ninstrumentation/opentelemetry-instrumentation-sqlalchemy/tests/test_sqlalchemy.py:159: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nself = <sqlalchemy.engine.base.Connection object at 0x7f87397c7c80>\r\nstatement = 'SELECT\\t1 + 1;', parameters = None\r\n\r\n    def execute(\r\n        self,\r\n        statement: Executable,\r\n        parameters: Optional[_CoreAnyExecuteParams] = None,\r\n        *,\r\n        execution_options: Optional[CoreExecuteOptionsParameter] = None,\r\n    ) -> CursorResult[Any]:\r\n        r\"\"\"Executes a SQL statement construct and returns a\r\n        :class:`_engine.CursorResult`.\r\n    \r\n        :param statement: The statement to be executed.  This is always\r\n         an object that is in both the :class:`_expression.ClauseElement` and\r\n         :class:`_expression.Executable` hierarchies, including:\r\n    \r\n         * :class:`_expression.Select`\r\n         * :class:`_expression.Insert`, :class:`_expression.Update`,\r\n           :class:`_expression.Delete`\r\n         * :class:`_expression.TextClause` and\r\n           :class:`_expression.TextualSelect`\r\n         * :class:`_schema.DDL` and objects which inherit from\r\n           :class:`_schema.ExecutableDDLElement`\r\n    \r\n        :param parameters: parameters which will be bound into the statement.\r\n         This may be either a dictionary of parameter names to values,\r\n         or a mutable sequence (e.g. a list) of dictionaries.  When a\r\n         list of dictionaries is passed, the underlying statement execution\r\n         will make use of the DBAPI ``cursor.executemany()`` method.\r\n         When a single dictionary is passed, the DBAPI ``cursor.execute()``\r\n         method will be used.\r\n    \r\n        :param execution_options: optional dictionary of execution options,\r\n         which will be associated with the statement execution.  This\r\n         dictionary can provide a subset of the options that are accepted\r\n         by :meth:`_engine.Connection.execution_options`.\r\n    \r\n        :return: a :class:`_engine.Result` object.\r\n    \r\n        \"\"\"\r\n        distilled_parameters = _distill_params_20(parameters)\r\n        try:\r\n            meth = statement._execute_on_connection\r\n        except AttributeError as err:\r\n>           raise exc.ObjectNotExecutableError(statement) from err\r\nE           sqlalchemy.exc.ObjectNotExecutableError: Not an executable object: 'SELECT\\t1 + 1;'\r\n\r\n/usr/lib64/python3.12/site-packages/sqlalchemy/engine/base.py:1414: ObjectNotExecutableError\r\n```",
    "head_branch": "sqlalchemy2",
    "is_a_fork": true,
    "comments": [
      "async tests should probably also be changed from 1.4 to 1.4 and 2+. E.g: https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/instrumentation/opentelemetry-instrumentation-sqlalchemy/tests/test_sqlalchemy.py#L283",
      "> async tests should probably also be changed from 1.4 to 1.4 and 2+. E.g: https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/instrumentation/opentelemetry-instrumentation-sqlalchemy/tests/test_sqlalchemy.py#L283\r\n\r\nThanks. That’s a great suggestion. I’m pushing an additional commit that enables these for “1.4 and later,”  using `packaging.version.parse()` the same way it’s already used in\r\n\r\nhttps://github.com/open-telemetry/opentelemetry-python-contrib/blob/47caeab7aff47070c565cd90536a39ec5eb06f34/instrumentation/opentelemetry-instrumentation-sqlalchemy/src/opentelemetry/instrumentation/sqlalchemy/__init__.py#L101\r\n\r\nand\r\n\r\nhttps://github.com/open-telemetry/opentelemetry-python-contrib/blob/47caeab7aff47070c565cd90536a39ec5eb06f34/instrumentation/opentelemetry-instrumentation-sqlalchemy/src/opentelemetry/instrumentation/sqlalchemy/__init__.py#L188",
      "Rebased on `main` without changes."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211472ac254a19ac290a40",
    "number": 2159,
    "body": "# Description\r\n\r\nClose the request span after publishing the metrics to allow exemplar generation.\r\n\r\nFixes #2158 \r\n\r\n## Type of change\r\n\r\n- New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nTBD\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: AlexisBRENON / name: Alexis BRENON  (fe3e35afc304c3c8fafb391c644b4a125e8a9b05)</li></ul>",
      "@thanks for the PR, could you please rebase on latest main and fix conflicts please?",
      "Should I update it to make exemplars available as soon as it is in the SDK ?\r\nElse, we should probably close the PR.",
      "@AlexisBRENON Please reopen once exemplars are available in the SDK."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211473ac254a19ac290a41",
    "number": 2153,
    "body": "Ensure that we are cleaning up spans and contexts in the case that user-provided hooks raise an exception.\r\n\r\n# Description\r\n\r\nThis change ensures that we are properly cleaning up spans and context tokens in the case that user-provided request/response hooks raise an exception. The motivation is a recent issue we had in one of our services where our request_hook unexpectedly raised an exception due to a type error and caused spans to leak.\r\n\r\n[slack thread with more context](https://cloud-native.slack.com/archives/C01PD4HUVBL/p1706904949654209)\r\n\r\nFixes # (issue): N/A\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nAdded new test cases to ensure that request/response hook exceptions don't cause spans to leak and are handled appropriately. \r\n\r\n- TestMiddleware.test_request_hook_exception\r\n- TestMiddleware.test_response_hook_exception\r\n\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: ebracho / name: Eddie Bracho  (8200f0bca3ba6471bffed466efd6eb22a1e3698d, aed8370b317699ff24fd58a67d88e4231445d54f, 354405dd4625ef1b7e5ca93f70be1a77bd3c6e62, 8acfdceba96761a95f1f351a4eb474c11aae2b56, 68cce000d4bd5f1df9cbef6c6133da347d1df685, 2bcfc6ca823ea937924c49f43718d51c4736945f, 41e5fffd126d7e8e6a333cc732cc67c1664b878a)</li><li>:white_check_mark: login: lzchen / name: Leighton Chen  (af00dd8f4d93ea119333f30a2fe999ba476e7f72, cafb6fb8ae5954dca5bdd575a6f8e14dfc2bfb67)</li><li>:white_check_mark: login: ocelotl / name: Diego Hurtado  (6c9595b6395e33a73ef7a35642d137936ee74252)</li></ul><!-- Date Modified: 2024-07-02 18:32:55.473396 -->",
      "I think we need to first answer the question: do we want to capture and handle exceptions and exception information for errors that occur in user supplied hooks? Is span information pertaining to misconfigured hooks something of substance to capture in a span and as telemetry?\r\n\r\n@aabmass @ocelotl  @srikanthccv \r\n\r\nThoughts?",
      "> I think we need to first answer the question: do we want to capture and handle exceptions and exception information for errors that occur in user supplied hooks? Is span information pertaining to misconfigured hooks something of substance to capture in a span and as telemetry?\r\n> \r\n> @aabmass @ocelotl @srikanthccv\r\n> \r\n> Thoughts?\r\n\r\nLooks like there’s some guidance on this in the OpenTelemetry spec: https://github.com/open-telemetry/opentelemetry-specification/blob/6fd4f0809bcff0ea5c4abe161803b4ad8628375e/specification/error-handling.md?plain=1#L24\r\n\r\nAt the very least I would expect spans created by an instrumentor to always be closed by that instrumentor regardless of whether an exception occurs. ",
      "@ebracho \r\n\r\nI agree with the \"handling exception\" portion, I am just not sure about the \"capturing telemetry information\" part about the exception itself in the span.",
      "I think we should log the exception and move on. This is our approach to all unexpected things that happen during instrumentation/export/recording metrics et al.",
      "@ebracho Please also update the branch with latest main to add the changelog entry to Unreleased and not 1.23.0.",
      "For some reason I'm having trouble running tox locally after one of the merges 🤔\r\n\r\n```\r\n(py311-test-instrumentation-django-3) eddiebracho@FRVG2M7F2Q-eddiebracho opentelemetry-python-contrib % tox -e lint\r\nlint recreate: /Users/eddiebracho/lib/opentelemetry-python-contrib/.tox/lint\r\nlint installdeps: -rdev-requirements.txt\r\nlint installed: alabaster==0.7.16,astroid==3.0.3,attrs==23.2.0,Babel==2.14.0,black==22.3.0,bleach==4.1.0,certifi==2024.2.2,charset-normalizer==3.3.2,click==8.1.7,codespell==2.1.0,coverage==7.4.4,dill==0.3.8,docutils==0.20.1,flake8==6.1.0,flaky==3.7.0,httpretty==1.1.4,idna==3.6,imagesize==1.4.1,iniconfig==2.0.0,isort==5.12.0,Jinja2==3.1.3,MarkupSafe==2.1.5,mccabe==0.7.0,mypy==0.931,mypy-extensions==1.0.0,nh3==0.2.17,packaging==24.0,pathspec==0.12.1,platformdirs==4.2.0,pluggy==1.4.0,protobuf==3.20.3,py==1.11.0,pycodestyle==2.11.1,pyflakes==3.1.0,Pygments==2.17.2,pylint==3.0.2,pytest==7.1.3,pytest-cov==4.1.0,readme-renderer==42.0,requests==2.31.0,ruamel.yaml==0.17.21,six==1.16.0,snowballstemmer==2.2.0,Sphinx==7.1.2,sphinx-autodoc-typehints==1.25.2,sphinx-rtd-theme==2.0.0rc4,sphinxcontrib-applehelp==1.0.8,sphinxcontrib-devhelp==1.0.6,sphinxcontrib-htmlhelp==2.0.5,sphinxcontrib-jquery==4.1,sphinxcontrib-jsmath==1.0.1,sphinxcontrib-qthelp==1.0.7,sphinxcontrib-serializinghtml==1.1.10,tomli==2.0.1,tomlkit==0.12.4,typing_extensions==4.10.0,urllib3==2.2.1,webencodings==0.5.1\r\nlint run-test-pre: PYTHONHASHSEED='484165117'\r\nlint run-test-pre: commands[0] | python -m pip install 'git+https://github.com/open-telemetry/opentelemetry-python.git@main\\'\r\nCollecting git+https://github.com/open-telemetry/opentelemetry-python.git@main\\\r\n  Cloning https://github.com/open-telemetry/opentelemetry-python.git (to revision main\\) to /private/var/folders/vh/qk269rmx5vlg70ghbmp9ht4h0000gp/T/pip-req-build-e256j3e7\r\n  Running command git clone --filter=blob:none --quiet https://github.com/open-telemetry/opentelemetry-python.git /private/var/folders/vh/qk269rmx5vlg70ghbmp9ht4h0000gp/T/pip-req-build-e256j3e7\r\n  WARNING: Did not find branch or tag 'main\\', assuming revision or ref.\r\n  Running command git checkout -q 'main\\'\r\n  error: pathspec 'main\\' did not match any file(s) known to git\r\n  error: subprocess-exited-with-error\r\n  \r\n  × git checkout -q 'main\\' did not run successfully.\r\n  │ exit code: 1\r\n  ╰─> See above for output.\r\n  \r\n  note: This error originates from a subprocess, and is likely not a problem with pip.\r\nerror: subprocess-exited-with-error\r\n\r\n× git checkout -q 'main\\' did not run successfully.\r\n│ exit code: 1\r\n╰─> See above for output.\r\n\r\nnote: This error originates from a subprocess, and is likely not a problem with pip.\r\nERROR: InvocationError for command /Users/eddiebracho/lib/opentelemetry-python-contrib/.tox/lint/bin/python -m pip install 'git+https://github.com/open-telemetry/opentelemetry-python.git@main\\' (exited with code 1)\r\n_____________________________________________________________________________________________ summary _____________________________________________________________________________________________\r\nERROR:   lint: commands failed\r\n```",
      "@ebracho tox -e lint works fine here with tox 4.14.1. What version do you have? are you on macos?",
      "@ebracho I fixed lint issues and solved conflicts with main, one test case is failing, please take a look.",
      "@ocelotl thank you, I fixed the unit tests and an outdated comment. \r\n\r\nAlso I figured out my tox issues - I'm not exactly sure what what going on but installing and running tox under a fresh virtualenv did the trick. ",
      "thanks everyone 🙏 "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211474ac254a19ac290a42",
    "number": 2152,
    "body": "Fixes #2151",
    "head_branch": "issue_2151",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Drop support for 3.7 (#2152)\n\n* Drop support for 3.7\r\n\r\nFixes #2151\r\n\r\n* Remove 37"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211475ac254a19ac290a43",
    "number": 2150,
    "body": "# Description\r\n\r\nFixes an issue seen in production where the elasticsearch bulk API would end up sending a list through this code path and not a dictionary.\r\n\r\nFor example:\r\n\r\n```\r\nFile \\\"/code/platform_be/core/logic/ingest.py\\\", line 378, in update_source_doc_version_history\r\n        bulk(es_client, bulk_es_updates)\r\n      File \\\"/opt/python/lib/python3.10/site-packages/elasticsearch/helpers/actions.py\\\", line 521, in bulk\r\n        for ok, item in streaming_bulk(\r\n      File \\\"/opt/python/lib/python3.10/site-packages/elasticsearch/helpers/actions.py\\\", line 436, in streaming_bulk\r\n        for data, (ok, info) in zip(\r\n      File \\\"/opt/python/lib/python3.10/site-packages/elasticsearch/helpers/actions.py\\\", line 339, in _process_bulk_chunk\r\n        resp = client.bulk(*args, operations=bulk_actions, **kwargs)  # type: ignore[arg-type]\r\n      File \\\"/opt/python/lib/python3.10/site-packages/elasticsearch/_sync/client/utils.py\\\", line 414, in wrapped\r\n        return api(*args, **kwargs)\r\n      File \\\"/opt/python/lib/python3.10/site-packages/elasticsearch/_sync/client/__init__.py\\\", line 704, in bulk\r\n        return self.perform_request(  # type: ignore[return-value]\r\n      File \\\"/opt/python/lib/python3.10/site-packages/elasticsearch/_sync/client/_base.py\\\", line 285, in perform_request\r\n        meta, resp_body = self.transport.perform_request(\r\n      File \\\"/opt/python/lib/python3.10/site-packages/opentelemetry/instrumentation/elasticsearch/__init__.py\\\", line 242, in wrapper\r\n        attributes[SpanAttributes.DB_STATEMENT] = sanitize_body(\r\n      File \\\"/opt/python/lib/python3.10/site-packages/opentelemetry/instrumentation/elasticsearch/utils.py\\\", line 58, in sanitize_body\r\n        flatten_body = _flatten_dict(body)\r\n      File \\\"/opt/python/lib/python3.10/site-packages/opentelemetry/instrumentation/elasticsearch/utils.py\\\", line 31, in _flatten_dict\r\n        for k, v in d.items():\r\n    AttributeError: 'list' object has no attribute 'items'\"\r\n```\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Unit tests\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "Hi @lzchen / @ocelotl / @shalevr -- Is there anything I can do to help move this forward?  This is preventing us from using ES instrumentation in our service.  Thanks!",
      "Hello! I maintain the elasticsearch and elastic-transport packages at Elastic (and am actually working on native instrumentation - see https://github.com/elastic/elasticsearch-py/issues/2435). That said, I'm new to OpenTelemetry and I've never contributed to opentelemtry-python-contrib.\r\n\r\nWhile most Elasticsearch APIs accept dictionaries, indeed the [bulk API](https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-bulk.html) accepts a list of dictionaries, as you found out. However, the [Semantic Conventions for Elasticsearch](https://opentelemetry.io/docs/specs/semconv/database/elasticsearch/) define `db.statement` as follows:\r\n\r\n> The request body for a [search-type query](https://www.elastic.co/guide/en/elasticsearch/reference/current/search.html), as a json string.\r\n\r\nThis makes sense. The bulk API can be used to send arbitrarily large amount of data, and you would not want that to be part of your span attributes. I believe the correct fix here is to only set `db.statement` when one of those APIs is used: Search, Async search, Multi search, EQL search, ES|QL query, Terms enum, Search template, Multi search template or Render search template. This isn't very easy to do in opentelemetry-python-contrib because the client does not pass the name of the endpoint to the transport (yet, I'm working on it). Which means it has to be guessed from the URL.\r\n\r\nI guess an easy way out here could also be to *not* set `db.statement` for bulk requests, which would solve your immediate issue, but would still not be compliant.",
      "> I guess an easy way out here could also be to _not_ set `db.statement` for bulk requests, which would solve your immediate issue, but would still not be compliant.\r\n\r\nThanks for the context @pquentin -- I assume that the path forward for us would be to either wait for your native instrumentation or to do a stopgap fix here.  From what you described it sounds like the stopgap is to just not generate any data if `db.statement` happens to be a list.  This feels a bit like a heuristic, but if you think it's OK stopgap I'm happy to implement this.",
      "Native instrumentation will only be available with a future version of elasticsearch-py, so I think you want to keep the existing instrumentation for older versions? (Though it would be nice to automatically disable for newer versions maybe? But it would be a breaking change since the native implementation follows the semantic convention which probably did not exist when this repo was started.)\r\n\r\nRegarding the fix, the proper fix is definitely inspecting the URL to figure out if the request is a search request, but I also offered the stopgap as way to fix the most pressing issue with less effort. It's really up to you to decide what you implement! (But if you do ping me in the pull request, I'll be happy to take a look.)",
      "Made this change much simpler and ran tests with `CORE_REPO_SHA=a1253585f66d63e7c05a19f070f3bfe0ab6460c1 tox3 -e py311-test-instrumentation-elasticsearch-6` -- @pquentin or @xrmx if you have ideas on how to test this I'm all ears, or is this good enough?",
      "Ok, I'll look into adding a simple test",
      "@silverjam I can write the tests but I need from you an example of the elastic client call that send a bulk request please.\r\n\r\nUPDATE: ah sending more than one item in the bulk iteratable was enough :)",
      "> @silverjam I can write the tests but I need from you an example of the elastic client call that send a bulk request please.\r\n> \r\n> UPDATE: ah sending more than one item in the bulk iteratable was enough :)\r\n\r\nThanks, if it helps anyway, our calls look something like this:\r\n\r\n```python\r\nfrom elasticsearch.helpers import bulk\r\n# ...\r\n    bulk_es_updates = []\r\n    updated_previous_source_docs = []\r\n    for previous_source_doc in previous_source_docs:\r\n        if cast(bool, previous_source_doc.is_latest_version):\r\n            previous_source_doc.is_latest_version = False\r\n            updated_previous_source_docs.append(previous_source_doc)\r\n            bulk_es_updates.append(\r\n                {\r\n                    \"_op_type\": \"update\",\r\n                    \"_index\": ES_SOURCE_DOC_ALIAS,\r\n                    \"_id\": str(previous_source_doc.id),\r\n                    \"doc\": {\"is_latest_version\": False},\r\n                }\r\n            )\r\n# ...\r\n    es_client = get_es_client()\r\n    if bulk_es_updates:\r\n        bulk(es_client, bulk_es_updates)\r\n```",
      "Closing in favor of #2355 "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211476ac254a19ac290a44",
    "number": 2148,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "jmob/es-bulk-api",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211477ac254a19ac290a45",
    "number": 2147,
    "body": "# Description\r\n\r\nFixes link to [OpenTelemetry kafka-python Integration](https://opentelemetry-python-contrib.readthedocs.io/en/latest/instrumentation/kafka_python/kafka_python.html) in `opentelemetry-python-contrib/tree/main/instrumentation/opentelemetry-instrumentation-kafka-python/README.rst`\r\n\r\n## Type of change\r\n\r\n- [X] Documentation fix\r\n\r\n# How Has This Been Tested?\r\n\r\nI clicked the link and checked it opened the correct documentation\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix-link-to-openTelemetry-kafka-python-instrumentation",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: brunobastosg / name: Bruno Guimarães  (81ade3f9ced4cc8b1f2e2f1b0cbf7966be0a37e7)</li><li>:white_check_mark: login: shalevr / name: Shalev Roda  (f009d1ff3a887ed428b4068f953360217ef37172)</li></ul>"
    ],
    "commit_messages": [
      "Fix link to OpenTelemetry kafka-python Instrumentation (#2147)\n\nCo-authored-by: Shalev Roda <65566801+shalevr@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211477ac254a19ac290a46",
    "number": 2146,
    "body": "# Description\r\n\r\nAdd psycopg3 Instrumentation including Instrumentation for psycopg3 Asynchronous connection support. The work is derived from psycopg2\r\n\r\ngiven psycopg2 imlementation as foundation This PR \r\n - adds psycopg3 support \r\n - adds asynchronous connection Instrumentation\r\n - adds tests to cover the new asynchronous connections and cursors \r\n \r\nFixes [#1751](https://github.com/open-telemetry/opentelemetry-python-contrib/issues/1751)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Expands the test coverage to include asynchronous connections\r\n- [x] Tests are runnable via tox\r\n- [x] Code is running on internal system in my organization without any known issues. \r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "psycopg3-instrumentation",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: reiktar / name: Markus  (9d2f79b9a93a06f8d221061e2e5e16a3743a5e22, f8c349c5582b6a7e3a1c82ba4a097f0a8b64867d, 953a113ebf2a0e42dfe4da34037a1253ea0add8c, f4abf01a51aa843dbfae56f279c797bad97a332e, b2d490df66ef5e3aa7ca8c6cb958cb924356ebde, 8731ff9700855544cf71b10822c5adbef6b903f7, dc783946737c306075075d93419e82f797882616, 057504a5e833aa9d1feea5bb7bf15433b7243342, dafc58769e32202b39b0136c40935c94ad8cffd8, cf404fa3baeebc0231ff05e80651719d5a952252, 0b12d9b2bf12163e29ad2d7b1525841db8437c20, 02d2295dc14904f0d9c95e3a46811bc3d3f94324, a897b6c0cbd5ccda3f61b3b86c2e85c353f22488, d38532a4aa0d7f5b3d5332f267c666d43046943e, 9098939240e5ebdb64a02bf21c998435d5b6fcea, 09890a4bb6b96eef8f15eea0d88da42bc44bb502, b812e0168f23f72006306222e14baadba5d990e4, 6025de978e299afbaf3a463447a226a562e09c13, 8c95c88f4ca01dabd08453ba4c7cd39806c90b64, f577330d6d1721509e676452e302448c5c4f56a5, f1f17800ce92336c653b53760241bbabd87d0835, 55b6f55305cd4d91e04cd0d71b7aa1d9dfdb320d, 08e0c5069f820c7e5ac9b47bdd972a68a2a2e5e8, 3543b7b3c0f841cd301c2a90cabfb17d9d5be4e5)</li><li>:white_check_mark: login: lzchen / name: Leighton Chen  (dca2adbf800679f49f084737a2b8b108c3c833f4, 9c450f4b69595c7598c0ed5ce86fbb20c8c2cad4)</li><li>:white_check_mark: login: ocelotl / name: Diego Hurtado  (ee377d66ae246b4abebd8eddfd11567c9850359e)</li></ul>",
      "There is already existing PR https://github.com/open-telemetry/opentelemetry-python-contrib/pull/2123 for psycopg3",
      "> There is already existing PR #2123 for psycopg3\r\n\r\nAfter reviewing #2123 the notable difference is instrumentation for Asynchronous connections. This branch/pr contains Instrumentation for all the same changes as #2123 introduces but also extends open-telemetry support for psycopg3 async connections and cursors and test-cases for the asynchronous instrumentation\r\n\r\n",
      "This is great work @reiktar! My initial goal with #2123 was to get _something_ out the door that could be improved later.\r\n\r\nI think it may still make sense to merge #2123 first as it's an almost copy of the existing psycopg2 implementation, then rebase async support on top of it, so reviewing the async code is easier for the maintainers.",
      "@federicobond: Sorry for the late reply.\r\nI see no problem with #2123 going first. I'd eventually like asynchronous psycopg3 support in open telemetry, as my organization relies heavily on async psycopg3. \r\n\r\nWe actively use the async solution in all of our test and production environments but also wanted to contribute to the community. ",
      "Awesome, @ocelotl has asked me to become component owner for the psycopg instrumentation before merging my PR. I promise to review your async code in a timely manner once we get the base support merged in.",
      "Hi @reiktar! Can I ask you to rebase your contribution on top of latest `main`?",
      "@federicobond: I have Updated the PR to expand on the latest main.  ",
      "@aabmass , @xrmx : There were two failed checks\r\n    - One check seems to be unrelated to the changes at hand. \r\n    - The remaining check was pylint of the relevant psycopg code\r\n\r\nWhat's confusing with that change set is that pylint also complains about existing/untouched psycopg code. In any case i have a nre change set resolving the pylint issues ready to go should it be wished for. The PR has gone through several approvals allready so i have held them back for now. Just let me know and I will commit updates for  remaining pylint issues.\r\n\r\n",
      "What remains seems to be a conflict between black formatting and pylint. ",
      "Last run has isort complaining in https://github.com/open-telemetry/opentelemetry-python-contrib/actions/runs/8300772936/job/22719403342?pr=2146#step:7:3359:\r\n\r\n```\r\n--- /home/runner/work/opentelemetry-python-contrib/opentelemetry-python-contrib/instrumentation/opentelemetry-instrumentation-psycopg/src/opentelemetry/instrumentation/psycopg/__init__.py:before\t2024-03-15 18:29:36.777932\r\n+++ /home/runner/work/opentelemetry-python-contrib/opentelemetry-python-contrib/instrumentation/opentelemetry-instrumentation-psycopg/src/opentelemetry/instrumentation/psycopg/__init__.py:after\t2024-03-15 18:35:53.815141\r\n@@ -106,11 +106,11 @@\r\n from typing import Collection\r\n \r\n import psycopg  # pylint: disable=import-self\r\n-from psycopg import (  # pylint: disable=import-self,no-name-in-module\r\n-    AsyncCursor as pg_async_cursor,\r\n+from psycopg import (\r\n+    AsyncCursor as pg_async_cursor,  # pylint: disable=import-self,no-name-in-module\r\n )\r\n-from psycopg import (  # pylint: disable=no-name-in-module,import-self\r\n-    Cursor as pg_cursor,\r\n+from psycopg import (\r\n+    Cursor as pg_cursor,  # pylint: disable=no-name-in-module,import-self\r\n )\r\n from psycopg.sql import Composed  # pylint: disable=no-name-in-module\r\n\r\n ```\r\n\r\nFrom a quick experiment black does not complain about the new version",
      "@reiktar \r\n\r\nAny interest in becoming a component owner as well for this instrumentation?",
      "@lzchen: I'm open to helping out, let me know what i need to do to get onboard. "
    ],
    "commit_messages": [
      "Psycopg3 sync and async instrumentation   (#2146)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211478ac254a19ac290a47",
    "number": 2145,
    "body": "# Description\r\n\r\nAs per https://github.com/open-telemetry/opentelemetry-python-contrib/issues/2055#issuecomment-1918148101 this PR removes the undocumented and non-specific attribute `type` from `opentelemetry-instrumentation-asgi`.\r\n\r\nFixes #2055\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] none so far...\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "remove-asgi-type",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: samuelcolvin / name: Samuel Colvin  (a65d703f686d602ced8cc69367ccfeebe9ab7626, ea30627355f2e9e03eb7a58403288c27788712b0, e25d2cf9e304b46ebbe232ebf7f0431cead51f41, 58f49f29c805d0b566a9bee710376d7664e7fbb7, 3d35f045e5dceb2ef2e1e12a5fa1254ed95db5e8, c7b000df1e524bcc43c35738fc7982d00d4cd466)</li><li>:white_check_mark: login: ocelotl / name: Diego Hurtado  (02634c31d2d5ead70d6d481e8607d54a69894d62)</li></ul>",
      "I'd also be happy to change this to use a [semconv HTTP attribute](https://opentelemetry.io/docs/specs/semconv/attributes-registry/http/), but I couldn't see one that would be appropriate.",
      "Will do.",
      "How about renaming the attribute to `asgi.event.type` or `asgi.message.type`?",
      "Okay, I've fixed tests, but on balance I think I agree with @alexmojaki that we should keep `type` but all it something more descriptive.\r\n\r\n> Could you remove the type attribute from the tests? in the test_asgi_middleware.py file\r\n> \r\n> https://github.com/open-telemetry/opentelemetry-python-contrib/blob/6c13a5eddce4c8446805759bf099a3e79dcd9083/instrumentation/opentelemetry-instrumentation-asgi/tests/test_asgi_middleware.py#L641\r\n\r\nNo, that's the ASGI `type` in an ASGI scope, which has to be there. 🤦 ",
      "> How about renaming the attribute to `asgi.event.type` or `asgi.message.type`?\r\n\r\nYeah. I'd call it `asgi.event.type`, but message and event are used as synonymous in the ecosystem.",
      "replaced by #2300."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211479ac254a19ac290a48",
    "number": 2143,
    "body": "bring in sync\r\n\r\n# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621147aac254a19ac290a49",
    "number": 2141,
    "body": "# Description\r\n\r\nAdds support for the `cloud.account.id`, `cloud.availability_zone`, `cloud.region` and `cloud.resource_id` (see https://github.com/open-telemetry/semantic-conventions/issues/677) resource attributes in the AWS ECS detector when the Metadatav4 endpoint is in use.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [X] Unit tests based on the official Metadatav4 examples by AWS\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [X] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n- [ ] Documentation has been updated -> `N/A`, there is no docs in the AWS SDK extension about which resource attributes are added by which detector.\r\n",
    "head_branch": "aws-ecs-attrs",
    "is_a_fork": true,
    "comments": [
      "@Aneurysm9, @mhausenblas maybe you can expedite this PR somehow? Matching ones have already been merged for [.NET](https://github.com/open-telemetry/opentelemetry-dotnet-contrib/pull/1576), [Go](https://github.com/open-telemetry/opentelemetry-go-contrib/pull/5091), [Java](https://github.com/open-telemetry/opentelemetry-java-contrib/pull/1171/files) and [PHP](https://github.com/open-telemetry/opentelemetry-php-contrib/pull/237) months ago."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621147cac254a19ac290a4a",
    "number": 2139,
    "body": "# Description\r\n\r\nCloses open-telemetry/opentelemetry-python#2993\r\n\r\nA few notes about this handler:\r\n- A similar set up has been used in prod with Signoz\r\n- Some things may be specific to Signoz\r\n- Uses some things from private modules in both `structlog` and `opentelemetry-sdk`\r\n\r\n## TODO\r\n\r\n- [x] Add a new package with the handler/processor\r\n- [ ] Add tests\r\n- [ ] Publish this package to PyPI\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "opentelemetry-structlog",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: Samyak2 / name: Samyak Sarnayak  (8969c0015f04c5a22de0fda4d2b5db04c290f182, 9ca4694cbd909ce7eed0efa8e6d0aac5c2c35688)</li></ul><!-- Date Modified: 2024-07-07 13:47:47.843716 -->",
      "If you're like me and you're trying to figure out how to get this working, here's what I have that seems to be working with honeycomb.io:\r\n\r\n```python\r\nimport socket\r\n\r\nfrom opentelemetry.exporter.otlp.proto.grpc._log_exporter import (\r\n    OTLPLogExporter,\r\n)\r\n\r\n...\r\n\r\n    structlog.configure(\r\n        cache_logger_on_first_use=True,\r\n        wrapper_class=structlog.make_filtering_bound_logger(logging.INFO),\r\n        processors=[\r\n            structlog.contextvars.merge_contextvars,\r\n            structlog.processors.add_log_level,\r\n            # structlog.processors.format_exc_info,\r\n            # structlog.processors.TimeStamper(fmt=\"iso\", utc=True),\r\n            OpenTelemetryExporter(\r\n                os.environ.get(\"OTEL_SERVICE_NAME\") or \"\",\r\n                socket.gethostname(),\r\n                OTLPLogExporter(),\r\n            ),\r\n            structlog.processors.JSONRenderer(serializer=orjson.dumps),\r\n        ],\r\n        logger_factory=structlog.BytesLoggerFactory(),\r\n    )\r\n```\r\n\r\nThat logic needs cleanup but hopefully this helps someone."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621147cac254a19ac290a4b",
    "number": 2137,
    "body": "# Description\r\n\r\nIncrement opentelemetry-resource-detector-azure version to 1.1.2 before release.",
    "head_branch": "resource-detector-azure-release-0.1.2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Increment resource detector version (#2137)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621147dac254a19ac290a4c",
    "number": 2136,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nTemporary fix for https://github.com/open-telemetry/opentelemetry-python/issues/3644\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nManually\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "vm-resource-detector-bug",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update azure resource detector timeout to 4 seconds (#2136)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621147eac254a19ac290a4d",
    "number": 2135,
    "body": "# Description\r\n\r\nThese files do not have the executable bit set in their filesystem permissions (so the shebang line, `#!`, is useless), and they are not script-like (do not have `if __name__ == \"__main__\"` or interesting side-effects), so making them executable would not make sense.\r\n\r\nFixes # (issue) **N/A**\r\n\r\n## Type of change\r\n\r\n**none of the listed types**\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\nI have tested this by inspection only.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated **N/A**\r\n- [ ] Unit tests have been added **N/A**\r\n- [ ] Documentation has been updated **N/A**\r\n",
    "head_branch": "useless-shebangs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove useless shebangs (#2135)\n\nThese files do not have the executable bit set in their filesystem\r\npermissions (so the shebang line, `#!`, is useless), and they are not\r\nscript-like (do not have `if __name__ == \"__main__\"` or interesting\r\nside-effects), so making them executable would not make sense."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621147fac254a19ac290a4e",
    "number": 2134,
    "body": "# Description\r\n\r\nIn the test dependencies for `opentelemetry-instrumentation-falcon`, don’t depend on `parametrized` because `pytest.mark.parametrize` is now included in `pytest`.\r\n\r\nFixes # (issue) **N/A**\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n**no relevant options**\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\nI tested this in a virtual environment as follows:\r\n\r\n```\r\npython3 -m venv _e\r\n. _e/bin/activate\r\ncd opentelemetry-instrumentation\r\npip install .\r\ncd ../../opentelemetry-python/opentelemetry-semantic-conventions\r\npip install .\r\ncd ../../opentelemetry-api\r\npip install .\r\ncd ../opentelemetry-sdk\r\npip install .\r\ncd ../tests/opentelemetry-test-utils\r\npip install .\r\ncd ../../opentelemetry-python-contrib/util/opentelemetry-util-http\r\npip install .\r\ncd ../../instrumentation/opentelemetry-instrumentation-wsgi\r\npip install .\r\ncd ../opentelemetry-instrumentation-falcon\r\npip install -e '.[test]'\r\npip install pytest\r\npython -m pytest\r\n```\r\n\r\nAll tests passed.\r\n\r\n```\r\n=============================== warnings summary ===============================\r\n../../_e/lib64/python3.12/site-packages/falcon/media/__init__.py:4\r\n  /home/ben/src/forks/opentelemetry-python-contrib/_e/lib64/python3.12/site-packages/falcon/media/__init__.py:4: DeprecationWarning: 'cgi' is deprecated and slated for removal in Python 3.13\r\n    from .handlers import Handlers\r\n\r\n../../_e/lib64/python3.12/site-packages/opentelemetry/instrumentation/dependencies.py:4\r\n  /home/ben/src/forks/opentelemetry-python-contrib/_e/lib64/python3.12/site-packages/opentelemetry/instrumentation/dependencies.py:4: DeprecationWarning: pkg_resources is deprecated as an API. See https://setuptools.pypa.io/en/latest/pkg_resources.html\r\n    from pkg_resources import (\r\n\r\ninstrumentation/opentelemetry-instrumentation-falcon/tests/test_falcon.py::TestFalconInstrumentation::test_url_template\r\n  /home/ben/src/forks/opentelemetry-python-contrib/instrumentation/opentelemetry-instrumentation-falcon/src/opentelemetry/instrumentation/falcon/__init__.py:379: DeprecatedWarning: Call to deprecated property body. Please use text instead.\r\n    return super().__call__(env, _start_response)\r\n\r\n-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html\r\n======================== 25 passed, 3 warnings in 0.47s ========================\r\n```\r\n\r\nThe `parameterized` package is not installed in the virtual environment.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project \r\n- [ ] Changelogs have been updated **This doesn’t seem like it deserves a changelog entry. Let me know if I need to add one.**\r\n- [ ] Unit tests have been added **N/A, covered by existing tests**\r\n- [ ] Documentation has been updated **N/A**\r\n",
    "head_branch": "unpin-parameterized",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Drop obsolete parameterized test dependency (#2134)\n\nIn the test dependencies for `opentelemetry-instrumentation-falcon`,\r\ndon’t depend on `parametrized` because `pytest.mark.parametrize` is now\r\nincluded in `pytest`."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211480ac254a19ac290a4f",
    "number": 2132,
    "body": "# Description\r\n\r\nAdd support for confluent_kafka instrumentation until 2.3.0 version.\r\n\r\nFixes #2095\r\n\r\n## Type of change\r\n\r\nAdd support for higher version.\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ]  `tox -e test-instrumentation-confluent-kafka`\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "support_for_confluent_kafka_2_3",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: sofiia-tesliuk / name: Sofiia Tesliuk  (a548a10527b7f8679daa39f721d61d75dd66c255, f42b573180bfc8b482ed4dd90638075b6bf6686d)</li><li>:white_check_mark: login: ocelotl / name: Diego Hurtado  (5f976f4d3912eba6617e48870bedc6107377174d, 0240b56339a0cce5b637ed308dc46158e91535e8, 3057b705fcfe7a384bc0b5022325e9ab8eaae62b)</li></ul>",
      "Hi, is anything needed beyond the same semver string edits to support 2.4.0? I would make the PR but looks like I'd have to sign CLA etc."
    ],
    "commit_messages": [
      "Add support for confluent_kafka until 2.3.0 version; (#2132)\n\n* Updated version of supported confluent kafka to 2.3;\r\n\r\n* Updated CHANGELOG.md;\r\n\r\n---------"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211481ac254a19ac290a50",
    "number": 2129,
    "body": "Fixes #2128",
    "head_branch": "issue_2128",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix tox factor matching (#2129)\n\n* Fix tox factor matching\r\n\r\nFixes #2128\r\n\r\n* Add missing fixes for several test envs\r\n\r\n* Fix django"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211482ac254a19ac290a51",
    "number": 2127,
    "body": "Fixes #2126\r\n\r\n~I am not a fan of using additional executable `bash` scripts but this exemplifies what I am trying to do (remove the `[test]` packages and separate the testing requirements for every package into a file in each package).~\r\n\r\nIf we agree on this strategy I will add the changes for the rest of the packages in this PR. For the time being I am adding only one since I want to make it easy for others to review and understand this strategy.\r\n\r\nFor the record, I would prefer not to use `tox` but [`nox`](https://nox.thea.codes/en/stable/) which has the advantage of using a Python file instead of an `ini` file. I think that by using `nox` we can find a pure-Python way of handing our test dependencies. In fact, I would prefer if we had one noxfile for every package and a Python script that just calls `nox` in every package directory.",
    "head_branch": "issue_2126",
    "is_a_fork": true,
    "comments": [
      "~BTW, the reason I am using a `bash` executable file here instead of a `test-requirements.txt` file is because we need to install packages from PyPi (`flask`, `werkzeug`) and also _local_ packages from this repo.~\r\n\r\nI'm no longer using an executable but `requirements.txt` files.",
      "> For the record, I would prefer not to use tox but [nox](https://nox.thea.codes/en/stable/) which has the advantage of using a Python file instead of an ini file.\r\n\r\nI'd prefer not to use `nox` since we had precedence in `opencensus` for it being a bit complex to use in terms of setting up configuration and matrices in exactly the way we want it.",
      "@lzchen ok, using `nox` (or not) can be discussed later, are you ok with the removal of `[test]` packages?",
      "@ocelotl \r\n\r\n>  ok, using nox (or not) can be discussed later, are you ok with the removal of [test] packages?\r\n\r\nYup, these seems fine with me. Thanks for working on this!\r\n",
      "I need to update the requirements file, marking as draft to prevent accidental merging.",
      "Converting to draft to prevent accidental merging."
    ],
    "commit_messages": [
      "Remove [test] package from flask instrumentation (#2127)\n\nFixes #2126"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211482ac254a19ac290a52",
    "number": 2125,
    "body": "# Description\r\n\r\nIt appears there is a bug with instrumentation when we call `KafkaProducer.send` with some `headers` argument in `args`:\r\n```python\r\nproducer = KafkaProducer()\r\nproducer.send('test-topic', b'message', None, None, None, None)\r\n```\r\n\r\nWe get `TypeError: KafkaProducer.send() got multiple values for argument 'headers'` when running the code with enabled instrumentation.\r\n\r\nThis PR fixes the issue.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- This PR includes a unit-test.\r\n- Run the code provided above.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Unit tests have been added\r\n",
    "head_branch": "kafka-python-tracer-send",
    "is_a_fork": true,
    "comments": [
      " <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/220524743/2125/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-not-signed.svg\" alt=\"CLA Not Signed\" align=\"left\" height=\"28\" width=\"328\"></a><br/><br /><ul><li><a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/220524743/2125/#/?version=2' target='_blank'>:x:</a> - login: @holmuk . The commit (2c4d030dca2b15e7e0bf3dddd12d250d98bf26ea, fd68f7a9a3e63faaae8f3bf3a815c5f72af17109) is not authorized under a signed CLA. <a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/220524743/2125/#/?version=2' target='_blank'>Please click here to be authorized</a>. For further assistance with EasyCLA, <a href='https://jira.linuxfoundation.org/servicedesk/customer/portal/4' target='_blank'>please submit a support request ticket</a>.</li></ul>"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211483ac254a19ac290a53",
    "number": 2124,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "rem-pkg-res",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: jeremydvoss / name: Jeremy Voss  (e8cc2deab7131bf9ace597750c696b4450032409, 7ad7ecfba09d1d87bf4e737a6cbda8a8724c4ecc, 5ea5517b83bce02021f12d80dda238cd3201c05e)</li><li>:white_check_mark: login: abhinav283 / name: JagSolv283  (30fee67c6ca8270330ab7d5861c06c0e2f1fecdb, f14389093c07107eeafca2b5b1f69bd7c696575c, 129bb740e1551bd5315540a0945f86fb446249c1, 9a440d04dc83401b9c632c00cd185bc8edf845f5)</li></ul>",
      "@xrmx this should have been closed by #2871"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211484ac254a19ac290a54",
    "number": 2123,
    "body": "# Description\r\n\r\nAdd psycopg3 instrumentation. The code is (mostly) a copy of the psycopg2 instrumentation, but placed as a separate package because the instrumented package has been renamed to `psycopg` in version 3.\r\n\r\nMy tests have not found any issues but more extensive production use can surface incompatibilities between both instrumentations so I wouldn't worry too much about sharing code between both instrumentations just yet.\r\n\r\nFixes #1751\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] I have copied the test cases from the psycopg2 version\r\n- [x] I have manually tested the instrumentation end-to-end with an existing Django project configured to run with psycopg 3.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "psycopg3-instrumentation",
    "is_a_fork": true,
    "comments": [
      "Are there specific parts that you can highlight that differ the most from the psycopg2 instrumentation, I think that would make it much easier to review this.",
      "Sure! The files are identical except for the import of the cursor class in psycopg 3.x, you can run a diff to check.",
      "I've been running something very similar to this in development and noticed no issues.  It's just the imports that changed between them.",
      "Thanks for the contribution @federicobond, because we are short staffed and us maintainers are not experts in every library, we need you to become an owner of this instrumentation for us to merge it. We will be very happy if you accept, to do so, please add yourself in a new entry in `.github/component-owners.yml`. Thanks!",
      "Thanks @ocelotl! I have added myself as component owner now. This is now ready to merge.",
      "We already have an instrumentation for `psycopg2` named `opentelemetry-instrumentation-psycopg2`. This should be named `opentelemetry-instrumentation-psycopg3`, right? :thinking: ",
      "The package namespace for psycopg 2.x for historical reasons is `psycopg2` but psycopg 3.x returns to the original `psycopg` namespace so it's likely that psycopg 4.x in the future will also be `psycopg`.\r\n\r\nThus I believe the correct name for the OTel instrumentation package should be `opentelemetry-instrumentation-psycopg`. \r\n\r\nOTel instrumentations always follow the naming for the package that is instrumented, there aren't separate instrumentations `-django5` or `-django4`. The only cases that have a number are when the original package also has a number, like `jinja2`.",
      "Test failures appear unrelated to the changes."
    ],
    "commit_messages": [
      "Add instrumentation for Psycopg 3.x (#2123)\n\n* Add instrumentation for Psycopg 3.x\r\n\r\n* Add federicobond to component_owners.yml"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211485ac254a19ac290a55",
    "number": 2122,
    "body": "# Description\r\n\r\nAdded the TransactWriteItems request instrumentation for botocore/dynamodb.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nI ran tox, also, did some pdb debugging to see if the consumed capacity trace is used in the handler. I would like to run tests directly with boto3 and a live dynamodb. But I am not sure how to build a wheel with the tox utility so that I can install it in another project/venv.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "transact-write-items",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: witzatom / name: tomas.witzany  (ad388444f9f4cb8e236ed126987d35d702b1ce5c)</li></ul>"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211486ac254a19ac290a56",
    "number": 2121,
    "body": "Fixes #2036",
    "head_branch": "issue_2036",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Separate jobs per instrumentation (#2121)\n\n* Separate jobs per instrumentation\r\n\r\nFixes #2036\r\n\r\n* Separate in 2 workflows\r\n\r\n* Added explanation for separation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211487ac254a19ac290a57",
    "number": 2120,
    "body": null,
    "head_branch": "lzchen-patch-6",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Update version.py for release (#2120)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211488ac254a19ac290a58",
    "number": 2119,
    "body": "# Description\r\n\r\nurlopen has no default timeout.\r\n\r\nFixes https://github.com/Azure/azure-sdk-for-python/issues/33441\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nLocally\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "vm-resource-detector-bug",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add 10 second timeout to VM Resource Detector (#2119)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211489ac254a19ac290a59",
    "number": 2118,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nRef https://github.com/open-telemetry/opentelemetry-python/pull/3624\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] CI tests pass\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "upgrade-tox",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Upgrade tox (#2118)\n\n* Upgrade tox\r\n\r\n* fixup! Upgrade tox\r\n\r\n* Add excludes\r\n\r\n---------\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621148aac254a19ac290a5a",
    "number": 2117,
    "body": "Fixes #2036",
    "head_branch": "issue_2036",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621148aac254a19ac290a5b",
    "number": 2116,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "3_12",
    "is_a_fork": true,
    "comments": [
      "https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1415",
      "Boto failing. Maybe it's related to this. Maybe we need to update: https://github.com/boto/botocore/issues/2979",
      "Failures:\r\nboto 3.12 20.04: https://github.com/open-telemetry/opentelemetry-python-contrib/actions/runs/9117317763/job/25067996352?pr=2116\r\nbotocore 3.12 20.04: https://github.com/open-telemetry/opentelemetry-python-contrib/actions/runs/9117317763/job/25067996921?pr=2116\r\nKafka-python: https://github.com/open-telemetry/opentelemetry-python-contrib/actions/runs/9117317763/job/25068000409?pr=2116\r\nsio-pika: https://github.com/open-telemetry/opentelemetry-python-contrib/actions/runs/9117317763/job/25068001492?pr=2116\r\nsklearn: https://github.com/open-telemetry/opentelemetry-python-contrib/actions/runs/9117317763/job/25068004112?pr=2116",
      "closing in favor or @xrmx's https://github.com/open-telemetry/opentelemetry-python-contrib/pull/2572"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621148bac254a19ac290a5c",
    "number": 2114,
    "body": "# Description\r\n\r\nActual error:\r\n```\r\nAttributeError\r\n'ConnectionParameters' object has no attribute 'get'\r\n```\r\n\r\nwhere ConnectionParameters is a namedtuple object, that doesn't have \"get\" attribute.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n```\r\nimport collections\r\n>>> getattr(collections.namedtuple(\"abc\",\"a\")(\"a\"), \"b\", \"a\")  # <-- OK\r\n'a' \r\n\r\n>>> collections.namedtuple(\"abc\",\"a\")(\"a\").get(\"a\")  # <-- NOT OK \r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nAttributeError: 'abc' object has no attribute 'get'\r\n```\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      " <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/220524743/2114/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-not-signed.svg\" alt=\"CLA Not Signed\" align=\"left\" height=\"28\" width=\"328\"></a><br/><br /><ul><li><a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/220524743/2114/#/?version=2' target='_blank'>:x:</a> - login: @IdeoG / name: Alexey . The commit (1b74ab9b745cdd9c649a3c5f0569f8810347c2c1) is not authorized under a signed CLA. <a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/220524743/2114/#/?version=2' target='_blank'>Please click here to be authorized</a>. For further assistance with EasyCLA, <a href='https://jira.linuxfoundation.org/servicedesk/customer/portal/4' target='_blank'>please submit a support request ticket</a>.</li></ul>"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621148cac254a19ac290a5d",
    "number": 2113,
    "body": "# Description\r\n\r\nThis PR fixes an issue in `AutoInstrumentedConsumer` which wasn't passing extra args and kwargs to superclass `Consumer`. This was causing issues when a caller need to pass extra arguments like `logger`. \r\n\r\nThe use of `logger` is tested here: https://github.com/confluentinc/confluent-kafka-python/blob/master/tests/test_log.py#L28-L30\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nTo reproduce the issue we instantiate a `Consumer` object with extra arguments (e.g. `logger`) before and after instrumenting by `ConfluentKafkaInstrumentor().instrument()`\r\n\r\nInstantiating the uninstrumented Consumer:\r\n```\r\nIn [1]: from confluent_kafka import Consumer\r\n\r\nIn [2]: conf2 = {'bootstrap.servers': \"localhost:9092\", 'group.id': \"foo\", 'auto.offset.reset': 'smallest'}\r\n\r\nIn [3]: Consumer(conf2, logger=55)\r\nOut[3]: <cimpl.Consumer at 0x7fa3462567c0>\r\n```\r\nWe can pass keyword arguments. Below is the same after we instrument `Consumer`:\r\n```\r\nIn [1]: from opentelemetry.instrumentation.confluent_kafka import ConfluentKafkaInstrumentor\r\n\r\nIn [2]: ConfluentKafkaInstrumentor().instrument()\r\n\r\nIn [3]: from confluent_kafka import Consumer\r\n\r\nIn [4]: conf2 = {'bootstrap.servers': \"localhost:9092\", 'group.id': \"foo\", 'auto.offset.reset': 'smallest'}\r\n\r\nIn [5]: Consumer(conf2, logger=55)\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\nCell In[5], line 1\r\n----> 1 Consumer(conf2, logger=55)\r\n\r\nTypeError: __init__() got an unexpected keyword argument 'logger'\r\n```\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n",
    "head_branch": "consumer-pass-args-kwargs",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: sy-bee / name: Sy B  (26c9f55d86f880fc113928abc720e68afe1d00a5, 93cf0a809e78bf879ab1c156ebe29e1f8cac5dee, ef15b8465bd7c27b66d5b9b993b8fb4923f03342)</li><li>:white_check_mark: login: shalevr / name: Shalev Roda  (e8c8a590964d09ceaf939b1fb4a7fae67fe9354c)</li></ul>"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621148dac254a19ac290a5e",
    "number": 2112,
    "body": "# Description\r\n\r\nThis PR fixes an issue in `AutoInstrumentedConsumer` which wasn't passing extra args and kwargs to superclass `Consumer`. This was causing issues when a caller need to pass extra arguments like `logger`. \r\n\r\nThe use of `logger` is tested here: https://github.com/confluentinc/confluent-kafka-python/blob/master/tests/test_log.py#L28-L30\r\n\r\n## Type of change\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nTo reproduce the issue we instantiate a `Consumer` object with extra arguments (e.g. `logger`) before and after instrumenting by `ConfluentKafkaInstrumentor().instrument()`\r\n\r\nInstantiating the uninstrumented Consumer:\r\n```\r\nIn [1]: from confluent_kafka import Consumer\r\n\r\nIn [2]: conf2 = {'bootstrap.servers': \"localhost:9092\", 'group.id': \"foo\", 'auto.offset.reset': 'smallest'}\r\n\r\nIn [3]: Consumer(conf2, logger=55)\r\nOut[3]: <cimpl.Consumer at 0x7fa3462567c0>\r\n```\r\nWe can pass keyword arguments. Below is the same after we instrument `Consumer`:\r\n```\r\nIn [1]: from opentelemetry.instrumentation.confluent_kafka import ConfluentKafkaInstrumentor\r\n\r\nIn [2]: ConfluentKafkaInstrumentor().instrument()\r\n\r\nIn [3]: from confluent_kafka import Consumer\r\n\r\nIn [4]: conf2 = {'bootstrap.servers': \"localhost:9092\", 'group.id': \"foo\", 'auto.offset.reset': 'smallest'}\r\n\r\nIn [5]: Consumer(conf2, logger=55)\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\nCell In[5], line 1\r\n----> 1 Consumer(conf2, logger=55)\r\n\r\nTypeError: __init__() got an unexpected keyword argument 'logger'\r\n```\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "pass-args-kwargs",
    "is_a_fork": true,
    "comments": [
      " <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/220524743/2112/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-missing-id.svg\" alt=\"CLA Missing ID\" align=\"left\" height=\"28\" width=\"328\"></a> <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/220524743/2112/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-not-signed.svg\" alt=\"CLA Not Signed\" align=\"left\" height=\"28\" width=\"328\"></a><br/><br /><ul><li> :x: The email address for the commit (eebf19da4d937965bc8bbbf73a14e49a6cdc9e59) is not linked to the GitHub account, preventing the EasyCLA check. Consult <a href='https://confluence.linuxfoundation.org/pages/viewpage.action?pageId=86641302' target='_blank'>this Help Article</a> and <a href='https://help.github.com/en/github/committing-changes-to-your-project/why-are-my-commits-linked-to-the-wrong-user' target='_blank'>GitHub Help</a> to resolve. (To view the commit's email address, add .patch at the end of this PR page's URL.) For further assistance with EasyCLA, <a href='https://jira.linuxfoundation.org/servicedesk/customer/portal/4' target='_blank'>please submit a support request ticket</a>.</li></ul>"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621148eac254a19ac290a5f",
    "number": 2111,
    "body": "# Description\r\n\r\nFix broken link in Tortoise ORM instrumentation readme\r\n\r\nThe existing link: https://tortoise-orm.readthedocs.io/en/latest/\r\n<img width=\"617\" alt=\"image\" src=\"https://github.com/open-telemetry/opentelemetry-python-contrib/assets/32132177/a824ccba-10de-4abc-bf79-f9938e826af6\">\r\n\r\nUpdated link: https://tortoise.github.io/\r\n<img width=\"1225\" alt=\"image\" src=\"https://github.com/open-telemetry/opentelemetry-python-contrib/assets/32132177/0737d7f5-1ffa-4db6-807a-c7f5785f32b1\">\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nMarkdown-only changed, visited link in browser to check\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: lzchen / name: Leighton Chen  (55afd67004e139700eb571818b62c7abee0b0609)</li><li>:white_check_mark: login: awhlam / name: Andrew L.  (f51f661aa93dbff6459a792e826413db442391d8, fa21d1bd7474e9b9310f8373dfd319999f59e31b)</li></ul>"
    ],
    "commit_messages": [
      "Update README.rst (#2111)\n\nCo-authored-by: Leighton Chen <lechen@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621148fac254a19ac290a60",
    "number": 2110,
    "body": "# Description\r\n\r\nFix typo in opentelemetry-instrumentation-asgi example\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix-asgi-example",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: hramezani / name: Hasan Ramezani  (6aac216a4329ad19d228febaeb6dd6be13bba98c, e1a83a9962ef78c794a0e5416ef61a298e27c26b)</li></ul>"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211490ac254a19ac290a61",
    "number": 2108,
    "body": "- Clarify trace versus metric documentation\r\n- Add console exporter documentation\r\n- Add quotes to command to support zsh\r\n- Fix grammatical errors\r\n\r\n# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "flands/otel-inst-readme",
    "is_a_fork": true,
    "comments": [
      "@open-telemetry/python-maintainers can you review and merge please?"
    ],
    "commit_messages": [
      "Update opentelemetry-instrument README (#2108)\n\n* Update opentelemetry-instrument README\r\n\r\n- Clarify trace versus metric documentation\r\n- Add console exporter documentation\r\n- Add quotes to command to support zsh\r\n- Fix grammatical errors\r\n\r\n* fix typo\r\n\r\n* fix typo\r\n\r\n* Remove note on HTTP for trace only\r\n\r\n---------"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211491ac254a19ac290a62",
    "number": 2107,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: hamzmu / name: hamza  (cf902c2e52a42e652cbb4bd2d8920838cb7d5196)</li></ul>"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211491ac254a19ac290a63",
    "number": 2106,
    "body": "Add HTTP_TARGET to server duration and active requests\r\n\r\n# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # Currently metrics exclude the HTTP_TARGET.  This does not allow use to get specific resource counts or durations for visited endpoints.  By adding HTTP_TARGET, we can now get detailed stats for individual page access.  This will create additional metrics and increase cardinality.  I feel like the granularity is needed to make the metric useful.  It also brings this metric in-line with the spanmetrics connector. \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ x ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ x ] Test A\r\n\r\nChanged package and ran locally using auto-instrumentation->local collector with Prometheus exporter.  Adding variables allowed prometheus to create correct metrics with targets.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: philipcwhite / name: Phil White  (325b3974811cebf3a43416a936485e4e7bd3953e, b7f9ecb395a55a8717bb3a96024186f5e82abb97, 32624497e54eb9fdf4c4202e69e9663db6753db4)</li></ul>",
      "@philipcwhite this is a purposeful omission since like you mentioned the cardinality can be unbounded. See the semantic conventions for http metrics https://github.com/open-telemetry/opentelemetry-specification/blob/v1.20.0/specification/metrics/semantic_conventions/http-metrics.md.\r\n\r\nAre you using this instrumentation directly or a more specific framework instrumentation that wraps it e.g. `opentelemetry-instrumentation-flask`. That framework should set [`http.route`](https://opentelemetry.io/docs/specs/semconv/attributes-registry/http/#:~:text=200-,http.route,-string) instead since that will be low cardinality. However I don't think this has been implemented in many (any?) of them.",
      "I am using this with Flask.  Like I mentioned, this feature is present in the spanmetrics connector so it should be here as well.  In spanmetrics it uses span_name. \r\n\r\n`{env=\"development\", exported_job=\"pydemo\", instance=\"otel-gateway.monitoring:8080\", job=\"opentelmetry\", service_name=\"pydemo\", span_kind=\"SPAN_KIND_SERVER\", span_name=\"/login\", status_code=\"STATUS_CODE_UNSET\", telemetry_auto_version=\"0.43b0\", telemetry_sdk_language=\"python\", telemetry_sdk_name=\"opentelemetry\", telemetry_sdk_version=\"1.22.0\"}`\r\n\r\nI assume this is a no-go as HTTP_TARGET is \"deprecated\" however it is still being used in spans...\r\n\r\nHTTP_ROUTE may replace this according to the documentation however it does not seem work at this point in gathering endpoints like /login.html, /home, etc.  ",
      "I'm not sure if it matters but the target can be renamed to fit with the spec.\r\n\r\n```\r\n    if target is not None:\r\n        #result[SpanAttributes.HTTP_TARGET] = target\r\n        result[SpanAttributes.HTTP_ROUTE] = target\r\n```",
      "Hi @aabmass , Good Day!\r\n\r\nWe are waiting for this http.route label in the metrics exposed by Python for some time now. We are able to get it in our Java (Auto Instrumentation) and Go Lang (Manual Instrumentation). Would be good if we can have the same level of support in Python as this information is crucial for troubleshooting and SLI/SLO based calculations.\r\n\r\nAnd Yes, http.target might cause high cardinality as it includes query params. http.route should be correct label to use differentiate the request.\r\n\r\nWe have few issues in the repo pertaining to this request - #1457 , #1718 , #1963 \r\n\r\nThank You @philipcwhite for the changes.",
      "it appears that using path info strips the variable.  \r\n\r\n`result[SpanAttributes.HTTP_ROUTE] = environ.get(\"PATH_INFO\") `\r\n\r\nfor example if I hit the url http://172.16.6.136:5000/custom?hello=world\r\nhttp_target shows /custom?hello=world\r\nhttp_route shows /custom\r\n\r\nThis should be correct.  The only problem I see if if someone does something silly like encoding a guid as a path. ",
      "I'm a bit lost on this one after chatting with @aabmass on Slack.  He suggested using the route data from Flask to populate HTTP_ROUTE.  Its a nice idea but I ran into some issues that I don't know how to resolve.  It looks like WSGI creates the metric on the first hit before flask can add the route to the wsgi environ variables.  it picks up the correct variable on the return trip\r\n\r\nwsgi None\r\nbefore request /login\r\nwsgi /login\r\nwrapped span /login\r\n172.16.6.136 - - [04/Jan/2024 12:48:38] \"POST /login HTTP/1.1\" 302 -\r\n  ",
      "I'm closing this PR as I can't figure out how to inject the flask routes into metrics.  Hopefully someone else will take this up.  Using wsgi only doesn't work either as it has no filter for excluded URLs.  If the URLs could be filtered it may be a useable workaround.  I could not get it to respect the OTEL_PYTHON_EXCLUDED_URLS env variable.",
      "closing"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211492ac254a19ac290a64",
    "number": 2104,
    "body": "# Summary\r\n\r\nCreate a package that when installed causes opentelemetry setup code to run when Python starts without the need for running the opentelemetry-instrument command.\r\n\r\nThis PR isn't ready for merging. I'd like feedback on if this change is likely to be accepted.\r\n\r\n# Longer Description\r\n\r\nOne way to setup opentelemetry libraries and run the installed instrumentors is to use the opentelemetry-instrument command to start the Python process. This will add the a directory with a \"sitecustomize.py\" file to the PYTHONPATH and run Python. Python will then run this module at startup which will run the setup code.\r\n\r\nOne challenge of this approach is that there can only be a single \"sitecustomize.py\" file for the entire Python process - so, if an environment already uses this file, using opentelemetry-instrument will hide the existing file which is probably not desired. A second challenge is that using the opentelemetry-instrument command inherently requires modifying startup scripts which may not be desired.\r\n\r\nWhat this commit does is to create a new package,\r\nopentelemetry-auto-instrument. What this package does is to provide a .pth file. When Python starts up, it reads all .pth files that it can find and, if the file contains an import, it runs the import. So, the .pth file that we create does an import - and the module we import then does all of the opentelemetry setup. In this way, someone that wants to setup opentelemetry without modifying their startup scripts or who already has a \"sitecustomize.py\" file has another option: they can add the new package into their virtual environment and that will cause setup to run when Python starts.\r\n\r\nOne thing I don't know how to do is to create a Python package using the hatch build system that just contains a .pth file. I know how to do it via setuptools - so, I used setuptools for the new package.\r\n\r\nI made some minor tweeks to the existing opentelemetry-instrumentation package - primarily I moved most of the code from \"sitecustomize.py\" to a new module, \"auto_instrument_on_import.py\". Then, both sitecustomize.py and the new .pth file both import auto_instrument_on_import.py - which means that if somehow someone were to both use the new package AND the opentelemetry-instrument command, things should work fine since Python will ensure the module code is run only once.\r\n\r\nUnlike the \"sitecustomize.py\" file which prevents instrumentation of child python processes, the new package will instrument child processes. I _think_ this is the expected behavior of installing a package into the virtual environment.\r\n\r\n## Type of change\r\n\r\n- [X] New feature (non-breaking change which adds functionality)\r\n- [X] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nTested by installing the new package. But, at this point, what I mostly want is feedback as to if the general approach will be accepted.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "auto-instrument-via-pth",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211493ac254a19ac290a65",
    "number": 2101,
    "body": "This makes the bootstrap script get the package version directly from pypi instead of from our lists of packages. This makes sure that the packages are actually available for the end user to install.",
    "head_branch": "issue_2053",
    "is_a_fork": true,
    "comments": [
      "Just to clarify, in our release process, we change each package to the release [version](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/2092/files#diff-a9435a736abdea2d4f8a1fb9bde32809fe522eb98f43bf7025f5592626b62da4) and then we [regenerate](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/scripts/prepare_release.sh#L23) `bootstrap_gen.py`. I'm curious as to how you generated the `0.43b0` versions of `bootstrap_gen.py`, did you run the new script or did you replace these manually? I think we just need to add a try catch for erroneous installs, there's no need to change what is generated in our dev branch right?",
      "I think we allow users to specify [version](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/opentelemetry-instrumentation/src/opentelemetry/instrumentation/bootstrap.py#L134) in bootstrap so probably have to still reflect this in the install.",
      "I'm not sure if this is exactly a workaround for https://github.com/open-telemetry/opentelemetry-python-contrib/issues/2053 since users will still see an error message if the package doesn't exist in Pypi right? I think there isn't really a workaround since there's no way to provide the actual package (the most we can do is not display the error message and just explain on the issues that the package is not available yet).",
      "> Just to clarify, in our release process, we change each package to the release [version](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/2092/files#diff-a9435a736abdea2d4f8a1fb9bde32809fe522eb98f43bf7025f5592626b62da4) and then we [regenerate](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/scripts/prepare_release.sh?rgh-link-date=2023-12-27T17%3A33%3A59Z#L23) `bootstrap_gen.py`. I'm curious as to how you generated the `0.43b0` versions of `bootstrap_gen.py`, did you run the new script or did you replace these manually? I think we just need to add a try catch for erroneous installs, there's no need to change what is generated in our dev branch right?\r\n\r\nRight, reverted to `44b0.dev`.",
      "> > Just to clarify, in our release process, we change each package to the release [version](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/2092/files#diff-a9435a736abdea2d4f8a1fb9bde32809fe522eb98f43bf7025f5592626b62da4) and then we [regenerate](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/scripts/prepare_release.sh?rgh-link-date=2024-01-02T23%3A32%3A32Z#L23) `bootstrap_gen.py`. I'm curious as to how you generated the `0.43b0` versions of `bootstrap_gen.py`, did you run the new script or did you replace these manually? I think we just need to add a try catch for erroneous installs, there's no need to change what is generated in our dev branch right?\r\n> \r\n> Right, reverted to `44b0.dev`.\r\n\r\nWhich fails `tox -e generate`...",
      "> I'm not sure if this is exactly a workaround for #2053 since users will still see an error message if the package doesn't exist in Pypi right? I think there isn't really a workaround since there's no way to provide the actual package (the most we can do is not display the error message and just explain on the issues that the package is not available yet).\r\n\r\nThis is a workaround because no exception is being raised now, only an error message is now produced for the particular package.",
      "> Fixes #2053\r\n\r\nI think this fixes the bootstrap script issue, but doesn't actually solve the PyPI error you would when trying to install the non-existent release",
      "> I think this fixes the bootstrap script issue, but doesn't actually solve the PyPI error you would when trying to install the non-existent release\r\n\r\nSeconding this, and was also mentioned at today's sig meeting. In this PR description I've included an example error if a user with `aiohttp` installed tries to bootstrap with the latest release: https://github.com/open-telemetry/opentelemetry-python-contrib/pull/2299. It would be great to have this part fixed.",
      "any update on this?"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211494ac254a19ac290a66",
    "number": 2099,
    "body": "# Description\r\n\r\nThe link in readme is broken.\r\n\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: devenv / name: Boris Churzin  (9284a764e5f0be7a941792fabb7736d37f087838, 373f037281d21b87eb4c741c8aa8b6f66f00ec43, 4d3795b2233dcc36d3368e853da89aec8311ab92, 4eb1c1597a458ff13033f430380dbfa07aa15059)</li></ul>"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211495ac254a19ac290a67",
    "number": 2098,
    "body": "Copy log updates from `release/v1.22.x-0.43bx`.",
    "head_branch": "opentelemetrybot/copy-change-log-updates-from-release-v1.22.x-0.43bx",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211496ac254a19ac290a68",
    "number": 2093,
    "body": "# Description\r\n\r\nCurrently, the user was not able to cancel the stream. The cause was that instead of returning `_MultiThreadedRendezvous` we returned the generator created from it. \r\n\r\nI tried two options to fix this:\r\n1. In this WIP [commit](https://github.com/open-telemetry/opentelemetry-python-contrib/commit/4eb24c2b22a014a82a6a91479efc35e6cc8de911) , I tried to end span by using  add_done_callback. This kinda worked, but it was very hard to test using unittest. In tests, we either had to wait till thread handling events were already called before asserts or we could use the experimental single-threaded channel. Another problem was that the single-threaded channel did not handle the done callback when the stream was canceled. It handled correctly done callback when the stream ended or in case of error, but not during cancel. I think this is just a bug in that single-threaded implementation.\r\n2. The second option(and the one I picked) was wrapping `_MultiThreadedRendezvous` in proxy, and ending span on all places where it was needed. Because this happened in the same thread, I did not have problems with unit testing. \r\n\r\nThe first solution is definitely less complicated from the point of implementation. However, I  am not even sure if waiting for `channel_spin` is correct, spans in theory can be ended a little bit later. Compared to the second solution, we don't need to handle every place where the stream can end, we basically leave this to grpc implementation. \r\n\r\nIn the end, I picked the second solution mostly because it can be testable, it ends span almost immediately when the stream ends, and also because of that bug when done callback is not called when using the single threaded channel. \r\n\r\nIf you prefer the first solution or have some other in mind, let me know. \r\n\r\nFixes #2014 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [ ] test_unary_stream_can_be_cancel - cancel unary stream in the middle of consuming responses\r\n- [ ] test_stream_stream_can_be_cancel - cancel stream stream in middle of consuming responses\r\n- [ ] test_finished_stream_cancel_does_not_change_status_of_span - try to cancel stream that already finished\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "allow-the-user-to-cancel-stream",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: UOndro / name: Ondrej Unger  (d0abacf94d0b9b902dd6cbf0b90dbc006f483ccc, 4eb24c2b22a014a82a6a91479efc35e6cc8de911, f33f66819250dbed9d3e28edc0b4e2f7efcdc883, 5d36a06048b254df7ba06ae4032248d1ef297094, 5b26e33f2f8a2173c76e235c045eefee48d92a3c)</li><li>:white_check_mark: login: aabmass / name: Aaron Abbott  (b1db16ef137ddff035040f418af17bcbd6b14647)</li><li>:white_check_mark: login: xrmx / name: Riccardo Magliocchetti  (196dc00d843bb8717cc3a1ac8a1853b0d1297107)</li></ul><!-- Date Modified: 2024-06-27 18:53:41.520341 -->",
      "@UOndro Please fix failing tests, linting and add a CHANGELOG entry",
      "Hi @xrmx, It should be fixed, also updated changelog",
      "@UOndro thank you for the PR and apologies for not taking a look sooner.\r\n\r\n> 1. In this WIP [commit](https://github.com/open-telemetry/opentelemetry-python-contrib/commit/4eb24c2b22a014a82a6a91479efc35e6cc8de911) , I tried to end span by using  add_done_callback. This kinda worked, but it was very hard to test using unittest.\r\n\r\nI think the `add_done_callback()` approach would be much better than the `__del__()` approach. A few issues with the finalizer approach\r\n- I'm not sure the timing will be very accurate. I don't think Python implementations are guaranteed to GC the object immediately when refcount goes to zero. So the span could remain un-ended for a while. The opposite could happen as well where the wrapt proxy gets garbage collected immediately once refcount is zero and we end the span, but in reality the Call may remain open for some time\r\n- gRPC streaming calls also return a status code which we could add to the span. It's accessible through the future\r\n\r\n> but it was very hard to test using unittest. In tests, we either had to wait till thread handling events were already called before asserts or we could use the experimental single-threaded channel. \r\n\r\nCan we call `result()` or `code()` on the future object? I think those should block until the Call is actually finished. If that still doesn't work, I imagine you could do another `add_done_callback()` and manage a `concurrent.futures.Future` separately through that.",
      "> 1. In this WIP [commit](https://github.com/open-telemetry/opentelemetry-python-contrib/commit/4eb24c2b22a014a82a6a91479efc35e6cc8de911) , I tried to end span by using  add_done_callback. This kinda worked, but it was very hard to test using unittest.\r\n\r\n\r\n@UOndro I got the tests working on top of this commit by doing `responses.code()` https://github.com/open-telemetry/opentelemetry-python-contrib/commit/64ae80a120c978cb05c413e0a6654685302332ba",
      "> @UOndro I got the tests working on top of this commit by doing `responses.code()` [64ae80a](https://github.com/open-telemetry/opentelemetry-python-contrib/commit/64ae80a120c978cb05c413e0a6654685302332ba)\r\n\r\nIf I comment out the shutdown of grpc server, the test still fails. The reason is that `done callback` is called after the `code` is set and after the call is finished. \r\n\r\nNot sure if we want to close the server before getting spans, it doesn't look right. \r\n\r\n> If that still doesn't work, I imagine you could do another add_done_callback() and manage a concurrent.futures.Future separately through that.\r\n\r\nCan you maybe explain this? I am not sure what to do. \r\n\r\nIdeally, we would have some function/future that would tell us that the done callback was called. I could add something to `OpenTelemetryClientInterceptor`, but not sure how to get it/call it from tests. Maybe saving it to `GrpcInstrumentorClient`, that seems like a lot of work. Any ideas?\r\n\r\nHere is the code where I commented out the stop of server ->  https://github.com/open-telemetry/opentelemetry-python-contrib/commit/28b56863bd65e708334dd55d127c7b5982e6decf\r\n\r\ncc. @aabmass \r\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211497ac254a19ac290a69",
    "number": 2092,
    "body": "Prepare release 1.22.0/0.43b0.",
    "head_branch": "opentelemetrybot/prepare-release-1.22.0-0.43b0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[release/v1.22.x-0.43bx] Prepare release 1.22.0/0.43b0 (#2092)\n\n* Prepare release 1.22.0/0.43b0\r\n\r\n* Update core SHA\r\n\r\n* Update generate\r\n\r\n---------\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211498ac254a19ac290a6a",
    "number": 2091,
    "body": "Update version to `1.23.0.dev/0.44b0.dev`.",
    "head_branch": "opentelemetrybot/update-version-to-1.23.0.dev-0.44b0.dev",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Update version to 1.23.0.dev/0.44b0.dev (#2091)\n\n* Update version to 1.23.0.dev/0.44b0.dev\r\n\r\n* Update core SHA\r\n\r\n* Update generate\r\n\r\n---------\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211499ac254a19ac290a6b",
    "number": 2090,
    "body": "Fixes #2089",
    "head_branch": "issue_2089",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix Falcon dependency (#2090)\n\nFixes #2089"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211499ac254a19ac290a6c",
    "number": 2088,
    "body": "# Description\r\n\r\nThe ASGI middleware previously only recorded the status code on the server span in case one of its child spans (\"http send\") was recording. With this PR setting the status code on the parent is independent of its child span.\r\n\r\nFixes #2087 \r\nFixes #1876\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added unit test `test_status_code_when_send_not_recording`\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes.\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621149aac254a19ac290a6d",
    "number": 2082,
    "body": "# Description\r\n\r\nThis PR adds an instrumentator for aiokafka, based on `opentelemetry-python-kafka-python`. #1957 seems stale.\r\n\r\nSee also https://github.com/open-telemetry/opentelemetry-python/discussions/2645.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "aiokafka",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: dimastbk / name: Dmitriy  (247b90d59072104138488a4e11b72af6be7136fd, 28cd78fa077095db811c82ca6099a1891e68bcf7, 6164fb6459c4f8a681ac734cf5bed7c3b01ffd88, e7ea0a77b192277d7f55a9c891fca6013cb0cc39, 2b81fdee2bee3af852612c2058ba71e946325975, dfa84a1dbcaaddb2dd8063568b6843072b0ea2aa, b40eab06bb8c8db4abce00d194988528d85186bd, 965ca43e7c0eee44597310ba4c81e1a036b6bd4a, 97d6e7637e651c2fad0808acff282cfab9de75ff, 5f3c706b72d656774c17751581aa69c0ec5fb139, f21b71674d67519152e997fb5e2caaa432310ead, 493ef566b0153b5515d6a16ddda6dd4236c82132, e29df8a5ffdaef7b0ca1172882d5da71c8c2c2ca, b4bad06688fe3f34e6f27d33a890276ebfa1f37e, e7ae511bca1058cfb838beef82631b2c597e8482, f1656243ee58de04f9da7f17bc8cc619f301f0b7, 1e7af5e0605c511ef6ed2af9bb7c1b7ef6c5ab07, 7f722ecb0b84b52c881159efd858ee8b986c2c9c)</li><li>:white_check_mark: login: lzchen / name: Leighton Chen  (f2c8030b337f6040f41260f625889f023fccc49b)</li><li>:white_check_mark: login: emdneto / name: Emídio Neto  (8177e7b97f1c6201611bab46b4c2689af24245e9, c9edeaf7a37593aaf0cf47af59abe0c78c2cd282)</li></ul><!-- Date Modified: 2024-09-16 18:10:34.875599 -->",
      "Test fixed, entry added to changelog",
      "Note: This week I would like to add more tests, can you wait for me before you merge PR?",
      "> Note: This week I would like to add more tests, can you wait for me before you mergePR?\r\n\r\nI think we can add new tests in a follow-up PR. We want to merge this to avoid namespace squatting issues. "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621149bac254a19ac290a6e",
    "number": 2080,
    "body": "# Description \r\n`kwargs[\"interceptors\"]` is just assumed to always be a list, and it's not guaranteed. \r\n\r\nFixes #2081 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nIt hasn't - I'm struggling to figure out how to run the unittests locally. \r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [x] Documentation has been updated <-- This shouldn't be necessary, right?\r\n",
    "head_branch": "making-grpc-server-interceptors-robust-to-non-list-iterables",
    "is_a_fork": true,
    "comments": [
      " <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/220524743/2080/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-not-signed.svg\" alt=\"CLA Not Signed\" align=\"left\" height=\"28\" width=\"328\"></a><br/><br /><ul><li><a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/220524743/2080/#/?version=2' target='_blank'>:x:</a> - login: @magreenberg1 / name: Matthew Greenberg . The commit (3681d36e9670bd7c1034ea42e55ea39029aac9de) is not authorized under a signed CLA. <a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/220524743/2080/#/?version=2' target='_blank'>Please click here to be authorized</a>. For further assistance with EasyCLA, <a href='https://jira.linuxfoundation.org/servicedesk/customer/portal/4' target='_blank'>please submit a support request ticket</a>.</li></ul>"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621149cac254a19ac290a6f",
    "number": 2078,
    "body": "# Description\r\nThis is required by the [spec](https://prometheus.io/docs/concepts/remote_write_spec/#labels)\r\n\"MUST have label names sorted in lexicographical order.\"\r\n\r\nThis library would inject the `__name__` label at the end. This broke the label ordering, leading Thanos to reject the write with a \"409 Conflict\" error.\r\n\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\nBug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nUnit test, and tested against a Thanos instance.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: tals / name: Tal Shiri  (a69529034051957a027d5731c2bafa45f2230936)</li></ul>",
      "+1 thanks for making this PR @tals\r\nI had implemented the same fix on a fork and its been working well for me. \r\n\r\nThis is certainly a needed feature because Thanos chose to define and assert the missing remote-write spec - [see here](https://github.com/thanos-io/thanos/pull/5508), one of the assertions being lexicographically sorted label names\r\n\r\ncc'ing @lzchen "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621149dac254a19ac290a70",
    "number": 2072,
    "body": "# Description\r\n\r\nVM Resource Detector's dependencies allowed for a version of semantic conventions that did not include the CLOUD_RESOURCE_ID constant it needs.\r\n\r\nFixes possible source of # [azure-sdk-for-python/issues/33301](https://github.com/Azure/azure-sdk-for-python/issues/33301)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nAdded tests for new top level try catch for both resource detectors.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "vm-resource-detector-bug",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix dependency for azure resource detector (#2072)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621149eac254a19ac290a71",
    "number": 2070,
    "body": "# Description\r\n\r\nI noticed that the docs refer to a nonexistent class.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] This change requires a documentation update\r\n\r\nThis change is a documentation update.\r\n\r\n# How Has This Been Tested?\r\n\r\nN/A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: jean / name: Jean Jordaan  (d12e081ece3dc80ed6c116fd8fa5b0d5f715c276)</li><li>:white_check_mark: login: shalevr / name: Shalev Roda  (f4babd57c82ac7d1c5be0e4ce2ce217e1e149e86)</li><li>:white_check_mark: login: ocelotl / name: Diego Hurtado  (153a932f22f04fe17363cee84861c98eb9602e95)</li></ul>"
    ],
    "commit_messages": [
      "`FlaskInstrumentation` doesn't exist (#2070)\n\nCo-authored-by: Shalev Roda <65566801+shalevr@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621149fac254a19ac290a72",
    "number": 2068,
    "body": null,
    "head_branch": "add-note",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add a note about system dependencies for instrumentation pkgs (#2068)\n\nCo-authored-by: Shalev Roda <65566801+shalevr@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114a0ac254a19ac290a73",
    "number": 2067,
    "body": "# Description\r\n\r\n- Lint doesn't run on CI as mentioned here https://github.com/open-telemetry/opentelemetry-python-contrib/pull/2061#discussion_r1392739995. Here is the latest job output https://github.com/open-telemetry/opentelemetry-python-contrib/actions/runs/6918829005/job/18821502158\r\n   - _lint create: /home/runner/work/opentelemetry-python-contrib/opentelemetry-python-contrib/.tox/lint\r\nSKIPPED: InterpreterNotFound: python3.9\r\n___________________________________ summary ____________________________________\r\nSKIPPED:  lint: InterpreterNotFound: python3.9\r\n  congratulations :)_\r\n- Fix the lint issues\r\n- More conservative approach to version pinning to avoid surprises.\r\n- Expand the black ignore list, otherwise black would format everything in the virtual environment.\r\n- Update the testenv in the lint stage to work on any Python version.\r\n\r\nI verified that lint, docs, and generate work on py3.8 to py3.11 so contributors with any of the versions should be able to run them locally without any issues. ",
    "head_branch": "lint-deps",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: srikanthccv / name: Srikanth Chekuri  (45a2679a4e8a2fd371f2bb5d6fd3b17b2556f871, 4a2815dc9cd8be3156f60feac498b5e15faf95f7, 5606ce7f77c37cdae22e3c703461dec159059099, 28f0773cebe7e1fc9027914ea40fe7765198945a, 4102adcce20e84e86f741876b7d7d6aef4eb76c3, 4d3a24c5a6acee08686eb69253b3c5d792c27240, 062a9e6e08411db6abcd7cb56da568aa2a4f3ec8, 8bc4cb0af1bdb24794e96719b43aeaad080f87c0, d239d923fcd1ce2fcb9663ef81cbef2996e117a0, b7b8b9e9560b2979fd54eec376712a56dc2a549c, e73f2bee44ba74ab9c4f384718f4988fa4a11412, 714a0e8d6cd4e281d61adf2116cd277ab0bfeef2)</li><li>:white_check_mark: login: hartungstenio / name: Christian Hartung  (3a39cbb9f88d0e3e25d57495fa1cd62d7a746f6a)</li></ul>",
      "Tests on the main failing. This PR also fixes them. It would be good to get this merged."
    ],
    "commit_messages": [
      "Enable lint on CI and update deps (#2067)\n\n* Fix black an isort\r\n\r\n* change bootstrap_gen to use a list instead of dict\r\n\r\n* Bunch of updates\r\n\r\n* Fix build\r\n\r\n* fix lint\r\n\r\n* Fix docs\r\n\r\n* Fix lint\r\n\r\n* More fixes\r\n\r\n* Fix lint\r\n\r\n* fix stupid mistake\r\n\r\n---------\r\n\r\nCo-authored-by: Christian Hartung <christian.hartung@olist.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114a0ac254a19ac290a74",
    "number": 2066,
    "body": "# Description\r\n\r\nThis fixes an issue with using `context.abort` in a `grpc.aio` RPC servicer. In cases where the `trailing_metadata` argument is passed, the `abort` method would previous throw a `TypeError` because the `grpc.ServicerContext.abort` method didn't take `trailing_metadata`; the `grpc.aio.ServicerContext` does take that arg so should be matched. It's also true that `context.abort(code)` is valid for a `grpc.aio.ServicerContext` but not a `grpc.ServicerContext` where `details` is a required argument. \r\n\r\nFixes #2065 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Unit tests\r\n- [ ] Development version used in replication repo\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "grpc-aio-abort-arity",
    "is_a_fork": true,
    "comments": [
      "Thanks for approving @aabmass . Is there anything left for me to do before it can be merged? "
    ],
    "commit_messages": [
      "Fix arity of context.abort for AIO RPCs (#2066)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114a1ac254a19ac290a75",
    "number": 2064,
    "body": "# Description\r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python-contrib/issues/2057\r\n\r\nI'll wait until I get some feedback to update the changelog and the docs if need be.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Manual test\r\n- [x] Unit test\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: martimors / name: Martin Morset  (f60a669b7654606536f259ebdeb8c3234d0ff061, 201470f4df16ec8f4d9f1ac297de46115aa9b711, aac4f7abc9a15e2f385f958951c98313d36a520c, 1744eba3c513ed5542411150bd8819015f3b3901, a6260a226fdcb3f7cd6897bc7ab1cb14b718b634, eed93aa453b0df3989355189d6ec3ce88835064d, 40751736692433abafafb5531faa97f09f3fde17, 20b551e37b258d11bb3c0451b4ea5afe664fa084, 1ff4c0be005ad95bdba3375eb8ca1c02295b22c1, 8d8eb6f842fe2e0a2ff472fdc8f93f43f555c1a5)</li><li>:white_check_mark: login: xrmx / name: Riccardo Magliocchetti  (2677a7e74be9e9f496715604ab3cfdd96ca1254b)</li><li>:white_check_mark: login: ocelotl / name: Diego Hurtado  (88f1b9a9cab27a05d5f74ec7fef8d8eada8ce0d0)</li></ul><!-- Date Modified: 2024-06-18 07:28:48.239556 -->",
      "Sorry for the commit spam - I'm just reviewing myself as best I can while not being able to run the tests locally. Do you have some guide how to get that up and running, preferably in the IDE and not `tox` on the cli? That would make this development experience a lot better for me.",
      "@federicobond are we good to go here?",
      "@martimors please take a look at the failures. The only way we can run tests is by using `tox`, which actually will create a virtual environment with all the testing dependencies installed and the `pytest` will run the tests."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114a2ac254a19ac290a76",
    "number": 2063,
    "body": "[![Mend Renovate logo banner](https://app.renovatebot.com/images/banner.svg)](https://renovatebot.com)\n\nWelcome to [Renovate](https://togithub.com/renovatebot/renovate)! This is an onboarding PR to help you understand and configure settings before regular Pull Requests begin.\n\n🚦 To activate Renovate, merge this Pull Request. To disable Renovate, simply close this Pull Request unmerged.\n\n\n\n---\n### Detected Package Files\n\n * `exporter/opentelemetry-exporter-prometheus-remote-write/example/docker-compose.yml` (docker-compose)\n * `exporter/opentelemetry-exporter-prometheus-remote-write/example/Dockerfile` (dockerfile)\n * `.github/workflows/backport.yml` (github-actions)\n * `.github/workflows/changelog.yml` (github-actions)\n * `.github/workflows/codeql-analysis.yml` (github-actions)\n * `.github/workflows/component-owners.yml` (github-actions)\n * `.github/workflows/prepare-patch-release.yml` (github-actions)\n * `.github/workflows/prepare-release-branch.yml` (github-actions)\n * `.github/workflows/publish-a-package-from-tag.yml` (github-actions)\n * `.github/workflows/release.yml` (github-actions)\n * `.github/workflows/test.yml` (github-actions)\n * `exporter/opentelemetry-exporter-prometheus-remote-write/pyproject.toml` (pep621)\n * `exporter/opentelemetry-exporter-richconsole/pyproject.toml` (pep621)\n * `instrumentation/opentelemetry-instrumentation-aio-pika/pyproject.toml` (pep621)\n * `instrumentation/opentelemetry-instrumentation-aiohttp-client/pyproject.toml` (pep621)\n * `instrumentation/opentelemetry-instrumentation-aiohttp-server/pyproject.toml` (pep621)\n * `instrumentation/opentelemetry-instrumentation-aiopg/pyproject.toml` (pep621)\n * `instrumentation/opentelemetry-instrumentation-asgi/pyproject.toml` (pep621)\n * `instrumentation/opentelemetry-instrumentation-asyncpg/pyproject.toml` (pep621)\n * `instrumentation/opentelemetry-instrumentation-aws-lambda/pyproject.toml` (pep621)\n * `instrumentation/opentelemetry-instrumentation-boto/pyproject.toml` (pep621)\n * `instrumentation/opentelemetry-instrumentation-boto3sqs/pyproject.toml` (pep621)\n * `instrumentation/opentelemetry-instrumentation-botocore/pyproject.toml` (pep621)\n * `instrumentation/opentelemetry-instrumentation-cassandra/pyproject.toml` (pep621)\n * `instrumentation/opentelemetry-instrumentation-celery/pyproject.toml` (pep621)\n * `instrumentation/opentelemetry-instrumentation-confluent-kafka/pyproject.toml` (pep621)\n * `instrumentation/opentelemetry-instrumentation-dbapi/pyproject.toml` (pep621)\n * `instrumentation/opentelemetry-instrumentation-django/pyproject.toml` (pep621)\n * `instrumentation/opentelemetry-instrumentation-elasticsearch/pyproject.toml` (pep621)\n * `instrumentation/opentelemetry-instrumentation-falcon/pyproject.toml` (pep621)\n * `instrumentation/opentelemetry-instrumentation-fastapi/pyproject.toml` (pep621)\n * `instrumentation/opentelemetry-instrumentation-flask/pyproject.toml` (pep621)\n * `instrumentation/opentelemetry-instrumentation-grpc/pyproject.toml` (pep621)\n * `instrumentation/opentelemetry-instrumentation-httpx/pyproject.toml` (pep621)\n * `instrumentation/opentelemetry-instrumentation-jinja2/pyproject.toml` (pep621)\n * `instrumentation/opentelemetry-instrumentation-kafka-python/pyproject.toml` (pep621)\n * `instrumentation/opentelemetry-instrumentation-logging/pyproject.toml` (pep621)\n * `instrumentation/opentelemetry-instrumentation-mysql/pyproject.toml` (pep621)\n * `instrumentation/opentelemetry-instrumentation-mysqlclient/pyproject.toml` (pep621)\n * `instrumentation/opentelemetry-instrumentation-pika/pyproject.toml` (pep621)\n * `instrumentation/opentelemetry-instrumentation-psycopg2/pyproject.toml` (pep621)\n * `instrumentation/opentelemetry-instrumentation-pymemcache/pyproject.toml` (pep621)\n * `instrumentation/opentelemetry-instrumentation-pymongo/pyproject.toml` (pep621)\n * `instrumentation/opentelemetry-instrumentation-pymysql/pyproject.toml` (pep621)\n * `instrumentation/opentelemetry-instrumentation-pyramid/pyproject.toml` (pep621)\n * `instrumentation/opentelemetry-instrumentation-redis/pyproject.toml` (pep621)\n * `instrumentation/opentelemetry-instrumentation-remoulade/pyproject.toml` (pep621)\n * `instrumentation/opentelemetry-instrumentation-requests/pyproject.toml` (pep621)\n * `instrumentation/opentelemetry-instrumentation-sklearn/pyproject.toml` (pep621)\n * `instrumentation/opentelemetry-instrumentation-sqlalchemy/pyproject.toml` (pep621)\n * `instrumentation/opentelemetry-instrumentation-sqlite3/pyproject.toml` (pep621)\n * `instrumentation/opentelemetry-instrumentation-starlette/pyproject.toml` (pep621)\n * `instrumentation/opentelemetry-instrumentation-system-metrics/pyproject.toml` (pep621)\n * `instrumentation/opentelemetry-instrumentation-tornado/pyproject.toml` (pep621)\n * `instrumentation/opentelemetry-instrumentation-tortoiseorm/pyproject.toml` (pep621)\n * `instrumentation/opentelemetry-instrumentation-urllib/pyproject.toml` (pep621)\n * `instrumentation/opentelemetry-instrumentation-urllib3/pyproject.toml` (pep621)\n * `instrumentation/opentelemetry-instrumentation-wsgi/pyproject.toml` (pep621)\n * `opentelemetry-contrib-instrumentations/pyproject.toml` (pep621)\n * `opentelemetry-distro/pyproject.toml` (pep621)\n * `opentelemetry-instrumentation/pyproject.toml` (pep621)\n * `propagator/opentelemetry-propagator-aws-xray/pyproject.toml` (pep621)\n * `propagator/opentelemetry-propagator-ot-trace/pyproject.toml` (pep621)\n * `resource/opentelemetry-resource-detector-azure/pyproject.toml` (pep621)\n * `resource/opentelemetry-resource-detector-container/pyproject.toml` (pep621)\n * `sdk-extension/opentelemetry-sdk-extension-aws/pyproject.toml` (pep621)\n * `dev-requirements.txt` (pip_requirements)\n * `docs-requirements.txt` (pip_requirements)\n * `exporter/opentelemetry-exporter-prometheus-remote-write/example/requirements.txt` (pip_requirements)\n * `gen-requirements.txt` (pip_requirements)\n\n### Configuration Summary\n\nBased on the default config's presets, Renovate will:\n\n  - Start dependency updates only once this onboarding PR is merged\n  - Show all Merge Confidence badges for pull requests.\n  - Enable Renovate Dependency Dashboard creation.\n  - Use semantic commit type `fix` for dependencies and `chore` for all others if semantic commits are in use.\n  - Ignore `node_modules`, `bower_components`, `vendor` and various test/tests directories.\n  - Group known monorepo packages together.\n  - Use curated list of recommended non-monorepo package groupings.\n  - Apply crowd-sourced package replacement rules.\n  - Apply crowd-sourced workarounds for known problems with packages.\n\n🔡 Would you like to change the way Renovate is upgrading your dependencies? Simply edit the `renovate.json` in this branch with your custom config and the list of Pull Requests in the \"What to Expect\" section below will be updated the next time Renovate runs.\n\n---\n\n### What to Expect\n\nWith your current configuration, Renovate will create 46 Pull Requests:\n\n<details>\n<summary>chore(deps): update dependency test/botocore to ~=1.31, <1.32</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/test-botocore-1.x`\n  - Merge into: `main`\n  - Upgrade [test/botocore](https://togithub.com/boto/botocore) to `~=1.31, <1.32`\n\n\n</details>\n\n<details>\n<summary>chore(deps): update dependency aiopg to >=1.4.0,<2.0.0</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/aiopg-1.x`\n  - Merge into: `main`\n  - Upgrade [aiopg](https://togithub.com/aio-libs/aiopg) to `>=1.4.0,<2.0.0`\n\n\n</details>\n\n<details>\n<summary>chore(deps): update dependency codespell to v2.2.6</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/codespell-2.x`\n  - Merge into: `main`\n  - Upgrade [codespell](https://togithub.com/codespell-project/codespell) to `==2.2.6`\n\n\n</details>\n\n<details>\n<summary>chore(deps): update dependency confluent-kafka to >=2.3.0,<=2.3.0</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/confluent-kafka-2.x`\n  - Merge into: `main`\n  - Upgrade [confluent-kafka](https://togithub.com/confluentinc/confluent-kafka-python) to `>=2.3.0,<=2.3.0`\n\n\n</details>\n\n<details>\n<summary>chore(deps): update dependency docutils to v0.20.1</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/docutils-0.x`\n  - Merge into: `main`\n  - Upgrade docutils to `==0.20.1`\n\n\n</details>\n\n<details>\n<summary>chore(deps): update dependency grpcio-tools to v1.59.2</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/grpcio-tools-1.x`\n  - Merge into: `main`\n  - Upgrade grpcio-tools to `==1.59.2`\n\n\n</details>\n\n<details>\n<summary>chore(deps): update dependency instruments/confluent-kafka to >=2.3.0, <=2.3.0</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/instruments-confluent-kafka-2.x`\n  - Merge into: `main`\n  - Upgrade [instruments/confluent-kafka](https://togithub.com/confluentinc/confluent-kafka-python) to `>=2.3.0, <=2.3.0`\n\n\n</details>\n\n<details>\n<summary>chore(deps): update dependency instruments/starlette to ~=0.32.0.post1</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/instruments-starlette-0.x`\n  - Merge into: `main`\n  - Upgrade [instruments/starlette](https://togithub.com/encode/starlette) to `~=0.32.0.post1`\n\n\n</details>\n\n<details>\n<summary>chore(deps): update dependency itsdangerous to v2.1.2</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/itsdangerous-2.x`\n  - Merge into: `main`\n  - Upgrade itsdangerous to `==2.1.2`\n\n\n</details>\n\n<details>\n<summary>chore(deps): update dependency markupsafe to v2.1.3</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/markupsafe-2.x`\n  - Merge into: `main`\n  - Upgrade markupsafe to `==2.1.3`\n\n\n</details>\n\n<details>\n<summary>chore(deps): update dependency mypy to v0.991</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/mypy-0.x`\n  - Merge into: `main`\n  - Upgrade [mypy](https://togithub.com/python/mypy) to `==0.991`\n\n\n</details>\n\n<details>\n<summary>chore(deps): update dependency mysqlclient to ~=2.2.0</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/mysqlclient-2.x`\n  - Merge into: `main`\n  - Upgrade [mysqlclient](https://togithub.com/PyMySQL/mysqlclient) to `~=2.2.0`\n\n\n</details>\n\n<details>\n<summary>chore(deps): update dependency pylint to v2.17.7</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/pylint-2.x`\n  - Merge into: `main`\n  - Upgrade [pylint](https://togithub.com/pylint-dev/pylint) to `==2.17.7`\n\n\n</details>\n\n<details>\n<summary>chore(deps): update dependency pymysql to ~=0.10.1</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/pymysql-0.x`\n  - Merge into: `main`\n  - Upgrade [PyMySQL](https://togithub.com/PyMySQL/PyMySQL) to `~=0.10.1`\n\n\n</details>\n\n<details>\n<summary>chore(deps): update dependency ruamel.yaml to v0.18.5</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/ruamel.yaml-0.x`\n  - Merge into: `main`\n  - Upgrade [ruamel.yaml](https://sourceforge.net/p/ruamel-yaml/code/ci/default/tree/) to `==0.18.5`\n\n\n</details>\n\n<details>\n<summary>chore(deps): update dependency test/markupsafe to v2.1.3</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/test-markupsafe-2.x`\n  - Merge into: `main`\n  - Upgrade test/markupsafe to `==2.1.3`\n\n\n</details>\n\n<details>\n<summary>chore(deps): update dependency test/moto to ~=2.3.2</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/test-moto-2.x`\n  - Merge into: `main`\n  - Upgrade [test/moto](https://togithub.com/getmoto/moto) to `~=2.3.2`\n\n\n</details>\n\n<details>\n<summary>chore(deps): update dependency test/parameterized to v0.9.0</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/test-parameterized-0.x`\n  - Merge into: `main`\n  - Upgrade [test/parameterized](https://togithub.com/wolever/parameterized) to `==0.9.0`\n\n\n</details>\n\n<details>\n<summary>chore(deps): update python docker tag to v3.12</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/python-3.x`\n  - Merge into: `main`\n  - Upgrade python to `3.12`\n\n\n</details>\n\n<details>\n<summary>chore(deps): update quay.io/cortexproject/cortex docker tag to v1.15.3</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/quay.io-cortexproject-cortex-1.x`\n  - Merge into: `main`\n  - Upgrade [quay.io/cortexproject/cortex](https://togithub.com/cortexproject/cortex) to `v1.15.3`\n\n\n</details>\n\n<details>\n<summary>chore(deps): update actions/cache action to v3</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/actions-cache-3.x`\n  - Merge into: `main`\n  - Upgrade [actions/cache](https://togithub.com/actions/cache) to `v3`\n\n\n</details>\n\n<details>\n<summary>chore(deps): update actions/checkout action to v4</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/actions-checkout-4.x`\n  - Merge into: `main`\n  - Upgrade [actions/checkout](https://togithub.com/actions/checkout) to `v4`\n\n\n</details>\n\n<details>\n<summary>chore(deps): update actions/setup-python action to v4</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/actions-setup-python-4.x`\n  - Merge into: `main`\n  - Upgrade [actions/setup-python](https://togithub.com/actions/setup-python) to `v4`\n\n\n</details>\n\n<details>\n<summary>chore(deps): update dependency aio_pika to v9</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/aio_pika-9.x`\n  - Merge into: `main`\n  - Upgrade [aio_pika](https://togithub.com/mosquito/aio-pika) to `~=9.3.0`\n\n\n</details>\n\n<details>\n<summary>chore(deps): update dependency bleach to v6</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/bleach-6.x`\n  - Merge into: `main`\n  - Upgrade [bleach](https://togithub.com/mozilla/bleach) to `==6.1.0`\n\n\n</details>\n\n<details>\n<summary>chore(deps): update dependency falcon to v3</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/falcon-3.x`\n  - Merge into: `main`\n  - Upgrade [falcon](https://togithub.com/falconry/falcon) to `~=3.1`\n\n\n</details>\n\n<details>\n<summary>chore(deps): update dependency flake8 to v6</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/flake8-6.x`\n  - Merge into: `main`\n  - Upgrade [flake8](https://togithub.com/pycqa/flake8) to `~=6.1`\n\n\n</details>\n\n<details>\n<summary>chore(deps): update dependency flask to v3</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/flask-3.x`\n  - Merge into: `main`\n  - Upgrade flask to `~=3.0`\n\n\n</details>\n\n<details>\n<summary>chore(deps): update dependency instruments/flask to v3</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/instruments-flask-3.x`\n  - Merge into: `main`\n  - Upgrade instruments/flask to `>=3, <3.1`\n\n\n</details>\n\n<details>\n<summary>chore(deps): update dependency instruments/scikit-learn to v1</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/instruments-scikit-learn-1.x`\n  - Merge into: `main`\n  - Upgrade [instruments/scikit-learn](https://togithub.com/scikit-learn/scikit-learn) to `~=1.3.2`\n\n\n</details>\n\n<details>\n<summary>chore(deps): update dependency instruments/werkzeug to v3</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/instruments-werkzeug-3.x`\n  - Merge into: `main`\n  - Upgrade instruments/werkzeug to `<3.0.2`\n\n\n</details>\n\n<details>\n<summary>chore(deps): update dependency jinja2 to v3</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/jinja2-3.x`\n  - Merge into: `main`\n  - Upgrade jinja2 to `~=3.1`\n\n\n</details>\n\n<details>\n<summary>chore(deps): update dependency mypy to v1</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/mypy-1.x`\n  - Merge into: `main`\n  - Upgrade [mypy](https://togithub.com/python/mypy) to `==1.7.0`\n\n\n</details>\n\n<details>\n<summary>chore(deps): update dependency protobuf to v4</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/protobuf-4.x`\n  - Merge into: `main`\n  - Upgrade protobuf to `~=4.25`\n\n\n</details>\n\n<details>\n<summary>chore(deps): update dependency pylint to v3</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/pylint-3.x`\n  - Merge into: `main`\n  - Upgrade [pylint](https://togithub.com/pylint-dev/pylint) to `==3.0.2`\n\n\n</details>\n\n<details>\n<summary>chore(deps): update dependency pymemcache to v4</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/pymemcache-4.x`\n  - Merge into: `main`\n  - Upgrade [pymemcache](https://togithub.com/pinterest/pymemcache) to `~=4.0`\n\n\n</details>\n\n<details>\n<summary>chore(deps): update dependency pymongo to v4</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/pymongo-4.x`\n  - Merge into: `main`\n  - Upgrade [pymongo](https://togithub.com/mongodb/mongo-python-driver) to `~=4.6`\n\n\n</details>\n\n<details>\n<summary>chore(deps): update dependency pymysql to v1</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/pymysql-1.x`\n  - Merge into: `main`\n  - Upgrade [PyMySQL](https://togithub.com/PyMySQL/PyMySQL) to `~=1.1.0`\n\n\n</details>\n\n<details>\n<summary>chore(deps): update dependency readme-renderer to v42</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/readme-renderer-42.x`\n  - Merge into: `main`\n  - Upgrade [readme-renderer](https://togithub.com/pypa/readme_renderer) to `~=42.0`\n\n\n</details>\n\n<details>\n<summary>chore(deps): update dependency sphinx to v7</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/sphinx-7.x`\n  - Merge into: `main`\n  - Upgrade [sphinx](https://togithub.com/sphinx-doc/sphinx) to `==7.2.6`\n\n\n</details>\n\n<details>\n<summary>chore(deps): update dependency sphinx-rtd-theme to v1</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/sphinx-rtd-theme-1.x`\n  - Merge into: `main`\n  - Upgrade [sphinx-rtd-theme](https://togithub.com/readthedocs/sphinx_rtd_theme) to `~=1.3`\n\n\n</details>\n\n<details>\n<summary>chore(deps): update dependency test/moto to v4</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/test-moto-4.x`\n  - Merge into: `main`\n  - Upgrade [test/moto](https://togithub.com/getmoto/moto) to `~=4.2.8`\n  - Upgrade [test/moto](https://togithub.com/getmoto/moto) to `~=4.2`\n\n\n</details>\n\n<details>\n<summary>chore(deps): update dependency test/protobuf to v4</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/test-protobuf-4.x`\n  - Merge into: `main`\n  - Upgrade test/protobuf to `~=4.25`\n\n\n</details>\n\n<details>\n<summary>chore(deps): update dependency test/werkzeug to v3</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/test-werkzeug-3.x`\n  - Merge into: `main`\n  - Upgrade test/werkzeug to `==3.0.1`\n\n\n</details>\n\n<details>\n<summary>chore(deps): update dependency ubuntu to v22</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/ubuntu-22.x`\n  - Merge into: `main`\n  - Upgrade [ubuntu](https://togithub.com/actions/runner-images) to `22.04`\n\n\n</details>\n\n<details>\n<summary>chore(deps): update github/codeql-action action to v2</summary>\n\n  - Schedule: [\"at any time\"]\n  - Branch name: `renovate/github-codeql-action-2.x`\n  - Merge into: `main`\n  - Upgrade [github/codeql-action](https://togithub.com/github/codeql-action) to `v2`\n\n\n</details>\n\n<br />\n\n🚸 Branch creation will be limited to maximum 2 per hour, so it doesn't swamp any CI resources or overwhelm the project. See docs for `prhourlylimit` for details.\n\n\n---\n> \n> [!WARNING]\n> Please correct - or verify that you can safely ignore - these dependency lookup failures before you merge this PR.\n> \n> -   `Failed to look up pypi package opentelemetry-instrumentation-aiohttp-server`\n> \n> Files affected: `opentelemetry-contrib-instrumentations/pyproject.toml`\n\n\n---\n\n❓ Got questions? Check out Renovate's [Docs](https://docs.renovatebot.com/), particularly the Getting Started section.\nIf you need any further assistance then you can also [request help here](https://togithub.com/renovatebot/renovate/discussions).\n\n\n---\n\nThis PR has been generated by [Mend Renovate](https://www.mend.io/free-developer-tools/renovate/). View repository job log [here](https://developer.mend.io/github/open-telemetry/opentelemetry-python-contrib).\n\n<!--renovate-config-hash:e80b4e42a3043bc12fa0640db4bac392d2bf770acf841360d7c8ceeeac2ec1a9-->\n",
    "head_branch": "renovate/configure",
    "is_a_fork": false,
    "comments": [
      "Wrong setup of Renovate to entire org, reverted and PR not needed."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114a3ac254a19ac290a77",
    "number": 2062,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "activate-pypy3-system-metrics",
    "is_a_fork": true,
    "comments": [
      "@ocelotl : Please review this one and merge it .",
      "> Need to fix the condition where the warning is shown.\r\n\r\n@ocelotl : Fixed"
    ],
    "commit_messages": [
      "Added support for pypy3 system metrics (#2062)\n\n* Added support for pypy3 system metrics\r\n\r\nCo-authored-by: Suryanarayana Peri <suryanarayana.peri@fmr.com>\r\nSigned-off-by: Rahul Kumar <Rahul.Kumar@fmr.com>\r\n\r\n* Change in if condition to log warn message for pypy\r\nCo-authored-by: Suryanarayana Peri <suryanarayana.peri@fmr.com>\r\n\r\nSigned-off-by: Rahul Kumar <Rahul.Kumar@fmr.com>\r\n\r\n* Added logger to else block if pypy\r\nCo-authored-by: Suryanarayana Peri <suryanarayana.peri@fmr.com>\r\n\r\nSigned-off-by: Rahul Kumar <Rahul.Kumar@fmr.com>\r\n\r\n* Reverting the changes\r\nCo-authored-by: Suryanarayana Peri <suryanarayana.peri@fmr.com>\r\n\r\nSigned-off-by: Rahul Kumar <Rahul.Kumar@fmr.com>\r\n\r\n* Changes requested by external reviewer\r\nCo-authored-by: Suryanarayana Peri <suryanarayana.peri@fmr.com>\r\n\r\nSigned-off-by: Rahul Kumar <Rahul.Kumar@fmr.com>\r\n\r\n---------\r\n\r\nSigned-off-by: Rahul Kumar <Rahul.Kumar@fmr.com>\r\nCo-authored-by: Suryanarayana Peri <suryanarayana.peri@fmr.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114a4ac254a19ac290a78",
    "number": 2061,
    "body": "Currently, the exporters set the `_SUPPRESS_INSTRUMENTATION_KEY` key but httpx only checks for `\"suppress_instrumentation\"`.\r\n\r\nThis fixes that bug and does some cleanup to prevent similar bugs in the future.",
    "head_branch": "cleanup-suppress",
    "is_a_fork": true,
    "comments": [
      "@srikanthccv would you mind reviewing again? Thanks!",
      "Thank you @adriangb. The changes are a little bigger than usual. I will take some time to review this one.",
      "No problem. I could make the diff smaller by e.g. adding the new functions and only replacing the old ones in one spot as a proof of concept then doing a followup PR that is just replacing other uses of the context.",
      "@srikanthccv let me know what you'd like to do with this PR so we don't get more conflicts to keep resolving"
    ],
    "commit_messages": [
      "Clean up use of suppress_instrumentation in context and fix httpx bug (#2061)\n\n* Clean up use of suppress_instrumentation in context and fix httpx bug\r\n\r\n* Clean up use of suppress_instrumentation in context and fix httpx bug\r\n\r\n* changelog\r\n\r\n* fix tests\r\n\r\n* fix import\r\n\r\n* fmt\r\n\r\n* update dep\r\n\r\n* lint\r\n\r\n* remove unused imports\r\n\r\n* apply lint\r\n\r\n* Fix version for pika\r\n\r\n* Fix lint\r\n\r\n---------"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114a5ac254a19ac290a79",
    "number": 2060,
    "body": "# Description\r\nSigning CLA",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: kennykguo / name: Kenny Guo  (856ba3e6a62ac68cf2b54026a16b68a1d1865a78)</li><li>:white_check_mark: login: ocelotl / name: Diego Hurtado  (d31b2b6ffcdb34b5accefe3474e9ff7d4207fe16)</li></ul>"
    ],
    "commit_messages": [
      "Update README.rst (#2060)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114a6ac254a19ac290a7a",
    "number": 2059,
    "body": "# Description\r\n\r\nSince the addition of `aiohttp-server` instrumentation, there are multiple projects instrumenting the `aiohttp` library.\r\n\r\n`bootstrap_gen` uses a dict with the instrumented library (`aiohttp`) as key, and had two equal keys, leaving only the second one (`aiohttp-server`) in the final `dict`. Running `opentelemetry-bootstrap -a requirements` in a project using `aiohttp` can confirm this.\r\n\r\nThis changes that file to store the libraries as a list to fix that problem. After this, both `aiohttp-client` and `aiohttp-server` are listed as requirements.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix/auto-instrumentation",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: hartungstenio / name: Christian Hartung  (5da3917591837c953c267e0d13e0306bfaa3fd63, ca60ee00e8787c7a965cc2b3a9b3cfb188e25283, ce54b9c3540f9a37668463d1b9fc439c36c96f8c, bcc8041289090cb29a9b38f3ae4e0f4f83412510)</li><li>:white_check_mark: login: srikanthccv / name: Srikanth Chekuri  (d80b3f72d98ed2aa257cb6cd25b713601567b7f3)</li></ul>",
      "Please sign the CLA",
      "Closing since this got merged in [another](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/2067) pull request"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114a7ac254a19ac290a7b",
    "number": 2054,
    "body": "Contrib builds are failing due to new version of [botobore](https://pypi.org/project/botocore/1.31.82/). Limit version for now.\r\n\r\nhttps://github.com/open-telemetry/opentelemetry-python-contrib/actions/runs/6805934958/job/18508673741?pr=2049",
    "head_branch": "boto",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix contrib build (#2054)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114a8ac254a19ac290a7c",
    "number": 2051,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "lzchen-patch-5",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114a8ac254a19ac290a7d",
    "number": 2049,
    "body": "Copy log updates from `release/v1.21.x-0.42bx`.",
    "head_branch": "opentelemetrybot/copy-change-log-updates-from-release-v1.21.x-0.42bx",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Copy change log updates from release/v1.21.x-0.42bx (#2049)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114a9ac254a19ac290a7e",
    "number": 2045,
    "body": "Fixes https://github.com/open-telemetry/opentelemetry-python-contrib/actions/runs/6791421783/job/18463633098\r\n\r\nRelease job failed due to README not rendering properly for cassandra instrumentation. Title underline is too short.\r\n\r\n```\r\nERROR    `long_description` has syntax errors in markup and would not be rendered on PyPI.\r\n         line 2: Warning: Title underline too short.\r\n```",
    "head_branch": "fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix error in build for README in Cassandra instrumentation (#2045)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114aaac254a19ac290a7f",
    "number": 2041,
    "body": "# Description\r\n\r\nThis PR fixes a typing error for the request hook of the requests instrumentation.\r\n\r\nThe type for this callable is defined here: https://github.com/open-telemetry/opentelemetry-python-contrib/blob/eb6024ca3171072daa5d842d9363e41d72ee64a6/instrumentation/opentelemetry-instrumentation-requests/src/opentelemetry/instrumentation/requests/__init__.py#L90\r\n\r\nBut as we can see on this line: https://github.com/open-telemetry/opentelemetry-python-contrib/blob/eb6024ca3171072daa5d842d9363e41d72ee64a6/instrumentation/opentelemetry-instrumentation-requests/src/opentelemetry/instrumentation/requests/__init__.py#L211C24-L211C24, the number of arguments don't match. This PR fixes the problem.\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nThis PR was not tested, it's only about type hinting. It's a trivial one-liner. Moreover, the request and response hooks for the requests library aren't mentioned in the docs (AFAIK) so I don't think this PR needs a doc update.\r\n\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "Actually a dup of: https://github.com/open-telemetry/opentelemetry-python-contrib/pull/2038. Closing"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114abac254a19ac290a80",
    "number": 2040,
    "body": "# Description\r\n\r\nThis PR fixes a typing error for the request hook of the requests instrumentation.\r\n\r\nThe type for this callable is defined here: https://github.com/open-telemetry/opentelemetry-python-contrib/blob/eb6024ca3171072daa5d842d9363e41d72ee64a6/instrumentation/opentelemetry-instrumentation-requests/src/opentelemetry/instrumentation/requests/__init__.py#L90\r\n\r\nBut as we can see on this line: https://github.com/open-telemetry/opentelemetry-python-contrib/blob/eb6024ca3171072daa5d842d9363e41d72ee64a6/instrumentation/opentelemetry-instrumentation-requests/src/opentelemetry/instrumentation/requests/__init__.py#L211C24-L211C24, the number of arguments don't match. This PR fixes the problem.\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nThis PR was not tested, it's only about type hinting. It's a trivial one-liner. Moreover, the request and response hook for the requests library aren't mentioned in the docs (AFAIK) so I don't think this PR needs a doc update.\r\n\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      " <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/220524743/2040/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-missing-id.svg\" alt=\"CLA Missing ID\" align=\"left\" height=\"28\" width=\"328\"></a> <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/220524743/2040/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-not-signed.svg\" alt=\"CLA Not Signed\" align=\"left\" height=\"28\" width=\"328\"></a><br/><br /><ul><li> :x: The email address for the commit (09991935093be790da85fc41498556282d606bc5) is not linked to the GitHub account, preventing the EasyCLA check. Consult <a href='https://confluence.linuxfoundation.org/pages/viewpage.action?pageId=86641302' target='_blank'>this Help Article</a> and <a href='https://help.github.com/en/github/committing-changes-to-your-project/why-are-my-commits-linked-to-the-wrong-user' target='_blank'>GitHub Help</a> to resolve. (To view the commit's email address, add .patch at the end of this PR page's URL.) For further assistance with EasyCLA, <a href='https://jira.linuxfoundation.org/servicedesk/customer/portal/4' target='_blank'>please submit a support request ticket</a>.</li></ul>"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114acac254a19ac290a81",
    "number": 2039,
    "body": "# Description\r\n\r\nAdd new fields for SQLCommenter:\r\n- `\"application\"`, which should contain the name of the application\r\n- `\"action\"`, which should contain the HTTP verb in the request\r\n\r\nBoth are documented in the [spec](https://google.github.io/sqlcommenter/spec/#format) for SQLCommenter, and (for example) both are [accepted by Google Cloud](https://cloud.google.com/sql/docs/postgres/using-query-insights#adding-tags-to-sql-queries) when displaying Query Insights.\r\n\r\nNote that `\"app_name\"` is already included, but `\"application\"` is the field expected in the spec.\r\n\r\n### Open questions:\r\n- [ ] Should I remove the original `app_name` field? I can't see this one described in the spec.\r\n- [ ] Should I copy these changes over to the other implementations for SQLCommenter in this library (dbapi, flask, psycopg2, sqlalchemy)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nTested by:\r\n- using this modified copy of the library in a production app\r\n- updated unit tests\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "add-sqlcommenter-fields",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: jonadaly / name: Jon Daly  (313f044cb399b0b23bdbc9e2ad93c66a3a22f0e8, 88c13c20e1aa5394beeed404ed89a7bfec82fc0a, e725dd9fb2aec99f96838516c482a86f85f39b9b, 6e4188e149fd0459964c22078922a2fe51882b18, 52acf871ae4fe5ea00c751efaa2ea588910df3bc)</li></ul><!-- Date Modified: 2025-01-22 14:02:57.982424 -->",
      "@shalevr could you take a look at this please? There's no owner for the django component in `.github/component_owners.yml`, so I've pinged you as SQLAlchemy is Django-ORM-adjacent 😆 "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114adac254a19ac290a82",
    "number": 2038,
    "body": "# Description\r\n\r\nResponse hook receives a third parameter, Response, and that should be reflected in the _ResponseHook type\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\nWe're using this instrumentation in our code and we've tested it in production\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: ethervoid / name: Mario de Frutos Dieguez  (60247ea29fc5ec19b10d0c2341516c69d9e4f802)</li><li>:white_check_mark: login: lzchen / name: Leighton Chen  (87d7ddc56e26afccf63843049eafda9b6080eaa5)</li><li>:white_check_mark: login: shalevr / name: Shalev Roda  (7463017cb8b07cea8eb7b20d9e9e122410764ddf)</li></ul>",
      "@ethervoid please give us more information on the issue being fixed here. Please also add at least one test case for these changes.",
      "@ocelotl Hi!, Basically is a missing type in the definition that is bringing errors when you have a type checker. I don't think we need tests, no change in functionality is involved",
      "> @ocelotl Hi!, Basically is a missing type in the definition that is bringing errors when you have a type checker. I don't think we need tests, no change in functionality is involved\r\n\r\n\r\nPlease let us know what errors and what type checker",
      "I'm not against this fix, but we could use a bit more information here regarding what the issue is.",
      "@ocelotl Sorry for not giving enough information.\r\n\r\n`_ResponseHookT` is being used in the `response_hook` method [here](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/47caeab7aff47070c565cd90536a39ec5eb06f34/instrumentation/opentelemetry-instrumentation-requests/src/opentelemetry/instrumentation/requests/__init__.py#L276) and the last argument is the Response object and is  returning a Pylance error as you can see here:\r\n\r\n![image](https://github.com/open-telemetry/opentelemetry-python-contrib/assets/741240/50eb9fdd-f47e-406d-9d6c-185dc555413f)\r\n\r\nHow do we know is a Response object? Because the element is in the `wrapped_send()` function:\r\n\r\n![image](https://github.com/open-telemetry/opentelemetry-python-contrib/assets/741240/7605d242-6b7b-49c6-af62-06409d46f0e1)\r\n\r\nHope it helps! That's why I thought is not necessary to include tests because is just a type-checking fix"
    ],
    "commit_messages": [
      "Fix response hook (#2038)\n\nResponse hook receives a third parameter, Response, and that should be reflected in the _ResponseHook type\r\n\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>\r\nCo-authored-by: Shalev Roda <65566801+shalevr@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114aeac254a19ac290a83",
    "number": 2037,
    "body": "Fixes #2036",
    "head_branch": "issue_2036",
    "is_a_fork": true,
    "comments": [
      "Seems stuck, closing this PR because it may affect other runs because of the amount of jobs this PR has."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114afac254a19ac290a84",
    "number": 2035,
    "body": "Fixes #2034",
    "head_branch": "issue_2034",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add -ra option to pytest runs (#2035)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114afac254a19ac290a85",
    "number": 2033,
    "body": "These test cases started failing after a fix for the handling of empty metric collection cycles was added to the core repo.\r\n\r\nFixes #2032",
    "head_branch": "issue_2032",
    "is_a_fork": true,
    "comments": [
      "I’m still finding that `TestUrllibMetricsInstrumentation.test_metric_uninstrument` fails randomly in Fedora Rawhide on Python 3.12, mostly (exclusively?) on `s390x` or `ppc64le` architectures. I haven’t looked into it closely, but perhaps it is a timing issue? I’m going to just start skipping it unconditionally."
    ],
    "commit_messages": [
      "Fix failing test cases (#2033)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114b0ac254a19ac290a86",
    "number": 2031,
    "body": "Update version to `1.22.0.dev/0.43b0.dev`.",
    "head_branch": "opentelemetrybot/update-version-to-1.22.0.dev-0.43b0.dev",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Update version to 1.22.0.dev/0.43b0.dev (#2031)\n\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114b1ac254a19ac290a87",
    "number": 2030,
    "body": "Prepare release 1.21.0/0.42b0.",
    "head_branch": "opentelemetrybot/prepare-release-1.21.0-0.42b0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[release/v1.21.x-0.42bx] Prepare release 1.21.0/0.42b0 (#2030)\n\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114b2ac254a19ac290a88",
    "number": 2028,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "lzchen-patch-4",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114b3ac254a19ac290a89",
    "number": 2027,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "lzchen-patch-3",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114b4ac254a19ac290a8a",
    "number": 2026,
    "body": "This adds constructor parameters to the ASGI OpenTelemetryMiddleware that allow configuration extraction and sanitization of header values via constructor parameters. Previously this was only configurable via environment variables.\r\n\r\nFixes #2009 ",
    "head_branch": "asgi-constructor-headers",
    "is_a_fork": true,
    "comments": [
      "@srikanthccv can you review? There may be some test failures but I'm pretty confident they can be resolved.\r\n\r\nI don't seem to be able to run any tox commends either locally or in a blank CodeSpaces:\r\n\r\n```\r\npy310-test-instrumentation-asgi: commands_pre[1] /workspaces/opentelemetry-python-contrib/instrumentation/opentelemetry-instrumentation-asgi/tests> pip install '\"opentelemetry-api[test] @ \"git+https://github.com/open-telemetry/opentelemetry-python.git@main\"'\r\nERROR: Invalid requirement: '\"opentelemetry-api[test] @ \"git+https://github.com/open-telemetry/opentelemetry-python.git@main\"'\r\nHint: It looks like a path. File '\"opentelemetry-api[test] @ \"git+https://github.com/open-telemetry/opentelemetry-python.git@main\"' does not exist.\r\npy310-test-instrumentation-asgi: exit 1 (0.45 seconds) /workspaces/opentelemetry-python-contrib/instrumentation/opentelemetry-instrumentation-asgi/tests> pip install '\"opentelemetry-api[test] @ \"git+https://github.com/open-telemetry/opentelemetry-python.git@main\"'\r\n```",
      "Are you using the same tox version mentioned in https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md#development? ",
      "Ah good catch I think I was using v4, let me try that ",
      "@srikanthccv @aabmass tests are passing, I've left some comments on the implementation, could you review please?",
      "Is there anything missing to get this merged? Thanks",
      "One open question I have because what I really want is to use the Starlette instrumentation: can we create a subclass of the ASGI middleware for Starlette, or can we make `_get_default_span_details`, `_InstrumentedStarlette._server_request_hook`, etc. public? Or otherwise add some way to instrument starlette using these parameters?"
    ],
    "commit_messages": [
      "feat: configure header extraction for ASGI middleware via constructor params (#2026)\n\n* feat: configure header extraction for ASGI middleware via constructor params\r\n\r\n* fix django middleware\r\n\r\n* lint\r\n\r\n* remove import\r\n\r\n* Fix lint\r\n\r\n* Update instrumentation/opentelemetry-instrumentation-asgi/src/opentelemetry/instrumentation/asgi/__init__.py"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114b5ac254a19ac290a8b",
    "number": 2025,
    "body": "I am not 100% sure what is the correct way to fix this issue and looking for feedback from maintainers\r\n\r\n\r\n# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python-contrib/issues/2022\r\n\r\nThis fixes a warning from https://github.com/open-telemetry/opentelemetry-python/blob/34d11d59e9b37052eb3aa6706288641ecb3056e7/opentelemetry-api/src/opentelemetry/attributes/__init__.py#L86-L93 when running celery tasks with one of time limits set.\r\n\r\nFor example:\r\n\r\n```python\r\n@app.task(soft_time_limit=42)\r\ndef add(x, y):\r\n    return x + y\r\n```\r\n\r\nor\r\n\r\n```python\r\n@app.task(time_limit=42)\r\ndef add(x, y):\r\n    return x + y\r\n```\r\n\r\nwhich produces heterogenous sequence `int, str` or `str,int` of attribute `celery.timelimit`\r\n\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "timelimit",
    "is_a_fork": true,
    "comments": [
      "`None` is allowed. I would personally prefer (None, 42) over (\"\", \"42\") because the original type is preserved and you don't have to worry about the type when data reaches the backend. ",
      "> None is allowed. [...] original type is preserved and you don't have to worry about the type when data reaches the backend.\n\nI do not disagree with this. \n\nAt the same time I believe this fix is conforming to the [spec](https://opentelemetry.io/docs/specs/otel/common/) which says that arrays MUST be homogenous and `null` values are not allowed in arrays:\n\n> An array of primitive type values. The array MUST be homogeneous, i.e., it MUST NOT contain values of different types.\n\n> Attribute values of null are not valid and attempting to set a null value is undefined behavior.\n> null values SHOULD NOT be allowed in arrays. \n\n\nMaybe a better fix would be to split a single array into two independent fields and track them separately or change the spec :)\n\nWhat do you think?",
      "The spec also says\r\n\r\n> However, if it is impossible to make sure that no null values are accepted (e.g. in languages that do not have appropriate compile-time type checking), null values within arrays MUST be preserved as-is (i.e., passed on to span processors / exporters as null). If exporters do not support exporting null values, they MAY replace those values by 0, false, or empty strings. This is required for map/dictionary structures represented as two arrays with indices that are kept in sync (e.g., two attributes header_keys and header_values, both containing an array of strings to represent a mapping header_keys[i] -> header_values[i]).\r\n\r\nIf there are `None` values in the array, the spec explicitly calls out they should be preserved as-is in languages that don't have compile-time checks. When the data reaches exporter, depending on the protocol support, it might be replaced with zero values of each data type.\r\n\r\nI don't have expertise in celery but I think a number(s) property of instrumentation should be a number(s) attribute, not a string, especially not to fix the warning message. "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114b5ac254a19ac290a8c",
    "number": 2024,
    "body": "Built on top of #1987\r\n\r\nServer part of #1986\r\n\r\nChanges and observations :\r\n- For the 'old' default mode:\r\n  - removes alternative attribute sets for host/url, unifying everything to `net.host.name`, `net.host.port`\r\n  - fixes some minor bugs (span name, unknown HTTP method names)\r\n- Implements new \"http\" and \"http/dup\" modes\r\n  - The approach in #2002 (attribute mapping) is not maintainable for server instrumentation:\r\n    - attributes have different req levels for metrics and spans\r\n    - it's really hard to apply conversion at the right time for the right signal\r\n\r\nDidn't see any technical challenges or limitations when implementing the new version of spec (except tons of boilerplate code)\r\n ",
    "head_branch": "http-server-proto",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114b6ac254a19ac290a8d",
    "number": 2020,
    "body": "# Description\r\n\r\nThis PR fixes issue #367 for `httpx` instrumentation. This would ensure that URLs passed in the form of `https://username:password@example.com/` would result in a http span attribute value of `https://example.com/`.\r\n\r\nBased on https://github.com/open-telemetry/opentelemetry-python-contrib/pull/538\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nAdditional tests are provided:\r\n\r\n- [x] `test_httpx_integration.py::TestSyncIntegration::test_credential_removal`\r\n- [x] `test_httpx_integration.py::TestAsyncIntegration::test_credential_removal`\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "httpx-remote-url-credentials",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: ods / name: Denis Otkidach  (9c2925d7e8072ec0b2ff59deee3e3bfcf6edfac9)</li><li>:white_check_mark: login: ocelotl / name: Diego Hurtado  (bbd2203b9f1cdb1d696f9736c1006d2e10ed5769, b1a9be78975178ecb7eb0560a98d03c3ba73cea1)</li></ul>",
      "@ocelotl @lzchen Could you please take a look / assign reviewers?"
    ],
    "commit_messages": [
      "Remove URL credentials (httpx integration) (#2020)\n\n* Remove URL credentials (httpx)\r\n\r\n* Add CHANGELOG"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114b7ac254a19ac290a8e",
    "number": 2019,
    "body": "# Description\r\n\r\nThis PR aligns the gRPC server span status codes, to be set based on the changes in the otel specification https://github.com/open-telemetry/opentelemetry-specification/pull/3333.\r\n\r\nFixes #1756\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Updated the `abort` test to check for proper span status against different grpc status codes.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n",
    "head_branch": "grpc-status-code-mapping",
    "is_a_fork": true,
    "comments": [
      "Overall looks good. Please could you resolve the Changelog conflicts as there was a recent new release.",
      "> Overall looks good. Please could you resolve the Changelog conflicts as there was a recent new release.\r\n\r\nThanks! I've resolved the conflicts and the tests, and also updated the Aio grpc server to align the status codes properly with the specs.",
      "> Thanks! I've resolved the conflicts and the tests, and also updated the Aio grpc server to align the status codes properly with the specs.\r\n\r\nThank you @FilipNikolovski !\r\n\r\nPlease could you also address the lint suggestions: https://github.com/open-telemetry/opentelemetry-python-contrib/actions/runs/8189053992/job/22392907101?pr=2019\r\n\r\nI see there is also a celery test failure but I don't think it's related to changes in this PR: https://github.com/open-telemetry/opentelemetry-python-contrib/actions/runs/8189053992/job/22392907101?pr=2019",
      "> > Thanks! I've resolved the conflicts and the tests, and also updated the Aio grpc server to align the status codes properly with the specs.\r\n> \r\n> Thank you @FilipNikolovski !\r\n> \r\n> Please could you also address the lint suggestions: https://github.com/open-telemetry/opentelemetry-python-contrib/actions/runs/8189053992/job/22392907101?pr=2019\r\n> \r\n> I see there is also a celery test failure but I don't think it's related to changes in this PR: https://github.com/open-telemetry/opentelemetry-python-contrib/actions/runs/8189053992/job/22392907101?pr=2019\r\n\r\nTook me a while to resolve the failing tests & lint, but anyway..Cleaned up the code a little bit - moved the `_server_status` function to utilities, if you can please have another look :pray:."
    ],
    "commit_messages": [
      "Align gRPC server span status codes to OTEL specs (#2019)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114b8ac254a19ac290a8f",
    "number": 2015,
    "body": "Very rough implementation of pubsub client instrumentation.\r\n\r\nLots of documentation needs updating (I copied the kafka instrumentation) and\r\nI've fiddled with the versions in the new module so I can deploy it with the already-\r\npublished `0.41b0` version of the other modules. The tests also need updating.\r\n\r\nTo build and push the docker image, update the `TAG` in `docker/build.sh` and run it.",
    "head_branch": "pubsub",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114b9ac254a19ac290a90",
    "number": 2013,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nI added support for Flask version 3.0.0 and later.\r\n[The changes in Flask version 3.0.0 are as follows](https://flask.palletsprojects.com/en/3.0.x/changes/#version-3-0-0):\r\n\r\n- Removed previously deprecated code. [#5223](https://github.com/pallets/flask/pull/5223)\r\n- Deprecated the __version__ attribute. Use feature detection, or importlib.metadata.version(\"flask\"), instead. [#5230](https://github.com/pallets/flask/pull/5230)\r\n- Restructured the code such that the Flask (app) and Blueprint classes have Sans-IO bases. [#5127](https://github.com/pallets/flask/pull/5127)\r\n- Allowed self as an argument to url_for. [#5264](https://github.com/pallets/flask/pull/5264)\r\n- Required Werkzeug >= 3.0.0.\r\n\r\nI modified the logic that retrieves the version name through flask.__version__ to be compatible with versions 3.0.0 and above.\r\n\r\n\r\nFixes #1975\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] pytest\r\n- [x]  tox -e py39-test-instrumentation-flask300\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "feature/support-for-flask-3.0.0",
    "is_a_fork": true,
    "comments": [
      "I tested the changes and they worked for me.  I responded over in slack.  Thanks for moving this forward.",
      "@ocelotl \r\nI have a question,\r\nYou specified the werkzeug version as 3.0.0, \r\nIn that case, will the installation of flask 3.0.0 work?",
      "It looks like we now have\r\n\r\nhttps://github.com/open-telemetry/opentelemetry-python-contrib/blob/c9d709a5c455e5c645a4dbe14af2d6a2af3ab41f/tox.ini#L281\r\n\r\nbut also\r\n\r\nhttps://github.com/open-telemetry/opentelemetry-python-contrib/blob/c9d709a5c455e5c645a4dbe14af2d6a2af3ab41f/instrumentation/opentelemetry-instrumentation-flask/pyproject.toml#L38\r\n\r\nhttps://github.com/open-telemetry/opentelemetry-python-contrib/blob/c9d709a5c455e5c645a4dbe14af2d6a2af3ab41f/opentelemetry-instrumentation/src/opentelemetry/instrumentation/bootstrap_gen.py#L88\r\n\r\nIs there any reason we can’t unpin Werkzeug in the latter two locations to allow current 3.x releases?",
      "> It looks like we now have\r\n> \r\n> https://github.com/open-telemetry/opentelemetry-python-contrib/blob/c9d709a5c455e5c645a4dbe14af2d6a2af3ab41f/tox.ini#L281\r\n> \r\n> but also\r\n> \r\n> https://github.com/open-telemetry/opentelemetry-python-contrib/blob/c9d709a5c455e5c645a4dbe14af2d6a2af3ab41f/instrumentation/opentelemetry-instrumentation-flask/pyproject.toml#L38\r\n> \r\n> https://github.com/open-telemetry/opentelemetry-python-contrib/blob/c9d709a5c455e5c645a4dbe14af2d6a2af3ab41f/opentelemetry-instrumentation/src/opentelemetry/instrumentation/bootstrap_gen.py#L88\r\n> \r\n> Is there any reason we can’t unpin Werkzeug in the latter two locations to allow current 3.x releases?\r\n\r\nAs ocelotl mentioned above, he'll do that in a separate issue/PR",
      "@musicinmybrain check #2127 ",
      "> @musicinmybrain check #2127\r\n\r\nThank you! That looks good. (Until the next release, I will carry a small downstream patch to allow Werkzeug 3 without bringing along the rest of the changes in the PR.)",
      "FYI this caused a new `DeprecationWarning` to be emitted when executing the instrumentation, see #2297"
    ],
    "commit_messages": [
      "Feature/support for flask 3.0.0 (#2013)\n\n* support flask 3.0.0\r\n\r\n* support flask 3.0.0\r\n\r\n* support flask 3.0.0\r\n\r\n* modify tox.ini\r\n\r\n* modify Werkzeug version\r\n\r\n* modify Werkzeug version\r\n\r\n* modify flask test version\r\n\r\n* modify flask version\r\n\r\n* modify flask version\r\n\r\n* modify CHANGELOG.md\r\n\r\n* include feedback\r\n\r\n* include feedback\r\n\r\n* Fix lint and generate\r\n\r\n---------\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114baac254a19ac290a91",
    "number": 2011,
    "body": "# Description\r\n\r\nThis closes https://github.com/open-telemetry/opentelemetry-python-contrib/issues/1742 — \"httpx instrumentation doesn't work for httpx.get, httpx.post, etc.\".\r\n\r\nThe `httpx.get`, `httpx.post`, etc. methods ultimately use `httpx._api.request`, which makes instantiates `httpx._api.Client`. But `httpx.Client` is modified during instrumentation without updating the value imported in the `httpx._api` module.\r\n\r\nFixing this was as easy as also patching the `Client` value in `httpx._api`.\r\n\r\nFixes #1742\r\n\r\n## Type of change\r\n\r\nI am not sure if it counts as a feature or bug fix. I'm sure it could be argued both ways, but I decided to call it a bug fix.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nI made this change and confirmed that it caused spans from the HTTPX instrumentation to be nested properly in my observability backend. I can add tests with a bit of guidance about where to look/modify/what would be desired. But I'd like to get confirmation that this is likely to be accepted before putting in the effort.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [X] Documentation has been updated\r\n\r\nI don't think a documentation change is necessary; I'll update changelogs after adding unit tests once confirmed this is desirable.",
    "head_branch": "instrument-httpx-base-methods",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: dmontagu / name: David Montague  (fa69a654b30cc9f0635e3718418be1026f14c183)</li><li>:white_check_mark: login: xrmx / name: Riccardo Magliocchetti  (e3353acaff095447b244bc078710a1a466a2ad73)</li></ul>",
      "Could this patch be considered for merging? We hit this gap in instrumentation in our deployments which relied on `httpx.request` method.",
      "At least a CHANGELOG entry is required.",
      "Possibly related to https://github.com/open-telemetry/opentelemetry-python-contrib/issues/2364 cc @jeremydvoss\r\n\r\n> I can add tests with a bit of guidance about where to look/modify/what would be desired. But I'd like to get confirmation that this is likely to be accepted before putting in the effort.\r\n\r\nI would accept this PR with a test 😄 ",
      "Closing as superseded by #2538 "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114bbac254a19ac290a92",
    "number": 2010,
    "body": "# Description\r\n\r\nThis aims to fix two cases where data types were deemed invalid, resulting in telemetry not being transmitted to our collector.  Specifically:\r\n* don't set the `SpanAttributes.DB_MONGODB_COLLECTION` attribute unless the collection is already a string value.\r\n* `str()`-ify the event failure details\r\n\r\nFixes #1918\r\n\r\n## Type of change\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nSo far, only adhoc testing has been done.  Without these changes, we fail to receive telemetry data and see these logged warnings:\r\n\r\n```\r\nopentelemetry.trace.status.py, line 54 \"Invalid status description type, expected str\"\r\nopentelemetry.attributes._init_.py, line 70 \"Invalid type dict in attribute value sequence. Expected one of ['bool', 'str', 'bytes', 'int', 'float'] or None\"\r\n```\r\n\r\nWith the changes, the warnings are gone and telemetry data flows as expected.  We are using pymongo 4.5.0.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "issue_1918_invalid_attribute_type_fixes",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: cmpilato / name: C. Michael Pilato  (27433cfb460c2dcc3beadbaf6e7b0211c555760e, a8fb1797ff5bf20f7367beb5d39f33f0eca3d92d)</li></ul><!-- Date Modified: 2024-10-22 13:37:06.886642 -->",
      "@cmpilato could you please rebase this?",
      "@xrmx Rebased as requested.",
      "@xrmx I've added a ChangeLog entry, but unfortunately I lack the overall OTEL domain knowledge (and time) to consider a regression test.  Maybe somebody could use the issue #1918 reproduction recipe to whip up such a contribution for at least the \"collection isn't a string\" problem?"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114bcac254a19ac290a93",
    "number": 2008,
    "body": "- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nTested locally on my M1 Mac\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "system-metrics-macos",
    "is_a_fork": true,
    "comments": [
      "@lzchen or @srikanthccv could you please review?"
    ],
    "commit_messages": [
      "Don't collect system.network.connections due to limitation in psutil causing exceptions (#2008)\n\n* Don't collect system.network.connections due to limitation in psutil causing exceptions\r\n\r\n* add changelog\r\n\r\n---------\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>\r\nCo-authored-by: Shalev Roda <65566801+shalevr@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114bdac254a19ac290a94",
    "number": 2007,
    "body": "# Description\r\n\r\nThis PR fixes a bug where a `KeyError` exception is raised if a `POST` request is made to a Tornado app that has the `xsrf_cookies` setting enabled. The issue is that Tornado does the `xsrf` checking before the `prepare` method is run which means that the opentelemetry integration doesn't have the chance to initialise the _START_TIME value: https://github.com/open-telemetry/opentelemetry-python-contrib/blob/v1.16.0/instrumentation/opentelemetry-instrumentation-tornado/src/opentelemetry/instrumentation/tornado/__init__.py#L371\r\n\r\nThis PR fixes the bug by implementing a check that the `_START_TIME` key exists before accessing it in the `_record_on_finish_metrics` method. If the `_START_TIME` key doesn't exist the elapsed time is set to `0`.\r\n\r\nFixes #2006\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nAdded a unit test to verify that the fix works.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix-bug-with-xsrf-check",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: jkimbo / name: Jonathan Kim  (4ca065b0d63757a67d5fab68e3a7a515a5ab00c7, 07fbdd8988575ba1420eefd1bbaf00600c155062)</li></ul>"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114beac254a19ac290a95",
    "number": 2002,
    "body": "Part https://github.com/open-telemetry/opentelemetry-python-contrib/issues/1986\r\n\r\nDoes not support redirect/retries. Tracking [issue](https://github.com/open-telemetry/opentelemetry-python-contrib/issues/2000)\r\n\r\nOpt-in mechanism for certain attributes for new semconvs don't exist yet and will be implemented in the future. (ie. url_scheme)\r\n\r\nTracking issue for updating semconv package to 1.23.X: https://github.com/open-telemetry/opentelemetry-python/issues/3538\r\n\r\nSample below:\r\n\r\n```python\r\nimport os\r\nimport requests\r\nfrom opentelemetry import trace\r\nfrom opentelemetry.instrumentation.requests import RequestsInstrumentor\r\nfrom opentelemetry.sdk.trace import TracerProvider\r\nfrom opentelemetry.sdk.trace.export import BatchSpanProcessor, ConsoleSpanExporter\r\n\r\n# Specify \"http\", \"http/dup\" or \"\"\r\nos.environ[\"OTEL_SEMCONV_STABILITY_OPT_IN\"] = \"http/dup\"\r\n\r\n# Enable instrumentation in the requests library.\r\nRequestsInstrumentor().instrument()\r\n\r\ntrace.set_tracer_provider(TracerProvider())\r\ntracer = trace.get_tracer(__name__)\r\nexporter = ConsoleSpanExporter()\r\nspan_processor = BatchSpanProcessor(exporter)\r\ntrace.get_tracer_provider().add_span_processor(span_processor)\r\n\r\nwith tracer.start_as_current_span(\"parent\"):\r\n    response = requests.get(\"https://example.com/\", timeout=5)\r\n\r\ninput()\r\n```\r\n\r\nOld semconv with envvar set to \"default\" or \"\":\r\n```python\r\n    \"attributes\": {\r\n        \"http.method\": \"GET\",\r\n        \"http.url\": \"https://example.com/\",\r\n        \"http.status_code\": 200\r\n    },\r\n```\r\n\r\nNew semconv with envvar set to \"http\":\r\n```python\r\n    \"attributes\": {\r\n        \"http.request.method\": \"GET\",\r\n        \"url.full\": \"https://example.com/\",\r\n        \"server.address\": \"example.com\",\r\n        \"network.peer.address\": \"example.com\",\r\n        \"http.response.status_code\": 200,\r\n        \"net.protocol.version\": \"1.1\"\r\n    },\r\n```\r\n\r\nBoth semconv with envvar set to \"http/dup\":\r\n```python\r\n    \"attributes\": {\r\n        \"http.method\": \"GET\",\r\n        \"http.request.method\": \"GET\",\r\n        \"http.url\": \"https://example.com/\",\r\n        \"url.full\": \"https://example.com/\",\r\n        \"http.host\": \"example.com\",\r\n        \"server.address\": \"example.com\",\r\n        \"network.peer.address\": \"example.com\",\r\n        \"http.status_code\": 200,\r\n        \"http.response.status_code\": 200,\r\n        \"http.flavor\": \"1.1\",\r\n        \"net.protocol.version\": \"1.1\"\r\n    },\r\n```\r\n",
    "head_branch": "req",
    "is_a_fork": true,
    "comments": [
      "@trask \r\n\r\nMarking as draft for prototyping reasons.",
      "Thanks a lot @lzchen!\r\n\r\nA few follow-up questions:\r\n- no retry tracking: how hard do you think this would be? Any blockers you envision?\r\n- can we add prototype for `error.type` as well? \r\n- span names were changed ",
      "> Thanks a lot @lzchen!\r\n> \r\n> A few follow-up questions:\r\n> \r\n> * no retry tracking: how hard do you think this would be? Any blockers you envision?\r\n> * can we add prototype for `error.type` as well?\r\n> * span names were changed\r\n\r\n@lmolkova \r\n\r\n1. Are there other cases in which we expect retries to happen automatically with the underlying instrumented library besides redirects? The requests library handles [redirects](https://docs.python-requests.org/en/latest/user/quickstart/#redirection-and-history) automatically by default.\r\n     - What do we expect to happen here? The count being stamped on one span or multiple spans created for the initial call and then the redirect?\r\n     - For cases like 503 where the library does not handle this automatically, are multiple spans expected to be created by the instrumentation library or by the user?\r\n    If we are just stamping the one span, I don't think it will be that difficult to implement. Just needs clarification on behavior.\r\n2. Done in recent commits\r\n3. Are you referring to the change of \"HTTP {METHOD NAME} to just {METHOD NAME}\" ?"
    ],
    "commit_messages": [
      "Requests instrumentation http semantic convention migration (#2002)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114beac254a19ac290a96",
    "number": 2001,
    "body": "# Description\r\n\r\nThis aims to address #1996 by instrumenting `boto3.session.Session`. I'm not very familiar with how instrumentation works in detail, so I'm not sure if this is the right approach, but it does seem to work.\r\n\r\n## Type of change\r\n\r\n- Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- tox for this module\r\n- using the reproduction script in the issue and copying in the changed module file\r\n    ```\r\n    COPY __init__.py /usr/local/lib/python3.8/site-packages/opentelemetry/instrumentation/boto3sqs/__init__.py\r\n    ```\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "boto3sqs-session",
    "is_a_fork": true,
    "comments": [
      " <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/220524743/2001/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-not-signed.svg\" alt=\"CLA Not Signed\" align=\"left\" height=\"28\" width=\"328\"></a><br/><br /><ul><li><a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/220524743/2001/#/?version=2' target='_blank'>:x:</a> - login: @rdkr / name: Neel Radhakrishnan . The commit (4fe5c9138984772592012a543d4a204a7f76d097) is not authorized under a signed CLA. <a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/220524743/2001/#/?version=2' target='_blank'>Please click here to be authorized</a>. For further assistance with EasyCLA, <a href='https://jira.linuxfoundation.org/servicedesk/customer/portal/4' target='_blank'>please submit a support request ticket</a>.</li></ul>"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114bfac254a19ac290a97",
    "number": 1995,
    "body": "# Description\r\n\r\nThis PR addresses the scenario where the existing `messaging.destination` attribute may not uniquely identify the messaging destination when the same SNS topic name is present for multiple accounts. This PR includes the SNS topic arn as the span attribute `messaging.destination.name` to uniquely identify the messaging destination. Note that when `opentelemetry-semantic-conventions` version `0.42b0` is released, the constant `SpanAttributes.MESSAGING_DESTINATION_NAME` can be used instead of `messaging.destination.name`.\r\n\r\nFixes # [1989](https://github.com/open-telemetry/opentelemetry-python-contrib/issues/1989)\r\n\r\n## Type of change\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\nTested that `messaging.destination.name` is present as a span attribute for SNS when a message is published to an SNS topic arn.\r\n- [x] test-instrumentation-botocore\r\n\r\n# Does This PR Require a Core Repo Change?\r\n- [x] No.\r\n\r\n# Checklist:\r\n- [x] Followed the style guidelines of this project\r\n\r\n@pavankrish123 @svrnm @noltak3 @alingamn",
    "head_branch": "include-topic-arn-in-span-attributes",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: yumarg / name: Margaret Yu  (e320f40336f20fee6511ae394f1e4bdf8c945331)</li></ul>",
      "Thanks @yumarg  \r\n\r\nFYI - Reference, please see the conversation - https://github.com/open-telemetry/opentelemetry-js-contrib/issues/1716",
      "@sanketmehta28  will you be able to review? ",
      "@ocelotl @lzchen @aabmass @jeremydvoss @sanketmehta28 @shalevr - Would any of you be able to take a look at this PR? Thanks! Please refer to the equivalent Node.js PRs https://github.com/open-telemetry/opentelemetry-js-contrib/pull/1727, https://github.com/open-telemetry/opentelemetry-js/pull/4197",
      "This PR looks good to me, would be good to get someone from AWS to confirm the ARN is appropriate here and approve. I saw the JS PR pinged @carolabadeer",
      "@aabmass I updated the `CHANGELOG`, and would appreciate an approval again - thanks!",
      "@yumarg can you have someone from AWS give their approval here as well?",
      "cc: @wangzlei  @carolabadeer can you please take a look into this change as well and approve it ",
      "Hi @aabmass, We reached out to @carolabadeer  and she is no longer working with AWS Xray team. So, she will not be able to review.. Can you please add any other AWS folks you may know to get this reviewed, this has been pending for almost 2 weeks now. \r\n\r\nSorry to trouble you, we have lot of instrumentation cases depending on resolving this issue - hope you understand. \r\n\r\nPlease and thank you ",
      "Thanks @srprash. @aabmass can we please merge the PR. Please let us know if you need anything else. ",
      "@srprash  would you be able to review the JS sister PR as well, they are waiting on the same ask from AWS X-Ray team.  https://github.com/open-telemetry/opentelemetry-js-contrib/pull/1727. Please and thank you :)  ",
      "Hi @aabmass, I rebased my changes on top of `main` - would appreciate an approval again, thank you!"
    ],
    "commit_messages": [
      "Specify the topic arn as the span attribute messaging.destination.name in the botocore sns instrumentation (#1995)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114c0ac254a19ac290a98",
    "number": 1990,
    "body": "# Description\r\n\r\nFix sanitization for bulk queries for newer versions (>7.x). Continues the work of [#1870](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1870)\r\n\r\nFixes [#1868](https://github.com/open-telemetry/opentelemetry-python-contrib/issues/1868)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n```python\r\nfrom opentelemetry.instrumentation.elasticsearch import ElasticsearchInstrumentor\r\nfrom elasticsearch import Elasticsearch, helpers\r\n \r\nElasticsearchInstrumentor().instrument()\r\n \r\nes = Elasticsearch([\"http://localhost:9200\"])\r\n \r\n \r\ndef gendata():\r\n    mywords = [\"foo\", \"bar\", \"baz\"]\r\n    for word in mywords:\r\n        yield {\r\n            \"_index\": \"mywords\",\r\n            \"word\": word,\r\n        }\r\n \r\n \r\nhelpers.bulk(es, gendata())\r\n```\r\nCurrently it fails with this traceback:\r\n```python\r\nTraceback (most recent call last):\r\n  File \"/Users/gil.teixeira/dev/elastic-telemetry/a.py\", line 18, in <module>\r\n    helpers.bulk(es, gendata())\r\n  File \"/Users/gil.teixeira/dev/elastic-telemetry/venv/lib/python3.11/site-packages/elasticsearch/helpers/actions.py\", line 521, in bulk\r\n    for ok, item in streaming_bulk(\r\n  File \"/Users/gil.teixeira/dev/elastic-telemetry/venv/lib/python3.11/site-packages/elasticsearch/helpers/actions.py\", line 436, in streaming_bulk\r\n    for data, (ok, info) in zip(\r\n  File \"/Users/gil.teixeira/dev/elastic-telemetry/venv/lib/python3.11/site-packages/elasticsearch/helpers/actions.py\", line 339, in _process_bulk_chunk\r\n    resp = client.bulk(*args, operations=bulk_actions, **kwargs)  # type: ignore[arg-type]\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/gil.teixeira/dev/elastic-telemetry/venv/lib/python3.11/site-packages/elasticsearch/_sync/client/utils.py\", line 414, in wrapped\r\n    return api(*args, **kwargs)\r\n           ^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/gil.teixeira/dev/elastic-telemetry/venv/lib/python3.11/site-packages/elasticsearch/_sync/client/__init__.py\", line 708, in bulk\r\n    return self.perform_request(  # type: ignore[return-value]\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/gil.teixeira/dev/elastic-telemetry/venv/lib/python3.11/site-packages/elasticsearch/_sync/client/_base.py\", line 285, in perform_request\r\n    meta, resp_body = self.transport.perform_request(\r\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/gil.teixeira/dev/elastic-telemetry/opentelemetry-python-contrib/instrumentation/opentelemetry-instrumentation-elasticsearch/src/opentelemetry/instrumentation/elasticsearch/__init__.py\", line 242, in wrapper\r\n    attributes[SpanAttributes.DB_STATEMENT] = sanitize_body(\r\n                                              ^^^^^^^^^^^^^^\r\n  File \"/Users/gil.teixeira/dev/elastic-telemetry/opentelemetry-python-contrib/instrumentation/opentelemetry-instrumentation-elasticsearch/src/opentelemetry/instrumentation/elasticsearch/utils.py\", line 58, in sanitize_body\r\n    flatten_body = _flatten_dict(body)\r\n                   ^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/gil.teixeira/dev/elastic-telemetry/opentelemetry-python-contrib/instrumentation/opentelemetry-instrumentation-elasticsearch/src/opentelemetry/instrumentation/elasticsearch/utils.py\", line 31, in _flatten_dict\r\n    for k, v in d.items():\r\n                ^^^^^^^\r\nAttributeError: 'list' object has no attribute 'items'\r\n```\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: GilTeixeira / name: Gil Teixeira  (5e576df4b57d1f5a483206709170285a654c9a57, 06acb8ffd89c9799cb55b6939c0c3ac211ef3bed, 90ee6a1de9ad8294bd5a1a5c2ba28c56d07ddaa9, 63b45072be005a210d251007e17127db74dc828d, 07b1331d2fdc02f7f74a48daf65673428a4e97d4, 5a2d6d2f07a1d12f2fe7ea3b7d2de1db64e4cad9, 1e0b1f36bf99bea33d7fb195b104cd60cf823f3a, 2b72ac277846bd3af8c5cc4b0e34600250645b2f, e488a3dbe6b27c8ace876149f4af4fb75363dab3, 8c54c5e7ce395baebfbfc68fc3de6b83076b65a9, f84f8eef2f14af23ede02c7764ca06d293f313d0)</li><li>:white_check_mark: login: ocelotl / name: Diego Hurtado  (6db53400a85a29d2f21de1fc11d29ad526575407)</li><li>:white_check_mark: login: srikanthccv / name: Srikanth Chekuri  (1e0b1f36bf99bea33d7fb195b104cd60cf823f3a)</li></ul>",
      "@GilTeixeira please add at least one test case for this changes :V:",
      "This is blocking our upgrade to opentelemetry, could somebody please review and merge this?",
      "@ocelotl  I added a test. And this works with `elasticsearch==8.x`, since the body is a `List[bytes]`.\r\nBut this will still throw an exception with `elasticsearch<=7.x`, since the body that is passed is formed like this: `resp = client.bulk(*args, body=\"\\n\".join(bulk_actions) + \"\\n\", **kwargs) `\r\nI am not sure what to do in these cases, do I wrap the whole `sanitize_body `in a `try except`?",
      "@srikanthccv I think you forgot to add the suggestion 😛\r\nI splitted the string by newline and sanitize each line, lmk if you have a better idea",
      "Would be great to have the final steps to be taken soon, thanks 🙏 ",
      "Looks like this has been addressed by #2355 and this PR can be now closed",
      "Thanks @oliverholworthy. Please check with the latest release and close if it fixes your issue @GilTeixeira ",
      "That's it, good work 🚀 ",
      "Thanks a lot 🙏 👍 "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114c1ac254a19ac290a99",
    "number": 1987,
    "body": "Part of https://github.com/open-telemetry/opentelemetry-python-contrib/issues/1986\r\n\r\nThis will cover point number (1) in the linked issue. Please review as I have not added tests yet. Just wanted to see if this a good approach. ",
    "head_branch": "sem",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Implement Otel semantic convention stability opt-in (#1987)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114c2ac254a19ac290a9a",
    "number": 1983,
    "body": "empty",
    "head_branch": "empty",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114c3ac254a19ac290a9b",
    "number": 1982,
    "body": "Fixes #1981",
    "head_branch": "issue_1981",
    "is_a_fork": true,
    "comments": [
      "Superseded by #1980."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114c4ac254a19ac290a9c",
    "number": 1980,
    "body": "Fixes #1979",
    "head_branch": "issue_1979",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix version of Flask dependency werkzeug (#1980)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114c4ac254a19ac290a9d",
    "number": 1977,
    "body": "# Description\r\n\r\nExtracting schema_url changes from https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1746.\r\n\r\nThis change populates schema URL (1.11.0) used before https://github.com/open-telemetry/opentelemetry-python/pull/3251.\r\n\r\nThere was no constant generated, so hardcoding the string.\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nunit tests\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- ~~Documentation has been updated~~\r\n",
    "head_branch": "provide-schema-url",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Set schema_url on all tracers and meters (#1977)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114c5ac254a19ac290a9e",
    "number": 1976,
    "body": "# Description\r\n\r\nUsing new cloud resource id sem conv field\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "cloud-resource-id",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Using new cloud resource id attribute (#1976)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114c6ac254a19ac290a9f",
    "number": 1973,
    "body": "# Description\r\n\r\npkg_resources is deprecated. Following example of https://github.com/open-telemetry/opentelemetry-python/pull/3217/files\r\n\r\nHelps to fix #1970\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nExisting tests\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "no-iter-entry-points",
    "is_a_fork": true,
    "comments": [
      "Any chance to see this PR moving forward please? Can I help in some ways?",
      "@jeremydvoss can I help you finalize this PR?",
      "@jeremydvoss Do you have any plan with this change? It would be great if these warnings get fixed! :bow:",
      "@jeremydvoss, do need any help with this PR? \r\nPlease, don't abandon it :(",
      "It has been several months already without any updates or comments. I will try to propose a new change on top of this one in the coming days, with updated code to fix all the warnings.",
      "Actually, it's already picked up in https://github.com/open-telemetry/opentelemetry-python-contrib/pull/2181/"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114c7ac254a19ac290aa0",
    "number": 1969,
    "body": "# Description\r\n\r\nWhen we use tracing we must propogate trace context between our services. We also can setup different sampling strategies, like `TraceIdRatioBased` or  `ParentBasedTraceIdRatio`.\r\n\r\n\r\nSuppose we have 2 services:\r\n`A` - publish a message to RMQ\r\n`B` - consume a message from RMQ\r\n\r\n\r\nIn the current solution we propogate trace context only when service A made decision that current trace will be recorded.\r\n\r\nIf we use `ParentBasedTraceIdratio` and `A` make decission that current trace will not be recorded then `aio-pika instrumentation` will not propogated trace context to `B`. Service `B` consume message, does not find trace context and creates a new trace with new context, but now service `B` may decide to record current span/trace. And we get confused because in service `A` we decided not to record this trace but it was recorded in half. \r\n\r\n\r\nThe trace context must be also propogated for things like logs. If we write trace_id to log extra in `A` and `B` then we can join logs by trace_id.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [X] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n- [X] Documentation has been updated\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: nesb1 / name: Bulygin Evgeny  (0327842983ddfb6430182f80b9d19c0cf2489a17, 438977f7b8fcb1a82debc77bc52e7e47820f6869, 26a01cb6fade5d22280693badd3dac3c7e1fd7c3, 6cb3002147f42d45a3c96f7cc1e10647bbbb29ff, 78e3441b646a41f69f329b8a11c2a4ae4b2ae671, df13def480002896529ac48e017b938eb97faf67, 697b548c8d9773cf289f66b4fe0f95d67b0fdd34, 589ea7cd9548ddfa33a4b4c680e9a4b7b0ba7cce, 581eb1b27e2a11c146da7c383ac2de7e69838b5f)</li><li>:white_check_mark: login: shalevr / name: Shalev Roda  (addc02915b8038087c83d50d8bd391c72107d06e)</li></ul>",
      "@ofek1weiss please review it:) ",
      "@codeboten @lzchen @srikanthccv  @shalevr  @ocelotl check plz",
      "This is also happening [here](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/instrumentation/opentelemetry-instrumentation-pika/src/opentelemetry/instrumentation/pika/utils.py#L117). Does this need fixing too? If so, can you please include this in your PR as well, @nesb1?",
      "If this is a bugfix, please add a CHANGELOG entry. We also need at least simple unit test for this change, we required that for any active code change.",
      "@ocelotl thx for your reply, i will fix it. ",
      "@codeboten @lzchen @srikanthccv @shalevr @ocelotl",
      "Hey @nikosokolik @oxeye-nikolay @ofek1weiss, just wondering if you've had a chance to take another look at this solution? Let me know if there's anything I can do to help out so we can merge the suggestion. Thanks!",
      "review required, a lot of time has passed\r\n@ocelotl @nikosokolik @oxeye-nikolay  @codeboten @lzchen @ofek1weiss ",
      "@srikanthccv thank you for approve, but i can`t merge this pr, can you help please?",
      "One of the maintainers will merge it. cc @ocelotl @lzchen ",
      "@shalevr can merge it as well",
      "Some tests are failing, Please fix them",
      "@shalevr fixed",
      "> @shalevr fixed\r\n\r\nThe tests are still failing",
      "Please fix the lint errors",
      "@shalevr fixed",
      "> @shalevr fixed\r\n\r\nThank you"
    ],
    "commit_messages": [
      "aio-pika instrumentation: Removed check for non-sampled span when inject message header. (#1969)\n\n* aio-pika instrumentation: Removed check for non-sampled span when inject message headers. Reason to change is that sampled flag can be propagate https://www.w3.org/TR/trace-context/#sampled-flag and be useful when trace is not sampled.\r\n\r\n* black formting\r\n\r\n---------\r\n\r\nCo-authored-by: Shalev Roda <65566801+shalevr@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114c8ac254a19ac290aa1",
    "number": 1967,
    "body": "# Description\r\n\r\nWhen we implemented the gunicorn.py configuration with a post fork, we wanted to use OTEL auto-instrumentation easily.\r\nBut a bug appeared when using `sitecustomize`.\r\n\r\nHere is an example of a gunicorn post fork to load auto-instrumentation.\r\n```py\r\ndef post_fork(server, worker):\r\n    from opentelemetry.instrumentation.auto_instrumentation import sitecustomize\r\n```\r\n\r\nif we run gunicorn like this\r\n```sh\r\ngunicorn my-app.wsgi -c gunicorn.py\r\n```\r\n\r\nAn error appear :\r\n```\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.9/site-packages/gunicorn/arbiter.py\", line 608, in spawn_worker\r\n    self.cfg.post_fork(self, worker)\r\n  File \"gunicorn.py\", line 15, in post_fork\r\n    from opentelemetry.instrumentation.auto_instrumentation import sitecustomize\r\n  File \"/usr/local/lib/python3.9/site-packages/opentelemetry/instrumentation/auto_instrumentation/sitecustomize.py\", line 44, in <module>\r\n    initialize()\r\n  File \"/usr/local/lib/python3.9/site-packages/opentelemetry/instrumentation/auto_instrumentation/sitecustomize.py\", line 32, in initialize\r\n    environ[\"PYTHONPATH\"], dirname(abspath(__file__)), pathsep\r\n  File \"/usr/local/lib/python3.9/os.py\", line 679, in __getitem__\r\n    raise KeyError(key) from None\r\nKeyError: 'PYTHONPATH'\r\n```\r\n\r\n**PYTHONPATH should not be required to use this auto-instrument feature.**",
    "head_branch": "fix-auto-instrumentation",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: lperdereau  (4450f12c237c6c22ea4d64ccce439b5d35c524d5, c647e5d8aaa3d9d4d5ab941b77ec4b86bf1b4797)</li><li>:white_check_mark: login: ocelotl / name: Diego Hurtado  (9e37645393de14278e80072fe5bc538a92faaf4f, 895e17265da10a577674531ca14df0f2d2412516, 8fb7894fc41964f5fb94538110c262a6f7d3e8c7, 3d8c120adee76f32e8f2ba6dd33c235e1b9cd028, 19d7d20f33af910dbf968a2beaa1104e07dd9fc0)</li><li>:white_check_mark: login: bourbonkk / name: Allen Kim  (833375060e7541d4cb6b50e5fc528296882b15e5)</li><li>:white_check_mark: login: jeremydvoss / name: Jeremy Voss  (66e396feecf86462c768dffe5c7ed9b7bdd7e7b9, ce47110120d8118fdb03cf16965b5fb7d10dbbfb)</li><li>:white_check_mark: login: adriangb / name: Adrian Garcia Badaracco  (fea40e2c50bff6cf895c38efa8b325ba796b00b2)</li><li>:white_check_mark: login: flands / name: Steve Flanders  (bcc03dcd4b30202e6bfbc503210a1a5705cdf4f9)</li><li>:white_check_mark: login: musicinmybrain / name: Ben Beasley  (e3fc3d1246ef56165187ade054083b93e3614aad)</li><li>:white_check_mark: login: sofiia-tesliuk / name: Sofiia Tesliuk  (c346dde5093a83600e4a350832c94005779fe44a)</li></ul>",
      "Hello @ocelotl,\r\n\r\nIs it possible to have a review on this tiny patch ?\r\nOr is it possible to find out the procedure for obtaining a review?\r\n\r\nRegards",
      "reviewing...",
      "This implementation has an issue that is not evident when running the tests because the order of the tests makes them pass. If you run: `tox -e py311-test-opentelemetry-instrumentation -- -k test_unset` this happens:\r\n\r\n```\r\nauto_instrumentation/test_run.py::TestRun::test_unset PASSED                                                                                                                             [ 50%] auto_instrumentation/test_sitecustomize.py::TestSiteCustomize::test_unset FAILED                                                                                                         [100%] \r\n                                                                                                                                                                                                =========================================================================================== FAILURES ===========================================================================================\r\n_________________________________________________________________________________ TestSiteCustomize.test_unset _________________________________________________________________________________\r\n                                                                                                                                                                                                \r\nself = <test_sitecustomize.TestSiteCustomize testMethod=test_unset>                                                                                                                                                                                                                                                                                                                             \r\n    def test_unset(self):                                                                                                                                                                       \r\n        if environ.get(\"PYTHONPATH\"):                                                                                                                                                           \r\n            del environ[\"PYTHONPATH\"]  # enforce remove key/value from environ                                                                                                                  \r\n        from opentelemetry.instrumentation.auto_instrumentation import sitecustomize                                                                                                            \r\n>       self.assertEqual(environ.get(\"PYTHONPATH\"), None)                                                                                                                                       \r\nE       AssertionError: '' != None                                                                                                                                                              \r\n                                                                                                                                                                                                \r\nauto_instrumentation/test_sitecustomize.py:28: AssertionError                                                                                                                                   \r\n```",
      "> because the order of the tests makes them pass.\r\n\r\nIs this fixed now?",
      "> > because the order of the tests makes them pass.\r\n> \r\n> Is this fixed now?\r\n\r\nyes, it is fixed :v:"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114c9ac254a19ac290aa2",
    "number": 1966,
    "body": "# Description\r\n\r\nImprove semantic conventions for confluent kafka producer\r\n\r\nFixes #1962\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] test_produce\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "improve_semantic_conversion_for_producer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114caac254a19ac290aa3",
    "number": 1965,
    "body": "# Description\r\n\r\nImplemented all available methods for the Producer and Consumer in the proxies\r\n\r\nFixes #1962\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] test_producer_proxy_implemented_all_methods\r\n- [x] test_consumer_proxy_implemented_all_methods\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "add_missing_methods_to_proxies",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114cbac254a19ac290aa4",
    "number": 1961,
    "body": "# Description\r\n\r\nRemove unused _attributes_by_preference constant in django instrumentation\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "cleanup",
    "is_a_fork": true,
    "comments": [
      "CI failure appears unrelated to PR."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114ccac254a19ac290aa5",
    "number": 1960,
    "body": "# Description\r\n\r\nAdd suppression logic to ignore tracing when suppression key is true\r\n\r\nFixed #1962\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] New unit test\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "add-suppresion-to-confluent-kafka",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: oleksii-valuiskyi  (1efafec0f5c77a52d38366e1f0a2a723af07ca24)</li><li>:white_check_mark: login: xrmx / name: Riccardo Magliocchetti  (47576e8092b8ff2225baecc4d799f95c7aa9de82)</li></ul><!-- Date Modified: 2024-06-05 07:47:39.747603 -->"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114cdac254a19ac290aa6",
    "number": 1959,
    "body": "# Description\r\n\r\nThis sets the description for the `http.client.duration`, `http.client.request.size`, and `http.client.response.size` metrics per what is defined in the [semantic conventions](https://github.com/open-telemetry/semantic-conventions/blob/main/model/metrics/http.yaml#L155C44-L179) for the metrics. This is done for both the `urllib` and `urllib3` instrumentation libraries.\r\n\r\nWhen used with other services written in other languages that emit the same metrics, all services must emit the same metric metadata (name, description) when used in conjunction with a Prometheus backend. The OpenTelemetry Collector, Prometheus exporter, will drop metrics that match the name but not the description against already received metrics. We have faced this problem as part of the OpenTelemetry demo project.\r\n\r\nFixes #1958 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "urllib.metric-descriptions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "urllib/urllib3 - set metric descriptions per semantic conventions (#1959)\n\n* Set metric descriptions per semantic conventions\r\n\r\n* Set metric descriptions per semantic conventions\r\n\r\n* fix spelling\r\n\r\n---------\r\n\r\nCo-authored-by: Shalev Roda <65566801+shalevr@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114ceac254a19ac290aa7",
    "number": 1957,
    "body": "WIP\r\n\r\n# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: awtkns / name: Adam Watkins  (5072ab87f2186d59b39d6bdcf886305b2d63a1f3)</li></ul>",
      "@awtkns Any update on when can this be merged?",
      "Hi! Is there any updates on this? ",
      "@awtkns Any update on when can this be merged?",
      "Hi @awtkns, any news on this PR ?",
      "@emdneto could you close this PR in favor to #2082 ?"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114cfac254a19ac290aa8",
    "number": 1955,
    "body": "# Description\r\n\r\nAdds full statement capturing for additional Mongo commands: `findAndModify`, `aggregate`, and `createIndexes`.\r\n\r\nhttps://github.com/open-telemetry/opentelemetry-python-contrib/pull/1512 originally added statement capturing, but only captured statements for a few command types.\r\n\r\n`findAndModify` (aka `find_one_and_update` in pymongo) has two attributes of interest, so `COMMAND_TO_ATTRIBUTE_MAPPING` was changed slightly.\r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python-contrib/issues/1951.\r\n\r\n## Type of change\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nAdded unit tests to test statement capturing for each additional command type.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "pymongo-capture-statement-more-commands",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: shkupferxom / name: Sam Kupfer  (37c7ba60b9c3e8899959c126834522a028ecca64, 353f36e4acf809db35d15924119580754abbdc6d, 8c0b5dac0c7ae6d4c66c52f10ea72eeaa8586d0c, 721490e7f248faa4587fb34e2232a4b1c3015b16)</li></ul>",
      "@shalevr @srikanthccv Tagging you both because you reviewed the [PR that originally implemented this](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1512)."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114cfac254a19ac290aa9",
    "number": 1952,
    "body": "# Description\r\n\r\nSome ASGI web frameworks, like FastAPI, support scheduling of background tasks that execute after the server has sent a response to the client. Currently, the root server span doesn't end when the response is dispatched but rather when the server has completely processed the request. This can skew aggregate statistics, potentially making it appear as if the server has high latency when, in reality, it's only executing background tasks that don't impact the actual latency.\r\n\r\nTo address this, I've made changes to end the `server_span` upon sending the final response body. To ensure there are no duplicate attempts at ending the `server_span`, the span is initialized with `end_on_exit=False` and then ended manually if it's still recording.\r\n\r\n**However**, one challenge with my solution pertains to error reporting. In the original implementation, exceptions in background tasks get reported on the top-level server span. With the changes in this PR, errors won't be reported unless a tracing context is active within the background task. Perhaps the FastAPI instrumentation should introduce a broader span for background task execution to ensure errors are reported within some span.\r\n\r\nThe solution is heavily inspired by the Datadog PR for this exact same problem https://github.com/DataDog/dd-trace-py/pull/3799\r\n\r\nBefore\r\n![image](https://github.com/open-telemetry/opentelemetry-python-contrib/assets/106159316/580aea4f-dc84-487b-b17b-8b541a386678)\r\n\r\nAfter\r\n![image](https://github.com/open-telemetry/opentelemetry-python-contrib/assets/106159316/baca649c-ce06-40f9-80f1-4506c5f76a7c)\r\n\r\n\r\n\r\n\r\nFixes #1684\r\n\r\n\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [X] Ran in production for months (Python 3.11 FastAPI)\r\n- [X] Manually tested with FastApi(0.103.1) in matrix [Normal Request, Request with background execution] x [No Exceptions, Exception before response, Exception in background task*]\r\n- [X] Ran ASGI instrumentation tests\r\n- [X] Ran FastAPI instrumentation tests\r\n- [X] Added additional tests to the ASGI instrumentation\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [X] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n- [ ] ~~Documentation has been updated~~\r\n",
    "head_branch": "feature",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: siminn-arnorgj  (faac707861d6841378cb2bb74a54d635c68e3310, bf8919a197679936702bce9c79a0cf9e4bb9a9d2, f2aa4537b450f2df14d776291408eb76050d1330, 0aca6826639ad8f69e4afc5784c44bb721dd6e00, ba0fcb2a61d958c1c0c2995771e9f696941cb2e8, 597d09196a76f7fbec2d287ae5c5b7efa3c18bde, 816e8a3eb8e57e3066afe44bf46d6c09755be233)</li></ul>",
      "> Thanks for the PR. Do you have any idea on the current state of OpenTelemetry [semantic conventions](https://github.com/open-telemetry/semantic-conventions/blob/main/docs/http/http-spans.m) around this? I remember some effort to standardize when an HTTP span should be ended, but idk if it was for client or server.\r\n\r\nThere definitely have been some efforts to standardize the span duration for both the server and client.\r\n- https://github.com/open-telemetry/opentelemetry-specification/issues/591\r\n- https://github.com/open-telemetry/opentelemetry-python/issues/659\r\n\r\nAs of now the [semantic conventions for HTTP spans](https://github.com/open-telemetry/semantic-conventions/blob/main/docs/http/http-spans.md) is only specifically explicit about HTTP client span duration. [This document](https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/api.md ) provides _some_ guidance on span durations in general:\r\n\r\n> For example, if a span represents a request-response cycle (e.g. HTTP or an RPC),\r\nthe span should have a start time that corresponds to the start time of the\r\nfirst sub-operation, and an end time of when the final sub-operation is complete.\r\nThis includes:\r\n>- receiving the data from the request\r\n>- parsing of the data (e.g. from a binary or json format)\r\n>- any middleware or additional processing logic\r\n>- business logic\r\n>- construction of the response\r\n>- sending of the response\r\n\r\nIt would be good to have some clarifications regarding these matters:\r\n- Does the root HTTP span represent a request-response cycle?\r\n- Does a request-response cycle include any operations after sending the final body?\r\n\r\nIt appears that some vendors interpret the root span duration as latency. This suggests they might assume 'yes' for the first question and 'no' for the second. I think it's a reasonable assumption and therefore that background task execution should be excluded from the root span.",
      "@open-telemetry/opentelemetry-python-contrib-maintainers can someone take a look and merge if it looks good?",
      "@siminn-arnorgj \r\n\r\nWould you mind rebasing with the latest main?"
    ],
    "commit_messages": [
      "Exclude background task execution from root server span in ASGI middleware  (#1952)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114d0ac254a19ac290aaa",
    "number": 1950,
    "body": null,
    "head_branch": "rename",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update pyproject.toml (#1950)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114d1ac254a19ac290aab",
    "number": 1949,
    "body": "We will be releasing the azure resource detector separately from the regular release workflow so switching version to 0.1.0.",
    "head_branch": "each",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Modify eachdist and build script for container packages (#1949)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114d2ac254a19ac290aac",
    "number": 1948,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nAdded metrics for processes as per issue #1924.\r\n- CPU Percent - [psutil.Process().cpu_percent](https://psutil.readthedocs.io/en/latest/index.html?highlight=cpu_percent#psutil.Process.cpu_percent)\r\n- Context Switches Involuntary - [psutil.Process().num_ctx_switches().involuntary](https://psutil.readthedocs.io/en/latest/index.html?highlight=num_ctx_switches#psutil.Process.num_ctx_switches)\r\n- Context Switches Voluntary - [psutil.Process().num_ctx_switches().voluntary](https://psutil.readthedocs.io/en/latest/index.html?highlight=num_ctx_switches#psutil.Process.num_ctx_switches)\r\n- Num Threads - [psutil.Process().num_threads()](https://psutil.readthedocs.io/en/latest/index.html?highlight=num_threads#psutil.Process.num_threads)\r\n\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added Test Code and workflow\r\n- [x] pytest tests\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "feature/add-new-process-metrics",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Feature/add new process metrics (#1948)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114d3ac254a19ac290aad",
    "number": 1947,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fidelity-20230821-180544",
    "is_a_fork": true,
    "comments": [
      "Can you please explain what bug is being fixed by this PR?",
      "No updates for this PR in a while, closing. @rahulhacker please reopen when you have addressed the comments."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114d4ac254a19ac290aae",
    "number": 1946,
    "body": "See: https://github.com/open-telemetry/semantic-conventions/blob/main/docs/http/http-metrics.md#metric-httpserverrequestduration\r\n\r\nI couldn't figure out how to set the histograms' buckets though :(\r\n\r\n# Description\r\n\r\nThe unit for `http.server.request.duration` should be seconds and not milliseconds.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n_This has not been tested yet. I want to start the discussion around this before doing more work._\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "update-http-to-seconds",
    "is_a_fork": true,
    "comments": [
      ">I couldn't figure out how to set the histograms' buckets though :(\r\n\r\nThe advisory API has not been implemented yet.\r\n\r\n>This has not been tested yet. I want to start the discussion around this before doing more work.\r\n\r\nThere are existing tests for each instrumentation that should be updated, ex: https://github.com/open-telemetry/opentelemetry-python-contrib/blob/e318c947a23152c8ff1700f0aad44261be0588cd/instrumentation/opentelemetry-instrumentation-flask/tests/test_programmatic.py#L313-L327 Or did you want to discuss something else?\r\n\r\n@lzchen I belive this also comes under the transition plan for HTTP semantic conventions update https://github.com/open-telemetry/opentelemetry-python-contrib/issues/1768?",
      "Please add a CHANGELOG entry.",
      "@srikanthccv \r\n\r\nBased off of [this](https://github.com/open-telemetry/opentelemetry-specification/issues/3654#issuecomment-1676461568) decision, any breaking changes made while upgrading semantic conventions that conflict, we will take the new conventions as priority. The only exceptions to this would be attributes, and we will be implementing the [migration plan](https://github.com/open-telemetry/opentelemetry-specification/pull/3443) for those. So this change in particular does not need to do anything special in terms of migration.",
      "Part of this tracking issue: https://github.com/open-telemetry/opentelemetry-python-contrib/issues/1999"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114d5ac254a19ac290aaf",
    "number": 1945,
    "body": "Copy log updates from `release/v1.20.x-0.41bx`.",
    "head_branch": "opentelemetrybot/copy-change-log-updates-from-release-v1.20.x-0.41bx",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114d6ac254a19ac290ab0",
    "number": 1943,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes #1919 \r\nAdded instrumentation for asyncio. Developed a coroutine to wrap it so it can be traced.\r\n\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n- Tested via pytest per Python version\r\n- Passing through a workflow\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] cd opentelemetry-python-contrib/instrumentation/opentelemetry-instrumentation-asyncio && pytest tests\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "feature/asyncio-instrumentation",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: bourbonkk / name: Allen Kim  (fc3bcff1db9b74eb3744f888e7437b07169d1797, e05b02b67ec23ef442aefbe3ceca893be430b30a, 143000ae314ce7dc51cbae6a227d9bc6edd0ddc5, 5eb088d29ddd46ab6709161256a73a1edfe21581, 0b3da0ee3244d5f0905ac10b4a1d51b7c74639ef, 56d0c02548e8646c45c2ada7a5564e73824b1e63, 55f23257bf7070e30579ccff1459a7bccafe796a, d3facc4d27e30d9373ee6dc63ab54b894da90bbe, 7581c30b6c609703fa3459cf58ab7c72bd7bd1d2, 31b61573c0a7cc060fb5732453a457a683bc8d8c, 0bfc1c85e6152838d5d6e7634263f2794d3f5a5f, 357453af127a4b230cfa4ca19c95bab38ff8d9cd, 77469d9689bbbf7c2cefa85eafaf3982e44a3871, 5e8b7abac604f59e5410c63d4c19207bb82b1121, 61f2c85814f210ec69c814c43feab74b9b11acc9, 5e522e23ae346afa4ef78c510415a96262e36f2d, 1859cb8af33dc75b3c7308b08b370338a0244aaa, 9d4344aef941e021e10ff6d2ecd288e5f2aa47aa, d342d8ce641b08e22ed597d858ed4e1c928250ad, 3adc0cd9f7cd65a2df05b241c5891b2d415b149f, a56cd65137db5e5d142e962f3f8d886ea909523c, 33569425cb639f19204c06f538bccb9e167ca57e, b4c453cdb6c958e015f26f166039ab4241bc5330, bf76ff307e74c0d53f8b7a8422438488db4be6d5, 15c0375fe64a3191411ddaddaef44f9187251c43, 9cce290e08baab3f00f55d3c152de4267df7b2ee, 6975ab7e1230325e2531c2db8a58447626aafaaf, bbfb0659c1b66b979a918ce398f887696a7a20b6, fe89033fcb6404ae5a472245d3e2a4aeea5978ac, 0d233863e38b3ba6d07aa5988dad1bb00ce30289, aa48c405e819ae9ffc7d19ae4178085dc640b5a8, 26c4498b377057450e854e49db36af470e1fee88, 6bd4ace6ddef6841710bed05c22c2fdbc68f30a2, 86f137c0276e01594c5eb704bce70606d10157ef, 7e40c0b7cd62bb45c0d57ba6ef7821211c4f9e77, b4ffc63d35072b4948226627417064ca179eeada, ffc043bd7009d7198e8380c3e58297f6c5c7b3c8, bcf31721904c0f9b6b9e3d237b58261e19ba1fad, 0c60d3404bd583610d787eeedb159a569bb107ab, 8b077af9bdfc43b44c26ac55514ffb3f89506dab, 9259d72ae7c5f90d292b012970dc73e0ffc70249, 05e6a745b7030522abd3f9c2b5a572b3e5d193e4, 39d0a531c426af847fe047cbd81eed54edf5b878, 36032901fd0d72aabdffc95a6888bea20617333e, 7cc46182562b403102ad16420da04f5343b74260, 1f0f340e7d2c02df0f8968d4c2a51c30aafe9a0f, b036ba30b207c79c06d0661ff139bc370443dd5f, a8d5e165c0b1c97d217a20ad6cb4025988eea9b8, 936dc37e59eb4b7e96a7a626a098fbd223209658, 69c15e862db4b6f9cc181c1733b382e3f0cdb887, f8a0b5e9f80606a10f45b1c61310183e984f4d8a, 2c6d9441bd73ccae4d9164e43c6054b8941059d0, 214a851926d546a944f0b1838be80592be1cebb9, f11322ac562d3010e9f3252bb3aa98b0c10a9ac5, ef45d62996a3df2c406c2edef15cbf473fbda6ef, e93aa9b9d7523e36293f3e92ea5dc2f6e6294054, b9a303d7ea456f8320ce875187b3730a611551d6, 5f7bd4ba1812aa55fdd68f3b39de6e8936878862, b3f460471ff4ee8e04d1fca25ffe85a1de5a8092, 1d536a523d70d2b5ad6d120da96b2ebdb7a0a212, e004986afb46828a8bb2dfaa437d232464955474, e85b9d591e0cd2bb65b49183cb2e69317c304c7f, beaa51959502480d4d59cb4a67788bf2a65af3d5, 4687b20e3d1bddb5d60e78e88c67472a0d562d9a, 20083fb3a1162e2e9b7a62bf37580f6d36ef0b76, e5964562d0775252d78faa5f444dfd39f0b58884, eb5e156687228ccb0ffdd23b3094236967951a97, 9ac37a0f52d1ee62678115729f8f8ccdcd6f6d80, 9c7529414bdc082b57b7a2707ef8ec3fbed8806e, 8512d8e3d78b5bf65a6be508eb80c673ee1712af, e84ee7cfb2fad6cb79406684e7edf17c43f6d3a7, 48be2c3ccb151523714aae155c4bdb439ff2883f)</li><li>:white_check_mark: login: ocelotl / name: Diego Hurtado  (0c7b1213efcd82b4405d7d1f9620a6a5670edfb8, 8c91fa5d567e0f4e3b687a521c37ce6a902d38bf, 41ecf1466a733b8f56aec116ea27a175e0fc9737, 611a7173e0d2052b039c502789755c6a7e61f8af)</li></ul>",
      "Thanks for you contribution, @bourbonkk. Please read [this](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md#expectations-from-contributors). If you agree to become an owner of this instrumentation, please add yourself to `.github/component_owners.yml`.",
      "@ocelotl \r\nI concur with the content of the link you provided. so, I have added a component owner to instrumentation-asyncio",
      "Discussed in the SIG, a solution could be to use an environment variable named `OTEL_PYTHON_ASYNCIO_NAME_OF_COROUTINE_IS_ACTIVE` or something like that to control which coroutines are active and not.\r\n\r\nWe need to check if the moratorium on environment variables applies to these possible environment variables or not.",
      "I've made modifications to specify which coroutine should generate a span using environment variables. Functions used in to_thread can also be configured by name, and since the future object does not have a name, it can be specified using a boolean type.\r\n\r\n1. coroutine:\r\n`\r\nexport OTEL_PYTHON_ASYNCIO_COROUTINE_NAMES_TO_TRACE=coro_name,coro_name2,coro_name3\r\n`\r\n2. future:\r\n`\r\nexport OTEL_PYTHON_ASYNCIO_FUTURE_TRACE_ENABLED=true\r\n`\r\n3. to_thread:\r\n`\r\nexport OTEL_PYTHON_ASYNCIO_TO_THREAD_FUNCTION_NAMES_TO_TRACE=func_name,func_name2,func_name3\r\n`\r\n\r\nThese settings pertain to span generation, and the metrics listed below are generated by default:\r\n\r\n- asyncio.coroutine.duration (ms) - Duration of the coroutine\r\n- asyncio.coroutine.exceptions (count) - Number of exceptions raised by the coroutine\r\n- asyncio.coroutine.created (count) - Number of coroutines created\r\n- asyncio.coroutine.active (count) - Number of coroutines active\r\n- asyncio.coroutine.finished (count) - Number of coroutines finished\r\n- asyncio.coroutine.timeouts (count) - Number of coroutines that timed out\r\n- asyncio.coroutine.cancelled (count) - Number of coroutines cancelled\r\n- asyncio.futures.duration (ms) - Duration of the future\r\n- asyncio.futures.exceptions (count) - Number of exceptions raised by the future\r\n- asyncio.futures.cancelled (count) - Number of futures cancelled\r\n- asyncio.futures.created (count) - Number of futures created\r\n- asyncio.futures.active (count) - Number of futures active\r\n- asyncio.futures.finished (count) - Number of futures finished\r\n- asyncio.futures.timeouts (count) - Number of futures that timed out\r\n- asyncio.to_thread.duration (ms) - Duration of the to_thread\r\n- asyncio.to_thread.exceptions (count) - Number of exceptions raised by the to_thread\r\n- asyncio.to_thread.created (count) - Number of to_thread created\r\n- asyncio.to_thread.active (count) - Number of to_thread active\r\n- asyncio.to_thread.finished (count) - Number of to_thread finished",
      "Sorry for the mention. @ocelotl @aabmass \r\nDoes this PR mean I need to do something more?\r\nOr is this something that needs time to be reviewed?",
      "> Sorry for the mention. @ocelotl @aabmass Does this PR mean I need to do something more? Or is this something that needs time to be reviewed?\r\n\r\nI see asyncio tests failing, please take a look :v:"
    ],
    "commit_messages": [
      "Feature/asyncio instrumentation (#1943)\n\n* add asyncio instrumentation\r\n\r\n* add asyncio instrumentation\r\n\r\n* modify test configure\r\n\r\n* modify test configure\r\n\r\n* modify tox generate result\r\n\r\n* modify tox generate result\r\n\r\n* add python version check\r\n\r\n* modify test code\r\n\r\n* add CHANGELOG.md\r\n\r\n* add docs\r\n\r\n* modify pyproject.toml\r\n\r\n* modify pyproject.toml\r\n\r\n* Add comments mentioned in an issue #1919\r\n\r\n* Add comments mentioned in an issue #1919\r\n\r\n* add asyncio component owner\r\n\r\n* - Add instrumentation-asyncio metric.\r\n- Configure coroutines/to_thread func to apply trace via environment variables.\r\n- Apply trace to future using a boolean environment variable.\r\n\r\n* modify docs\r\n\r\n* modify docs\r\n\r\n* modify docs\r\n\r\n* modify docs\r\n\r\n* modify docs\r\n\r\n* modify test_code\r\n\r\n* modify test_code\r\n\r\n* modify test_code\r\n\r\n* modify asyncio version\r\n\r\n* modify asyncio version\r\n\r\n* update dependency\r\n\r\n* modified lint results\r\n\r\n* modified lint results\r\n\r\n* modified lint results\r\n\r\n* modified lint results\r\n\r\n* modified lint results\r\n\r\n* modified lint results\r\n\r\n* modified lint results\r\n\r\n* include feedback\r\n\r\n* include feedback\r\n\r\n* include feedback\r\n\r\n* modify docs test results\r\n\r\n* Update instrumentation/opentelemetry-instrumentation-asyncio/README.rst\r\n\r\nCo-authored-by: Aaron Abbott <aaronabbott@google.com>\r\n\r\n* Update instrumentation/opentelemetry-instrumentation-asyncio/README.rst\r\n\r\nCo-authored-by: Aaron Abbott <aaronabbott@google.com>\r\n\r\n* Update instrumentation/opentelemetry-instrumentation-asyncio/README.rst\r\n\r\nCo-authored-by: Aaron Abbott <aaronabbott@google.com>\r\n\r\n* Update instrumentation/opentelemetry-instrumentation-asyncio/README.rst\r\n\r\nCo-authored-by: Aaron Abbott <aaronabbott@google.com>\r\n\r\n* Update instrumentation/opentelemetry-instrumentation-asyncio/src/opentelemetry/instrumentation/asyncio/utils.py\r\n\r\nCo-authored-by: Aaron Abbott <aaronabbott@google.com>\r\n\r\n* Update instrumentation/opentelemetry-instrumentation-asyncio/src/opentelemetry/instrumentation/asyncio/utils.py\r\n\r\nCo-authored-by: Aaron Abbott <aaronabbott@google.com>\r\n\r\n* include feedback\r\n\r\n* include feedback\r\n\r\n* drop python 3.7 support\r\n\r\n* drop python 3.7 support\r\n\r\n* Removed from default_instrumentations\r\n\r\n* Recover\r\n\r\n---------\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>\r\nCo-authored-by: Aaron Abbott <aaronabbott@google.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114d7ac254a19ac290ab1",
    "number": 1942,
    "body": "# Description\r\n\r\nThis fixes package/project name for `opentelemetry-resource-detector-azure`. It looks like the `pyproject.toml` was copied from `opentelemetry-resource-detector-container` without updating the project name.\r\n\r\nFixes # (issue)\r\n\r\n(No issue filed)\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nBy inspection only.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added **N/A**\r\n- [ ] Documentation has been updated **N/A**\r\n",
    "head_branch": "resource-azure-name",
    "is_a_fork": true,
    "comments": [
      "Thanks for the PR, @musicinmybrain, #1950 got merged first, closing this PR. :v: ",
      "> Thanks for the PR, @musicinmybrain, #1950 got merged first, closing this PR. ✌️\r\n\r\nWorks for me! Thanks for taking care of it."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114d7ac254a19ac290ab2",
    "number": 1939,
    "body": "# Description\r\n\r\nWe are using open telemetry with Gunicorn. Due to the forking model of Gunicorn (https://opentelemetry-python.readthedocs.io/en/latest/examples/fork-process-model/README.html), we are unable to do automatic instrumentation.\r\n\r\nSince Gunicorn sets up logging very early, setting the logFormat via OTEL_PYTHON_LOG_CORRELATION and OTEL_PYTHON_LOG_FORMAT doesn't do anything. This causes us to have to set the log format to include the trace_id/span_id in the generic formatter. This means that the LoggingInstrumention always has to be instrumented even locally.\r\n\r\nThis is a first draft of a potential way to fix it. I am looking for some feedback.\r\n\r\nThe Fix:\r\n- Since the handler is created the first time one of the configs is called, we need to update the handler's format in place to use the instrumented logger.\r\n\r\nThe Open Questions:\r\n- Most example code where people update the formatter in place assumes there is only one handler defined. While this is ok for most things, there might be cases where multiple handlers are defined. I chose to iterate over them all and change each formatter. This could have some unintended consequences though. Beyond, specifying which handler to use (or which format to override specifically), I am not sure of a better method.\r\n\r\nThe Annoying:\r\n- Since the instrumentations are instrumented in alphabetical order, only logs produced after the logging instrumentation is instrumented get the new format. This means that the format changes during startup which is not ideal.\r\n\r\n```\r\n2023-09-06 11:44:40,943 DEBUG [o11y.tracing:118][pid=19962][MainThread] Instrumented boto3\r\n2023-09-06 11:44:40,946 DEBUG [o11y.tracing:118][pid=19962][MainThread] Instrumented botocore\r\n2023-09-06 11:44:40,955 DEBUG [o11y.tracing:118][pid=19962][MainThread] Instrumented confluent_kafka\r\n2023-09-06 11:44:40,958 DEBUG [o11y.tracing:118][pid=19962][MainThread] Instrumented grpc_aio_client\r\n2023-09-06 11:44:40,959 DEBUG [o11y.tracing:118][pid=19962][MainThread] Instrumented grpc_aio_server\r\n2023-09-06 11:44:40,959 DEBUG [o11y.tracing:118][pid=19962][MainThread] Instrumented grpc_client\r\n2023-09-06 11:44:40,960 DEBUG [o11y.tracing:118][pid=19962][MainThread] Instrumented grpc_server\r\n2023-09-06 11:44:40,974 DEBUG [o11y.tracing:118][pid=19962][MainThread] Instrumented jinja2\r\n2023-09-06 11:44:40,997 DEBUG [o11y.tracing:118][pid=19962][MainThread] Instrumented kafka\r\n2023-09-06 11:44:40,999 DEBUG [o11y.tracing] [tracing.py:118] [trace_id=0 span_id=0 resource.service.name=starfish_local trace_sampled=False] - Instrumented logging\r\n2023-09-06 11:44:41,009 DEBUG [o11y.tracing] [tracing.py:118] [trace_id=0 span_id=0 resource.service.name=starfish_local trace_sampled=False] - Instrumented pymemcache\r\n2023-09-06 11:44:41,042 DEBUG [o11y.tracing] [tracing.py:118] [trace_id=0 span_id=0 resource.service.name=starfish_local trace_sampled=False] - Instrumented pyramid\r\n2023-09-06 11:44:41,060 DEBUG [o11y.tracing] [tracing.py:118] [trace_id=0 span_id=0 resource.service.name=starfish_local trace_sampled=False] - Instrumented redis\r\n2023-09-06 11:44:41,076 DEBUG [o11y.tracing] [tracing.py:118] [trace_id=0 span_id=0 resource.service.name=starfish_local trace_sampled=False] - Instrumented requests\r\n2023-09-06 11:44:41,083 DEBUG [o11y.tracing] [tracing.py:118] [trace_id=0 span_id=0 resource.service.name=starfish_local trace_sampled=False] - Instrumented sqlite3\r\n2023-09-06 11:44:41,085 DEBUG [o11y.tracing] [tracing.py:118] [trace_id=0 span_id=0 resource.service.name=starfish_local trace_sampled=False] - Instrumented urllib\r\n2023-09-06 11:44:41,087 DEBUG [o11y.tracing] [tracing.py:118] [trace_id=0 span_id=0 resource.service.name=starfish_local trace_sampled=False] - Instrumented urllib3\r\n```\r\n\r\n## Type of change\r\n- [X] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [X] Tested locally with a sample Gunicorn app until I get some guidance on final functionality.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "loggingBasicConfig",
    "is_a_fork": true,
    "comments": [
      "There are two open issues within the opentelemetry-python repository that are affected by this pr. \r\n* [1](https://github.com/open-telemetry/opentelemetry-python/issues/3473)\r\n* [2](https://github.com/open-telemetry/opentelemetry-python/issues/2346)\r\n\r\nWhat can we do helping to get this pr reviewed and merged?",
      "> There are two open issues within the opentelemetry-python repository that are affected by this pr.\r\n> \r\n> * [1](https://github.com/open-telemetry/opentelemetry-python/issues/3473)\r\n> * [2](https://github.com/open-telemetry/opentelemetry-python/issues/2346)\r\n> \r\n> What can we do helping to get this pr reviewed and merged?\r\n\r\nAdd this issue on top of those two: https://github.com/open-telemetry/opentelemetry-python-contrib/issues/2346\r\n",
      "going to close this pr. @dhofstetter has a more complete implementation. thanks @dhofstetter and @ocelotl "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114d8ac254a19ac290ab3",
    "number": 1937,
    "body": "…in context\r\n\r\n# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "add-supression-to-logic-to-asyncpg",
    "is_a_fork": true,
    "comments": [
      " <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/220524743/1937/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-not-signed.svg\" alt=\"CLA Not Signed\" align=\"left\" height=\"28\" width=\"328\"></a><br/><br /><ul><li><a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/220524743/1937/#/?version=2' target='_blank'>:x:</a> - login: @mplachter / name: Matthew Plachter . The commit (fc355d8fb850e62e714b13498487a6747c155842) is not authorized under a signed CLA. <a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/220524743/1937/#/?version=2' target='_blank'>Please click here to be authorized</a>. For further assistance with EasyCLA, <a href='https://jira.linuxfoundation.org/servicedesk/customer/portal/4' target='_blank'>please submit a support request ticket</a>.</li></ul>"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114d9ac254a19ac290ab4",
    "number": 1936,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "add-supression-to-logic-to-sqlalchemy",
    "is_a_fork": true,
    "comments": [
      " <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/220524743/1936/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-not-signed.svg\" alt=\"CLA Not Signed\" align=\"left\" height=\"28\" width=\"328\"></a><br/><br /><ul><li><a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/220524743/1936/#/?version=2' target='_blank'>:x:</a> - login: @mplachter / name: Matthew Plachter . The commit (7b7ee657ed30a0083f179056ee13ee070da80f1c) is not authorized under a signed CLA. <a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/220524743/1936/#/?version=2' target='_blank'>Please click here to be authorized</a>. For further assistance with EasyCLA, <a href='https://jira.linuxfoundation.org/servicedesk/customer/portal/4' target='_blank'>please submit a support request ticket</a>.</li></ul>"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114daac254a19ac290ab5",
    "number": 1934,
    "body": "# Description\r\n\r\nRelaxed version range for fastapi to >= 0.58. `add_middleware` signature hasn't changed meaningfully since 2020. It probably will not for the forseeable future. So removing the upper bound makes sense, to be able to use autoinstrumentation for more versions.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nI ran the tox env.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [X] Changelogs have been updated\r\n",
    "head_branch": "fastapi-relaxed-version",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: danygielow / name: Dany Gielow  (b551cc32a476451828871099a13f81b4b5fac445)</li></ul>"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114dbac254a19ac290ab6",
    "number": 1933,
    "body": "# Description\r\n\r\nThe Signature of `Starlette.add_middleware()` seems to be quite stable and hasn't changed since version 0.13 (from mid 2020). The current version as of today is 0.31.1. So we can assume that add_middleware Signature won't change in a meaningful way until 1.x or beyond. \r\n\r\nThat's why I think relaxing the version range to only set a minimum version would be best for future proofness.\r\n\r\nBUGFIXES: \r\n- I found a bug in a missing leading underscore of `_is_instrumented_by_opentelemetry`.\r\n- Fixed DeprecationWarnings in tests for route decorators\r\n\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nI added checks for the `_is_instrumented_by_opentelemetry` in one test.\r\nI ran the tox test env.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [X] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n",
    "head_branch": "starlette-relaxed-version-range",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: danygielow / name: Dany Gielow  (777a206ff2faca91f3af2677400a8c75677d5f4f)</li></ul>",
      "Hello @danygielow, we need a [CLA](https://docs.linuxfoundation.org/lfx/easycla/v2-current/contributors) signature for any PR in this repo.",
      "Please take a look at the test case failures. Are these failures performance-related? If so, could this be cause by using another version of the starlette dependency?"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114dcac254a19ac290ab7",
    "number": 1932,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "pypy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114ddac254a19ac290ab8",
    "number": 1931,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "lzchen-patch-1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114deac254a19ac290ab9",
    "number": 1930,
    "body": "Update version to `1.21.0.dev/0.42b0.dev`.",
    "head_branch": "opentelemetrybot/update-version-to-1.21.0.dev-0.42b0.dev",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Update version to 1.21.0.dev/0.42b0.dev (#1930)\n\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114dfac254a19ac290aba",
    "number": 1929,
    "body": "Prepare release 1.20.0/0.41b0.",
    "head_branch": "opentelemetrybot/prepare-release-1.20.0-0.41b0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[release/v1.20.x-0.41bx] Prepare release 1.20.0/0.41b0 (#1929)\n\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114e0ac254a19ac290abb",
    "number": 1928,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "carboneater-patch-1",
    "is_a_fork": true,
    "comments": [
      " <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/220524743/1928/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-not-signed.svg\" alt=\"CLA Not Signed\" align=\"left\" height=\"28\" width=\"328\"></a><br/><br /><ul><li><a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/220524743/1928/#/?version=2' target='_blank'>:x:</a> - login: @carboneater / name: Gabriel Fournier . The commit (94f57a6e4c6c7bbfb41468b1bdb4b5f43e57d6e2, 84a8c141f5226aec041b370c42782cc859e6807c, 2e659f1dee9098982ff98b98c55fb2782de5c3c9, bb72dc4d776154d52bc9e8dd0a56b14e50ae5b19, e8948a86577bd1fa5915950a0173653307db0d6b, e8823c039aaa56cea0554f782b5e14aa30df0a20, 3aeef6b8f55a5affbc7a08b46c7497573d8dbd28, 5d406ec6d1ea239a50f915a13ffec6834aba4156) is not authorized under a signed CLA. <a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/220524743/1928/#/?version=2' target='_blank'>Please click here to be authorized</a>. For further assistance with EasyCLA, <a href='https://jira.linuxfoundation.org/servicedesk/customer/portal/4' target='_blank'>please submit a support request ticket</a>.</li></ul>",
      "Sorry, wrong project!"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114e0ac254a19ac290abc",
    "number": 1926,
    "body": "# Description\r\n\r\nFix the default type described in the doc \r\n\r\n## Type of change\r\n\r\n- [X] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [X] I checked the default in the implementation\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [X] Documentation has been updated\r\n",
    "head_branch": "docs/fix-commenter-options-doc-type",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: joaothallis / name: João Thallis  (b8023be2ceaeb7fa71117531f5ee52c083d529fa)</li><li>:white_check_mark: login: shalevr / name: Shalev Roda  (279c61d2d934ab07ac7cc829663ed2aa450dbda6)</li></ul>"
    ],
    "commit_messages": [
      "doc: fix `commenter_options` type (#1926)\n\nCo-authored-by: Shalev Roda <65566801+shalevr@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114e1ac254a19ac290abd",
    "number": 1922,
    "body": "# Description\r\n\r\nFix Flask docs which show flask import that does not work. Underlying bug still exists. Flask instrumentation only works with \"import flask.\"\r\n\r\nFixes #1921\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Tested instrumentation works\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "flask-docs",
    "is_a_fork": true,
    "comments": [
      "This import also exists in test_programmatic.py. However, that does not seem to be an issue because it is done after instrumentation.",
      "Since the docs use instrument_app instead of instrument, closing until this can be discussed in dig. It's more of a problem for autoinstrumentation."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114e2ac254a19ac290abe",
    "number": 1920,
    "body": "# Description\r\n\r\nCurrently when using request/response hooks with `HTTPXClientInstrumentor().instrument()`, the hooks are used for both `httpx.Client` and `httpx.AsyncClient`. This becomes an issue if you have a codebase that uses both since the hooks are awaited when using `httpx.AsyncClient` and not awaited when using `httpx.Client`.\r\n\r\nThis PR introduces the ability to pass dedicated sync and async hooks to the main `instrument()` call.\r\n\r\nFor example\r\n```diff\r\n-HTTPXClientInstrumentor().instrument(request_hook=request_hook, response_hook=response_hook)\r\n+HTTPXClientInstrumentor().instrument(request_hook=request_hook, response_hook=response_hook, async_request_hook=async_request_hook, async_response_hook=async_response_hook)\r\n```\r\n\r\nOther signatures such as `instrument_client` are left as-is as this particular situation doesn't quite apply the same way.\r\n\r\nI added a fallback to using the `request_hook/response_hook` when `async_request_hook/async_response_hook` is not specified, that way it won't break any code. Current tests will verify this inherently. Lastly, I slighly adjusted some of the existing typing as a result of these changes to make it more clear which hook(s) are applicable.\r\n\r\nFixes #1201\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Ran `tox` to test `test-instrumentation-httpx`\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "httpx-sync-async-client-auto-instr-fix",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: samypr100 / name: samypr100  (24f4b7e46694795e42ae7da67d6ee1c76c0a2b1d, 44d2c7634baedea0b7e7f074b4eb06a9f642259e, 0b16fe7d0dacb16c93f7e22f69d19d64f58c7189, 0c6cc9139818513506ea1b59e8b3964958f869ef, 46a9dc69e64feebe1463039a0ef7a88fe6ddceae, 7b3a1fe8ed28379dd6640aa19b1d0576d3fbc9e4, d73d19966e6f85a07770a2b19ee2ea1386edd379, 38ab65817bf639dedf7c3f715617828b0f43716e)</li><li>:white_check_mark: login: ocelotl / name: Diego Hurtado  (5b9e33a6cfbf6e1eef8f93aa1f44bf09d9abdfea)</li><li>:white_check_mark: login: shalevr / name: Shalev Roda  (12b4c77b6991d2125c53498dc4bf563ce14b288d)</li></ul>",
      "@srikanthccv Can you please review it 🙏 ",
      "@ocelotl Thanks for the review.\r\n\r\nThere seems to be an unrelated error on the GHA side with flask.\r\n\r\n`ImportError: cannot import name 'url_quote' from 'werkzeug.urls'` causing `py310-test-instrumentation-flask213` to fail.",
      "> @ocelotl Thanks for the review.\r\n> \r\n> There seems to be an unrelated error on the GHA side with flask.\r\n> \r\n> `ImportError: cannot import name 'url_quote' from 'werkzeug.urls'` causing `py310-test-instrumentation-flask213` to fail.\r\n\r\nYes, apparently it is related to the recent release of Werkzeug 3.0.0, I'll take care of this issue.",
      "@ocelotl Merge conflicts have been fixed",
      "@ocelotl Merge conflicts with CHANGELOG should be fixed again",
      "@ocelotl Following up 😅 , can workflows be re-triggered?  🙏 ",
      "@ocelotl Merge conflicts with CHANGELOG have been fixed"
    ],
    "commit_messages": [
      "[opentelemetry-instrumentation-httpx] fix mixing of sync and non async hooks (#1920)\n\n* fix: sync response hooks being used on httpx.AsyncClient\r\n\r\n* docs: add changelog\r\n\r\n* docs: improved docs a bit more\r\n\r\n* docs: fix variable name\r\n\r\n---------\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>\r\nCo-authored-by: Shalev Roda <65566801+shalevr@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114e3ac254a19ac290abf",
    "number": 1917,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nAdded link-checker for markdown files to workflow #1514\r\n\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [X] Tested the workflow locally using act-cli (https://github.com/nektos/act)\r\n- A Screenshot of the whole output would be too large:\r\n![image](https://github.com/open-telemetry/opentelemetry-python-contrib/assets/116752112/fa307190-77b3-4e8a-ae9e-b02c97bd8a22)\r\n![image](https://github.com/open-telemetry/opentelemetry-python-contrib/assets/116752112/ce2651b0-cb4a-4fe0-865a-c0de77ff5523)\r\n\r\n(There were multiple dead links found in different .md files)\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "feature/link-validation-check#1514",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: jonaskir6  (a77a3a19720f7b2dbe405455b799a8f1c3db4adf, 8387282dee314c560165d20282b3930fa9b5c85a, 96b0ec1a69cde3cb46620a2049df949430402026, 2e0db2cfddae6df7eb0ed2d84267465514d1d888, 4f8be7edd8e2e52782a1c7b03d28626630bbaac2, bacdc8531d4d44e7645b65b388825408c3c031f9)</li><li>:white_check_mark: login: shalevr / name: Shalev Roda  (8525e5ae7f7a4278452e11b4128b90ad5d3dfe52, 14a44521600efe4cc5a20162ab1ed1d153d3f981)</li><li>:white_check_mark: login: ocelotl / name: Diego Hurtado  (50b28ff62915faec92a70ea01b4f4fbdd3bf129d, d7bdd729486b8eb88cf734d5da397b775cec62c6)</li></ul>"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114e4ac254a19ac290ac0",
    "number": 1913,
    "body": "CI was not able to run successfully for security change: https://github.com/open-telemetry/opentelemetry-python-contrib-ghsa-5rv5-6h4r-h22v/pull/2\r\n\r\n1. Fixing typing errors introduced by the above pr for Python 3.7\r\n2. Change fix, name is required to be UNKNOWN instead of NONSTANDARD\r\n3. Fix tests",
    "head_branch": "fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix errors introduced in regression (#1913)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114e5ac254a19ac290ac1",
    "number": 1912,
    "body": null,
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114e6ac254a19ac290ac2",
    "number": 1911,
    "body": "Reverts open-telemetry/opentelemetry-python-contrib#1657\r\n\r\nBased on the discussion of today's FAAS SIG (2023-08-15), I created this PR to revert this breaking change to current lambda users until a spec change is created to accommodate an optional behaviour to select between AWS X-Ray context propagation and the behaviour proposed in this PR. \r\n\r\nFYI: @dyladan @tylerbenson @carlosalberto \r\n\r\nReferences:\r\nhttps://github.com/open-telemetry/opentelemetry-js-contrib/pull/1411",
    "head_branch": "revert-1657-lambda-span-link",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Revert \"update awslambda to use _X_AMZN_TRACE_ID as a Span Link\" (#1911)\n\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114e7ac254a19ac290ac3",
    "number": 1909,
    "body": "\r\n# Description\r\n\r\nIn a previous PR #1657 the lambda behaviour was changed so that it extracs the context from the headers of the lambda event instead of from the lambda runtime, using the _X_AMZN_TRACE_ID env var.\r\n\r\nThis behaviour is undesireble as it is a breaking change to existing users.\r\n\r\nThis PR will add the previous behaviour through an opt-in flag so that users can be gracefully migrated or these two \"modes\" of operation can exist without conflict.\r\n\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Unit tests\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "rapphil-add-opt-in-aws-context-propagation",
    "is_a_fork": true,
    "comments": [
      "placing this on hold until we decide what the defaults should be."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114e8ac254a19ac290ac4",
    "number": 1907,
    "body": "# Description\r\n\r\nPoC for adding 'faas.trigger_id' span attribute for elb, sns, sqs, s3. \r\nProof of concept for (https://github.com/open-telemetry/semantic-conventions/issues/262)\r\nFixes # (issue)\r\n\r\n## Type of change\r\n- [X] New feature (non-breaking change which adds functionality)\r\n\r\n\r\n# How Has This Been Tested?\r\n- [X] Unit test \r\n- [X] Deployed code as lambda layer on aws to verify \"faas.trigger_id\" is set properly for s3, sns, sqs, alb\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "poc_trigger_id",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114e8ac254a19ac290ac5",
    "number": 1906,
    "body": "\r\n\r\n# Description\r\n\r\nPoC for adding 'faas.trigger_id' span attribute for elb, sns, sqs, s3. \r\nProof of concept for (https://github.com/open-telemetry/semantic-conventions/issues/262)\r\nFixes # (issue)\r\n\r\n## Type of change\r\n- [X] New feature (non-breaking change which adds functionality)\r\n\r\n\r\n# How Has This Been Tested?\r\n- [X] Unit test \r\n- [X] Deployed code as lambda layer on aws to verify \"faas.trigger_id\" is set properly for s3, sns, sqs, alb\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "poc_extract_metadata_from_event",
    "is_a_fork": true,
    "comments": [
      " <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/220524743/1906/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-missing-id.svg\" alt=\"CLA Missing ID\" align=\"left\" height=\"28\" width=\"328\"></a> <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/220524743/1906/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-not-signed.svg\" alt=\"CLA Not Signed\" align=\"left\" height=\"28\" width=\"328\"></a><br/><br /><ul><li> :x: The email address for the commit (165d18bf297b71e72df7f9174aecb0e2ef9bd0a2, b0eeaa46a0d494a968699b3dfb22b28af1dd78b4) is not linked to the GitHub account, preventing the EasyCLA check. Consult <a href='https://confluence.linuxfoundation.org/pages/viewpage.action?pageId=86641302' target='_blank'>this Help Article</a> and <a href='https://help.github.com/en/github/committing-changes-to-your-project/why-are-my-commits-linked-to-the-wrong-user' target='_blank'>GitHub Help</a> to resolve. (To view the commit's email address, add .patch at the end of this PR page's URL.) For further assistance with EasyCLA, <a href='https://jira.linuxfoundation.org/servicedesk/customer/portal/4' target='_blank'>please submit a support request ticket</a>.</li></ul>"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114e9ac254a19ac290ac6",
    "number": 1904,
    "body": "# Description\r\n\r\nAdd resource detector for Azure VMs.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] test_linux\r\n- [x] test_windows\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "azure-vm-detector",
    "is_a_fork": true,
    "comments": [
      "Combining with https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1901"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114eaac254a19ac290ac7",
    "number": 1903,
    "body": "# Description\r\n\r\nFeature to add middleware at specific location. Added keyword argument `middleware_position` which one can set to the number of middleware they want to add before otel middleware to start instrumentation.\r\n\r\nFixes #1781 \r\n\r\n## Type of change\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] `tox -e lint`\r\n- [x] `tox -e test-instrumentation-django1`\r\n- [x] `tox -e test-instrumentation-django2`\r\n- [x] `tox -e test-instrumentation-django3`\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix-1781-alt",
    "is_a_fork": true,
    "comments": [
      "@TheAnshul756 This PR has enough approvals, seems we only need a few fixes in order to merge it. :+1: "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114ebac254a19ac290ac8",
    "number": 1902,
    "body": "# Description\r\n\r\nAdd instrumentation support for Cassandra (cassandra-driver and scylla-driver libraries).\r\n\r\n## Type of change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- Unit tests\r\n- Tested locally with another project using Cassandra and Scylla\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "add-cassandra",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: mattcontinisio  (09faa2ad300bf727e8f8b2565d3bb59fac473f5e, fd8b62203d8abaab60d60c39e3bd7b86e4fb4feb, 150b69f1070d110d5220909e424582ef9fb4ef93, e8529376f3373322be62bf203d08388e7c57fbc1)</li><li>:white_check_mark: login: ocelotl / name: Diego Hurtado  (639adfc193253c57c4ebce6e9be8cedad6e7b452, c01466ff1d23597f6bb23df4e46846eb3b8466f5, 49e81d608a0443148a5f3bfa88603ea2eaacbeef)</li></ul>",
      "LGTM, please fix the docs tests.",
      "> LGTM, please fix the docs tests.\r\n\r\nThis is fixed now."
    ],
    "commit_messages": [
      "Add Cassandra instrumentation (#1902)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114ecac254a19ac290ac9",
    "number": 1901,
    "body": "# Description\r\n\r\nAdd resource detectors for Azure App Service and Azure VM. Based off [.NET Azure Resource Detectors](https://github.com/open-telemetry/opentelemetry-dotnet-contrib/tree/main/src/OpenTelemetry.ResourceDetectors.Azure)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\nApp Service\r\n- [x] test_on_app_service\r\n- [x] test_on_app_service_no_resource_group\r\n- [x] test_on_app_service_no_owner\r\n- [x] test_off_app_service\r\n\r\nVM\r\n- [x] test_linux\r\n- [x] test_windows\r\n- [x] Tested on VM\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "azur_app_service_resource_detector",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Azure resource detectors (#1901)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114edac254a19ac290aca",
    "number": 1900,
    "body": "# Description\r\n\r\nModified HTTPX instrumentation to allow for skipping instrumentation for a list of excluded URLs similar to the current solutions.\r\n\r\nFixes #539\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] tox -e py310-test-instrumentation-httpx21\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "issue_539",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: zqumei0  (96370866817adf3769ff0f8121f0ebb5311b2183)</li></ul>",
      "@zqumei0 merge in current main. I tested it locally and had no issues with tests. Should be good on pipeline. After this, mention maintainer or approver to run it. \r\n\r\n",
      "I don't get why those tests are failing. It worked on my machine. Can anyone help out with debugging? ",
      "> I don't get why those tests are failing. It worked on my machine. Can anyone help out with debugging?\r\n\r\nWeird, I checked out this PR with `gh co 1900`. Tried running `tox -e py311-test-instrumentation-httpx18 -- -rf`. It first failed until I added these changes:\r\n\r\n``` diff\r\ndiff --git a/instrumentation/opentelemetry-instrumentation-httpx/pyproject.toml b/instrumentation/opentelemetry-instrumentation-httpx/pyproject.toml\r\nindex 50f3fccb..1632f9c4 100644\r\n--- a/instrumentation/opentelemetry-instrumentation-httpx/pyproject.toml\r\n+++ b/instrumentation/opentelemetry-instrumentation-httpx/pyproject.toml\r\n@@ -28,6 +28,7 @@ dependencies = [\r\n   \"opentelemetry-api ~= 1.12\",\r\n   \"opentelemetry-instrumentation == 0.42b0.dev\",\r\n   \"opentelemetry-semantic-conventions == 0.42b0.dev\",\r\n+  \"opentelemetry-util-http\"\r\n ]\r\n \r\n [project.optional-dependencies]\r\ndiff --git a/instrumentation/opentelemetry-instrumentation-httpx/src/opentelemetry/instrumentation/httpx/__init__.py b/instrumentation/opentelemetry-instrumentation-httpx/src/opentelemetry/instrumentation/httpx/__init__.py\r\nindex 1ecf4596..1fe3a21b 100644\r\n--- a/instrumentation/opentelemetry-instrumentation-httpx/src/opentelemetry/instrumentation/httpx/__init__.py\r\n+++ b/instrumentation/opentelemetry-instrumentation-httpx/src/opentelemetry/instrumentation/httpx/__init__.py\r\n@@ -176,7 +176,7 @@ from opentelemetry.semconv.trace import SpanAttributes\r\n from opentelemetry.trace import SpanKind, TracerProvider, get_tracer\r\n from opentelemetry.trace.span import Span\r\n from opentelemetry.trace.status import Status\r\n-from opentelemetry.utils.http import (\r\n+from opentelemetry.util.http import (\r\n     ExcludeList,\r\n     get_excluded_urls,\r\n     parse_excluded_urls,\r\n```\r\n\r\nAfter that, it also failed but by different reasons. @zqumei0 can you please check this?",
      "Hi 👋 I could also use this feature, although I don't quite have the time to deeply contribute other than do some testing on my end. In an attempt to be useful, I tried following the steps to get started and at least run the tests on my machine. However, the tests were also failing for me.\r\n\r\n@macieyng I would have dug into the test logs in GitHub Actions but it looks like the logs have expired at this point ☹️ \r\n\r\nI tried the steps that @ocelotl laid out but it didn't work either. \r\n\r\nAfter installing the dependencies in the requirements.txt files, I ran this command: `tox -e py311-test-instrumentation-httpx18 -- -rf`\r\n\r\nAnd here was the output:\r\n\r\n```\r\npy311-test-instrumentation-httpx18: commands_pre[0] /Users/kinnaird/tmp/opentelemetry-python-contrib/instrumentation/opentelemetry-instrumentation-httpx/tests> python -m pip install -U pip setuptools wheel\r\nRequirement already satisfied: pip in /Users/kinnaird/tmp/opentelemetry-python-contrib/.tox/py311-test-instrumentation-httpx18/lib/python3.11/site-packages (24.2)\r\nRequirement already satisfied: setuptools in /Users/kinnaird/tmp/opentelemetry-python-contrib/.tox/py311-test-instrumentation-httpx18/lib/python3.11/site-packages (73.0.1)\r\nRequirement already satisfied: wheel in /Users/kinnaird/tmp/opentelemetry-python-contrib/.tox/py311-test-instrumentation-httpx18/lib/python3.11/site-packages (0.44.0)\r\npy311-test-instrumentation-httpx18: commands_pre[1] /Users/kinnaird/tmp/opentelemetry-python-contrib/instrumentation/opentelemetry-instrumentation-httpx/tests> pip install '\"opentelemetry-api[test] @ \"git+https://github.com/open-telemetry/opentelemetry-python.git@main\"'\r\nERROR: Invalid requirement: '\"opentelemetry-api[test] @ \"git+https://github.com/open-telemetry/opentelemetry-python.git@main\"': Expected package name at the start of dependency specifier\r\n    \"opentelemetry-api[test] @ \"git+https://github.com/open-telemetry/opentelemetry-python.git@main\"\r\n    ^\r\nHint: It looks like a path. File '\"opentelemetry-api[test] @ \"git+https://github.com/open-telemetry/opentelemetry-python.git@main\"' does not exist.\r\npy311-test-instrumentation-httpx18: exit 1 (0.18 seconds) /Users/kinnaird/tmp/opentelemetry-python-contrib/instrumentation/opentelemetry-instrumentation-httpx/tests> pip install '\"opentelemetry-api[test] @ \"git+https://github.com/open-telemetry/opentelemetry-python.git@main\"' pid=80564\r\n  py311-test-instrumentation-httpx18: FAIL code 1 (0.57=setup[0.02]+cmd[0.37,0.18] seconds)\r\n  evaluation failed :( (0.64 seconds)\r\n```\r\n\r\n@zqumei0 if you or anyone wants to pick up this PR, I'm happy to do some testing and give some feedback. ",
      "@kmcquade @ocelotl please see #3345 🙏 "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114eeac254a19ac290acb",
    "number": 1895,
    "body": "# Description\r\nThe project readme says that only depending on the specific instrumentation and `opentelemetry-api` should be enough. However this was not the case for confluent kafka instrumentation and it required explicitly listing semantic convetion and instrumentation from its users.\r\n\r\nI've honestly just replicated the way it's done for `kafka-python` but I'm not sure that's entirely correct.\r\n\r\nFixes #1894\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nManually using the steps from #1894. Any hints as to how to reproduce that programatically as part of unit tests would be welcome, but I think a more elaborate change to the test suite would be needed where each instrumentation would be installed in isolated environment...\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [X] Followed the style guidelines of this project\r\n\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      " <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/220524743/1895/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-not-signed.svg\" alt=\"CLA Not Signed\" align=\"left\" height=\"28\" width=\"328\"></a><br/><br /><ul><li><a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/220524743/1895/#/?version=2' target='_blank'>:x:</a> - login: @Lameorc / name: Vojta Podhajsky . The commit (25eee007113c0b46b9e2f9b331063b1946489652) is not authorized under a signed CLA. <a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/220524743/1895/#/?version=2' target='_blank'>Please click here to be authorized</a>. For further assistance with EasyCLA, <a href='https://jira.linuxfoundation.org/servicedesk/customer/portal/4' target='_blank'>please submit a support request ticket</a>.</li></ul>"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114efac254a19ac290acc",
    "number": 1892,
    "body": "This is related to the recent release of Cython 3.0.0.\r\n\r\nSee https://github.com/yaml/pyyaml/issues/724\r\n\r\nFixes #1891",
    "head_branch": "issue_1891",
    "is_a_fork": false,
    "comments": [
      "> Do you think this should be changed back in follow-up when things are sorted from upstream deps?\r\n\r\nRight, opened #1893 "
    ],
    "commit_messages": [
      "Fix pyyaml version (#1892)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114f0ac254a19ac290acd",
    "number": 1890,
    "body": "Ignore this PR, I am just checking CI",
    "head_branch": "check_ci",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114f1ac254a19ac290ace",
    "number": 1889,
    "body": "# Description\r\n\r\nThis PR intends to fix a bug in opentelemetry-instrumentation-asgi where a variable in used before assignment in some corner cases.\r\n\r\nFixes #1883\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nTo trigger the bug, one must somehow raise an exception within the [OpentelemetryMiddleware try block](https://github.com/thomasleveil/opentelemetry-python-contrib/blob/db90ce38a2a9f48f225ea63bab1d295deeaff764/instrumentation/opentelemetry-instrumentation-asgi/src/opentelemetry/instrumentation/asgi/__init__.py#L567) before the line that initializes the `start`  variable. \r\n\r\n- [x] added test test_asgi_issue_1883 with commit e12954118c97e9f50e1fee3c608f3d9497674126\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n",
    "head_branch": "fix_1883",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: thomasleveil / name: Thomas LÉVEIL  (6ae8d628a78665c23dbf444445c0955f4939103f, 1def2427c991f58ae753e93a2b8725c2b86aec39, 4937c51030e5c45a37856cf4267564f0eacdee8d, 6c4402f44bc5ff19b6b9c1edeae5489ab3aee6bb)</li><li>:white_check_mark: login: pmcollins / name: Pablo Collins  (6c4402f44bc5ff19b6b9c1edeae5489ab3aee6bb)</li></ul>"
    ],
    "commit_messages": [
      "Fix UnboundLocalError local variable 'start' referenced before assignment (#1889)\n\nCo-authored-by: Pablo Collins <pablo.collins@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114f1ac254a19ac290acf",
    "number": 1888,
    "body": "Copy log updates from `release/v1.19.x-0.40bx`.",
    "head_branch": "opentelemetrybot/copy-change-log-updates-from-release-v1.19.x-0.40bx",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114f2ac254a19ac290ad0",
    "number": 1886,
    "body": "Prepare release 1.19.0/0.40b0.",
    "head_branch": "opentelemetrybot/prepare-release-1.19.0-0.40b0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[release/v1.19.x-0.40bx] Prepare release 1.19.0/0.40b0 (#1886)\n\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114f3ac254a19ac290ad1",
    "number": 1885,
    "body": "Update version to `1.20.0.dev/0.41b0.dev`.",
    "head_branch": "opentelemetrybot/update-version-to-1.20.0.dev-0.41b0.dev",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Update version to 1.20.0.dev/0.41b0.dev (#1885)\n\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114f4ac254a19ac290ad2",
    "number": 1879,
    "body": "# Description\r\n\r\nAdds support for the recently released urllib3 version 2. Basically nothing changed in the instrumentation, just some tests needed to be adapted.\r\n\r\n## Type of change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nall tests are running for urllib3 version 1 and 2.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "instr-urllib3v2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "urllib3: Add instrumentation support for version 2 (#1879)\n\n* urllib3: Add instrumentation support for version 2\r\n\r\n* changelog"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114f5ac254a19ac290ad3",
    "number": 1874,
    "body": null,
    "head_branch": "Update-maintainers-list",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update maintainers list (#1874)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114f6ac254a19ac290ad4",
    "number": 1873,
    "body": "# Description\r\n\r\nFixes [#1872](https://github.com/open-telemetry/opentelemetry-python-contrib/issues/1872)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [X] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nMore unit tests added in [9222d7f](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1873/commits/9222d7fdf8bb4786ec2bf69b570d913538cbfb21). Also manually/e2e tested with:\r\n\r\n1. Create a custom distro that extends `BaseDistro`.\r\n2. Implement `load_instrumentor` so that `kwargs` at `instrumentor().instrument(**kwargs)` includes `\"enable_commenter\": True` and `\"commenter_options\": {\"opentelemetry_values\": False}`.\r\n3. Install the custom distro and auto-instrument a service with `opentelemetry-instrument`.\r\n4. Request the service to use sqlalchemy to query a MySQL database.\r\n5. Check mysqld general logs for record of the query, which will include the comments added by OTel instrumentation.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "sqlalchemy-wrap-commenter-options-bugfix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "sqlalchemy wrap_create_engine now accepts sqlcommenter options (#1873)\n\n* sqlalchemy wrap_create_engine accepts sqlcommenter options\r\n\r\n* Changelog\r\n\r\n* Lint\r\n\r\n* Fix default val\r\n\r\n* Add sqlalchemy tests\r\n\r\n* Change a default in _instrument get\r\n\r\n* Lint\r\n\r\n* More lint\r\n\r\n* Update default\r\n\r\nCo-authored-by: Shalev Roda <65566801+shalevr@users.noreply.github.com>\r\n\r\n* Update args doc\r\n\r\n* lintttt\r\n\r\n---------\r\n\r\nCo-authored-by: Shalev Roda <65566801+shalevr@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114f7ac254a19ac290ad5",
    "number": 1870,
    "body": "# Description\r\n\r\nOlder elastic search (5.5.3 and below) return \r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes #1868 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [X] tox -e test-instrumentation-elasticsearch\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [X] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n",
    "head_branch": "fix/elastic-search/sanitization",
    "is_a_fork": true,
    "comments": [
      "@phillipuniverse Could you please review it?",
      "And overall if someone doesn’t want this behavior they can turn off query sanitization altogether.",
      "> This does work, although I’m a bit worried about performance here from deserializing what Elasticsearch already serialized. It might be slightly better to catch the query prior to serialization and sanitize it then. But maybe this is only a problem in ES 5.5?\r\n\r\nIndeed, it seems to happen only for old versions, According to https://github.com/open-telemetry/opentelemetry-specification/pull/3127 you should always collect db.statement if there is sanitization so you can't just turn off query sanitization."
    ],
    "commit_messages": [
      "Fix elastic-search sanitization for bulk queries (#1870)\n\n* support sanitization for str body response\r\n\r\n* add CHANGELOG entry\r\n\r\n---------\r\n\r\nCo-authored-by: Shalev Roda <65566801+shalevr@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114f8ac254a19ac290ad6",
    "number": 1869,
    "body": "…but avoiding the problem of having to match full URLs using regular expressions.\r\n\r\n# Description\r\n\r\nexclude_urls, because it matches the full URL including protocol/domain at the beginning and query at the end, is very difficult to reliably match on with a regular expression. This leaves the common pattern to just use bare/unanchored configurations such as exclude_urls=\"ping\" which could easily match other URLs like \"/housekeeping\". This PR allows matching just against the path portion of a URL, so that you can anchor the regex more reliably, e.g. \"^/ping$\" or \"^/ping\".\r\n\r\nI have currently implemented this only for the Flask integration, because that's my use-case, but I think this could be valuable for all of the inbound server integrations.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] added automated tests to the flask integration, and existing tests continue to run correctly.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\nI don't think so, but I'm not sure what \"core repo\" means. This does affect the opentelemetry-util-http repository.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n\r\nI think I've followed the style guide, but I'm not sure if there's a checker I can use to validate that. I haven't yet modified the changelog, because I wanted to get feedback on the PR first and my experience is that changelog updates tend to bitrot quickly.",
    "head_branch": "flask-filter-by-path",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: bsmedberg-xometry  (a831bd7c86218cc14fc1b8cdc801917d833ec179, 0a2d798d0602dd3c573d0e44f3b4afb6fe565629, 3ba9528fabb0e814449ebbd302f58fbdb97f6453, f9a8b22edbc8e7c82bd698ee05bccfbc7b59120a, 6e54a483809adf0112c9908dd31992ed79c406d2, f72a80000ed43efef6ae9f30ebc6d5a1be9f2f6d)</li></ul>",
      "Please fix the lint errors",
      "@shalevr is there a doc about how to run all the lint/checks locally? I saw the previous black failure, fixed that, and now I see another and so I'd like to fix them all before I push again.\r\n\r\nI'm still working with my legal team on the CLA.",
      "> @shalevr is there a doc about how to run all the lint/checks locally? I saw the previous black failure, fixed that, and now I see another and so I'd like to fix them all before I push again.\r\n> \r\n> I'm still working with my legal team on the CLA.\r\n\r\nYou need to run \"tox -e lint\"\r\nor just the Python code formatter \"black --config pyproject.toml .\"",
      "ok, CLA is set up and I've attempted to set up the changelog.",
      "Please fix the conflicts",
      "The failure in pypy3, instrumentation, ubuntu-20.04 appears to be a random timing error in the test. Can somebody verify for me or if I caused this, help me identify what I'd do to debug?"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114f9ac254a19ac290ad7",
    "number": 1867,
    "body": "# Description\r\n\r\nThis PR adds http.server.request.size to ASGI instrumentation logic.\r\n\r\nIt follows naming/conventions from here: https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/metrics/semantic_conventions/http-metrics.md#metric-httpserverrequestsize\r\n\r\nFixes #1865 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Updated the current unit tests to support content-length and test http.server.request.size.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "Add-http.server.request.size-for-ASGI-metric-implementation",
    "is_a_fork": true,
    "comments": [
      "@shalevr It's ready for review. Thanks."
    ],
    "commit_messages": [
      "Add http.server.request.size for ASGI metric implementation (#1867)\n\n* Update changelog file.\r\n\r\n* Update changelog file.\r\n\r\n* Add new request.size metric for ASGI middleware.\r\n\r\n* Clean-up.\r\n\r\n* Refactor try except section.\r\n\r\n---------\r\n\r\nCo-authored-by: Shalev Roda <65566801+shalevr@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114f9ac254a19ac290ad8",
    "number": 1864,
    "body": "adds basic instrumentation to karapace for produce and fetch operations. \r\nOnly supports trace, no metrics\r\n\r\n## Type of change\r\n\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x ] Unit tests have been added\r\n- [x ] Documentation has been updated\r\n",
    "head_branch": "add_karapace_instrumentation",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: vvvrrooomm / name: Martin Haaß  (e64d1cd5ae9eb6dbd19f5eba025c30fc79caff3d)</li><li>:white_check_mark: login: ocelotl / name: Diego Hurtado  (75c8407a7e7a5e9145d380a3e407ede8b4998521)</li></ul>",
      "Please read the CONTRIBUTING file, specially these 2 sections:\r\n\r\nhttps://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md#expectations-from-contributors\r\n\r\nhttps://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md#how-to-get-prs-reviewed"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114faac254a19ac290ad9",
    "number": 1863,
    "body": "# Description\r\n\r\nWhen a task fails and Celery reports an exception, the exception reported is an `ExceptionInfo` wrapper that Celery provides to the signal handler. The actual exception that was raised is a property of this exception.\r\n\r\nThis PR changes the instrumentation's behaviour to report the actual exception that is wrapped inside `ExceptionInfo`, ensuring that the resulting exception has a type and traceback that are meaningful and relevant to the application's developer.\r\n\r\nFixes appsignal/appsignal-python#76.\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n(I consider this a bug fix, in that the useful exception to report is the one that was raised in the task, not its Celery wrapper -- please let me know if you disagree that this is a non-breaking change)\r\n\r\n# How Has This Been Tested?\r\n\r\nThe instrumentation's functional tests have been amended.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added (and functional tests have been amended)\r\n- [x] ~Documentation has been updated~ N/A\r\n",
    "head_branch": "unwrap-celery-exceptioninfo",
    "is_a_fork": true,
    "comments": [
      "@shalevr (not sure if you're the right person to mention for this, sorry) would it be possible to enable the branch's tests to run on the CI?",
      "Is there anything I can do to help get this reviewed and merged?",
      "> Is there anything I can do to help get this reviewed and merged?\r\n\r\nsorry for the late review, taking a look right now...",
      "@ocelotl Please re-review (and enable CI) when you have a moment :)\r\n\r\nEDIT: applied lint fixes",
      "amended the merge fixing the isort linter issue",
      "Could I get another review @shalevr @ocelotl 🙏 and maybe a merge? 🥺"
    ],
    "commit_messages": [
      "Unwrap Celery's `ExceptionInfo` (#1863)\n\n* Unwrap `ExceptionInfo` and `ExceptionWithTraceback`\r\n\r\nInstead of reporting the `ExceptionInfo` and `ExceptionWithTraceback`\r\nwrappers raised by Celery, report the exceptions that they wrap.\r\n\r\nThis ensures that the exception in the OpenTelemetry span has a type\r\nand traceback that are meaningful and relevant to the developer.\r\n\r\n* Fix typo\r\n\r\nThe exception is expected, not excepted. Well, I guess it is also\r\nexcepted, because it's an exception, but you get what I mean.\r\n\r\n* Reformat file with `black`\r\n\r\nReformat the `__init__.py` file in the Celery instrumentation using\r\n`black`, fixing a CI linter error.\r\n\r\n* Address review feedback\r\n\r\nUse the VERSION attribute exposed by Billiard to decide whether to\r\nimport ExceptionWithTraceback.\r\n\r\nAdd a test for a failing task and check that the exceptions' type\r\nand message are preserved.\r\n\r\n* Amend ExceptionWithTraceback import"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114fbac254a19ac290ada",
    "number": 1859,
    "body": "Fixes #1858",
    "head_branch": "issue_1858",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add statement of maintainership (#1859)\n\nCo-authored-by: Shalev Roda <65566801+shalevr@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114fcac254a19ac290adb",
    "number": 1857,
    "body": "Fixes #1837",
    "head_branch": "issue_1837",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114fdac254a19ac290adc",
    "number": 1856,
    "body": "# Description\r\n\r\nAccording to [confluent_kafka's CHANGELOG](https://github.com/confluentinc/confluent-kafka-python/blob/master/CHANGELOG.md), `v2.0.2`, `v2.1.0` and `v2.1.1` were released without any major changes regarding its API interface usage for both producer and consumer, so it's safe to do the bump to increase compatibility.\r\n\r\n> OpenSSL 3.0.x upgrade in librdkafka requires a major version bump, as some legacy ciphers need to be explicitly configured to continue working, but it is highly recommended NOT to use them. The rest of the API remains backward compatible.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Version compatibility\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Upgrade the version in this library plus `confluent-kafka-python`'s version and see if it works.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "bump-confluent-kafka-max-version",
    "is_a_fork": true,
    "comments": [
      "There is already PR for this change #1815 "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114feac254a19ac290add",
    "number": 1855,
    "body": "Fixes #1681",
    "head_branch": "issue_1681",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use HTTP mock server for tornado tests (#1855)\n\n* Use HTTP mock server for tornado tests\n\nFixes #1681\n\n* Fix lint"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662114ffac254a19ac290ade",
    "number": 1854,
    "body": "This is done in order to prevent confusion. We are trying to stop using httpbin.org for our tests. Even when the tests for the requests instrumentation do not actually perform any request to httpbin.org, because the test requests are being mocked somehow having the string httpbin.org in the tests can cause confusion and make the reader think the tests are actually making external requests to  httpbin.org.\r\n\r\nFixes #1844 #1843 #1845 #1846 #1847 #1848",
    "head_branch": "issue_1844",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove use of httpbin (#1854)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211500ac254a19ac290adf",
    "number": 1853,
    "body": "This is done in order to avoid confusion. Even when urllib3 tests do not actually make external requests to httpbin.org, having httpbin.org in the tests is confusing for the reader and may make it look like external requests to httpbin.org are actually being made.\r\n\r\nFixes #1846",
    "head_branch": "issue_1846",
    "is_a_fork": true,
    "comments": [
      "Will merge this PR with others."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211501ac254a19ac290ae0",
    "number": 1852,
    "body": "This is done in order to prevent confusion. Even when the urllib tests do not make an external request to httpbin.org, having the httpbin.org URL in our tests is confusing and can give the impression we are actually using httpbin.org.\r\n\r\nFixes #1845",
    "head_branch": "issue_1845",
    "is_a_fork": true,
    "comments": [
      "Will merge this PR with others."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211501ac254a19ac290ae1",
    "number": 1851,
    "body": "This is done in order to prevent confusion. We are trying to stop using httpbin.org for our tests. Even when the tests for the httpx instrumentation do not actually perform any request to httpbin.org having the string httpbin.org in the tests can cause confusion and make the reader think the tests are actually using httpbin.org.\r\n\r\nFixes #1843",
    "head_branch": "issue_1843",
    "is_a_fork": true,
    "comments": [
      "Will merge this PR with others."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211502ac254a19ac290ae2",
    "number": 1850,
    "body": "This is done in order to prevent confusion. We are trying to stop using httpbin.org for our tests. Even when the tests for the requests instrumentation do not actually perform any request to httpbin.org, because the test requests are being mocked with httpretty, having the string httpbin.org in the tests can cause confusion and make the reader think the tests are actually using httpbin.org.\r\n\r\nFixes #1844",
    "head_branch": "issue_1844",
    "is_a_fork": true,
    "comments": [
      "Will merge this PR and others in only one."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211503ac254a19ac290ae3",
    "number": 1849,
    "body": "Fixes #1842",
    "head_branch": "issue_1842",
    "is_a_fork": true,
    "comments": [
      "I first tried mocking the `Connection` object that is returned by `aiohttp` when an HTTP connection is made, but this object had several underlying characteristics (like behaving like an `async` context) that were quite hard to mock and required inside knowledge of the `aiohttp` implementation which is not ideal in case there are changes in the implementation of `aiohttp`.",
      "Thank you @ocelotl for fixing this"
    ],
    "commit_messages": [
      "Use HTTP mock server for aiohttp tests (#1849)\n\nFixes #1842"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211504ac254a19ac290ae4",
    "number": 1841,
    "body": "#1837 ",
    "head_branch": "Fix-celery-docker-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix celery docker tests (#1841)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211505ac254a19ac290ae5",
    "number": 1840,
    "body": "# Description\r\n\r\nSpan Status description should only be set if the status is ERROR, otherwise we get flooded with log messages on every request:\r\n```\r\nWARNING  opentelemetry.trace.status:57 description should only be set when status_code is set to StatusCode.ERROR\r\n```\r\n\r\nRelated to https://github.com/open-telemetry/opentelemetry-python-contrib/issues/500, instrumentation module for Tornado had the same issue.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix-falcon-status-description",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix falcon usage of Span Status (#1840)\n\n* Fix falcon usage of Span Status to only set the description if the status code is ERROR\r\n\r\n* Update changelog\r\n\r\n* Update CHANGELOG.md\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>\r\n\r\n* fix lint\r\n\r\n* Use fewer variables to satisfy R0914 lint rule\r\n\r\n---------\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211506ac254a19ac290ae6",
    "number": 1838,
    "body": "# Description\r\n\r\nThe library had a bug regarding the execution of the python path in windows context.\r\nWhen there trying to execute a python executable containing a space character in the path it actually tried to execute just the first path.\r\ni.e 'C:\\Program Files\\Python311' there is a space the in program files, tried to execute C:\\Program.exe and use the rest as arguments.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Tested against both windows and linux operating systems.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n",
    "head_branch": "for_windows",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: liad-miggo / name: liad eliyahu  (49d5d63a6ec69b84ab0c9ac8f1df8965c2bd02b6, 7d964e0bbd5c729cef9ca73bbb06cb66b223ad5c)</li></ul>",
      "Some of the tests failed",
      "Yeah I saw that, gonna fix it soon\r\nOn Wed, 14 Jun 2023 at 11:58 Shalev Roda ***@***.***> wrote:\r\n\r\n> Some of the tests failed\r\n>\r\n> —\r\n> Reply to this email directly, view it on GitHub\r\n> <https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1838#issuecomment-1590778468>,\r\n> or unsubscribe\r\n> <https://github.com/notifications/unsubscribe-auth/BAKVPBV5JBMBB7FPD5OOOMTXLF4M7ANCNFSM6AAAAAAY7NNJ2A>\r\n> .\r\n> You are receiving this because you were mentioned.Message ID:\r\n> ***@***.***\r\n> com>\r\n>\r\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211507ac254a19ac290ae7",
    "number": 1836,
    "body": "Co-authored-by: SuryanarayanaPeri ss_peri@hotmail.com\r\n\r\n# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes #1033 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "Please add a more descriptive name to this PR and also fix lint.",
      "> Please add a more descriptive name to this PR and also fix lint.\r\n\r\nLint issue is fixed",
      "> We need tests for these changes.\r\n\r\n@ocelotl : Added the test cases",
      "> > We need tests for these changes.\r\n> \r\n> @ocelotl : Added the test cases\r\n\r\n@ocelotl : Some of the checks are failing. Can you please help if missing anything, need some guidance??\r\nAs per the understanding we have added the code and test cases accordingly. ",
      "@ocelotl - The work in this issue is to make the instrumentation either produce all the same metrics or exclude the instruments that don't have equivalents. Ideally at the end of this issue, the tests for this instrumentation library will be enabled in tox for pypy3.\r\n\r\n**For this we have excluded the instruments that don't have equivalents for the gc_count on pypy3. The test for the system metrics instrumentation is enabled in tox. Request you please review and merge the PR.**\r\n\r\nWe will open a new feature request - to make the instrumentation to provide the gc_count metrics for pypy3.\r\n\r\n",
      "> We need tests for these changes.\r\n\r\n@ocelotl :Added the test cases to support the pypy3 for system metrics instrumentation.",
      "Renamed this PR to better reflect the changes being made here.",
      "Ok, almost ready to approve and merge, just take a look at the comment above and implement the requested changes :v: \r\n",
      "@ocelotl : Please don't approve the PR, just hold for one or two days, will let you KNOW and then you can merge the PR",
      "> @ocelotl : Please don't approve the PR, just hold for one or two days, will let you KNOW and then you can merge the PR, reverting the logger changes \r\n\r\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211508ac254a19ac290ae8",
    "number": 1834,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes #1387 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "patch-5",
    "is_a_fork": true,
    "comments": [
      "You can run `black --config pyproject.toml .` \r\nto fix the lint errors",
      "@shalevr Could you please have a look and let me know."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211509ac254a19ac290ae9",
    "number": 1833,
    "body": "# Description\r\n\r\nThe way `NET_PEER_IP` and `NET_PEER_PORT` are retrieved raises a `ValueError` when gRPC connections are handled via Unix sockets.\r\n\r\n```py\r\nip, port = (\r\n    context.peer().split(\",\")[0].split(\":\", 1)[1].rsplit(\":\", 1)\r\n)\r\n```\r\n\r\nWhen using an address like `unix:///tmp/grpc.sock` the value of `context.peer()` is `\"unix:\"`. Substituting that in the function above...\r\n\r\n```py\r\nip, port = \"unix:\".split(\",\")[0].split(\":\", 1)[1].rsplit(\":\", 1)\r\nip, port = [\"unix:\"][0].split(\":\", 1)[1].rsplit(\":\", 1)\r\nip, port = \"unix:\".split(\":\", 1)[1].rsplit(\":\", 1)\r\nip, port = [\"unix\", \"\"][1].rsplit(\":\", 1)\r\nip, port = \"\".rsplit(\":\", 1)\r\nip, port = [\"\"]  # ValueError\r\n```\r\n\r\nI addressed the issue by guarding the retrieval of `net.peer.*` values under an `if` statement.\r\nI extended the `server_interceptor` tests to run against TCP and Unix socket configurations.\r\n\r\n**Open Questions**\r\n\r\n- [ ] The socket tests will fail on Windows. Is there a way to annotate that?\r\n- [ ] Are there other span values we should be setting for the unix socket?\r\n\r\nFixes #1832\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Extended test suite\r\n\r\nRemoving the `if` statement and running the test suite will reproduce the failure.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "grpc-unix-sockets",
    "is_a_fork": true,
    "comments": [
      "Not sure why I keep hitting test failures, they seem unrelated from what I can tell.\r\nMost recent one was for `starlette`."
    ],
    "commit_messages": [
      "fix(grpc): Allow gRPC connections via Unix socket (#1833)\n\n* fix(grpc): Allow gRPC connections via Unix socket\r\n\r\nThis commit addresses issue #1832.\r\n\r\nThe way `NET_PEER_IP` and `NET_PEER_PORT` are retrieved raises a `ValueError`\r\nwhen gRPC connections are handled via Unix sockets.\r\n\r\n```py\r\nip, port = (\r\n    context.peer().split(\",\")[0].split(\":\", 1)[1].rsplit(\":\", 1)\r\n)\r\n```\r\n\r\nWhen using an address like `unix:///tmp/grpc.sock` the value of `context.peer()` is `\"unix:\"`.\r\nSubstituting that in the function above...\r\n\r\n```py\r\nip, port = \"unix:\".split(\",\")[0].split(\":\", 1)[1].rsplit(\":\", 1)\r\nip, port = [\"unix:\"][0].split(\":\", 1)[1].rsplit(\":\", 1)\r\nip, port = \"unix:\".split(\":\", 1)[1].rsplit(\":\", 1)\r\nip, port = [\"unix\", \"\"][1].rsplit(\":\", 1)\r\nip, port = \"\".rsplit(\":\", 1)\r\nip, port = [\"\"]  # ValueError\r\n```\r\n\r\nI \"addressed\" the issue by guarding the retrieval of `net.peer.*` values under\r\nan `if` statement that checks if we are using a Unix socket.\r\n\r\nI extended the `server_interceptor` tests to run against TCP and Unix socket configurations.\r\n\r\n---\r\n\r\n**Open Questions**\r\n\r\n- [ ] The socket tests will fail on Windows. Is there a way to annotate that?\r\n- [ ] Are there other span values we should be setting for the unix socket?\r\n\r\n* Update CHANGELOG\r\n\r\n* Add placeholder attributes for linter\r\n\r\n* fix lint\r\n\r\n---------\r\n\r\nCo-authored-by: Matt Oberle <mattoberle@users.noreply.github.com>\r\nCo-authored-by: Shalev Roda <65566801+shalevr@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621150aac254a19ac290aea",
    "number": 1830,
    "body": "# Description\r\n\r\nCreates a separate wrapper for tracing the async client functions. These ensure that the redis coroutines are executed before ending the spans, which results in correct tracing behaviour for async commands.\r\n\r\n(see linked issue for example screenshots of expected behaviour)\r\n\r\nFixes #1829 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nThe docker integration tests have been updated for redis instrumentation and cover the changed code.\r\n\r\nA lightweight unit test was also added in this PR to simplify testing that the async client class is called correctly by the async \r\n\r\nThe example reproduce script that is provided in the issue can be used to validate that the traces now fully span the redis calls, here are the results:\r\n\r\nBefore\r\n![image](https://github.com/open-telemetry/opentelemetry-python-contrib/assets/66319645/57b5150a-0226-4743-a80c-e2ef67d35c17)\r\n\r\nAfter\r\n![image](https://github.com/open-telemetry/opentelemetry-python-contrib/assets/66319645/258a05f2-f401-46d0-bd74-c03b593a529c)\r\n\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix-async-redis-client-tracing",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: Vivanov98  (7f46e931e066f738c8d444464f072da663ce479d, a4e2f5e28d956e5ea513aa4586910d10a0fc1cb3, a00990d7ee7c8aaee2f3d73dee3935a5fbe8b7eb, c32d5a714f54207d5aaad58989b6cbda387b6025, 159d514bfc2d808dc76b1f702c3e98f1cb8581c8, d66a469a2bc3158eed4ddba6500a6fe227f619c1, 8fecbaba7e464036b0a60bb1cfc803f18deb6cc9)</li><li>:white_check_mark: login: shalevr / name: Shalev Roda  (9b6fb70070596f66b06dffad8efc49f916e69978, 9babe048fddb412574ae492e59415f50db649ce5)</li></ul>",
      "Thanks for the feedback!\r\n\r\nI have now added functional tests for each async traceable command that confirm the trace encompasses the full query time, and these tests only work with the fixed code",
      "@srikanthccv just wanted to check in if this PR is okay to be merged?",
      "Please resolve the conflicts. The change seems fine to me, I was wondering if tests could be made better.",
      "Thanks @srikanthccv I have resolved the conflicts. As discussed I don't think this is the best context to add a new pattern of timing tests given that this pattern doesn't exist anywhere else in the repository",
      "@srikanthccv @shalevr could you please help me get this merged?"
    ],
    "commit_messages": [
      "Fix async redis clients tracing (#1830)\n\n* Fix async redis clients tracing\r\n\r\n* Update changelog\r\n\r\n* Add functional integration tests and fix linting issues\r\n\r\n---------\r\n\r\nCo-authored-by: Shalev Roda <65566801+shalevr@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621150aac254a19ac290aeb",
    "number": 1826,
    "body": "There is an issue with the new urllib3 version(1.26.16) on pypy3, the [test_basic_http_success_using_connection_pool](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/a6797541721af72e6feab400e24ceaabc08cb31e/instrumentation/opentelemetry-instrumentation-urllib3/tests/test_urllib3_ip_support.py#L51) test doesn't finish.\r\n\r\nThis issue will be handled here #1827 , in the meantime we skipped the urlib3 tests on pypy3\r\n",
    "head_branch": "skip-urllib3-tests-on-pypy3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "skip urllib3 test on pypy3 (#1826)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621150bac254a19ac290aec",
    "number": 1825,
    "body": "# Description\r\n\r\n`request.build_absolute_uri` method when called internally checks for Alloowed Host which is unwanted behaviour and leads to bugs in some cases. We implemented our own `build_absolute_uri` and used that instead to avoid it.\r\n\r\nFixes #1781 \r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [ ] `tox -e test-instrumentation-django1`\r\n- [ ] `tox -e test-instrumentation-django2`\r\n- [ ] `tox -e test-instrumentation-django3`\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n",
    "head_branch": "fix-1781",
    "is_a_fork": true,
    "comments": [
      "I wouldn't recommend this. I think It is a hacky way to get around the fact that `build_absolute_uri` calls some internal method `get_host` which throws the exception. I belive the ability to configure the OTEL middleware is the best approach.",
      "> I wouldn't recommend this. I think It is a hacky way to get around the fact that `build_absolute_uri` calls some internal method `get_host` which throws the exception. I belive the ability to configure the OTEL middleware is the best approach.\r\n\r\nHi @srikanthccv : Checking for allowed_hosts while calling build_absolute_uri() is totally unexpected and out of scope for otel middleware. Using this solution, i believe we are providing the functionality of build_absolute_uri() without the unnecessary allowed_hosts check.\r\n\r\nI may be completely wrong but in my opinion, just to overcome the problem of one django method, it does not make sense to modify the order of the Otel middleware.\r\n\r\n@ocelotl and others please provide your opinion as well",
      "> Checking for allowed_hosts while calling build_absolute_uri() is totally unexpected and out of scope for otel middleware.\r\n> Using this solution, i believe we are providing the functionality of build_absolute_uri() without the unnecessary allowed_hosts check.\r\n\r\nI think this is a hacky workaround and customising the OTEL middleware order to be a better solution. The allowed_hosts check is not unnecessary for the user. It's a security practice for them. This solution copies the original `build_absolute_uri` because it calls the internal `get_host ` that raises the Exception. By writing \"our own `build_absolute_uri`\" it just skips that part. \r\n\r\n\r\n> just to overcome the problem of one django method, it does not make sense to modify the order of the Otel middleware.\r\n\r\nHow are you sure that it is just one method? we realised this `get_host` because someone created an issue about it. If a new person comes up with a different request path where things break because instrumentation always adds it to the beginning of the middleware list, will we keep copying the Django methods? \r\n\r\nI also mentioned other use cases where adding OTEL middleware always at the beginning breaks people's applications. Say, an end user has custom middlewares that must execute first before anything, even before the request reaches the Telemetry. They can't be okay with the fact that OTEL middleware must be first in the beginning and there is no way to change it as of today. I also thought @TheAnshul756 was on board with the idea since they responded +1.",
      "> The allowed_hosts check is not unnecessary for the user. It's a security practice for them.\r\n\r\nYes, it is not unnecessary, but the user does not expect the otel middleware to throw an exception. The basic expectation from the Otel middleware is to capture necessary telemetry data without impacting the incoming request or outgoing response.\r\n\r\n> How are you sure that it is just one method? we realised this `get_host` because someone created an issue about it. If a new person comes up with a different request path where things break because instrumentation always adds it to the beginning of the middleware list, will we keep copying the Django methods?\r\n\r\nWe need to thoroughly test any Django methods we use in the middleware to ensure they do not have any side effects. If they do, we should avoid using them and consider alternative methods or custom implementations.\r\n\r\n> I also mentioned other use cases where adding OTEL middleware always at the beginning breaks people's applications. Say, an end user has custom middleware that must execute first before anything, even before the request reaches the Telemetry. They can't be okay with the fact that OTEL middleware must be first in the beginning and there is no way to change it as of today. I also thought @TheAnshul756 was on board with the idea since they responded +1.\r\n\r\nI agree with your suggestion for the new feature, as it would be beneficial to have more flexibility in the positioning of OTEL middleware. However, I believe it does not address the current bug at hand. The exception being thrown by Otel middleware is not the expected behavior and needs to be addressed appropriately.\r\n\r\nAfter our previous discussion, I pondered over this matter and raised my concerns during the SIG meeting to gather input from others regarding this issue.",
      "I no longer attend the SIG, so I will go with what the majority decides there. My broader point is there will always be exceptions because of the incorrect order of execution. And letting users choose where to place the OTEL middleware solves them, including the linked issue. ",
      "While I agree that allowing users to choose the placement of the OTEL middleware can address some exceptions and the linked issue, I still believe that the current bug should be handled separately.\r\n\r\nEven if we provide the option to place the middleware at any specific position, it does not guarantee that this particular bug will not arise. Customers do not expect the Otel middleware to exhibit this behaviour, and they may not anticipate this issue when adding middleware at any specific position. I think it would be valuable to gather input from others to hear their opinions on this issue.\r\n\r\nAdditionally, I agree with you that providing an option to specify the middleware location would be useful for customers. I will create a separate issue to address this feature request.",
      "My comments are based on my past observations about the instrumentations. The vetting of methods to avoid side effects becomes obsolete because we don't control the libraries, and library authors change the code in surprising ways internally (this may not be as often with Django since it's a mature framework, but in general, this happens a non-trivial number of times) while keeping the API and Behaviour backwards compatible. You are using the private function `_get_raw_host`, which we strictly avoid, given how such attempts bit us in the past.  The custom solution might no longer do the right thing as the underlying library evolves. IIRC, the call taken was to integrate well with the library and rely on it as much as possible. \r\n\r\nDjango developers make a conscious decision about the order of middlewares and my first thought was OTEL middleware shouldn't be any special. There is already the `DJANGO_SETTINGS_MODULE` we instruct, so adding another one for order specification will only make things clear and more upfront. \r\n\r\nI think I tried to convey what I have in my mind; it's enough discussion so I will rest my case here."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621150cac254a19ac290aed",
    "number": 1824,
    "body": "# Description\r\n\r\nFalcon instrumentation was using route name plus method (Router.on_get) as span name which does not follow semantic conventions as stated #1726. \r\n\r\nFixes #1726 \r\n\r\n## Type of change\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n\r\n# How Has This Been Tested?\r\n\r\nInstrument any falcon application with version <= 0.39b0. Span names would not follow semantic conventions.\r\nAdded unit tests for low-cardinality route and changed previous tests that enforce incorrect span names.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "falcon_instum_semantic_conventions",
    "is_a_fork": true,
    "comments": [
      "Hi may somebody please take a look why [build (pypy3, instrumentation, ubuntu-20.04)](https://github.com/Nek0trkstr/opentelemetry-python-contrib/actions/runs/5079304961/jobs/9146135606#logs) is timing out after 6 hours, on `test_urllib3_ip_support.py::TestURLLib3InstrumentorWithRealSocket::test_basic_http_success_using_connection_pool`\r\n\r\nThis is the end of the log where job is stuck.\r\n```\r\ntest_urllib3_ip_support.py::TestURLLib3InstrumentorWithRealSocket::test_basic_http_success_using_connection_pool \r\n-------------------------------- live log call ---------------------------------\r\nWARNING  urllib3.connectionpool:connectionpool.py:824 Retrying (Retry(total=2, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ReadTimeoutError(\"HTTPConnectionPool(host='127.0.0.1:38559', port=None): Read timed out. (read timeout=3)\")': /status/200\r\nWARNING  urllib3.connectionpool:connectionpool.py:824 Retrying (Retry(total=1, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ReadTimeoutError(\"HTTPConnectionPool(host='127.0.0.1:38559', port=None): Read timed out. (read timeout=3)\")': /status/200\r\nWARNING  urllib3.connectionpool:connectionpool.py:824 Retrying (Retry(total=0, connect=None, read=None, redirect=None, status=None)) after connection broken by 'ReadTimeoutError(\"HTTPConnectionPool(host='127.0.0.1:38559', port=None): Read timed out. (read timeout=3)\")': /status/200\r\n```\r\n\r\nMy change is not affecting `URLLib3Instrumentor` so I wonder why is it happening.",
      "It's unrelated to your changes so you can ignore them. I think this PR https://github.com/open-telemetry/opentelemetry-python/pull/3318 by @shalevr might fix it. ",
      "Hi, @srikanthccv and @shalevr . \r\nI see that #3318 was not merged yet. Do we have a way to workaround this timeout issue?",
      "> Hi, @srikanthccv and @shalevr . I see that #3318 was not merged yet. Do we have a way to workaround this timeout issue?\r\n\r\nThe timeout issue is fixed now, but there is a new blocker with celery tests"
    ],
    "commit_messages": [
      "fix: Update falcon instrumentation to follow semantic conventions (#1824)\n\n* fix: Update falcon instrumentation to follow semantic conventions\r\n\r\n* docs: Update changelog\r\n\r\n* fix linter errors\r\n\r\n* Disable falcon.HTTP_200 pylint checck\r\n\r\n---------\r\n\r\nCo-authored-by: Shalev Roda <65566801+shalevr@users.noreply.github.com>\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621150dac254a19ac290aee",
    "number": 1823,
    "body": "# Description\r\n\r\nI added env vars and arguments to allow users to chose which distro and configurator they want to use in auto-instrumentations. I also refactored sitecustomize and added tests for the pre-existing and new functionality.\r\n\r\nFixes #1822 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nManually + unit tests\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "distro-specification",
    "is_a_fork": true,
    "comments": [
      "> @jeremydvoss : can you please add some test cases for this change?\r\n\r\nI would like to. Sitecustomize tests don't currently exist. I'm guessing this is because importing the module triggers autoinstrumentation. So I will need to figure out some workaround to enable testing...\r\n\r\nEDIT: Added tests after refactor.",
      "Hi all -- is there a doc or a spec somewhere that explains the differences between a \"distro\" and a \"configurator\"? (if not I'd be happy to write it) [These docs](https://opentelemetry.io/docs/instrumentation/python/distro/) say that the intent of a distro is to \"automatically configure some of the more common options for users\", which seems like an apt description for a configurator as well.\r\n\r\nThis change appears to expose to users that there is indeed a difference, but they may be confused as to what it is.\r\n\r\nIf the answer ends up being \"it's a distinction without a difference\" we may want to consider consolidating them before we expose their existence to users.",
      "Filed #1880"
    ],
    "commit_messages": [
      "Distro selection (#1823)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621150eac254a19ac290aef",
    "number": 1821,
    "body": "# Description\r\n\r\nThis makes the actual dependencies explicit and avoids relying on indirect or implicit dependencies.\r\n\r\nIn some environments, with some combinations of packages, this can prevent an `ImportError` when `yarl` is imported but was never required.\r\n\r\nNo issue was filed.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Test A: Run the normal tests and observe no regressions. (I did this by applying this PR as a patch to the Fedora Linux package.)\r\n- [x] Test B: Compare the added dependencies against the actual imports (see the bottom of this PR text).\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n\r\nhttps://github.com/open-telemetry/opentelemetry-python-contrib/blob/cae6ce46ecf834d959929f20e095f10a55f3b9d0/instrumentation/opentelemetry-instrumentation-aiohttp-client/tests/test_aiohttp_client_integration.py#L25\r\n\r\nhttps://github.com/open-telemetry/opentelemetry-python-contrib/blob/cae6ce46ecf834d959929f20e095f10a55f3b9d0/instrumentation/opentelemetry-instrumentation-aiohttp-client/src/opentelemetry/instrumentation/aiohttp_client/__init__.py#L89\r\n\r\nhttps://github.com/open-telemetry/opentelemetry-python-contrib/blob/cae6ce46ecf834d959929f20e095f10a55f3b9d0/instrumentation/opentelemetry-instrumentation-aio-pika/tests/consts.py#L4",
    "head_branch": "yarl",
    "is_a_fork": true,
    "comments": [
      "Hmm. I am not sure about the `>= 1.9.1`. In my testing of Fedora Linux Rawhide with yarl 1.9.2, I’m having to revert https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1772 to get the URL string to match. I can’t easily get the test suite to run properly outside the RPM build environment, so it’s hard for me to try, say, yarl 1.9.1 for comparison.",
      "We don't add any explicit dependency for any instrumentation package. For automatic instrumentation, the instrumentation package won't be installed with `opentelemetry-bootstrap` if the dependent package is not installed and won't be instrumented if the version criteria don't match https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/opentelemetry-instrumentation/src/opentelemetry/instrumentation/bootstrap_gen.py. ",
      "> We don't add any explicit dependency for any instrumentation package. […]\r\n\r\nOk, so the idea is that indirect dependencies via known versions should suffice.\r\n\r\nIt turns out that I’m able to build this without the direct dependencies in Fedora as well (I was encountering several overlapping difficulties when I opened this PR), so I’ll just close the PR and move on.\r\n\r\nThanks for your response!"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621150fac254a19ac290af0",
    "number": 1820,
    "body": "# Description\r\n\r\nRemove the test_credential_removal test, it failed randomly due to the availability of httpbin.org(like we did for tornado #1680 )\r\nI'm working to fix this issue in a separate PR by adding mocks for those requests.\r\n",
    "head_branch": "Fix-CI-failure-for-aiohttp-client",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211510ac254a19ac290af1",
    "number": 1819,
    "body": "Enable pypy3-test-instrumentation-requests due to the new request version 2.31.0\r\n#1807 \r\nIt seems that the problem has not been fixed for 2.31.0 request version\r\n",
    "head_branch": "Enable-requests-tests-for-pypy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211511ac254a19ac290af2",
    "number": 1818,
    "body": "Bumps [requests](https://github.com/psf/requests) from 2.28.1 to 2.31.0.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/psf/requests/releases\">requests's releases</a>.</em></p>\n<blockquote>\n<h2>v2.31.0</h2>\n<h2>2.31.0 (2023-05-22)</h2>\n<p><strong>Security</strong></p>\n<ul>\n<li>\n<p>Versions of Requests between v2.3.0 and v2.30.0 are vulnerable to potential\nforwarding of <code>Proxy-Authorization</code> headers to destination servers when\nfollowing HTTPS redirects.</p>\n<p>When proxies are defined with user info (<a href=\"https://user:pass@proxy:8080\">https://user:pass@proxy:8080</a>), Requests\nwill construct a <code>Proxy-Authorization</code> header that is attached to the request to\nauthenticate with the proxy.</p>\n<p>In cases where Requests receives a redirect response, it previously reattached\nthe <code>Proxy-Authorization</code> header incorrectly, resulting in the value being\nsent through the tunneled connection to the destination server. Users who rely on\ndefining their proxy credentials in the URL are <em>strongly</em> encouraged to upgrade\nto Requests 2.31.0+ to prevent unintentional leakage and rotate their proxy\ncredentials once the change has been fully deployed.</p>\n<p>Users who do not use a proxy or do not supply their proxy credentials through\nthe user information portion of their proxy URL are not subject to this\nvulnerability.</p>\n<p>Full details can be read in our <a href=\"https://github.com/psf/requests/security/advisories/GHSA-j8r2-6x86-q33q\">Github Security Advisory</a>\nand <a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-32681\">CVE-2023-32681</a>.</p>\n</li>\n</ul>\n<h2>v2.30.0</h2>\n<h2>2.30.0 (2023-05-03)</h2>\n<p><strong>Dependencies</strong></p>\n<ul>\n<li>\n<p>⚠️ Added support for urllib3 2.0. ⚠️</p>\n<p>This may contain minor breaking changes so we advise careful testing and\nreviewing <a href=\"https://urllib3.readthedocs.io/en/latest/v2-migration-guide.html\">https://urllib3.readthedocs.io/en/latest/v2-migration-guide.html</a>\nprior to upgrading.</p>\n<p>Users who wish to stay on urllib3 1.x can pin to <code>urllib3&lt;2</code>.</p>\n</li>\n</ul>\n<h2>v2.29.0</h2>\n<h2>2.29.0 (2023-04-26)</h2>\n<p><strong>Improvements</strong></p>\n<ul>\n<li>Requests now defers chunked requests to the urllib3 implementation to improve\nstandardization. (<a href=\"https://redirect.github.com/psf/requests/issues/6226\">#6226</a>)</li>\n<li>Requests relaxes header component requirements to support bytes/str subclasses. (<a href=\"https://redirect.github.com/psf/requests/issues/6356\">#6356</a>)</li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Changelog</summary>\n<p><em>Sourced from <a href=\"https://github.com/psf/requests/blob/main/HISTORY.md\">requests's changelog</a>.</em></p>\n<blockquote>\n<h2>2.31.0 (2023-05-22)</h2>\n<p><strong>Security</strong></p>\n<ul>\n<li>\n<p>Versions of Requests between v2.3.0 and v2.30.0 are vulnerable to potential\nforwarding of <code>Proxy-Authorization</code> headers to destination servers when\nfollowing HTTPS redirects.</p>\n<p>When proxies are defined with user info (<a href=\"https://user:pass@proxy:8080\">https://user:pass@proxy:8080</a>), Requests\nwill construct a <code>Proxy-Authorization</code> header that is attached to the request to\nauthenticate with the proxy.</p>\n<p>In cases where Requests receives a redirect response, it previously reattached\nthe <code>Proxy-Authorization</code> header incorrectly, resulting in the value being\nsent through the tunneled connection to the destination server. Users who rely on\ndefining their proxy credentials in the URL are <em>strongly</em> encouraged to upgrade\nto Requests 2.31.0+ to prevent unintentional leakage and rotate their proxy\ncredentials once the change has been fully deployed.</p>\n<p>Users who do not use a proxy or do not supply their proxy credentials through\nthe user information portion of their proxy URL are not subject to this\nvulnerability.</p>\n<p>Full details can be read in our <a href=\"https://github.com/psf/requests/security/advisories/GHSA-j8r2-6x86-q33q\">Github Security Advisory</a>\nand <a href=\"https://nvd.nist.gov/vuln/detail/CVE-2023-32681\">CVE-2023-32681</a>.</p>\n</li>\n</ul>\n<h2>2.30.0 (2023-05-03)</h2>\n<p><strong>Dependencies</strong></p>\n<ul>\n<li>\n<p>⚠️ Added support for urllib3 2.0. ⚠️</p>\n<p>This may contain minor breaking changes so we advise careful testing and\nreviewing <a href=\"https://urllib3.readthedocs.io/en/latest/v2-migration-guide.html\">https://urllib3.readthedocs.io/en/latest/v2-migration-guide.html</a>\nprior to upgrading.</p>\n<p>Users who wish to stay on urllib3 1.x can pin to <code>urllib3&lt;2</code>.</p>\n</li>\n</ul>\n<h2>2.29.0 (2023-04-26)</h2>\n<p><strong>Improvements</strong></p>\n<ul>\n<li>Requests now defers chunked requests to the urllib3 implementation to improve\nstandardization. (<a href=\"https://redirect.github.com/psf/requests/issues/6226\">#6226</a>)</li>\n<li>Requests relaxes header component requirements to support bytes/str subclasses. (<a href=\"https://redirect.github.com/psf/requests/issues/6356\">#6356</a>)</li>\n</ul>\n<h2>2.28.2 (2023-01-12)</h2>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/psf/requests/commit/147c8511ddbfa5e8f71bbf5c18ede0c4ceb3bba4\"><code>147c851</code></a> v2.31.0</li>\n<li><a href=\"https://github.com/psf/requests/commit/74ea7cf7a6a27a4eeb2ae24e162bcc942a6706d5\"><code>74ea7cf</code></a> Merge pull request from GHSA-j8r2-6x86-q33q</li>\n<li><a href=\"https://github.com/psf/requests/commit/302225334678490ec66b3614a9dddb8a02c5f4fe\"><code>3022253</code></a> test on pypy 3.8 and pypy 3.9 on windows and macos (<a href=\"https://redirect.github.com/psf/requests/issues/6424\">#6424</a>)</li>\n<li><a href=\"https://github.com/psf/requests/commit/b639e66c816514e40604d46f0088fbceec1a5149\"><code>b639e66</code></a> test on py3.12 (<a href=\"https://redirect.github.com/psf/requests/issues/6448\">#6448</a>)</li>\n<li><a href=\"https://github.com/psf/requests/commit/d3d504436ef0c2ac7ec8af13738b04dcc8c694be\"><code>d3d5044</code></a> Fixed a small typo (<a href=\"https://redirect.github.com/psf/requests/issues/6452\">#6452</a>)</li>\n<li><a href=\"https://github.com/psf/requests/commit/2ad18e0e10e7d7ecd5384c378f25ec8821a10a29\"><code>2ad18e0</code></a> v2.30.0</li>\n<li><a href=\"https://github.com/psf/requests/commit/f2629e9e3c7ce3c3c8c025bcd8db551101cbc773\"><code>f2629e9</code></a> Remove strict parameter (<a href=\"https://redirect.github.com/psf/requests/issues/6434\">#6434</a>)</li>\n<li><a href=\"https://github.com/psf/requests/commit/87d63de8739263bbe17034fba2285c79780da7e8\"><code>87d63de</code></a> v2.29.0</li>\n<li><a href=\"https://github.com/psf/requests/commit/51716c4ef390136b0d4b800ec7665dd5503e64fc\"><code>51716c4</code></a> enable the warnings plugin (<a href=\"https://redirect.github.com/psf/requests/issues/6416\">#6416</a>)</li>\n<li><a href=\"https://github.com/psf/requests/commit/a7da1ab3498b10ec3a3582244c94b2845f8a8e71\"><code>a7da1ab</code></a> try on ubuntu 22.04 (<a href=\"https://redirect.github.com/psf/requests/issues/6418\">#6418</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/psf/requests/compare/v2.28.1...v2.31.0\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=requests&package-manager=pip&previous-version=2.28.1&new-version=2.31.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/open-telemetry/opentelemetry-python-contrib/network/alerts).\n\n</details>",
    "head_branch": "dependabot/pip/requests-2.31.0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Bump requests from 2.28.1 to 2.31.0 (#1818)\n\nBumps [requests](https://github.com/psf/requests) from 2.28.1 to 2.31.0.\r\n- [Release notes](https://github.com/psf/requests/releases)\r\n- [Changelog](https://github.com/psf/requests/blob/main/HISTORY.md)\r\n- [Commits](https://github.com/psf/requests/compare/v2.28.1...v2.31.0)\r\n\r\n---\r\nupdated-dependencies:\r\n- dependency-name: requests\r\n  dependency-type: direct:production\r\n...\r\n\r\nSigned-off-by: dependabot[bot] <support@github.com>\r\nCo-authored-by: dependabot[bot] <49699333+dependabot[bot]@users.noreply.github.com>\r\nCo-authored-by: Shalev Roda <65566801+shalevr@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211511ac254a19ac290af3",
    "number": 1817,
    "body": "Fixes #1816",
    "head_branch": "issue_1816",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update maintainers list (#1817)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211512ac254a19ac290af4",
    "number": 1815,
    "body": "# Description\r\n\r\nAdd support for confluent_kafka instrumentation until 2.1.1 version.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\n- [ ] Add support for higher versions\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] test-instrumentation-confluent-kafka\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "HLS-3903",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: davidgonor1408 / name: David Gonoradsky  (3c89e02baa8e078f1ea95f057d79713f83f9495e, df43526966d13b6d1302a757a22aeb305311b7c4, b93a507227785bf7730dd5628bc03dbcf82ddfed, 8620661ce4b6450f4fbc454e904642250f04e775, 75b62a908be9b24fb0a72976458591b7712d4a10, f45fcd2d9792169c4725fdf377b07125d49f27f4, dcbd72fd2e7a4f8bb5905b6545b3ef5f9586108c, 9ef0cac7dd01e6c9a119ad6e8dd838875212fa5d)</li><li>:white_check_mark: login: nozik / name: Ran Nozik  (1515b4742eeeb178f230b247ee894cc1f7b5a2b8)</li></ul>",
      "@davidgonor1408 Please update your branch so I can merge this change\r\n"
    ],
    "commit_messages": [
      "Add support for confluent_kafka until 2.1.1 version (#1815)\n\n* Add support for confulent_kafka until 2.1.1 version\r\n\r\n* Include 2.1.1 version\r\n\r\n* update CHANGELOG.md\r\n\r\n* run: 'tox -e generate'\r\n\r\n* resolve comments\r\n\r\n* update top version to 2.2.0\r\n\r\n---------\r\n\r\nCo-authored-by: Ran Nozik <ran@gethelios.dev>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211513ac254a19ac290af5",
    "number": 1813,
    "body": "Copy log updates from `release/v1.18.x-0.39bx`.",
    "head_branch": "opentelemetrybot/copy-change-log-updates-from-release-v1.18.x-0.39bx",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211514ac254a19ac290af6",
    "number": 1811,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "release/v1.18.x-0.39bx",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211515ac254a19ac290af7",
    "number": 1810,
    "body": "# Description\r\n\r\nFixes errors from `ElasticsearchInstrumentor().instrument()` when using `elasticsearch` version 8.0.0+. In [version 8](https://www.elastic.co/guide/en/elasticsearch/client/python-api/master/release-notes.html#rn-8-0-0), elasticsearch Python was split into `elasticsearch` and `elastic_transport` packages. This makes `wrapt.wrap_function_wrapper` fail with the current call args. Example trace after `opentelemetry-bootstrap` and `opentelemetry-instrument` with a custom distro when `elasticsearch>=8.0.0` is installed:\r\n\r\n```\r\nInstrumenting of elasticsearch failed\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.7/site-packages/opentelemetry/instrumentation/auto_instrumentation/sitecustomize.py\", line 84, in _load_instrumentors\r\n    distro.load_instrumentor(entry_point, skip_dep_check=True)\r\n  File \"/usr/local/lib/python3.7/site-packages/opentelemetry/instrumentation/distro.py\", line 63, in load_instrumentor\r\n    instrumentor().instrument(**kwargs)\r\n  File \"/usr/local/lib/python3.7/site-packages/opentelemetry/instrumentation/instrumentor.py\", line 109, in instrument\r\n    **kwargs\r\n  File \"/usr/local/lib/python3.7/site-packages/opentelemetry/instrumentation/elasticsearch/__init__.py\", line 150, in _instrument\r\n    response_hook,\r\n  File \"/usr/local/lib/python3.7/site-packages/wrapt/wrappers.py\", line 895, in wrap_function_wrapper\r\n    return wrap_object(module, name, FunctionWrapper, (wrapper,))\r\n  File \"/usr/local/lib/python3.7/site-packages/wrapt/wrappers.py\", line 841, in wrap_object\r\n    (parent, attribute, original) = resolve_path(module, name)\r\n  File \"/usr/local/lib/python3.7/site-packages/wrapt/wrappers.py\", line 829, in resolve_path\r\n    original = lookup_attribute(parent, attribute)\r\n  File \"/usr/local/lib/python3.7/site-packages/wrapt/wrappers.py\", line 827, in lookup_attribute\r\n    return getattr(parent, attribute)\r\nAttributeError: module 'elasticsearch' has no attribute 'Transport'\r\nFailed to auto initialize opentelemetry\r\n```\r\n\r\nThe error does not happen when `elasticsearch==7.17.0` is installed.\r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python-contrib/issues/1809\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n1. Set up a Docker container (e.g. `python:3.7`) using local `opentelemetry-python-contrib` as volume\r\n2. `pip install elasticsearch==8.0.0` (repeat later with `7.17.0`)\r\n3. `pip install -Ie /opentelemetry-python-contrib/instrumentation/opentelemetry-instrumentation-elasticsearch`\r\n4. `opentelemetry-bootstrap --action=install`\r\n5. `opentelemetry-instrument <some_service>` where some_service connects to a running es instance and has `OTEL_TRACES_EXPORTER=console`\r\n6. Above error trace no longer prints at service startup and instrumentation.\r\n7. Console traces exporter receives span created by the elasticsearch instrumentation. For example:\r\n\r\n```\r\n{\r\n    \"name\": \"Elasticsearch/\",\r\n    \"context\": {\r\n        \"trace_id\": \"0x517dde5598396aab051aef2ad3086dc1\",\r\n        \"span_id\": \"0x6f982765b58e1e8a\",\r\n        \"trace_state\": \"[]\"\r\n    },\r\n    \"kind\": \"SpanKind.CLIENT\",\r\n    \"parent_id\": null,\r\n    \"start_time\": \"2023-05-19T21:23:32.029952Z\",\r\n    \"end_time\": \"2023-05-19T21:23:32.103753Z\",\r\n    \"status\": {\r\n        \"status_code\": \"UNSET\"\r\n    },\r\n    \"attributes\": {\r\n        \"db.system\": \"elasticsearch\",\r\n        \"elasticsearch.url\": \"/\",\r\n        \"elasticsearch.method\": \"GET\"\r\n    },\r\n    \"events\": [],\r\n    \"links\": [],\r\n    \"resource\": {\r\n        \"attributes\": {\r\n            \"telemetry.sdk.language\": \"python\",\r\n            \"telemetry.sdk.name\": \"opentelemetry\",\r\n            \"telemetry.sdk.version\": \"1.18.0.dev0\",\r\n            \"service.name\": \"my-flask-service\"\r\n        },\r\n        \"schema_url\": \"\"\r\n    }\r\n}\r\n```\r\n\r\nI've added setup for running the existing tests with es8 in [935caa6](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1810/commits/935caa629fd52c8fbac267dca36ef894acbdaf36). They are commented out for now until this related issue is resolved: https://github.com/open-telemetry/opentelemetry-python-contrib/issues/620\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "elasticsearch-import-bugfix",
    "is_a_fork": true,
    "comments": [
      "Please fix lint: https://github.com/open-telemetry/opentelemetry-python/blob/main/CONTRIBUTING.md#development",
      "> Please fix lint: https://github.com/open-telemetry/opentelemetry-python/blob/main/CONTRIBUTING.md#development\r\n\r\nThanks! Addressed in [81432fc](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1810/commits/81432fc981f252fbf5f5441d445334a6e83e04a2) and lint passes now: https://github.com/open-telemetry/opentelemetry-python-contrib/actions/runs/5204816716/jobs/9389521509?pr=1810\r\n\r\nSome parts of `test_celery_functional` are failing, `test_fn_exception_expected` and `test_class_task_exception_excepted`: https://github.com/open-telemetry/opentelemetry-python-contrib/actions/runs/5204816716/jobs/9389521191 I don't think this is related to the changes in this PR.",
      "Thanks @shalevr for merging in main! Is anything else needed for this PR or could it be merged?\r\n\r\nNo more changelog conflicts and all checks now passing."
    ],
    "commit_messages": [
      "Add conditional elastic_transport import (#1810)\n\n* Add conditional elastic_transport import\r\n\r\n* Update changelog\r\n\r\n* Add future es8 tests\r\n\r\n* Update CHANGELOG.md\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>\r\n\r\n* Add license, rm pylint disable\r\n\r\n* Consistent elastic version check\r\n\r\n* lint import\r\n\r\n* Update CHANGELOG.md\r\n\r\n---------\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>\r\nCo-authored-by: Shalev Roda <65566801+shalevr@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211516ac254a19ac290af8",
    "number": 1808,
    "body": "# Description\r\n\r\nThe documentation rendered [here](https://opentelemetry-python-contrib.readthedocs.io/en/latest/instrumentation/redis/redis.html) refers to the `opentelemetry-instrumentation` executable which, to my knowledge, should be `opentelemetry-instrument`.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nThis is just a docs fix.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "fix-redis-doc",
    "is_a_fork": true,
    "comments": [
      "Confirmed, it is indeed `opentelemetry-instrument`. Thanks for the update!",
      "lgtm but ther's a cancelled check blocking.",
      "Looks like the test failure was because httpbin was unavailable during the test run. Have folks considered replacing httpbin with a local test server -- if so perhaps creating a new issue is in order? cc: @ocelotl ",
      "> Looks like the test failure was because httpbin was unavailable during the test run. Have folks considered replacing httpbin with a local test server -- if so perhaps creating a new issue is in order? cc: @ocelotl\r\n\r\nThere is an open issue for this #1681. I will fix this soon. In the meanwhile, we will re-run this test",
      "And for the cancelled check, it will be fixed after #1826 will merge"
    ],
    "commit_messages": [
      "fix redis doc (#1808)\n\ndoc string rendered at\r\nhttps://opentelemetry-python-contrib.readthedocs.io/en/latest/instrumentation/redis/redis.html\r\nrefers to `opentelemetry-instrumentation` executable which appears to be a typo\r\n\r\nCo-authored-by: Shalev Roda <65566801+shalevr@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211517ac254a19ac290af9",
    "number": 1806,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n",
    "head_branch": "skip-requests-tests-for-pypy3",
    "is_a_fork": true,
    "comments": [
      "Can you create an issue to address the original issue? We should find out if there is something we can do and enable the tests again.",
      "> Can you create an issue to address the original issue? We should find out if there is something we can do and enable the tests again.\r\n\r\nSure, thanks"
    ],
    "commit_messages": [
      "Skip requests tests for pypy3 (#1806)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211518ac254a19ac290afa",
    "number": 1805,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "bump-pypy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211518ac254a19ac290afb",
    "number": 1804,
    "body": "Fixes #1803\r\n\r\nMy intention with this PR is twofold: first, to clearly show which instrumentations have codeowners and which do not. I am ok with @open-telemetry/opentelemetry-python-contrib-approvers being the default codeowner for everything but the instrumentations since they require specialized knowledge of third-party libraries/frameworks us maintainers not necessarily have.\r\n\r\nSecond, to make it possible to use Github notifications effectively. Right now us in @open-telemetry/opentelemetry-python-contrib-approvers get notified with every PR made in this repo regardless of the files being changed in such PR. I personally find it very hard to use Github notifications if there are so many notifications from instrumentations I can't maintain.\r\n\r\nThe way I want this to work is for @open-telemetry/opentelemetry-python-contrib-approvers to be notified when a PR is made that changes any file in this repo except for what is in the `instrumentations` directory.\r\n\r\nAdditionally, I want anyone that maintains any instrumentation to be able to simply add their username in the `CODEOWNERS` file right next to the particular instrumentation they want to maintain.",
    "head_branch": "issue_1803",
    "is_a_fork": true,
    "comments": [
      "> Fixes #1803\r\n> \r\n> My intention with this PR is twofold: first, to clearly show which instrumentations have codeowners and which do not. I am ok with @open-telemetry/opentelemetry-python-contrib-approvers being the default codeowner for everything but the instrumentations since they require specialized knowledge of third-party libraries/frameworks us maintainers not necessarily have.\r\n> \r\n> Second, to make it possible to use Github notifications effectively. Right now us in @open-telemetry/opentelemetry-python-contrib-approvers get notified with every PR made in this repo regardless of the files being changed in such PR. I personally find it very hard to use Github notifications if there are so many notifications from instrumentations I can't maintain.\r\n> \r\n> The way I want this to work is for @open-telemetry/opentelemetry-python-contrib-approvers to be notified when a PR is made that changes any file in this repo except for what is in the `instrumentations` directory.\r\n> \r\n> Additionally, I want anyone that maintains any instrumentation to be able to simply add their username in the `CODEOWNERS` file right next to the particular instrumentation they want to maintain.\r\n\r\nI agree with you. There are so many Github notifications...\r\nI have two questions:\r\n1. The code owner concept will be in addition to component_owners, or will there be a conflict between them?\r\n2. Is it possible to have many code owners for the same instrumentation?",
      "The documentation for the `component-owners` action [says](https://github.com/dyladan/component-owners#component-owners):\r\n\r\n> This works very similarly to CODEOWNERS, however with CODEOWNERS all owners must have write access to the repository. Many open source projects wish to assign some level of ownership of individual components, but are hesitant to grant write access to those owners. This action only requires that component owners be collaborators on the repository or members of the organization, but does NOT require they have write access.\r\n\r\nI ran this experiment:\r\n\r\n1. I created this repo: https://github.com/ocelotl/codeowner\r\n2. I created a new user: https://github.com/diegohurtadoservicenow\r\n3. I assigned @diegohurtadoservicenow as a codeowner for [`instrumentation_2`](https://github.com/ocelotl/codeowner/blob/main/CODEOWNERS#L5).\r\n4. I assigned @diegohurtadoservicenow as a collaborator in https://github.com/ocelotl/codeowner.\r\n5. I opened a [PR](https://github.com/ocelotl/codeowner/pull/12) that changes `instrumentation_2` using my @ocelotl account.\r\n6. I noticed how that PR was automaticaly assigned to @diegohurtadoservicenow and @diegohurtadoservicenow received a Github notification corresponding to that PR.\r\n\r\nSo, it seems like just adding someone as a collaborator is enough for `CODEOWNERS` to assign PRS to that user automatically?\r\n\r\nAlso, it seems like it is possible to add more than one user to [the same instrumentation](https://docs.github.com/en/repositories/managing-your-repositorys-settings-and-features/customizing-your-repository/about-code-owners#example-of-a-codeowners-file):\r\n\r\n```\r\n# In this example, any change inside the `/scripts` directory\r\n# will require approval from @doctocat or @octocat.\r\n/scripts/ @doctocat @octocat\r\n```",
      "> The documentation for the `component-owners` action [says](https://github.com/dyladan/component-owners#component-owners):\r\n> \r\n> > This works very similarly to CODEOWNERS, however with CODEOWNERS all owners must have write access to the repository. Many open source projects wish to assign some level of ownership of individual components, but are hesitant to grant write access to those owners. This action only requires that component owners be collaborators on the repository or members of the organization, but does NOT require they have write access.\r\n> \r\n> I ran this experiment:\r\n> \r\n> 1. I created this repo: [ocelotl/codeowner](https://github.com/ocelotl/codeowner)\r\n> 2. I created a new user: [@diegohurtadoservicenow](https://github.com/diegohurtadoservicenow)\r\n> 3. I assigned @diegohurtadoservicenow as a codeowner for [`instrumentation_2`](https://github.com/ocelotl/codeowner/blob/main/CODEOWNERS?rgh-link-date=2023-05-17T17%3A57%3A07Z#L5).\r\n> 4. I assigned @diegohurtadoservicenow as a collaborator in [ocelotl/codeowner](https://github.com/ocelotl/codeowner).\r\n> 5. I opened a [PR](https://github.com/ocelotl/codeowner/pull/12) that changes `instrumentation_2` using my @ocelotl account.\r\n> 6. I noticed how that PR was automaticaly assigned to @diegohurtadoservicenow and @diegohurtadoservicenow received a Github notification corresponding to that PR.\r\n> \r\n> So, it seems like just adding someone as a collaborator is enough for `CODEOWNERS` to assign PRS to that user automatically?\r\n> \r\n> Also, it seems like it is possible to add more than one user to [the same instrumentation](https://docs.github.com/en/repositories/managing-your-repositorys-settings-and-features/customizing-your-repository/about-code-owners#example-of-a-codeowners-file):\r\n> \r\n> ```\r\n> # In this example, any change inside the `/scripts` directory\r\n> # will require approval from @doctocat or @octocat.\r\n> /scripts/ @doctocat @octocat\r\n> ```\r\n\r\nOk, after discussing this with @dyladan, what happens is this.\r\n\r\n1. There can be members of an organization, in our case [these people](https://github.com/orgs/open-telemetry/people). These users will not necessarily have write permissions on a particular repo.\r\n2. There can be collaborators in a repo, these users will have write permissions in that particular repo.\r\n\r\nThe experiment I ran above worked because the user I created is a collaborator and has write permissions, this is usually not what we want for instrumentation reviewers."
    ],
    "commit_messages": [
      "Refactor CODEOWNERS file (#1804)\n\n* Refactor CODEOWNERS file\r\n\r\nFixes #1803\r\n\r\n* Remove CODEOWNERS\r\n\r\n* Refactor component owners configuration\r\n\r\n* Refactor CODEOWNERS to select any file but the ones in instrumentation\r\n\r\n---------\r\n\r\nCo-authored-by: Shalev Roda <65566801+shalevr@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211519ac254a19ac290afc",
    "number": 1800,
    "body": "# Description\n\nThis PR intentds to add support for instrumenting `aiohttp-server` adding support for Traces and Metrics.\n\n## Type of change\n\n- [X] New feature (non-breaking change which adds functionality)\n\n# How Has This Been Tested?\n\n- [X] Automated Tests\n\n# Does This PR Require a Core Repo Change?\n\n- [X] No.\n\n# Checklist:\n\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\n\n- [X] Followed the style guidelines of this project\n- [ ] Changelogs have been updated\n- [X] Unit tests have been added\n- [ ] Documentation has been updated\n",
    "head_branch": "aiohttp-server-instrumentation",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: dmanchon / name: Daniel Manchon  (8d0c5042738ff916cb7bafc0af8eee7d258382fa, 5a14c7dae9a2908d0d064cf90bed7b3a234026ef, 57f59b07b2d1f21664af7bb57b4e16df9219f5c7, ceb0d18ac3bcba95f8bbc195713f87d8edf4ad9f)</li><li>:white_check_mark: login: decko / name: André \"decko\" de Brito  (ea76c6d679b238e5d0a735b5e8d2e29f8fff7edd, 1239fc588003f726984e7ee97229e44fced9ab37, 3c00ed7c569a51df82e9bd52d11d2b18a1a8eab7, 767adcc92ea96996e1f95a840b74b68182e3cda5, e312bec314dcca2850520115452ac03a88b8f712, 8699f9cbefd669173190af26b50493e0a14717c2, c29be3079d2829e0ae00cb94d355362b67bf0224, ad6b87ff8f2555b5494215caf3e473d952e4f9d3, b0063053d1b8cb3860ca9327621d7119c8dfc327, be9ccfc0127776cebdf17126b3390b90df01230d, 04d54508e8fd49f2c28b67e2b0d2827bf15bbb0d, 38204c0a7bdfedc667502ced9aae70ccdb63fd5a, e235e7e728bcd1407268765eccefe9d368802c2c, 9a551b188f0c7f403551495a25e85fb2afc94470, 82d3b8dcfcd1843586494e8d73a1f66bfb7c0c5a, 4f922a232cc16c9ad6c92c987493c0a299da4e06, 74fece8cfbf762d57eadefbbcd4a9660745700f9, adee7a2f00ce421432350b292b1b691cba351175, 653d923c230de643f435e4f874dc5f109865049d, 836a738305be601dfc7efd1de2eae77bb31be294, 40c6e3da65a7e0b84c13c9bf5205683a4fb5ee60, 5160ca66670ed3774c1cff6cd6624b2137e13732, cd569b14a0de579306dfdd767717e7334ed237d2, 98c0f4216224811f2257e6b9fb0fe76c660e23a1, 3c1a0b26468e454a1098373c39e05d6daa429c4a, a76f1df98b8cc0665c5d2426b2899416b54c942a, dec87c6ab2459397128e7c4d03ac7b6d3ddc9411, 7b4e50c70a41f4b75ecc51f5ca3c88e54d573d2a, bde869ca3ee732ae8fdf43b327bc0182644cc166, 4397a46eda0d44532e27bdc683618e70fe13f70f, 26393c6df3b91fe79c80bdb8459ba3f43e62d6c1, 96300f5a635111ce8a945c2f98bfdc3f0c3b8432, 9809d79caa473556e7d3da5c2574e11818640012, fbbe270fabffd67399a6560812d58072cdce7582, 58936f5c86376ad97ac531537b0759de3b6b8a0a, 782e4e8d0ddb14e6f1b395a726f4dcbd72d10e53, c22e3000c2cf62b55b73a701f6de3b360d023cc5)</li><li>:white_check_mark: login: ocelotl / name: Diego Hurtado  (ce28b31cf51f39bc4441a954dfb7d51aa1e065af, d5caef05cefc9739efc2777a48dbb4cdf5c6bb7a, 75f2aad525caf0799894e106a1f813b455450c02)</li></ul>",
      "@kennytrytek-wf and @ocelotl we are ready to work to get this done. It was originally in [this PR](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/942) which seemed close to the end of review. We've taken it further from there. We're ready to fix things, but we need a reviewer. Can someone look at this, pretty please?\r\n\r\nWhat do we need to do to get this to a merged state?\r\n\r\nThank you!",
      "@decko the EasyCLA needs to be completed. Is that something you can resolve?",
      "Hi @kennytrytek-wf. Thanks for the review so far.\r\nI've worked out the comments you've made and expect that we're in the right way.",
      "Hi,\r\n    I'm keen to see when the PR will be merged? I believe this PR merge will help us to get the metrics of the Pulp Content server usage which we are more eagerly looking for. Is their a approximate timeline about the PR merge?",
      "\r\n+1 another user of aiohttp-server love to see this get merged",
      "> Hi, I'm keen to see when the PR will be merged? I believe this PR merge will help us to get the metrics of the Pulp Content server usage which we are more eagerly looking for. Is their a approximate timeline about the PR merge?\r\n\r\nWe hope soon. Already got some approvals and given a thing or two, we believe it's on the verge of be merged into upstream.",
      "@ocelotl I worked on all the points you brought. Thanks for pointing it out.",
      "I'd like to use this PR too. @ocelotl please let us know what else we can do to get it merged.\r\n\r\nAlso who is able to publish this new package on PyPI? It needs to also be available there for us to use it.",
      "@kennytrytek-wf also please let us know if there is anything else we should do to get it merged. Thank you!",
      "@ocelotl Could you please review the latest changes? ",
      "Hi all !\r\nThanks for the contribution ! \r\nAny plan for releasing this one as a standalone lib on pypi ?\r\nThanks !",
      "forget what I said, just saw https://github.com/open-telemetry/opentelemetry-python-contrib/issues/2053"
    ],
    "commit_messages": [
      "Aiohttp-server Instrumentation (#1800)\n\nCo-authored-by: Kenny Trytek <kenny.trytek@workiva.com>\r\nCo-authored-by: Daniel Manchon <dmanchon@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621151aac254a19ac290afd",
    "number": 1799,
    "body": "# Description\r\n\r\nThe pypy3 pipeline failed for the requests latest version(2.30.0)\r\nIn the meantime, until they fix the version, we support up to 2.29.0\r\n\r\n",
    "head_branch": "Fix-urllib3-timeout",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621151bac254a19ac290afe",
    "number": 1798,
    "body": "Prepare release 1.18.0/0.39b0.",
    "head_branch": "opentelemetrybot/prepare-release-1.18.0-0.39b0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[release/v1.18.x-0.39bx] Prepare release 1.18.0/0.39b0 (#1798)\n\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621151cac254a19ac290aff",
    "number": 1797,
    "body": "Update version to `1.19.0.dev/0.40b0.dev`.",
    "head_branch": "opentelemetrybot/update-version-to-1.19.0.dev-0.40b0.dev",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Update version to 1.19.0.dev/0.40b0.dev (#1797)\n\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621151dac254a19ac290b00",
    "number": 1793,
    "body": "# Description\r\nThe usage example mentioned in the docs: https://opentelemetry-python-contrib.readthedocs.io/en/latest/instrumentation/urllib3/urllib3.html has a syntax issue, where the correct syntax is \r\n```\r\nURLLib3Instrumentor().instrument(\r\nrequest_hook=request_hook, response_hook=response_hook)\r\n)\r\n```\r\ninstead of \r\n```\r\nURLLib3Instrumentor.instrument(\r\nrequest_hook=request_hook, response_hook=response_hook)\r\n)\r\n```\r\n\r\n\r\nFixes ([#1767](https://github.com/open-telemetry/opentelemetry-python-contrib/issues/1767))\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n\r\n# How Has This Been Tested?\r\n\r\ntested by regenerating the docs, using tox.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "first-contrib-opentelemetry",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: yashaswi2000 / name: Yashaswi Makula  (45581df1406a2e502d4ea37aaf37af906f751fd3)</li><li>:white_check_mark: login: shalevr / name: Shalev Roda  (09c9e03ad9faf2ff501d6e625aaca88046c31575, 1c58909e689ada261c623af55ed256c296b901e5, 388806f26afae642ae469827045c4291c732a8ba, 6a1e546b3e0a8c48a0d9ef319f06d8983587a83b, 0a6d04ab2e6c48f8af4d75d22507b8e782b616c4)</li><li>:white_check_mark: login: ocelotl / name: Diego Hurtado  (62a6f5e04cccc426437569000910b699c7053445, 52a00d5549ccd5e2fdf88740f942b003a6c51288)</li></ul>",
      "do i need to author a commit again?, i signed the easycla now.",
      "/easycla"
    ],
    "commit_messages": [
      "Fixed urllib3 instrumentation example in instrumentation documentation (#1793)\n\n* corrected instrumentation example in urllib3\r\n\r\n* Remove changelog entry\r\n\r\n---------\r\n\r\nCo-authored-by: Shalev Roda <65566801+shalevr@users.noreply.github.com>\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621151eac254a19ac290b01",
    "number": 1792,
    "body": null,
    "head_branch": "remove-self",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "remove srikanthccv from maintainers (#1792)\n\nCo-authored-by: Shalev Roda <65566801+shalevr@users.noreply.github.com>\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621151fac254a19ac290b02",
    "number": 1791,
    "body": "# Description\r\n\r\nDon't set `_tracer` in `AsyncPGInstrumentor.__init__` is called to avoid corrupting singleton state and extract `leading_comment_remover` to class-level to prevent multiple compilations of a constant regex.\r\n\r\nFixes #1790\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n* Added a unit test (`test_duplicated_instrumentation_works`)\r\n* Manually tested against a Postgres container (see code snippet in [issue](https://github.com/open-telemetry/opentelemetry-python-contrib/issues/1790))\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "marcuslimdw/asyncpg-fix-multiple-instrumentor-instantiation",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: marcuslimdw / name: Marcus Lim  (dfba8422f70c17541ce3e52335352505f585f8b0, b7f8ab3d4d2cfbdd858e1712b598ec8958af3b21, d674343a854d7185658b373d0062e2f21302b173, 57f792d8e2f2dd2f46ba8425022c3585f18c309c, 0972b91c31e6c725338dfeb7d132a1c4a7e12b2c, 6ce6a515368d7500258a5f9686cbb29d20dbee0c, 479e788c4d8faa1c2edd7234dfb6d80c86b8da14, eb5eabed85f48f1854affb9816d72a5e1f42cebf, 0f9dd37df7f4888414c97e35fa2da0124d386f71, 6e1626813cfa38150f103f901ca4770aff926313)</li><li>:white_check_mark: login: srikanthccv / name: Srikanth Chekuri  (75ce86a350c2a284af20bb42590cae973c510555)</li></ul>",
      "@marcuslimdw thank you for the fix! When is this expected to be merged?",
      "@andrijaperovic not sure, it's waiting on review...",
      "Please fix the lint error and add an entry to the changelog"
    ],
    "commit_messages": [
      "Stop multiple calls to AsyncPGInstrumentor.__init__ from clobbering instance attributes (#1791)\n\n* Stop multiple calls to AsyncPGInstrumentor.__init__ from clobbering instance tracer attribute\r\n\r\n* Remove class-level initialisation of _tracer\r\n\r\n* Fix regex\r\n\r\n* Add to changelog\r\n\r\n* Fix lint errors\r\n\r\n* Update CHANGELOG.md\r\n\r\nCo-authored-by: Shalev Roda <65566801+shalevr@users.noreply.github.com>\r\n\r\n* Set tracer in class definition to avoid lint error\r\n\r\n---------\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>\r\nCo-authored-by: Shalev Roda <65566801+shalevr@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211520ac254a19ac290b03",
    "number": 1789,
    "body": "Add new unit tests.\r\n\r\n# Description\r\n\r\nThis PR adds `http.server.response.size` to ASGI instrumentation logic.\r\n\r\nIt follows naming/conventions from here: https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/metrics/semantic_conventions/http-metrics.md#metric-httpserverresponsesize\r\n\r\nIt's basically using `content-length` from the response headers to record response size.\r\n\r\nFixes #1782 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Changed the current unit tests to support `content-length` and test `http.server.response.size`.\r\n- [x] Tested locally with one API service built on top of the fastAPI and everything worked as expected as I was able to see old/new metrics in the Grafana dashboard.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n",
    "head_branch": "Add-response-size-histogram-metric-to-ASGI-implementation",
    "is_a_fork": true,
    "comments": [
      "@shalevr I’ve added new metrics and also new unit tests. Also, updated the changelog and fixed linting issues. I’m not sure, but I think we don’t need any documentation updates for my changes.\r\nLet me know if I’m missing something or If I can refactor anything in my logic.\r\nThank you.",
      "@shalevr \r\nI need to fix three tests that are failing in these packages:\r\n1. FastAPI\r\n2. Starlette\r\n3. AIOHttpClient (Which I'm not sure about the issue yet)\r\n\r\nBtw, I'm not able to use `tox` locally anymore:\r\n\r\n`ERROR: Could not find a version that satisfies the requirement opentelemetry-semantic-conventions==0.39b0.dev (from opentelemetry-instrumentation-asgi[test]) (from versions: 0.20b0, 0.21b0, 0.22b0, 0.23b0, 0.23b2, 0.24b0, 0.25b0, 0.25b1, 0.25b2, 0.26b0, 0.26b1, 0.27b0, 0.28b0, 0.28b1, 0.29b0, 0.30b0, 0.30b1, 0.31b0, 0.32b0, 0.33b0, 0.34b0, 0.35b0, 0.36b0, 0.37b0, 0.38b0)\r\nERROR: No matching distribution found for opentelemetry-semantic-conventions==0.39b0.dev`\r\n\r\nI think it's because of the recent update in the python core package, but I couldn't find a workaround for how to fix it. Could you please help me with that?\r\n\r\nThanks.",
      "> @shalevr I need to fix three tests that are failing in these packages:\r\n> \r\n> 1. FastAPI\r\n> 2. Starlette\r\n> 3. AIOHttpClient (Which I'm not sure about the issue yet)\r\n> \r\n> Btw, I'm not able to use `tox` locally anymore:\r\n> \r\n> `ERROR: Could not find a version that satisfies the requirement opentelemetry-semantic-conventions==0.39b0.dev (from opentelemetry-instrumentation-asgi[test]) (from versions: 0.20b0, 0.21b0, 0.22b0, 0.23b0, 0.23b2, 0.24b0, 0.25b0, 0.25b1, 0.25b2, 0.26b0, 0.26b1, 0.27b0, 0.28b0, 0.28b1, 0.29b0, 0.30b0, 0.30b1, 0.31b0, 0.32b0, 0.33b0, 0.34b0, 0.35b0, 0.36b0, 0.37b0, 0.38b0) ERROR: No matching distribution found for opentelemetry-semantic-conventions==0.39b0.dev`\r\n> \r\n> I think it's because of the recent update in the python core package, but I couldn't find a workaround for how to fix it. Could you please help me with that?\r\n> \r\n> Thanks.\r\n\r\nYou can ignore the aiohttp-client. It's a known issue that I'm working to fix.\r\nAnd the tox failed for asgi I'm not sure why, but you can run tox just for fastapi and Starlette:\r\ntox -e test-instrumentation-fastapi\r\ntox -e test-instrumentation-starlette\r\n",
      "I've fixed unit tests for FastAPI and Starlette.",
      "Please fix the lint errors",
      "Do we also need http.server.request.size?\r\n\r\nAs described here:\r\nhttps://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/metrics/semantic_conventions/http-metrics.md#metric-httpserverrequestsize",
      "> Do we also need http.server.request.size?\r\n> \r\n> As described here: https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/metrics/semantic_conventions/http-metrics.md#metric-httpserverrequestsize\r\n\r\n@shalevr Thanks for reviewing.\r\nI think we can implement this in a different PR (I can work on this too).\r\nI don't see that documentation saying these two metrics are dependent on each other, and we cannot have only one of those.\r\nLet me know what you think.",
      "> > Do we also need http.server.request.size?\r\n> > As described here: https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/metrics/semantic_conventions/http-metrics.md#metric-httpserverrequestsize\r\n> \r\n> @shalevr Thanks for reviewing. I think we can implement this in a different PR (I can work on this too). I don't see that documentation saying these two metrics are dependent on each other, and we cannot have only one of those. Let me know what you think.\r\n\r\nSounds ok, I opened an issue for this #1865",
      "Thanks"
    ],
    "commit_messages": [
      "Add http.server.response.size metric to ASGI implementation. (#1789)\n\n* Add http.server.response.size metric to ASGI implementation.\r\nAdd new unit tests.\r\n\r\n* Update changelog.\r\n\r\n* Fix linting by disabling too-many-nested-blocks\r\n\r\n* Put new logic in a new method\r\n\r\n* Refactor the placement of new logic.\r\n\r\n* Fixed the unit tests in FastAPI and Starlette\r\n\r\n* Update changelog.\r\n\r\n* FIx lint errors.\r\n\r\n* Refactor getting content-length header\r\n\r\n* Refactor getting content-length header\r\n\r\n---------\r\n\r\nCo-authored-by: Shalev Roda <65566801+shalevr@users.noreply.github.com>\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211521ac254a19ac290b04",
    "number": 1788,
    "body": "# Description\n\nwhen using `path('',...)`, previous code produces spans with an empty\nstring name. I believe this contradicts the spec, and causes failures in some\nexporters (at least the Google Cloud Trace exporter).\n\nThis change corrects this fallback behavior and adds a test.\nFixes #1098\n\n## Type of change\n\nPlease delete options that are not relevant.\n\n- [X] Bug fix (non-breaking change which fixes an issue)\n\n# How Has This Been Tested?\n\nThe included test fails without the corresponding code change.\n\n# Does This PR Require a Core Repo Change?\n\n- [X] No.\n\n# Checklist:\n\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\n\n- [x] Followed the style guidelines of this project\n- [x] Changelogs have been updated\n- [x] Unit tests have been added\n- [ ] Documentation has been updated\n",
    "head_branch": "emptyroute",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: muncus / name: Marc Dougherty  (8254ece5e0bc082f00d56ca652c5ec2ee00b93d1, 1caff1c7aa9f75d85c8a4dc9ee9fe5115b74d033, 18bd6bf17c99dc7d0040b97bcba5c4b3d2d789f8, 808418c5bca48b735aa13147fa8f033e7d75a58c, 67cdd0d547c299a2e36cee320f65a2d8d01bb615, c28c67238abe137c4f7328777849a67932d9686e, db85f97fc3af39c8eebcd3fabc339ba2ce378012, 0ea524b82c23c379a5ba501d7bf001dc5e83556e, fd6fdebfc1750d05dfc0263868103987088174c0, 308dab0a40fc072605daaf65b622847151177e74, 17f2cceae0f4c003c3f06aecadd538a4999fd0a0, 9e6be51ab8fade915605a3fc9c3ccfaa51542286)</li><li>:white_check_mark: login: srikanthccv / name: Srikanth Chekuri  (794811b17dc6d9db109e1a801f6f5c9b84cf67ee)</li><li>:white_check_mark: login: shalevr / name: Shalev Roda  (1b53e159b78825db9aaa9f28b9dcc55be4260403, 05bf7b97290a00325521706474fed8ffafd957e1, 974f80608c6c02437db2cb0486780d31b49b0ea7, 6db2f8e622da2ae8b1712d4bff19e643afe62b30)</li><li>:white_check_mark: login: ocelotl / name: Diego Hurtado  (95fdc1d55d135cd1a79fae46406d4494e29368a2)</li></ul>",
      "> I believe this contradicts the spec\r\n\r\nIm not sure about that. Can you link the spec source?",
      "> > I believe this contradicts the spec\r\n> \r\n> Im not sure about that. Can you link the spec source?\r\n\r\nThe [Span Creation](https://opentelemetry.io/docs/specification/otel/trace/api/#span-creation) section says that Span name is a required parameter. I took this to mean a non-empty name, but that is just my interpretation.",
      "Hi folks, this PR has been idle for a week. What is needed to move this forward?",
      "Could you please fix the tests?",
      "Apologies for the delay -- I believe the tests should be fixed now.\r\n\r\nNote that i had to re-add a conditional to use the name of the url matcher, because [it was removed](https://github.com/open-telemetry/opentelemetry-python-contrib/commit/743ac64661897087f2dca7f696e481648eb4d0fe#diff-823ff1f241281c88315d2c8eefa856632c936364e0a8e0ad071455598a41a754) in #1759.\r\n"
    ],
    "commit_messages": [
      "fix(django): avoid empty span name on empty path (#1788)\n\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>\r\nCo-authored-by: Shalev Roda <65566801+shalevr@users.noreply.github.com>\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211522ac254a19ac290b05",
    "number": 1786,
    "body": "# Description\r\n\r\nThis PR adds instrumentation for the `consume` method. The implementation follows the [Batch receiving](https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/semantic_conventions/messaging.md#batch-receiving) semantic convention for the recv span and the [Batch processing](https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/semantic_conventions/messaging.md#batch-processing) convention for the process span.\r\n\r\nThe PR also fixes an error in the `_enrich_span` function that causes missing information in the span when `partition` and/or `offset` are 0.\r\n\r\nOpen points:\r\n- Different messages from the same batch can belong to different topics. I didn't find in the specification how to handle this situation, at the moment the span contains the topic of the first message of the batch.\r\n\r\nFixes #1747 \r\n\r\n## Type of change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n- [x] Added two unit test for `poll` and `consume` methods.\r\n- [x] Tested using an instrumented producer and consumer. The producer produces 2 messages that are consumed by the consumer using `consume(2, 10)`. Spans below.\r\n\r\n<details>\r\n<summary>Producer spans</summary>\r\n\r\n```json\r\n\r\n{\r\n    \"name\": \"mytopic2 send\",\r\n    \"context\": {\r\n        \"trace_id\": \"0x3e9b083fa1954077e37ec7f649b6f27a\",\r\n        \"span_id\": \"0x81739e2c3b2583fe\",\r\n        \"trace_state\": \"[]\"\r\n    },\r\n    \"kind\": \"SpanKind.PRODUCER\",\r\n    \"parent_id\": null,\r\n    \"start_time\": \"2023-05-06T13:24:39.999227Z\",\r\n    \"end_time\": \"2023-05-06T13:24:39.999304Z\",\r\n    \"status\": {\r\n        \"status_code\": \"UNSET\"\r\n    },\r\n    \"attributes\": {\r\n        \"messaging.system\": \"kafka\",\r\n        \"messaging.destination\": \"unknown\",\r\n        \"messaging.destination_kind\": \"queue\",\r\n        \"messaging.operation\": \"receive\"\r\n    },\r\n    \"events\": [],\r\n    \"links\": [],\r\n    \"resource\": {\r\n        \"attributes\": {\r\n            \"telemetry.sdk.language\": \"python\",\r\n            \"telemetry.sdk.name\": \"opentelemetry\",\r\n            \"telemetry.sdk.version\": \"1.17.0\",\r\n            \"service.name\": \"your-service-name\",\r\n            \"telemetry.auto.version\": \"0.38b0\"\r\n        },\r\n        \"schema_url\": \"\"\r\n    }\r\n}\r\n{\r\n    \"name\": \"mytopic2 send\",\r\n    \"context\": {\r\n        \"trace_id\": \"0xfe5c19c72ab7dc30097833b71c43113d\",\r\n        \"span_id\": \"0x00c812c216911968\",\r\n        \"trace_state\": \"[]\"\r\n    },\r\n    \"kind\": \"SpanKind.PRODUCER\",\r\n    \"parent_id\": null,\r\n    \"start_time\": \"2023-05-06T13:24:39.999355Z\",\r\n    \"end_time\": \"2023-05-06T13:24:39.999389Z\",\r\n    \"status\": {\r\n        \"status_code\": \"UNSET\"\r\n    },\r\n    \"attributes\": {\r\n        \"messaging.system\": \"kafka\",\r\n        \"messaging.destination\": \"unknown\",\r\n        \"messaging.destination_kind\": \"queue\",\r\n        \"messaging.operation\": \"receive\"\r\n    },\r\n    \"events\": [],\r\n    \"links\": [],\r\n    \"resource\": {\r\n        \"attributes\": {\r\n            \"telemetry.sdk.language\": \"python\",\r\n            \"telemetry.sdk.name\": \"opentelemetry\",\r\n            \"telemetry.sdk.version\": \"1.17.0\",\r\n            \"service.name\": \"your-service-name\",\r\n            \"telemetry.auto.version\": \"0.38b0\"\r\n        },\r\n        \"schema_url\": \"\"\r\n    }\r\n}\r\n```\r\n</details>\r\n\r\n<details>\r\n<summary>Consumer recv span</summary>\r\n\r\n```json\r\n\r\n{\r\n    \"name\": \"recv\",\r\n    \"context\": {\r\n        \"trace_id\": \"0x0eee8b09804220c88cb48335fa508ab2\",\r\n        \"span_id\": \"0xd07a3927850916a5\",\r\n        \"trace_state\": \"[]\"\r\n    },\r\n    \"kind\": \"SpanKind.CONSUMER\",\r\n    \"parent_id\": null,\r\n    \"start_time\": \"2023-05-06T13:24:52.497510Z\",\r\n    \"end_time\": \"2023-05-06T13:24:52.497651Z\",\r\n    \"status\": {\r\n        \"status_code\": \"UNSET\"\r\n    },\r\n    \"attributes\": {},\r\n    \"events\": [],\r\n    \"links\": [],\r\n    \"resource\": {\r\n        \"attributes\": {\r\n            \"telemetry.sdk.language\": \"python\",\r\n            \"telemetry.sdk.name\": \"opentelemetry\",\r\n            \"telemetry.sdk.version\": \"1.17.0\",\r\n            \"service.name\": \"your-service-name\",\r\n            \"telemetry.auto.version\": \"0.38b0\"\r\n        },\r\n        \"schema_url\": \"\"\r\n    }\r\n}\r\n```\r\n</details>\r\n<details>\r\n<summary>Consumer process span</summary>\r\n\r\n```json\r\n\r\n{\r\n    \"name\": \"mytopic2 process\",\r\n    \"context\": {\r\n        \"trace_id\": \"0x0eee8b09804220c88cb48335fa508ab2\",\r\n        \"span_id\": \"0xd2acdb703b29c1fc\",\r\n        \"trace_state\": \"[]\"\r\n    },\r\n    \"kind\": \"SpanKind.CONSUMER\",\r\n    \"parent_id\": \"0xd07a3927850916a5\",\r\n    \"start_time\": \"2023-05-06T13:24:52.497627Z\",\r\n    \"end_time\": \"2023-05-06T13:24:52.497694Z\",\r\n    \"status\": {\r\n        \"status_code\": \"UNSET\"\r\n    },\r\n    \"attributes\": {\r\n        \"messaging.system\": \"kafka\",\r\n        \"messaging.destination\": \"mytopic2\",\r\n        \"messaging.destination_kind\": \"queue\",\r\n        \"messaging.operation\": \"process\"\r\n    },\r\n    \"events\": [],\r\n    \"links\": [\r\n        {\r\n            \"context\": {\r\n                \"trace_id\": \"0x3e9b083fa1954077e37ec7f649b6f27a\",\r\n                \"span_id\": \"0x81739e2c3b2583fe\",\r\n                \"trace_state\": \"[]\"\r\n            },\r\n            \"attributes\": {}\r\n        },\r\n        {\r\n            \"context\": {\r\n                \"trace_id\": \"0xfe5c19c72ab7dc30097833b71c43113d\",\r\n                \"span_id\": \"0x00c812c216911968\",\r\n                \"trace_state\": \"[]\"\r\n            },\r\n            \"attributes\": {}\r\n        }\r\n    ],\r\n    \"resource\": {\r\n        \"attributes\": {\r\n            \"telemetry.sdk.language\": \"python\",\r\n            \"telemetry.sdk.name\": \"opentelemetry\",\r\n            \"telemetry.sdk.version\": \"1.17.0\",\r\n            \"service.name\": \"your-service-name\",\r\n            \"telemetry.auto.version\": \"0.38b0\"\r\n        },\r\n        \"schema_url\": \"\"\r\n    }\r\n}\r\n```\r\n</details>\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "issue-1747",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: javferrod / name: Javier Fernández Rodríguez  (edb9ccc46a3d097c823839ef16c140943dd53a04, f6e5f9826e697662a520373304d9245af8c82e03, 9f4b4eeaa9e7ceddeebd3fcedad84dab53e981ea, fbfc055cf2d17ad7981f1fe62e137e741b40f5b1, f042deaf340762a837829f29619536329864613a, 7e25294ff88d8698b674c2d9384b79c00e63c874, 2d11cb4bda3daa3cef46e315cce660b6a9d12b65, 3a31f6b20a323571b0426824dac84a0d3f234473, 49b65c53a04a0672a79a2b027dd2503674e25b50, b0d3ac18a58ecbaa00c08c66dd05def1f01bf16d, e31e21c841ddd5cd86ddaecd5b52a7b05780a8e9, b7d08dc19a37e7c644264d5e38b2c5529cea50ac, 7a865558b4f29ee642f0a454e91d4d2b60c81038, 4c9cce68be31f12d59992013ab84f631e893c896, ac9ec26c57a83b4099daaad334aa0423eb0e0394, 8a1cf9848e857a1084f351a53f945f55ea1cd4ed, a5527783db3fc982f8a743788d8d37fdaaa3b033, 8a7654056b44968c74fb8444c4bb8079142a5cde, 1815057cd3681ef6356db873fe93e182025c574c, 51167dd617a1c4f2876c629e19e23f9b2b015ca9, 296be7fa47348ecf378af6edbd2ca7abe81a42eb)</li><li>:white_check_mark: login: ocelotl / name: Diego Hurtado  (2138a8ffa891ae87f33e1a4fbf846144e3c8f5ed, 8959aae887e2cd7f90aaf6e5abe83424117c9478, 6ce77cf6ec0df238fb9a3594b317aad4d51cf8da, e275ec21bb826ae7edb44aa96791a8761d42ee6d)</li></ul>",
      "Hi @pmcollins and @srikanthccv, could you review the changes again? I think the PR is almost ready 😄 "
    ],
    "commit_messages": [
      "feat(confluent-kafka): Add instrumentation to consume method (#1786)\n\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211522ac254a19ac290b06",
    "number": 1785,
    "body": "# Description\r\n\r\nThis PR adds a `None` type checking to the `instrumentation-aws-lambda` logic. By checking attributes like `User-Agent` which can be `None`, this PR prevents adding `None` value attributes to the current `span`.\r\n\r\nAs mentioned in the issue page, this will prevent these errors (Especially for Lambda functions behind the Application Load Balancer):\r\n\r\n```bash\r\n[WARNING]\t2023-05-02T23:36:45.395Z\tec784472-c5bb-4f74-867d-e45d39e0fcca\tInvalid type NoneType for attribute 'http.user_agent' value. Expected one of ['bool', 'str', 'bytes', 'int', 'float'] or a sequence of those types\r\n```\r\n\r\nFixes #1780 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] `tox -e py3{8,9,10,11}-test-instrumentation-aws-lambda`\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "feature",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: imanshafiei540 / name: Iman Shafiei  (98088735f2fe5041d14222854fcdc5be2fd331d7, eea010b33d397fdc542601042908a80f07914213, e421d4536c4d960e0c9ec4272fe6f4ccbed0def4, fd3b9f90c2e1d8c0fb5587820bed1588687f6576, 1f65e7d0beadad04c86d1bb2d54090747087aec4, 47921eb21b42e34837f46cb5c7250443ab13b139, 21acca830c07a3e28fbb4cdb889d72390a0aa102, 5add449f3fa91ecd5b4dd021ea27d955db56c901)</li><li>:white_check_mark: login: srikanthccv / name: Srikanth Chekuri  (4e781f8dd32a3e3042ffdb3aa95d680f9f32c9ff)</li><li>:white_check_mark: login: shalevr / name: Shalev Roda  (d5989f5c031a1b0b40ab5b9c8cc5502e270b749e, 2be327c241da97814fb7a70e2486adc2cbefc6e2, d6b953a6f0feacfe586b663b52755fd04438be53)</li></ul>"
    ],
    "commit_messages": [
      "Fix Invalid type NoneType for attribute X error | AWS-Lambda instrumentation (#1785)\n\n* Add None checking to the aws-lambda logic\r\n\r\n* Update changelog.\r\n\r\n* Change .get() check to 'key' in dict check.\r\n\r\n* Fix consistency issues.\r\n\r\n* Update changelog.\r\n\r\n---------\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>\r\nCo-authored-by: Shalev Roda <65566801+shalevr@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211523ac254a19ac290b07",
    "number": 1784,
    "body": "# Description\r\n\r\nThis adds [HTTP server request attributes](https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/semantic_conventions/http.md#http-server-semantic-conventions) to the Flask instrumentation library's start_span call, making them available to otel sampler's should_sample method. A very basic example:\r\n\r\n```\r\nclass MySampler(Sampler):\r\n    def should_sample(\r\n        self,\r\n        parent_context: Optional[OtelContext],\r\n        trace_id: int,\r\n        name: str,\r\n        kind: SpanKind = None,\r\n        attributes: Attributes = None,\r\n        links: Sequence[\"Link\"] = None,\r\n        trace_state: \"TraceState\" = None,\r\n    ) -> \"SamplingResult\":\r\n        logger.debug(\"attributes: %s\", attributes)\r\n```\r\n\r\nBefore this change, `attributes` is None. After this change, `attributes` for an instrumented Flask app would be:\r\n\r\n`{'http.method': 'GET', 'http.server_name': '0.0.0.0', 'http.scheme': 'http', 'net.host.port': 8010, 'http.host': '0.0.0.0:8010', 'http.target': '/auto/', 'net.peer.ip': '192.168.144.1', 'http.user_agent': 'curl/7.87.0', 'net.peer.port': 35618, 'http.flavor': '1.1', 'http.route': '/auto/'}`\r\n\r\nFixes [#1779](https://github.com/open-telemetry/opentelemetry-python-contrib/issues/1779)\r\n\r\n## Type of change\r\n\r\n- [X] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nI have a custom distro that configures the attribute-logging sampler code in the above Description. On my local I run a Flask app with `opentelemetry-instrument` after local install of `opentelemetry-instrumentation-flask==0.39b0.dev` and its dependencies. Then I curl the app's `/auto/` route to see stdout logs of the attributes.\r\n\r\nThe final span attributes are the same before and after the code update. This changes the timing of attribute assignment, so the `expected_attributes` checks in `opentelemetry-instrumentation-flask/tests/test_programmatic.py` still pass.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "flask-attributes-available-in-sampler",
    "is_a_fork": true,
    "comments": [
      "There are some `botocore` instrumentation tests failing with KeyError, which I attempted to patch in [fd03c55](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1784/commits/fd03c55a3902b3456afd6a2ecf429afba11b0691) and [9530cd2](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1784/commits/9530cd250dd836b3181a9361decb130e2aae1202) with no luck. I don't think these are related to the `flask` instrumentation changes; here is one failure:\r\n\r\n```\r\n=================================== FAILURES ===================================\r\n________________ TestBotocoreInstrumentor.test_sqs_send_message ________________\r\n\r\nself = <tests.test_botocore_instrumentation.TestBotocoreInstrumentor testMethod=test_sqs_send_message>\r\n\r\n    @mock_sqs\r\n    def test_sqs_send_message(self):\r\n        sqs = self._make_client(\"sqs\")\r\n        test_queue_name = \"test_queue_name\"\r\n    \r\n        response = sqs.create_queue(QueueName=test_queue_name)\r\n        self.assert_span(\r\n            \"SQS\", \"CreateQueue\", request_id=_REQUEST_ID_REGEX_MATCH\r\n        )\r\n        self.memory_exporter.clear()\r\n    \r\n>       queue_url = response[\"QueueUrl\"]\r\nE       KeyError: 'QueueUrl'\r\n\r\ntest_botocore_instrumentation.py:199: KeyError\r\n```",
      "Hi @shalevr , @srikanthccv , @ocelotl : Are any other changes recommended for this PR? If not, is it ready to merge?"
    ],
    "commit_messages": [
      "Request Flask attributes passed to Sampler (#1784)\n\n* Request Flask attributes passed to Sampler\r\n\r\n* Update changelog\r\n\r\n* Lint\r\n\r\n* Fix botocore test keyerror\r\n\r\n* Revert \"Fix botocore test keyerror\"\r\n\r\nThis reverts commit fd03c55a3902b3456afd6a2ecf429afba11b0691.\r\n\r\n* botocore test does get_queue_url\r\n\r\n* Revert \"botocore test does get_queue_url\"\r\n\r\nThis reverts commit 9530cd250dd836b3181a9361decb130e2aae1202.\r\n\r\n* Update changelog\r\n\r\n---------\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>\r\nCo-authored-by: Shalev Roda <65566801+shalevr@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211524ac254a19ac290b08",
    "number": 1778,
    "body": "Expand sqlalchemy pool.name to follow the semantic conventions\r\n\r\nFixes #1777 \r\n\r\n## Type of change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] tox -e test-instrumentation-sqlalchemy14\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n",
    "head_branch": "Expand-sqlalchemy-pool-name",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Expand sqlalchemy pool.name to follow the semantic conventions (#1778)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211525ac254a19ac290b09",
    "number": 1776,
    "body": "# Description\r\n\r\nDefault sanitize query for DB_STATEMENT attribute, according to https://github.com/open-telemetry/opentelemetry-specification/pull/3127\r\nFixes #1755 for redis\r\n\r\n## Type of change\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [X] tox -e test-instrumentation-redis\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [X] Unit tests have been updated\r\n- [X] Documentation has been updated\r\n",
    "head_branch": "fix/redis/db-statement",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Sanitize redis db_statement by default (#1776)\n\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>\r\nCo-authored-by: Shalev Roda <65566801+shalevr@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211526ac254a19ac290b0a",
    "number": 1773,
    "body": "# Description\r\n\r\nAdd otelTraceSampled field to LogEntry for OLTP Logging Instrumentation module\r\n\r\nFixes #1765 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nTox tests. \r\n\r\n- [x] py37-test-instrumentation-logging\r\n- [x] py38-test-instrumentation-logging\r\n- [x] py39-test-instrumentation-logging\r\n- [x] py310-test-instrumentation-logging\r\n- [x] py311-test-instrumentation-logging\r\n- [x] pypy3-test-instrumentation-logging\r\n\r\n```\r\n================================================== 8 passed, 1 warning in 0.47s ==================================================\r\n____________________________________________________________ summary _____________________________________________________________\r\n  py37-test-instrumentation-logging: commands succeeded\r\n  py38-test-instrumentation-logging: commands succeeded\r\n  py39-test-instrumentation-logging: commands succeeded\r\n  py310-test-instrumentation-logging: commands succeeded\r\n  py311-test-instrumentation-logging: commands succeeded\r\n  pypy3-test-instrumentation-logging: commands succeeded\r\n  congratulations :)\r\n  ```\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n\r\n```\r\n# From the root directory\r\npython -m black --config pyproject.toml instrumentation/opentelemetry-instrumentation-logging\r\npython -m isort --settings-path ./.isort.cfg --profile black instrumentation/opentelemetry-instrumentation-logging\r\npython scripts/check_for_valid_readme.py instrumentation/opentelemetry-instrumentation-logging/\r\n```\r\n",
    "head_branch": "feature/1765-add-otelTraceSampled-logging",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: bitnahian / name: Nahian-Al Hasan  (4fe0f2b9d150a03447c0f8874e050cd175a3042c, 0fa941ea6fdfb37ba91b7886b9b845774e29dd0b)</li></ul>",
      "Please add a changelog entry",
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: bitnahian / name: Nahian-Al Hasan  (4fe0f2b9d150a03447c0f8874e050cd175a3042c, 0fa941ea6fdfb37ba91b7886b9b845774e29dd0b, 938d6b144be3db6210132b5a38a89257a54fc737)</li><li>:white_check_mark: login: srikanthccv / name: Srikanth Chekuri  (0dadd9fc1f237b14cf3a5d4a58f0b6fe6783e208, 979ed59227fabcff84582240befa58f39439e3df, bc59bc563f3db3a202e2c3e3fc40783168b65450)</li></ul>",
      "Changelog entry has been added."
    ],
    "commit_messages": [
      "Add otelTraceSampled to instrumetation-logging (#1773)\n\n* Add otelTraceSampled to instrumetation-logging\r\n\r\n* Updated code with black\r\n\r\n* Added to CHANGELOG.md\r\n\r\n---------\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211527ac254a19ac290b0b",
    "number": 1772,
    "body": "Fixes #1770\r\n\r\nThe underlying cause of the issue here is the update of the yarl package\r\nfrom 1.8.2 to 1.9.1. yarl is used as a dependency in the\r\nopentelemetry-instrumentation-aiohttp package but it is not there where\r\nthe issue happens, but in aiohttp who also has yarl as a dependency.\r\n\r\nThis is why the fix does not touch any relevant part of any\r\nopentelemetry-* code, since it is the return value of aiohttp code who\r\nnow has a different value for the URL.",
    "head_branch": "issue_1770",
    "is_a_fork": true,
    "comments": [
      "Can you add a description of why the test broke and how this fixes it?",
      "> Can you add a description of why the test broke and how this fixes it?\r\n\r\nThere is already a description in the latest commit, adding it in the PR as well :v:"
    ],
    "commit_messages": [
      "Fix expected URL in aiohttp instrumentation test (#1772)\n\n* WIP\r\n\r\n* Revert \"WIP\"\r\n\r\nThis reverts commit 3ed466348e4c172fd96569a0dcb1b15047760cef.\r\n\r\n* Fix expected URL in aiohttp instrumentation test\r\n\r\nThe underlying cause of the issue here is the update of the yarl package\r\nfrom 1.8.2 to 1.9.1. yarl is used as a dependency in the\r\nopentelemetry-instrumentation-aiohttp package but it is not there where\r\nthe issue happens, but in aiohttp who also has yarl as a dependency.\r\n\r\nThis is why the fix does not touch any relevant part of any\r\nopentelemetry-* code, since it is the return value of aiohttp code who\r\nnow has a different value for the URL.\r\n\r\nFixes #1770"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211528ac254a19ac290b0c",
    "number": 1771,
    "body": "# Description\r\n\r\nBy using a weak reference to the `Engine` object, we can avoid the memory leak as disposed `Engines` get properly deallocated. Whenever `SQLAlchemy` is uninstrumented, we only trigger a removal of those event listeners which are listening for objects that haven't been garbage-collected yet.\r\n\r\nFixes #1761\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [X] Added unit test to reproduce the bug and verify that `EngineTracer` does not keep references to dead `Engine` objects\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [X] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n- [X] ~~Documentation has been updated~~\r\n",
    "head_branch": "fix/memory-leak-event-listener",
    "is_a_fork": true,
    "comments": [
      "I am still thinking of an appropriate unit test for this PR. Maybe something that includes a finalizer could do the job but I have to test this works as expected pre and post PR. In terms of pseudo-code, it could look like\r\n\r\n```\r\ncallback = mock.Mock()\r\n\r\ndef leak_memory():\r\n    engine = create_engine(\"sqlite:///:memory:\")\r\n    weakref.finalize(engine, callback)\r\n    with engine.begin() as conn:\r\n        conn.execute(\"SELECT 1\")\r\n    engine.dispose()\r\n\r\nfor _ in range(0, 10):\r\n    leak_memory()\r\n\r\ngc.collect()\r\nassert callback.call_count == 10\r\n```\r\n\r\nIf there are any other ideas, I am all ears.",
      "Once I added a unit test, I noticed another source for the memory leak, i.e. `self.engine = engine`in `EngineTracer` instantiation. Therefore I did some minor refactoring to only keep the necessary attribute(s) used for span creation.",
      "Oversight on my side. Somehow managed to exclude the SQLAlchemy metrics tests in my local environment and thought the failing CI was only due to aiohttp. 🤦 Sorry, should be good now.",
      "I updated the PR since [another PR](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1778#issue-1693632764) made changes to the same parts of code. It seems to me that failing checks seem to be flakes.",
      "@shalevr, could you please look into this PR?",
      "BTW the tests that fail are not related to your change, They will be fixed soon",
      "@shalevr @rbagd Is this PR good to go and slated for release soon?\r\n\r\nThanks!",
      "Hi, I have the same question as above: is there an expected timeline for merging and releasing this PR? "
    ],
    "commit_messages": [
      "Use a weak reference to sqlalchemy Engine to avoid memory leak (#1771)\n\n* Use a weak reference to sqlalchemy Engine to avoid memory leak\r\n\r\nCloses #1761\r\n\r\nBy using a weak reference to the `Engine` object, we can avoid the memory leak as disposed `Engines` get properly deallocated. Whenever `SQLAlchemy` is uninstrumented, we only trigger a removal for those event listeners which are listening for objects that haven't been garbage-collected yet.\r\n\r\n* Made a mistake in resolving the weak reference\r\n\r\n* Fixed formatting issues\r\n\r\n* Updated changelog\r\n\r\n* Added unit test to check that engine was garbage collected\r\n\r\n* Do not save engine in EngineTracer to avoid memory leak\r\n\r\n* Add an empty line to satisfy black formatter\r\n\r\n* Fix isort complaints\r\n\r\n* Fixed the issue when pool name is not set and =None\r\n\r\n* Fix formatting issue\r\n\r\n* Rebased after changes in a recent commit\r\n\r\n* Updated PR number in changelog\r\n\r\n---------\r\n\r\nCo-authored-by: Shalev Roda <65566801+shalevr@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211529ac254a19ac290b0d",
    "number": 1766,
    "body": "# Description\r\n\r\nWhen no middlewares are registered falcon-instrumentation will throw following exception:\r\n`TypeError: None does not implement the middleware interface`\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nWe are running a [Hug](http://hugapi.github.io/hug/) framework that built on top of Falcon.\r\nIts enough to build a basic api without middlewares and instrument it with falcon instrumentation to encounter this error.\r\nApplication will exit immediately without this fix. As a workaround any middleware can be registered.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated",
    "head_branch": "falcon_none_does_not_implement_middleware",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: Nek0trkstr / name: Michael  (90a8f9c3168d631310e82a4532897e360e623d76, 5e120c788f0b1e672b95e7a6a16426c2fcb5d263)</li></ul>"
    ],
    "commit_messages": [
      "fix: None does not implement middleware when there are no middlewares (#1766)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621152aac254a19ac290b0e",
    "number": 1764,
    "body": "# Description\r\n\r\nAdds support for pymemcache versions >4.0.0,<5.0.0\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [X] All current tests pass\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n",
    "head_branch": "pymemcache400-support",
    "is_a_fork": true,
    "comments": [
      "@shalevr, would you like me to rebase, seems like the tests are now failing with some aiohttp instrumentation errors. Please let me know If I I need to do anything. \r\n\r\nThanks",
      "> @shalevr, would you like me to rebase, seems like the tests are now failing with some aiohttp instrumentation errors. Please let me know If I I need to do anything.\r\n> \r\n> Thanks\r\n\r\nHi, it will be fixed in this PR #1772 , so there is no need to rebase"
    ],
    "commit_messages": [
      "Add support for pymemcache version > 4.0.0 (#1764)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621152bac254a19ac290b0f",
    "number": 1763,
    "body": "# Description\r\n\r\nWhen no middlewares are registered falcon-instrumentation will throw following exception:\r\n`TypeError: None does not implement the middleware interface`\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nWe are running a [Hug](http://hugapi.github.io/hug/) framework that built on top of Falcon.\r\nIts enough to build a basic api without middlewares and instrument it with falcon instrumentation to encounter this error.\r\nApplication will exit immediately without this fix. As a workaround any middleware can be registered.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "falcon_fix_none_does_not_implement_middleware",
    "is_a_fork": true,
    "comments": [
      " <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/220524743/1763/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-not-signed.svg\" alt=\"CLA Not Signed\" align=\"left\" height=\"28\" width=\"328\"></a><br/><br /><ul><li><a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/220524743/1763/#/?version=2' target='_blank'>:x:</a> - login: @mshebeko-twist . The commit (17272a1ea9ab31d29decad7e432b03b2429c3774) is not authorized under a signed CLA. <a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/220524743/1763/#/?version=2' target='_blank'>Please click here to be authorized</a>. For further assistance with EasyCLA, <a href='https://jira.linuxfoundation.org/servicedesk/customer/portal/4' target='_blank'>please submit a support request ticket</a>.</li></ul>",
      "Please add a changelog entry that describes the fix",
      "Closing in favor of #1766 "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621152bac254a19ac290b10",
    "number": 1762,
    "body": "# Description\r\n\r\nThis adds [HTTP server request attributes](https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/semantic_conventions/http.md#http-server-semantic-conventions) to the ASGI instrumentation library's start_span call, making them available to otel sampler's should_sample method. A very basic example:\r\n\r\n```\r\nclass MySampler(Sampler):\r\n    def should_sample(\r\n        self,\r\n        parent_context: Optional[OtelContext],\r\n        trace_id: int,\r\n        name: str,\r\n        kind: SpanKind = None,\r\n        attributes: Attributes = None,\r\n        links: Sequence[\"Link\"] = None,\r\n        trace_state: \"TraceState\" = None,\r\n    ) -> \"SamplingResult\":\r\n        logger.debug(\"attributes: %s\", attributes)\r\n```\r\n\r\nBefore this change, `attributes` is None. After this change, `attributes` for an instrumented ASGI app would be:\r\n\r\n```\r\n{'http.scheme': 'http', 'http.host': '172.22.0.2:8005', 'net.host.port': 8005, 'http.flavor': '1.1', 'http.target': '/healthcheck', 'http.url': 'http://172.22.0.2:8005/healthcheck', 'http.method': 'GET', 'http.server_name': '0.0.0.0:8005', 'http.user_agent': 'curl/7.87.0', 'net.peer.ip': '172.22.0.1', 'net.peer.port': 55278, 'http.route': '/healthcheck'}\r\n```\r\n\r\nFixes [#1752](https://github.com/open-telemetry/opentelemetry-python-contrib/issues/1752)\r\n\r\n## Type of change\r\n\r\n- [X] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nI have a custom distro that configures the attribute-logging sampler code in the above Description. On my local I run a FastAPI app with `opentelemetry-instrument` after local install of `opentelemetry-instrumentation-asgi==0.39b0.dev` and its dependencies. Then I `curl` the app's `/healthcheck` route to see stdout logs of the attributes.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "asgi-attributes-available-in-sampler",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: tammy-baylis-swi / name: Tammy Baylis  (d17ca4c38a450229b755c478821a567e0f98e05b, 31298d196f2788180b19b03048623302302f3f9b)</li></ul>",
      "Could you update the tests? The attributes are changed so the expected attributes in tests should be updated too",
      "> Could you update the tests? The attributes are changed so the expected attributes in tests should be updated too\r\n\r\nHi @shalevr, the final span attributes are the same before and after the code update. The tests in `test_asgi_custom_headers.py` and `test_asgi_middleware.py` check the attributes by using [get_finished_spans](https://github.com/open-telemetry/opentelemetry-python/blob/main/tests/opentelemetry-test-utils/src/opentelemetry/test/test_base.py#L68) from the TestBase's InMemorySpanExporter, and the tests pass. The code update changes the timing of attribute assignment.",
      "I've added [7d91b86](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1762/commits/7d91b86e7d2b9425119e670d647bf535def8ae8c) to fix a failed test in the `aiohttp-client` instrumentation library:\r\n\r\n```\r\ntest_aiohttp_client_integration.py:118: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\t\ttest_aiohttp_client_integration.py:63: in assert_spans \r\n self.assertEqual( \r\nE AssertionError: Lists differ: [('HT[93 chars]45305/test-path#foobar', 'http.status_code': 200})] != [('HT[93 chars]45305/test-path?query=param#foobar', 'http.status_code': 200})] \r\nE \r\nE First differing element 0: \r\nE ('HTT[91 chars]:45305/test-path#foobar', 'http.status_code': 200}) \r\nE ('HTT[91 chars]:45305/test-path?query=param#foobar', 'http.status_code': 200}) \r\nE \r\nE [('HTTP GET', \r\nE (<StatusCode.UNSET: 0>, None), \r\nE {'http.method': 'GET', \r\nE 'http.status_code': 200, \r\nE - 'http.url': ' http://127.0.0.1:45305/test-path#foobar'})] \r\nE + 'http.url': ' http://127.0.0.1:45305/test-path?query=param#foobar'})] \r\nE ? ++++++++++++\r\n```\r\n\r\nThis seems to have fixed the `instrumentation` tests for py37,8,9,10 and pypy3 on Ubuntu 20.04, while the py311 test last failed with a connection timeout. Is this a known and/or transient issue?:\r\n\r\n```\r\npy311-test-opentelemetry-instrumentation run-test-pre: commands[3] | pip install 'opentelemetry-sdk[test] @ git+https://github.com/open-telemetry/opentelemetry-python.git@2387b4465d930b020df79692a8097e1d54b66ec1#egg=opentelemetry-sdk&subdirectory=opentelemetry-sdk'\r\nCollecting opentelemetry-sdk[test]@ git+https://github.com/open-telemetry/opentelemetry-python.git@2387b4465d930b020df79692a8097e1d54b66ec1#egg=opentelemetry-sdk&subdirectory=opentelemetry-sdk\r\n  Cloning https://github.com/open-telemetry/opentelemetry-python.git (to revision 2387b4465d930b020df79692a8097e1d54b66ec1) to /tmp/pip-install-0tijk4_h/opentelemetry-sdk_d056d10a8af0445582060f9b44fffedd\r\n  Running command git clone --filter=blob:none --quiet https://github.com/open-telemetry/opentelemetry-python.git /tmp/pip-install-0tijk4_h/opentelemetry-sdk_d056d10a8af0445582060f9b44fffedd\r\n  fatal: unable to access 'https://github.com/open-telemetry/opentelemetry-python.git/': Failed to connect to github.com port 443: Connection timed out\r\n  fatal: could not fetch f5236d7c1bc1a9b9598b62fd4d4079e39b695540 from promisor remote\r\n  warning: Clone succeeded, but checkout failed.\r\n\r\n  ERROR: py311-test-opentelemetry-instrumentation: commands failed\r\n```",
      "@srikanthccv @shalevr any chance we can get this merged in soon?"
    ],
    "commit_messages": [
      "Request ASGI attributes passed to Sampler (#1762)\n\n* Request ASGI attributes passed to Sampler\r\n\r\n* Update changelog\r\n\r\n* aiohttp-client test http.url\r\n\r\n---------\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>\r\nCo-authored-by: Shalev Roda <65566801+shalevr@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621152cac254a19ac290b11",
    "number": 1759,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes #1757\r\n\r\n**Scope**\r\n\r\nSERVERS\r\n- [x] asgi ([e67218a](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1759/commits/e67218af809f071350009ac4195a18480f9b44e9), [e94660a](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1759/commits/e94660ac80ac4bdf530c8f19d691ca2858dfdddc), [2c056d9](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1759/commits/2c056d94b1613ae392693af592f945608fe570c0))\r\n- [x] django ([5581bd5](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1759/commits/5581bd56072f8aa1559d94bd5f5dc053adadbb7c), [370c656](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1759/commits/370c6561076a208960db30967e76cadbc056face), [2d4abcd](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1759/commits/2d4abcdfb78b7a495f8a89c1a1787aedc701373f))\r\n- [x] falcon ([ef94b36](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1759/commits/ef94b36707b33d8f7f06284931299daeff989b91))\r\n- [x] flask ([ef94b36](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1759/commits/ef94b36707b33d8f7f06284931299daeff989b91))\r\n- [x] fastapi ([51e950c](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1759/commits/51e950cf42e4b9e63bcfb755b0964dee4434800e))\r\n- [x] pyramid ([ef94b36](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1759/commits/ef94b36707b33d8f7f06284931299daeff989b91))\r\n- [x] starlette ([c408058](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1759/commits/c408058a1314adfabec1c1454f772a8ab49a9566), [adb73a7](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1759/commits/adb73a7e1936e6191da3c9daae1fc2c8c4dd01a2))\r\n- [x] tornado ([a749e77](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1759/commits/a749e77a10a2cf8172977f4342afc04a6a630ae8), [2c056d9](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1759/commits/2c056d94b1613ae392693af592f945608fe570c0))\r\n- [x] wsgi ([22422e8](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1759/commits/22422e8b4ad1ac26fe158af7e080bf2915f95dfe), [e94660a](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1759/commits/e94660ac80ac4bdf530c8f19d691ca2858dfdddc), [2c056d9](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1759/commits/2c056d94b1613ae392693af592f945608fe570c0))\r\n\r\nCLIENTS\r\n- [x] aiohttp ([d0b37c4](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1759/commits/d0b37c459d502c384b1adec3868d9c372f1fe809))\r\n- [x] httpx ([836c2c7](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1759/commits/836c2c728a6ff85f230a4a1bd0fef2c777d3daeb))\r\n- [x] requests ([1ea0970](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1759/commits/1ea09706f92c84fb504132141ac75c921dd6f6a5))\r\n- [x] urllib ([a0159a8](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1759/commits/a0159a886faf79e2166d0f90ab2e317bf396f570))\r\n- [x] urllib3 ([a88b5a0](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1759/commits/a88b5a0ef7ca58660ccb97a4e37f06dbd4d30f3c))\r\n\r\n## Type of change\r\n\r\n- Bug fix (non-breaking change which fixes an issue)\r\n\r\n**POTENTIAL BREAKING CHANGE** \r\nSpecification change may be painful for projects that have alerting and analytics based on span names. The biggest impact would be for Tornado users then Django users, because span name was based on handler/function/view name. Proper warning should be included in release description.\r\n\r\n# How Has This Been Tested?\r\n\r\nI run `tox`.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "issue-1757",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: macieyng / name: Maciej Nachtygal  (e67218af809f071350009ac4195a18480f9b44e9, 22422e8b4ad1ac26fe158af7e080bf2915f95dfe, e94660ac80ac4bdf530c8f19d691ca2858dfdddc, ef94b36707b33d8f7f06284931299daeff989b91, a749e77a10a2cf8172977f4342afc04a6a630ae8, 2c056d94b1613ae392693af592f945608fe570c0, 51e950cf42e4b9e63bcfb755b0964dee4434800e, 5581bd56072f8aa1559d94bd5f5dc053adadbb7c, d0b37c459d502c384b1adec3868d9c372f1fe809, 836c2c728a6ff85f230a4a1bd0fef2c777d3daeb, 1ea09706f92c84fb504132141ac75c921dd6f6a5, a0159a886faf79e2166d0f90ab2e317bf396f570, a88b5a0ef7ca58660ccb97a4e37f06dbd4d30f3c, f7b3c5318b49394027c8f00084065d8e9b926869, 28428ef5d6c6a97b66858e7fd51ead513bb3abd7, 151346120b62d648249ef60cdbfa0cdea27a4f57, 370c6561076a208960db30967e76cadbc056face, 2d4abcdfb78b7a495f8a89c1a1787aedc701373f, c408058a1314adfabec1c1454f772a8ab49a9566, adb73a7e1936e6191da3c9daae1fc2c8c4dd01a2, 1a27e1240b56681a6f837a8ed0091258db6c0fb6, 42b38c12a50409e1e1c1e19f09fdf5b967066009, 7bb2d73c81bd0ac2a6402fe13e6d5df3dc8776ec)</li><li>:white_check_mark: login: shalevr / name: Shalev Roda  (c73f7dea678ab34c9b0c02537ac449e861ff2c77, b413d7897656654a45d9ccf49b562fab4cf58257, 3355b995fe8a97d8c3a34038d0f9660e022b262e, e445641cf73a451843acd6865ac6cdc4ec81feeb, fea749f273e82ef9f2233a7f8ba7b13ae928a1b6)</li><li>:white_check_mark: login: srikanthccv / name: Srikanth Chekuri  (d9e39dad06353ad484943ee252efebf487ce22e3, 253707d08ccacbebb49bc8048bfe442d19fa744f)</li></ul>",
      "Please add a changelog entry that describes the change",
      "You need to run \"tox -e lint\"\r\nor just the Python code formatter \"black --config pyproject.toml .\"",
      "Everything updated! Thanks!\r\n\r\nThere's still an issue with django1 described here https://github.com/open-telemetry/opentelemetry-python-contrib/issues/1757#issuecomment-1515323112. ",
      "I noticed that I skipped starlette. Will take care of it during the weekend.",
      "Some tests are failing, Please check if it is due to your change",
      "> Some tests are failing, Please check if it is due to your change\r\n\r\nYeah, that was the reason. Should be fixed now and sorry for replying so slow recently. ",
      "@shalevr @srikanthccv ready for pipeline run.",
      "@shalevr @srikanthccv any idea why pipeline was cancelled or couldn't go through?",
      "Now it's failing because `remoulade` could not import `pydantic`. Progress 💪 😅 ",
      "@ocelotl @lzchen this PR is ready to be merged 🚀"
    ],
    "commit_messages": [
      "Issue #1757 - Update HTTP server/client instrumentation span names (#1759)\n\nCo-authored-by: Shalev Roda <65566801+shalevr@users.noreply.github.com>\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621152dac254a19ac290b12",
    "number": 1758,
    "body": "# Description\r\n\r\nDefault sanitize query for DB_STATEMENT attribute, according to https://github.com/open-telemetry/opentelemetry-specification/pull/3127\r\nFixes #1755 for elasticsearch\r\n\r\n## Type of change\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [X] tox -e test-instrumentation-elasticsearch{2}\r\n- [X] tox -e test-instrumentation-elasticsearch5\r\n- [X] tox -e test-instrumentation-elasticsearch{6}\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [X] Unit tests have been updated\r\n- [X] Documentation has been updated\r\n",
    "head_branch": "fix/elastic-search/db-statement",
    "is_a_fork": true,
    "comments": [
      "This sanitization implementation does not work for the elasticsearch bulk api, see #1868."
    ],
    "commit_messages": [
      "Sanitize DB_STATEMENT by default for elasticsearch (#1758)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621152eac254a19ac290b13",
    "number": 1748,
    "body": "# Description\r\n\r\nThe tests were failing in httpx > 0.23.1 because of this change in httpx - https://github.com/encode/httpx/pull/2407\r\n\r\nPretty easy workaround illustrated in [the changed tests in that PR](https://github.com/encode/httpx/pull/2407/files#diff-883169411234feeb94cdff4b5399a8a84b13fd72c41e7407f7bf9909b086ebe2R16-R17)\r\n\r\nFixes #1463, #1460 and #1459.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nAutomated tests caught the failure and validated the fix\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "httpx-0.23",
    "is_a_fork": true,
    "comments": [
      "This is the test failure:\r\n\r\n```\r\n=================================== FAILURES ===================================\r\n__ TestStarletteManualInstrumentation.test_basic_post_request_metric_success ___\r\n\r\nself = <tests.test_starlette_instrumentation.TestStarletteManualInstrumentation testMethod=test_basic_post_request_metric_success>\r\n\r\n    def test_basic_post_request_metric_success(self):\r\n        start = default_timer()\r\n        expected_duration_attributes = {\r\n            \"http.flavor\": \"1.1\",\r\n            \"http.host\": \"testserver\",\r\n            \"http.method\": \"POST\",\r\n            \"http.scheme\": \"http\",\r\n            \"http.server_name\": \"testserver\",\r\n            \"http.status_code\": 405,\r\n            \"net.host.port\": 80,\r\n        }\r\n        expected_requests_count_attributes = {\r\n            \"http.flavor\": \"1.1\",\r\n            \"http.host\": \"testserver\",\r\n            \"http.method\": \"POST\",\r\n            \"http.scheme\": \"http\",\r\n            \"http.server_name\": \"testserver\",\r\n        }\r\n        self._client.post(\"/foobar\")\r\n        duration = max(round((default_timer() - start) * 1000), 0)\r\n        metrics_list = self.memory_metrics_reader.get_metrics_data()\r\n        for metric in (\r\n            metrics_list.resource_metrics[0].scope_metrics[0].metrics\r\n        ):\r\n            for point in list(metric.data.data_points):\r\n                if isinstance(point, HistogramDataPoint):\r\n                    self.assertEqual(point.count, 1)\r\n>                   self.assertAlmostEqual(duration, point.sum, delta=30)\r\nE                   AssertionError: 34 != 3 within 30 delta (31 difference)\r\n\r\ntest_starlette_instrumentation.py:175: AssertionError\r\n========================= 1 failed, 49 passed in 2.26s =========================\r\n```\r\n\r\nIt's over in Starlette and maybe this is a flaky one?",
      "@lzchen @jeremydvoss please review this PR 🙏 ",
      "@phillipuniverse can you take a look at the pipeline? ",
      "@phillipuniverse almost there! please resolve the conflicts :+1: we should be able to merge this one soon with a bit of luck.",
      "@ocelotl @macieyng done",
      "The latest test failure looks like a flaky one in aiohttp\r\n\r\n<img width=\"1080\" alt=\"image\" src=\"https://github.com/open-telemetry/opentelemetry-python-contrib/assets/684275/29ff1ebf-d801-4441-97d4-3a9acd0cb8b3\">\r\n",
      "Unfortunately I can't manually re-run the build, @ocelotl can you?",
      "@lzchen @jeremydvoss @ocelotl this has been open for almost 6.5 weeks. What can I do here to reduce the turnaround cycles?",
      "> @lzchen @jeremydvoss @ocelotl this has been open for almost 6.5 weeks. What can I do here to reduce the turnaround cycles?\r\n\r\nSorry! we've been quite low on people who can review, reviewing this right now...",
      "@phillipuniverse I'm trying to understand the consequences before this was merged. Assuming I had httpx==0.24.1 and opentelemetry-instrumentation-httpx==0.38b0 would it mean that my httpx was not instrumented due to that reason?\r\n\r\nBecause right now I don't really see httpx dependencies/traces and I'm not sure if this is the reason or I have something misconfigured. ",
      "@macieyng yes that is probably the reason."
    ],
    "commit_messages": [
      "Relax httpx version to allow >= 0.18.0 (#1748)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621152fac254a19ac290b14",
    "number": 1746,
    "body": "# Description\r\n\r\nOnboards instrumentations to fresh semantic conventions\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Run instrumentation tests\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] Yes. - Link to PR:  https://github.com/open-telemetry/opentelemetry-python/pull/3251\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "update-semconv",
    "is_a_fork": true,
    "comments": [
      "this PR is ready for the review, @opentelemetry-python-contrib-approvers please take a look!",
      "Thanks, @lmolkova, I am trying to debug the failing tests in the core repo.",
      "@ocelotl it seems core tests fail on span name check.\r\n`AssertionError: '\"name\": \"HTTP GET\"' not found in ... \"name\": \"GET\"`\r\n\r\n Span names were changed in #1759, but core tests were not updated to reflect it. ~~I'm not sure what was the reason to remove `HTTP  \" from client span names, LMK what should be fixed - the name or the core tests.~~ It seems the spec has changed - I'll update core tests. Thanks!",
      "> @ocelotl it seems core tests fail on span name check. `AssertionError: '\"name\": \"HTTP GET\"' not found in ... \"name\": \"GET\"`\r\n> \r\n> Span names were changed in #1759, but core tests were not updated to reflect it. I'm not sure what was the reason to remove `HTTP \" from client span names, LMK what should be fixed - the name or the core tests. Thanks!\r\n\r\nRight, I just filed [this](https://github.com/open-telemetry/opentelemetry-python/issues/3367) issue, will take care of it, thanks!",
      "I think @lzchen had some points around the transition plan. Bringing this up in the SIG meeting (again) might be a good idea.",
      "> I think @lzchen had some points around the transition plan. Bringing this up in the SIG meeting (again) might be a good idea.\r\n\r\nAdded to the SIG notes.",
      "Closing this one.\r\n\r\nSchema URL is populated in https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1977, and @lzchen will prototype side-by-side new/old semconv in selected instrumentations"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211530ac254a19ac290b15",
    "number": 1744,
    "body": "# Description\r\n\r\nInstrument the mysqlclient library.\r\nI've mostly copy/pasted the pymysql instrumentation\r\n\r\nFixes #1649 \r\n\r\n## Type of change\r\n\r\n- New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nI've run the test suite for this package on all pythons version listed in `tox.ini`.\r\n\r\nI've installed the library on an existing django project.\r\n\r\nSet up the instrumentation and exported data to an all-in-one jeager installation and that just worked. :)\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "intrument-mysqlclient",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: Fenkiou / name: Alexandre Papin  (746fd310ab50a9eec7f30fb265ceb6dddb309a19)</li><li>:white_check_mark: login: ocelotl / name: Diego Hurtado  (df91aa580d36eb21388f57014034cfaa8ecc94a5, 3df2b6b466615213d02140a22a6e2b52ca44a116, 202c65bee6d977e57c93d64b983e7ec9b4c39108)</li></ul>",
      "Thank you @nemoshlag for the quick review. 🙏 \r\nDo you have an idea about who I should contact in order to make this move forward?",
      "The check_for_valid_readme.py script is failing. Run it locally to fix it",
      "> The check_for_valid_readme.py script is failing. Run it locally to fix it\r\n\r\nShould be good now",
      "Some jobs failed. But they didn't in previous run, only lint job failed. So I guess those are random, HTTP 502 errors for example. Maybe retrying those would be enough."
    ],
    "commit_messages": [
      "Instrument mysqlclient library (#1744)\n\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211531ac254a19ac290b16",
    "number": 1741,
    "body": "Updates for spec change https://github.com/open-telemetry/opentelemetry-specification/pull/3212\r\n\r\n# Description\r\n\r\nAWS will only propagate the x-ray header's context through to other services. Injecting context to any other header with a different propagator will result in the context being dropped.\r\n\r\nThe propagator is overridable by the user as an argument to BotocoreInstrumentor to give them final control.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] New feature (non-breaking change which adds functionality)\r\n- [X] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [X] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [X] add `test_override_xray_propagator_injects_into_request`\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [X] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "botocore-xray",
    "is_a_fork": true,
    "comments": [
      "So the failures are related to the `prepare_request` wrapper and use of `headers`:\r\n\r\n```\r\n>       headers = request.headers\r\nE       AttributeError: 'tuple' object has no attribute 'headers'\r\n```\r\n\r\nThing is.. before the patch it also used `request.headers` from `args[0]`. So it is maybe something with how I moved `_patched_endpoint_prepare_request` into `BotocoreInstrumentor`?",
      "Just some linting issues I can fix up soon.",
      "@ocelotl it won't let me trigger a rerun of https://github.com/open-telemetry/opentelemetry-python-contrib/actions/runs/4985069665/jobs/8924251061?pr=1741 are you able to?"
    ],
    "commit_messages": [
      "botocore: always use x-ray for http header injection (#1741)\n\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211532ac254a19ac290b17",
    "number": 1739,
    "body": null,
    "head_branch": "fix-changelog",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix CHANGELOG (#1739)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211533ac254a19ac290b18",
    "number": 1738,
    "body": "# Description\r\n\r\nWhen an AWS Lambda is invoked via Step Functions, the event given to the handler may be a `list` instead of a `dict` if preceded by a `Map` state.  Currently this causes an `AttributeError` to be raised in the OTEL instrumentation.\r\n\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- Tested via a Step Function + Lambda\r\n- Added a basic test for this case\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "list-event-support-aws-lambda",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: xicreative / name: Evan Pavlica  (642a65364487425bc1aee5263e78ec1a4d3a4b44)</li></ul>"
    ],
    "commit_messages": [
      "Prevent AttributeError from being raised when lambda event is a list (#1738)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211534ac254a19ac290b19",
    "number": 1737,
    "body": "# Description\r\n\r\nPart of https://github.com/open-telemetry/opentelemetry-python-contrib/issues/1736",
    "head_branch": "pypy-boto-skip",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "skip instrumentation-boto* pypy env tests (#1737)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211534ac254a19ac290b1a",
    "number": 1735,
    "body": "# Description\r\n\r\nThis PR adds the `process.` prefix to the following runtime metrics:\r\n- runtime.memory\r\n- runtime.cpu.time\r\n- runtime.gc_count\r\n\r\nThis PR also changes runtime.memory to be an UpDownCounter instead of a count, since the [semantic conventions](https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/metrics/semantic_conventions/process-metrics.md#metric-instruments) list `process.memory.usage` as an UpDownCounter.\r\n\r\nFixes #1722 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Breaking change (fix or feature that would cause existing functionality to not work as expected)",
    "head_branch": "stanley.liu/update-runtime-metrics",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update runtime metrics to follow semantic conventions (#1735)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211535ac254a19ac290b1b",
    "number": 1733,
    "body": null,
    "head_branch": "urllib",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add exclude_list for urllib/urllib3 instrumentations (#1733)\n\n* urllib\r\n\r\n* urllib3\r\n\r\n* Update __init__.py\r\n\r\n* readme\r\n\r\n* lint"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211536ac254a19ac290b1c",
    "number": 1731,
    "body": "Confluent non-support clarification\r\n\r\n# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      " <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/220524743/1731/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-not-signed.svg\" alt=\"CLA Not Signed\" align=\"left\" height=\"28\" width=\"328\"></a><br/><br /><ul><li><a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/220524743/1731/#/?version=2' target='_blank'>:x:</a> - login: @yalfah / name: Yasin . The commit (98dcc4d987c54d7c6cdc472f4fadf01ca434f6a4) is not authorized under a signed CLA. <a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/220524743/1731/#/?version=2' target='_blank'>Please click here to be authorized</a>. For further assistance with EasyCLA, <a href='https://jira.linuxfoundation.org/servicedesk/customer/portal/4' target='_blank'>please submit a support request ticket</a>.</li></ul>",
      "To be superseded by #1858."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211537ac254a19ac290b1d",
    "number": 1730,
    "body": "# Description\r\n\r\nI would like to be able not to instrument certain requests within Django. E.g. when HTTP `http.method=OPTIONS`.\r\n\r\nTo be able to do this, I'd need to be able to access request data through `attributes`, which at the moment is unused:\r\n\r\n```\r\nclass DjangoSampler(Sampler):\r\n    # ...\r\n    def should_sample(\r\n        self,\r\n        parent_context,\r\n        trace_id,\r\n        name,\r\n        kind=None,  # noqa\r\n        attributes=None,\r\n        links=None,  # noqa\r\n        trace_state=None,\r\n    ):\r\n        decision = Decision.RECORD_AND_SAMPLE\r\n        if attributes and attributes.get(\"http.method\") == \"OPTIONS\":\r\n            # Do not instrument OPTIONS requests\r\n            decision = Decision.DROP\r\n            attributes = None\r\n        return SamplingResult(\r\n            decision,\r\n            attributes,\r\n            self._get_parent_trace_state(parent_context),\r\n        )\r\n\r\n    resource = Resource(\r\n        attributes={\r\n            \"service.name\": \"myapp\",\r\n        }\r\n    )\r\n    trace.set_tracer_provider(\r\n        TracerProvider(\r\n            sampler=DjangoSampler(),\r\n            resource=resource,\r\n        )\r\n    )\r\n```\r\n\r\nFixes partially #936\r\n\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nUsing the code in the description.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "django-attributes-available-in-sampler",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: rafa-munoz / name: Rafael Muñoz  (8c459795b0268462dff7ec670d8c4a93ebf56a0a)</li></ul>",
      "@srikanthccv @lzchen for any reason the build is failing in `Contrib Repo Tests / build (pypy3, instrumentation, ubuntu-20.04) (pull_request)` but I think it's unrelated and the error may be gone by triggering the build again. I can't restart the build. Do you have permission for that?",
      "Still the same thing unfortunately:\r\n\r\n```\r\npypy3-test-instrumentation-botocore run-test: commands[0] | pytest --benchmark-json=pypy3-instrumentation-ubuntu-20.04-benchmark.json\r\n[863](https://github.com/open-telemetry/opentelemetry-python-contrib/actions/runs/4547788307/jobs/8018104485?pr=1730#step:6:864)\r\n============================= test session starts ==============================\r\n[864](https://github.com/open-telemetry/opentelemetry-python-contrib/actions/runs/4547788307/jobs/8018104485?pr=1730#step:6:865)\r\nplatform linux -- Python 3.7.13[pypy-7.3.9-final], pytest-7.2.2, pluggy-1.0.0 -- /home/runner/work/opentelemetry-python-contrib/opentelemetry-python-contrib/.tox/pypy3-test-instrumentation-botocore/bin/python\r\n[865](https://github.com/open-telemetry/opentelemetry-python-contrib/actions/runs/4547788307/jobs/8018104485?pr=1730#step:6:866)\r\ncachedir: .tox/pypy3-test-instrumentation-botocore/.pytest_cache\r\n[866](https://github.com/open-telemetry/opentelemetry-python-contrib/actions/runs/4547788307/jobs/8018104485?pr=1730#step:6:867)\r\nbenchmark: 4.0.0 (defaults: timer=pytest_benchmark.timers.monotonic disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=True warmup_iterations=100000)\r\n[867](https://github.com/open-telemetry/opentelemetry-python-contrib/actions/runs/4547788307/jobs/8018104485?pr=1730#step:6:868)\r\nrootdir: /home/runner/work/opentelemetry-python-contrib/opentelemetry-python-contrib, configfile: pytest.ini\r\n[868](https://github.com/open-telemetry/opentelemetry-python-contrib/actions/runs/4547788307/jobs/8018104485?pr=1730#step:6:869)\r\nplugins: benchmark-4.0.0\r\n[869](https://github.com/open-telemetry/opentelemetry-python-contrib/actions/runs/4547788307/jobs/8018104485?pr=1730#step:6:870)\r\ncollecting ... Fatal Python error: Aborted\r\n[870](https://github.com/open-telemetry/opentelemetry-python-contrib/actions/runs/4547788307/jobs/8018104485?pr=1730#step:6:871)\r\n\r\n[871](https://github.com/open-telemetry/opentelemetry-python-contrib/actions/runs/4547788307/jobs/8018104485?pr=1730#step:6:872)\r\nStack (most recent call first, approximate line numbers):\r\n[872](https://github.com/open-telemetry/opentelemetry-python-contrib/actions/runs/4547788307/jobs/8018104485?pr=1730#step:6:873)\r\n  File \"<frozen importlib._bootstrap>\", line 220 in _call_with_frames_removed\r\n[873](https://github.com/open-telemetry/opentelemetry-python-contrib/actions/runs/4547788307/jobs/8018104485?pr=1730#step:6:874)\r\nERROR: InvocationError for command /home/runner/work/opentelemetry-python-contrib/opentelemetry-python-contrib/.tox/pypy3-test-instrumentation-botocore/bin/pytest --benchmark-json=pypy3-instrumentation-ubuntu-20.04-benchmark.json (exited with code -6 (SIGABRT)) (exited with code -6)\r\n```",
      "Please rebase. It should be fixed now. "
    ],
    "commit_messages": [
      "Pass request attributes to Sampler in Django (#1730)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211538ac254a19ac290b1e",
    "number": 1728,
    "body": "Copy log updates from `release/v1.17.x-0.38bx`.",
    "head_branch": "opentelemetrybot/copy-change-log-updates-from-release-v1.17.x-0.38bx",
    "is_a_fork": false,
    "comments": [
      "We are not going to remove the date"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211539ac254a19ac290b1f",
    "number": 1725,
    "body": "# Description\r\n\r\nBecause this conflicts with https://github.com/open-telemetry/opentelemetry-python/blob/d77ca16badd5197d66b9b4dfac1221a5fb09c028/opentelemetry-api/pyproject.toml#L32 and fails",
    "head_branch": "temp-importlib-mismatch",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove pinned version importlib-metadata (#1725)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621153aac254a19ac290b20",
    "number": 1724,
    "body": "Prepare release 1.17.0/0.38b0.",
    "head_branch": "opentelemetrybot/prepare-release-1.17.0-0.38b0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[release/v1.17.x-0.38bx] Prepare release 1.17.0/0.38b0 (#1724)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621153bac254a19ac290b21",
    "number": 1723,
    "body": "Update version to `1.18.0.dev/0.39b0.dev`.",
    "head_branch": "opentelemetrybot/update-version-to-1.18.0.dev-0.39b0.dev",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Update version to 1.18.0.dev/0.39b0.dev (#1723)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621153bac254a19ac290b22",
    "number": 1721,
    "body": "# Description\r\n\r\nFixes a typo that breaks the build.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "typo-boto3-sqs",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: rafa-munoz / name: Rafael Muñoz  (d6bf1ef83e75e1464070a4aa55eb1cf75ea6820e)</li></ul>"
    ],
    "commit_messages": [
      "Fix typo (#1721)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621153cac254a19ac290b23",
    "number": 1719,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes #1698\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- I've been using it on production for about 2 weeks now.\r\n- workflow tests should pass to be sure\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "graphql-core",
    "is_a_fork": true,
    "comments": [
      "Will move this to my own repo soon. Progress surely won't be made here.\r\n\r\nDisappointing."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621153dac254a19ac290b24",
    "number": 1717,
    "body": "# Description\r\n\r\nReplaces the non-standard `name_callback` and `span_callback` with `request_hook` and `response_hook` with standard parameters. Reduced the number of instrumented functions to only one, as only `Session.send` is required to provide the necessary functionality.\r\n\r\nI had to remove one test for invalid URL which should not be covered by the OTel spans. This simplifies the implementation of the instrumentor and aligns it with how the other client instrumentations work.\r\n\r\nFixes #411\r\n\r\n## Type of change\r\n\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Added integration tests for request and response hooks, modified an existing test.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "requests-hooks",
    "is_a_fork": true,
    "comments": [
      ">I had to remove one test for invalid URL which should not be covered by the OTel spans.\r\n\r\nWhy should it not be covered? It's probably why we have instrumentation for `Session.request`. If other instrumentation do not have this either it is not possible to do the same in them, or they are missing this but capturing the invalid URL should be part of the instrumentation. This could be essential for some users.",
      "Hi @srikanthccv I hadn't properly explained my reasoning, so thank you for bringing this up.\r\n\r\nIt's not that it should not be covered by the OTel spans, but rather that before there is a syntactically valid request object there is probably little benefit in starting a request trace. An error while building the request would still be logged to the parent span and most likely appear in an error tracking system, but there would not be a corresponding request span because one wouldn't have been attempted.\r\n\r\nThis has two added benefits: you can work with a well-built request object to append additional information during instrumentation (the use case for these hooks), and you have stricter guarantees about the values of the request span attributes that get sent to your OTel collector.\r\n\r\nIt also makes the instrumentation behavior more consistent, since invalid URL errors when manually building `PreparedRequest` objects are not currently logged as a span.",
      "I think those are good points. Is there anything significant users lose if we remove `Session.request` wrapper?",
      "@federicobond just wanted to say THANK YOU for implementing this feature -- much needed & very powerful in the right hands :) "
    ],
    "commit_messages": [
      "Implement request and response hooks in requests library instrumentation (#1717)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621153eac254a19ac290b25",
    "number": 1716,
    "body": "This would close #1697. The interceptor channel as is breaks access to channel private attributes, like Channel._channel. To allow it, I wrapped the incoming channel with a getattr that tries Channel._channel if it isn't present in Channel.\r\n\r\n# Description\r\n\r\nIt's described in #1697 , but the gist is:\r\n\r\nI'm using GrpcInstrumentorClient (https://opentelemetry-python-contrib.readthedocs.io/en/latest/instrumentation/grpc/grpc.html#usage-client) version 0.30b1 in a python (3.7) flask application. When closing the channel, using a custom wrapper around channel, calls to the grpc.Channel._channel API fail.\r\n\r\nFixes #1697 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n\r\n# How Has This Been Tested?\r\n\r\nInstrument with GrpcInstrumentorClient().instrument()\r\nIn a grpc middleware, or anywhere with access to the grpc channel object, call a method on channel._channel, like channel._channel.check_connectivity_state()\r\n\r\n- [x] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: ianmcnally / name: Ian McNally  (86b10ffa5fb8909cee33a459c91fbcc19555c15b)</li></ul>",
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: ianmcnally / name: Ian McNally  (cf3febc7a6088165798f6e34c2dd23ccebb91bef)</li></ul>",
      "The spellcheck failure is in an untouched file. It's a typo on \"instrumentation\"",
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: ianmcnally / name: Ian McNally  (71b8e21d8e8d6f032e425088f300185bfc45f799)</li></ul>",
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: ianmcnally / name: Ian McNally  (2f6b97535e7913b5583c6575e714b2aca6e806a7)</li></ul>"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621153fac254a19ac290b26",
    "number": 1713,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes #1478 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "asgi-header-decoding",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: nkhitrov / name: Nick Khitrov  (a381c2e11a4385f912ea16facb06b446ec2a8b72)</li></ul>",
      "Is there any reason for this PR to stay at the Draft status ?",
      "@nkhitrov \r\n\r\nAre you still working on this or can someone else pick this up from where you left off?",
      "@lzchen no, I forget about this issue 😅\r\n\r\nI don't mind if someone pick this up"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211540ac254a19ac290b27",
    "number": 1710,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\ntox -e test-instrumentation-fastapi\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix-fastapi-instrumentation-tests",
    "is_a_fork": true,
    "comments": [
      "@srikanthccv According to what I checked, there was no specific reason to add it there.\r\n\r\n",
      "Fixes #1665 as a follow-up to #1664 "
    ],
    "commit_messages": [
      "fix fastapi instrumentation tests for version 0.91 (#1710)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211541ac254a19ac290b28",
    "number": 1709,
    "body": "# Description\r\n\r\nAdded instrumentor for aiobotocore, an async client for amazon services.\r\n\r\nIt's based on the sync botocore instrumentor, overriding the methods to patch the async codepaths\r\n\r\nFixes #553\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- I've been using it on production for a while with no problems.\r\n- workflow tests should pass to be sure\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "aiobotocore",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: dacevedo12 / name: David Acevedo  (cd6ba5715d5cb04430ca6d65490b5e2cdd621a26)</li></ul>",
      "CI is all green in my branch now :heavy_check_mark: ",
      "@nemoshlag it's ok if you want to merge the [other one](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1662) first as this will certainly cause a conflict. I can rebase and update",
      "Hi @dacevedo12 thanks but it's ok. I think new instrumentations should be promoted, but I don't have any control over merging prioritization :)",
      "Perhaps the bot requested more reviews due to the spellcheck fix in boto3sqs. I just changed it so the CI would pass\r\n\r\nAny chance this makes it to the 0.38 release :smile: ?",
      "@dacevedo12 thanks for your precious time and work :)\r\nI am waiting for this as well, is it still blocked? Who should approve it?\r\nMaybe worth releasing it as a separate instrumentor if it's not gonna happen in this repo?\r\n",
      "They likely won't merge it, check the (ongoing?) discussion at #1714.\n\nI'm down to publish this on a separate repo, but won't happen immediately as I'm busy with some stuff.\n\nFeel free to fork/copypaste in the meantime, that's what I did at work.\n\n",
      "Will move this to my own repo soon. Progress surely won't be made here.\r\n\r\nDisappointing.",
      "Is there any chance to merge this PR?\r\nThis library is widely used, and we were also waiting for it.",
      "@lzchen @ocelotl I see you have been working on reviewing and approving recent MRs on this repo; do you know what's required to get this much-needed change? How can we help? It'd be nice to have this available. \r\n\r\nThanks for your work maintaining this."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211542ac254a19ac290b29",
    "number": 1708,
    "body": "For dependency checking when calling `instrument()`.\r\n\r\nChanges dependency checks to check for `fastapi` and `starlette` libraries instead of `asgiref`.\r\nNote: `asgiref` is already a direct dependency of `opentelemetry.instrumentation.asgi`, which both of these instrumentations take a dependeny on",
    "head_branch": "instr",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Change instruments version for fastapi and starlette (#1708)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211543ac254a19ac290b2a",
    "number": 1706,
    "body": "# Description\r\n\r\nAdded an option to configure request and response hooks for GRPC clients.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Test A added request and response hooks which add span attributes\r\n- [x] Test B added faulty request and response hooks and verified they do not break the instrumentation nor the application.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "add-response-and-request-hooks",
    "is_a_fork": true,
    "comments": [
      "Please update your branch",
      "@shalevr Done"
    ],
    "commit_messages": [
      "added request and response hooks for grpc client (#1706)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211544ac254a19ac290b2b",
    "number": 1701,
    "body": "# Description\r\n\r\nAdded an optional query sanitizer to the SQLAlchemy instrumentation.\r\nUsage\r\nSQLAlchemyInstrumentor().instrument(sanitize_query=True)\r\n\r\nThis will affect the DB_STATEMENT value to contain the original query or sanitized one.\r\n\r\nFixes #1549    \r\nFollowing the specification discussion [here](https://github.com/open-telemetry/opentelemetry-specification/issues/3104)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Test A db.statement has been sanitized\r\n- [x] Test B no side affects occurred on a query without a db.statement attribute \r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "sqlalchemy-query-sanitization",
    "is_a_fork": true,
    "comments": [
      "@shalevr can this be merged? seems that comments were fixed "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211544ac254a19ac290b2c",
    "number": 1700,
    "body": "Update links in RELEASING.md\r\nRename `publish-a-package.yml` -> `publish-a-package-from-tag.yml` to avoid confusion\r\nChanged tag created to use unstable version.",
    "head_branch": "rel",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "rel (#1700)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211545ac254a19ac290b2d",
    "number": 1696,
    "body": "# Description\r\n\r\nAdd an entry for sqlalchemy component owner:\r\n\r\nI contributed metrics instrumentation(https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1645) \r\nand fixed a bug in the uninstrument logic(https://github.com/open-telemetry/opentelemetry-python-contrib/issues/1163)\r\n",
    "head_branch": "Add-entry-for-sqlalchemy-component-owner",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add entry for sqlalchemy component owner (#1696)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211546ac254a19ac290b2e",
    "number": 1695,
    "body": "# Description\r\n\r\nFixes #1694\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix-httpx-resource-warnings",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: sam-mosleh  (2703611df5389e0dd1ce1f26371dae315f7f1d39)</li></ul>"
    ],
    "commit_messages": [
      "Fix httpx resource warnings (#1695)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211547ac254a19ac290b2f",
    "number": 1693,
    "body": "# Description\r\n\r\nFix documentation to avoid the error `ImportError: cannot import name 'AwsBotocoreInstrumentor' from 'opentelemetry.instrumentation.botocore'`\r\n\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [x] Documentaion fix\r\n\r\n# How Has This Been Tested?\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [X] Documentation has been updated\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: lucasrcezimbra / name: Lucas Rangel Cezimbra  (ff8900eadc7880ea03271f3d983804975b340083, 4930fe48210e22d69a71f5c45a03d49cd2839f50)</li><li>:white_check_mark: login: srikanthccv / name: Srikanth Chekuri  (c5ef15d75ba9a78c4dbc0a5b09d6c39f97164a6b)</li></ul>",
      "Please sign the CLA"
    ],
    "commit_messages": [
      "Fix AWS Lambda documentation (#1693)\n\nFix `ImportError: cannot import name 'AwsBotocoreInstrumentor' from 'opentelemetry.instrumentation.botocore'`\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211548ac254a19ac290b30",
    "number": 1692,
    "body": "# Description\r\n\r\nThis is effectively a continuation of PR https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1654.\r\n\r\nIn that PR, we added additional context to the flask-instrumentor that ensured we wouldn't try to close spans if we weren't in the same thread that created the span. These problems are derived from `flask.copy_current_request_context`-decorated functions, which are often used when running a func in a background thread/greenlet. Because a backgrounded-function is wrapped in a copied ctx, it calls `_teardown_request` upon return, which which will fail/error when attempting to end the span.\r\n\r\nHowever, problems arise even in situations where we aren't running in a separate thread/greenlet. Here's an example:\r\n\r\n```python\r\nimport logging\r\nimport flask\r\nfrom opentelemetry.instrumentation.flask import FlaskInstrumentor\r\n\r\napp = flask.Flask(__name__)\r\nFlaskInstrumentor.instrument_app(app=app)\r\n\r\n@app.get(\"/hello\")\r\ndef hello_route() -> flask.Response:\r\n\r\n    @flask.copy_current_request_context\r\n    def _log_header():\r\n        print(f\"inside call_on_close, {flask.request.headers.get('x-test', 'noheader')}\")\r\n\r\n    resp = flask.make_response(\"hello\", 200)\r\n    resp.call_on_close(_log_header)\r\n    return resp\r\n```\r\nIn this instance, using the `thread_id` is insufficient to differentiate in `_teardown_request` who should try to end the span; they're both running in the same thread.\r\n\r\nInstead, we should simply keep a (weak) reference to the `request_ctx` that we're confident _did_ create the span. When a `copy_current_request_context`-func is called, it'll push on a new `request_ctx` onto the stack which won't match the original . During `_teardown_request`, we can just compare the current `request_ctx` against the original one, and escape if they don't match.\r\n\r\nThis solution should work generically no-matter how the request is run (thread/greenlet/call_on_close/synchronously). The existing multithreaded tests created in the last PR still pass (and are useful to keep around IMO)\r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python-contrib/issues/868\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Unit test added as part of this PR, run via `tox -e 'py3{7,8,9,10,11}-test-instrumentation-flask{213,220}'`\r\n- [x] Added new test parametrization in `tox.ini` for flask==2.1.3 and flask==2.2.0. This will exercise both conditionals of how we grab the `request_ctx`\r\n- [x] The failing example in this PR I ran locally both on `main` and my test branch, and confirmed the issue was resolved.\r\n\r\n<details>\r\n  <summary>Full setup for that</summary>\r\n  \r\n `app.py`:\r\n```python\r\nimport logging\r\nimport flask\r\nfrom opentelemetry.instrumentation.flask import FlaskInstrumentor\r\n\r\napp = flask.Flask(__name__)\r\nFlaskInstrumentor.instrument_app(app=app)\r\n\r\n@app.get(\"/hello\")\r\ndef hello_route() -> flask.Response:\r\n\r\n    @flask.copy_current_request_context\r\n    def _log_header():\r\n        print(f\"inside call_on_close, {flask.request.headers.get('x-test', 'noheader')}\")\r\n\r\n    resp = flask.make_response(\"hello\", 200)\r\n    resp.call_on_close(_log_header)\r\n    return resp\r\n```\r\n`requirements.txt`:\r\n```\r\n-e ${HOME}/src/opentelemetry-python/opentelemetry-api\r\n-e ${HOME}/src/opentelemetry-python/opentelemetry-sdk\r\n-e ${HOME}/src/opentelemetry-python/opentelemetry-semantic-conventions\r\n-e ${HOME}/src/opentelemetry-python-contrib/opentelemetry-instrumentation/\r\n-e ${HOME}/src/opentelemetry-python-contrib/util/opentelemetry-util-http/\r\n-e ${HOME}/src/opentelemetry-python-contrib/instrumentation/opentelemetry-instrumentation-wsgi/\r\n-e ${HOME}/src/opentelemetry-python-contrib/instrumentation/opentelemetry-instrumentation-flask/\r\nFlask\r\n```\r\n\r\n```bash\r\npython3 -m venv venv\r\n. venv/bin/activate\r\npip install -r requirements.txt\r\nflask run\r\n```\r\n\r\n```bash\r\ncurl 0:5000/hello -H 'x-test: QQ'\r\n```\r\n</details>\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] ~Documentation has been updated~\r\n\r\n# Implementation discussion\r\n\r\n\r\n#### Why are you using a `weakref`?\r\nOriginally I was considering just storing the `id(request_ctx)` in the `environ`, but there's issues around potential `id` reuse [(\"Two objects with non-overlapping lifetimes may have the same `id()` value.\")](https://docs.python.org/3/library/functions.html#id). I highly doubt there'd be strange overlapping lifetime issues that cause this to be a problem, but it just seemed better to grab a true reference to what we were interested in. This seems less brittle than effectively storing an `int` pointer to the underlying data.\r\n\r\nThe `weakref` guarantees we don't accidentally hold onto the memory simply due to this reference, as well.\r\n\r\n#### What's with the `packaging` version checks on `Flask`?\r\nFor awhile, the blessed way of grabbing the request_ctx was `flask._request_ctx_stack.top`. This was however deprecated in version `2.2.0` ([link](https://flask.palletsprojects.com/en/2.2.x/changes/?highlight=_request_ctx_stack#version-2-2-0)). Now that we have slightly different functionality across flask versions, I also added a `flask{213,220)` section in the `tox.ini`, to ensure we test both versions\r\n\r\n#### Why are we storing this data on the `environ` in the first place? Isn't that what `request` is for?\r\nI'm a bit confused on this. If this file  persisted metadata using `flask.request._otel_flask_attrib`, then any new contexts spawned via `copy_current_request_context` wouldn't have inherited that data, which means teardown would do the \"right thing\" automatically simply by not having access to the `activation` key; itt would properly act like a stack. This _could_ be a refactor we do, but it wasn't something I wanted to do in this PR (nor am I sure if the maintainers are amenable to it).\r\n",
    "head_branch": "mg-use-request-id-instead-of-thread-id",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: matthewgrossman / name: Matthew Grossman  (d11ff88a58718d6581407c53d07b49e2a59138ab, fb9161da0c8755099d8446bba3edbe8925b1a508, 45198d7bb4e349674b5d7066c3a005c05381f6ee, 19f4c3c803cee7d6260cc6ec8678c0b017099c0f, b173c05f072d6d1b7076d0bc7f60b7d25d4cc311, df2085d53b21bbc6175837496f494576e150dfa9, fe1bd893e4f19d7b05f51ca0cc85aaf6ad638f19, 6f7835a4477ab2e17933bb66dc5c6a2b0815cc4a, 4bcc1df127c1aedcac589d6f662ec50d84f151e0, 8e6905a1168f92c08bcd6cf12e81d7e0c1c4df34, 8d5a391cf4bc24f481fc974482191f312ce6f415, 6b0628313313155da8e605c53111d6700980bef3, d82185ea91e412bd4011ebf97e25f9759f48bad6, 282da72c3ec00583fd55ff122e4a7faa81dd8ff9, 3e1711cee18daf3c3ce443fcba3bdaed02528697, 1b8ab6885254715d441945651a283476f156ff5e, 41a2eb713b3273cf9b1a703a66fbe051c8dff281, d599ac5b9a63e8107881737ff9bffd125e6d12a9, e573fea0dc9dae08629db0ed990354fedc382939, 7be29f3e12d307615eb06eeaac494988e2bfba80, 774c34c93fc25bdbc91653615867bf14678ed59b, 7fdf90c919b274b9d60a5c96a73f0f0cac0597b6, 72136d6ed9880a09422b1d334f05aee4b911acad, 103871b73b93643cbcd11aa876a181e7bbc79be2, 10b49dee934f91dbcd9795933c4ba502cc44ed90, 76934fa6c0815147553f91de191129ab821c7af8, d5da7554d6a89e61ca6c4a71aec3cbfc20464ce3, 356cf2067d0780ecd5f46d9adef9a22d010e6432, 3098165d3cc8ad8481d94dd891972e3888f51e06)</li><li>:white_check_mark: login: shalevr / name: Shalev Roda  (1579401b39545c6d983f07b4aa72458062dc6138)</li><li>:white_check_mark: login: ocelotl / name: Diego Hurtado  (5aa045c0ab4920edd042520cfcc3ca8061c7c38b)</li></ul>",
      "fyi @hangonlyra; modification/continuation of your PR",
      "> fyi @hangonlyra; modification/continuation of your PR\r\n\r\nThis is really great! Thanks for improving it.",
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: matthewgrossman / name: Matthew Grossman  (d11ff88a58718d6581407c53d07b49e2a59138ab, fb9161da0c8755099d8446bba3edbe8925b1a508, 45198d7bb4e349674b5d7066c3a005c05381f6ee, 19f4c3c803cee7d6260cc6ec8678c0b017099c0f, b173c05f072d6d1b7076d0bc7f60b7d25d4cc311, df2085d53b21bbc6175837496f494576e150dfa9, fe1bd893e4f19d7b05f51ca0cc85aaf6ad638f19, 6f7835a4477ab2e17933bb66dc5c6a2b0815cc4a, 4bcc1df127c1aedcac589d6f662ec50d84f151e0, 8e6905a1168f92c08bcd6cf12e81d7e0c1c4df34, 8d5a391cf4bc24f481fc974482191f312ce6f415, 6b0628313313155da8e605c53111d6700980bef3, d82185ea91e412bd4011ebf97e25f9759f48bad6, 282da72c3ec00583fd55ff122e4a7faa81dd8ff9, 3e1711cee18daf3c3ce443fcba3bdaed02528697, 1b8ab6885254715d441945651a283476f156ff5e, 41a2eb713b3273cf9b1a703a66fbe051c8dff281, d599ac5b9a63e8107881737ff9bffd125e6d12a9, e573fea0dc9dae08629db0ed990354fedc382939, 7be29f3e12d307615eb06eeaac494988e2bfba80, 774c34c93fc25bdbc91653615867bf14678ed59b, 7fdf90c919b274b9d60a5c96a73f0f0cac0597b6)</li><li>:white_check_mark: login: shalevr / name: Shalev Roda  (1579401b39545c6d983f07b4aa72458062dc6138)</li></ul>",
      "Please fix the lint errors, run \"tox -e lint\"",
      "Thanks for the help; I got preoccupied with a bunch of things in work/life, but should come back to this PR and fix it up within the next few weeks. Will ping once its in a better state!",
      "hey @shalevr; got this working locally and now would appreciate some code-review/feedback. Thanks!"
    ],
    "commit_messages": [
      "Use `request_ctx` to determine whether or not `_teardown_request` should end flask span (#1692)\n\nCo-authored-by: Shalev Roda <65566801+shalevr@users.noreply.github.com>\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211549ac254a19ac290b31",
    "number": 1691,
    "body": "# Description\r\n\r\nThis PR fixes a typo in the [exporter/opentelemetry-exporter-prometheus-remote-write/example](https://github.com/open-telemetry/opentelemetry-python-contrib/tree/main/exporter/opentelemetry-exporter-prometheus-remote-write)\r\n\r\nFailures:\r\n\r\n1. Error 1:\r\n```\r\n❯ docker-compose up\r\n[+] Running 14/14\r\n ⠿ grafana Pulled                                                                                                                                                                                                                \r\n ⠿ cortex Pulled                                                                                                                                                                                                                 \r\n[+] Building 0.0s (0/0)\r\ncould not find /Users/sraradhy/cisco/eti/sre/opentelemetry-python-contrib/exporter/opentelemetry-exporter-prometheus-remote-write/examples: stat /Users/sraradhy/cisco/eti/sre/opentelemetry-python-contrib/exporter/opentelemetry-exporter-prometheus-remote-write/examples: no such file or directory\r\n```\r\n\r\n2. Error 2:\r\n```\r\n❯ docker-compose up\r\nFROM python:3.8\r\n[+] Building 200.5s (10/10) FINISHED\r\n<SOME OUTPUT SKIPPED>\r\n => [5/6] RUN pip install -e .                                                                                                                                                                                                   14.4s\r\n => ERROR [6/6] RUN pip install -r ./examples/requirements.txt                                                                                                                                                                    ```\r\n \r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nSuccessfully running `docker-compose up -d`\r\n- [x ] docker-compose up\r\n\r\n```\r\n❯ docker-compose up -d\r\n[+] Running 3/0\r\n ⠿ Container example-grafana-1     Running                                                                                                                                                                                        0.0s\r\n ⠿ Container example-cortex-1      Running                                                                                                                                                                                        0.0s\r\n ⠿ Container example-sample_app-1  Running                                                                                                                                                                                        0.0s\r\n ```\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [x] Documentation has been updated\r\n\r\n",
    "head_branch": "fix-exporter-example",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: sriaradhyula / name: Sri Aradhyula  (98390f4e3a8287061cfcd804337d91572602fbf6)</li></ul>"
    ],
    "commit_messages": [
      "Fix exporter example docker-compose path (#1691)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621154aac254a19ac290b32",
    "number": 1690,
    "body": "# Description\r\n\r\nAdds support for enabling Redis sanitisation from environment variable `OTEL_PYTHON_INSTRUMENTATION_SANITIZE_REDIS`\r\n\r\nFixes #1689\r\n\r\n## Type of change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] nox unit tests\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "redis-sanistation-from-env",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: danwiltshire / name: danielwiltshire  (e65b7881db5f62b2edfa8d3bc5a2f873db946e7a, 0afa55fb1999dd6d859b904073e8588176e3020c)</li></ul>"
    ],
    "commit_messages": [
      "Add support for enabling Redis sanitization from environment variable (#1690)\n\n* Add support for enabling Redis sanitization from environment variable\r\n\r\n* add sanitization environment variable docs\r\n\r\n* strip environment variable\r\n\r\n* update changelog\r\n\r\n* lint\r\n\r\n* lint\r\n\r\n* lint - hopefully the last time\r\n\r\n---------\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621154bac254a19ac290b33",
    "number": 1688,
    "body": "# Description\r\n\r\nAfter the merge with the metrics test functions to the python repo(https://github.com/open-telemetry/opentelemetry-python/pull/3182) the old tests failed.\r\nSo I had to change Tornad, Urllib and Urllib3 metrics tests to work with test_base.py\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n",
    "head_branch": "Change-metrics-tests-to-work-with-test_base",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Change metrics test to work with base_test.py (#1688)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621154cac254a19ac290b34",
    "number": 1683,
    "body": "Copy log updates from `release/v1.16.x-0.37bx`.",
    "head_branch": "opentelemetrybot/copy-change-log-updates-from-release-v1.16.x-0.37bx",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Copy change log updates from release/v1.16.x-0.37bx (#1683)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621154dac254a19ac290b35",
    "number": 1680,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "importlib-version-mismatch",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix CI Failure (#1680)\n\n* Fix CI Failure\r\n\r\n* Actually fix\r\n\r\n* Should be fixed now?\r\n\r\n* Update tox.ini\r\n\r\n* Disable test\r\n\r\n* pypy3.7"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621154dac254a19ac290b36",
    "number": 1679,
    "body": "# Description\r\nhttps://github.com/open-telemetry/opentelemetry-python-contrib/issues/1159\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes #1159 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\ntox -e test-instrumentation-celery\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "metrics-instrumentation-celery",
    "is_a_fork": true,
    "comments": [
      "@Akochavi Please link the issue in description so that it's easier to track.",
      "@srikanthccv @lzchen Can we merge this PR?",
      "@Akochavi, please address the unresolved comments, and resolve them if you think they are already addressed.",
      "Sorry to ping you on an already merged PR @Akochavi @shalevr.\r\n\r\nI'm looking for some context on the `flower.` prefix. There was [a comment about eliminating it](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1679#discussion_r1115780930), but the PR was still merged with that prefix. Is this going to be the name used for this metric going forward?"
    ],
    "commit_messages": [
      "Add metrics instrumentation celery (#1679)\n\nCo-authored-by: Shalev Roda <65566801+shalevr@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621154eac254a19ac290b37",
    "number": 1678,
    "body": "# Description\r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python-contrib/issues/1674\r\n\r\nThe package confluent-kafka has a class Consumer, which has a method called [poll](https://docs.confluent.io/platform/current/clients/confluent-kafka-python/html/index.html#confluent_kafka.Consumer.poll). As per docs, the recommended usage is calling consumer.poll infinitely, so it keeps polling the brokers for messages, and then each time it's called, the code is supposed to check if the message is `None` or has any error before trying to process the message. (Ref: https://github.com/confluentinc/confluent-kafka-python#basic-consumer-example)\r\n\r\nThe package opentelemetry-instrumentation-confluent-kafka offers a wrapper around confluent-kafka's consumer, called ProxiedConsumer. ProxiedConsumer also has a method call poll, which calls ConfluentKafkaInstrumentor's wrap_poll method. This wrap_poll method calls the underlying consumer's poll method with the user specified timeout.\r\nThe confluent_kafka.Consumer.poll method is supposed to be called from an application from within an infinite loop, which means the `wrap_poll` method will also be called with each iteration of the infinite loop. This is the observed behavior with the current implementation of `wrap_poll`:\r\n1. The `wrap_poll` method is creating a span each time it is called. If we go by [this example](https://github.com/confluentinc/confluent-kafka-python#basic-consumer-example) where the consumer.poll is called with a timeout of 1 second, the current `wrap_poll` implementation will create a span per second.\r\n2. It starts this span before extracting context from the kafka message, so this span is no longer linked to any previous spans. Whereas it should only create a span after checking that the received record is not None ([here](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/3f8fdf2620ce0a843cf2dfb86933f69f856bbd97/instrumentation/opentelemetry-instrumentation-confluent-kafka/src/opentelemetry/instrumentation/confluent_kafka/__init__.py#L336-L337)) and is an actual kafka message.\r\n3. Since the span started before [checking if record exists here](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/1c50e47b561384783e37a2fb90c2f31b6b5888d9/instrumentation/opentelemetry-instrumentation-confluent-kafka/src/opentelemetry/instrumentation/confluent_kafka/__init__.py#L333) is started as current span, the span that's started after [record is received](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/1c50e47b561384783e37a2fb90c2f31b6b5888d9/instrumentation/opentelemetry-instrumentation-confluent-kafka/src/opentelemetry/instrumentation/confluent_kafka/__init__.py#L345) will use the current span's context even if the [links contain the context from the message headers](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/1c50e47b561384783e37a2fb90c2f31b6b5888d9/instrumentation/opentelemetry-instrumentation-confluent-kafka/src/opentelemetry/instrumentation/confluent_kafka/__init__.py#L343-L347).\r\n4. Lastly, `wrap_poll` returns the record [even if the record is None](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/1c50e47b561384783e37a2fb90c2f31b6b5888d9/instrumentation/opentelemetry-instrumentation-confluent-kafka/src/opentelemetry/instrumentation/confluent_kafka/__init__.py#L362), it should only return record if the record exists.  \r\n\r\nThis PR fixes the above issues. This is assuming my understanding and usage of ProxiedConsumer is right, please correct me if not. Here's a sample code snippet based on the docs:\r\n\r\n```\r\nc = confluent_kafka.Consumer({ 'bootstrap.servers': 'localhost:29092' })\r\nconsumer = ConfluentKafkaInstrumentor().instrument_consumer(c, tracer_provider=tracer_provider)\r\nconsumer.subscribe(['mytopic'])\r\nwhile True:\r\n    msg = consumer.poll(1.0)\r\n    if msg is None:\r\n        continue\r\n    process(msg) // process is just some method to handle messages\r\n```\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nTested this change and verified that the span created by `wrap_poll` stays linked to all spans created previously for the current trace. Also the spans created after `wrap_poll` stay linked to the same trace for a kafka message.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "consumer_poll",
    "is_a_fork": true,
    "comments": [
      "Please add a changelog entry",
      "There was probably a reason why span links were used. Please take a look at the change again.",
      "> There was probably a reason why span links were used. Please take a look at the change again.\r\n\r\n@srikanthccv yes I wrote a bit in the PR description about the usage of links here and why I think it's not the right choice here. Here's what I think:\r\n1. The span links were used to link the [span started here](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/4a859e34d6ac38966cda94c7ec3f5b586613697e/instrumentation/opentelemetry-instrumentation-confluent-kafka/src/opentelemetry/instrumentation/confluent_kafka/__init__.py#L346) to the span associated with the sender of kafka message.\r\n2. [Links](https://opentelemetry.io/docs/reference/specification/overview/#links-between-spans) by definition can point to spans within the same trace or across traces. In this case we want the new span to be a part of the same trace as the span from which the kafka message was sent.\r\n3. Passing in `links` alone won't ensure that the new span will belong to the current trace. Because as per the [start_span code here](https://github.com/open-telemetry/opentelemetry-python/blob/a9a96aad8b930a7efdea1ad979aefc173e1710d0/opentelemetry-sdk/src/opentelemetry/sdk/trace/__init__.py#L1059-L1073), the `context` argument is checked first, and if it's not passed, then the new span is considered as the root span. So while it will stay linked to the previous spans, it won't be part of a same trace. \r\n4. So as a proposed change in this PR, I'm starting the new span by passing it the context extracted from previous spans. This way I've confirmed that all spans associated to a kafka message belong to the same trace.\r\n\r\nLet me know what you think",
      "@mrajashree I think the link code needs to stay as it was mostly correct as it was mostly following https://opentelemetry.io/docs/reference/specification/trace/semantic_conventions/messaging/#batch-receiving as Kafka is a batch receiver.\r\n\r\nAlso there is some more background here  https://opentelemetry.io/blog/2022/instrument-kafka-clients/",
      "@mrajashree do you have any thoughts on this after the comment from @owenhaynes?",
      "Hi, anything can be done to push this through?\r\n\r\nIt would be great to have the consumer use the context from the kafka message and be in the same trace as the producer, this would be much more useful in a distributed system to trace async flows.\r\n\r\nIn this example https://opentelemetry.io/docs/specs/otel/trace/semantic_conventions/messaging/#topic-with-multiple-consumers\r\n\r\nthe spans created by the consumers have the same parent as the producer.\r\n",
      "It would be very useful to resolve this issue. As it stands we don't have viable distributed tracing - just separate Producer and Consumer Spans",
      "hi @ocelotl and @owenhaynes, as per the opentelemtry semantic conventions for messaging, context propagation is a must, which is not being done currently https://opentelemetry.io/docs/specs/semconv/messaging/messaging-spans/#context-propagation\r\n> A message may traverse many different components and layers in one or more intermediaries when it is propagated from the producer to the consumer(s). To be able to correlate consumer traces with producer traces using the existing context propagation mechanisms, all components must propagate context down the chain.\r\n\r\nThere's some more background on this here: https://github.com/open-telemetry/oteps/blob/main/text/trace/0205-messaging-semantic-conventions-context-propagation.md\r\n\r\nThis issue was also fixed in the java lib (https://github.com/open-telemetry/opentelemetry-java-instrumentation/issues/3529)\r\n\r\nI think if we need to use links, we also need to figure out a way of propagating context and not starting a new trace each time consumer receives a message",
      "Hi @lzchen @ocelotl @shalevr - can you please take a look at this PR and merge. As the contributor @mrajashree mentioned this fix has been done in other language libraries and is needed by downstream by end-users. Thanks for your help in getting this fix in. ",
      "can someone please review this PR ? it has been waiting for so log :( ",
      "@luisRubiera tests are red, needs to be updated to match whatever changed in the meantime"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621154fac254a19ac290b38",
    "number": 1677,
    "body": "Update version to `1.17.0.dev/0.38b0.dev`.",
    "head_branch": "opentelemetrybot/update-version-to-1.17.0.dev-0.38b0.dev",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Update version to 1.17.0.dev/0.38b0.dev (#1677)\n\n* Update version to 1.17.0.dev/0.38b0.dev\r\n\r\n* Update SHA\r\n\r\n---------\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211550ac254a19ac290b39",
    "number": 1676,
    "body": "Prepare release 1.16.0/0.37b0.",
    "head_branch": "opentelemetrybot/prepare-release-1.16.0-0.37b0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[release/v1.16.x-0.37bx] Prepare release 1.16.0/0.37b0 (#1676)\n\n* Prepare release 1.16.0/0.37b0\r\n\r\n* Update SHA\r\n\r\n* Fix CI Failure (#1680)\r\n\r\n* Fix CI Failure\r\n\r\n* Actually fix\r\n\r\n* Should be fixed now?\r\n\r\n* Update tox.ini\r\n\r\n* Disable test\r\n\r\n* pypy3.7\r\n\r\n---------\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211551ac254a19ac290b3a",
    "number": 1673,
    "body": "Opening as a draft because 1 test still fails. I'm hoping someone more familiar with the code might notice what I did wrong easily :)\r\n\r\nThe failure is in `TestBoto3SQSInstrumentation.test_receive_message`, no links are found:\r\n\r\n```\r\n>           self.assertEqual(1, len(span.links))\r\nE           AssertionError: 1 != 0\r\n```\r\n\r\nI did some simple `printf` debugging to check what the `MessageSystemAttributes` were before calling `extract` and the `ctx` after calling `extract`:\r\n\r\n```\r\n        message_system_attributes = message.get(\"MessageSystemAttributes\", {})\r\n        print(message_system_attributes)\r\n        links = []\r\n        ctx = AwsXRayPropagator().extract(\r\n            message_system_attributes, getter=boto3sqs_getter\r\n        )\r\n        print(ctx)\r\n```\r\n\r\nAnd the header is there as expected and it is extracted properly but the ctx is then empty:\r\n\r\n`message_system_attributes`:\r\n\r\n```\r\n{'AWSTraceHeader': {'StringValue': 'root=1-00000000-00000000000000000000000a;parent=0000000000000001;sampled=1', 'DataType': 'String'}}\r\n```\r\n\r\nValue in `Boto3SQSGetter.get`:\r\n\r\n```\r\nroot=1-00000000-00000000000000000000000a;parent=0000000000000001;sampled=1\r\n```\r\n\r\n`ctx`:\r\n\r\n```\r\n{}\r\n```\r\n\r\n# Description\r\n\r\nThe instrumentation spec for SQS defines that propagation is done with X-Ray to the key `AWSTraceHeader` in `MessageSystemAttributes`. This patch brings the propagation in line with the spec from what it was doing before of using the global propagator and `MessageAttributes`. \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [X] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [X] Existing tests were updated to extract/inject the propagated context with the new format. \r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "xray-sqs",
    "is_a_fork": true,
    "comments": [
      "@tsloughter does AWS support x-ray propagation on the message attribute level? I think in the Java instrumentation, the propagation is done via http headers on the outgoing request rather than the request body. I'm not sure if there's a difference in behavior. ",
      "I think context propagation with `MessageSystemAttributes` will only work in a very limited way. If you search for `MessageSystemAttributes` in the [AWS SDK docs for SQS](https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/sqs.html), they are only defined for `send_message` and `send_message_batch`. For [receive_message](https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/sqs.html#SQS.Client.receive_message) they are not returned by AWS, meaning that the propagated context cannot be extracted anymore when the SDK is used at the receiver side.\r\nContext propagation via the XRay propagator only seems to work if the SQS receiver is a lambda function where AWS internally converts the `MessageSystemAttributes` to an XRay environment variable that the lambda function then can access.\r\nFor other scenarios like SQS.send_message -> SQS.receive_message, SNS.publish -> (SNS subscription to SQS) -> SQS.receive (either via SDK or lambda), ... the `MessageSystemAttributes` will become unaccessible and break context propagation.\r\nI guess this is the reason why context propagation in this repo and in other techs like [js](https://github.com/open-telemetry/opentelemetry-js-contrib/blob/main/plugins/node/opentelemetry-instrumentation-aws-sdk/src/services/MessageAttributes.ts) or [ruby](https://github.com/open-telemetry/opentelemetry-ruby-contrib/blob/main/instrumentation/aws_sdk/lib/opentelemetry/instrumentation/aws_sdk/message_attributes.rb) propagate context via `MessageAttributes` instead of `MessageSystemAttributes`.\r\n",
      "Ah. I thought I saw them in the response body but I guess not.\r\n\r\nMy reading of the SQS spec was that they shouldn't be on regular attributes because of user limits there and instead to use system attributes, but if those aren't propagated to the user that doesn't help :)",
      "@tylerbenson I went looking and can't find where Java does this for SQS. \r\n\r\n",
      "It's being done for all requests, not just SQS:\r\nhttps://github.com/open-telemetry/opentelemetry-java-instrumentation/blob/main/instrumentation/aws-sdk/aws-sdk-2.2/library/src/main/java/io/opentelemetry/instrumentation/awssdk/v2_2/TracingExecutionInterceptor.java#L138",
      "Ah. It does look like Python is doing the same, https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/instrumentation/opentelemetry-instrumentation-botocore/src/opentelemetry/instrumentation/botocore/__init__.py#L116\r\n\r\nSo I could instead update that too always use XRay and remove the existing propagation in attributes..?",
      "Or wait, wouldn't putting it in headers break sending batches? Batches will have messages with separate trace contexts.",
      "Good question.  I don't know the answer to that. In theory we should be doing something similar to what AWS is doing for their sdks: https://docs.aws.amazon.com/xray/latest/devguide/xray-sdk-python-patching.html",
      "@mariojonke I noticed `AWSTraceHeader` is in the `AttributeNames` for `receive_message` https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/sqs.html#SQS.Queue.receive_messages\r\n\r\nMight that be the value from `MessageSystemAttributes`?",
      "It looks like it is the same thing but i haven't tested it yet. The instrumentation probably would need inject into the `AttributeNames` to tell AWS that it wants to receive the `AWSTraceHeader` and then extract it from the `Attributes` instead of the `MessageAttributes`.\r\nHowever, as far as i can tell this only works for SQS to SQS scenarios and i'm not sure if it would require to explicitly enable XRay in AWS. When looking at the [SNS docs](https://boto3.amazonaws.com/v1/documentation/api/latest/reference/services/sns.html#SNS.Client.publish) there doesn't seem to be any mention of `AWSTraceHeader` or `MessageSystemAttributes`, so tracing SNS to SQS messages probably isn't working unless the XRay header is somehow magically injected (maybe into the [underlying HTTP request](https://github.com/aws/aws-xray-sdk-python/blob/master/aws_xray_sdk/ext/botocore/patch.py#L26)). \r\nI guess this would need to be tested and also if it works with enabeling/disabeling [raw message delivery](https://docs.aws.amazon.com/sns/latest/dg/sns-large-payload-raw-message-delivery.html) on the SNS to SQS subscription.\r\n\r\nAnother thing to consider i guess is that the [XRay trace header](https://docs.aws.amazon.com/xray/latest/devguide/xray-concepts.html#xray-concepts-tracingheader) only contains trace ID, span ID and sampling flag. This is more or less in line with the W3C traceparent but it doesn't seem to provide a tracestate or similar. So any vendor specific information will be lost when tracing an SQS message and using the XRay propagator.",
      "The proposed change will introduce an incompatibility with SNS and SQS tracing scenarios currently in use, that rely on the global propagator being called to inject/extract the context into message attributes.\r\n\r\nSee https://github.com/open-telemetry/opentelemetry-specification/pull/3212#pullrequestreview-1301429705 for a more detailed explanation.\r\n\r\nI therefore suggest to keep the call to the global propagator's inject and extract methods in place and add the X-Ray propagator in a backwards compatible way.",
      "Experimenting with the x-ray sdk and rereading the existing spec I'll be updating this PR to no longer inject the `AWSTraceHeader` attribute. This is added by AWS when the HTTP x-ray header is found in the send request. Extraction will look for AWSTraceHeader in the `attributes` (not the message attributes).\r\n\r\nI still need to get this working with otel python boto and boto3sqs to make sure it works as I expect based on use of x-ray python sdk. I'll be asking about that on slack tomorrow :)\r\n\r\nI'm not sure what to do about backwards compatibility.",
      "I'm going to close this and open a new PR only focused on `botocore`.\r\n\r\nI still think changes are needed to SQS instrumentation, but not the ones in this PR. I'll likely make one in the near future that adds support for checking for `AWSTraceHeader` in the System Attributes. Injection should not be done how it is in this PR but instead left to the PR I'm making on `botocore` where the context is injected into the HTTP headers with x-ray.",
      "@tsloughter \r\n\r\n> I'll likely make one in the near future that adds support for checking for AWSTraceHeader\r\n\r\nIf you meant setting, this should not actually be needed: If you set the X-Ray HTTP header when sending an SQS message, AWS will automatically fill in the AWSTraceHeader message system attribute based on that.",
      "@Oberon00 right, it fills it in, but it needs to be checked for on the receiving side."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211552ac254a19ac290b3b",
    "number": 1672,
    "body": "# Description\r\n\r\nThis has been bugging me for a while, I could not run the `tox -e generate` command. It turns out that the problem was I had an empty directory in the `instrumentations` folder for an instrumentation I had started but never completed.\r\n\r\nThe problem is I had no indication as to where the problem was, or how I could fix it.\r\n\r\nTo reproduce, just `mkdir instrumentation/opentelemetry-instrumentation-somelib` and run `tox -e generate`.\r\n\r\n<details>\r\n<summary>Current output</summary>\r\n\r\n```\r\n(3.9.5/envs/opentelemetry-python-contrib) ~/opentelemetry-python-contrib ‹main*› » tox -e generate                                                                                          [15:08:14]\r\ngenerate installed: anyio==3.6.2,astor==0.8.1,black==22.12.0,certifi==2022.12.7,charset-normalizer==3.0.1,click==8.1.3,commonmark==0.9.1,distlib==0.3.6,editables==0.3,filelock==3.9.0,h11==0.14.0,hatch==1.6.3,hatchling==1.12.2,httpcore==0.16.3,httpx==0.23.3,hyperlink==21.0.0,idna==3.4,importlib-metadata==6.0.0,isort==5.11.4,jaraco.classes==3.2.3,Jinja2==2.11.3,keyring==23.13.1,MarkupSafe==2.0.1,more-itertools==9.0.0,mypy-extensions==0.4.3,packaging==23.0,pathspec==0.10.3,pexpect==4.8.0,platformdirs==2.6.2,pluggy==1.0.0,ptyprocess==0.7.0,Pygments==2.14.0,pyperclip==1.8.2,requests==2.28.2,rfc3986==1.5.0,rich==13.1.0,shellingham==1.5.0.post1,sniffio==1.3.0,tomli==2.0.1,tomli_w==1.0.0,tomlkit==0.11.6,typing_extensions==4.4.0,urllib3==1.26.14,userpath==1.8.0,virtualenv==20.17.1,zipp==3.11.0\r\ngenerate run-test-pre: PYTHONHASHSEED='418181719'\r\ngenerate run-test: commands[0] | /Users/phillip/opentelemetry-python-contrib/scripts/generate_instrumentation_bootstrap.py\r\nTraceback (most recent call last):\r\n  File \"/Users/phillip/opentelemetry-python-contrib/scripts/generate_instrumentation_bootstrap.py\", line 104, in <module>\r\n    main()\r\n  File \"/Users/phillip/opentelemetry-python-contrib/scripts/generate_instrumentation_bootstrap.py\", line 62, in main\r\n    for pkg in get_instrumentation_packages():\r\n  File \"/Users/phillip/opentelemetry-python-contrib/scripts/otel_packaging.py\", line 31, in get_instrumentation_packages\r\n    version = subprocess.check_output(\r\n  File \"/Users/phillip/.pyenv/versions/3.9.5/lib/python3.9/subprocess.py\", line 424, in check_output\r\n    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,\r\n  File \"/Users/phillip/.pyenv/versions/3.9.5/lib/python3.9/subprocess.py\", line 528, in run\r\n    raise CalledProcessError(retcode, process.args,\r\nsubprocess.CalledProcessError: Command 'hatch version' returned non-zero exit status 1.\r\nERROR: InvocationError for command /Users/phillip/opentelemetry-python-contrib/scripts/generate_instrumentation_bootstrap.py (exited with code 1)\r\n_______________________________________________________________________________________________ summary ________________________________________________________________________________________________\r\nERROR:   generate: commands failed\r\n```\r\n</details>\r\n\r\nWith my change, this is the output of the failure:\r\n\r\n<details>\r\n<summary>Modified output</summary>\r\n\r\n```\r\n(3.9.5/envs/opentelemetry-python-contrib) ~/opentelemetry-python-contrib ‹hatch-version-debug*› » tox -e generate                                                                           [15:05:55]\r\ngenerate installed: anyio==3.6.2,astor==0.8.1,black==22.12.0,certifi==2022.12.7,charset-normalizer==3.0.1,click==8.1.3,commonmark==0.9.1,distlib==0.3.6,editables==0.3,filelock==3.9.0,h11==0.14.0,hatch==1.6.3,hatchling==1.12.2,httpcore==0.16.3,httpx==0.23.3,hyperlink==21.0.0,idna==3.4,importlib-metadata==6.0.0,isort==5.11.4,jaraco.classes==3.2.3,Jinja2==2.11.3,keyring==23.13.1,MarkupSafe==2.0.1,more-itertools==9.0.0,mypy-extensions==0.4.3,packaging==23.0,pathspec==0.10.3,pexpect==4.8.0,platformdirs==2.6.2,pluggy==1.0.0,ptyprocess==0.7.0,Pygments==2.14.0,pyperclip==1.8.2,requests==2.28.2,rfc3986==1.5.0,rich==13.1.0,shellingham==1.5.0.post1,sniffio==1.3.0,tomli==2.0.1,tomli_w==1.0.0,tomlkit==0.11.6,typing_extensions==4.4.0,urllib3==1.26.14,userpath==1.8.0,virtualenv==20.17.1,zipp==3.11.0\r\ngenerate run-test-pre: PYTHONHASHSEED='2056460220'\r\ngenerate run-test: commands[0] | /Users/phillip/opentelemetry-python-contrib/scripts/generate_instrumentation_bootstrap.py\r\nCould not get hatch version from path /Users/phillip/opentelemetry-python-contrib/instrumentation/opentelemetry-instrumentation-somelib\r\n╭─────────────────────────────── Traceback (most recent call last) ────────────────────────────────╮\r\n│ /Users/phillip/opentelemetry-python-contrib/.tox/generate/lib/python3.9/site-packages/hatch/cli/ │\r\n│ __init__.py:205 in main                                                                          │\r\n│                                                                                                  │\r\n│   202                                                                                            │\r\n│   203 def main():  # no cov                                                                      │\r\n│   204 │   try:                                                                                   │\r\n│ ❱ 205 │   │   return hatch(windows_expand_args=False)                                            │\r\n│   206 │   except Exception:                                                                      │\r\n│   207 │   │   from rich.console import Console                                                   │\r\n│   208                                                                                            │\r\n│                                                                                                  │\r\n│ /Users/phillip/opentelemetry-python-contrib/.tox/generate/lib/python3.9/site-packages/click/core │\r\n│ .py:1130 in __call__                                                                             │\r\n│                                                                                                  │\r\n│ /Users/phillip/opentelemetry-python-contrib/.tox/generate/lib/python3.9/site-packages/click/core │\r\n│ .py:1055 in main                                                                                 │\r\n│                                                                                                  │\r\n│ /Users/phillip/opentelemetry-python-contrib/.tox/generate/lib/python3.9/site-packages/click/core │\r\n│ .py:1657 in invoke                                                                               │\r\n│                                                                                                  │\r\n│ /Users/phillip/opentelemetry-python-contrib/.tox/generate/lib/python3.9/site-packages/click/core │\r\n│ .py:1404 in invoke                                                                               │\r\n│                                                                                                  │\r\n│ /Users/phillip/opentelemetry-python-contrib/.tox/generate/lib/python3.9/site-packages/click/core │\r\n│ .py:760 in invoke                                                                                │\r\n│                                                                                                  │\r\n│ /Users/phillip/opentelemetry-python-contrib/.tox/generate/lib/python3.9/site-packages/click/deco │\r\n│ rators.py:38 in new_func                                                                         │\r\n│                                                                                                  │\r\n│ /Users/phillip/opentelemetry-python-contrib/.tox/generate/lib/python3.9/site-packages/hatch/cli/ │\r\n│ version/__init__.py:20 in version                                                                │\r\n│                                                                                                  │\r\n│   17 │                                                                                           │\r\n│   18 │   with app.project.location.as_cwd():                                                     │\r\n│   19 │   │   if not (                                                                            │\r\n│ ❱ 20 │   │   │   'version' in app.project.metadata.dynamic or app.project.metadata.hatch.meta    │\r\n│   21 │   │   ) or dependencies_in_sync(app.project.metadata.build.requires_complex):             │\r\n│   22 │   │   │   source = app.project.metadata.hatch.version.source                              │\r\n│   23                                                                                             │\r\n│                                                                                                  │\r\n│ /Users/phillip/opentelemetry-python-contrib/.tox/generate/lib/python3.9/site-packages/hatchling/ │\r\n│ metadata/core.py:94 in dynamic                                                                   │\r\n│                                                                                                  │\r\n│     91 │   def dynamic(self) -> list[str]:                                                       │\r\n│     92 │   │   # Keep track of the original dynamic fields before depopulation                   │\r\n│     93 │   │   if self._dynamic is None:                                                         │\r\n│ ❱   94 │   │   │   dynamic = self.core_raw_metadata.get('dynamic', [])                           │\r\n│     95 │   │   │   if not isinstance(dynamic, list):                                             │\r\n│     96 │   │   │   │   message = 'Field `project.dynamic` must be an array'                      │\r\n│     97 │   │   │   │   raise TypeError(message)                                                  │\r\n│                                                                                                  │\r\n│ /Users/phillip/opentelemetry-python-contrib/.tox/generate/lib/python3.9/site-packages/hatchling/ │\r\n│ metadata/core.py:79 in core_raw_metadata                                                         │\r\n│                                                                                                  │\r\n│     76 │   │   if self._core_raw_metadata is None:                                               │\r\n│     77 │   │   │   if 'project' not in self.config:                                              │\r\n│     78 │   │   │   │   message = 'Missing `project` metadata table in configuration'             │\r\n│ ❱   79 │   │   │   │   raise ValueError(message)                                                 │\r\n│     80 │   │   │                                                                                 │\r\n│     81 │   │   │   core_raw_metadata = self.config['project']                                    │\r\n│     82 │   │   │   if not isinstance(core_raw_metadata, dict):                                   │\r\n╰──────────────────────────────────────────────────────────────────────────────────────────────────╯\r\nValueError: Missing `project` metadata table in configuration\r\n\r\nTraceback (most recent call last):\r\n  File \"/Users/phillip/opentelemetry-python-contrib/scripts/generate_instrumentation_bootstrap.py\", line 104, in <module>\r\n    main()\r\n  File \"/Users/phillip/opentelemetry-python-contrib/scripts/generate_instrumentation_bootstrap.py\", line 62, in main\r\n    for pkg in get_instrumentation_packages():\r\n  File \"/Users/phillip/opentelemetry-python-contrib/scripts/otel_packaging.py\", line 42, in get_instrumentation_packages\r\n    raise e\r\n  File \"/Users/phillip/opentelemetry-python-contrib/scripts/otel_packaging.py\", line 33, in get_instrumentation_packages\r\n    version = subprocess.check_output(\r\n  File \"/Users/phillip/.pyenv/versions/3.9.5/lib/python3.9/subprocess.py\", line 424, in check_output\r\n    return run(*popenargs, stdout=PIPE, timeout=timeout, check=True,\r\n  File \"/Users/phillip/.pyenv/versions/3.9.5/lib/python3.9/subprocess.py\", line 528, in run\r\n    raise CalledProcessError(retcode, process.args,\r\nsubprocess.CalledProcessError: Command 'hatch version' returned non-zero exit status 1.\r\nERROR: InvocationError for command /Users/phillip/opentelemetry-python-contrib/scripts/generate_instrumentation_bootstrap.py (exited with code 1)\r\n_______________________________________________________________________________________________ summary ________________________________________________________________________________________________\r\nERROR:   generate: commands failed\r\n```\r\n</details>\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nLocal observation\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "hatch-version-debug",
    "is_a_fork": true,
    "comments": [
      "@shalevr @srikanthccv looks like the auto-merge got disabled on this one after my push."
    ],
    "commit_messages": [
      "Add better debugging if hatch subprocess fails (#1672)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211553ac254a19ac290b3c",
    "number": 1670,
    "body": "# Description\r\n\r\nSupport aio_pika 9 as a fast-follow to aio_pika 8 support added at  #1481.\r\n\r\n[aio_pika 9 release notes](https://github.com/mosquito/aio-pika/releases)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Repo tests\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "aio_pika-9",
    "is_a_fork": true,
    "comments": [
      "@ofek1weiss FYI\r\n\r\n@srikanthccv think we can get this into the release this week?",
      "Looks like in tox.ini you typed aio-pika8 instead of 9",
      "@ofek1weiss things should be good now, aio-pika 9 moved around the version information. Solution tested with 7, 8 and 9 and looks good.",
      "Looks good to me 👍"
    ],
    "commit_messages": [
      "Support aio_pika 9 (#1670)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211554ac254a19ac290b3d",
    "number": 1668,
    "body": "# Description\r\n\r\nEnable readthedocs auto-generated documentation to parse __init.py__ doc string\r\nFixes #1496 \r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [X] tox -e docs\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [X] No.\r\n",
    "head_branch": "add/confluent-kafka-docs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add confluent kafka docs (#1668)\n\n* add elasticsearch to docs\r\n\r\n* add confluent kafka to docs\r\n\r\n* tox generate fix\r\n\r\n* tox docs fix\r\n\r\n---------\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211554ac254a19ac290b3e",
    "number": 1667,
    "body": "See https://github.com/open-telemetry/community/blob/main/assets.md#opentelemetry-bot",
    "head_branch": "bot",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "bot (#1667)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211555ac254a19ac290b3f",
    "number": 1666,
    "body": "# Description\r\n\r\nEnable readthedocs auto-generated documentation to parse __init.py__ doc string\r\nFixes #1495 \r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [X] tox -e docs\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [X] No.\r\n",
    "head_branch": "add/boto3sqs-docs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add boto3sqs to docs (#1666)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211556ac254a19ac290b40",
    "number": 1664,
    "body": "Fixes #1663",
    "head_branch": "issue_1663",
    "is_a_fork": true,
    "comments": [
      "https://github.com/open-telemetry/opentelemetry-python-contrib/blob/3bcc9fb5173600572479edae1c3071aa4bce6ee1/instrumentation/opentelemetry-instrumentation-fastapi/src/opentelemetry/instrumentation/fastapi/package.py#L16\r\n\r\nDoes this need to be updated too?",
      "> I am not sure about fixing the version. Looking at the CI failures, it's just the `test_uninstrument_app` failing, and after reading the CHANGELOG https://github.com/tiangolo/fastapi/releases/tag/0.91.0. Can we update the failing test instead?\r\n\r\nSure, but better to do that in other PR, right now this is stopping a regression fix in #1660 from entering into `main`.",
      "> https://github.com/open-telemetry/opentelemetry-python-contrib/blob/3bcc9fb5173600572479edae1c3071aa4bce6ee1/instrumentation/opentelemetry-instrumentation-fastapi/src/opentelemetry/instrumentation/fastapi/package.py#L16\r\n> \r\n> Does this need to be updated too?\r\n\r\nRight, fixed :v: ",
      "Created #1665 to fix it separately."
    ],
    "commit_messages": [
      "Fix fastapi version (#1664)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211557ac254a19ac290b41",
    "number": 1662,
    "body": "# Description\r\n\r\nAdded an optional query sanitizer to the botocore dynamoDB instrumentation.\r\nUsage\r\nBotocoreInstrumentor().instrument(sanitize_query=True)\r\n\r\nThis will affect the DB_STATEMENT value to contain the original query or sanitized one.\r\n\r\nFixes open-telemetry/opentelemetry-specification#1544   \r\nFollowing the specification discussion [here](https://github.com/open-telemetry/opentelemetry-specification/issues/3104)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Test A db.statement has been sanitized\r\n- [x] Test B no side affects occurred on a query without a db.statement attribute \r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "add/botocore-sanitization",
    "is_a_fork": true,
    "comments": [
      "@mariojonke approve if your comments are addressed or request changes to prevent the accidental merge.",
      "@nemoshlag are there any updates on the comments from @mariojonke?"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211558ac254a19ac290b42",
    "number": 1660,
    "body": "Several issues have arisen from this bugfix, reverting here until a better solution can be found.\r\n\r\nFixes #1658",
    "head_branch": "issue_1658",
    "is_a_fork": true,
    "comments": [
      "@phillipuniverse @rogersd @philipcwhite please take a look and let us know if this allows you to work around your issues.",
      "@ocelotl I have confirmed this fixes my originally reported issue with the coverage module at #1179!"
    ],
    "commit_messages": [
      "Revert #1097 (#1660)\n\nSeveral issues have arisen from this bugfix, reverting here until a\r\nbetter solution can be found.\r\n\r\nFixes #1658\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211559ac254a19ac290b43",
    "number": 1659,
    "body": "This reverts commit 6876ad857ffcef07b09d3017217d2545e8ed6ece.\r\n\r\nFixes #1658",
    "head_branch": "issue_1658",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621155aac254a19ac290b44",
    "number": 1657,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [X] New feature (non-breaking change which adds functionality)\r\n- [X] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [X] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [X] Ran `test-instrumentation-aws-lambda` environment tests, adding `test_links_from_lambda_event` and updating `test_parent_context_from_lambda_event`\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [X] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n- [X] Documentation has been updated\r\n",
    "head_branch": "lambda-span-link",
    "is_a_fork": true,
    "comments": [
      "Forgot to mention: This is to make the Lambda instrumentation line up with an update to the spec that should be merged soon https://github.com/open-telemetry/opentelemetry-specification/pull/3166",
      "yup, thanks @martinkuba I've updated the code to include the attribute",
      "@codeboten @martinkuba @ronyis PTAL"
    ],
    "commit_messages": [
      "update awslambda to use _X_AMZN_TRACE_ID as a Span Link (#1657)\n\nCo-authored-by: Ron Yishai <ronyish@cisco.com>\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>\r\nCo-authored-by: Shalev Roda <65566801+shalevr@users.noreply.github.com>\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621155bac254a19ac290b45",
    "number": 1656,
    "body": "# Description\r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python-contrib/issues/1506\r\n\r\nThe package confluent-kafka has a class Consumer, which has a method called commit (Ref: https://docs.confluent.io/platform/current/clients/confluent-kafka-python/html/index.html#confluent_kafka.Consumer.commit)\r\n\r\nThe package opentelemetry-instrumentation-confluent-kafka offers a wrapper around confluent-kafka's Consumer, called ProxiedConsumer. However ProxiedConsumer does not support `commit` method. This leads to an exception with the message \"Consumer closed\" when ProxiedConsumer.commit is called.\r\n\r\nThis PR fixes this by adding a method `commit` on ProxiedConsumer, which accepts the same args as confluent-kafka's Consumer's commit method and makes a call to that method.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPreviously calling `commit` on the ProxiedConsumer would lead to an exception. With the changes in this PR, calling `commit` ensures the message is committed since it calls the underlying Consumer's commit method.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "commit_consumer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add commit method for ConfluentKafkaInstrumentor's ProxiedConsumer (#1656)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621155cac254a19ac290b46",
    "number": 1655,
    "body": "# Description\r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python-contrib/issues/1364\r\n\r\nThe package confluent-kafka has a class `Producer`, with a method `produce`, which accepts headers as one of the parameters, and this `headers` parameter can be a list or a dict. (Ref: https://docs.confluent.io/platform/current/clients/confluent-kafka-python/html/index.html#confluent_kafka.Producer.produce)\r\n\r\nHowever, passing a dictionary of headers to Producer when using opentelemetry-instrumentation-confluent-kafka doesn't work, because the KafkaContextSetter's set method tries to append the headers assuming the carrier is a list.\r\n\r\nThis PR checks the carrier type, and appends the `(key, value)` tuple in case of a list, or adds the `key:value` to the dict in case the carrier is a dict.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- I was passing a dictionary of headers to the producer, earlier it used to crash since the code was calling `append` on a dict. With the changes in this PR it appends the header in case of a list, or adds the header to the existing dict as expected.\r\n- Added unit tests which test context_setter.set, and assert that the new headers get added to the carrier when it is a list and also when it is a dict.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "headers",
    "is_a_fork": true,
    "comments": [
      "Thank you for your contribution.\r\nDon't you need to change the KafkaContextGetter too?\r\nThe old implementation expect carrier to be a list\r\n",
      "Please add a changelog entry",
      "@shalevr thanks for reviewing!\r\n\r\n>Don't you need to change the KafkaContextGetter too?\r\nThe old implementation expect carrier to be a list\r\n\r\nSince the KafkaContextGetter is being used on `record.headers()` [here](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/df32e8ca7f91282846020f27e9a8d351510a7b25/instrumentation/opentelemetry-instrumentation-confluent-kafka/src/opentelemetry/instrumentation/confluent_kafka/__init__.py#L336), and the [headers method](https://docs.confluent.io/platform/current/clients/confluent-kafka-python/html/index.html#confluent_kafka.Message.headers) returns a list of `(key, value)` tuples, the `get` method is working on the list as expected, so I don't think we need to change it",
      "@srikanthccv I saw that you had approved the PR which then ran the workflows, but I had to make a change based on the lint output. I made that change and force pushed. Can you approve running the workflows on this again?",
      "@srikanthccv @shalevr thanks for rebasing with the latest main commits. Do you think we can now merge this PR? ",
      "It will be merged after it gets approvals, especially from the codeowner for the fixes.",
      "> @shalevr thanks for reviewing!\r\n> \r\n> > Don't you need to change the KafkaContextGetter too?\r\n> > The old implementation expect carrier to be a list\r\n> \r\n> Since the KafkaContextGetter is being used on `record.headers()` [here](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/df32e8ca7f91282846020f27e9a8d351510a7b25/instrumentation/opentelemetry-instrumentation-confluent-kafka/src/opentelemetry/instrumentation/confluent_kafka/__init__.py#L336), and the [headers method](https://docs.confluent.io/platform/current/clients/confluent-kafka-python/html/index.html#confluent_kafka.Message.headers) returns a list of `(key, value)` tuples, the `get` method is working on the list as expected, so I don't think we need to change it\r\n\r\nregarding this: The issue was only with the KafkaContextSetter.set, since it was being called on [headers which is passed](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/3bcc043e9dfc1b13421ff250fd941a40b306144d/instrumentation/opentelemetry-instrumentation-confluent-kafka/src/opentelemetry/instrumentation/confluent_kafka/__init__.py#L321) by the user and could be a dict or list. And KafkaContextGetter.get is only [being called on the output](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/3bcc043e9dfc1b13421ff250fd941a40b306144d/instrumentation/opentelemetry-instrumentation-confluent-kafka/src/opentelemetry/instrumentation/confluent_kafka/__init__.py#L340) of [record.headers() which always returns a list of tuples](https://docs.confluent.io/platform/current/clients/confluent-kafka-python/html/index.html#confluent_kafka.Message.headers), hence doesn’t need to check for a dict. But for consistency and to allow future use of this method on a dict and list, I’ve updated the get and keys method on KafkaContextGetter as well to handle both, a dict and list",
      "> It will be merged after it gets approvals, especially from the codeowner for the fixes.\r\n\r\n@srikanthccv okay thanks, who are the codeowners and can they be added to this PR’s reviewers list too? \r\n\r\n@shalevr since you first reviewed I've added a new commit, can you re-review to see if my changes/comments address your previous review comments? thanks",
      "No sure why actions didn't assign this author https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/.github/component_owners.yml#L27. \r\n\r\n\r\ncc @oxeye-dorkolog, @dorkolog",
      "@oxeye-dorkolog, @dorkolog another ping"
    ],
    "commit_messages": [
      "Allow Kafka producer headers to be dict or list (#1655)\n\n* Allow Kafka producer headers to be dict or list\r\n\r\n* modify kafka context getter helper methods to work on dict and list\r\n\r\n---------\r\n\r\nCo-authored-by: Shalev Roda <65566801+shalevr@users.noreply.github.com>\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621155dac254a19ac290b47",
    "number": 1654,
    "body": "# Description\r\nIn `opentelemetry.instrumentation.flask` record the thread ID in `_before_request` in addition to the span. Then in `_teardown_request` check that it's the same thread for that span before calling `activation.__exit__`\r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python-contrib/issues/1653\r\nFixes https://github.com/open-telemetry/opentelemetry-python-contrib/issues/1551\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\nThe bug is reproducible with this simple Flask app:\r\n```python3\r\nfrom concurrent.futures import ThreadPoolExecutor, as_completed\r\nfrom random import randint\r\n\r\nfrom flask import Flask, copy_current_request_context\r\n\r\nfrom opentelemetry.instrumentation.flask import FlaskInstrumentor\r\n\r\napp = Flask(__name__)\r\n\r\ndef do_random_stuff():\r\n    @copy_current_request_context\r\n    def inner():\r\n        return randint(0, 100)\r\n    return inner\r\n\r\n@app.route(\"/\")\r\ndef hello_world():\r\n    count = 4\r\n    executor = ThreadPoolExecutor(count)\r\n    futures = []\r\n    for _ in range(count):\r\n        futures.append(executor.submit(do_random_stuff()))\r\n\r\n    for future in as_completed(futures):\r\n        print(future.result())\r\n\r\n    return \"Hello, World!\"\r\n\r\nFlaskInstrumentor.instrument_app(app)\r\n```\r\nWhen run with `opentelemetry-instrument  --traces_exporter console --metrics_exporter console  flask run`  and accessed using HTTP it results in\r\n```File \"~/otelbug/env/lib/python3.9/site-packages/flask/ctx.py\", line 399, in pop\r\n    self.app.do_teardown_request(exc)\r\n  File \"~/otelbug/env/lib/python3.9/site-packages/flask/app.py\", line 2373, in do_teardown_request\r\n    self.ensure_sync(func)(exc)\r\n  File \"~/otelbug/env/lib/python3.9/site-packages/opentelemetry/instrumentation/flask/__init__.py\", line 441, in _teardown_request\r\n    activation.__exit__(None, None, None)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.9/lib/python3.9/contextlib.py\", line 126, in __exit__\r\n    next(self.gen)\r\nValueError: generator already executing\r\n```\r\n\r\nAfter the change, the issue no longer appears and the trace appears in the console.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix-flask-multithread-context-bug",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: hangonlyra  (de1d1b71f3675134e72204428fe4f3c792b70a49)</li></ul>",
      "Please add a changelog entry",
      "> Please add a changelog entry\r\n\r\nUpdated. Thanks for the help.",
      "I am not familiar with flask requests,\r\nIs there a legitimate way that the request starts with some thread and ends up in another thread?",
      "> I am not familiar with flask requests, Is there a legitimate way that the request starts with some thread and ends up in another thread?\r\n\r\nI can't think of any legitimate reason for that because it won't serve any useful purpose. It's definitely possible but it won't make any sense.",
      "@aabmass Good idea. Added new test case `TestMultiThreading.test_multithreaded`"
    ],
    "commit_messages": [
      "Fix issue with Flask instrumentation when a request spawn children threads and copies the request context (#1654)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621155eac254a19ac290b48",
    "number": 1650,
    "body": "# Description\r\n\r\nAdd a test for pymemcache instrumentation to ensure that NoOpTracerProvider works\r\n\r\nFixes #972 \r\n\r\n# How Has This Been Tested?\r\n\r\n- Instrument the library using a NoOpTracerProvider. the test validates that no spans are being produced.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- No.\r\n",
    "head_branch": "test_pymemcache_with_no_op_tracer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "add a test for pymemcache using NoOpTracerProvider (#1650)\n\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621155fac254a19ac290b49",
    "number": 1647,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (https://github.com/open-telemetry/opentelemetry-python-contrib/issues/1158)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "metrics-instrumentation-dbapi",
    "is_a_fork": true,
    "comments": [
      "@srikanthccv Do I add attributes of trace span to metrics attributes as dictionary or else use connection attributes? ",
      "You can use them as long as they are the same for both in the semantic convention spec."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211560ac254a19ac290b4a",
    "number": 1645,
    "body": "# Description\r\nAdd metrics instrumentation for sqlalchemy \r\n\r\nFixes #1143 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] tox -e test-instrumentation-sqlalchemy11\r\n- [x] tox -e test-instrumentation-sqlalchemy14\r\n\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "Metrics-instrumentation-sqlalchemy",
    "is_a_fork": true,
    "comments": [
      "> Did a firstpass review. Is it just the connection usage instrument that should be supported? Are there any other metrics expected?\r\n\r\nThe metrics instrumentation is implemented the same way for JS-contrib\r\nhttps://github.com/open-telemetry/opentelemetry-js-contrib/pull/1220\r\n",
      "Looks like that's what defined in the spec as well so it should be fine.",
      "Got some problems with the old functions. I am working on it in a separate PR",
      "> Got some problems with the old functions. I am working on it in a separate PR\r\n\r\nhttps://github.com/open-telemetry/opentelemetry-python-contrib/pull/1688"
    ],
    "commit_messages": [
      "Add metrics instrumentation sqlalchemy (#1645)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211560ac254a19ac290b4b",
    "number": 1620,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "mertics-instrumentation-dbapi",
    "is_a_fork": true,
    "comments": [
      "Fixes #1158 ",
      "@srikanthccv I will make changes as per your suggestions. I am going through document form here https://opentelemetry-python-contrib.readthedocs.io/en/latest/_modules/opentelemetry/instrumentation/flask.html#FlaskInstrumentor as reference.",
      "@srikanthccv Can you tell me that what to pass as metrics attributes? Do I pass span attributes or connection_attributes?\r\n",
      "@srikanthccv As I understood that from given code provides is integration of openTelemetry to trace and monitor database. trace_integration is function that integrates database with otel. The wrap_connect function wraps the connect method of the database to trace database connections. The unwrap_connect function unwraps the previously wrapped connect method. The instrument_connection function instruments an already established database connection to trace and monitor it.\r\nclass DatabaseApiIntegration used to wrap database connections, set connection attributes, and trace database. get_traced_connection_proxy function returns a wrapped connection object to be used for tracing. The code also uses a third-party library wrapt to wrap functions. so  Do I get attributes for metrics from connection_attributes to record in histogram? Can you help me in what to use. Thank you."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211561ac254a19ac290b4c",
    "number": 1619,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "metrics-instrumentation-pymysql",
    "is_a_fork": true,
    "comments": [
      "Fixes #1150 "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211562ac254a19ac290b4d",
    "number": 1618,
    "body": "We have exclude_lists via `OTEL_PYTHON_DJANGO_EXCLUDED_URLS` environment variable but not explicitly passed in through `instrument()`.",
    "head_branch": "exclude",
    "is_a_fork": true,
    "comments": [
      "Is there a test that moves excluded_urls directly to the instrumentation?"
    ],
    "commit_messages": [
      " Add ability to exclude some routes explicitly with Django Instrumentation (#1618)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211563ac254a19ac290b4e",
    "number": 1617,
    "body": "# Description\r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python-contrib/issues/1615\r\n\r\nUpon merging this PR, @shalevr will be added to GitHub contrib approvers team.\r\n\r\nSince some of the current approvers are not active anymore, following community guidelines, they are removed.\r\n>Expected to be responsive to review requests (inactivity for more than 1 month may result in suspension until active again)\r\n\r\nhttps://github.com/open-telemetry/community/blob/main/community-membership.md#approver. \r\n\r\nThank you, @owais @NathanielRN @ashu658, for your contributions. ",
    "head_branch": "add-shalev",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update README.md (#1617)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211564ac254a19ac290b4f",
    "number": 1616,
    "body": "Add test for elasticsearch using NoOpTracerProvider\r\n\r\nFixes #984 \r\n\r\n### How has this been tested?\r\ntox -e test-instrumentation-elasticsearch",
    "head_branch": "audit-and-test-opentelemetry-instrumentation-elasticsearch-no-op-tracer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Audit and test opentelemetry-instrumentation-elasticsearch NoOpTracer… (#1616)\n\n* Audit and test opentelemetry-instrumentation-elasticsearch NoOpTracerProvider\r\n\r\n* wip\r\n\r\n* wip\r\n\r\n* wip\r\n\r\n* wip\r\n\r\n* wip\r\n\r\n---------\r\n\r\nCo-authored-by: Shalev Roda <65566801+shalevr@users.noreply.github.com>\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211565ac254a19ac290b50",
    "number": 1614,
    "body": "Add test for flask using NoOpTracerProvider\r\n\r\nFixes #981 \r\n\r\n### How has this been tested?\r\ntox -e test-instrumentation-flask",
    "head_branch": "audit-and-test-opentelemetry-instrumentation-flask-no-op-tracer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Audit and test opentelemetry-instrumentation-flask NoOpTracerProvider (#1614)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211566ac254a19ac290b51",
    "number": 1613,
    "body": "Signed-off-by: Anthony J Mirabella <a9@aneurysm9.com>\r\n\r\n# Description\r\n\r\nFlushes the provided (or global) `MeterProvider` at the end of Lambda handler invocation.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- `tox -e py39-test-instrumentation-aws-lambda`\r\n- Build and deploy Lambda function with modified instrumentation library and validate metrics are flushed as expected \r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "feat/LambdaMetrics",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Flush meter provider at end of lambda function handler (#1613)\n\n* Flush meter provider at end of lambda function handler\r\n\r\nSigned-off-by: Anthony J Mirabella <a9@aneurysm9.com>\r\n\r\n* Update `force_flush()` check based on PR feedback\r\n\r\nSigned-off-by: Anthony J Mirabella <a9@aneurysm9.com>\r\n\r\n---------\r\n\r\nSigned-off-by: Anthony J Mirabella <a9@aneurysm9.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211567ac254a19ac290b52",
    "number": 1612,
    "body": "Add test for aiohttp-client using NoOpTracerProvider\r\n\r\nFixes #994  \r\n\r\n### How has this been tested?\r\ntox -e test-instrumentation-aiohttp-client",
    "head_branch": "audit-and-test-opentelemetry-instrumentation-aiohttp-client-no-op-tracer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Audit and test opentelemetry-instrumentation-aiohttp-client NoOpTrace… (#1612)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211567ac254a19ac290b53",
    "number": 1611,
    "body": "Add test for django using NoOpTracerProvider\r\n\r\nFixes #985 \r\n\r\n### How has this been tested?\r\ntox -e test-instrumentation-django1\r\ntox -e test-instrumentation-django2\r\ntox -e test-instrumentation-django3\r\ntox -e test-instrumentation-django4",
    "head_branch": "audit-and-test-opentelemetry-instrumentation-django-no-op-tracer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Audit and test opentelemetry-instrumentation-django NoOpTracerProvider (#1611)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211568ac254a19ac290b54",
    "number": 1610,
    "body": "Add test for wsgi using NoOpTracerProvider\r\n\r\nFixes #959 \r\n\r\n### How has this been tested?\r\ntox -e test-instrumentation-wsgi",
    "head_branch": "audit-and-test-opentelemetry-instrumentation-wsgi-no-op-tracer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Audit and test opentelemetry-instrumentation-wsgi NoOpTracerProvider (#1610)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211569ac254a19ac290b55",
    "number": 1609,
    "body": "# Description\r\n\r\nIn PR #1604 the Python version was upgraded to Python 3.10 to fix a local issue on M1 MacBooks.\r\n\r\nThe GitHub Action workflows now exit with the following message for the docker-tests, spellcheck and lint checks, skipping these checks.\r\n\r\n```\r\nlint create: /home/runner/work/opentelemetry-python-contrib/opentelemetry-python-contrib/.tox/lint\r\nSKIPPED: InterpreterNotFound: python3.10\r\n___________________________________ summary ____________________________________\r\nSKIPPED:  lint: InterpreterNotFound: python3.10\r\n  congratulations :)\r\n```\r\n\r\nUpgrade the Python version in the GitHub Actions workflow to fix this.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Running the CI in full\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n\r\n- [x] Followed the style guidelines of this project\r\n",
    "head_branch": "fix-github-actions",
    "is_a_fork": true,
    "comments": [
      "@ocelotl This seems important to fix the CI build :) ",
      "My bad. In YAML `3.10` != `\"3.10\"` and it failed on trying to install Python 3.1.",
      "Please retry the build :) Should work now 🤞 ",
      "Upgraded the dependencies that won't install on Python 3.10. Please retry the build again 😬 \r\n\r\nNote to self: Don't multi task multiple fixes. I had them already upgraded for another PR I wanted to make, to fix the local build on M1 MacBooks, but turns out it's needed for this PR as well.",
      "The changelog check failure is not something I can do anything about, I think? Does it need the \"skip changelog\" label?",
      "Please fix the lint\r\n",
      "I've fixed the issues that were merged into main. Let's merge this before more issues get merged into main.\r\n\r\nI ignored a couple issue flagged pylint because fixing those would actually mean changing the implementation of those methods. You can find them by looking for the `# noqa pylint` comments in my commit. ",
      "@srikanthccv the build passed! 🎉 ",
      "Thanks @tombruijn ",
      "Thanks for all the help @srikanthccv !"
    ],
    "commit_messages": [
      "Fix install of Python 3.10 on GitHub Actions (#1609)\n\n* Fix install of Python 3.10 on GitHub Actions\r\n\r\nIn PR #1604 the Python version was upgraded to Python 3.10 to fix a\r\nlocal issue on M1 MacBooks.\r\n\r\nThe GitHub Action workflows now exit with the following message for the\r\ndocker-tests, spellcheck and lint checks, skipping these checks.\r\n\r\n```\r\nlint create: /home/runner/work/opentelemetry-python-contrib/opentelemetry-python-contrib/.tox/lint\r\nSKIPPED: InterpreterNotFound: python3.10\r\n___________________________________ summary ____________________________________\r\nSKIPPED:  lint: InterpreterNotFound: python3.10\r\n  congratulations :)\r\n```\r\n\r\nUpgrade the Python version in the GitHub Actions workflow to fix this.\r\n\r\n* Fix YAML interpretation of Python 3.10\r\n\r\n* Upgrade Docker tests dependencies\r\n\r\nUpgrade the asyncpg and psycopg2 packages, they don't work on Python\r\n3.10.\r\n\r\nThis also fixes running these tests no M1 MacBooks.\r\n\r\n* Fix linter issues merged into main\r\n\r\nThey went unnoticed while the CI didn't fail on the lint task not\r\nworking.\r\n\r\n---------\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621156aac254a19ac290b56",
    "number": 1608,
    "body": "# Description\r\n\r\nThe connect span did not have the same attributes as other sqlalchemy spans. This MR adds the same connection attributes as the other spans extracted out of the connection url.\r\n\r\nRelated to #1134\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nI have updated the tests accordingly.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "sqlalchemy-connect",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: bschoenmaeckers / name: Bas Schoenmaeckers  (6603159387b0e5dd212fa0026036cc2563f11226)</li></ul>",
      "Please fix the changelog conflict",
      "Conflict fixed",
      "Fixed formatting. Please run checks again."
    ],
    "commit_messages": [
      "Add connection attributes to sqlalchemy connect span (#1608)\n\n* Add connection attributes to sqlalchemy connect span\r\n\r\n* Fix formatting\r\n\r\n* Move changelog entry to unreleased section\r\n\r\n---------\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>\r\nCo-authored-by: Shalev Roda <65566801+shalevr@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621156bac254a19ac290b57",
    "number": 1607,
    "body": "Add test for dbapi using NoOpTracerProvider\r\n\r\nFixes #986 \r\n\r\n### How has this been tested?\r\ntox -e test-instrumentation-dbapi",
    "head_branch": "audit-and-test-opentelemetry-instrumentation-dbapi-no-op-tracer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Audit and test opentelemetry-instrumentation-dbapi NoOpTracerProvider (#1607)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621156cac254a19ac290b58",
    "number": 1606,
    "body": "Add test for aiopg using NoOpTracerProvider\r\n\r\nFixes #993 \r\n\r\n### How has this been tested?\r\ntox -e test-instrumentation-aiopg",
    "head_branch": "audit-and-test-opentelemetry-instrumentation-aiopg-no-op-tracer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Audit and test opentelemetry-instrumentation-aiopg NoOpTracerProvider (#1606)\n\n* Audit and test opentelemetry-instrumentation-aiopg NoOpTracerProvider\r\n\r\n* Change line length\r\n\r\n---------\r\n\r\nCo-authored-by: Shalev Roda <65566801+shalevr@users.noreply.github.com>\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621156dac254a19ac290b59",
    "number": 1605,
    "body": "# Description\r\n\r\nVerify instrumentation support for aio-pika v8.\r\n\r\nFixes # (issue)\r\n\r\nN/a\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nUpdated tox.ini to run the tests on both v7 and v8 of the package. Tested manually as well.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "aio_pika_latest",
    "is_a_fork": true,
    "comments": [
      "There is already a PR for this https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1481.",
      "Thanks @srikanthccv . I've added my comments to that PR - I believe there's an issue there. "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621156eac254a19ac290b5a",
    "number": 1604,
    "body": "Fixes #1603",
    "head_branch": "issue_1603",
    "is_a_fork": false,
    "comments": [
      "@tombruijn",
      "Thank you @ocelotl! This fixed the linter locally for me."
    ],
    "commit_messages": [
      "Update some environments to 3.10 (#1604)\n\nFixes #1603"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621156fac254a19ac290b5b",
    "number": 1602,
    "body": "# Description\r\n\r\nAdd a test for aws lambda instrumentation to ensure that NoOpTracerProvider works\r\n\r\nFixes #990 \r\n\r\n# How Has This Been Tested?\r\n\r\n- Instrument the library using a NoOpTracerProvider. the test validates that no spans are being produced.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- No.\r\n",
    "head_branch": "test_aws_lambda_with_no_op_tracer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add a test for aws lambda using NoOpTracerProvider (#1602)\n\n* add a test for aws lambda using NoOpTracerProvider\r\n\r\n* fix import\r\n\r\n* add assert for spans\r\n\r\n---------\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211570ac254a19ac290b5c",
    "number": 1601,
    "body": "### Description\r\nEnable readthedocs auto-generated documentation to parse init.py doc\r\n[1496](https://github.com/open-telemetry/opentelemetry-python-contrib/issues/1496)\r\n### How Has This Been Tested?\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x]  tox -e docs\r\n\r\n### Does This PR Require a Core Repo Change?\r\n\r\n- [ ]  Yes. - Link to PR:\r\n- [x]  No.",
    "head_branch": "confluent-kafka-instrumentation-doc",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: Akochavi  (a5088b7b844c95ec8edbc762599808e8bcba1e08)</li></ul>"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211571ac254a19ac290b5d",
    "number": 1599,
    "body": "# Description\r\n\r\nAdds enhanced support for SQS by setting relevant span attributes, and injecting/extracting the trace context into/from the MessageAttributes of SQS messages.\r\n\r\nThis PR adds the same functionality to the `botocore` instrumentation that already exists in the [Node.Js AWS-SDK instrumentation](https://github.com/open-telemetry/opentelemetry-js-contrib/tree/main/plugins/node/opentelemetry-instrumentation-aws-sdk) and in the separate [boto3sqs instrumentation](https://github.com/open-telemetry/opentelemetry-python-contrib/tree/main/instrumentation/opentelemetry-instrumentation-boto3sqs) package.\r\n\r\nThe way how SQS processing spans are handled is different though between the `boto3sqs` instrumentation and the approach in this PR.\r\nThe `boto3sqs` instrumentation tries to automatically create the processing spans while the `Messages` list (the return value of the `sqs.receive_message` call) is iterated. This is rather error prone since e.g. the list might be iterated multiple times, and the processing spans are tracked by the instrumentation in a more or less global dictionary which might lead to memory leaks.\r\nSince for an instrumentation it is not reasonably possible to determine when to start/end a processing span, the automatic detection \"feature\" was not considered in this PR.\r\nInstead the instrumentation provides a context manager and a decorator that need to be added manually, which in turn create the processing span for a corresponding SQS message.\r\n\r\n## Type of change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nAdded multiple unit tests to verify span attributes and trace context propagation for SQS and also SNS to SQS scenarios.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "botocore-sqs",
    "is_a_fork": true,
    "comments": [
      "Hey @mariojonke, thanks for your contribution!\r\nWe actually already have a separate package for the SQS messaging under boto3, I see you have mentioned it in the PR description. If you believe it is prune to memory leaks or usage bugs, let's open an issue and fix that rather than creating another instrumentation for users to choose.\r\nCould you please create the issue describing what is the [instrumentation](https://github.com/open-telemetry/opentelemetry-python-contrib/tree/main/instrumentation/opentelemetry-instrumentation-boto3sqs) missing?",
      "Hi @oxeye-nikolay, i'm aware about the boto3sqs instrumentation which is currently a separate package that exists in parallel to the botocore instrumentation.\r\n\r\nThe reason for this PR is to integrate the functionality of the boto3sqs instrumentation into the botocore instrumentation. There are mainly two reasons for this:\r\n1. Currently there are two instrumentations that basically instrument the same thing. boto3sqs instruments SQS specific parts and the botocore instrumentation also already includes some limited SQS support by capturing certain attributes. When both instrumentations are active at the same time (e.g. wanting to trace SQS + some other AWS service) this will lead to double tracing for the operations that are instrumented by both instrumentations.\r\n2. Since the botocore instrumentation is the de-facto instrumentation for the Python AWS SDK (boto3/botocore) it makes it easier for users to require just a single package for everything AWS SDK related.\r\n\r\nRegarding the boto3sqs issues mentioned in the PR description, those are all about the handling of processing spans and should only point out why the approach taken in this PR is different to the implementation in the boto3sqs instrumentation.\r\n\r\nFrom what i saw while moving the bits over to the botocore instrumentation i think these issues cannot be or only partially be fixed from an instrumentation's point of view.\r\nThe start and end of a processing span depends on user code that is completely unknown to the instrumentation. The boto3sqs instrumentation tries to solve this by pre-starting the span for each message in the `sqs.receive_message` function and then activate the corresponding span when the user code iterates over or tries to get a message from the list of messages.\r\nThere are some issues with this approach:\r\n* since all processing spans are started in `sqs.receive_message` the timings of the spans do not match with the actual time when processing of a message starts.\r\n* to determine the end of a span the instrumentation relies that user code calls `sqs.delete_message` API. In case of an exception in the user code `delete_message` might never be called, leaving behind an unended span.\r\n* To correlate spans created in `receive_message` and `delete_message` the instrumentation keeps them in a 'global' dictionary identified by the message's `ReceiptHandle`. The `ReceiptHandle` (afaik) will be different on every `receive_message` call even if the ID of a message is the same. So if user code would raise an exception and `receive_message` would receive the same message again it would have a different `ReceiptHandle` leaving an orphaned entry in the 'global' dictionary with the previously created span. (This could probably be solved by a weakref dictionary).\r\n* multiprocessing, e.g. when `delete_message` / processing of a message happens in different process as `receive_message`.\r\n* user code might create a new list / dictionary from the list of received messages and iterate over this copy while processing SQS messages, which would bypass instrumented iterator of the original list.\r\n\r\nFrom this list, I don't think that it is possible to reliably implement an instrumentation that can automatically handle processing spans without the user code explicitly telling the instrumentation where processing of an SQS message starts / ends.\r\n",
      "Hey @mariojonke, thanks for answering!\r\nI agree with you. It isn't ideal that we have two separate instrumentations. We should unite them, however, as you said, the `boto3sqs` one instruments `boto3`, while the other one instruments `botocore`. This was raised when `boto3sqs` was in development and the maintainers agreed this was the best solution.\r\nRegarding the \"never closing process spans\" issues you have raised, this is a real problem. But this is also a problem that exists in SQS. In fact, if you don't send a \"delete_message\" API call, the message will remain in the queue (it has a serving timeout to prevent two handlers from handling it).\r\nThere are some other issues with the existing instrumentation that you have rightfully raised (like span timing and changing ReceiptHandle) that should be fixed. Please open an issue for them :)\r\nRegarding your solution - it is quite manual. I'm not sure we can expect the user to manually decorate each function just to continue the context propagation over the processing span. The `boto3sqs` supports auto-instrumentation, which is a requirement for the instrumentation modules (AFAIK).\r\n",
      "Actually `boto3` and `botocore` are two sides of the same coin. `botocore` is the base on which the `boto3` library is built upon (see [boto3 vs botocore](https://www.learnaws.org/2022/08/21/boto3-vs-botocore/), you could potentially even instrument the AWS CLI with the botocore instrumentation since according to this doc the AWS CLI also builds upon botocore).\r\nThis means that the botocore instrumentation also instruments boto3. I probably didn't explain it very well but i thought it was clear from the double tracing part (creating two similar spans for the same SQS operation) in my previous comment that the botocore instrumentation also does instrument boto3. \r\n\r\nI'm fully aware that the solution in this PR requires manual handling but imo this is the only option that reliably works. Trying to automatically derive when an SQS message is used by some user code (may it be by tracking the list iterator or some other means) is just an attempt to guess at what is happening. While it works in some cases there are (probably) many of other cases where it doesn't work. Imo, having an automatic instrumentation that works for x% of cases but produces incorrect results remaining % doesn't seem like a good solution, especially if the automatic creation of processing spans cannot be disabled.\r\n\r\nWrt to the mentioned issues in the `boto3sqs` instrumentation, i can create open an issue for them but i doubt that fixing it will solve the underlying problem that the automatic process span detection is just an heuristic that will work only for specific use cases."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211571ac254a19ac290b5e",
    "number": 1598,
    "body": "# Description\r\n\r\nAdded an optional query sanitizer to the elasticsearch instrumentation.\r\nUsage\r\nElasticsearchInstrumentor().instrument(sanitize_query=True)\r\n\r\nThis will affect the DB_STATEMENT value to contain the original query or sanitized one.\r\n\r\nFixes #1545 \r\nFollowing the specification discussion [here](https://github.com/open-telemetry/opentelemetry-specification/issues/3104)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Test A db.statement has been sanitized\r\n- [x] Test B no side affects occurred on a query without a db.statement attribute \r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "add/elasticsearch-sanitization",
    "is_a_fork": true,
    "comments": [
      "Can we use the same sanitization function for all of the db libraries?",
      "I think that this could be an option for all SQL-based DBs, but if we focus on \"specific sanitization\" for all DB libraries this has some potential to over complicated this issue",
      "LGTM",
      "FYI this does not work with the elasticsearch bulk API, see #1868"
    ],
    "commit_messages": [
      "add elasticsearch db.statement sanitization (#1598)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211572ac254a19ac290b5f",
    "number": 1594,
    "body": "# Description\r\n\r\nRemove the workflow temporarily",
    "head_branch": "remove-workflow",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove update-sha workflow (#1594)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211573ac254a19ac290b60",
    "number": 1592,
    "body": "# Description\r\n\r\nRan into this in the wild, `trace_configs` might be None.\r\n\r\n```\r\nfuture: <Task finished name='Task-1' coro=<Client.start() done, defined at /Users/---/.pyenv/versions/---/lib/python3.11/site-packages/discord/client.py:724> exception=TypeError(\"'NoneType' object is not iterable\")>\r\nTraceback (most recent call last):\r\n  File \"/Users/---/.pyenv/versions/---/lib/python3.11/site-packages/discord/client.py\", line 745, in start\r\n    await self.login(token)\r\n  File \"/Users/---/.pyenv/versions/---/lib/python3.11/site-packages/discord/client.py\", line 580, in login\r\n    data = await self.http.static_login(token)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/---/.pyenv/versions/---/lib/python3.11/site-packages/discord/http.py\", line 789, in static_login\r\n    self.__session = aiohttp.ClientSession(\r\n                     ^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/---/.pyenv/versions/---/lib/python3.11/site-packages/opentelemetry/instrumentation/aiohttp_client/__init__.py\", l\r\nine 283, in instrumented_init\r\n    client_trace_configs = list(kwargs.get(\"trace_configs\", ()))\r\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nTypeError: 'NoneType' object is not iterable\r\n```\r\n\r\n```\r\ntrace_configs is Optional[Sequence]\r\n\r\nNone -> kwargs.get(\"trace_configs\", ()) == None --> TypeError\r\n```\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "trace-configs-might-be-none",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: estheruary / name: Estelle Poulin  (8b9edd1d9b6601f1e2a8606079598a562d339b96)</li></ul>",
      "Please add CHANGELOG entry",
      "> Please add CHANGELOG entry\r\n\r\nDone!",
      "Thanks @estheruary for fixing my bug 🙏 "
    ],
    "commit_messages": [
      "Value of trace_configs might be None (#1592)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211574ac254a19ac290b61",
    "number": 1590,
    "body": "# Description\r\n\r\naio_pika tests aren't currently running on repo tests, this fix declare its environment\r\n\r\nFixes #1589\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] tox -e test-instrumentation-aio-pika\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n",
    "head_branch": "fix/aio_pika-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "add aio_pika to tox (#1590)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211575ac254a19ac290b62",
    "number": 1588,
    "body": "    ; // FIXME: Enable support for python 3.11 when https://github.com/confluentinc/confluent-kafka-python/issues/1452 is fixed\r\nThis line was wrongly commented\r\n\r\n# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python-contrib/issues/1587\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "tox",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Modified tox.ini to fix the comment line (#1588)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211576ac254a19ac290b63",
    "number": 1585,
    "body": "# Description\r\n\r\nFixing examples formating\r\n\r\nFixes: N/A\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nVia online RST editor: https://www.tutorialspoint.com/online_restructure_editor.php\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [X] Documentation has been updated\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "@jhutar can you check the docs job failure?",
      "Hello @srikanthccv . Hope it is better now."
    ],
    "commit_messages": [
      "[docs] Fixing examples formating (#1585)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211577ac254a19ac290b64",
    "number": 1584,
    "body": "# Description\r\n\r\nThis PR will create a resource module in contrib repo which will fetch the container.id from the docker container the application is running in and distribute it as span.resource.attributes[ResourceAttributes.CONTAINER_ID] = <container.id>.\r\nThis module can be used in two ways:\r\n- **Like SDK.** Use this module as a argument for Resource object while creating TracerProvider object like: \r\n`TracerProvider(resource=get_aggregated_resources=[ContainerResourceDetector()])`\r\n- **Automatically loaded when core repo load all installed modules:**\r\n      This will require core repo changes in SDK\r\n\r\nFixes #1372 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Test A: By providing unit test cases\r\n- [x] Test B: running the module and the app inside container and check if the span.resource has container.id as an attribute\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "sanketmehta28/issue1372",
    "is_a_fork": true,
    "comments": [
      "@open-telemetry/python-approvers : Please do review this PR and provide your comments",
      "Done",
      "@ocelotl : changes are done. Can you please provide your approval now?",
      "@sanketmehta28 @shalevr do you still have comments or can this PR be merged?",
      "> Did you mean to say this test should be sufficient for both versions? Why is there a different implementation for v1 and v2?\r\n\r\n@srikanthccv  Yes thats what I meant. ",
      "In order to correlate traces with container metrics in Datadog, we also need the container name. Here is my code on how to parse that: (Using the hostname doesn't work, as that would be the pod name in k8s)\r\n\r\n```python\r\ndef _get_container_name() -> Optional[str]:\r\n    try:\r\n        with open(_DEFAULT_CGROUP_V2_PATH, encoding=\"utf8\") as container_info_file:\r\n            for line in container_info_file.readlines():\r\n                if \"/containers/\" in line:\r\n                    parts = line.split(\"/\")\r\n                    return parts[parts.index(\"containers\") + 1]\r\n            else:\r\n                logger.warning(f\"Failed to find container name in {_DEFAULT_CGROUP_V2_PATH}.\")\r\n                return None\r\n    except (FileNotFoundError, IndexError) as exception:\r\n        logger.warning(\"Failed to get container name. Exception: %s\", exception)\r\n        return None\r\n```",
      "> ```python\r\n> try:\r\n>         with open(_DEFAULT_CGROUP_V2_PATH, encoding=\"utf8\") as container_info_file:\r\n>             for line in container_info_file.readlines():\r\n>                 if \"/containers/\" in line:\r\n>                     parts = line.split(\"/\")\r\n>                     return parts[parts.index(\"containers\") + 1]\r\n>             else:\r\n>                 logger.warning(f\"Failed to find container name in {_DEFAULT_CGROUP_V2_PATH}.\")\r\n>                 return None\r\n>     except (FileNotFoundError, IndexError) as exception:\r\n>         logger.warning(\"Failed to get container name. Exception: %s\", exception)\r\n>         return None\r\n> ```\r\n\r\nHi @nils-borrmann-y42 : I have tried this code, it gets container.id only as container_name. Here is the result:\r\n\r\n> ``` \"resource\": {\r\n>           \"attributes\": {\r\n>             \"telemetry.sdk.language\": \"python\",\r\n>             \"telemetry.sdk.name\": \"opentelemetry\",\r\n>             \"telemetry.sdk.version\": \"1.18.0.dev0\",\r\n>             \"service.name\": \"unknown_service\",\r\n>             \"container.id\": \"2ec1462029178dffd7a8a3f616edc026cae5a100ae4342825574e243de034518\",\r\n>             \"container.name\": \"2ec1462029178dffd7a8a3f616edc026cae5a100ae4342825574e243de034518\"\r\n>         },\r\n>         \"schema_url\": \"\"\r\n>     }\r\n\r\n\r\nIs there any way to fetch actual container.name from `mountinfo` or `cgroup` file instead of container.id? ",
      "> Is there any way to fetch actual container.name from mountinfo or cgroup file instead of container.id?\r\n\r\nCan't say. This works for me. Probably you're using a different kubernetes/docker version ...",
      "> > Is there any way to fetch actual container.name from mountinfo or cgroup file instead of container.id?\r\n> \r\n> Can't say. This works for me. Probably you're using a different kubernetes/docker version ...\r\n\r\nWhich kubernetes/docker version are you using @nils-borrmann-y42?\r\n\r\nAlso, can you please paste here the contents of your `proc/self/mountinfo` file where you found the container name?\r\n\r\nThanks!",
      "> > > Is there any way to fetch actual container.name from mountinfo or cgroup file instead of container.id?\r\n> > \r\n> > \r\n> > Can't say. This works for me. Probably you're using a different kubernetes/docker version ...\r\n> \r\n> Which kubernetes/docker version are you using @nils-borrmann-y42?\r\n> \r\n> Also, can you please paste here the contents of your `proc/self/mountinfo` file where you found the container name?\r\n> \r\n> Thanks!\r\n\r\n@nils-borrmann-y42 : Can you please reply here? ",
      "All the tests are passed.. @open-telemetry/python-approvers : Please do provide your approval",
      "I'm merging this PR, I think the container name can be added in a subsequent PR :+1: "
    ],
    "commit_messages": [
      "Resource detector for container properties (#1584)\n\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211578ac254a19ac290b65",
    "number": 1583,
    "body": "# Description\r\n\r\nCurrently, the `OpenTelemetryClientInterceptor` is based on an external implementation of grpc client interceptors whose source code lies in the package `grpcext`.\r\n\r\nTo support the official `grpc.UnaryUnaryClientInterceptor`-, `grpc.UnaryStreamClientInterceptor`-, `grpc.StreamUnaryClientInterceptor`-, and `grpc.StreamStreamClientInterceptor`-interface, which are supported officially in grpc since [v1.8.0](https://github.com/grpc/grpc/releases/tag/v1.8.0), the source code of the `_client.py`-module is adapted.\r\n\r\nHereby, the design of the `_client.py`-module orientates itself strongly on the design of the `_aio_client.py`-module. Thus, the external implementation of the grpc client interceptors can be removed (package `grpcext`). Also, the `RpcInfo`-class in the `utilities.py`-module is not required any more.\r\n \r\nThe `_aio_client.py`-module must be adapted so that the `_BaseAioClientInterceptor` becomes independent of the `_BaseClientInterceptor`.\r\n\r\nThe `test_client_interceptor_trace_context_propagation`-tests are adapted according to the same test in the `test_aio_client_interceptor.py`-module to remove the dependency on the external implementation of the grpc client interceptors, which are located in the package `grpcext`.\r\n\r\nThe documentation of the code in the `__init__.py` is adapted accordingly.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Run successfully ` tox -e test-instrumentation-grpc`.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [x] Documentation has been updated",
    "head_branch": "grpc_client_dev",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211579ac254a19ac290b66",
    "number": 1582,
    "body": "# Description\r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python-contrib/issues/737\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] `tox -e test-instrumentation-threading`\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "threading",
    "is_a_fork": true,
    "comments": [
      "You can add more tests. Some scenario for inspiration\r\n\r\n```\r\n1. threadA -> methodA -> threadB -> methodB\r\n\r\n```\r\n```\r\n                        / threadB -> methodB \r\n2. threadA -> methodA ->\r\n                        \\ threadC -> methodC\r\n```",
      "Thanks, @srikanthccv, I am on it.",
      "@srikanthccv What is the significance of Default Dependencies? Does it mean these instrumentations will be applied by default, be it  flask or any other instrumentation?\r\nhttps://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/opentelemetry-instrumentation/src/opentelemetry/instrumentation/bootstrap_gen.py#L168-L175",
      "Yes, The list of instrumentation can be installed without any third-party library as they are available from the Python standard library.",
      "[`lint`](https://github.com/open-telemetry/opentelemetry-python-contrib/actions/runs/4196358155/jobs/7277231165), and [`generate`](https://github.com/open-telemetry/opentelemetry-python-contrib/actions/runs/4196358155/jobs/7277231165) workflows are still failing. Please fix them and resolve conflicts and address remaining comments.",
      "- CHANGELOG in Unreleased section\r\n- Lint job failing\r\n- Generate job failing\r\n\r\nPlease make sure they all pass.",
      "Please do not force push; that makes it difficult for people to follow what new changes have been made. Please run tests once before pushing the changes to the remote.",
      "This is the last force push, as I had to revert a commit.",
      "The `lint` and `generate` jobs are failing. Please fix them.",
      "@srikanthccv Yep, fixing them. I had added a tool called trunk that triggered all the lint checks with even the smallest change in my editor causing my laptop to run out of memory; I was dealing with this issue for the past two days. Figured out last evening that trunk is causing this problem, I have now disabled and uninstalled it. Doing a final lint check today and pushing the final change.",
      "Let me know if you need any help.",
      "This is in good shape to merge. I will ask review from another approver and merge if they don't have any comments.",
      "Feel free to pick up any new issues if you are interested, I will be happy to help.",
      "Hello, \r\n\r\nI've encountered an issue when trying to instrument `threading.Thread`. Everything works fine until I try to use `threading.Timer`, which fails with a `TypeError`. I believe this is because `Timer` internally creates a new `Thread` which is not covered by the instrumentation.\r\n\r\nHere's the minimal code to reproduce the issue:\r\n\r\n```python\r\nfrom opentelemetry.instrumentation.threading import ThreadingInstrumentor\r\nimport threading\r\n\r\nThreadingInstrumentor().instrument()\r\n\r\ndef test():\r\n    pass\r\n\r\nthreading.Timer(0, test)  # Raises TypeError\r\n```\r\nAnd the error message:\r\n```bash\r\nTypeError: super(type, obj): obj must be an instance or subtype of type\r\n```\r\nI've tried to work around this by modifying the ThreadingInstrumentor to cover Timer as well, but this leads to other complications as Timer has a more complex implementation than Thread.\r\n\r\nIt would be great if the library could provide a way to instrument Timer without these issues, or at least document this limitation and provide some guidance on how to deal with it.\r\n\r\nThank you.",
      "@pridhi-arora are you still available to finish this PR?",
      "I cannot take this for next couple of months due to some other commitments. If this is urgent and somebody is willing to take this please take it. If not, I will be able to come back in 2 months or so. ",
      "If @pridhi-arora is unable to get this over the line, I'd be happy to take it on. This offers a fix for https://github.com/open-telemetry/opentelemetry-python-contrib/issues/298 which has been annoying us for a while.\r\n\r\nNice! I'll assign you :+1: ",
      "Superseded by #2253, closing."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211579ac254a19ac290b67",
    "number": 1581,
    "body": "Bug fix for sqlalchemy uninstrument, inside the EngineTracer we call listen on events but no one removes the event listeners after the uninstrument\r\n\r\nFixes #1163 \r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] tox -e test-instrumentation-sqlalchemy14\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n",
    "head_branch": "Fix-sqlalchemy-uninstrument",
    "is_a_fork": true,
    "comments": [
      "Will it work if you create the engine separately?\r\nlike this:\r\n```\r\nSQLAlchemyInstrumentor().instrument(enable_commenter=True)\r\nfrom sqlalchemy import create_engine\r\nengine = create_engine(\"sqlite:///:memory:\")\r\n```\r\n\r\nWhen you instrument like this the engine will not be saved as part of the instrumentation, and the engine wont be un-wrapped as well (I am not sure if this is a problem, just raising a discussion)\r\n\r\nThere are tests that create the engine separately, maybe you can check the uninstrument() on them ",
      "> Will it work if you create the engine separately? like this:\r\n> \r\n> ```\r\n> SQLAlchemyInstrumentor().instrument(enable_commenter=True)\r\n> from sqlalchemy import create_engine\r\n> engine = create_engine(\"sqlite:///:memory:\")\r\n> ```\r\n> \r\n> When you instrument like this the engine will not be saved as part of the instrumentation, and the engine wont be un-wrapped as well (I am not sure if this is a problem, just raising a discussion)\r\n> \r\n> There are tests that create the engine separately, maybe you can check the uninstrument() on them\r\n\r\n\r\n\r\nYou need to pass engine/engines to SQLAlchemyInstrumentor to create EngineTracer, if not there is no EngineTracer to create so my fix will not change anything",
      "> > Will it work if you create the engine separately? like this:\r\n> > ```\r\n> > SQLAlchemyInstrumentor().instrument(enable_commenter=True)\r\n> > from sqlalchemy import create_engine\r\n> > engine = create_engine(\"sqlite:///:memory:\")\r\n> > ```\r\n> > \r\n> > \r\n> >     \r\n> >       \r\n> >     \r\n> > \r\n> >       \r\n> >     \r\n> > \r\n> >     \r\n> >   \r\n> > When you instrument like this the engine will not be saved as part of the instrumentation, and the engine wont be un-wrapped as well (I am not sure if this is a problem, just raising a discussion)\r\n> > There are tests that create the engine separately, maybe you can check the uninstrument() on them\r\n> \r\n> You need to pass engine/engines to SQLAlchemyInstrumentor to create EngineTracer, if not there is no EngineTracer to create so my fix will not change anything\r\n\r\nNot necessarily, \r\nwhen you call `instrument()` you create wrappers for all the functions, including the `create_engine()` function,\r\nSo if you run the code like in my example, it will still be wrapped and work as intended - that's the reason that the engine is optional in `instrument()`\r\n",
      "> > > Will it work if you create the engine separately? like this:\r\n> > > ```\r\n> > > SQLAlchemyInstrumentor().instrument(enable_commenter=True)\r\n> > > from sqlalchemy import create_engine\r\n> > > engine = create_engine(\"sqlite:///:memory:\")\r\n> > > ```\r\n> > > \r\n> > > \r\n> > >     \r\n> > >       \r\n> > >     \r\n> > > \r\n> > >       \r\n> > >     \r\n> > > \r\n> > >     \r\n> > >   \r\n> > > When you instrument like this the engine will not be saved as part of the instrumentation, and the engine wont be un-wrapped as well (I am not sure if this is a problem, just raising a discussion)\r\n> > > There are tests that create the engine separately, maybe you can check the uninstrument() on them\r\n> > \r\n> > \r\n> > You need to pass engine/engines to SQLAlchemyInstrumentor to create EngineTracer, if not there is no EngineTracer to create so my fix will not change anything\r\n> \r\n> Not necessarily, when you call `instrument()` you create wrappers for all the functions, including the `create_engine()` function, So if you run the code like in my example, it will still be wrapped and work as intended - that's the reason that the engine is optional in `instrument()`\r\n\r\nYou are right the create engine wrapper creates EngineTracer and no one manages this instance, I will fix this",
      "I refactor the code so when EngineTracer registers to the event listener those params will be saved in list of tuples,\r\nso we will know how to remove them from event listeners when uninstument.\r\nand another test function was added for the case that create_engine called after the instrumentation\r\nIf the code is not clear enough let me know and I will document this change more\r\n",
      "> I refactor the code so when EngineTracer registers to the event listener those params will be saved in list of tuples, so we will know how to remove them from event listeners when uninstument. and another test function was added for the case that create_engine called after the instrumentation If the code is not clear enough let me know and I will document this change more\r\n\r\n@avzis @shalevr \r\n\r\nAs a user i didnt its not clear at all how SQLAlchemy Implementation actually works.\r\nwhy i can pass engine to the instrumentation if in any case *all my engines* will be instrumented ?\r\n<img width=\"720\" alt=\"image\" src=\"https://user-images.githubusercontent.com/116068589/213874323-738cc7c3-8033-4e42-94ce-eb5fec57be3f.png\">\r\n\r\nIts not related directly to your PR but it should be clear if SQLAlchemy Instrumentation will be created then all the created engines will be instrumented even if i specified what Engine to instrument .\r\n",
      "> > I refactor the code so when EngineTracer registers to the event listener those params will be saved in list of tuples, so we will know how to remove them from event listeners when uninstument. and another test function was added for the case that create_engine called after the instrumentation If the code is not clear enough let me know and I will document this change more\r\n> \r\n> @avzis @shalevr\r\n> \r\n> As a user i didnt its not clear at all how SQLAlchemy Implementation actually works. why i can pass engine to the instrumentation if in any case _all my engines_ will be instrumented ? <img alt=\"image\" width=\"720\" src=\"https://user-images.githubusercontent.com/116068589/213874323-738cc7c3-8033-4e42-94ce-eb5fec57be3f.png\">\r\n> \r\n> Its not related directly to your PR but it should be clear if SQLAlchemy Instrumentation will be created then all the created engines will be instrumented even if i specified what Engine to instrument .\r\n\r\nI agree with you It wasn't clear to me too, but @avzis is right it's possible to create an engine after sqlalchemy instrumentation, we don't want to miss engines that were created after the instrumentation.\r\n",
      "> Its not related directly to your PR but it should be clear if SQLAlchemy Instrumentation will be created then all the created engines will be instrumented even if i specified what Engine to instrument .\r\n\r\n@devopsmetis I agree that this is a weird behavior, \r\none thing I will mention, is that if you import the create_engine function before instrumenting, then it wont happen..\r\n\r\nAnd I also agree that this discussion is not related to this PR, if you think that it is problematic I suggest you open another issue and discuss it\r\n\r\n"
    ],
    "commit_messages": [
      "Fix sqlalchemy uninstrument (#1581)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621157aac254a19ac290b68",
    "number": 1580,
    "body": "# Description\r\n\r\nFixes #1437 \r\n\r\nThis is the contrib version of the core automated workflow https://github.com/open-telemetry/opentelemetry-python/pull/2649. The workflow files taken from the core PR are modified slightly to make them work with contrib. \r\n\r\n## Note\r\n\r\nThis needs a `BOT_TOKEN` similar to the core repo to work.\r\n\r\n\r\nI have verified these changes on my fork repo at https://github.com/srikanthccv/animated-octo-parakeet",
    "head_branch": "release-automation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Automated release workflow (#1580)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621157bac254a19ac290b69",
    "number": 1578,
    "body": "# Description\r\n\r\n`_OpenTelemetryServicerContext` aims to implement the abstract interface of `grpc.ServicerContext`.\r\n`grpc.ServicerContext` supports since grpcio *v1.38.0* ([s. here](https://github.com/grpc/grpc/commit/ff79a925ed0ceeeb2ec17c24108ebaa929a54ce3#diff-3fb08b8cbf0eddf0b675ae542e4d9b728370f0fb82572c400b32b73021a5bc6d)) a `code()` and `details()`-method to retrieve the currently set code/details in the servicer method.\r\nIn contrast, `_OpenTelemetryServicerContext` implements `code` and `details` as public attributes, which are not callable.\r\nConsequently, calling `code()` and `details()` in a servicer method will fail, when using `OpenTelemetry`, e.g.:\r\n\r\n```python\r\nclass Greeter(helloworld_pb2_grpc.GreeterServicer):\r\n\r\n    def SayHello(self, request, context):\r\n        print(\"code before: %r\" % context.code())  # ERROR\r\n        context.set_code(grpc.StatusCode.OK)\r\n        print(\"code after: %r\" % context.code())  # ERROR\r\n\r\n        print(\"details before: %r\" % context.details())  # ERROR\r\n        context.set_details(\"test\")\r\n        print(\"details after: %r\" % context.details())  # ERROR\r\n\r\n        return helloworld_pb2.HelloReply(message='Hello, %s!' % request.name)\r\n```\r\n\r\nwill raise an error.\r\n\r\nObviously, the `abc`-module of python allows this bug, since the `@abstractmethod`s `code()` and `details()` of `grpc.ServicerContext` have been overwritten by `_OpenTelemetryServicerContext`, although the abstract interface has not been implemented correctly.\r\n\r\n\r\nFixes (#855)\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nNot tested.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated",
    "head_branch": "grpc_server_dev_855",
    "is_a_fork": true,
    "comments": [
      "Was there ever a publicly accessible code and details attributes?",
      "As said in the PR, `grpc.ServicerContext` supports since grpcio *v1.38.0* ([s. here](https://github.com/grpc/grpc/commit/ff79a925ed0ceeeb2ec17c24108ebaa929a54ce3#diff-3fb08b8cbf0eddf0b675ae542e4d9b728370f0fb82572c400b32b73021a5bc6d)) a `code()` and `details()`-method to retrieve the currently-set code/details in the servicer method. Before, both methods did not exist in the public interface.\r\n\r\nAnd starting from the first non-beta version *v0.15* of grpc in python, the [internal implementation](https://github.com/grpc/grpc/blob/03efbd34ce64615f58007eae667b375accc6c8e6/src/python/grpcio/grpc/_server.py#L274) of the `grpc.ServicerContext` uses an internal/private `_RpcState`-object to manage the set code/details.\r\n\r\nConsequently, code- or details-attributes have never been publicly accessible."
    ],
    "commit_messages": [
      "bugfix(opentelemetry-instrumentation-grpc): Add code() and details() to ServicerContext (#1578)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621157cac254a19ac290b6a",
    "number": 1577,
    "body": "# Description\r\n\r\nDue to a [comment](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1574#discussion_r1068129310) raised by @mariojonke, fix the instantiation of NoOpTracerProvider in a few test cases.\r\n\r\nThis will make sure that the objects are being instantiated properly.\r\n",
    "head_branch": "fix_no_op_tracer_tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix the instantiation of NoOpTracerProvider (#1577)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621157dac254a19ac290b6b",
    "number": 1576,
    "body": "# Description\r\n\r\nAdded a query sanitizer to the Pymemcache instrumentation. \r\nDefault False, can be enabled with sanitize_query = True\r\n\r\nThis will allow users to sanitize the query.\r\n`PymemcacheInstrumentor().instrument(sanitize_query=True)`\r\n\r\nFixes #1546 \r\n\r\n# How Has This Been Tested?\r\n- [x] Original tests remained un-changed, and they will validate the original queries.\r\n- [x] Added a test that validates a sanitized query.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "pymemcache_query_sanitization",
    "is_a_fork": true,
    "comments": [
      "> > Until now the default behavior was to present the original query,\r\n> > and now the default behavior is to present a sanitized query.\r\n> \r\n> Is this generally the thing that users prefer?\r\n\r\nactually this is a good question, i opened an issue in the spec repository in order to clarify this:\r\nhttps://github.com/open-telemetry/opentelemetry-specification/issues/3104"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621157eac254a19ac290b6c",
    "number": 1575,
    "body": "# Description\r\nThe attribute `title` from `PydanticModel.Config` is optional, however, this instrumentation assumes that it will be present, which will raise an `AttributeError` when missing. To avoid forcing users to add the `title` attribute for all pydantic models, this PR adds the model name as the default title value.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Manual test\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix/add-default-value-if-title-doesnt-exists",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: fullonic / name: dbf  (c34b011e9b7f5e82d2a741a98e0f82a7daa70ff6)</li></ul>"
    ],
    "commit_messages": [
      "[TortoiseORM instrumentation] Fix `AttributeError: type object 'Config' has no attribute 'title'` (#1575)\n\n* Use pydantic model name as default `title` value\r\n\r\n* Update `CHANGELOG.md`\r\n\r\n* Format with black\r\n\r\n* Lint with `black`"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621157fac254a19ac290b6d",
    "number": 1574,
    "body": "# Description\r\n\r\nAdd a test for urllib3 instrumentation to ensure that NoOpTracerProvider works\r\n\r\nFixes #960 \r\n\r\n# How Has This Been Tested?\r\n\r\n- Instrument the library using a NoOpTracerProvider. the test validates that no spans are being produced.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- No.\r\n",
    "head_branch": "urllib3_no_op_tracer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "add a test for urllib3 using NoOpTracerProvider (#1574)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211580ac254a19ac290b6e",
    "number": 1573,
    "body": "# Description\r\n\r\n## Add tests for errors in Celery tasks\r\nI noticed there were no tests for the error scenario in the Celery\r\npackage. This commit adds a basic test, based on the previous test and\r\nhow I see other packages test the error status on the span.\r\n\r\nPart of https://github.com/open-telemetry/opentelemetry-python-contrib/issues/987\r\n\r\n## Record exception in Celery instrumentation\r\n\r\nIn addition to setting the status on the span, also record the exception\r\non the span. This adds an event to the span with more details about the\r\nerror, following the format other instrumentations also use.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] `tox -e test-instrumentation-celery`\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n",
    "head_branch": "celery-exception",
    "is_a_fork": true,
    "comments": [
      "Looking great!",
      "I'm pretty sure I fixed the lint failures. I can't reliably run the linter locally though to confirm.",
      "You can run just the python code formatter, it will fix most of the problems\r\n\"black --config pyproject.toml . \"",
      "Thanks! That's a lot quicker than running `tox -e lint`.\r\n\r\nDoes this PR also need an update to the docker-tests? Like you mentioned in the Redis query sanitization PR? https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1572#issuecomment-1383083900",
      "> Thanks! That's a lot quicker than running `tox -e lint`.\r\n> \r\n> Does this PR also need an update to the docker-tests? Like you mentioned in the Redis query sanitization PR? [#1572 (comment)](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1572#issuecomment-1383083900)\r\n\r\nThere is no need to add docket-tests in this case, In your last PR you changed the default behavior so you had to update all Redis tests(including the docker tests)",
      "Great! Then this PR is ready for review.",
      "@srikanthccv I've updated the PR to fix the failing CI. It's become of some dependency issue described in https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1573/commits/2888c12172024a764e246303d2fdc8bdb28529e4.\r\n\r\nI've moved the error test assertion to the functional tests so the build is green.\r\n\r\nCan you run the build again?",
      "@srikanthccv I'm learning a lot about what checks need to pass. (I can't run the tox lint task in its entirety locally (some C extension error), so it's process.) The flake8 output contains many issues that do not apply to this PR. I fixed what was related to the celery instrumentation. I hope that's enough. Please try the build again. I really hope it will now be green.",
      "If you think we can improve/document the steps based on your experience, please suggest them. We want our contributing experience to be better. Whenever I try to reproduce some of these things, I fail because sometimes the errors occur in specific env.",
      "@srikanthccv I asked for help on Slack and Diego was able to help out, resulting in PR #1604. I may send in a PR or two for other things I ran into.\r\n\r\nEdit: blocked on https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1609"
    ],
    "commit_messages": [
      "Record exception in Celery instrumentation (#1573)\n\n* Add tests for errors in Celery tasks\r\n\r\nI noticed there were no tests for the error scenario in the Celery\r\npackage. This commit adds a basic test, based on the previous test and\r\nhow I see other packages test the error status on the span.\r\n\r\nPart of #987\r\n\r\n* Record exception in Celery instrumentation\r\n\r\nIn addition to setting the status on the span, also record the exception\r\non the span. This adds an event to the span with more details about the\r\nerror, following the format other instrumentations also use.\r\n\r\n* Update CHANGELOG with Celery record exception\r\n\r\n* Fix lint code formatting issues\r\n\r\n* Move Celery error tests to the functional tests\r\n\r\nThe celery tests failed on Python 3.11. This is most likely due to this\r\nissue in billiard, a celery dependency, about it not working on Python\r\n3.11 because of the error reported in the CI:\r\nhttps://github.com/celery/billiard/issues/377\r\n\r\nIt's been fixed in billiard 4.1.0, but celery is locked on billiard\r\nversion lower than 4, so it cannot use this version with the fix.\r\n\r\nThis issue does not arise on the Docker tests, because they use Python\r\n3.9.16.\r\n\r\nI've moved the error test span event assertions to the error test that\r\nis available in the functional tests, and removed the unit test. That\r\nway, the build will run successfully.\r\n\r\n* Remove duplicate entry in changelog\r\n\r\nThis was added in a recent merge commit on this PR branch.\r\n\r\n* Remove unused test code\r\n\r\nWith the move of the tests for tasks with errors to the functional\r\ntests, remove the unit test's error task and unused imports.\r\n\r\n---------\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211580ac254a19ac290b6f",
    "number": 1572,
    "body": "# Description\r\n\r\nAdd a query sanitizer to the Redis instrumentation. This can be disabled\r\nwith the `sanitize_query = False` config option.\r\n\r\nGiven the query `SET key value`, the sanitized query becomes `SET ? ?`.\r\nBoth the keys and values are sanitized, as both can contain PII data.\r\n\r\nThe Redis queries are sanitized by default. This changes the default\r\nbehavior of this instrumentation. Previously it reported unsanitized\r\nRedis queries.\r\n\r\nThis was previously discussed in the previous implementation of this PR\r\nin PR #1571\r\n\r\nCloses #1548\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] `tox -e test-instrumentation-redis`\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "redis-query-sanitization",
    "is_a_fork": true,
    "comments": [
      "this looks great,\r\nwill solve #1548 ",
      "I fixed the lint issue that failed the build previously. I couldn't get the linter to run locally first, but I confirmed it now passes locally.",
      "I'm not sure why to change the default behavior, \r\nyou need to update the test here https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/tests/opentelemetry-docker-tests/tests/redis/test_redis_functional.py\r\nand other users have to change their code too or get different results than expected",
      "> I'm not sure why to change the default behavior,\r\n\r\nThis was briefly discussed in the previous implementation of this, in PR https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1571.\r\n\r\nI think sanitizing the query is a good default. It's better because users won't send any Personal Identifying Information by default, and need to explicitly enable full query reporting if they really need it.\r\n\r\n> you need to update the test here https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/tests/opentelemetry-docker-tests/tests/redis/test_redis_functional.py\r\nand other users have to change their code too or get different results than expected\r\n\r\nOkay, sounds good. I'm just running into another issue where I can't run this test suite. I'm getting connection issues for something. I'll have a look.",
      "@shalevr I've updated the functional tests, added new tests to test `sanitize_query=False` and made sure the `db.statement` is not longer than 1000 chars. Let me know what you think.",
      "@srikanthccv with the discussion about query sanitization by default ongoing in the [spec repo](https://github.com/open-telemetry/opentelemetry-specification/issues/3104), shall I change this PR to not sanitize the queries by default, but make the option available to sanitize query opt-in?\r\nThen we can merge this PR at least.",
      "Yes, please do.",
      "@srikanthccv I've changed the `sanitize_query` config option to be False by default and resolved the merge conflict with the main branch. Can you retry the build? (I ran the tests, black and flake8 locally, so they should be good.)",
      "@srikanthccv I pushed the fix for pylint issue.\r\n\r\n~I really hope it works now. I just cannot get it to fully run all linters locally.~ Works!\r\n"
    ],
    "commit_messages": [
      "Add Redis instrumentation query sanitization (#1572)\n\n* Add Redis instrumentation query sanitization\r\n\r\nAdd a query sanitizer to the Redis instrumentation. This can be disabled\r\nwith the `sanitize_query = False` config option.\r\n\r\nGiven the query `SET key value`, the sanitized query becomes `SET ? ?`.\r\nBoth the keys and values are sanitized, as both can contain PII data.\r\n\r\nThe Redis queries are sanitized by default. This changes the default\r\nbehavior of this instrumentation. Previously it reported unsanitized\r\nRedis queries.\r\n\r\nThis was previously discussed in the previous implementation of this PR\r\nin PR #1571\r\n\r\nCloses #1548\r\n\r\n* Update Redis sanitize_query option documentation\r\n\r\nChanges suggested in\r\nhttps://github.com/open-telemetry/opentelemetry-python-contrib/pull/1572#discussion_r1066069584\r\n\r\n* Remove uninstrument & instrument from test setup\r\n\r\nThe Redis test that performs the tests with the default options, doesn't\r\nneed to uninstrument and then instrument the instrumentor. This commit\r\nremoves the unnecessary setup code. The setup code is already present at\r\nthe top of the file.\r\n\r\n* Fix code style formatting\r\n\r\n* Update Redis functional tests\r\n\r\n- Update the sanitizer to also account for a max `db.statement`\r\n  attribute value length. No longer than 1000 characters.\r\n- Update the functional tests to assume the queries are sanitized by\r\n  default.\r\n- Add new tests that test the behavior with sanitization turned off.\r\n  Only for the tests in the first test class. I don't think it's needed\r\n  to duplicate this test for the clustered and async setup combinations.\r\n\r\n* Test Redis unsanitized queries by default\r\n\r\nChange the Redis functional tests so that they test the unsanitized\r\nquery by default, and test the sanitized query results in the separate\r\ntest functions.\r\n\r\nThis is a partial revert of the previous commit\r\n8d56c2f72e12c7d7dc4ef25a9fe6a69ea685a6d8\r\n\r\n* Fix formatting issue in Redis utils\r\n\r\n* Disable Redis query sanitization by default\r\n\r\nUpdate the Redis instrumentation library to not change the default\r\nbehavior for the Redis instrumentation. This can be enabled at a later\r\ntime when the spec discussion about this topic has concluded.\r\n\r\nhttps://github.com/open-telemetry/opentelemetry-specification/issues/3104\r\n\r\n* Fix pylint issue\r\n\r\nRemove else statement.\r\n\r\n* Update changelog about Redis query sanitization default\r\n\r\n[ci skip]\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>\r\n\r\n* Fix potential error on Redis args being 0\r\n\r\nCheck the length of the args array and return an empty string if there\r\nare no args.\r\n\r\nThat way it won't cause an IndexError if the args array is empty and it\r\ntries to fetch the first element, which should be the Redis command.\r\n\r\n---------\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211581ac254a19ac290b70",
    "number": 1571,
    "body": "# Description\r\n\r\nAdd user config function `db_statement_serializer` to allow users to sanitize queries set on the spans on the `db.statement` attribute.\r\n\r\nThis gives users a way to sanitize queries and not store any PII on the span.\r\n\r\nThis user function approach was chosen, because I've seen it in the Node.js OpenTelemetry instrumentation packages as well.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] `tox -e test-instrumentation-redis`\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "redis-db_statement_serializer",
    "is_a_fork": true,
    "comments": [
      "This will solve #1548 \r\n\r\nI saw that it is implemented in JS in this way, and the code is correct, but I wonder:\r\n\r\nIn this implementation the default behavior is that the data is presented (like it is currently),\r\nand I think that the default behavior should be to sanitize the data.\r\n\r\nAnother thing is, i think that requiring the user to write a sanitization function himself is quite complicated,\r\nwhy not just implement it as a boolean - either sanitize or not\r\n\r\nAnd if in the future there will be a need for specific sanitization function, we can add this functionality.",
      "@avzis I agree that expecting the user write something themselves is not great. It can easily break things.\r\n\r\nI can add the implementation that I documented as the one that's the default, and add it as a `sanitize_query: true` option (suggestions for better names are welcome).\r\n\r\nI can send in a new PR for that :)",
      "@tombruijn i think that it will be great :)",
      "@avzis I created a new PR in https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1572. Closing this one."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211582ac254a19ac290b71",
    "number": 1570,
    "body": "# Description\r\n\r\nRemoves labels as per the comment on https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1012#discussion_r843282052.\r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python-contrib/issues/1034\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "labels",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211583ac254a19ac290b72",
    "number": 1569,
    "body": "# Description\r\n\r\nTo help keeping dependencies up-to-date, this provides a script to generate the dependabot.yml config file. This allows to manage pip and github-actions package-ecosystems\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211584ac254a19ac290b73",
    "number": 1568,
    "body": "# Description\r\n\r\nContributes to https://github.com/open-telemetry/opentelemetry-python-contrib/issues/1437\r\n\r\n## Example usage \r\n\r\n```sh\r\npython scripts/update_sha.py --branch release/v1.15.x-0.36bx\r\n```",
    "head_branch": "update_sha",
    "is_a_fork": true,
    "comments": [
      "Superseded by #1580 "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211585ac254a19ac290b74",
    "number": 1565,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "metrics-instrumentation-pymysql",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211586ac254a19ac290b75",
    "number": 1564,
    "body": "# Description\r\nCurrently the duration calculation in the ASGI instrumentation fails if anything outside the `self.app` call raises an error because start will not have been instantiated.\r\n\r\nThis hides any instansation errors are actually occurring since they will be replaced by the `UnboundLocalError`\r\n\r\nThis PR moves the duration tracking into its own try/finally block so it will not be ran unless self.app was called.\r\n\r\nIt would have also been possible to set `start` to None at the top of the function and then have an if statement inside the finally block, however I decided that was too close to overloading the concept of the `start` variable as a `should record duration` control flow flag.\r\n\r\nThe actual issue is a unicode decoding error in the handling of headers, however since https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1492 potentially fixes this issue too I have restricted the scope of this PR to be focused on error propagation.\r\n\r\n\r\n\r\nFixes [(#1478)](https://github.com/open-telemetry/opentelemetry-python-contrib/issues/1478)\r\n\r\n## Type of change\r\n- [ x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nAdded new unit test (`test_failed_instrumentation_errors_propagate`) it currently uses the `server_request_hook` functionality to force an instrumentation error without relying on any specific bugs.\r\n\r\nThe test does also rely on setting self.communicator to None in order to prevent the error being re-raised in teardown, relevant code links:\r\n\r\nhttps://github.com/open-telemetry/opentelemetry-python/blob/b184dc95844561f0dce3f5c0a496bc89d0fb9a6d/tests/opentelemetry-test-utils/src/opentelemetry/test/asgitestutil.py#L38\r\n\r\nhttps://github.com/django/asgiref/blob/36022636d3390c1c1cbb952336a34d652a6bfb26/asgiref/testing.py#L8\r\n\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes.\r\n- [ x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix_unbound_local_error",
    "is_a_fork": true,
    "comments": [
      " <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/220524743/1564/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-not-signed.svg\" alt=\"CLA Not Signed\" align=\"left\" height=\"28\" width=\"328\"></a><br/><br /><ul><li><a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/220524743/1564/#/?version=2' target='_blank'>:x:</a> - login: @mike-baker-on / name: Mike Baker . The commit (0687b3b7c7c874bdbd0ebebcbbd97f4cddd64e97) is not authorized under a signed CLA. <a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/220524743/1564/#/?version=2' target='_blank'>Please click here to be authorized</a>. For further assistance with EasyCLA, <a href='https://jira.linuxfoundation.org/servicedesk/customer/portal/4' target='_blank'>please submit a support request ticket</a>.</li></ul>",
      "I guess this may be closed since #1889 is merged"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211587ac254a19ac290b76",
    "number": 1562,
    "body": null,
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: federicobond / name: Federico Bond  (32f6467837a30da599e26b8316ffd9b86e877dac)</li></ul>"
    ],
    "commit_messages": [
      "Fix typo in Django docs (#1562)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211588ac254a19ac290b77",
    "number": 1560,
    "body": "# Description\r\n\r\nAdd a test for urllib instrumentation to ensure that NoOpTracerProvider works\r\n\r\nFixes #961 \r\n\r\n# How Has This Been Tested?\r\n\r\n- Instrument the library using a NoOpTracerProvider. the test validates that no spans are being produced.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- No.\r\n",
    "head_branch": "urllib_no_op_tracer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "add a test for urllib using NoOpTracerProvider (#1560)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211589ac254a19ac290b78",
    "number": 1559,
    "body": "# Description\r\n\r\nAdd a test for redis instrumentation to ensure that NoOpTracerProvider works\r\n\r\nFixes #968 \r\n\r\n# How Has This Been Tested?\r\n\r\n- Instrument the library using a NoOpTracerProvider. the test validates that no spans are being produced.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- No.\r\n",
    "head_branch": "redis_no_op_tracer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "add a test for redis using NoOpTracerProvider (#1559)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211589ac254a19ac290b79",
    "number": 1558,
    "body": "Add uninstrument test for starlette\r\n\r\nFixes #1527 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] \r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] tox -e test-instrumentation-starlette\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Unit tests have been added\r\n\r\n",
    "head_branch": "Add-uninstrument-test-for-starlette",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add uninstrument test for starlette (#1558)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621158aac254a19ac290b7a",
    "number": 1557,
    "body": "# Description\r\n\r\nAdd uninstrument test for django\r\n\r\nPart of #1523 \r\n\r\n## Type of change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] tox -e test-instrumentation-django4\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Unit tests have been added\r\n",
    "head_branch": "Add-uninstrument-test-for-django",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add uninstrument test for django (#1557)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621158cac254a19ac290b7b",
    "number": 1555,
    "body": "According to the [specs](https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/semantic_conventions/database.md#call-level-attributes-for-specific-technologies) - \r\nmongodb should capture: \"The collection being accessed within the database stated in db.name.\"\r\nand save it in: `db.mongodb.collection`\r\n\r\nFixes #1539 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nAdded validation to the tests to verify that the property `db.mongodb.collection` is captured correctly\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n",
    "head_branch": "pymongo_capture_collection",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Pymongo capture collection name (#1555)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621158dac254a19ac290b7c",
    "number": 1553,
    "body": "# Description\r\nAdd metrics instrumentation for urllib accroding to https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/metrics/semantic_conventions/http-metrics.md#http-server\r\n\r\nFixes #1041\r\n\r\n## Type of change\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] tox -e test-instrumentation-urllib\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "Metric-instrumentation-Urllib",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add metric instrumentation for urllib (#1553)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621158eac254a19ac290b7d",
    "number": 1552,
    "body": "# Description\r\n\r\nEnable readthedocs auto-generated documentation to parse __init.py__ doc\r\nFixes #1498 \r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [X] tox -e docs\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n",
    "head_branch": "add/kafka-python-docs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "add python-kafka to docs (#1552)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621158fac254a19ac290b7e",
    "number": 1550,
    "body": "Fixes #1520 \r\n\r\n## Type of change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] tox -e test-instrumentation-boto3sqs\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Unit tests have been added\r\n\r\n",
    "head_branch": "Add-uninstrument-for-boto3sqs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add uninstrument test for boto3sqs (#1550)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211590ac254a19ac290b7f",
    "number": 1542,
    "body": "# Description\r\n\r\nEnable readthedocs auto-generated documentation to parse __init.py__ doc\r\nFixes #1497 \r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [X] tox -e docs\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n",
    "head_branch": "add/elastic-docs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "add elasticsearch to docs (#1542)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211590ac254a19ac290b80",
    "number": 1541,
    "body": "# Description\r\n\r\nEnable readthedocs auto-generated documentation to parse __init.py__ doc\r\nFixes #1502 \r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [X] tox -e docs\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n",
    "head_branch": "add/tortoiseorm-docs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "add tortoiseorm docs (#1541)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211591ac254a19ac290b81",
    "number": 1540,
    "body": "# Description\r\n\r\nEnable readthedocs auto-generated documentation to parse __init.py__ doc\r\nFixes #1499 \r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [X] tox -e docs\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n",
    "head_branch": "add/pika-docs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "add pika to docs (#1540)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211592ac254a19ac290b82",
    "number": 1538,
    "body": "support-sqs-parent-nesting\r\n\r\n# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "support-sqs-parent-nesting",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: jbasila-orca / name: John Basila  (be82ce7c14f227531b1d179f99be5ddf869719ae)</li></ul>",
      "@nikosokolik @oxeye-nikolay ping",
      "Hey @jbasila-orca, thanks for your contribution! Sorry for the delay.\r\n\r\nThis feature is not following the [OpenTelemetry messaging specifications](https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/semantic_conventions/messaging.md), therefore, I don't think this code should be added to the upstream.\r\n\r\n@open-telemetry/python-approvers WDYT?"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211593ac254a19ac290b83",
    "number": 1537,
    "body": "# Description\r\n\r\nAdd a test for pymongo instrumentation to ensure that NoOpTracer works\r\n\r\nFixes #971 \r\n\r\n# How Has This Been Tested?\r\n\r\n- Instrument the library using a NoOpTracer. the test validates that no spans are being produced.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- No.\r\n",
    "head_branch": "mongo-db-test-NoOpTracer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "add a test for pymongo with NoOpTracer (#1537)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211594ac254a19ac290b84",
    "number": 1536,
    "body": "Added entry to component_owners.yml for urllib3,\r\nI contributed the urllib3 metric instrumentation \r\n[#1198](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1198)",
    "head_branch": "Add-urllib3-instrumentation-component-owner",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add entry for  urllib3 instrumentation component owner (#1536)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211595ac254a19ac290b85",
    "number": 1535,
    "body": "I've noticed many instrumentations are missing from the readthedocs documentation. I add myself as the component owner for verifying new instrumentations are added and to keep a similar documentation structure. \r\nSee issue #1491 ",
    "head_branch": "add/docs-component-owner",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "add docs/instrumentation component owner (#1535)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211596ac254a19ac290b86",
    "number": 1534,
    "body": "# Description\r\n\r\nEnable readthedocs auto-generated documentation to parse __init.py__ doc\r\nFixes #1494 \r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [X] tox -e docs\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n",
    "head_branch": "add/aws-lamda-docs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add/aws lamda docs (#1534)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211597ac254a19ac290b87",
    "number": 1533,
    "body": "# Description\r\n\r\nAWS Managed Prometheus (https://aws.amazon.com/prometheus/) rely on SignV4 mechanism to authorise write\r\nThis change add the capability to add SignV4 headers to the post request\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [X] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n- [ ] Create an AWS Prometheus managed component\r\nModified the opentelemetry-python-contrib/exporter/opentelemetry-exporter-prometheus-remote-write/example/sampleapp.py script to push metrics to the write endpoint of the created AWS prometheus managed and enable aws_prometheus\r\n```\r\nexporter = PrometheusRemoteWriteMetricsExporter(\r\n    endpoint=\"https://aps-workspaces.eu-west-1.amazonaws.com/workspaces/ws-test/api/v1/remote_write\",\r\n    headers={\"X-Scope-Org-ID\": \"5\"},\r\n    aws_prometheus=True\r\n)\r\n```\r\nExecute this script with appropriate AWS credentials (right to push metrics to the AWS Prometheus)\r\nCheck metrics are well pushed to the AWS prometheus (without the `aws_prometheus=True` the client report 403 errors)\r\n\r\n- [ ] Rely on this updated exporter in some of our AWS lambda and AWS batch jobs pushing metrics to an AWS Prometheus managed component\r\nAgain check that metrics are well send to that component\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "export_aws",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: ashangit / name: Nicolas Fraison  (c8fee3a803ce7015575dcf9b50e0b792547f6e35)</li></ul>",
      "@Seefooo @aabmass could you take a look to this PR?",
      "I don't think we want to add this AWS specific implementation to this package. Create a new {...}-aws exporter subclassing."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211598ac254a19ac290b88",
    "number": 1530,
    "body": "# Description\r\n\r\nEnable readthedocs auto-generated documentation to parse __init.py__ doc\r\nFixes #1501 \r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [X] tox -e docs\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n",
    "head_branch": "add/system_metrics-docs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "auto generate system metrics docs (#1530)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211599ac254a19ac290b89",
    "number": 1528,
    "body": "Fixes #1524 \r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] tox -e test-instrumentation-remoulade\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "Add-uninstrument-test-for-remoulade-instrumentation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add uninstrument test for remoulade instrumentation (#1528)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621159aac254a19ac290b8a",
    "number": 1515,
    "body": "# Description\r\n\r\nEnable readthedocs auto-generated documentation to parse __init.py__ doc\r\nFixes #1500  \r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [X] tox -e docs\r\n- [X] tox -e lint \r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n",
    "head_branch": "add/remoulade-docs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add remoulade readthedocs documentation (#1515)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621159bac254a19ac290b8b",
    "number": 1513,
    "body": "Signed-off-by: Alex Boten <aboten@lightstep.com>\r\n",
    "head_branch": "codeboten/fix-broken-link",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[docs] fix broken link (#1513)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621159cac254a19ac290b8c",
    "number": 1512,
    "body": "# Description\r\nFix capturing the DB_STATEMENT parameter correctly in mongo db.\r\nAlso added an optional value to enable capturing the database statement that is being executed.\r\n\r\nFixes #1462 \r\n\r\n## Type of change\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] the tests now validates the db.statement for every type of request: find, update, delete, insert\r\n- [x] added a test that validates that db.statement is not being captured when 'capture_statement' is disabled\r\n\r\n# Does This PR Require a Core Repo Change?\r\n- [x] No.\r\n",
    "head_branch": "fix-db-statement-request-parameters",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "mongo db - fix db statement capturing (#1512)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621159cac254a19ac290b8d",
    "number": 1511,
    "body": "# Description\r\nAdded entry to component_owners.yml for tornado,\r\nI contributed the client + server metrics instrumentation for tornado\r\nhttps://github.com/open-telemetry/opentelemetry-python-contrib/pull/1252\r\n",
    "head_branch": "Add-entry-to-component-owners",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add entry to component_owners.yml (#1511)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621159dac254a19ac290b8e",
    "number": 1510,
    "body": "# Description\r\n\r\nEnable readthedocs auto-generated documentation to parse __init.py__ doc\r\nFixes #1503 \r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [X] tox -e docs\r\n- [X] tox -e lint \r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n",
    "head_branch": "add/urllib-documentation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add urllib readthedocs documentation (#1510)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621159eac254a19ac290b8f",
    "number": 1509,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "mongo-db-uninstrument-test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621159fac254a19ac290b90",
    "number": 1508,
    "body": "# Description\r\n\r\nAdd a test for sqlalchemy instrumentation to ensure that NoOpTracerProvider works\r\n\r\nFixes #965 \r\n\r\n# How Has This Been Tested?\r\n\r\n- Instrument the library using a NoOpTracerProvider. the test validates that no spans are being produced.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- No.\r\n",
    "head_branch": "test_sqlalchemy_no_op_tracer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "add a test using NoOpTracerProvider - sqlalchemy (#1508)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115a0ac254a19ac290b91",
    "number": 1507,
    "body": "# Description\r\n\r\nThe variable `OTEL_LAMBDA_DISABLE_AWS_CONTEXT_PROPAGATION` can be used to disable aws context propagation. This is similar to the proposed changes in the JS implementation: https://github.com/open-telemetry/opentelemetry-js-contrib/pull/1227\r\n\r\nSigned-off-by: Alex Boten <aboten@lightstep.com>\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "codeboten/envvar-disable-ctx-prop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Adds an option to configure `disable_aws_context_propagation` by environment variable (#1507)\n\n* Adds an option to configure `disable_aws_context_propagation` by environment variable\r\n\r\nThe variable `OTEL_LAMBDA_DISABLE_AWS_CONTEXT_PROPAGATION` can be used to disable aws context propagation. This is similar to the proposed changes in the JS implementation: https://github.com/open-telemetry/opentelemetry-js-contrib/pull/1227\r\n\r\nSigned-off-by: Alex Boten <aboten@lightstep.com>\r\n\r\n* update changelog\r\n\r\n* Apply suggestions from code review\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>\r\n\r\nSigned-off-by: Alex Boten <aboten@lightstep.com>\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115a1ac254a19ac290b92",
    "number": 1505,
    "body": "# Description\r\n\r\nAdd uninstrument test for aws lambda\r\n\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] tox -e test-instrumentation-aws-lambda\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Unit tests have been added\r\n",
    "head_branch": "Add-uninstrument-test-for-aws-lambda",
    "is_a_fork": true,
    "comments": [
      "I need \"skip changelog\" label"
    ],
    "commit_messages": [
      "Add uninstrument test for aws lambda (#1505)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115a2ac254a19ac290b93",
    "number": 1504,
    "body": "A PR for #1493 ",
    "head_branch": "add/aio_pika-readthedocs",
    "is_a_fork": true,
    "comments": [
      "Please add me a \"Skip Changelog\" label 🙏 ",
      "You can ignore the CI check if it's not required. The label will be added before merging or while review if PR doesn't require a CHANGELOG entry. "
    ],
    "commit_messages": [
      "Add aio_pika readthedocs documentation (#1504)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115a3ac254a19ac290b94",
    "number": 1492,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nThe change here is correcting the same as \r\nhttps://github.com/open-telemetry/opentelemetry-python-contrib/issues/1487\r\nand pull request\r\nhttps://github.com/open-telemetry/opentelemetry-python-contrib/pull/1435\r\nas well as partly correcting issues found here \r\nhttps://github.com/open-telemetry/opentelemetry-python-contrib/issues/1478\r\n\r\nFixes # (issue)\r\n1487\r\n1435\r\nStarts addressing 1478\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X ] Bug fix (non-breaking change which fixes an issue)\r\n\r\n\r\n# How Has This Been Tested?\r\nTest added to pull request,   Also tested within GCP using the GCP proprogators\r\n\r\n\r\n# Does This PR Require a Core Repo Change?\r\n- [x ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ X] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n- [ X] Documentation has been updated\r\n",
    "head_branch": "fix_keys_method",
    "is_a_fork": true,
    "comments": [
      " <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/220524743/1492/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-not-signed.svg\" alt=\"CLA Not Signed\" align=\"left\" height=\"28\" width=\"328\"></a><br/><br /><ul><li>:white_check_mark: login: srikanthccv / name: Srikanth Chekuri  (bf01666476feebab88b8a29e84caa16ed9e22180)</li><li><a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/220524743/1492/#/?version=2' target='_blank'>:x:</a> - login: @ncbraner . The commit (cb50873ecb3300f91fc2e6452111ab94596eea4e, d8f31dbd8d21239ce38067b47a65ad86320f2286) is not authorized under a signed CLA. <a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/220524743/1492/#/?version=2' target='_blank'>Please click here to be authorized</a>. For further assistance with EasyCLA, <a href='https://jira.linuxfoundation.org/servicedesk/customer/portal/4' target='_blank'>please submit a support request ticket</a>.</li></ul>",
      "You need to fix the lint\r\nif you need help with it feel free to ask"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115a4ac254a19ac290b95",
    "number": 1490,
    "body": "# Description\r\n\r\nAdd uninstrument test for Celery\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [X] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [X] tox -e test-instrumentation-celery \r\n\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [X] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix/test-celery-uninstrument",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "add uninstrument test for Celery (#1490)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115a5ac254a19ac290b96",
    "number": 1489,
    "body": "# Container detector module kubernetes properties \r\nWith this module customer can independently detect the k8s properties like pod.id as a part of span resource attributes and further can be used to correlate any problem with infra instrumentation\r\n\r\nFixes #1474 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [X] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] tox -e test-resource-detector-kubernetes\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "container-detector-kubernetes",
    "is_a_fork": true,
    "comments": [
      "I think this detector could have false-positives on container runtimes outside of Kubernetes. I would add a preliminary check whether the `/etc/hosts` file is managed by Kubernetes (see https://github.com/kubernetes/kubernetes/commit/fd72938dd569bd041f11a76eecfe9b8b4bcf5ae8), which is the only (mostly) reliable way I know to check whether a container runs on Kubernetes or not.",
      "Thanks for the info @mmanciop . Will be doing that in next commits.",
      "If it can help, I have a backport of this PR on https://github.com/lumigo-io/opentelemetry-python-distro/pull/226 (we are waiting to upgrade to a newer Otel SDK version by a bug on the MySQL instrumentation).",
      "hey @mmanciop are the following commit was merged in 2018 https://github.com/kubernetes/kubernetes/commit/fd72938dd569bd041f11a76eecfe9b8b4bcf5ae8 \r\nDo you have any idea for the versions before this ? for backward compatibilty",
      "> hey @mmanciop are the following commit was merged in 2018 [kubernetes/kubernetes@fd72938](https://github.com/kubernetes/kubernetes/commit/fd72938dd569bd041f11a76eecfe9b8b4bcf5ae8) Do you have any idea for the versions before this ? for backward compatibilty\r\n\r\nGitHub makes it easy to see in terms of tags:\r\n\r\n![Screenshot 2023-01-17 at 16 13 02](https://user-images.githubusercontent.com/14020598/212936153-cab4c3cc-73b2-41be-bdec-fd31a9dbc6eb.png)\r\n\r\nThe change shipped with `v1.11`. Before `v1.11`, I don't know of any method."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115a6ac254a19ac290b97",
    "number": 1488,
    "body": "# Add uninstrument test for boto\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] tox -e test-instrumentation-boto\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n",
    "head_branch": "Add-uninstrument-test-for-boto",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add uninstrument test for boto (#1488)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115a6ac254a19ac290b98",
    "number": 1485,
    "body": null,
    "head_branch": "bump-dev",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update version to 1.16.0.dev/0.37b0.dev (#1485)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115a8ac254a19ac290b99",
    "number": 1484,
    "body": null,
    "head_branch": "bump-dev",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115a8ac254a19ac290b9a",
    "number": 1482,
    "body": null,
    "head_branch": "release/1.15.0-0.36b0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "updating changelogs and version to 1.15.0-0.36b0 (#1482)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115a9ac254a19ac290b9b",
    "number": 1481,
    "body": "# Description\r\n\r\nI am using aio_pika 8.2 and otel currently cannot instrument it:\r\n\r\n![image](https://user-images.githubusercontent.com/684275/206765898-440d8dc3-6622-4b2f-a4a2-68a05a4f3d88.png)\r\n\r\nBriefly skimming [the 8.0.0 release notes](https://github.com/mosquito/aio-pika/blob/master/CHANGELOG.md#800) it doesn't seem like the breaking changes would affect instrumentation.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nI would like a bit more information on the right way to do this. Ideally I would like to emit tests for both aio_pika 7.x and 8.x. Tox is not exactly my forte and I'm not sure how to configure this to happen.\r\n\r\nThat said, since the dependency version is relaxed _theoretically_ the tests will run against 8.x. Need to figure out how to fully verify this (probably related to allowing 7.x and 8.x testing). \r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added - (yes but need an assist)\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "aiopika-8",
    "is_a_fork": true,
    "comments": [
      ">I would like a bit more information on the right way to do this. Ideally I would like to emit tests for both aio_pika 7.x and 8.x. Tox is not exactly my forte and I'm not sure how to configure this to happen.\r\n\r\n\r\nYou will define an env for each version and its corresponding deps. Please take a look at the tox file https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/tox.ini and how it is done for Django.",
      "@srikanthccv thanks for the tips! I added separate tox environments for 7 and 8 and iterated a bit on some of the differences in the implementations.\r\n\r\nThis is now ready for review.",
      "Ping @ofek1weiss as component owner and the original author.",
      "Another friendly ping",
      "Hey, sorry I missed the first ping\r\nIt looks like one of the checks failed :(\r\nOnce that is fixed everything looks good to me 👍",
      "Merging this as it got LGTM from the codeowners."
    ],
    "commit_messages": [
      "Support aio_pika 8.x (#1481)\n\n* Support aio_pika 8\r\n\r\n- Fix tests for new shape of the AbstractConnection class\r\n- Run tests against aio_pika 7 and 8\r\n\r\n* Update CHANGELOG.md\r\n\r\n---------\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115aaac254a19ac290b9c",
    "number": 1480,
    "body": null,
    "head_branch": "pin-tox",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Pin tox version (#1480)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115abac254a19ac290b9d",
    "number": 1476,
    "body": "# Description\r\n\r\nSupport request/response hooks for the aws-lambda instrumentation. Similar hooks are available in the node.js instrumentation - see https://github.com/open-telemetry/opentelemetry-js-contrib/tree/main/plugins/node/opentelemetry-instrumentation-aws-lambda#aws-lambda-instrumentation-options.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nUnit tests were added.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "add_lambda_hooks",
    "is_a_fork": true,
    "comments": [
      "Hi, this looks great, we could use this as well. @shalevr Seems that all comments were resolved, is there anything missing still?",
      "@Aneurysm9 I've commented on the ticket - https://github.com/open-telemetry/opentelemetry-specification/issues/3042#issuecomment-1384964399",
      "Hi @Aneurysm9, was this issue reviewed in the standardization discussions in the FAAS SIG? If not, can anything be done to promote that? Thanks!",
      "I have added this item to the agenda for the 2023-02-21 meeting.",
      "Thanks @Aneurysm9 ! ",
      "Hi @Aneurysm9, could you please share an update on what was discussed in the last meeting? Thanks!",
      "Meeting notes can be [found here](https://docs.google.com/document/d/187XYoQcXQ9JxS_5v2wvZ0NEysaJ02xoOYNXj08pT0zc/edit#heading=h.w0bc5a8eac74).\r\n\r\nThe recommendation was to use a SpanProcessor for pre- and post-hooks.  Please let the group know (via #otel-faas on CNCF slack or issue in [open-telemetry/opentelemetry-lambda](https://github.com/open-telemetry/opentelemetry-lambda)) if this is not a viable approach. ",
      "> Meeting notes can be [found here](https://docs.google.com/document/d/187XYoQcXQ9JxS_5v2wvZ0NEysaJ02xoOYNXj08pT0zc/edit#heading=h.w0bc5a8eac74).\r\n> \r\n> The recommendation was to use a SpanProcessor for pre- and post-hooks. Please let the group know (via #otel-faas on CNCF slack or issue in [open-telemetry/opentelemetry-lambda](https://github.com/open-telemetry/opentelemetry-lambda)) if this is not a viable approach.\r\n\r\n@Aneurysm9 @nozik Is this PR still valid? @nozik please close if it is not.",
      "@ocelotl @Aneurysm9 I've closed the PR, but I'd appreciate your help with understanding the new suggested approach for implementing these hooks, as described in the meeting.",
      "Hi @nozik \r\nSince the pr is closed, is there work currently being done on another issue around lambda hook?",
      "@guyfrid Currently not - I'm waiting for more data on the suggested new approach. We've continued the discussion over Slack"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115acac254a19ac290b9e",
    "number": 1473,
    "body": "Fixes #1421 ",
    "head_branch": "fix/aiopg-version",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix aiopg version (#1473)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115adac254a19ac290b9f",
    "number": 1471,
    "body": "# Description\r\nAdd uninstrument test for sqlalchemy\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] tox -e test-instrumentation-sqlalchemy14\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "Add-uninstrument-test-for-sqlalchemy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add uninstrument test for sqlalchemy (#1471)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115aeac254a19ac290ba0",
    "number": 1470,
    "body": "Fixes #1469",
    "head_branch": "issue_1469",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Refactor comments in .flake8 (#1470)\n\nFixes #1469"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115afac254a19ac290ba1",
    "number": 1468,
    "body": "# Description\r\n\r\nThe latest confluent-kafka version is 1.9.2, which is not being instrumented due to the current restricted version.\r\n\r\nThis change increases the confluent-kafka version check to also instrument versions greater or equal to 1.9.0.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nRan the existing unit tests with the changes and it passed. To make sure the\r\ntests were running with the latest confluent-kafka version also hardcoded the\r\n`1.9.2` version in the requirements and ran the test suite again and the test\r\npassed.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "instrument-newer-versions",
    "is_a_fork": true,
    "comments": [
      "Looks like confluent-kafka is still not supported directly on python 3.11 https://github.com/confluentinc/confluent-kafka-python/issues/1452 which causes the tests to fail\r\n\r\nHow should we proceed?",
      "You can skip the tests on 3.11 and add a FIXME note.",
      "@srikanthccv I think the last change was enough to disable the tests for 3.11 and pypy ([which is not supported and never will be](https://github.com/confluentinc/confluent-kafka-python/issues/298)).\r\n"
    ],
    "commit_messages": [
      "Instrument newer versions (#1468)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115b0ac254a19ac290ba2",
    "number": 1466,
    "body": "# Description\r\n\r\nAdding the following option to disable context propagation `disable_aws_context_propagation`. This is similar to the disableAwsContextPropagation option in the nodejs instrumentation.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added unit tests\r\n- [x] Manually tested with custom lambda\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "codeboten/add-disable-aws-context-propagation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "`opentelemetry-instrumentation-aws-lambda`: Adding option to disable context propagation (#1466)\n\n* `opentelemetry-instrumentation-aws-lambda`: Adding option to disable context propagation\r\n\r\nAdding the following option to disable context propagation `disable_aws_context_propagation`. This is similar to the disableAwsContextPropagation option in the nodejs instrumentation.\r\n\r\n* update changelog\r\n\r\n* lint\r\n\r\n* more lint"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115b1ac254a19ac290ba3",
    "number": 1464,
    "body": "# Description\r\n\r\nThis PR updates the usage of set-output command in GH actions.\r\n\r\nReference : https://github.blog/changelog/2022-10-11-github-actions-deprecating-save-state-and-set-output-commands/\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\nChangeLog entry is not required",
    "head_branch": "set-output",
    "is_a_fork": true,
    "comments": [
      "@vasireddy99 please update this branch with `main`."
    ],
    "commit_messages": [
      "Update the usage of set-output command in GH actions (#1464)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115b2ac254a19ac290ba4",
    "number": 1461,
    "body": "# Description\r\nThere was a mistake in the original strategy to extract the feature, as before running the framework the scope does not have all the information necessary to deduct the route.\r\n\r\nWe move the target extraction after running the framewrork function, but that means that we won't have those attributes for the span or for the active_requests metrics. The target will be available only for the duration metric.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- Added a print statement to the middleware that prints `duration_attrs` just before sending the metric.\r\n- Changed unit test to reflect the fact that the scope changes after running the framework function.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix/asgi_target",
    "is_a_fork": true,
    "comments": [
      "@srikanthccv ",
      "@srikanthccv sorry for the delay, tests are finally fixed."
    ],
    "commit_messages": [
      "fix(asgi-instrumentation): extract target after running the framework (#1461)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115b3ac254a19ac290ba5",
    "number": 1460,
    "body": "Fixes #1459",
    "head_branch": "issue_1459",
    "is_a_fork": true,
    "comments": [
      "> Can we leave #1459 open until we actually fix the instrumentation to work with that version?\r\n\r\nOpened #1463 :v:",
      "@lzchen @ocelotl this is the 2nd time a version change like this has bit me, the first one being changed FastAPI requirements. I think that these need to be highlighted much more explicitly in new releases of the otel instrumentation since there is no other way to notify downstream users.\r\n\r\nIn my case, I am using httpx 0.23.3 and requests were being instrumented ok, but then this version changed and now httpx is silently uninstrumented. I don't configure instrumentation dependencies explicitly as I instead pull in everything via the `opentelemetry-instrumentations` package.\r\n\r\nCould we get some better messaging around when these version requirements change between releases? I'm not sure what the right process is but silently failing can be very frustrating as often you don't realize it until you go and look for the data and it's not there.",
      "I added more color to a first-class issue report at #1745"
    ],
    "commit_messages": [
      "Fix httpx version (#1460)\n\nFixes #1459"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115b4ac254a19ac290ba6",
    "number": 1456,
    "body": "- Ensure we wrap data_points so we don't assume `Iterator` traits\r\n\r\n# Description\r\n\r\nIn the course of resolving https://github.com/open-telemetry/opentelemetry-python/pull/3035 it turned out that these tests were making some assumptions about the `data_points` property that are not supported by the current type annotations (although the implementation happens to).\r\n\r\n\r\nFixes #1455\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nThis is a test-only issue for the sake of compatibility.\r\n\r\n# Does This PR Require a Core Repo Change?\r\nShould be forward-compatible with the related Core PR\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "1455-tornado-test-futureproof",
    "is_a_fork": true,
    "comments": [
      "Looks like https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1460 is going to take care of these test failures."
    ],
    "commit_messages": [
      "Fix 1455: Protect from raw next() calls (#1456)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115b5ac254a19ac290ba7",
    "number": 1445,
    "body": "Fixes #1426",
    "head_branch": "issue_1426",
    "is_a_fork": true,
    "comments": [
      "Should `eachdist` itself also go?",
      "> Should `eachdist` itself also go?\r\n\r\nNo, we still use it for non-user facing tasks."
    ],
    "commit_messages": [
      "Remove mention to eachdist (#1445)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115b6ac254a19ac290ba8",
    "number": 1442,
    "body": "# Description\r\n\r\nPR #1245 added grpc.aio instrumentation. It included the auto instrumentor for grpc.aio but did not include the entry-points hook for it to be run automatically on boot.\r\n\r\nCurrently, you need to manually include the instrumentor and call it. This makes that automatic and in line with the plain grpc instrumentation.\r\n\r\nFixes no-issue (but can raise one if needed)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nIt hasn't been tested because I'm unsure how. I'd presumably need to build a dev version and package it to an app but given the simplicity of the change, I'm hoping it's fine. \r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "auto-instrument-grpc-aio",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add grpc.aio instrumentation to be auto-instrumented (#1442)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115b7ac254a19ac290ba9",
    "number": 1441,
    "body": "# Description\r\n\r\nExample run where if fails https://github.com/open-telemetry/opentelemetry-python-contrib/actions/runs/3464839503/jobs/5786861818",
    "head_branch": "starlette-test-client",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix: No module named httpx (#1441)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115b7ac254a19ac290baa",
    "number": 1440,
    "body": "# Description\r\n\r\nFix enable_commenter functionality.\r\nFixes #1368 \r\n\r\nNow you can either:\r\n1. call instrument with an existing engine, and enable or disable sql commenter with the `enable_commenter` param,\r\nlike this: \r\n```\r\nSQLAlchemyInstrumentor().instrument(\r\n    engine=engine,\r\n    enable_commenter=True,\r\n)\r\n```\r\n2. call instrument without an engine, and create it separately, \r\n**note**: it is important to import the `create_engine` function **after** calling `instrument()`:\r\n```\r\nSQLAlchemyInstrumentor().instrument(enable_commenter=True)\r\nfrom sqlalchemy import create_engine\r\nengine = create_engine(\"sqlite:///:memory:\")\r\n```\r\n\r\n\r\n## Type of change\r\nBug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nNow the tests are covering all 4 cases: \r\nsqlcommenter enabled and disabled, both when instrumenting with engine, and when creating the engine after instrumentation.\r\n\r\n- `test_sqlcommenter_disabled()`\r\n- `test_sqlcommenter_enabled()`\r\n- `test_sqlcommenter_enabled_create_engine_after_instrumentation()`\r\n- `test_sqlcommenter_disabled_create_engine_after_instrumentation()`\r\n\r\n\r\n# Does This PR Require a Core Repo Change?\r\nNo.\r\n",
    "head_branch": "fix-enable_commenter-in-sql-alchemy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix enable_commenter functionality (#1440)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115b8ac254a19ac290bab",
    "number": 1439,
    "body": "# Description\r\n\r\nClasses inheriting from `BaseInstrumentor` class are singletons tracked by `_instance` attribute and this piece of code\r\n\r\n```\r\n    def __new__(cls, *args, **kwargs):\r\n        if cls._instance is None:\r\n            cls._instance = object.__new__(cls, *args, **kwargs)\r\n```\r\n\r\nIf an instrumentor child class with parameters, e.g. `SystemMetricsInstrumentor` is initialized first, then these parameters are also passed to `object.__new__` which results in an error as in #1438.\r\n\r\n```\r\n# This works\r\nSystemMetricsInstrumentor()\r\nSystemMetricsInstrumentor(config={})\r\n```\r\n\r\n```\r\n# This does not\r\nSystemMetricsInstrumentor(config={})\r\nSystemMetricsInstrumentor()\r\n```\r\n\r\nGiven [the answers in this SO question](\r\nhttps://stackoverflow.com/questions/59217884/new-method-giving-error-object-new-takes-exactly-one-argument-the-typ), I am inclined to think that it's not needed to pass arguments to `object.__new__` and they can be safely removed. Those arguments will still end up in the `__init__` call.\r\n\r\nFixes #1438\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [X] Added a unit test in system metrics to reproduce the issue (this requires singleton class to be reset during test run)\r\n- [X] Additional tests were ran with `tox`for multiple other instrumented packages\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "Nice, please add another test case, one that pretty much does this and checks no exception is raised:\r\n\r\n``` python\r\ndef test_some_test_case_name(self):\r\n    try:\r\n        SystemMetricsInstrumentor()\r\n        SystemMetricsInstrumentor(config={})\r\n    except Exception as error:\r\n        self.fail(f\"Unexpected exception {error} raised\")\r\n    # do any necessary resetting\r\n        try:\r\n        SystemMetricsInstrumentor()\r\n        SystemMetricsInstrumentor(config={})\r\n    except Exception as error:\r\n        self.fail(f\"Unexpected exception {error} raised\")\r\n```\r\n\r\n",
      "I added an extra case as per @ocelotl request. I assumed he meant the init order should be inverted in the second case. :wink:  ",
      "> I added an extra case as per @ocelotl request. I assumed he meant the init order should be inverted in the second case. wink\r\n\r\nright! :sweat_smile: some tests are failing, please take a look",
      "All failing tests I've checked were related to #1460. Now that it got merged, I think it should be alright.",
      "Both failing jobs failed due to some issue with `git` itself. Is it possible to re-run just those two?\r\n\r\n```\r\n/usr/bin/git -c protocol.version=2 fetch --no-tags --prune --progress --no-recurse-submodules --depth=1 origin +95327fbe060f4136c197c59869fb13484d3b77c8:refs/remotes/pull/1439/merge\r\nError: fatal: protocol error: bad pack header\r\nError: The process '/usr/bin/git' failed with exit code 128\r\n```",
      ">Both failing jobs failed due to some issue with git itself. Is it possible to re-run just those two?\r\n\r\nThis should be fine now.",
      "@ocelotl PTAL",
      "@ocelotl @srikanthccv Linting failed due to a style change in `black`. I think I got it fixed so if possible to get this merged before they update it again, it'd be great. :)",
      "@ocelotl PTAL"
    ],
    "commit_messages": [
      "Remove custom arguments in object.__new__ of BaseInstrumentor (#1439)\n\n* Add a test case to reproduce the issue\r\n\r\n* Fix the class initialization when parameters are provided\r\n\r\n* Update CHANGELOG.md\r\n\r\n* Fix linting issues\r\n\r\n* Additional test case which inits SystemMetricsInstrumentor twice\r\n\r\n* Updated linting following update to black style\r\n\r\n* Moved changelog entry to unreleased section\r\n\r\n---------\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115b9ac254a19ac290bac",
    "number": 1436,
    "body": "Unfortunately I made a mistake in https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1323 where I assumed that the scope was laready being processed by the framework at the moment of reporting, but of course that's not true as the framework has not even seen the request at that point.\r\n\r\nIs for that reason that we are not able to extract any route information in the middleware to report what the target is.\r\n\r\nSorry for the noise, and be happy to help if anyone has any idea how we could fix this.\r\n\r\n# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "chore/revert1323",
    "is_a_fork": true,
    "comments": [
      "@srikanthccv could you please take a look",
      "This is not breaking anything, right? It's just that target is not collected. I am not super familiar with this instrumentation, but if it's not breaking anything, we can spend some time and get the correct fix merged instead of reverting it.",
      "@srikanthccv sounds good, I think I have found the way to fix it. Thanks for suggesting it. Will send a PR for that shortly.",
      "> t able to extract any route information in the middleware to report\r\n\r\n@sk Is this PR still needed? If not please close it.",
      "I think i have found a way to fix it, so closing it for now.",
      "was there ever a way to achieve this? i'm looking at span metrics emitted by the last version of the fastapi autoinstrumentation and i don't see the `http.route` attribute in them, even though this code is present in the otel sdk. maybe there's a way we could apply to have that attribute populate span metrics by using a custom span/metric processor?",
      "Yes, this is working and being used in production. However, this was added for the asgi plugin, not sure how the fastapi plugin works.\r\n\r\nAlso note, that this was added some time ago, when the semantic conversions specified the attribute name was `http.target`, not `http.route`."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115baac254a19ac290bad",
    "number": 1435,
    "body": "# Description\r\n\r\nWorking in ASGI with any propagator using `getter.keys()`, e.g. the [GCP propagator](https://github.com/GoogleCloudPlatform/opentelemetry-operations-python/blob/main/opentelemetry-propagator-gcp/) when no header is present in a request, it breaks with the below message:\r\n```python\r\nTraceback (most recent call last):\r\n  File \"/root/.cache/pypoetry/virtualenvs/api-9TtSrW0h-py3.10/lib/python3.10/site-packages/uvicorn/protocols/http/httptools_impl.py\", line 404, in run_asgi\r\n    result = await app(  # type: ignore[func-returns-value]\r\n  File \"/root/.cache/pypoetry/virtualenvs/api-9TtSrW0h-py3.10/lib/python3.10/site-packages/uvicorn/middleware/proxy_headers.py\", line 78, in __call__\r\n    return await self.app(scope, receive, send)\r\n  File \"/root/.cache/pypoetry/virtualenvs/api-9TtSrW0h-py3.10/lib/python3.10/site-packages/fastapi/applications.py\", line 270, in __call__\r\n    await super().__call__(scope, receive, send)\r\n  File \"/root/.cache/pypoetry/virtualenvs/api-9TtSrW0h-py3.10/lib/python3.10/site-packages/starlette/applications.py\", line 124, in __call__\r\n    await self.middleware_stack(scope, receive, send)\r\n  File \"/root/.cache/pypoetry/virtualenvs/api-9TtSrW0h-py3.10/lib/python3.10/site-packages/starlette/middleware/errors.py\", line 184, in __call__\r\n    raise exc\r\n  File \"/root/.cache/pypoetry/virtualenvs/api-9TtSrW0h-py3.10/lib/python3.10/site-packages/starlette/middleware/errors.py\", line 162, in __call__\r\n    await self.app(scope, receive, _send)\r\n  File \"/root/.cache/pypoetry/virtualenvs/api-9TtSrW0h-py3.10/lib/python3.10/site-packages/opentelemetry/instrumentation/asgi/__init__.py\", line 531, in __call__\r\n    span, token = _start_internal_or_server_span(\r\n  File \"/root/.cache/pypoetry/virtualenvs/api-9TtSrW0h-py3.10/lib/python3.10/site-packages/opentelemetry/instrumentation/utils.py\", line 111, in _start_internal_or_server_span\r\n    ctx = extract(context_carrier, getter=context_getter)\r\n  File \"/root/.cache/pypoetry/virtualenvs/api-9TtSrW0h-py3.10/lib/python3.10/site-packages/opentelemetry/propagate/__init__.py\", line 102, in extract\r\n    return get_global_textmap().extract(carrier, context, getter=getter)\r\n  File \"/root/.cache/pypoetry/virtualenvs/api-9TtSrW0h-py3.10/lib/python3.10/site-packages/opentelemetry/propagators/composite.py\", line 52, in extract\r\n    context = propagator.extract(carrier, context, getter=getter)\r\n  File \"/root/.cache/pypoetry/virtualenvs/api-9TtSrW0h-py3.10/lib/python3.10/site-packages/opentelemetry/propagators/cloud_trace_propagator/__init__.py\", line 94, in extract\r\n    header = self._get_header_value(getter, carrier)\r\n  File \"/root/.cache/pypoetry/virtualenvs/api-9TtSrW0h-py3.10/lib/python3.10/site-packages/opentelemetry/propagators/cloud_trace_propagator/__init__.py\", line 78, in _get_header_value\r\n    for key in getter.keys(carrier):\r\n  File \"/root/.cache/pypoetry/virtualenvs/api-9TtSrW0h-py3.10/lib/python3.10/site-packages/opentelemetry/instrumentation/asgi/__init__.py\", line 263, in keys\r\n    return [_key.decode(\"utf8\") for (_key, _value) in carrier]\r\n  File \"/root/.cache/pypoetry/virtualenvs/api-9TtSrW0h-py3.10/lib/python3.10/site-packages/opentelemetry/instrumentation/asgi/__init__.py\", line 263, in <listcomp>\r\n    return [_key.decode(\"utf8\") for (_key, _value) in carrier]\r\nValueError: too many values to unpack (expected 2)\r\n```\r\n\r\nIn my case, this seems to be triggered by the fact that the GCP propagator [uses `getter.keys()` as a fallback](https://github.com/GoogleCloudPlatform/opentelemetry-operations-python/blob/main/opentelemetry-propagator-gcp/src/opentelemetry/propagators/cloud_trace_propagator/__init__.py#L78). This [`keys()` function in the `ASGIGetter`](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/be4ceec08cb1b3097d7aa25c4efc358ddd050bdb/instrumentation/opentelemetry-instrumentation-asgi/src/opentelemetry/instrumentation/asgi/__init__.py#L262-L263) seems to be taking the header values from an incorrect place, and therefore provoking the crash. I found it with the GCP example, but it's probably [affecting others](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1435#issuecomment-1316001798), as the issue lays with the definition of `ASGIGetter.keys()` here.\r\n\r\nFixes #1487 \r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- Using any propagator that makes use of `getter.keys()` on an ASGI context makes the request fail. It's easy to reproduce with the GCP `CloudTraceFormatPropagator` when the request does not have a `x-cloud-trace-context` header.\r\n- The added test changes make tests fail if the fix is not included.\r\n\r\n**NOTE**: I've [re-created](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1435/files#diff-cae4643dfa4b180a8069a7c31a4ead910a234dd37059d838e5ae8a6479023392R28-R79) `opentelemetry.test.mock_textmap.MockTextMapPropagator` with a tiny modification to use `keys()` from the `getter`. I understand it might be interesting to add these changes to [the original testing repo](https://github.com/open-telemetry/opentelemetry-python/blob/5574f7ea6b63c0fd7f5b32be4b0ff030f29b9efe/tests/opentelemetry-test-utils/src/opentelemetry/test/mock_textmap.py#L57-L104) as well, as it ensures all keys that `.get()` returns are in `.keys()` as well, but thought it'd be interesting to have this fix out soon and then potentially port it there if it seemed useful/appropriate to y'all.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- ~Yes. - Link to PR:~\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- ~Documentation has been updated~\r\n",
    "head_branch": "fix-asgi-keys",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: hasier  (a0b4c4f0f92eb065f484f6ec392ed335b2d767e6, afcf3c5c558c575887ee4bdeb9bef9f8b7197995, e4dbc51f2c2d5d26af4dbb04b26e3a3a44277ac4)</li></ul>",
      "We just hit this same problem, not in GCP, and it's forcing us to downgrade to 0.34b0. We applied this patch manually to 0.35b0 and it also worked for us.",
      "> gcp/src/opentelemetry/propagators/cloud_trace_propagator/__init__.py#L78). This `all()` call in the `ASGIGetter` seems to be taking the header values from an incorrect place, and therefore provoking the crash.\r\n\r\nSorry, which `all()` call?",
      "> > gcp/src/opentelemetry/propagators/cloud_trace_propagator/**init**.py#L78). This `all()` call in the `ASGIGetter` seems to be taking the header values from an incorrect place, and therefore provoking the crash.\r\n> \r\n> Sorry, which `all()` call?\r\n\r\nAh sorry @ocelotl, I meant the `keys()` function, just updated the description 🙏 ",
      "@ocelotl is this PR something you can help with reviewing? Or maybe @rogersd @srikanthccv, as I've seen you working in the ASGI area recently? Sorry for the wide ping, it just feels to me like an easy fix for a bug that can become quite common and important.",
      "@ocelotl @rogersd @srikanthccv @shalevr sorry for the wide ping again, just wanted to give another nudge as it's been a few weeks since I first opened the PR. A review with improvements would be appreciated in order to get this closer to approval. Thanks.",
      "I will take a look at it.",
      "Assuming the current github workflow checks pass and the PR is merged, when do the maintainers expect a release that has this included to be released?",
      "A periodic monthly release is happening this week (or early next week).",
      "@srikanthccv I had to update the branch with changes from `main`, please re-approve and merge whenever you have a few mins, as I don't have permissions to do so as a first-time contributor 😊🙏 ",
      "Hello @srikanthccv, unless I'm mistaken this has not been released yet right? Any chance this gets bumped as it's a bit of a challenge without this fix out. Thanks :)",
      "> Hello @srikanthccv, unless I'm mistaken this has not been released yet right? Any chance this gets bumped as it's a bit of a challenge without this fix out. Thanks :)\r\n\r\nafaik it's not been released indeed, last published version seems to be [v0.36b0](https://github.com/open-telemetry/opentelemetry-python-contrib/releases/tag/v0.36b0), which still contains the incorrect behaviour. In case it helps, while no new version is out, in our repos we have temporarily addressed it by overriding the default `asgi` getter.\r\n```python\r\nfrom opentelemetry.instrumentation import asgi\r\n\r\nclass ASGIGetter(asgi.ASGIGetter):\r\n    \"\"\"\r\n    Override default getter implementation while `.keys()` fix is not out\r\n    https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1435\r\n    \"\"\"\r\n    def keys(self, carrier: dict[str, typing.Any]) -> list[str]:\r\n        headers = carrier.get(\"headers\") or []\r\n        return [_key.decode(\"utf8\") for (_key, _value) in headers]\r\n\r\ndef setup_tracing() -> None:\r\n    # Override default asgi_getter while `.keys()` fix is not out\r\n    # https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1435\r\n    asgi.asgi_getter = ASGIGetter()\r\n    ...\r\n```",
      "Thanks @hasier\r\n\r\nA sound proposal that I'll have to review. I'm not using the ASGI extension directly but through FastAPI. Cheers.",
      "Is this fix already merged @hasier ?",
      "> Is this fix already merged @hasier ?\r\n\r\n@theobouwman the fix was [merged on January 12](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1435#event-8215475429) and included as part of [Version 1.16.0/0.37b0](https://github.com/open-telemetry/opentelemetry-python-contrib/releases/tag/v1.16.0)"
    ],
    "commit_messages": [
      "Fix ASGIGetter keys to fetch from actual carrier headers (#1435)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115bbac254a19ac290bae",
    "number": 1434,
    "body": "# Description\r\n\r\nCurrently an SQL statement that begins with a comment, such as\r\n\r\n```\r\n/* Get foo from bar */ SELECT foo FROM bar\r\n```\r\n\r\nWill have `span.name` set to `/*`, which makes it harder to tell what's going on in the waterfall view for a request.\r\n\r\nInstead, this removes the leading comment so that the operation type is used instead.\r\n\r\nFixes #1433 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [X] Added additional unit tests.\r\n- [X] Tested against my company's code.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [X] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n",
    "head_branch": "drogers-strip-comments",
    "is_a_fork": true,
    "comments": [
      "We also have similar logic in a few other places and need to update them too. If you don't want to address it in this PR, Please update the description from Fixes #XX -> Part of #XX.",
      "I updated it in `psycopg2` but I don't see any other places.  Let me know if I missed a spot.",
      "[here](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/instrumentation/opentelemetry-instrumentation-sqlalchemy/src/opentelemetry/instrumentation/sqlalchemy/engine.py#L110-L123) and [here](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/instrumentation/opentelemetry-instrumentation-asyncpg/src/opentelemetry/instrumentation/asyncpg/__init__.py#L131-L140)"
    ],
    "commit_messages": [
      "Strip leading comments from SQL queries when generating the span name. (#1434)\n\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115bcac254a19ac290baf",
    "number": 1431,
    "body": "# Description\r\n\r\nWith Redis and Databases in a traces, there is no easy way from the span name to see if a \"SELECT\" is going to Redis or the database.\r\n\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [X] TestRedis::test_name_callback\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [?] Followed the style guidelines of this project\r\n- [X] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n- [X] Documentation has been updated\r\n",
    "head_branch": "redis-span-name-callback",
    "is_a_fork": true,
    "comments": [
      "We removed the `name_callback` and added `request_hook` and `response_hook`. They can be used to change the default span name if needed. You could do something like this.\r\n\r\n```python\r\ndef request_hook(span, instance, args, kwargs):\r\n  if span.is_recording():\r\n    span.update_name(\"my-custom-name\")\r\n\r\n```",
      "Hm. I got the recommendation to add the name_callback on Slack (https://cloud-native.slack.com/archives/C01PD4HUVBL/p1666969756061799). Will try your suggestion.",
      "Take a look at https://github.com/open-telemetry/opentelemetry-python-contrib/issues/411. We are getting rid of it in favour of request/response hooks. It will be removed eventually for requests instrumentation. Aaron might not be aware of this detail. And here is another rejected proposal https://github.com/open-telemetry/opentelemetry-python-contrib/issues/1175. Please try the suggested method and let us know if that doesn't solve your issue.",
      "Ok, the following works for me:\r\n\r\n```\r\n    def redis_response_hook(span, instance, response):\r\n      if span.is_recording():\r\n          name = span.name\r\n          name = \"Redis \" + name\r\n          span.update_name(name)\r\n\r\n    from opentelemetry.instrumentation.redis import RedisInstrumentor\r\n    RedisInstrumentor().instrument(response_hook=redis_response_hook)\r\n\r\n```"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115bdac254a19ac290bb0",
    "number": 1430,
    "body": "# Description\r\n\r\nAdd test_response_code_none test that verify it\r\n[Please include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.](https://github.com/open-telemetry/opentelemetry-python-contrib/issues/1401)\r\nAdd the status code to span only if not None.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] tox -e test-instrumentation-urllib\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "Fix-instrumentation-urllib-log-warning-on-none-status",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix Urllib instrumentation - Add status code to span if not None (#1430)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115beac254a19ac290bb1",
    "number": 1429,
    "body": "Will be using this temporarily until we implement https://github.com/open-telemetry/opentelemetry-python/pull/2649 for contrib repo",
    "head_branch": "releasing",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Create RELEASING.md, Update version to 1.15.0.dev/0.36b0.dev (#1429)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115bfac254a19ac290bb2",
    "number": 1428,
    "body": null,
    "head_branch": "release/1.14.0-0.35b0",
    "is_a_fork": false,
    "comments": [
      "Moving to draft to prevent accidental merging, the corresponding core PR has failing tests.",
      "Fixed tests: https://github.com/open-telemetry/opentelemetry-python/pull/3015"
    ],
    "commit_messages": [
      "[release/v1.14.x-0.35bx] Prepare release 1.14.0/0.35b0 (#1428)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115c0ac254a19ac290bb3",
    "number": 1427,
    "body": "# Description\r\n\r\nThere is no DB name concept in Redis (databases are numbered from 0 to 15), hence sending **db.name** attribute to OTel collector doesn't make sense. In the current implementation **db.name** attribute is defaulted to DB number. Technically, it shouldn't be any problem with that but it may break some OpenTelemetry backends which expects a real DB name not a number. There is another attribute **db.redis.database_index** which should be used for this purpose. \r\n\r\nAfter this fix, we will be also alligned with below document where is stated that for Redis **db.name** attribute shouldn't be set:\r\n\r\nhttps://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/semantic_conventions/database.md\r\n\r\nFixes #1395 \r\n\r\n## Type of change\r\n\r\n- Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nFirstly, I run following command to test the setup after the code change:\r\n\r\n`tox -e test-instrumentation-redis`\r\n\r\nThen, I tested that locally with some app and after removing **db.name** attribute from instrumentation, it is not exported to OTel collector as expected.\r\n\r\n**Before the fix:**\r\n\r\n```\r\nInstrumentationScope opentelemetry.instrumentation.redis 0.34b0\r\nSpan #0\r\n    Trace ID       : cf35dd1cc002f28471e83522955fa616\r\n    Parent ID      : 0665eddd63d1811b\r\n    ID             : 340b84683b6076c3\r\n    Name           : RPUSH\r\n    Kind           : SPAN_KIND_CLIENT\r\n    Start time     : 2022-11-02 11:15:54.311276 +0000 UTC\r\n    End time       : 2022-11-02 11:15:54.318314 +0000 UTC\r\n    Status code    : STATUS_CODE_UNSET\r\n    Status message : \r\nAttributes:\r\n     -> db.name: Int(0)\r\n     -> db.redis.args_length: Int(3)\r\n     -> db.redis.database_index: Int(0)\r\n     -> db.statement: Str(RPUSH key {\"time\": \"2022-11-02 12:15:54\", \"voter_id\": \"4e03a47155c7252\", \"choice\": \"alone\"})\r\n     -> db.system: Str(redis)\r\n     -> net.peer.name: Str(localhost)\r\n     -> net.peer.port: Str(6379)\r\n     -> net.transport: Str(ip_tcp)\r\nSpan #1\r\n    Trace ID       : dfab74806a3f5a6eb27dd96ea5825486\r\n    Parent ID      : 2ba23ddbdcbbb60d\r\n    ID             : 68818dbba797fd91\r\n    Name           : LRANGE\r\n    Kind           : SPAN_KIND_CLIENT\r\n    Start time     : 2022-11-02 11:15:54.335377 +0000 UTC\r\n    End time       : 2022-11-02 11:15:54.34132 +0000 UTC\r\n    Status code    : STATUS_CODE_UNSET\r\n    Status message : \r\nAttributes:\r\n     -> db.name: Int(0)\r\n     -> db.redis.args_length: Int(4)\r\n     -> db.redis.database_index: Int(0)\r\n     -> db.statement: Str(LRANGE key 0 -1)\r\n     -> db.system: Str(redis)\r\n     -> net.peer.name: Str(localhost)\r\n     -> net.peer.port: Str(6379)\r\n     -> net.transport: Str(ip_tcp)\r\n```\r\n\r\n**After the fix:**\r\n\r\n```\r\nInstrumentationScope opentelemetry.instrumentation.redis 0.34b0\r\nSpan #0\r\n    Trace ID       : ab2622f411379b075ec6ebf699e08525\r\n    Parent ID      : e7ae303f79d7a23a\r\n    ID             : bec8e7f732dd3c4b\r\n    Name           : RPUSH\r\n    Kind           : SPAN_KIND_CLIENT\r\n    Start time     : 2022-11-01 10:56:13.013253 +0000 UTC\r\n    End time       : 2022-11-01 10:56:13.019925 +0000 UTC\r\n    Status code    : STATUS_CODE_UNSET\r\n    Status message : \r\nAttributes:\r\n     -> db.redis.args_length: Int(3)\r\n     -> db.redis.database_index: Int(0)\r\n     -> db.statement: Str(RPUSH key {\"time\": \"2022-11-01 11:56:13\", \"voter_id\": \"577278715f01a5e\", \"choice\": \"alone\"})\r\n     -> db.system: Str(redis)\r\n     -> net.peer.name: Str(localhost)\r\n     -> net.peer.port: Str(6379)\r\n     -> net.transport: Str(ip_tcp)\r\nSpan #1\r\n    Trace ID       : 71bbcbb379bb5baa7a2702287bcfe401\r\n    Parent ID      : b117d6756b142459\r\n    ID             : 0b6621439c2bfea1\r\n    Name           : LRANGE\r\n    Kind           : SPAN_KIND_CLIENT\r\n    Start time     : 2022-11-01 10:56:13.035479 +0000 UTC\r\n    End time       : 2022-11-01 10:56:13.040153 +0000 UTC\r\n    Status code    : STATUS_CODE_UNSET\r\n    Status message : \r\nAttributes:\r\n     -> db.redis.args_length: Int(4)\r\n     -> db.redis.database_index: Int(0)\r\n     -> db.statement: Str(LRANGE key 0 -1)\r\n     -> db.system: Str(redis)\r\n     -> net.peer.name: Str(localhost)\r\n     -> net.peer.port: Str(6379)\r\n     -> net.transport: Str(ip_tcp)\r\n```\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "luke6Lh43-redis-instrumentation-fix",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: luke6Lh43 / name: luke6Lh43  (f009d91cdd13e116052c0d4c30f8df50a1028a42, c065c20b99b11b0725f8aa1cc5ad114661a42182)</li><li>:white_check_mark: login: sanketmehta28 / name: Sanket Mehta  (0caa0c6a56057231e695d5878fc16f839f82f68e)</li></ul>",
      "I've tried to fix docker-tests which is failing but it looks there is more generic issue... I've run it locally on my machine and got an error related to psycopg2 library:\r\n\r\n```\r\n<snipped>\r\n\r\n× Encountered error while trying to install package.\r\n╰─> psycopg2\r\n\r\n<snipped>\r\n```\r\n\r\nTo be 100% sure that issue is not related to the fix I've made, I've cloned main repo and run docker-tests and got same error message... To my mind it looks like some issue with packages dependencies. Has anyone experienced similar issue recently?\r\n",
      "That's a regular python dep installation issue. It is probably not related to this project, but in general, you may have an issue installing the above. Are you sure your system is set up to run the psycopg2?",
      "Hi. I've added another commit where I've simply removed verification of db.name attribute from test functions. @sanketmehta28 since we're removing db.name attribute from instrumentation, do we really need another test function for that or removing verification of that attribute from existing functions would be enough?",
      "> \r\nremoving the verification of the attribute and adding verification for new attribute should be sufficient"
    ],
    "commit_messages": [
      "Remove db.name attribute from Redis instrumentation (#1427)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115c1ac254a19ac290bb4",
    "number": 1425,
    "body": null,
    "head_branch": "version",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Change to use local dev versions (#1425)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115c2ac254a19ac290bb5",
    "number": 1424,
    "body": "# Description\r\n\r\nFix the check for the connection already being instrumented in instrument_connection()\r\nAdd tests for commit() and rollback()\r\nAdd a couple missing docstring items.\r\nAdd basepython to docker-tests to fix running the tests on macOS.\r\n\r\nBased on #1382\r\n\r\nFixes #1353\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [X] Wrote and ran new unit tests.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [X] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n",
    "head_branch": "drogers-dbapi-sock",
    "is_a_fork": true,
    "comments": [
      "@srikanthccv @ocelotl May you both please take a look at this and let me know what you think?",
      "@lzchen Any chance you can get this in to `0.35b0`?  `pymysql` instrumentation is broken without it."
    ],
    "commit_messages": [
      "Fix dbapi connection instrument wrapper has no _sock member (#1424)\n\nFixes https://github.com/open-telemetry/opentelemetry-python-contrib/issues/1353\r\n\r\nAlso:\r\n\r\nFix the check for the connection already being instrumented in instrument_connection()\r\nAdd tests for commit() and rollback()\r\nAdd a couple missing docstring items.\r\nAdd basepython to docker-tests to fix running the tests on macOS."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115c3ac254a19ac290bb6",
    "number": 1423,
    "body": "# Description\r\n\r\nAdd a test for mysql instrumentation using NoOpTracerProvider\r\n\r\nFixes #975 \r\n\r\n# How Has This Been Tested?\r\n\r\ntox -e test-instrumentation-mysql \r\n",
    "head_branch": "test-mysql-with-NoOpTracerProvider",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add a test for mysql instrumentation using NoOpTracerProvider (#1423)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115c4ac254a19ac290bb7",
    "number": 1422,
    "body": "# Description\r\n\r\nInspired by this [comment](https://github.com/open-telemetry/opentelemetry-python-contrib/issues/610#issuecomment-953207184). I changed the idea slightly to OR inner tuples, it seemed to be easier to do but let me know what do you think about it.\r\n\r\nFixes #610 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- Added unit tests\r\n- Instrument any app with psycopg2-binary installed\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "psycopg2-binary-support",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: kamilkrampa / name: Kamil Krampa  (449045abd847ed75f9081acc4b8af45bd5801f09, 2f3986ba0fb10ea6fb226d3ffdc6002206f944a3, 4706b9f07a9c16f9af8147c6dec9941df5a1f2ba, d0a4f750e872dc19979d77fd892415dd81c91b6e, da4eb26c9ea1f6cb4ae9717c816bc0ea0843e4e9, 7e4f231471808b8ead802a84c7082b8d62fcf1c3)</li></ul>",
      "Oh, this is 2 years old. 😢\r\n\r\nStill valid tho."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115c5ac254a19ac290bb8",
    "number": 1419,
    "body": "# Description\r\n\r\nWe encountered a use case where we want to show the parameters of our sql query for better traceability. I added callbacks so we can further process sqlalchemy events, namely (`before_cursor_execute`, `after_cursor_execute` and `handle_error`)\r\n\r\nI also noticed that if the engine is instrumented through the connect wrapper, the engine tracer options such as the sql commenter won't be configured. I packed these options together so users can pass the configuration regardless of which wrapper is being used.\r\n\r\n\r\n## Type of change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- Wrote and ran new unit tests.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "kevg/sqlalchemy_hook",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: KevGoDev / name: KevGoDev  (40ba8a226711a8cc66adb9f097d0c1780b7a22fa)</li></ul>",
      "I converted it to a draft since the title still has WIP in it."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115c6ac254a19ac290bb9",
    "number": 1418,
    "body": "# Description\r\n\r\nDjango 2 does not provide ASGi out of the box and thus assumes that always wsgi is used, which is not true.\r\nBy using the `channel` package, Asgi is also present for Django 2\r\n\r\nFixes #1416 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nRunning code that previously failed with e.g. https://github.com/open-telemetry/opentelemetry-python/issues/2833\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "django-2-asgi",
    "is_a_fork": true,
    "comments": [
      "/label help-wanted"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115c7ac254a19ac290bba",
    "number": 1417,
    "body": "# Description\r\nEnable users of the grpc plugin to register hooks on grpc request and response (server and client, unary and stream). The hooks are called before the stream begins to handle data, allowing the plugin user to register to events\r\n\r\nFixes # (issue)\r\nAdding request/response hooks to grpc-instrumentation\r\n\r\n## Type of change\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n- [ ] Test A\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "otel-feature",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: Lincoln-developer / name: Lincoln  (ff8d9f4d62ffdd3760c791432947e101114a05b5, 7a2257e49018beae9dddad1c13921aa0d05f5e19)</li></ul>",
      "Mr @srikanthccv please am requesting for a review and feedback on this commit.\r\nThen the other thing is about tests, how can I test these hooks on successful implementation.\r\nThanks  ",
      "Mr @srikanthccv thanks for the feedback, let me work on the suggested changes. Thanks and regards.",
      "Hello Mr @srikanthccv, I have worked on the suggested changes. Please I am requesting for a review. Thanks.",
      "Hello, Mr @srikanthccv please am requesting for a code review. Thanks ",
      "Mr @srikanthccv I have merged main into otel-feature, should I push again ",
      "Yes",
      "Mr @srikanthccv as the checks run, is it okay I start working on some other issue?",
      "You can probably do that, but I am afraid you will not complete anything fully. ",
      "Okay let me first finish this, and embark on another issue later. ",
      "@Lincoln-developer do you still want to continue this work?",
      "Yes am sorry l have kinder been sick and was waiting to go through this\nrecovery process then l resume. But true l really want to continue with\nthis\n\nOn Sat, 10 Dec 2022, 4:51 am Srikanth Chekuri, ***@***.***>\nwrote:\n\n> @Lincoln-developer <https://github.com/Lincoln-developer> do you still\n> want to continue this work?\n>\n> —\n> Reply to this email directly, view it on GitHub\n> <https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1417#issuecomment-1344972991>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/ARACKVGIQJ3BY4BU6T2MCSDWMPOYTANCNFSM6AAAAAARQ7EWME>\n> .\n> You are receiving this because you were mentioned.Message ID:\n> ***@***.***\n> com>\n>\n",
      "I hope you recover early. When you are back, please ping me on Slack if you need help with this.",
      "Alright Mr @Srikanth Chekuri ***@***.***> , surely am\ngonna do so.\n\nThanks l greatly appreciate your support 🙏\n\nOn Sat, 10 Dec 2022, 5:44 pm Srikanth Chekuri, ***@***.***>\nwrote:\n\n> I hope you recover early. When you are back, please ping me on Slack if\n> you need help with this.\n>\n> —\n> Reply to this email directly, view it on GitHub\n> <https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1417#issuecomment-1345279479>,\n> or unsubscribe\n> <https://github.com/notifications/unsubscribe-auth/ARACKVAFEUA6MHQPVWGD3YLWMSJM5ANCNFSM6AAAAAARQ7EWME>\n> .\n> You are receiving this because you were mentioned.Message ID:\n> ***@***.***\n> com>\n>\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115c8ac254a19ac290bbb",
    "number": 1415,
    "body": "\r\n# 🐍 \r\n\r\n",
    "head_branch": "py311",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add support for py3.11 (#1415)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115c9ac254a19ac290bbc",
    "number": 1414,
    "body": "Next part of https://github.com/open-telemetry/opentelemetry-python-contrib/issues/1184\r\n\r\n# Description\r\n\r\nAdd test cases for regular expression matching.\r\nAdd test cases for header sanitizing.\r\nAdd documentation for regular expression matching and header sanitation. \r\nVarious documentation cleanups and standardization. \r\n\r\nFixes #1184\r\n\r\n## Type of change\r\n\r\n- [X] New feature (non-breaking change which adds functionality)\r\n- [X] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [X] Unit tests added.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [X] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n- [X] Documentation has been updated\r\n",
    "head_branch": "drogers-wildcard-headers-pyramid",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add support for regular expression matching and sanitizing of headers in Pyramid. (#1414)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115caac254a19ac290bbd",
    "number": 1413,
    "body": "Next part of https://github.com/open-telemetry/opentelemetry-python-contrib/issues/1184\r\n\r\n# Description\r\n\r\nAdd test cases for regular expression matching.\r\nAdd test cases for header sanitizing.\r\nAdd documentation for regular expression matching and header sanitation. \r\nVarious documentation cleanups and standardization. \r\n\r\nFixes #1184\r\n\r\n## Type of change\r\n\r\n- [X] New feature (non-breaking change which adds functionality)\r\n- [X] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [X] Unit tests added.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [X] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n- [X] Documentation has been updated\r\n",
    "head_branch": "drogers-wildcard-headers-flask",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add support for regular expression matching and sanitizing of headers in Flask. (#1413)\n\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115cbac254a19ac290bbe",
    "number": 1412,
    "body": "Next part of https://github.com/open-telemetry/opentelemetry-python-contrib/issues/1184\r\n\r\n# Description\r\n\r\nAdd test cases for regular expression matching.\r\nAdd test cases for header sanitizing.\r\nAdd documentation for regular expression matching and header sanitation. \r\nVarious documentation cleanups and standardization. \r\n\r\nFixes #1184\r\n\r\n## Type of change\r\n\r\n- [X] New feature (non-breaking change which adds functionality)\r\n- [X] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [X] Unit tests added.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [X] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n- [X] Documentation has been updated\r\n",
    "head_branch": "drogers-wildcard-headers-falcon",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add support for regular expression matching and sanitizing of headers in Falcon. (#1412)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115ccac254a19ac290bbf",
    "number": 1411,
    "body": "Next part of https://github.com/open-telemetry/opentelemetry-python-contrib/issues/1184\r\n\r\n# Description\r\n\r\nAdd test cases for regular expression matching.\r\nAdd test cases for header sanitizing.\r\nAdd documentation for regular expression matching and header sanitation. \r\nVarious documentation cleanups and standardization. \r\n\r\nFixes #1184\r\n\r\n## Type of change\r\n\r\n- [X] New feature (non-breaking change which adds functionality)\r\n- [X] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [X] Unit tests added.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [X] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n- [X] Documentation has been updated\r\n",
    "head_branch": "drogers-wildcard-headers-django",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add support for regular expression matching and sanitizing of headers in Django. (#1411)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115ccac254a19ac290bc0",
    "number": 1410,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes #1130 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "cherrypy-instrumentation",
    "is_a_fork": true,
    "comments": [
      "I've came up with three different approaches for instrumentation in cherrypy and I wanted to discuss all three of them with there pros and cons.\r\n### Instrumentation with CherryPy Hooks\r\nUnlike other frameworks, CherryPy does not have support for custom middleware. Instead, CherryPy provides some [hook points](https://docs.cherrypy.dev/en/latest/extend.html#id16) where you can add your functions. [Datadog](https://github.com/DataDog/dd-trace-py/blob/1.x/ddtrace/contrib/cherrypy/middleware.py) uses this approach for instrumentation. But all the endpoints for which tools need to be used must be decorated by that tool.\r\nEg.\r\n```\r\nclass Root(object):\r\n    @cherrypy.expose\r\n    @cherrypy.tools.logit()\r\n    def index(self):\r\n        return \"hello world\"\r\n```\r\nBecause of it, this approach can only be used for manual instrumentation, not auto-instrumentation. Although there are some workarounds that I came up with (like monkey patching the expose function) but they were also not covering all the possible cases (what if the function is not exposed with expose decorator `index.exposed = true`).\r\n\r\n### Instrumentation with CherryPy Publisher Subscriber\r\n> CherryPy’s backbone consists of a bus system implementing a simple publish/subscribe messaging pattern. Simply put, in CherryPy everything is controlled via that bus.\r\n\r\nVarious channels are available in CherryPy, but only two were helpful to us, i.e. `before_request` and `after_request`. [Scout Python APM Agent](https://github.com/scoutapp/scout_apm_python/blob/master/src/scout_apm/cherrypy.py) use this approach of instrumentation. But the challenge with this approach is the `before_request` channel triggers at a very early stage of the request handling cycle, even before the `request` object parses the `environ` dictionary from the HTTP message, because of which we can not do much in before_request (including span creation). Thus this approach leaves us with a significant limitation.\r\n\r\n### Instrumentation by Patching CherryPy Application class\r\nThis is how we have instrumented various frameworks, and this approach can also be done here. [New Relics](https://github.com/newrelic/newrelic-python-agent/blob/main/newrelic/hooks/framework_cherrypy.py) and Appdynamics agent also uses this approach. The issue with this approach is `Application` class is implemented in [`_cptree` module](https://github.com/cherrypy/cherrypy/blob/5964c48b466448a14703eecc062223fda46caf4e/cherrypy/_cptree.py#L10) in CherryPy and imported in `__init__` module. We can patch the class imported in `__init__`, but this will not enable instrumentation as CherryPy creates the [object of the `Application` class](https://github.com/cherrypy/cherrypy/blob/5964c48b466448a14703eecc062223fda46caf4e/cherrypy/_cptree.py#L231) in  `_cptree` and uses the `Application` from that module directly, which forces us to instrument `Application` class both in `__init__` and `_cptree`. I have used this approach for instrumenting in my PR but @srikanthccv believes \r\n> We can't use the private symbols because they are not guaranteed to remain backwards compatible.\r\n\r\nI've implemented all three approaches and tested them to understand their pros and cons. The first two approaches will also come with other challenges, such as handling exceptions. And the third approach, although being backward incompatible, is tried and tested and guarantees to work. \r\nI need help knowing what to do next and which approach to proceed with. Also, if anyone has other ideas, I'm more than interested to know.\r\n",
      ">This is how we have instrumented various frameworks, and this approach can also be done here.\r\n\r\nI am not against the idea of patching the Application class but I don't think it is a good idea to patch the private/internals of the framework.\r\n\r\n>And the third approach, although being backward incompatible, is tried and tested and guarantees to work.\r\n\r\nWhat is guaranteed here?\r\n\r\nOverall, I don't think it's a good idea to patch the private/internals of the library. We have seen this fail with a few instrumentations, so they either had to be pinned to some minor version which works or rewritten to not patch private symbols and get it to work in general. I would like to hear others thoughts on this @open-telemetry/opentelemetry-python-contrib-approvers . ",
      "> What is guaranteed here?\r\n\r\nSorry for the misunderstanding. What I mean by 'guarantee' here is that with other approaches, some loopholes could be there with instrumentation, like some exceptions could be missed or the way the endpoints are exposed could affect the instrumentation. And this approach covers all the possible cases.\r\n\r\n> I am not against the idea of patching the Application class but I don't think it is a good idea to patch the private/internals of the framework.\r\n\r\nI understand your concern, which is why I tried instrumenting with other approaches, but nothing seems to work completely unless someone has a better idea.",
      "Also resolve the build checks",
      "> Overall, I don't think it's a good idea to patch the private/internals of the library. We have seen this fail with a few instrumentations, so they either had to be pinned to some minor version which works or rewritten to not patch private symbols and get it to work in general. I would like to hear others thoughts on this.\r\n\r\n@open-telemetry/opentelemetry-python-contrib-approvers Please share your thoughts on this.\r\n\r\n\r\n"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115cdac254a19ac290bc1",
    "number": 1409,
    "body": "# Description\r\n\r\nAdds an extension to support SNS `publish` and `publish_batch` service calls made with botocore and boto3.\r\nIncluded are:\r\n* extracting and setting relevant span attributes: `messaging.system`,  `messaging.destination`, `messaging.destination_kind`\r\n* context propagation via `MessageAttributes` in SNS message.\r\n* setting proper span kind and span name\r\n\r\n\r\nThis PR follows mostly what is already implemented in the [Node.Js AWS SDK instrumentation](https://github.com/open-telemetry/opentelemetry-js-contrib/blob/main/plugins/node/opentelemetry-instrumentation-aws-sdk/src/services/sns.ts).\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nAdds additional unit tests.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n",
    "head_branch": "botocore-sns",
    "is_a_fork": true,
    "comments": [
      "Please resolve conflicts :v:",
      "@ocelotl, @srikanthccv can this be merged or does it require any changes?"
    ],
    "commit_messages": [
      "botocore: Add support for SNS publish and publish_batch (#1409)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115cfac254a19ac290bc2",
    "number": 1407,
    "body": "# Description\r\nThis PR continues the work that [goatsthatcode](https://github.com/goatsthatcode) did on https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1052, due to the fact that the author hasn't responded anymore, we are interested in resolving this issue.\r\n\r\nThis changes the way spans are initialized for the celery instrumentation hooks and handles the case where Celery tasks are not available in the registry and called anonymously using the signature() or send_task()\r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python-contrib/issues/1002, https://github.com/open-telemetry/opentelemetry-python-contrib/issues/609\r\npossibly addresses https://github.com/open-telemetry/opentelemetry-python-contrib/issues/784\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Ran changes against reproduced issue in repo linked in issue -> https://github.com/goatsthatcode/opentelemetry-instrumentation-celery-example\r\n- [x] Added Unit Test to cover new conditional branch\r\n- [x] Passed existing test suite\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "celery_add_support_for_anon_tasks_fix",
    "is_a_fork": true,
    "comments": [
      "The last time I tried running the change, it didn't fix the issue. Is it still the case?",
      "> The last time I tried running the change, it didn't fix the issue. Is it still the case?\r\n\r\nthe change is fixing the issue, it tested with a unit test and integration tests on my project. what scenario reproduced the issue for you?"
    ],
    "commit_messages": [
      "Add support for anonymous tasks (#1407)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115cfac254a19ac290bc3",
    "number": 1406,
    "body": "# Description\r\nThis PR is continue the work that [goatsthatcode](https://github.com/goatsthatcode) did on this PR https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1052, due to the fact that the author hasn't responded anymore, we are interested in resolving this issue.\r\n\r\nThis changes the way spans are initialized for the celery instrumentation hooks and handles the case where Celery tasks are not available in the registry and called anonymously using the signature() or send_task()\r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python-contrib/issues/1002, https://github.com/open-telemetry/opentelemetry-python-contrib/issues/609\r\npossibly addresses https://github.com/open-telemetry/opentelemetry-python-contrib/issues/784\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Ran changes against reproduced issue in repo linked in issue -> https://github.com/goatsthatcode/opentelemetry-instrumentation-celery-example\r\n- [x] Added Unit Test to cover new conditional branch\r\n- [x] Passed existing test suite\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "celery_add_support_for_anon_tasks",
    "is_a_fork": true,
    "comments": [
      " <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/220524743/1406/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-missing-id.svg\" alt=\"CLA Missing ID\" align=\"left\" height=\"28\" width=\"328\"></a> <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/220524743/1406/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-not-signed.svg\" alt=\"CLA Not Signed\" align=\"left\" height=\"28\" width=\"328\"></a><br/><br /><ul><li> :x: The commit (5bcdfb55ed78dc776ab3b26543050978d5e4d308). This user is missing the User's ID, preventing the EasyCLA check. <a href='https://help.github.com/en/github/committing-changes-to-your-project/why-are-my-commits-linked-to-the-wrong-user' target='_blank'>Consult GitHub Help</a> to resolve.For further assistance with EasyCLA, <a href='https://jira.linuxfoundation.org/servicedesk/customer/portal/4' target='_blank'>please submit a support request ticket</a>.</li></ul>"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115d0ac254a19ac290bc4",
    "number": 1405,
    "body": "\r\n# Description\r\n\r\nThis adds an initial support for [pulsar](https://pulsar.apache.org/)\r\n\r\n## Type of change\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\nInitial integration tests were run with the following:\r\n```python\r\nimport threading\r\n\r\nimport pulsar\r\nfrom pulsar import ConsumerType, InitialPosition\r\n\r\n\r\ndef main():\r\n    client = pulsar.Client(\"pulsar://localhost:6650\")\r\n    print(client)\r\n    producer = client.create_producer(\"sample\")\r\n    \r\n    producer.send(b\"hello world\")\r\n\r\n    consumer = client.subscribe(\"sample\", \"consumer-1\", consumer_type=ConsumerType.KeyShared, initial_position=InitialPosition.Earliest)\r\n    print(consumer.receive(1_000))\r\n\r\n    done = threading.Event()\r\n\r\n    def consume(consumer, message):\r\n        print('Consumer', consumer, 'Message', message)\r\n        done.set()\r\n    consumer2 = client.subscribe(\"sample\", \"consumer-2\", message_listener=consume, consumer_type=ConsumerType.KeyShared, initial_position=InitialPosition.Earliest)\r\n    consumer2.resume_message_listener()\r\n\r\n    done.wait()\r\n    consumer2.close()\r\n    consumer.close()\r\n\r\n    producer.close()\r\n    client.close()\r\n\r\n```\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "initial-pulsar-support",
    "is_a_fork": true,
    "comments": [
      "I just realized that when I ran the linter locally, it got skipped 🤦 \r\n<img width=\"590\" alt=\"image\" src=\"https://user-images.githubusercontent.com/51510/202715472-5df1ddb7-cece-40f3-b925-04ff7a10cc15.png\">\r\nI will send the fixes soon and run those targets that failed\r\n",
      "Done, I just rebased it with main",
      "Hi @ocelotl i sent the fixes again, the broken tests seem unrelated to my changes, they break on http* libray",
      "@ocelotl I notice a bug in `send_sync` and fixed and a few tests mocking the underlying c library that pulsar uses.",
      " <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/220524743/1405/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-not-signed.svg\" alt=\"CLA Not Signed\" align=\"left\" height=\"28\" width=\"328\"></a><br/><br /><ul><li>:white_check_mark: login: jaysonsantos / name: Jayson Reis  (ad2c315eb171be231e6eecea7e592a7bb561b57f, 7b3b43ed1b24bcfe164cd350bf9a3cb9769e60f2, 61bb033dbaca19c6bc3a7f8048f01bca385ffd59, 87e70c41b27e51f817ade613c5221fa4a1da71c2, 5b4e3492e0d09420a4ba960124587f068c1bcb75, e6ac18c1108389594ca237defbad5d6d926ec377, 239f30761d7eebfb294c013de105683963573b4c, b5dfed98e9359c2e47092a5c4e1e906a9c93c40b, 77de05e2927b30ec5ddc069b7971137366e90b6d, fa8549b35ba68a63b58deb9af0fd1785524e9d6d, d51ec47d64a4a135b371962b5ce376e32cb54207, 6554691c2da16cbc10a6cad0e25edd1be59caa91, a7ab57867fc164cfada47a9f72d88f3f0c5fb1d1, 42cf83de9047f8a9436e183ee3a9fff62449aaa7, 2bc09b7f48038095471728b7eacc088463b353bc)</li><li><a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/220524743/1405/#/?version=2' target='_blank'>:x:</a> - login: @JonathanxD / name: Jonathan . The commit (099d1ba31d928369372bc2174203a960fb5be28f, 1de3b7f1921d686c98e48e0df1b2a0c35b07bc55) is not authorized under a signed CLA. <a href='https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/220524743/1405/#/?version=2' target='_blank'>Please click here to be authorized</a>. For further assistance with EasyCLA, <a href='https://jira.linuxfoundation.org/servicedesk/customer/portal/4' target='_blank'>please submit a support request ticket</a>.</li></ul>"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115d1ac254a19ac290bc5",
    "number": 1404,
    "body": "Next part of https://github.com/open-telemetry/opentelemetry-python-contrib/issues/1184\r\n\r\n# Description\r\n\r\nAdd test cases for regular expression matching.\r\nAdd test cases for header sanitizing.\r\nAdd documentation for regular expression matching and header sanitation. \r\nVarious documentation cleanups and standardization. \r\n\r\nFixes #1184\r\n\r\n## Type of change\r\n\r\n- [X] New feature (non-breaking change which adds functionality)\r\n- [X] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [X] Unit tests added.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [X] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n- [X] Documentation has been updated\r\n",
    "head_branch": "drogers-wildcard-headers-starlette",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add support for regular expression matching and sanitizing of headers in Starlette. (#1404)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115d2ac254a19ac290bc6",
    "number": 1403,
    "body": "Next part of https://github.com/open-telemetry/opentelemetry-python-contrib/issues/1184\r\n\r\n# Description\r\n\r\nAdd test cases for regular expression matching.\r\nAdd test cases for header sanitizing.\r\nAdd documentation for regular expression matching and header sanitation. \r\nVarious documentation cleanups and standardization. \r\n\r\nFixes #1184\r\n\r\n## Type of change\r\n\r\n- [X] New feature (non-breaking change which adds functionality)\r\n- [X] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [X] Unit tests added.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [X] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n- [X] Documentation has been updated\r\n",
    "head_branch": "drogers-wildcard-headers-fastapi",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add support for regular expression matching and sanitizing of headers in FastAPI. (#1403)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115d3ac254a19ac290bc7",
    "number": 1402,
    "body": "Next part of https://github.com/open-telemetry/opentelemetry-python-contrib/issues/1184\r\n\r\n# Description\r\n\r\nAdd test cases for regular expression matching.\r\nAdd test cases for header sanitizing.\r\nAdd documentation for regular expression matching and header sanitation. \r\nVarious documentation cleanups and standardization. \r\n\r\nFixes #1184\r\n\r\n## Type of change\r\n\r\n- [X] New feature (non-breaking change which adds functionality)\r\n- [X] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [X] Unit tests added.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [X] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n- [X] Documentation has been updated\r\n",
    "head_branch": "drogers-wildcard-headers-wsgi",
    "is_a_fork": true,
    "comments": [
      "@srikanthccv Here's the WSGI PR!"
    ],
    "commit_messages": [
      "Add support for regular expression matching and sanitizing of headers in WSGI. (#1402)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115d4ac254a19ac290bc8",
    "number": 1400,
    "body": "# Description\r\n\r\nFix to typo on usage docs.\r\n\r\nFixes #1392\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] This change requires a documentation update\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix-usage-docs-confluent-kafka",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: jltvieira / name: João Vieira  (bfa9f51bb7ca3742c3c5dde52074dc94ac046e61)</li></ul>"
    ],
    "commit_messages": [
      "Fix usage docs for confluent_kafka (#1400)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115d5ac254a19ac290bc9",
    "number": 1399,
    "body": "### Description\r\n\r\nOnly use `len` on `body` if it's not a filelike object.\r\n\r\nFixex https://github.com/open-telemetry/opentelemetry-python-contrib/issues/1235\r\n\r\n### How Has This Been Tested?\r\n\r\ntox -e test-instrumentation-urllib3\r\n",
    "head_branch": "isra/io-body",
    "is_a_fork": true,
    "comments": [
      "Please resolve conflicts",
      "Done",
      "Please fix the conflicts",
      "Done again.",
      "Seems like the test broke since the first commit. Pushed a fixed version.",
      "@shalevr @srikanthccv  any chance this could be merged? it is preventing us from migrating from opentracing to opentelemetry.",
      "It can't be merged unless all the requirements are met. The author didn't let maintainers make edits, which prevents me from updating (out-of-date with base) and merging it.",
      "> It can't be merged unless all the requirements are met. The author didn't let maintainers make edits, which prevents me from updating (out-of-date with base) and merging it.\r\n\r\nI can't give edit access to the PR since the fork is being owned by an org and not a personnal account. Let me rebase again and fix conflict. If there's conflict again in the future I would suggest you just cherry-pick my commit and open your own pull request. I understand maintaining open-source software is thankless work (And I thank you for otel!), but this PR have many times the amount of work it actually required due to at least 5 rebase with conflict that appears each time right before merging.",
      "My rebase conflicted with https://github.com/open-telemetry/opentelemetry-python-contrib/commit/a7bd56354bffb6804c47b363875963ca407a8bb9 which did a similar thing than my PR (moved all the test to `test_urllib3_metrcs.py`, but changed the test to use HttpTestBase while my PR worked on this comment https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1399#discussion_r1015784305 and pretty much rewrite the whole test suite. I kept my rewrite instead of the `master` version, however I can't use the HTTP server since it only support `GET` request with a specific payload while my tests requires more use-cases.",
      "Ok, finally fixed the test with the new base utils `assert_...`. Should be green now!",
      "> > It can't be merged unless all the requirements are met. The author didn't let maintainers make edits, which prevents me from updating (out-of-date with base) and merging it.\r\n> \r\n> I can't give edit access to the PR since the fork is being owned by an org and not a personnal account. Let me rebase again and fix conflict. If there's conflict again in the future I would suggest you just cherry-pick my commit and open your own pull request. I understand maintaining open-source software is thankless work (And I thank you for otel!), but this PR have many times the amount of work it actually required due to at least 5 rebase with conflict that appears each time right before merging.\r\n\r\n\r\nI wouldn't mind somebody else creating the PR for the same fix, getting that merged, and then closing this. You may have n number of reasons not to give edit access, even if it wasn't an org account. I mentioned that because the last time I wanted to merge this two weeks ago, this was not up to date with the base branch. Many PRs in this repo let the maintainer make edits (for such cases) and merge quickly. I also enabled the auto-merge, but that didn't help either. I can't hold other PRs ready to merge because this needs rebasing etc...",
      "LGTM, thank you",
      "Thank you very much all of yall! we really appreciate it."
    ],
    "commit_messages": [
      "Fix exception in Urllib3 when dealing with filelike body. (#1399)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115d6ac254a19ac290bca",
    "number": 1398,
    "body": "### Description\r\n\r\nLoad `body` from `urlopen` hook when it's being pass as a positional parameter.\r\n\r\n\r\n### How Has This Been Tested?\r\n\r\n`tox -e test-instrumentation-urllib3`",
    "head_branch": "isra/load-positional-body-in-urlopen",
    "is_a_fork": true,
    "comments": [
      "Please resolve conflicts. This is simple change that is ready to be merged. ",
      "Done."
    ],
    "commit_messages": [
      "Urllib3 instrumentation can now retrieve urlopen body parameter when used as positional (#1398)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115d7ac254a19ac290bcb",
    "number": 1394,
    "body": "# Description\r\n\r\nFixes #1393 - move the response_hook() evaluation to after the status has been set on the span to allow for overriding the status in the hook.\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "aiohttp-client: Allow overriding of span status (#1394)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115d8ac254a19ac290bcc",
    "number": 1391,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "addmeterprovider-lambda",
    "is_a_fork": true,
    "comments": [
      "this should probably be limited to the faas namespace and not http... esp since lambda does not only handle http.\n\n",
      "Hi @vasireddy99 , just checking in on this PR and wanted to see if you're still available to work on this.\r\n\r\nThere are some merge conflicts that should be resolved in the instrumentor code and changelog. Some metrics force_flush logic has been added in https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1613/files. It would be great to continue with the meter features you've started here."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115d9ac254a19ac290bcd",
    "number": 1390,
    "body": "This is a duplicate of the real PR: https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1350\r\n\r\nThis branch is branching from an older commit of `opentelemetry-python-contrib`because there is a critical bug on their latest commit:\r\nhttps://github.com/open-telemetry/opentelemetry-python-contrib/issues/1353\r\nhttps://github.com/open-telemetry/opentelemetry-python-contrib/pull/1382",
    "head_branch": "botocore-sqs-messaging-system-2",
    "is_a_fork": true,
    "comments": [
      " <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/220524743/1390/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-missing-id.svg\" alt=\"CLA Missing ID\" align=\"left\" height=\"28\" width=\"328\"></a> <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/220524743/1390/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-not-signed.svg\" alt=\"CLA Not Signed\" align=\"left\" height=\"28\" width=\"328\"></a><br/><br /><ul><li> :x: The commit (c8314a87802aa1942d3f970fc5cedcf72fa8ee33). This user is missing the User's ID, preventing the EasyCLA check. <a href='https://help.github.com/en/github/committing-changes-to-your-project/why-are-my-commits-linked-to-the-wrong-user' target='_blank'>Consult GitHub Help</a> to resolve.For further assistance with EasyCLA, <a href='https://jira.linuxfoundation.org/servicedesk/customer/portal/4' target='_blank'>please submit a support request ticket</a>.</li></ul>"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115daac254a19ac290bce",
    "number": 1388,
    "body": "# Description\r\n\r\nThis PR adds instrumentation for [Starlite](https://github.com/starlite-api/starlite)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: Goldziher / name: Na'aman Hirschfeld  (e597c1ad1da00139a39a7936d961e962f1bb97d3)</li></ul>"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115dbac254a19ac290bcf",
    "number": 1386,
    "body": "# Description\r\n\r\nUpdate EKS resource detector to detect log group name so that it is possible to link trace to CloudWatch logs. This is similar to a change in the Java equivalent of this resource detector: https://github.com/open-telemetry/opentelemetry-java-contrib/pull/533\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [X] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "add-log-group-name-eks-resource",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115dcac254a19ac290bd0",
    "number": 1385,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "mysql-audit-975",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: clesleycode / name: Lesley Cordero  (8ea8a928f9b68259f6e63a96a9c4df963f4868d3)</li></ul>",
      "@clesleycode Thanks for catching this. Mark it ready for review when you are done with all changes.",
      "@clesleycode, this is good to have, and I see it's mostly done. Please let us know if you need help with anything to make it ready for review."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115ddac254a19ac290bd1",
    "number": 1382,
    "body": "Fixes #1353",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: jae-jae / name: Jaeger  (e07b2322daa8492add9a147af516092a1f56f55c)</li></ul>",
      "@jae-jae I'm not a reviewer, but they're probably going to want a `CHANGELOG` entry for this.\r\n\r\nAlso, thanks for opening this PR, I'd spent far too much time trying to figure out why newer versions completely broke my app.",
      "Please add tests",
      "Succeeded by #1424. It has unit tests, and the author is responsive. "
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115deac254a19ac290bd2",
    "number": 1381,
    "body": "# Description\r\n\r\nThis PR adds the metrics support to aws lambda instrumentation\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "addmeterprovider-lambda",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115dfac254a19ac290bd3",
    "number": 1380,
    "body": null,
    "head_branch": "sem",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use metric semantic conventions (#1380)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115e0ac254a19ac290bd4",
    "number": 1379,
    "body": "# Description\r\nRequesting codeowner permission for `sdk-extension/opentelemetry-sdk-extension-aws`\r\n\r\nFixes # (issue)\r\n\r\nnone\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated `Not Applicable` \r\n- [ ] Unit tests have been added `Not Applicable` \r\n- [ ] Documentation has been updated `Not Applicable` \r\n",
    "head_branch": "permission",
    "is_a_fork": true,
    "comments": [
      "@NathanielRN Is this fine?"
    ],
    "commit_messages": [
      "Requesting codeowner permission for sdk-extension/opentelemetry-sdk-extension-aws (#1379)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115e0ac254a19ac290bd5",
    "number": 1377,
    "body": "I'm seeing this fail in my test suite:\r\n\r\n```python\r\n            duration_attrs[\r\n                SpanAttributes.HTTP_STATUS_CODE\r\n>           ] = span.attributes.get(SpanAttributes.HTTP_STATUS_CODE)\r\nE           AttributeError: 'NonRecordingSpan' object has no attribute 'attributes'\r\n```\r\n\r\nAnd I can tell that `NotRecordingSpan` does not have `attributes` and it seems like that would be checked for. I tried to add a test but with all of the mocking  and lack of typing I can't tell what is actually being tested where.",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "Seems like this was added in #1230, any thoughts @TheAnshul756?",
      "You are correct, this throws an error in the absence of SDK. Please use `span.is_recording()` instead. ",
      "I tried that locally and it made some other test fail, we'll see what CI says",
      "Indeed: https://github.com/open-telemetry/opentelemetry-python-contrib/actions/runs/3193872329/jobs/5212873611#step:6:2637",
      "~~Looks like the issue is in the tests.~~ `span.is_recording()` is false in case of the failed tests. I'm looking into it.\r\n\r\nUpd: Span detach was done in patched `start_response` method and we were trying to access `span.is_recordin()` after that.",
      "Hello @adriangb \r\nI've added the fix and want to commit. So should I create a PR on your fork?",
      "Sure or just merge that and I’ll rebase, either way",
      "Please merge [this PR](https://github.com/adriangb/opentelemetry-python-contrib/pull/1).",
      "> Please merge [this PR](https://github.com/adriangb/opentelemetry-python-contrib/pull/1).\r\n\r\nDone",
      "Hi is there anything missing to push this forward?",
      "I think just lint fix and changelog are remaining."
    ],
    "commit_messages": [
      "fix NonRecordSpan.attributes access (#1377)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115e1ac254a19ac290bd6",
    "number": 1374,
    "body": "# Description\r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python-contrib/issues/1371\r\n\r\n\r\nThe `importlib-metadata` released a new 5.0 with breaking changes last week and it's breaking the workflows. The end user decides which version of `celery` and `importlib-metadata` to use so we only pin the version in tests until we this issue is fixed upstream. ",
    "head_branch": "fix-import-error-celery",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Pin importlib-metadata version (#1374)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115e2ac254a19ac290bd7",
    "number": 1373,
    "body": "# Description\r\n\r\nThis PR aims to fix #1375 \r\n\r\n`skip change log`would be needed\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n\r\n",
    "head_branch": "useCompatibleRuntimeInDistro",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use compatible runtime for the dependency in opentelemetry-distro (#1373)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115e3ac254a19ac290bd8",
    "number": 1370,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "no-change",
    "is_a_fork": true,
    "comments": [
      "Close this if not needed"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115e4ac254a19ac290bd9",
    "number": 1369,
    "body": "custom django settings\r\n\r\n# Description\r\n\r\nSee issue: #677 \r\nIf Django is installed but the DJANGO_SETTINGS_MODULE  is not set, auto-instrumentation breaks -- even when auto-instrumenting non-django apps.\r\n   * Since django is installed, sitecustomize attempts to call [load_instrumentor]() but fails when it attempts to pull the MIDDLEWARE setting.\r\n```\r\nInstrumenting of django failed\r\nTraceback (most recent call last):\r\n  File \"c:\\users\\jeremyvoss\\workplace\\opentelemetry-python-contrib\\opentelemetry-instrumentation\\src\\opentelemetry\\instrumentation\\auto_instrumentation\\sitecustomize.py\", line 89, in _load_instrumentors\r\n    distro.load_instrumentor(entry_point, skip_dep_check=True)\r\n  File \"C:\\Users\\jeremyvoss\\workplace\\auto_instrumentation\\lib\\site-packages\\opentelemetry\\instrumentation\\distro.py\", line 63, in load_instrumentor\r\n    instrumentor().instrument(**kwargs)\r\n  File \"C:\\Users\\jeremyvoss\\workplace\\auto_instrumentation\\lib\\site-packages\\opentelemetry\\instrumentation\\instrumentor.py\", line 109, in instrument\r\n    raise exc\r\n  File \"c:\\users\\jeremyvoss\\workplace\\opentelemetry-python-contrib\\opentelemetry-instrumentation\\src\\opentelemetry\\instrumentation\\auto_instrumentation\\sitecustomize.py\", line 89, in _load_instrumentors\r\n    distro.load_instrumentor(entry_point, skip_dep_check=True)\r\n  File \"C:\\Users\\jeremyvoss\\workplace\\auto_instrumentation\\lib\\site-packages\\opentelemetry\\instrumentation\\distro.py\", line 63, in load_instrumentor\r\n    instrumentor().instrument(**kwargs)\r\n  File \"C:\\Users\\jeremyvoss\\workplace\\auto_instrumentation\\lib\\site-packages\\opentelemetry\\instrumentation\\instrumentor.py\", line 109, in instrument\r\n    result = self._instrument(  # pylint: disable=assignment-from-no-return\r\n  File \"C:\\Users\\jeremyvoss\\workplace\\opentelemetry-python-contrib\\instrumentation\\opentelemetry-instrumentation-django\\src\\opentelemetry\\instrumentation\\django\\__init__.py\", line 280, in _instrument\r\n    settings_middleware = getattr(settings, _middleware_setting, [])\r\n  File \"C:\\Users\\jeremyvoss\\workplace\\auto_instrumentation\\lib\\site-packages\\django\\conf\\__init__.py\", line 92, in __getattr__\r\n    self._setup(name)\r\n  File \"C:\\Users\\jeremyvoss\\workplace\\auto_instrumentation\\lib\\site-packages\\django\\conf\\__init__.py\", line 72, in _setup\r\n    raise ImproperlyConfigured(\r\ndjango.core.exceptions.ImproperlyConfigured: Requested setting MIDDLEWARE, but settings are not configured. You must either define the environment variable DJANGO_SETTINGS_MODULE or call settings.configure() before accessing settings.\r\n```\r\n\r\nSince this would cause issues for non-django apps, and it is unreasonable to ask that users always uninstall django on their machines when running non-django apps or to have a `DJANGO_SETTINGS_MODULE` env var configured when running non-django apps, I see 2 possible fixes:\r\n\r\n1. If there is no env var, we call `settings.configure()`. This leaves the settings empty, but configured. Which means we can still add `['opentelemetry.instrumentation.django.middleware.otel_middleware._DjangoMiddleware']` to it. The reason why we would actually set the settings to nothing instead of just the settings_middleware variable is that the remaining code uses `getattr` again. At first, I expected to make the following change:\r\n\r\n```\r\nif not settings.configured:\r\n    settings.configure()\r\nsettings_middleware = getattr(settings, _middleware_setting, [])\r\n```\r\nHowever, it turns out that when `DJANGO_SETTINGS_MODULE` set, `settings.configured` still returns `false`. It's only when `getattr` is called for the first time that django searches for the settings that `DJANGO_SETTINGS_MODULE` points to. Then, it either sets the settings to `configured` or throws the `ImproperlyConfigured` exception. For this reason, this PR checks whether django is configured by calling `getattr` itself.\r\n\r\n2. The other optione exit the django instrumentation peacefully but allow sitecustomize to continue other instrumentations. This would likely require changes to sitecustomize, since it is currently set up to stop instrumenting ALL instrumentations when an exception occurs in just one.\r\n\r\nFixes # (#677)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Testing auto-instrumentation with `DJANGO_SETTINGS_MODULE`. Ensured that `DJANGO_SETTINGS_MODULE` settings are used and not overwritten.\r\n- [x] Testing auto-instrumentation without `DJANGO_SETTINGS_MODULE`. Ensured that instrumentation succeeds and spans are produced.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "jerevoss",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Adding try catch to fix ImproperlyConfigured exception while allowing (#1369)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115e5ac254a19ac290bda",
    "number": 1367,
    "body": "# Description\r\n\r\nAdd test for asgi using NoOpTracerProvider\r\n\r\n\r\nFixes #992 \r\n\r\n# How Has This Been Tested?\r\n\r\ntox -e test-instrumentation-asgi ",
    "head_branch": "test-asgi-with-NoOpTracerProvider",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add test for asgi using NoOpTracerProvider (#1367)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115e6ac254a19ac290bdb",
    "number": 1366,
    "body": "# Description\r\n\r\nSince it is deprecated and we no longer accept any fixes to it. \r\n\r\nFixes #1358 \r\n\r\nFixes #1083 \r\n\r\nFixes #1347 ",
    "head_branch": "rm-rf-dd",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove DataDog exporter from main (#1366)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115e7ac254a19ac290bdc",
    "number": 1365,
    "body": "# Description\r\n\r\nManual Instrumentation in Falcon\r\n\r\nFixes #1342 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] `tox -e test-instrumentation-falcon1`\r\n- [x] `tox -e test-instrumentation-falcon2`\r\n- [x] `tox -e test-instrumentation-falcon3`\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "manual-instrumentation-falcon",
    "is_a_fork": true,
    "comments": [
      "@ocelotl : I guess you have mentioned that in wrong issue. Please delete your comment from here and paste it on [this issue](https://github.com/open-telemetry/opentelemetry-python-contrib/issues/1372) ",
      "> @ocelotl : I guess you have mentioned that in wrong issue. Please delete your comment from here and paste it on [this issue](https://github.com/open-telemetry/opentelemetry-python-contrib/issues/1372)\r\n\r\nRight, moved :v:"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115e8ac254a19ac290bdd",
    "number": 1363,
    "body": "Related to https://github.com/open-telemetry/opentelemetry-python/pull/2954\r\n\r\n# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix/2880",
    "is_a_fork": true,
    "comments": [
      "I am closing sine the original issue is fixed and core PR is closed."
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115e9ac254a19ac290bde",
    "number": 1359,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes #933 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- Unit tests have been updated and should provide similar coverage of functionality from before. Some tests where replaced, others fixed to support changes to MetricExporter ABC & or new components from OT SDK\r\n- Example directory for this exporter previously contained a complete example. I updated that to also provide similar coverage of the supported OT metric objects. It works as defined following the README instructions in there. No instruction update was required.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [X] Followed the style guidelines of this project (Ran linters, but may have missed some things)\r\n- [X] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "update_prom_rw_exporter",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: Seefooo / name: Youssef Gamal  (30ecfab9c81c27539c8605e271b009847d2d37aa, 82979a5c3e3e4086595e376b2ff6352bfab590f7, 1ce0712141310d68940cb698d2a6693f6b5f962b, 9c3766fd8128b3ce37a60617a9ae84576629a544, b1443bea6922c86ea2a9a09c4be703cfb69ba658, ce9c0904226aec32f3da46470854df42a62d93da)</li></ul>",
      "Thanks!"
    ],
    "commit_messages": [
      "Update prom rw exporter (#1359)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115eaac254a19ac290bdf",
    "number": 1357,
    "body": "# Description\r\n\r\nThe naming of the .tar.gz files used to be separated by - previously but with the new build tool they are _. It used to skip with a warning earlier with a message file already exists https://github.com/open-telemetry/opentelemetry-python-contrib/actions/runs/2827866155/jobs/4470177468 but it fails now because the naming is mismatching https://github.com/open-telemetry/opentelemetry-python-contrib/actions/runs/3131270761/jobs/5082435841. This is for the package datadog exporter we stopped accepting any changes. adding a skipping step for this exporter (thought already existed) would fix the issue.\r\n\r\nFixes #1355",
    "head_branch": "rm-dd-exporter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Temporary fix for dd exporter publish 400 issue (#1357)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115eaac254a19ac290be0",
    "number": 1352,
    "body": null,
    "head_branch": "release/1.13.0-0.34b0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "updating changelogs and version to 1.13.0-0.34b0 (#1352)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115ebac254a19ac290be1",
    "number": 1351,
    "body": null,
    "head_branch": "update-scripts",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Minor updates to scripts (#1351)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115ecac254a19ac290be2",
    "number": 1350,
    "body": "# Description\r\n\r\nSupport messaging system in the sqs extension. \r\nFollowing spec: https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/semantic_conventions/messaging.md\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [V] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [V] Testing using moto to check all the three API cases: SendMessage, SendMessageBatch, ReceiveMessage\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [V] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [V] Followed the style guidelines of this project\r\n- [V] Changelogs have been updated\r\n- [V] Unit tests have been added\r\n- [V] Documentation has been updated\r\n",
    "head_branch": "botocore-sqs-messaging-system",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: saartochner  (aa4a59fac93603847e3e5a891dadee8f796701e7)</li></ul>",
      "Also sign the CLA",
      "Hi @srikanthccv,\r\nI signed the CLA, can you please approve the workflow?\r\nThanks!",
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: saartochner  (aa4a59fac93603847e3e5a891dadee8f796701e7)</li></ul>"
    ],
    "commit_messages": [
      "feat: collecting messaging.* span attributes in botocore instrumentation (#1350)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115edac254a19ac290be3",
    "number": 1349,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Testing using moto to check all the three API cases: SendMessage, SendMessageBatch, ReceiveMessage\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "botocore-sqs-messaging-system",
    "is_a_fork": true,
    "comments": [
      " <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/220524743/1349/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-missing-id.svg\" alt=\"CLA Missing ID\" align=\"left\" height=\"28\" width=\"328\"></a> <a href=\"https://api.easycla.lfx.linuxfoundation.org/v2/repository-provider/github/sign/9522512/220524743/1349/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-not-signed.svg\" alt=\"CLA Not Signed\" align=\"left\" height=\"28\" width=\"328\"></a><br/><br /><ul><li> :x: The commit (3a6964b018b8ed3fa304858a26172a30f554047e). This user is missing the User's ID, preventing the EasyCLA check. <a href='https://help.github.com/en/github/committing-changes-to-your-project/why-are-my-commits-linked-to-the-wrong-user' target='_blank'>Consult GitHub Help</a> to resolve.For further assistance with EasyCLA, <a href='https://jira.linuxfoundation.org/servicedesk/customer/portal/4' target='_blank'>please submit a support request ticket</a>.</li></ul>"
    ],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115eeac254a19ac290be4",
    "number": 1346,
    "body": "…ated to … (#1213)\"\r\n\r\nThis reverts commit 270b73f55c32cdfad2a208fed06fb08f555cb4a7.\r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python-contrib/issues/1321",
    "head_branch": "revert-system-metrics-270b73f55c32cdfad2a208fed06fb08f555cb4a7",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Revert \"updated to remove directions from existing metrics. tests updated to … (#1213)\" (#1346)\n\nThis reverts commit 270b73f55c32cdfad2a208fed06fb08f555cb4a7."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115efac254a19ac290be5",
    "number": 1345,
    "body": "# Description\r\n\r\ngot `ZeroDevisionError`\r\n\r\n```\r\nCallback failed for instrument system.swap.utilization.\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.8/dist-packages/opentelemetry/sdk/metrics/_internal/instrument.py\", line 132, in callback\r\n    for api_measurement in callback(callback_options):\r\n  File \"/usr/local/lib/python3.8/dist-packages/opentelemetry/instrumentation/system_metrics/__init__.py\", line 515, in _get_system_swap_utilization\r\n    getattr(system_swap, metric) / system_swap.total,\r\nZeroDivisionError: division by zero\r\n```\r\n\r\nFixes #1337 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "yulin/zero",
    "is_a_fork": true,
    "comments": [
      "could we get this merged? @lzchen ",
      "@yulin-li \r\nPlease fix build issues.",
      "> @yulin-li Please fix build issues.\r\n\r\nI believe I fixed the lint issue and verified using `python scripts/eachdist.py lint` locally."
    ],
    "commit_messages": [
      "avoid ZeroDevisionError exception when swap memory is 0 (#1345)\n\n* avoid devidedByZero exception when sawp memory is 0\r\n\r\n* lint\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115f0ac254a19ac290be6",
    "number": 1344,
    "body": "# Description\r\n\r\nfix the flaky test in fastapi.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] `tox -e test-instrumentation-fastapi`\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n",
    "head_branch": "flacky-test-fix-fastapi",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix flaky test in fastapi (#1344)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115f1ac254a19ac290be7",
    "number": 1343,
    "body": "# Description\r\n\r\n## Type of change\r\n- [x] Updates README.md\r\n\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n",
    "head_branch": "update-readme-pyramid",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "update pyramid readme (#1343)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115f2ac254a19ac290be8",
    "number": 1341,
    "body": "# Description\r\n\r\nCreate a static list of all instances of InstrumentedFalconAPI and fix uninstrument function.\r\n\r\nFixes #1325  \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] `tox -e test-instrumentation-falcon1`\r\n- [x] `tox -e test-instrumentation-falcon2`\r\n- [x] `tox -e test-instrumentation-falcon3`\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n",
    "head_branch": "fix-uninstrument-falcon",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Uninstruemnt existing instances before uninstrumenting falcon class (#1341)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115f2ac254a19ac290be9",
    "number": 1340,
    "body": "\r\n# Description\r\n\r\nFix typo in  opentelemetry-contrib-instrumentations/README.rst\r\n\r\n\r\n## Type of change\r\n\r\n- [x] This change requires a documentation update\r\n\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: LronDC / name: Lron  (d7bdc8c8b2b7fc4e885058c6fb23cd1bba9d2015)</li></ul>"
    ],
    "commit_messages": [
      "Fix typo in  opentelemetry-contrib-instrumentations/README.rst (#1340)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115f3ac254a19ac290bea",
    "number": 1339,
    "body": "# Description\r\n\r\nActive threads count is a valuable metric and we can expose it in `opentelemetry-instrumentation-system-metrics`.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] `tests/test_system_metrics.py::TestSystemMetrics::test_system_thread_count`\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "yulin/threading",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: yulin-li / name: Yulin Li  (6f6028a1f45d4aecf8ed58fc53e960a631b32717)</li></ul>",
      "> Please add at least one test case\r\n\r\nwill do",
      "> Please add at least one test case\r\n\r\nut added, pls help to review"
    ],
    "commit_messages": [
      "collect threads count in opentelemetry-instrumentation-system-metrics (#1339)\n\n* collect threads count in opentelemetry-instrumentation-system-metrics\r\n\r\n* update\r\n\r\n* avoid devidedByZero exception when sawp memory is 0\r\n\r\n* add ut\r\n\r\n* change log\r\n\r\n* lint\r\n\r\n* lint\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115f4ac254a19ac290beb",
    "number": 1336,
    "body": "List of changes:\r\n- With a batch exporter currently, RichConsoleExporter would make all span originate with the first trace\r\n- Also it would print any span twice which would make the output a bit difficult to read\r\n- Additionally adding resources to the output to help debug \r\n\r\nThis makes the debug of a SDK configuration a bit easier",
    "head_branch": "fix/rich-console",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: rbizos  (660af5991974e853a3dcf0484e4ec481c0be08ad)</li></ul>",
      "Please fix `lint` failures",
      "Took some back and forth, sorry about that, I did not spend enough on getting the dev environment to work properly as my feature was so simple. Had some similar issue than https://github.com/open-telemetry/opentelemetry-python-contrib/issues/1083. Now that all works it should be better."
    ],
    "commit_messages": [
      "Fixing RichConsoleExporter to allow for multiple traces at once (#1336)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115f5ac254a19ac290bec",
    "number": 1333,
    "body": "Next part of https://github.com/open-telemetry/opentelemetry-python-contrib/issues/1184\r\n\r\n# Description\r\n\r\nAdd test cases for regular expression matching.\r\nAdd test cases for \"all\" keyword.\r\nAdd test cases for header sanitizing.\r\nAdd documentation for regular expression matching and header sanitation. \r\nVarious documentation cleanups and standardization. \r\nFix keys() in class ASGIGetter so it returns the HTTP header keys instead of a list of available request data. This makes it consistent with the WSGIGetter keys() method. \r\nMake ASGIGetter.get() compare all keys in a case insensitive manner.\r\n\r\nFixes #1184\r\n\r\n## Type of change\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [X] New feature (non-breaking change which adds functionality)\r\n- [X] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [X] Unit tests added.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [X] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n- [X] Documentation has been updated\r\n",
    "head_branch": "drogers-wildcard-headers",
    "is_a_fork": true,
    "comments": [
      "@srikanthccv Could you please take a look at this?",
      "@srikanthccv I think this should be ready to go, sorry for the delay!",
      "@srikanthccv Thanks for the review!  May you please merge this when you have a minute so that I can open the equivalent PR for WGSI?\r\n\r\nThanks!\r\n"
    ],
    "commit_messages": [
      "Add support for regular expression matching and sanitizing of headers in ASGI. (#1333)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115f6ac254a19ac290bed",
    "number": 1332,
    "body": "# Description\r\n\r\n## Type of change\r\n- [x] Updates README.md\r\n\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n",
    "head_branch": "metric-instrumentation-pyramid",
    "is_a_fork": true,
    "comments": [
      "@TheAnshul756 I just realized you updated falcon here although the title is pyramid 😅 . Please update the correct one in new PR.",
      "Hey I'm really sorry. I was working with multiple frameworks simultaneously so I messed up.🤦🏻‍♂️\r\nI'll fix it in my new PR."
    ],
    "commit_messages": [
      "Update Readme for Pyramid Instrumentation (#1332)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115f7ac254a19ac290bee",
    "number": 1331,
    "body": "Skip Changelog\r\n# Description\r\n\r\nLine number 133 having spelling mistake.\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "patch-4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Spelling mistake on line number 133. (#1331)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115f8ac254a19ac290bef",
    "number": 1330,
    "body": "# Description\r\n\r\nFixes #1326",
    "head_branch": "update-tooling",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update tooling (#1330)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115f9ac254a19ac290bf0",
    "number": 1329,
    "body": "The one last remaining package",
    "head_branch": "package-metadata-remoulade",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update package metadata for opentelemetry-instrumentation-remoulade (#1329)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115faac254a19ac290bf1",
    "number": 1327,
    "body": "# Description\r\n\r\nFixes #1146 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] tox -e test-instrumentation-starlette\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n",
    "head_branch": "metrics-instrumentation-starlette",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: rahulmukherjee68 / name: Rahul Mukherjee   (16cc4656e70d7f253c027b8465c849327c4dcfc4, c7bf4be5a8692d3446b9b07404f780688be94761, e605f9211e4b4c9ea125dace2aa9b8a45721ce0f, 38df3cc2c50a673a96d4caee236a9ee022bc185c)</li></ul>"
    ],
    "commit_messages": [
      "Metrics instrumentation starlette (#1327)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115fbac254a19ac290bf2",
    "number": 1324,
    "body": "# Description\r\n\r\nto reduce high cardinal value for a span name in the DB instrumentation use only the first word from the query.\r\n\r\nOther DB instrumentations (e.g. psycopg2) do likewise.\r\n\r\nFixes #1170 \r\n\r\n## Type of change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\ntested locally with a simple endpoint which selects data from a local db\r\n\r\nbefore:\r\n![image](https://user-images.githubusercontent.com/8479133/189524047-21edf91a-eb4f-4c24-948f-fb341705b9a7.png)\r\nafter:\r\n![image](https://user-images.githubusercontent.com/8479133/189524017-a85626cb-8b8f-4e10-bea4-dbac802a4d26.png)\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "asyncpg-span",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: krnr  (7b3b244289945aecd9ae1456449611f9b0274f9f)</li></ul>"
    ],
    "commit_messages": [
      "asyncpg: Use only the first word from query as a span name (#1324)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115fcac254a19ac290bf3",
    "number": 1323,
    "body": "# Description\r\nThis PR adds the target information for metrics reported by instrumentation/asgi.\r\n\r\nUnfortunately, there's no ASGI standard to reliably get this information, and I was only able to get it for FastAPI.\r\n\r\nI also tried to get the info with Sanic and Starlette (https://github.com/encode/starlette/issues/685), but there's nothing in the scope allowing to recreate the route.\r\n\r\nNote to reviewers: I tried to touch as less as possible, so that we don;t require a refactor before this change. However, we could consider changing `collect_request_attributes` so that it returns both a trace attributes and a metrics attributes. Wihout that change we cannot add the `HTTP_TARGET` attribute to the list of metric atttributes, because it will be present but with high cardinality.\r\n\r\n\r\n\r\nPartially fixes #1116\r\n\r\n## Type of change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nBesides the included unit tests, the logic was tested using the following app:\r\n\r\n```python\r\nimport io\r\nimport fastapi\r\n\r\napp = fastapi.FastAPI()\r\n\r\ndef dump_scope(scope):\r\n    b = io.StringIO()\r\n    print(scope, file=b)\r\n    return b.getvalue()\r\n\r\n@app.get(\"/test/{id}\")\r\ndef test(id: str, req: fastapi.Request):\r\n    print(req.scope)\r\n    return {\"target\": _collect_target_attribute(req.scope), \"scope\": dump_scope(req.scope)}\r\n\r\nsub_app = fastapi.FastAPI()\r\n\r\n@sub_app.get(\"/test/{id}\")\r\ndef sub_test(id: str, req: fastapi.Request):\r\n    print(req.scope)\r\n    return {\"target\": _collect_target_attribute(req.scope), \"scope\": dump_scope(req.scope)}\r\n\r\napp.mount(\"/sub\", sub_app)\r\n```\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "issue1316",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: sk- / name: Sebastian Kreft  (086213c41844c3767471bd4a295f015969993e5a)</li></ul>",
      "Not sure what to do regarding the failed lint checks\r\n\r\n```\r\n************* Module opentelemetry.instrumentation.asgi\r\ninstrumentation/opentelemetry-instrumentation-asgi/src/opentelemetry/instrumentation/asgi/__init__.py:449:4: R0912: Too many branches (13/12) (too-many-branches)\r\n************* Module tests.test_asgi_middleware\r\ninstrumentation/opentelemetry-instrumentation-asgi/tests/test_asgi_middleware.py:1:0: C0302: Too many lines in module (1036/1000) (too-many-lines)\r\n```\r\n\r\n* How can I test the feature if there are no lines left to be added?\r\n* One branch could be removed from the method `__call__` by changing\r\n```python\r\nfor key, value in attributes.items():\r\n  current_span.set_attribute(key, value)\r\n```\r\nto\r\n```python\r\ncurrent_span.set_attributes(attributes)\r\n```\r\n\r\nHowever, that's not even related to this PR.\r\n\r\nI could also have a function that modifies the list of attributes, and hence moving the `if target` check to that function.\r\n\r\nHowever, I think it'd be best to change `collect_request_attributes` to return a set of attributes suitable for metrics and another for traces. However, that would require a refactoring several places, as that function is public and actively used today.",
      "@srikanthccv any advice regarding what to do to fix the lint violations?\r\n\r\nSee https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1323#issuecomment-1242810964\r\n\r\nIt's complaining about too many lines in the test file and too many branches in the main function. ",
      "Hm, I am not sure. I don't mind if you add pylint-disable.",
      "> Hm, I am not sure. I don't mind if you add pylint-disable.\r\n\r\nDone, let me know if everything looks good now."
    ],
    "commit_messages": [
      "feat(instrumentation/asgi): add target to metrics (#1323)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115fdac254a19ac290bf4",
    "number": 1322,
    "body": "# Description\r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python-contrib/issues/1259#issuecomment-1242205439",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix tooling (#1322)\n\n* Update scripts/eachdist.py\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115fdac254a19ac290bf5",
    "number": 1320,
    "body": "Reverts open-telemetry/opentelemetry-python-contrib#1214",
    "head_branch": "revert-1214-feature/issue_1171_remove_direction_attribute_from_system_metrics",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115feac254a19ac290bf6",
    "number": 1318,
    "body": "# Description\r\n\r\nCopy https://github.com/open-telemetry/opentelemetry-python/blob/05fd6f3399b1a214c46e71367e124be5d504ad26/tox.ini#L2",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use PEP 517 builds for tox (#1318)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662115ffac254a19ac290bf7",
    "number": 1315,
    "body": "# Description\r\n\r\nThe `context.peer()` is returning URL encoded host IP address, causing the build failures. This fixes it.",
    "head_branch": "grpc-ip-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix: unquote peer ip (#1315)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211600ac254a19ac290bf8",
    "number": 1314,
    "body": "# Description\r\n\r\nMany links on pypi.org are broken, because URLs were not updated when packages moved from `opentelemetry-python` to `opentelemetry-python-contrib`, or because they were never correct.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Followed links manually\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated",
    "head_branch": "fix-links",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix broken links in package metadata (#1314)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211601ac254a19ac290bf9",
    "number": 1313,
    "body": "Fixes #1312 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] `tox -e test-instrumentation-fastapi`\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n",
    "head_branch": "fix-fastapi-otel-instrumented-check",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix check of is_otel_instrumented (#1313)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211602ac254a19ac290bfa",
    "number": 1311,
    "body": "# Description\r\n\r\nThe minimal version of `redis` that includes the asyncio cluster isn't 4.3.0 but rather 4.3.2. The instrumentation crashes on 4.3.1\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nReproduced manually\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "redis_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "redis asyncio cluster version fix (#1311)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211603ac254a19ac290bfb",
    "number": 1310,
    "body": "# Description\r\n\r\nThis updates the package metadata for `_template` in accordance with #1259\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n```\r\ntox\r\n```\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR:\r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated",
    "head_branch": "modernize-metadata/_template",
    "is_a_fork": true,
    "comments": [
      "Why is CI failing?",
      "Would you mind triggering the CI with that button below?"
    ],
    "commit_messages": [
      "Update package metadata _template (#1310)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211604ac254a19ac290bfc",
    "number": 1309,
    "body": "# Description\n\nThis updates the package metadata for `opentelemetry-util-http` in accordance with #1259\n\n## Type of change\n\nPlease delete options that are not relevant.\n\n- [X] This change requires a documentation update\n\n# How Has This Been Tested?\n\n```\ntox\n```\n\n# Does This PR Require a Core Repo Change?\n\n- [ ] Yes. - Link to PR:\n- [X] No.\n\n# Checklist:\n\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\n\n- [ ] Followed the style guidelines of this project\n- [ ] Changelogs have been updated\n- [ ] Unit tests have been added\n- [ ] Documentation has been updated",
    "head_branch": "modernize-metadata/util/opentelemetry-util-http",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update package metadata opentelemetry-util-http (#1309)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211605ac254a19ac290bfd",
    "number": 1308,
    "body": "# Description\n\nThis updates the package metadata for `opentelemetry-sdk-extension-aws` in accordance with #1259\n\n## Type of change\n\nPlease delete options that are not relevant.\n\n- [X] This change requires a documentation update\n\n# How Has This Been Tested?\n\n```\ntox\n```\n\n# Does This PR Require a Core Repo Change?\n\n- [ ] Yes. - Link to PR:\n- [X] No.\n\n# Checklist:\n\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\n\n- [ ] Followed the style guidelines of this project\n- [ ] Changelogs have been updated\n- [ ] Unit tests have been added\n- [ ] Documentation has been updated",
    "head_branch": "modernize-metadata/sdk-extension/opentelemetry-sdk-extension-aws",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update package metadata (#1308)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211606ac254a19ac290bfe",
    "number": 1307,
    "body": "# Description\n\nThis updates the package metadata for `opentelemetry-propagator-ot-trace` in accordance with #1259\n\n## Type of change\n\nPlease delete options that are not relevant.\n\n- [X] This change requires a documentation update\n\n# How Has This Been Tested?\n\n```\ntox\n```\n\n# Does This PR Require a Core Repo Change?\n\n- [ ] Yes. - Link to PR:\n- [X] No.\n\n# Checklist:\n\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\n\n- [ ] Followed the style guidelines of this project\n- [ ] Changelogs have been updated\n- [ ] Unit tests have been added\n- [ ] Documentation has been updated",
    "head_branch": "modernize-metadata/propagator/opentelemetry-propagator-ot-trace",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update package metadata opentelemetry-propagator-ot-trace (#1307)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211606ac254a19ac290bff",
    "number": 1306,
    "body": "# Description\n\nThis updates the package metadata for `opentelemetry-propagator-aws-xray` in accordance with #1259\n\n## Type of change\n\nPlease delete options that are not relevant.\n\n- [X] This change requires a documentation update\n\n# How Has This Been Tested?\n\n```\ntox\n```\n\n# Does This PR Require a Core Repo Change?\n\n- [ ] Yes. - Link to PR:\n- [X] No.\n\n# Checklist:\n\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\n\n- [ ] Followed the style guidelines of this project\n- [ ] Changelogs have been updated\n- [ ] Unit tests have been added\n- [ ] Documentation has been updated",
    "head_branch": "modernize-metadata/propagator/opentelemetry-propagator-aws-xray",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update package metadata opentelemetry-propagator-aws-xray (#1306)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211607ac254a19ac290c00",
    "number": 1305,
    "body": "# Description\n\nThis updates the package metadata for `opentelemetry-instrumentation` in accordance with #1259\n\n## Type of change\n\nPlease delete options that are not relevant.\n\n- [X] This change requires a documentation update\n\n# How Has This Been Tested?\n\n```\ntox\n```\n\n# Does This PR Require a Core Repo Change?\n\n- [ ] Yes. - Link to PR:\n- [X] No.\n\n# Checklist:\n\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\n\n- [ ] Followed the style guidelines of this project\n- [ ] Changelogs have been updated\n- [ ] Unit tests have been added\n- [ ] Documentation has been updated",
    "head_branch": "modernize-metadata/opentelemetry-instrumentation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update package metadata opentelemetry-instrumentation (#1305)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211608ac254a19ac290c01",
    "number": 1304,
    "body": "# Description\n\nThis updates the package metadata for `opentelemetry-distro` in accordance with #1259\n\n## Type of change\n\nPlease delete options that are not relevant.\n\n- [X] This change requires a documentation update\n\n# How Has This Been Tested?\n\n```\ntox\n```\n\n# Does This PR Require a Core Repo Change?\n\n- [ ] Yes. - Link to PR:\n- [X] No.\n\n# Checklist:\n\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\n\n- [ ] Followed the style guidelines of this project\n- [ ] Changelogs have been updated\n- [ ] Unit tests have been added\n- [ ] Documentation has been updated",
    "head_branch": "modernize-metadata/opentelemetry-distro",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update package metadata opentelemetry-distro (#1304)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211609ac254a19ac290c02",
    "number": 1303,
    "body": "# Description\n\nThis updates the package metadata for `opentelemetry-contrib-instrumentations` in accordance with #1259\n\n## Type of change\n\nPlease delete options that are not relevant.\n\n- [X] This change requires a documentation update\n\n# How Has This Been Tested?\n\n```\ntox\n```\n\n# Does This PR Require a Core Repo Change?\n\n- [ ] Yes. - Link to PR:\n- [X] No.\n\n# Checklist:\n\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\n\n- [ ] Followed the style guidelines of this project\n- [ ] Changelogs have been updated\n- [ ] Unit tests have been added\n- [ ] Documentation has been updated",
    "head_branch": "modernize-metadata/opentelemetry-contrib-instrumentations",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update package metadata opentelemetry-contrib-instrumentations (#1303)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621160aac254a19ac290c03",
    "number": 1302,
    "body": "# Description\n\nThis updates the package metadata for `opentelemetry-instrumentation-wsgi` in accordance with #1259\n\n## Type of change\n\nPlease delete options that are not relevant.\n\n- [X] This change requires a documentation update\n\n# How Has This Been Tested?\n\n```\ntox\n```\n\n# Does This PR Require a Core Repo Change?\n\n- [ ] Yes. - Link to PR:\n- [X] No.\n\n# Checklist:\n\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\n\n- [ ] Followed the style guidelines of this project\n- [ ] Changelogs have been updated\n- [ ] Unit tests have been added\n- [ ] Documentation has been updated",
    "head_branch": "modernize-metadata/instrumentation/opentelemetry-instrumentation-wsgi",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update package metadata (#1302)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621160bac254a19ac290c04",
    "number": 1301,
    "body": "# Description\n\nThis updates the package metadata for `opentelemetry-instrumentation-urllib3` in accordance with #1259\n\n## Type of change\n\nPlease delete options that are not relevant.\n\n- [X] This change requires a documentation update\n\n# How Has This Been Tested?\n\n```\ntox\n```\n\n# Does This PR Require a Core Repo Change?\n\n- [ ] Yes. - Link to PR:\n- [X] No.\n\n# Checklist:\n\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\n\n- [ ] Followed the style guidelines of this project\n- [ ] Changelogs have been updated\n- [ ] Unit tests have been added\n- [ ] Documentation has been updated",
    "head_branch": "modernize-metadata/instrumentation/opentelemetry-instrumentation-urllib3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update package metadata opentelemetry-instrumentation-urllib3 (#1301)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621160cac254a19ac290c05",
    "number": 1300,
    "body": "# Description\n\nThis updates the package metadata for `opentelemetry-instrumentation-urllib` in accordance with #1259\n\n## Type of change\n\nPlease delete options that are not relevant.\n\n- [X] This change requires a documentation update\n\n# How Has This Been Tested?\n\n```\ntox\n```\n\n# Does This PR Require a Core Repo Change?\n\n- [ ] Yes. - Link to PR:\n- [X] No.\n\n# Checklist:\n\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\n\n- [ ] Followed the style guidelines of this project\n- [ ] Changelogs have been updated\n- [ ] Unit tests have been added\n- [ ] Documentation has been updated",
    "head_branch": "modernize-metadata/instrumentation/opentelemetry-instrumentation-urllib",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update package metadata opentelemetry-instrumentation-urllib (#1300)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621160dac254a19ac290c06",
    "number": 1299,
    "body": "# Description\n\nThis updates the package metadata for `opentelemetry-instrumentation-tornado` in accordance with #1259\n\n## Type of change\n\nPlease delete options that are not relevant.\n\n- [X] This change requires a documentation update\n\n# How Has This Been Tested?\n\n```\ntox\n```\n\n# Does This PR Require a Core Repo Change?\n\n- [ ] Yes. - Link to PR:\n- [X] No.\n\n# Checklist:\n\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\n\n- [ ] Followed the style guidelines of this project\n- [ ] Changelogs have been updated\n- [ ] Unit tests have been added\n- [ ] Documentation has been updated",
    "head_branch": "modernize-metadata/instrumentation/opentelemetry-instrumentation-tornado",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update package metadata opentelemetry-instrumentation-tornado (#1299)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621160eac254a19ac290c07",
    "number": 1298,
    "body": "# Description\n\nThis updates the package metadata for `opentelemetry-instrumentation-system-metrics` in accordance with #1259\n\n## Type of change\n\nPlease delete options that are not relevant.\n\n- [X] This change requires a documentation update\n\n# How Has This Been Tested?\n\n```\ntox\n```\n\n# Does This PR Require a Core Repo Change?\n\n- [ ] Yes. - Link to PR:\n- [X] No.\n\n# Checklist:\n\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\n\n- [ ] Followed the style guidelines of this project\n- [ ] Changelogs have been updated\n- [ ] Unit tests have been added\n- [ ] Documentation has been updated",
    "head_branch": "modernize-metadata/instrumentation/opentelemetry-instrumentation-system-metrics",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update package metadata opentelemetry-instrumentation-system-metrics (#1298)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621160fac254a19ac290c08",
    "number": 1297,
    "body": "# Description\n\nThis updates the package metadata for `opentelemetry-instrumentation-starlette` in accordance with #1259\n\n## Type of change\n\nPlease delete options that are not relevant.\n\n- [X] This change requires a documentation update\n\n# How Has This Been Tested?\n\n```\ntox\n```\n\n# Does This PR Require a Core Repo Change?\n\n- [ ] Yes. - Link to PR:\n- [X] No.\n\n# Checklist:\n\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\n\n- [ ] Followed the style guidelines of this project\n- [ ] Changelogs have been updated\n- [ ] Unit tests have been added\n- [ ] Documentation has been updated",
    "head_branch": "modernize-metadata/instrumentation/opentelemetry-instrumentation-starlette",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update package metadata opentelemetry-instrumentation-starlette (#1297)\n\n* Update package metadata\r\n\r\n* Update instrumentation/opentelemetry-instrumentation-starlette/pyproject.toml\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211610ac254a19ac290c09",
    "number": 1296,
    "body": "# Description\n\nThis updates the package metadata for `opentelemetry-instrumentation-sqlite3` in accordance with #1259\n\n## Type of change\n\nPlease delete options that are not relevant.\n\n- [X] This change requires a documentation update\n\n# How Has This Been Tested?\n\n```\ntox\n```\n\n# Does This PR Require a Core Repo Change?\n\n- [ ] Yes. - Link to PR:\n- [X] No.\n\n# Checklist:\n\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\n\n- [ ] Followed the style guidelines of this project\n- [ ] Changelogs have been updated\n- [ ] Unit tests have been added\n- [ ] Documentation has been updated",
    "head_branch": "modernize-metadata/instrumentation/opentelemetry-instrumentation-sqlite3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update package metadata opentelemetry-instrumentation-sqlite3 (#1296)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211610ac254a19ac290c0a",
    "number": 1295,
    "body": "# Description\n\nThis updates the package metadata for `opentelemetry-instrumentation-sqlalchemy` in accordance with #1259\n\n## Type of change\n\nPlease delete options that are not relevant.\n\n- [X] This change requires a documentation update\n\n# How Has This Been Tested?\n\n```\ntox\n```\n\n# Does This PR Require a Core Repo Change?\n\n- [ ] Yes. - Link to PR:\n- [X] No.\n\n# Checklist:\n\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\n\n- [ ] Followed the style guidelines of this project\n- [ ] Changelogs have been updated\n- [ ] Unit tests have been added\n- [ ] Documentation has been updated",
    "head_branch": "modernize-metadata/instrumentation/opentelemetry-instrumentation-sqlalchemy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update package metadata opentelemetry-instrumentation-sqlalchemy (#1295)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211612ac254a19ac290c0b",
    "number": 1294,
    "body": "# Description\n\nThis updates the package metadata for `opentelemetry-instrumentation-sklearn` in accordance with #1259\n\n## Type of change\n\nPlease delete options that are not relevant.\n\n- [X] This change requires a documentation update\n\n# How Has This Been Tested?\n\n```\ntox\n```\n\n# Does This PR Require a Core Repo Change?\n\n- [ ] Yes. - Link to PR:\n- [X] No.\n\n# Checklist:\n\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\n\n- [ ] Followed the style guidelines of this project\n- [ ] Changelogs have been updated\n- [ ] Unit tests have been added\n- [ ] Documentation has been updated",
    "head_branch": "modernize-metadata/instrumentation/opentelemetry-instrumentation-sklearn",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update package metadata opentelemetry-instrumentation-sklearn (#1294)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211613ac254a19ac290c0c",
    "number": 1293,
    "body": "# Description\n\nThis updates the package metadata for `opentelemetry-instrumentation-requests` in accordance with #1259\n\n## Type of change\n\nPlease delete options that are not relevant.\n\n- [X] This change requires a documentation update\n\n# How Has This Been Tested?\n\n```\ntox\n```\n\n# Does This PR Require a Core Repo Change?\n\n- [ ] Yes. - Link to PR:\n- [X] No.\n\n# Checklist:\n\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\n\n- [ ] Followed the style guidelines of this project\n- [ ] Changelogs have been updated\n- [ ] Unit tests have been added\n- [ ] Documentation has been updated",
    "head_branch": "modernize-metadata/instrumentation/opentelemetry-instrumentation-requests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update package metadata opentelemetry-instrumentation-requests (#1293)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211613ac254a19ac290c0d",
    "number": 1292,
    "body": "# Description\n\nThis updates the package metadata for `opentelemetry-instrumentation-redis` in accordance with #1259\n\n## Type of change\n\nPlease delete options that are not relevant.\n\n- [X] This change requires a documentation update\n\n# How Has This Been Tested?\n\n```\ntox\n```\n\n# Does This PR Require a Core Repo Change?\n\n- [ ] Yes. - Link to PR:\n- [X] No.\n\n# Checklist:\n\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\n\n- [ ] Followed the style guidelines of this project\n- [ ] Changelogs have been updated\n- [ ] Unit tests have been added\n- [ ] Documentation has been updated",
    "head_branch": "modernize-metadata/instrumentation/opentelemetry-instrumentation-redis",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update package metadata opentelemetry-instrumentation-redis (#1292)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211614ac254a19ac290c0e",
    "number": 1291,
    "body": "# Description\n\nThis updates the package metadata for `opentelemetry-instrumentation-pyramid` in accordance with #1259\n\n## Type of change\n\nPlease delete options that are not relevant.\n\n- [X] This change requires a documentation update\n\n# How Has This Been Tested?\n\n```\ntox\n```\n\n# Does This PR Require a Core Repo Change?\n\n- [ ] Yes. - Link to PR:\n- [X] No.\n\n# Checklist:\n\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\n\n- [ ] Followed the style guidelines of this project\n- [ ] Changelogs have been updated\n- [ ] Unit tests have been added\n- [ ] Documentation has been updated",
    "head_branch": "modernize-metadata/instrumentation/opentelemetry-instrumentation-pyramid",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update package metadata opentelemetry-instrumentation-pyramid (#1291)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211615ac254a19ac290c0f",
    "number": 1290,
    "body": "# Description\n\nThis updates the package metadata for `opentelemetry-instrumentation-pymysql` in accordance with #1259\n\n## Type of change\n\nPlease delete options that are not relevant.\n\n- [X] This change requires a documentation update\n\n# How Has This Been Tested?\n\n```\ntox\n```\n\n# Does This PR Require a Core Repo Change?\n\n- [ ] Yes. - Link to PR:\n- [X] No.\n\n# Checklist:\n\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\n\n- [ ] Followed the style guidelines of this project\n- [ ] Changelogs have been updated\n- [ ] Unit tests have been added\n- [ ] Documentation has been updated",
    "head_branch": "modernize-metadata/instrumentation/opentelemetry-instrumentation-pymysql",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update package metadata opentelemetry-instrumentation-pymysql (#1290)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211616ac254a19ac290c10",
    "number": 1289,
    "body": "# Description\n\nThis updates the package metadata for `opentelemetry-instrumentation-pymongo` in accordance with #1259\n\n## Type of change\n\nPlease delete options that are not relevant.\n\n- [X] This change requires a documentation update\n\n# How Has This Been Tested?\n\n```\ntox\n```\n\n# Does This PR Require a Core Repo Change?\n\n- [ ] Yes. - Link to PR:\n- [X] No.\n\n# Checklist:\n\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\n\n- [ ] Followed the style guidelines of this project\n- [ ] Changelogs have been updated\n- [ ] Unit tests have been added\n- [ ] Documentation has been updated",
    "head_branch": "modernize-metadata/instrumentation/opentelemetry-instrumentation-pymongo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update package metadata opentelemetry-instrumentation-pymongo (#1289)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211617ac254a19ac290c11",
    "number": 1288,
    "body": "# Description\n\nThis updates the package metadata for `opentelemetry-instrumentation-pymemcache` in accordance with #1259\n\n## Type of change\n\nPlease delete options that are not relevant.\n\n- [X] This change requires a documentation update\n\n# How Has This Been Tested?\n\n```\ntox\n```\n\n# Does This PR Require a Core Repo Change?\n\n- [ ] Yes. - Link to PR:\n- [X] No.\n\n# Checklist:\n\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\n\n- [ ] Followed the style guidelines of this project\n- [ ] Changelogs have been updated\n- [ ] Unit tests have been added\n- [ ] Documentation has been updated",
    "head_branch": "modernize-metadata/instrumentation/opentelemetry-instrumentation-pymemcache",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update package metadata opentelemetry-instrumentation-pymemcache (#1288)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211618ac254a19ac290c12",
    "number": 1287,
    "body": "# Description\n\nThis updates the package metadata for `opentelemetry-instrumentation-psycopg2` in accordance with #1259\n\n## Type of change\n\nPlease delete options that are not relevant.\n\n- [X] This change requires a documentation update\n\n# How Has This Been Tested?\n\n```\ntox\n```\n\n# Does This PR Require a Core Repo Change?\n\n- [ ] Yes. - Link to PR:\n- [X] No.\n\n# Checklist:\n\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\n\n- [ ] Followed the style guidelines of this project\n- [ ] Changelogs have been updated\n- [ ] Unit tests have been added\n- [ ] Documentation has been updated",
    "head_branch": "modernize-metadata/instrumentation/opentelemetry-instrumentation-psycopg2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update package metadata opentelemetry-instrumentation-psycopg2 (#1287)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211619ac254a19ac290c13",
    "number": 1286,
    "body": "# Description\n\nThis updates the package metadata for `opentelemetry-instrumentation-pika` in accordance with #1259\n\n## Type of change\n\nPlease delete options that are not relevant.\n\n- [X] This change requires a documentation update\n\n# How Has This Been Tested?\n\n```\ntox\n```\n\n# Does This PR Require a Core Repo Change?\n\n- [ ] Yes. - Link to PR:\n- [X] No.\n\n# Checklist:\n\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\n\n- [ ] Followed the style guidelines of this project\n- [ ] Changelogs have been updated\n- [ ] Unit tests have been added\n- [ ] Documentation has been updated",
    "head_branch": "modernize-metadata/instrumentation/opentelemetry-instrumentation-pika",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update package metadata opentelemetry-instrumentation-pika (#1286)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621161aac254a19ac290c14",
    "number": 1285,
    "body": "# Description\n\nThis updates the package metadata for `opentelemetry-instrumentation-mysql` in accordance with #1259\n\n## Type of change\n\nPlease delete options that are not relevant.\n\n- [X] This change requires a documentation update\n\n# How Has This Been Tested?\n\n```\ntox\n```\n\n# Does This PR Require a Core Repo Change?\n\n- [ ] Yes. - Link to PR:\n- [X] No.\n\n# Checklist:\n\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\n\n- [ ] Followed the style guidelines of this project\n- [ ] Changelogs have been updated\n- [ ] Unit tests have been added\n- [ ] Documentation has been updated",
    "head_branch": "modernize-metadata/instrumentation/opentelemetry-instrumentation-mysql",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update package metadata opentelemetry-instrumentation-mysql (#1285)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621161bac254a19ac290c15",
    "number": 1284,
    "body": "# Description\n\nThis updates the package metadata for `opentelemetry-instrumentation-logging` in accordance with #1259\n\n## Type of change\n\nPlease delete options that are not relevant.\n\n- [X] This change requires a documentation update\n\n# How Has This Been Tested?\n\n```\ntox\n```\n\n# Does This PR Require a Core Repo Change?\n\n- [ ] Yes. - Link to PR:\n- [X] No.\n\n# Checklist:\n\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\n\n- [ ] Followed the style guidelines of this project\n- [ ] Changelogs have been updated\n- [ ] Unit tests have been added\n- [ ] Documentation has been updated",
    "head_branch": "modernize-metadata/instrumentation/opentelemetry-instrumentation-logging",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update package metadata opentelemetry-instrumentation-logging (#1284)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621161cac254a19ac290c16",
    "number": 1283,
    "body": "# Description\n\nThis updates the package metadata for `opentelemetry-instrumentation-kafka-python` in accordance with #1259\n\n## Type of change\n\nPlease delete options that are not relevant.\n\n- [X] This change requires a documentation update\n\n# How Has This Been Tested?\n\n```\ntox\n```\n\n# Does This PR Require a Core Repo Change?\n\n- [ ] Yes. - Link to PR:\n- [X] No.\n\n# Checklist:\n\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\n\n- [ ] Followed the style guidelines of this project\n- [ ] Changelogs have been updated\n- [ ] Unit tests have been added\n- [ ] Documentation has been updated",
    "head_branch": "modernize-metadata/instrumentation/opentelemetry-instrumentation-kafka-python",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update package metadata opentelemetry-instrumentation-kafka-python (#1283)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621161cac254a19ac290c17",
    "number": 1282,
    "body": "# Description\n\nThis updates the package metadata for `opentelemetry-instrumentation-jinja2` in accordance with #1259\n\n## Type of change\n\nPlease delete options that are not relevant.\n\n- [X] This change requires a documentation update\n\n# How Has This Been Tested?\n\n```\ntox\n```\n\n# Does This PR Require a Core Repo Change?\n\n- [ ] Yes. - Link to PR:\n- [X] No.\n\n# Checklist:\n\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\n\n- [ ] Followed the style guidelines of this project\n- [ ] Changelogs have been updated\n- [ ] Unit tests have been added\n- [ ] Documentation has been updated",
    "head_branch": "modernize-metadata/instrumentation/opentelemetry-instrumentation-jinja2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update package metadata opentelemetry-instrumentation-jinja2 (#1282)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621161dac254a19ac290c18",
    "number": 1281,
    "body": "# Description\n\nThis updates the package metadata for `opentelemetry-instrumentation-httpx` in accordance with #1259\n\n## Type of change\n\nPlease delete options that are not relevant.\n\n- [X] This change requires a documentation update\n\n# How Has This Been Tested?\n\n```\ntox\n```\n\n# Does This PR Require a Core Repo Change?\n\n- [ ] Yes. - Link to PR:\n- [X] No.\n\n# Checklist:\n\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\n\n- [ ] Followed the style guidelines of this project\n- [ ] Changelogs have been updated\n- [ ] Unit tests have been added\n- [ ] Documentation has been updated",
    "head_branch": "modernize-metadata/instrumentation/opentelemetry-instrumentation-httpx",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update package metadata opentelemetry-instrumentation-httpx (#1281)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621161eac254a19ac290c19",
    "number": 1280,
    "body": "# Description\n\nThis updates the package metadata for `opentelemetry-instrumentation-grpc` in accordance with #1259\n\n## Type of change\n\nPlease delete options that are not relevant.\n\n- [X] This change requires a documentation update\n\n# How Has This Been Tested?\n\n```\ntox\n```\n\n# Does This PR Require a Core Repo Change?\n\n- [ ] Yes. - Link to PR:\n- [X] No.\n\n# Checklist:\n\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\n\n- [ ] Followed the style guidelines of this project\n- [ ] Changelogs have been updated\n- [ ] Unit tests have been added\n- [ ] Documentation has been updated",
    "head_branch": "modernize-metadata/instrumentation/opentelemetry-instrumentation-grpc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update package metadata opentelemetry-instrumentation-grpc (#1280)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621161fac254a19ac290c1a",
    "number": 1279,
    "body": "# Description\n\nThis updates the package metadata for `opentelemetry-instrumentation-flask` in accordance with #1259\n\n## Type of change\n\nPlease delete options that are not relevant.\n\n- [X] This change requires a documentation update\n\n# How Has This Been Tested?\n\n```\ntox\n```\n\n# Does This PR Require a Core Repo Change?\n\n- [ ] Yes. - Link to PR:\n- [X] No.\n\n# Checklist:\n\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\n\n- [ ] Followed the style guidelines of this project\n- [ ] Changelogs have been updated\n- [ ] Unit tests have been added\n- [ ] Documentation has been updated",
    "head_branch": "modernize-metadata/instrumentation/opentelemetry-instrumentation-flask",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update package metadata opentelemetry-instrumentation-flask (#1279)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211620ac254a19ac290c1b",
    "number": 1278,
    "body": "# Description\n\nThis updates the package metadata for `opentelemetry-instrumentation-fastapi` in accordance with #1259\n\n## Type of change\n\nPlease delete options that are not relevant.\n\n- [X] This change requires a documentation update\n\n# How Has This Been Tested?\n\n```\ntox\n```\n\n# Does This PR Require a Core Repo Change?\n\n- [ ] Yes. - Link to PR:\n- [X] No.\n\n# Checklist:\n\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\n\n- [ ] Followed the style guidelines of this project\n- [ ] Changelogs have been updated\n- [ ] Unit tests have been added\n- [ ] Documentation has been updated",
    "head_branch": "modernize-metadata/instrumentation/opentelemetry-instrumentation-fastapi",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update package metadata opentelemetry-instrumentation-fastapi (#1278)\n\n* Update package metadata\r\n\r\n* Update instrumentation/opentelemetry-instrumentation-fastapi/pyproject.toml\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211621ac254a19ac290c1c",
    "number": 1277,
    "body": "# Description\n\nThis updates the package metadata for `opentelemetry-instrumentation-falcon` in accordance with #1259\n\n## Type of change\n\nPlease delete options that are not relevant.\n\n- [X] This change requires a documentation update\n\n# How Has This Been Tested?\n\n```\ntox\n```\n\n# Does This PR Require a Core Repo Change?\n\n- [ ] Yes. - Link to PR:\n- [X] No.\n\n# Checklist:\n\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\n\n- [ ] Followed the style guidelines of this project\n- [ ] Changelogs have been updated\n- [ ] Unit tests have been added\n- [ ] Documentation has been updated",
    "head_branch": "modernize-metadata/instrumentation/opentelemetry-instrumentation-falcon",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update package metadata opentelemetry-instrumentation-falcon (#1277)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211622ac254a19ac290c1d",
    "number": 1276,
    "body": "# Description\n\nThis updates the package metadata for `opentelemetry-instrumentation-elasticsearch` in accordance with #1259\n\n## Type of change\n\nPlease delete options that are not relevant.\n\n- [X] This change requires a documentation update\n\n# How Has This Been Tested?\n\n```\ntox\n```\n\n# Does This PR Require a Core Repo Change?\n\n- [ ] Yes. - Link to PR:\n- [X] No.\n\n# Checklist:\n\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\n\n- [ ] Followed the style guidelines of this project\n- [ ] Changelogs have been updated\n- [ ] Unit tests have been added\n- [ ] Documentation has been updated",
    "head_branch": "modernize-metadata/instrumentation/opentelemetry-instrumentation-elasticsearch",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update package metadata opentelemetry-instrumentation-elasticsearch (#1276)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211623ac254a19ac290c1e",
    "number": 1275,
    "body": "# Description\n\nThis updates the package metadata for `opentelemetry-instrumentation-django` in accordance with #1259\n\n## Type of change\n\nPlease delete options that are not relevant.\n\n- [X] This change requires a documentation update\n\n# How Has This Been Tested?\n\n```\ntox\n```\n\n# Does This PR Require a Core Repo Change?\n\n- [ ] Yes. - Link to PR:\n- [X] No.\n\n# Checklist:\n\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\n\n- [ ] Followed the style guidelines of this project\n- [ ] Changelogs have been updated\n- [ ] Unit tests have been added\n- [ ] Documentation has been updated",
    "head_branch": "modernize-metadata/instrumentation/opentelemetry-instrumentation-django",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update package metadata opentelemetry-instrumentation-django (#1275)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211623ac254a19ac290c1f",
    "number": 1274,
    "body": "# Description\n\nThis updates the package metadata for `opentelemetry-instrumentation-dbapi` in accordance with #1259\n\n## Type of change\n\nPlease delete options that are not relevant.\n\n- [X] This change requires a documentation update\n\n# How Has This Been Tested?\n\n```\ntox\n```\n\n# Does This PR Require a Core Repo Change?\n\n- [ ] Yes. - Link to PR:\n- [X] No.\n\n# Checklist:\n\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\n\n- [ ] Followed the style guidelines of this project\n- [ ] Changelogs have been updated\n- [ ] Unit tests have been added\n- [ ] Documentation has been updated",
    "head_branch": "modernize-metadata/instrumentation/opentelemetry-instrumentation-dbapi",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update package metadata opentelemetry-instrumentation-dbapi (#1274)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211624ac254a19ac290c20",
    "number": 1273,
    "body": "# Description\n\nThis updates the package metadata for `opentelemetry-instrumentation-confluent-kafka` in accordance with #1259\n\n## Type of change\n\nPlease delete options that are not relevant.\n\n- [X] This change requires a documentation update\n\n# How Has This Been Tested?\n\n```\ntox\n```\n\n# Does This PR Require a Core Repo Change?\n\n- [ ] Yes. - Link to PR:\n- [X] No.\n\n# Checklist:\n\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\n\n- [ ] Followed the style guidelines of this project\n- [ ] Changelogs have been updated\n- [ ] Unit tests have been added\n- [ ] Documentation has been updated",
    "head_branch": "modernize-metadata/instrumentation/opentelemetry-instrumentation-confluent-kafka",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update package metadata opentelemetry-instrumentation-confluent-kafka (#1273)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211625ac254a19ac290c21",
    "number": 1272,
    "body": "# Description\n\nThis updates the package metadata for `opentelemetry-instrumentation-celery` in accordance with #1259\n\n## Type of change\n\nPlease delete options that are not relevant.\n\n- [X] This change requires a documentation update\n\n# How Has This Been Tested?\n\n```\ntox\n```\n\n# Does This PR Require a Core Repo Change?\n\n- [ ] Yes. - Link to PR:\n- [X] No.\n\n# Checklist:\n\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\n\n- [ ] Followed the style guidelines of this project\n- [ ] Changelogs have been updated\n- [ ] Unit tests have been added\n- [ ] Documentation has been updated",
    "head_branch": "modernize-metadata/instrumentation/opentelemetry-instrumentation-celery",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update package metadata opentelemetry-instrumentation-celery (#1272)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211626ac254a19ac290c22",
    "number": 1271,
    "body": "# Description\n\nThis updates the package metadata for `opentelemetry-instrumentation-botocore` in accordance with #1259\n\n## Type of change\n\nPlease delete options that are not relevant.\n\n- [X] This change requires a documentation update\n\n# How Has This Been Tested?\n\n```\ntox\n```\n\n# Does This PR Require a Core Repo Change?\n\n- [ ] Yes. - Link to PR:\n- [X] No.\n\n# Checklist:\n\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\n\n- [ ] Followed the style guidelines of this project\n- [ ] Changelogs have been updated\n- [ ] Unit tests have been added\n- [ ] Documentation has been updated",
    "head_branch": "modernize-metadata/instrumentation/opentelemetry-instrumentation-botocore",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update package metadata opentelemetry-instrumentation-botocore (#1271)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211627ac254a19ac290c23",
    "number": 1270,
    "body": "# Description\n\nThis updates the package metadata for `opentelemetry-instrumentation-boto3sqs` in accordance with #1259\n\n## Type of change\n\nPlease delete options that are not relevant.\n\n- [X] This change requires a documentation update\n\n# How Has This Been Tested?\n\n```\ntox\n```\n\n# Does This PR Require a Core Repo Change?\n\n- [ ] Yes. - Link to PR:\n- [X] No.\n\n# Checklist:\n\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\n\n- [ ] Followed the style guidelines of this project\n- [ ] Changelogs have been updated\n- [ ] Unit tests have been added\n- [ ] Documentation has been updated",
    "head_branch": "modernize-metadata/instrumentation/opentelemetry-instrumentation-boto3sqs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update package metadata opentelemetry-instrumentation-boto3sqs (#1270)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211628ac254a19ac290c24",
    "number": 1269,
    "body": "# Description\n\nThis updates the package metadata for `opentelemetry-instrumentation-boto` in accordance with #1259\n\n## Type of change\n\nPlease delete options that are not relevant.\n\n- [X] This change requires a documentation update\n\n# How Has This Been Tested?\n\n```\ntox\n```\n\n# Does This PR Require a Core Repo Change?\n\n- [ ] Yes. - Link to PR:\n- [X] No.\n\n# Checklist:\n\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\n\n- [ ] Followed the style guidelines of this project\n- [ ] Changelogs have been updated\n- [ ] Unit tests have been added\n- [ ] Documentation has been updated",
    "head_branch": "modernize-metadata/instrumentation/opentelemetry-instrumentation-boto",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update package metadata opentelemetry-instrumentation-boto (#1269)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211629ac254a19ac290c25",
    "number": 1268,
    "body": "# Description\n\nThis updates the package metadata for `opentelemetry-instrumentation-aws-lambda` in accordance with #1259\n\n## Type of change\n\nPlease delete options that are not relevant.\n\n- [X] This change requires a documentation update\n\n# How Has This Been Tested?\n\n```\ntox\n```\n\n# Does This PR Require a Core Repo Change?\n\n- [ ] Yes. - Link to PR:\n- [X] No.\n\n# Checklist:\n\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\n\n- [ ] Followed the style guidelines of this project\n- [ ] Changelogs have been updated\n- [ ] Unit tests have been added\n- [ ] Documentation has been updated",
    "head_branch": "modernize-metadata/instrumentation/opentelemetry-instrumentation-aws-lambda",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update package metadata opentelemetry-instrumentation-aws-lambda (#1268)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621162aac254a19ac290c26",
    "number": 1267,
    "body": "# Description\n\nThis updates the package metadata for `opentelemetry-instrumentation-asyncpg` in accordance with #1259\n\n## Type of change\n\nPlease delete options that are not relevant.\n\n- [X] This change requires a documentation update\n\n# How Has This Been Tested?\n\n```\ntox\n```\n\n# Does This PR Require a Core Repo Change?\n\n- [ ] Yes. - Link to PR:\n- [X] No.\n\n# Checklist:\n\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\n\n- [ ] Followed the style guidelines of this project\n- [ ] Changelogs have been updated\n- [ ] Unit tests have been added\n- [ ] Documentation has been updated",
    "head_branch": "modernize-metadata/instrumentation/opentelemetry-instrumentation-asyncpg",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update package metadata opentelemetry-instrumentation-asyncpg (#1267)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621162bac254a19ac290c27",
    "number": 1266,
    "body": "# Description\n\nThis updates the package metadata for `opentelemetry-instrumentation-asgi` in accordance with #1259\n\n## Type of change\n\nPlease delete options that are not relevant.\n\n- [X] This change requires a documentation update\n\n# How Has This Been Tested?\n\n```\ntox\n```\n\n# Does This PR Require a Core Repo Change?\n\n- [ ] Yes. - Link to PR:\n- [X] No.\n\n# Checklist:\n\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\n\n- [ ] Followed the style guidelines of this project\n- [ ] Changelogs have been updated\n- [ ] Unit tests have been added\n- [ ] Documentation has been updated",
    "head_branch": "modernize-metadata/instrumentation/opentelemetry-instrumentation-asgi",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update package metadata opentelemetry-instrumentation-asgi (#1266)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621162bac254a19ac290c28",
    "number": 1265,
    "body": "# Description\n\nThis updates the package metadata for `opentelemetry-instrumentation-aiopg` in accordance with #1259\n\n## Type of change\n\nPlease delete options that are not relevant.\n\n- [X] This change requires a documentation update\n\n# How Has This Been Tested?\n\n```\ntox\n```\n\n# Does This PR Require a Core Repo Change?\n\n- [ ] Yes. - Link to PR:\n- [X] No.\n\n# Checklist:\n\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\n\n- [ ] Followed the style guidelines of this project\n- [ ] Changelogs have been updated\n- [ ] Unit tests have been added\n- [ ] Documentation has been updated",
    "head_branch": "modernize-metadata/instrumentation/opentelemetry-instrumentation-aiopg",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update package metadata opentelemetry-instrumentation-aiopg (#1265)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621162cac254a19ac290c29",
    "number": 1264,
    "body": "# Description\n\nThis updates the package metadata for `opentelemetry-instrumentation-aiohttp-client` in accordance with #1259\n\n## Type of change\n\nPlease delete options that are not relevant.\n\n- [X] This change requires a documentation update\n\n# How Has This Been Tested?\n\n```\ntox\n```\n\n# Does This PR Require a Core Repo Change?\n\n- [ ] Yes. - Link to PR:\n- [X] No.\n\n# Checklist:\n\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\n\n- [ ] Followed the style guidelines of this project\n- [ ] Changelogs have been updated\n- [ ] Unit tests have been added\n- [ ] Documentation has been updated",
    "head_branch": "modernize-metadata/instrumentation/opentelemetry-instrumentation-aiohttp-client",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update package metadata opentelemetry-instrumentation-aiohttp-client (#1264)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621162dac254a19ac290c2a",
    "number": 1263,
    "body": "# Description\n\nThis updates the package metadata for `opentelemetry-instrumentation-aio-pika` in accordance with #1259\n\n## Type of change\n\nPlease delete options that are not relevant.\n\n- [X] This change requires a documentation update\n\n# How Has This Been Tested?\n\n```\ntox\n```\n\n# Does This PR Require a Core Repo Change?\n\n- [ ] Yes. - Link to PR:\n- [X] No.\n\n# Checklist:\n\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\n\n- [ ] Followed the style guidelines of this project\n- [ ] Changelogs have been updated\n- [ ] Unit tests have been added\n- [ ] Documentation has been updated",
    "head_branch": "modernize-metadata/instrumentation/opentelemetry-instrumentation-aio-pika",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update package metadata opentelemetry-instrumentation-aio-pika (#1263)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621162eac254a19ac290c2b",
    "number": 1262,
    "body": "# Description\n\nThis updates the package metadata for `opentelemetry-exporter-richconsole` in accordance with #1259\n\n## Type of change\n\nPlease delete options that are not relevant.\n\n- [X] This change requires a documentation update\n\n# How Has This Been Tested?\n\n```\ntox\n```\n\n# Does This PR Require a Core Repo Change?\n\n- [ ] Yes. - Link to PR:\n- [X] No.\n\n# Checklist:\n\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\n\n- [ ] Followed the style guidelines of this project\n- [ ] Changelogs have been updated\n- [ ] Unit tests have been added\n- [ ] Documentation has been updated",
    "head_branch": "modernize-metadata/exporter/opentelemetry-exporter-richconsole",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update package metadata opentelemetry-exporter-richconsole (#1262)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621162fac254a19ac290c2c",
    "number": 1261,
    "body": "# Description\n\nThis updates the package metadata for `opentelemetry-exporter-datadog` in accordance with #1259\n\n## Type of change\n\nPlease delete options that are not relevant.\n\n- [X] This change requires a documentation update\n\n# How Has This Been Tested?\n\n```\ntox\n```\n\n# Does This PR Require a Core Repo Change?\n\n- [ ] Yes. - Link to PR:\n- [X] No.\n\n# Checklist:\n\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\n\n- [ ] Followed the style guidelines of this project\n- [ ] Changelogs have been updated\n- [ ] Unit tests have been added\n- [ ] Documentation has been updated",
    "head_branch": "modernize-metadata/exporter/opentelemetry-exporter-datadog",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update package metadata opentelemetry-exporter-datadog (#1261)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211630ac254a19ac290c2d",
    "number": 1260,
    "body": "# Description\r\n\r\nKafka's instance metadata could be unavailable (because it's being filled asynchronously). \r\n\r\nextract_send_partition() is based on a metadata, so it may return `None` for partition and later produce a warning message: \r\n \r\n`Invalid type NoneType for attribute value. Expected one of ['bool', 'str', 'bytes', 'int', 'float'] or a sequence of those types`\r\n\r\nThe proposed fix makes sure metadata is pre-populated (based on https://github.com/dpkp/kafka-python/blob/4d598055dab7da99e41bfcceffa8462b32931cdd/kafka/producer/kafka.py#L579).\r\n\r\n\r\n## Type of change\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n",
    "head_branch": "fix_kafka_wait_metadata",
    "is_a_fork": true,
    "comments": [
      "<a href=\"https://easycla.lfx.linuxfoundation.org/#/?version=2\"><img src=\"https://s3.amazonaws.com/cla-project-logo-prod/cla-signed.svg\" alt=\"CLA Signed\" align=\"left\" height=\"28\" width=\"328\" ></a><br/><br />The committers listed above are authorized under a signed CLA.<ul><li>:white_check_mark: login: rayrapetyan / name: Robert Ayrapetyan  (c5a026f9817861f597ac6cd9b2702e0f0173f17b, 2733cd887775c91f0a983b7b9d546214be7ad232, e60c6a4b6be6a8d69e8499bd1fae539bd52b4d7d)</li></ul>",
      "Local tests have been passed successfully:\r\n\r\n> collected 5 items                                                                                                                                                                                                                                                                                                      \r\n\r\n> test_instrumentation.py::TestKafka::test_instrument_api PASSED                                                                                                                                                                                                                                                   [ 20%]\r\n> test_utils.py::TestUtils::test_create_consumer_span PASSED                                                                                                                                                                                                                                                       [ 40%]\r\n> test_utils.py::TestUtils::test_wrap_next PASSED                                                                                                                                                                                                                                                                  [ 60%]\r\n> test_utils.py::TestUtils::test_wrap_send_with_topic_as_arg PASSED                                                                                                                                                                                                                                                [ 80%]\r\n> test_utils.py::TestUtils::test_wrap_send_with_topic_as_kwarg PASSED                                                                                                                                                                                                                                              [100%]\r\n> \r\n> ================================================================================================================================================== 5 passed in 0.12s ===================================================================================================================================================\r\n> _______________________________________________________________________________________________________________________________________________________ summary ________________________________________________________________________________________________________________________________________________________\r\n>   test-instrumentation-kafka-python: commands succeeded\r\n>   congratulations :)\r\n",
      "@ocelotl, thanks, added.",
      "Hi  @ocelotl, could we merge this change?"
    ],
    "commit_messages": [
      "opentelemetry-instrumentation-kafka-python: wait for metadata (#1260)\n\n* fix kafka: wait for metadata\r\n\r\nKafka's instance metadata could be unavailable (because it's being filled asynchronously). extract_send_partition() is based on a metadata, so it may return `None` for partition and later cause all type of warning messages (e.g. `Invalid type NoneType for attribute value. Expected one of ['bool', 'str', 'bytes', 'int', 'float'] or a sequence of those types`).\r\nThe proposed fix makes sure metadata is pre-populated (based on https://github.com/dpkp/kafka-python/blob/4d598055dab7da99e41bfcceffa8462b32931cdd/kafka/producer/kafka.py#L579).\r\nI'm just not sure if we should wrap `_wait_on_metadata` into try\\except, maybe just passing Exception to the caller would be a better idea...\r\n\r\n* upd: changelog\r\n\r\n* fix: changelog\r\n\r\n* fix: import KafkaErrors\r\n\r\n* fix: tox -e lint errors\r\n\r\n* fix: refact and added unit test\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211631ac254a19ac290c2e",
    "number": 1258,
    "body": "# Description\r\n\r\nCreate a static list of all instances of InstrumentedFastAPI and fix uninstrument function.\r\n\r\nFixes #1256 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] `tox -e test-instrumentation-fastapi`\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n",
    "head_branch": "fix-uninstrument-fastapi",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "uninstruemnt existing instances before uninstrumenting fastapi class (#1258)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211632ac254a19ac290c2f",
    "number": 1257,
    "body": null,
    "head_branch": "update-emp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update README.md (#1257)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211633ac254a19ac290c30",
    "number": 1253,
    "body": "# Description\r\n\r\nFirst step of https://github.com/open-telemetry/opentelemetry-python-contrib/issues/1184\r\n\r\nThis provides basic support to allow for sanitizing of HTTP headers.  Future commits will add code to the various instrumentations that use this functionality.\r\n\r\nFixes #1184\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [X] Unit test added.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [X] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n- [X] Documentation has been updated\r\n",
    "head_branch": "drogers-add-sanitize-class",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add support for sanitizing HTTP header values. (#1253)\n\nFirst step of https://github.com/open-telemetry/opentelemetry-python-contrib/issues/1184"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211634ac254a19ac290c31",
    "number": 1252,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes #1145 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] tox -e test-instrumentation-tornado\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "metrics-instrumentation-tornado",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "metric instrumentation Tornado (#1252)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211635ac254a19ac290c32",
    "number": 1250,
    "body": "# Description\r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python/issues/2586\r\n\r\nThis PR depends on [SDK-2893 ](https://github.com/open-telemetry/opentelemetry-python/pull/2893), to support setting OTLP transport protocol with env vars, instead of using `otlp_proto_grpc` / `otlp_proto_http`.\r\n\r\nThis method should be preferred, as it is defined in the [specifications](https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/protocol/exporter.md#specify-protocol) (it is also how it works in other OTel libs).\r\n\r\nThis PR fixes https://github.com/open-telemetry/opentelemetry-python/issues/2586, by allowing the user to configure the protocol using `OTEL_EXPORTER_OTLP_PROTOCOL` without making a conflict with the current default `otlp_proto_grpc` setting. It also updates documentation on how to set the protocol.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- opentelemetry-distro/tests/test_distro.py\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] Yes. - Link to PR: https://github.com/open-telemetry/opentelemetry-python/pull/2893\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated (in core package only)\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "otlp-protocol-env-vars",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Deprecate otlp_proto_grpc and otlp_proto_http in auto-instrumentation (#1250)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211635ac254a19ac290c33",
    "number": 1249,
    "body": "# Description\r\n\r\nBump up opentelemetry-semantic-conventions to 0.33b0 for exporter-datadog.\r\n\r\nFixes #1248\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [X] ran scripts/eachdist.py develop\r\n- [X] ran scripts/eachdist.py test\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "UpdateExporterDataDogDep",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211636ac254a19ac290c34",
    "number": 1247,
    "body": "As others have pointed out \r\nhttps://github.com/open-telemetry/opentelemetry-java-instrumentation/issues/341\r\nby including the query within the span name we lead to very high cardinality which is too high to be useful and this can also lead to privacy concerns\r\n\r\nThis pull requests follows the logic found in the java and golang mongo instrumentations and does not include the entire command but the database name and command name within the span name\r\n\r\nhttps://github.com/open-telemetry/opentelemetry-java-instrumentation/blob/main/instrumentation/mongo/mongo-3.1/library/src/main/java/io/opentelemetry/instrumentation/mongo/v3_1\r\n\r\nhttps://github.com/open-telemetry/opentelemetry-go-contrib/blob/main/instrumentation/go.mongodb.org/mongo-driver/mongo/otelmongo/mongo.go\r\n\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] test_pymongo.py\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Get rid of pymongo command in pymongo instrumentation span name (#1247)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211637ac254a19ac290c35",
    "number": 1246,
    "body": "# Description\r\n\r\nTraceConfigs that are created when a new ClientSession is created were incorrectly added to the effectively global list of trace configs that can be passed as argument to the instrumentor's `instrument` function. The global list then got inject into the arguments to create the ClientSession. With every TraceConfig in the global list an additional span got created per request.\r\nThis even happened when there wasn't passed any trace config list to the `instrument` function since as default an empty list was used.\r\n\r\nFixes #1207\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nAdapted existing tests and added a new one.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n",
    "head_branch": "aiohttp-client-trace-cfg-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "aiohttp-client: Fix producing additional spans with each newly created ClientSession (#1246)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211638ac254a19ac290c36",
    "number": 1245,
    "body": "# Description\r\n\r\nThis adds support for grpc.aio interceptors/instrumentation. The vast majority of\r\nthe code is either re-used wholesale or duplicated with slight modifications\r\nfrom the existing standard interceptors.\r\n\r\nFixes #1099 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Unit tests in this repository\r\n- [ ] Using development version in real apps\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "grpc-aio-support",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add grpc.aio support (#1245)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211639ac254a19ac290c37",
    "number": 1244,
    "body": "Co-authored-by: Sunil Sunilshidrayi.wali@fmr.com\r\nCo-authored-by: Rahuldimri rahul.dimri@fmr.com\r\n\r\n# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes #893 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "otel_893",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added the Licence and Manifest file\n\nCo-authored-by: Sunil Sunilshidrayi.wali@fmr.com\r\nCo-authored-by: Rahuldimri rahul.dimri@fmr.com"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621163aac254a19ac290c38",
    "number": 1242,
    "body": "# Description\r\n\r\nFixes #1149 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] `tox -e test-instrumentation-pyramid`\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n",
    "head_branch": "metric-instrumentation-pyramid",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Metric instrumentation pyramid (#1242)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621163bac254a19ac290c39",
    "number": 1241,
    "body": "# Description\r\n\r\nThis pull request adds section to handle filter in client and server interceptors and provides pre-defined commonly used filters.\r\n\r\nFixes #373\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] tox -e py39-test-instrumentation-grpc (test_filters.py and test_xxx_filters.py)\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "grpc-filter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add gRPC filter (#1241)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621163cac254a19ac290c3a",
    "number": 1240,
    "body": "# Description\n\nThis fixes the typos in the document of gRPC instrumentation.\n\nFixes #1239\n\n## Type of change\n\nPlease delete options that are not relevant.\n\n- [X] Bug fix (non-breaking change which fixes an issue)\n- [ ] New feature (non-breaking change which adds functionality)\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\n- [X] This change requires a documentation update\n\n# How Has This Been Tested?\n\nN/A because this is just a comment fix\n\n# Does This PR Require a Core Repo Change?\n\n- [ ] Yes. - Link to PR: \n- [X] No.\n\n# Checklist:\n\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\n\n- [X] Followed the style guidelines of this project\n- [ ] Changelogs have been updated\n- [ ] Unit tests have been added\n- [X] Documentation has been updated\n",
    "head_branch": "fix-comment",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix typo in example codes (#1240)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621163cac254a19ac290c3b",
    "number": 1238,
    "body": "# Description\r\n\r\nAdd instrumentation of AsyncTransport\r\n\r\nFixes #1205 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "patch-3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621163dac254a19ac290c3c",
    "number": 1237,
    "body": "# Description\r\nFixes #1236. Adding spellcheck on all files as part of the tox phase in the build. Additionally, fixed all discovered typos so the CI will pass.\r\n\r\n## Type of change\r\nPlease delete options that are not relevant.\r\n- [X] Chore (codebase fix that does not change the behavior in any way)\r\n- [X] This change requires a documentation update (internal)\r\n\r\n# How Has This Been Tested?\r\nThis PR essentially adds a test. To run spellcheck run `tox -e spellcheck`\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated - no need\r\n- [ ] Unit tests have been added - no need\r\n- [X] Documentation has been updated - the internal one, in `CONTRIBUTING.md`\r\n",
    "head_branch": "codespell-ci",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Codespell ci (#1237)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621163eac254a19ac290c3d",
    "number": 1234,
    "body": "# Description\r\n\r\nWhen propagating context via message attributes the instrumentation used `otel.` prefix for keys injected or extracted from an carrier. This makes it incompatible with other instrumentations (e.g. aws-sdk instrumentation for Node.Js). \r\nInstead of prefixed keys use plain keys from the propagator.\r\nSQS `recieve_message` calls require to provide a list with the names of message attributes that are to be delivered with the message. Instead of using the `otel.*` wildcard use the `fields` attribute provided by the propagator.\r\n\r\nFixes #1202\r\n\r\n* Additionally adds the `messaging.url` as span attribute for the created spans since this is the main identifier for SQS when interacting with a queue.\r\n* Removes setting the `messaging.temp_destination` span attribute which is only intended for temporary queues and doesn't really make sense for SQS.\r\n\r\n### Fixes also the following issues to make the instrumentation unit testable\r\n* add the instrumentation to the `tox.ini` file to actually run the unit tests in CI\r\n* add missing required dependencies to `setup.cfg`\r\n\r\nAdditionally the current instrumentation only worked for the first instance of a `boto3.SQS` client since it was instrumenting only the first SQS like sub class of the `botocore.client.BaseClient` class. boto3 (or more precisely botocore) however generates a new subclass for each new instance of a client.\r\nFor unit testing (and also production) this is sub-optimal as it means to either have one unit test or reuse the same client over multiple tests (and hope that no other test created an SQS client instance).\r\nThus, this PR includes also the fix to make it possible to instrument multiple instances of an SQS client.\r\n\r\n## Type of change\r\n\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n\r\n# How Has This Been Tested?\r\n\r\nAdapted existing Getter and Setter tests to check injected propagation keys.\r\nAdded additional unit tests to actually check created spans, span attributes and that context is injected/extracted accordingly.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n",
    "head_branch": "boto3sqs-propagation-keys",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "boto3sqs: Make propagation compatible with other instrumentations and add 'messaging.url' span attribute (#1234)\n\n* boto3sqs: Fix various issues\r\n\r\n* do not use 'otel' prefix for propagation keys to make propagation\r\n  compatible with other SQS instrumentations like Node.Js\r\n  Inject propergator.fields keys into the MessageAttributeNames argument\r\n  for 'receive_message' calls to retreive the corresponding message attributes\r\n* add 'messaging.url' span attribute to SQS spans\r\n* add boto3sqs instrumentation to tox.ini to run tests in CI\r\n* add some basic unit tests\r\n\r\n* changelog\r\n\r\n* fix linting issues\r\n\r\n* unset instrumented flag on uninstrument"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621163fac254a19ac290c3e",
    "number": 1233,
    "body": "# Description\r\n\r\nThis PR addresses part of #1087 to automatically capture common HTTP attributes from API Gateway events in the Lambda instrumentor.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Unit tests below added with events generated via `sam local generate-event`.\r\n- [x] Deployment of a REST API & Lambda Function with the Lambda Instrumentor enabled. All attributes validated via the console span exporter.\r\n- [x] Deployment of a HTTP API & Lambda Function with the Lambda Instrumentor enabled. All attributes validated via the console span exporter.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "feature/add_api_gateway_event_attributes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Capture common HTTP attributes from API Gateway proxy events in Lambda instrumentor (#1233)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211640ac254a19ac290c3f",
    "number": 1232,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "feature/improve-confluent-kafka-instrumentation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211641ac254a19ac290c40",
    "number": 1231,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "feature/improve-confluent-kafka-instrumentation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211642ac254a19ac290c41",
    "number": 1230,
    "body": "# Description\r\n\r\nFixes #1157 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] `tox -e test-instrumentation-falcon1`\r\n- [x] `tox -e test-instrumentation-falcon2`\r\n- [x] `tox -e test-instrumentation-falcon3`\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n",
    "head_branch": "metric-instrumentation-falcon",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Metric instrumentation falcon (#1230)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211643ac254a19ac290c42",
    "number": 1229,
    "body": "# Description\r\n\r\nHi 👋 , this PR adds instrumentation for fastapi-events. This is my first contribution to `opentelemetry-python-contrib`, any feedback is much appreciated. Thanks =)\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\nTest cases have been added to cover standard usage of dispatching and handling events with fastapi-events.\r\n\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211644ac254a19ac290c43",
    "number": 1228,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fastapi-events",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211645ac254a19ac290c44",
    "number": 1227,
    "body": "# Description\r\n\r\nMajor Redesign of gRPC Instrumentation, including:\r\n\r\n**New Feature**\r\n\r\n- [X] Support of metrics (Client & Server) according to [specification](https://github.com/open-telemetry/opentelemetry-specification/blob/3e8ec096155908924c852ef4646f9c378d51893e/specification/metrics/semantic_conventions/rpc.md) (#1042 )\r\n- [X] Creation of span events for request and response messages (Client & Server) according to [specification](https://github.com/open-telemetry/opentelemetry-specification/blob/3e8ec096155908924c852ef4646f9c378d51893e/specification/trace/semantic_conventions/rpc.md)\r\n- [X] Conformity of `OpenTelemetryClientInterceptor`-interface to official `grpc.ClientInterceptor`-interface (#1583)\r\n\r\n**Bug Fixes**\r\n- [X] OpenTelemetryServicerContext supports `code()`and `details()` (#855 ) (#1578)\r\n- [X] OpenTelemetryServicerContext supports correct status codes in case of `abort()`, `cancel()`, `set_code()`/`set_details()`, `raise Exception()`\r\n- [X] OpenTelemetryClientInterceptor supports correct status codes in case of `abort()`, `cancel()`, `set_code()`/`set_details()`, `raise Exception()`\r\n- [X] Response object of streaming-response-RPC on client-side implements interfaces of `grpc.Call`, `grpc.Future`, `grpc.RpcError` and `Iterator`\r\n- [X] Fix of (#1180)\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [X] New feature (non-breaking change which adds functionality)\r\n- [X] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [X] `tox -e test-instrumentation-grpc` runs adapted `instrumentation/opentelemetry-instrumentation-grpc/tests/test_client_interceptor.py` and `instrumentation/opentelemetry-instrumentation-grpc/tests/test_server_interceptor.py` which test metrics, creation of span events and conformity of interfaces on client-side\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [X] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n- [X] Documentation has been updated",
    "head_branch": "grpc_dev",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211645ac254a19ac290c45",
    "number": 1226,
    "body": "# Description\r\n\r\nMajor Redesign of gRPC Instrumentation, including:\r\n\r\n**New Feature**\r\n\r\n- [X] Support of metrics (Client & Server) according to [specification](https://github.com/open-telemetry/opentelemetry-specification/blob/3e8ec096155908924c852ef4646f9c378d51893e/specification/metrics/semantic_conventions/rpc.md) (#1042 )\r\n- [X] Creation of span events for request and response messages (Client & Server) according to [specification](https://github.com/open-telemetry/opentelemetry-specification/blob/3e8ec096155908924c852ef4646f9c378d51893e/specification/trace/semantic_conventions/rpc.md)\r\n- [X] Conformity of `OpenTelemetryClientInterceptor`-interface to official `grpc.ClientInterceptor`-interface\r\n\r\n**Bug Fixes**\r\n- [X] OpenTelemetryServicerContext supports `code()`and `details()` (#855 )\r\n- [X] OpenTelemetryServicerContext supports correct status codes in case of `abort()`, `cancel()`, `set_code()`/`set_details()`, `raise Exception()`\r\n- [X] OpenTelemetryClientInterceptor supports correct status codes in case of `abort()`, `cancel()`, `set_code()`/`set_details()`, `raise Exception()`\r\n- [X] Response object of streaming-response-RPC on client-side implements interfaces of `grpc.Call`, `grpc.Future`, `grpc.RpcError` and `Iterator`\r\n- [X] Fix of (#1180)\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [X] New feature (non-breaking change which adds functionality)\r\n- [X] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [X] `tox -e test-instrumentation-grpc` runs adapted `instrumentation/opentelemetry-instrumentation-grpc/tests/test_client_interceptor.py` and `instrumentation/opentelemetry-instrumentation-grpc/tests/test_server_interceptor.py` which test metrics, creation of span events and conformity of interfaces on client-side\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n- [X] Documentation has been updated\r\n",
    "head_branch": "grpc_dev",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211646ac254a19ac290c46",
    "number": 1224,
    "body": "# Description\r\n\r\nIntegrating flask sqlcommenter into psycopg2 and sqlalchemy\r\n\r\nThis can be achieved by enabling enable_commenter flag inside Flask instrument initialization and also in SQLAlchemy Instrumentation  or psycopg2 instrumentation\r\n\r\n```python\r\nFlaskInstrumentor().instrument_app(app, tracer_provider=provider, enable_commenter=True)\r\n\r\n# For sqlalchemy\r\nSQLAlchemyInstrumentor().instrument( enable_commenter=True, engine=engine)\r\n\r\n# For psycopg2\r\nPsycopg2Instrumentor().instrument(tracer_provider=tracer_provider, enable_commenter=True)\r\n```\r\n\r\n- The flask instrumentation will append the metrics in opentelemetry context in key name SQLCOMMENTER_VALUES\r\n- The SQLAlchemy ORM or psycopg2 driver will read the context and then append these info to the sql query logs whenever the sql query is made\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] New feature (non-breaking change which adds functionality)\r\n- [X] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [X] instrumentation/opentelemetry-instrumentation-flask/tests/test_sqlcommenter.py\r\n- [X] instrumentation/opentelemetry-instrumentation-dbapi/tests/test_dbapi_integration.py test_executemany_flask_integration_comment\r\n- [X] instrumentation/opentelemetry-instrumentation-sqlalchemy/tests/test_sqlcommenter.py test_sqlcommenter_flask_integration\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [X] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n- [X] Documentation has been updated\r\n",
    "head_branch": "flask-sqlalchemy-psycopg2-integration",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Flask sqlalchemy psycopg2 integration (#1224)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211647ac254a19ac290c47",
    "number": 1223,
    "body": null,
    "head_branch": "release/1.12.0-0.33b0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Release 1.12.0-0.33b0 (#1223)\n\n* Release 1.12.0-0.33b0\r\n\r\n* Update API and SDK versions to 1.12"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211648ac254a19ac290c48",
    "number": 1222,
    "body": "# Description\r\n\r\nManifest.ini file missing for the location from the below location.\r\n\r\n[opentelemetry-python-contrib](https://github.com/open-telemetry/opentelemetry-python-contrib)/[instrumentation](https://github.com/open-telemetry/opentelemetry-python-contrib/tree/main/instrumentation)/opentelemetry-instrumentation-aio-pika/\r\n\r\nFixes # 1221\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211649ac254a19ac290c49",
    "number": 1220,
    "body": "License file missing on the directory opentelemetry-instrumentation-aio-pika\r\n\r\n# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621164aac254a19ac290c4a",
    "number": 1216,
    "body": "# Description\r\n\r\nThe link to the Flask instrumentation documentation is currently broken. This PR fixes the link.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nDocumentation change, testing not relevant.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [X] Documentation has been updated\r\n",
    "head_branch": "trstringer/flask-instrumentation-doc-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix Flask instrumentation doc link (#1216)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621164bac254a19ac290c4b",
    "number": 1215,
    "body": null,
    "head_branch": "release/1.13.0-0.33b0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621164cac254a19ac290c4c",
    "number": 1214,
    "body": "…match\r\n\r\n# Description\r\n\r\nUpdated metrics to match the approved spec. Directions attribute moved out to be individual metrics. \r\n\r\nFixes # (issue)\r\nhttps://github.com/open-telemetry/opentelemetry-python-contrib/issues/1171\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Change required updates to testing as well. Updated and ran through test_system_metrics.py\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "feature/issue_1171_remove_direction_attribute_from_system_metrics",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "updated to remove directions from existing metrics. tests updated to … (#1214)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621164dac254a19ac290c4d",
    "number": 1212,
    "body": "# Description\r\n\r\nImplement the [experimental AWS ECS resource attributes](https://opentelemetry.io/docs/reference/specification/resource/semantic_conventions/cloud_provider/aws/ecs/) using the Metadata v4 Endpoint.\r\n\r\n## Type of change\r\n\r\n- [X] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [X] Unit tests\r\n\r\nGeneral logic on Amazon ECS has been extensively tested by Lumigo in their [OpenTelemetry Python Distro](https://github.com/lumigo-io/opentelemetry-js-distro), which has shipped this detection logic for some time already.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [X] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n- [ ] Documentation has been updated <-- There seems to be no need of that\r\n",
    "head_branch": "aws_ecs_detector",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Implement aws.ecs.* resource attributes (#1212)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621164dac254a19ac290c4e",
    "number": 1211,
    "body": "# Description\r\n\r\nSome failed runs\r\n\r\nhttps://github.com/open-telemetry/opentelemetry-python-contrib/runs/7645416623?check_suite_focus=true\r\nhttps://github.com/open-telemetry/opentelemetry-python-contrib/runs/7661410848?check_suite_focus=true\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] misc\r\n\r\n",
    "head_branch": "docs-build-failure",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "ci: fix docs workflow failure (#1211)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621164eac254a19ac290c4f",
    "number": 1209,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "metric-instrumentation-pyramid",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621164fac254a19ac290c50",
    "number": 1208,
    "body": "# Description\r\n\r\nFixes #1043\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Test A: sent 3 requests and check for its histrogram and duration metrics\r\n\r\n# Does This PR Require a Core Repo Change?\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n",
    "head_branch": "develop/restore-metrics-django",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Restore metrics in django (#1208)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211650ac254a19ac290c51",
    "number": 1206,
    "body": "# Description\r\n\r\nThis PR adds native sqlalchemy tags to sqlcommenter\r\n\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] New feature (non-breaking change which adds functionality)\r\n- [X] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nModified exisitng sqlalchemy testcases to accomodate this feature\r\n- [X] test_sqlcommenter_enabled\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [X] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n- [X] Documentation has been updated\r\n",
    "head_branch": "add-sqlalchemy-native-tags",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Adding sqlalchemy native tags in sqlalchemy commenter (#1206)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211651ac254a19ac290c52",
    "number": 1204,
    "body": "# Description\r\n\r\nThe instrumentation now accounts for the retry mechanism of [remoulade](https://github.com/wiremind/remoulade): \r\n- the `before_enqueue` hook now looks for existing span contexts before starting a new span.\r\n- `delay` is part of this retry mechanism and `delay` spans are created if an `eta` is present.\r\n- 3 attributes in relation to the retry mechanism are added.\r\n\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] `test_messages.py` has been adapted\r\n- [x] tested on our internal setup\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "remoulade-pipeline",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211652ac254a19ac290c53",
    "number": 1203,
    "body": "# Description\r\n\r\nThis PR adds options to add additional tags such as psycopg2 version, libpq_version,etc to the psycopg2 sqlcommenter.\r\n\r\n## Usage\r\nThis is made configurable using commenter_options keyword\r\n\r\n```python\r\nPsycopg2Instrumentor()._instrument(tracer_provider=provider, enable_commenter=True, commenter_options={'db_driver':True})\r\n```\r\n\r\n## Type of change\r\n\r\n- [X] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nHad modified existing testcases to accomadate this change\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [X] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n- [X] Documentation has been updated\r\n",
    "head_branch": "add-psycopg2-native-tags",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add psycopg2 native tags to sqlcommenter (#1203)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211653ac254a19ac290c54",
    "number": 1200,
    "body": "# Description\r\n\r\nThis PR fixes the bug which appends ; before the comment. Ideally it should append ; at the last\r\n\r\n## Type of change\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [X] test_add_sql_comments_with_semicolon\r\n- [X] test_add_sql_comments_without_semicolon\r\n- [X] test_add_sql_comments_without_comments\r\n- [X] Updated existing test queries with ; appended\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [X] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n",
    "head_branch": "python-commenter-semicolon-bug",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "SQLCommenter semicolon bug fix (#1200)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211654ac254a19ac290c55",
    "number": 1199,
    "body": "# Description\r\n\r\nFixes #1156\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] `tox -e test-instrumentation-fastapi`\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n",
    "head_branch": "metric-instrumentation-fastapi",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Metric instrumentation fastapi (#1199)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211655ac254a19ac290c56",
    "number": 1198,
    "body": "# Description\r\nAdd metrics instrumentation for urllib3\r\n\r\nFixes #1144 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] tox -e test-instrumentation-urllib3\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n",
    "head_branch": "feature/Metrics-instrumentation-urllib3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Feature/metrics instrumentation urllib3 (#1198)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211656ac254a19ac290c57",
    "number": 1197,
    "body": "# Description\r\n\r\nFixes #1160\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] `tox -e test-instrumentation-asgi`\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n",
    "head_branch": "metric-instrumentation-asgi",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Metric instrumentation asgi (#1197)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211656ac254a19ac290c58",
    "number": 1196,
    "body": "# Description\r\nThere are a lot of serialization errors when celery task run another celery task in case when you are using custom Exchange and custom Queue.\r\nSpan tags could be only `bool, str, bytes, int, float`.\r\n\r\nFixes #https://github.com/open-telemetry/opentelemetry-python-contrib/issues/1195\r\n\r\n## Type of change\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\nTested on the environment where issue had happened.\r\nAdded unit test\r\n\r\n# Does This PR Require a Core Repo Change?\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211657ac254a19ac290c59",
    "number": 1194,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes #1148\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [X] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "1040-redis-instrumentation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211658ac254a19ac290c5a",
    "number": 1193,
    "body": "# Description\r\n\r\nPart of https://github.com/open-telemetry/opentelemetry-python/pull/2819\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] misc/tests\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] `tox`\r\n \r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] Yes. - Link to PR: https://github.com/open-telemetry/opentelemetry-python/pull/2819\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Unit tests have been added\r\n\r\n",
    "head_branch": "issue-2766",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Sync with sdk setup from setUpClass to setUp (#1193)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211659ac254a19ac290c5b",
    "number": 1191,
    "body": "Unfortunately I have no time to review or contribute to this repo these days. As such please remove me from the approvers group",
    "head_branch": "codeboten/rm-codeboten",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[chore] update approvers list (#1191)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621165aac254a19ac290c5c",
    "number": 1188,
    "body": "https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1177#issuecomment-1176841361",
    "head_branch": "lzchen-patch-10",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Adding sungwonh to component owners for redis (#1188)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621165bac254a19ac290c5d",
    "number": 1187,
    "body": "# Multiple DB Connection support for sqlcommenter django-instrumetation\r\n\r\nOpentelemetry-instrumentation-django's sqlcommenter will now be able to support multiple database connections.\r\n\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] New feature (non-breaking change which adds functionality)\r\n\r\n\r\n# How Has This Been Tested?\r\n\r\nUnit test has been added named test_multiple_connection_support\r\n\r\n- [X] test_multiple_connection_support\r\n\r\n\r\n# Checklist:\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [X] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n",
    "head_branch": "django-sqlcommenter-multiconection",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Adding multiple db connections support for django-instrumentation's sqlcommenter (#1187)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621165cac254a19ac290c5e",
    "number": 1186,
    "body": "# Description\r\n\r\nFixes #1155 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] `tox -e test-instrumentation-flask`\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n",
    "head_branch": "metrics-instrumentation-flask",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Metrics instrumentation flask (#1186)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621165dac254a19ac290c5f",
    "number": 1183,
    "body": "Fixes #1179",
    "head_branch": "issue_1179",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621165eac254a19ac290c60",
    "number": 1178,
    "body": "# Description\r\n\r\nAdd a log level param to the logging instrumentation `log_hook`.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [X] New feature (non-breaking change which adds functionality)\r\n- [X] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [X] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nEnhanced the existing log_hook test.\r\n\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n- [X] Documentation has been updated\r\n",
    "head_branch": "send_level_to_log_hook",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621165fac254a19ac290c61",
    "number": 1177,
    "body": "# Description\r\n\r\nThis PR adds instrumentation to RedisCluster clients in the Redis library. ([redis.cluster.RedisCluster](https://github.com/redis/redis-py/blob/master/redis/cluster.py), [redis.asyncio.cluster.RedisCluster](https://github.com/redis/redis-py/blob/master/redis/asyncio/cluster.py))\r\n\r\nCloses #1167 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Functional tests are added to `test_redis_functional.py`\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "feature/instrument-rediscluster",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Instrument RedisCluster clients (#1177)\n\n* Instrument RedisCluster clients\r\n\r\n* reformat files\r\n\r\n* update changelogs\r\n\r\n* refactor _traced_execute_pipeline\r\n\r\n* handle AttributeError\r\n\r\n* handle IndexError\r\n\r\n* refactor _traced_execute_pipeline\r\n\r\n* move hasattr check to _set_connection_attributes function\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211660ac254a19ac290c62",
    "number": 1176,
    "body": "# Description\r\n\r\nThis PR fixes the entry script for boto3sqs instrumentation. It was specifying a nonexistent package and trying to load a nonexistent instrumentor\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- \r\n# How Has This Been Tested?\r\n\r\nExecuted with auto instrumentation and worked\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n",
    "head_branch": "bugfix/fix_boto3sqs_instrumentor_entry",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Change the entry for boto3sqs to work with auto instrumentation (#1176)\n\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211660ac254a19ac290c63",
    "number": 1174,
    "body": null,
    "head_branch": "release/1.12.0rc2-0.32b0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Release 1.12.0rc2-0.32b0 (#1174)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211661ac254a19ac290c64",
    "number": 1173,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "lint-test-main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211662ac254a19ac290c65",
    "number": 1172,
    "body": "# Description\r\n\r\nAdd support for regular expression matching and sanitizing of headers.\r\nAdd test cases for regular expression matching.\r\nAdd test cases for \"all\" keyword.\r\nAdd test cases for header sanitizing.\r\nAdd documentation for regular expression matching and header sanitation.\r\nVarious documentation cleanups and standardization.\r\nFix keys() in class ASGIGetter so it returns the HTTP header keys instead of a list of available request data.  This makes it consistent with the WSGIGetter keys() method.\r\nMake ASGIGetter.get() compare all keys in a case insensitive manner.\r\nUse resp.text instead of resp.body for Falcon 3 to avoid a deprecation warning.\r\nRemove duplicate documentation from instrumentation/opentelemetry-instrumentation-flask/README.rst as in ae7a415f47ac8b7b96ec6a7c845d9cac911e0c34\r\nVarious formatting fixes.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nI have run the existing unit tests, and also added new ones for the new features.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "headers-regex",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211663ac254a19ac290c66",
    "number": 1169,
    "body": "# Description\r\n\r\nThis PR refactors couple of existing instrumentation libraries and fixes couple of typos.\r\n\r\n## Type of change\r\n\r\n- [x] Refactoring\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Unit tests\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "minor-refactoring",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Minor refactoring (#1169)\n\n* Minor refactoring across multiple instrumentation libraries\r\n\r\n* Reformat using black\r\n\r\n* Put span_kind back in aws_lambda\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211664ac254a19ac290c67",
    "number": 1166,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "lzchen-patch-9",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211665ac254a19ac290c68",
    "number": 1165,
    "body": "# Description\r\n\r\nUpdate DataDog exporter's `semantic-conventions` dependency to `0.31b0` (as do all the other exporters).\r\n\r\nIt was causing a conflict when running the `scripts/eachdist.py develop` script\r\notherwise.\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nCloned the repo fresh in `/tmp`. Attempted `python3 scripts/eachdist.py develop` in a fresh virtualenv. Did not work (failed with dependency conflict). Ran again to be sure. Applied this branch, ran again - worked.\r\n\r\nRan `tox` afterwards, just to be sure (but I don't think it has any DataDog tests).\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated - N/A - minor dependency change\r\n- [ ] Unit tests have been added - N/A\r\n- [ ] Documentation has been updated - N/A\r\n",
    "head_branch": "datadog-exporter-dep-version",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211666ac254a19ac290c69",
    "number": 1162,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "inform-wsgitest-base-issue",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211667ac254a19ac290c6a",
    "number": 1138,
    "body": "# SQLAlchemy & Psycopg2 SQLCommenter support for Flask related metrics\r\n\r\nSupport for using flask related metrics in sqlalchemy & psycopg2 SQL commenter.\r\n\r\nThis can be achieved by enabling enable_commenter flag inside Flask instrument initialization and also in SQLAlchemy Instrumentation  or psycopg2 instrumentation\r\n\r\n```python\r\nFlaskInstrumentor().instrument_app(app, tracer_provider=provider, enable_commenter=True)\r\n\r\n# For sqlalchemy\r\nSQLAlchemyInstrumentor().instrument( enable_commenter=True, engine=engine)\r\n\r\n# For psycopg2\r\nPsycopg2Instrumentor().instrument(tracer_provider=tracer_provider, enable_commenter=True)\r\n```\r\n\r\n- The flask instrumentation will append the metrics in opentelemetry context in key name SQLCOMMENTER_VALUES\r\n- The SQLAlchemy ORM or psycopg2 driver will read the context and then append these info to the sql query logs whenever the sql query is made\r\n\r\n@srikanthccv Need your suggestions for this draft PR so we could implement in full scale\r\n\r\n## Type of change\r\n\r\n- [X] New feature (non-breaking change which adds functionality)\r\n- [X] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nTests needs to be added upon approval of this solution\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "sqlalchemy-flash-integration",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211667ac254a19ac290c6b",
    "number": 1137,
    "body": "# Description\r\n\r\nUpdate to the previous pull on the same topic according to discussion in https://github.com/open-telemetry/opentelemetry-python-contrib/issues/1037#issuecomment-1157949209\r\n\r\n400 exceptions no longer generate error status as per [spec here](https://opentelemetry.io/docs/reference/specification/trace/semantic_conventions/http/#status)\r\n\r\nUpdated the tests to include the case for 400s errors.\r\n\r\nFixes #1037\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added a text to check that 404 response doesn't generate an error \r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n",
    "head_branch": "pyramid-400s-noerror",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Pyramid: only categorize 500 exceptions as errors (#1137)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211668ac254a19ac290c6c",
    "number": 1136,
    "body": "# Description\r\n\r\nPyramid instrumentation was categorizing all `HTTPException`s including 300s (redirects) and some 200s (for example, 204 No Content) as errors. This pull request updates this functionality to only categorize `HTTPError`s as errors. [List of exceptions in Pyramid](https://docs.pylonsproject.org/projects/pyramid/en/latest/api/httpexceptions.html)\r\n\r\nFixes [#1037](https://github.com/open-telemetry/opentelemetry-python-contrib/issues/1037)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added tests to check that redirect and no content exceptions are not categorized as errors to `pyramid-redirect-error-fix/instrumentation/opentelemetry-instrumentation-pyramid/tests/test_automatic.py`\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n",
    "head_branch": "pyramid-redirect-error-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "pyramid: Only categorize 400s and 500s exceptions as errors (#1136)\n\n* pyramid: Only categorize 400s and 500s exceptions as errors\r\n\r\n* Added changelog entry for the fix\r\n\r\n* Added a test for 204"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211669ac254a19ac290c6d",
    "number": 1135,
    "body": "`trasmit` should have been `transmit` all along\r\n",
    "head_branch": "codeboten/typo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "system-metrics: fix typo in default configuration (#1135)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621166aac254a19ac290c6e",
    "number": 1134,
    "body": "# Description\r\n\r\nI've added the code that adds https://github.com/open-telemetry/opentelemetry-python-contrib/issues/1133\r\n\r\nFixes #1133 \r\nhttps://github.com/open-telemetry/opentelemetry-python-contrib/issues/1133\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "feature/sqlalchemy-connect-span",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add span for connection phase (#1134)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621166bac254a19ac290c6f",
    "number": 1132,
    "body": "# Description\r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python-contrib/issues/1103\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ X ] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n\r\n- [ X ] tox -e  test-instrumentation-sqlalchemy14\r\n- [ X ] tox\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ X ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ X ] Followed the style guidelines of this project\r\n- [ X ] Changelogs have been updated\r\n- [ X ] Unit tests have been added\r\n- [ X ] Documentation has been updated\r\n",
    "head_branch": "1103-instrumentin-multiple-sqlalchemy-engines",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add support to instrument multiple sqlalchemy engines (#1132)\n\n* Override __new__ to instrument multiple engines\r\n\r\n* add possibility to instrument mutiple engines\r\n\r\n* update changelog\r\n\r\n* update return type in doc\r\n\r\n* fix CHANGELOG\r\n\r\n* format\r\n\r\n* fix test\r\n\r\n* Check if engines isinstance Sequence\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621166cac254a19ac290c70",
    "number": 1129,
    "body": "Fixes #1125",
    "head_branch": "issue_1125",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Check keys in config before creating instruments (#1129)\n\n* Check keys in config before creating instruments\r\n\r\nFixes #1125\r\n\r\n* Fix lint"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621166dac254a19ac290c71",
    "number": 1128,
    "body": "# Description\r\n\r\nFixes #1126 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] `tox -e test-instrumentation-wsgi`\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] Yes. - Link to PR: https://github.com/open-telemetry/opentelemetry-python/pull/2757\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n\r\n",
    "head_branch": "wsgi-server-metrics",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add metric instrumentation for WSGI (#1128)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621166eac254a19ac290c72",
    "number": 1127,
    "body": "# Description\r\n\r\nIn opentelemetry-distro, set `otlp-grpc-proto` as the default value for `OTLP_METRICS_EXPORTER`. This make it the default when using `opentelemetry-instrument`, similar to tracing.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nInstall the change in local venv and ran:\r\n\r\n```sh\r\n$ opentelemetry-instrument ipython\r\nPython 3.9.12 (main, Mar 24 2022, 13:02:21)\r\nType 'copyright', 'credits' or 'license' for more information\r\nIPython 7.24.1 -- An enhanced Interactive Python. Type '?' for help.\r\n\r\nIn [1]: from opentelemetry import metrics\r\n\r\nIn [2]: metrics.get_meter_provider()._sdk_config.metric_readers[0]._exporter\r\nOut[2]: <opentelemetry.exporter.otlp.proto.grpc.metric_exporter.OTLPMetricExporter at 0x7fb4387ecdf0>\r\n```\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- ~[ ] Documentation has been updated~ WIP, see https://github.com/open-telemetry/opentelemetry-python/issues/2732\r\n",
    "head_branch": "otlp-default-metrics-exporter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Set OTLP grpc as the default metrics exporter for auto-instrumentation (#1127)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621166eac254a19ac290c73",
    "number": 1124,
    "body": "Fixes #1123",
    "head_branch": "issue_1123",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Pass a list of metric readers (#1124)\n\nFixes #1123"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621166fac254a19ac290c74",
    "number": 1121,
    "body": "Fixes #1120",
    "head_branch": "issue_1120",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add psutil dependency (#1121)\n\n* Add psutil dependency\r\n\r\nFixes #1120\r\n\r\n* Update instrumentation/opentelemetry-instrumentation-system-metrics/setup.cfg\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211670ac254a19ac290c75",
    "number": 1118,
    "body": "# Description\r\n\r\nThis unpins the version of requests in\r\n`opentelemetry-exporter-prometheus-remote-write`.  Having the version\r\npinned in a project that uses requests for other things can cause\r\nunresolvable dependency issues.  This is a trivial change.\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.",
    "head_branch": "unpin-requests-version-prometheus-remote-write",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211671ac254a19ac290c76",
    "number": 1117,
    "body": "# Description\r\nAdded a hook to the log instrumentation. This enables multiple things such as adding data to log records.\r\n\r\n## Type of change\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Test A\r\nAdded a hook to the instrumentation and added an attribute to the record in it. made sure the added attribute exists on the record after instrumentation.\r\n\r\n\r\n# Does This PR Require a Core Repo Change?\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "logging_instr_hook",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Logging instr hook (#1117)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211672ac254a19ac290c77",
    "number": 1116,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nThis change aims to fix the issue outlined in #930 where urllib3 downstream spans are not being suppressed with a requests upstream, causing an extra span to be created. \r\n\r\nThe root cause of this bug lies in the create_key() method in opentelemetry context which adds a unique `uuid` to the end of each key created. Since a new `_SUPPRESS_HTTP_INSTRUMENTATION` key is being created in the instrumentation for each library, this results in a different key being created by each instrumentation instead of the creation of a single key that suppresses HTTP instrumentation so proceeding libraries know not to instrument further. \r\n\r\nThis fix involves creating the `_SUPPRESS_HTTP_INSTRUMENTATION` once in opentelemetry context to avoid the bug that causes a new suppress http instrumentation key to be created by each instrumentation. By having only 1 key that is accessible to all instrumentations, its true value can be passed on from one instrumentation to the next without being set to None every time the instrumentation of a new library begins. This does not conflict with the [context spec](https://github.com/open-telemetry/opentelemetry-specification/blob/v1.1.0/specification/context/context.md#context) since the `_SUPPRESS_HTTP_INSTRUMENTATION_KEY` is meant to be shared, and creating a unique version of it in each library instrumentation is not the correct implementation of this concept. \r\n\r\nFixes #930 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Tox unit tests for each affected library\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] Yes, please refer to [PR # 2729](https://github.com/open-telemetry/opentelemetry-python/pull/2729) in the core repo\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added \r\n",
    "head_branch": "fix-suppress-http-instrumentation-key",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix HTTP instrumentation not being suppressed (#1116)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211673ac254a19ac290c78",
    "number": 1115,
    "body": "Docs builds failing on latest sphinx version.\r\n\r\nhttps://github.com/open-telemetry/opentelemetry-python-contrib/runs/6676193855?check_suite_focus=true",
    "head_branch": "docs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "sphinx (#1115)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211674ac254a19ac290c79",
    "number": 1114,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "lzchen-patch-8",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211675ac254a19ac290c7a",
    "number": 1111,
    "body": "# Description\r\n\r\nThis PR impelements instrumentation for confluent-kafka client. it heavily relies on [PR-905](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/905). It creates proxy objects for `cimpi.Producer` and `cimpl.Consumer` and patch their methods using wrapt\r\n\r\n\r\n## Type of change\r\n\r\n- [X] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [X] Deployed confluent-kafka producer/consumer with manual and auto instrumentation\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [X] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n- [X] Documentation has been updated\r\n",
    "head_branch": "support-confluent-kafka",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Support confluent kafka (#1111)\n\n* add kafka instrumentation\r\n\r\n* add confluent kafka instrumentation\r\n\r\n* fix tests\r\n\r\n* change documentation\r\n\r\n* lint fix\r\n\r\n* fix lint\r\n\r\nCo-authored-by: Nikolay Sokolik <81902191+oxeye-nikolay@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211675ac254a19ac290c7b",
    "number": 1110,
    "body": "# Description\r\nRestoring production of metrics for requests library. \r\n\r\nFixes #1039 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\nTested by sending metrics to collector and added unit test.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "restore-requests-metrics",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Restoring metrics in requests (#1110)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211676ac254a19ac290c7c",
    "number": 1109,
    "body": "This is a stop-gap until the generated code can be updated with a newer\r\nversion of protoc, as required by the protobuf 4.x release.\r\n\r\n# Description\r\n\r\n`protobuf` 4.x requires that the generated files be generated with a newer version of protoc than has been used.\r\n\r\nThis is a historical breakage (i.e. affects previously released versions), so this is a simple fix that could be trivially backported to previous releases if desired.\r\n\r\nPart of https://github.com/open-telemetry/opentelemetry-python/issues/2717 (No corresponding bug lodged here)\r\n\r\nThe failure is visible in CI run for #1108 though.\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [ ] CI run\r\n- [x] pip\r\n\r\n## Pip Test\r\n\r\nIn a clean venv, with opentelementy-python main at .\\open-telemetry-python, and this branch at \\opentelemetry-python-contrib:\r\n```\r\npython -m pip install --upgrade --upgrade-strategy eager -e .\\opentelemetry-python-contrib\\instrumentation\\opentelemetry-instrumentation-grpc[test] .\\opentelemetry-python-contrib\\opentelemetry-instrumentation\\ .\\opentelemetry-python\\opentelemetry-semantic-conventions\\ .\\opentelemetry-python\\opentelemetry-api\\ .\\opentelemetry-python\\opentelemetry-sdk\\  protobuf>4\r\n```\r\npasses.\r\n\r\nWIth this PR, it fails:\r\n```\r\nERROR: Cannot install opentelemetry-instrumentation-grpc[test]==0.31b0 and protobuf>4 because these package versions have conflicting dependencies.\r\n\r\nThe conflict is caused by:\r\n    The user requested protobuf>4\r\n    opentelemetry-instrumentation-grpc[test] 0.31b0 depends on protobuf~=3.13\r\n```\r\n\r\nNote that right now, this test must explicitly specify `protobuf>4` because the protobuf 4.x release package has been yanked, so it's no longer selected by default. Had this not been done, the test for this PR would have successfully installed, but chosen an earlier version of protobuf.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\nThere's a matching PR at https://github.com/open-telemetry/opentelemetry-python/pull/2720 though.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Changelogs have been updated",
    "head_branch": "restrict-protobuf-to-3.x",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Narrow protobuf dependency to exclude protobuf >= 4 (#1109)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211677ac254a19ac290c7d",
    "number": 1108,
    "body": "# Description\r\n\r\nSmall repeated/duplicated typo fix, noticed while browsing the codebase.\r\n\r\n## Type of change\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Typo fix: caputre => capture (#1108)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211678ac254a19ac290c7e",
    "number": 1106,
    "body": "# Description\r\n\r\nFixes typing for Getter and Setter to be generic, in line with the parallel change in the core library.  See https://github.com/open-telemetry/opentelemetry-python/pull/2657\r\n\r\nFixes #1105 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] Yes. - Link to PR: https://github.com/open-telemetry/opentelemetry-python/pull/2657\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added (type hints only)\r\n- [ ] Documentation has been updated (type hints only)\r\n",
    "head_branch": "generic-textmap",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "updated type hints for getters and setters (#1106)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211679ac254a19ac290c7f",
    "number": 1101,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "grpc-client-instrumentation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621167aac254a19ac290c80",
    "number": 1100,
    "body": "# Description\r\n\r\nAdded an escape call in sitecustomize to fix unescapable character bug in auto-instrumentation on Windows.\r\nFixes [#2703 on opentelemetry-python](open-telemetry/opentelemetry-python-contrib#1102)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nTested with server_uninstrumented.py script. Confirmed spans are printed on Windows.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added.\r\n- [ ] Documentation has been updated.\r\n\r\n",
    "head_branch": "jerevoss",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixing inescapable character bug for Windows path string (#1100)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621167bac254a19ac290c81",
    "number": 1097,
    "body": "Fixes #1077\r\n\r\nFixing this issue is a bit complicated:\r\n\r\n[Here](https://github.com/open-telemetry/opentelemetry-python-contrib/issues/143#issuecomment-742477481) it is suggested that we may monkey patch the `register_types` function instead of wrapping the connection/cursor. The problem with this approach is that it may be necessary to do this kind of patching in private modules of the Psycopg2 library that may change paths unexpectedly (since they are private), causing our instrumentation to be breakable with any release of Psycopg2.\r\n\r\n@owais suggests [here](https://github.com/open-telemetry/opentelemetry-python-contrib/issues/143#issuecomment-708099012) that we should patch the classes themselves instead of wrapping to avoid problems with type checking. I understand the point but I think this approach also has the problem that it may require importing from private modules to patch effectively.\r\n\r\nThe particular issue here happens because [`PyObject_TypeCheck`](https://docs.python.org/3/c-api/object.html#c.PyObject_TypeCheck) is used in Psycopg2 `register_types` and this type checking implemented in C is more restrictive than `isinstance` (`wrapt.ObjectProxy` objects [passes an `isinstance` check](https://wrapt.readthedocs.io/en/latest/wrappers.html#object-proxy) against the type of the wrapped object).\r\n\r\nThe solution implemented here is able to pass the `PyObject_TypeCheck` because the connection created dynamically inherits from the class of the original connection, something `wrapt.ObjectProxy` does not.",
    "head_branch": "issue_1077",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Refactor TracedConnectionProxy (#1097)\n\n* Refactor TracedConnectionProxy\r\n\r\nFixes #1077\r\n\r\n* Remove unecessary methods"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621167cac254a19ac290c82",
    "number": 1095,
    "body": "# Description\r\n\r\nAdded instrumentation for `aio-pika`\r\n\r\n\r\n## Type of change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Unit tests (in the PR)\r\n- [x] Basic integration (took the examples from `aio-pika`s docs and checked them with the instrumentation)\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "feature/aio-pika-instrumentation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added aio-pika instrumentation (#1095)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621167dac254a19ac290c83",
    "number": 1094,
    "body": null,
    "head_branch": "release/1.12.0rc1-0.31b0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Release 1.12.0rc1-0.31b0 (#1094)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621167eac254a19ac290c84",
    "number": 1093,
    "body": "Fixes #1092",
    "head_branch": "issue_1092",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use public metrics (#1093)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621167eac254a19ac290c85",
    "number": 1091,
    "body": null,
    "head_branch": "release/1.11.2-0.30b2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621167fac254a19ac290c86",
    "number": 1089,
    "body": "Fix #1088 \r\n\r\nAccording to the docs, the value for `timeout` is in seconds: https://docs.python.org/3/library/urllib.request.html#urllib.request.urlopen. 1000 seconds seems slow and in some cases can block the startup of the program being instrumented (see #1088 as an example), because the request will hang indefinitely in non-AWS environments. Using a much shorter 1 second timeout seems like a reasonable workaround for this.\r\n\r\n# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use a shorter timeout for AWS EC2 metadata requests (#1089)\n\n* Use a shorter timeout for AWS EC2 metadata requests\r\n\r\nFix #1088 \r\n\r\nAccording to the docs, the value for `timeout` is in seconds: https://docs.python.org/3/library/urllib.request.html#urllib.request.urlopen. 1000 seconds seems slow and in some cases can block the startup of the program being instrumented (see #1088 as an example), because the request will hang indefinitely in non-AWS environments. Using a much shorter 1 second timeout seems like a reasonable workaround for this.\r\n\r\n* add changelog entry for timeout change\r\n\r\n* use 5s timeout for ECS and EKS, update changelog\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211680ac254a19ac290c87",
    "number": 1086,
    "body": "# Description\r\n\r\nBug fix for module name emitted by sqlalchemy.\r\n\r\nOther instrumentation libraries appear to be calling `get_tracer` with `__name__` but the [API docs](https://opentelemetry-python.readthedocs.io/en/latest/api/trace.html#opentelemetry.trace.TracerProvider.get_tracer) seems to recommend against this.\r\n\r\nFixes #922 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added test cases for `instrumentation_scope.name`\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "sqlalchemy-tracer-name",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "use sqlalchemy module name not engine. fixes #922 (#1086)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211681ac254a19ac290c88",
    "number": 1084,
    "body": "# Description\r\n\r\nThis updates contrib for the core repo PR https://github.com/open-telemetry/opentelemetry-python/pull/2664\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nExisting tests pass\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] Yes. - already merged https://github.com/open-telemetry/opentelemetry-python/pull/2664\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project",
    "head_branch": "callbackoptions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update system metrics callbacks to accept CallbackOptions (#1084)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211682ac254a19ac290c89",
    "number": 1082,
    "body": "# Description\r\n\r\nThis adds instrumentation support for [remoulade](https://github.com/wiremind/remoulade), in roughly the same way Celery does.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] We are using this implementation internally\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "add-remoulade",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add instrumentation for remoulade (#1082)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211683ac254a19ac290c8a",
    "number": 1081,
    "body": "# Description\r\n\r\nThis PR instruments the SQS client as part of python's boto3 package. Unlike the [instrumentation of boto3](https://github.com/open-telemetry/opentelemetry-python-contrib/tree/main/instrumentation/opentelemetry-instrumentation-botocore), this instrumentation propagates the context and baggage over the sent messages, following the [messaging systems spec](https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/semantic_conventions/messaging.md). \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [X] I have created two services using the same queue. The client was sending both batch and single messages and the producer was polling on the queue and iterating over the messages.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [X] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "feature/add_boto3_sqs_instrumentation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Feature/add boto3 sqs instrumentation (#1081)\n\n* Add Boto3SQS Instrumentation\r\n\r\n* Add basic tests\r\n\r\n* Add context setting list\r\n\r\n* Fix linting\r\n\r\n* CR and lint fixes\r\n\r\n* Add newline\r\n\r\n* Run tox generate\r\n\r\n* Change the dependency version\r\n\r\n* Fix linting\r\n\r\n* PR fixes. Remove walrus operator and use the `start_as_current_span`\r\n\r\n* Run lint and generate\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211684ac254a19ac290c8b",
    "number": 1080,
    "body": "# Description\r\n\r\nFixes an issue with datadog-context-propagator where a non-recording span will fail to inject.\r\n\r\nI am aware that the exporter is now deprecated but the fix is for the context propagator, which should arguably be moved to `propagator/` directory but that should likely be done separately. In order to run tests and linter for this fix I had to re-add the exporter to `tox.ini`. I'll let the admins let me know how we want to continue with this...\r\n\r\n\r\nFixes: #1078\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [X] `tox -e py39-test-exporter-datadog`\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "ielad/1078/fix-inject-nonrecordingspan",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211685ac254a19ac290c8c",
    "number": 1079,
    "body": "# Description\r\n\r\nAdding trace_configs argument to aiohttp client wrapper enables additional customization. For instance, on_request_chunk_sent event is called after span was created and before request was ended - making it impossible to capture data chunks when using request or response hooks.\r\n\r\n\r\nFixes #1073 (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nThe trace_configs feature is already integrated and tested with aiohttp wrapper library (https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/instrumentation/opentelemetry-instrumentation-aiohttp-client/tests/test_aiohttp_client_integration.py). \r\nAn additional test was added to verify new functionality - creating 2 spans with passing trace_configs as an argument to instrument func.\r\n\r\n- [ ] Test A -> test_instrument_with_custom_trace_config \r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Unit tests have been added\r\n",
    "head_branch": "feat/aiohttp-trace-configs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Feat: instrument aiohttp with trace_configs argument  (#1079)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211686ac254a19ac290c8d",
    "number": 1076,
    "body": "# Description\r\n\r\nThis PR adds instrumentation to async Redis clients in the Redis library.\r\n\r\nAs of redis-py 4.2.0, async support has been merged into the main redis-py library (basically taken from aioredis, I believe). Instrumentation should work in the same way as the sync Redis clients.\r\n\r\nNo dependency changes are required in the actual package; we only activate async instrumentation if the Redis version is high enough. The `docker-tests` testenv has its Redis version bumped to one that include async support, however.\r\n\r\nShould supersede #569 since aioredis is no longer recommended.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Functional tests added to `test_redis_functional.py`\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "instrument-redis-asyncio",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Instrument redis.asyncio clients (#1076)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211687ac254a19ac290c8e",
    "number": 1075,
    "body": "# Description\r\n\r\nSee core PR https://github.com/open-telemetry/opentelemetry-python/pull/2651\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n\r\n# How Has This Been Tested?\r\n\r\nTests passing\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] Yes. - Link to PR: https://github.com/open-telemetry/opentelemetry-python/pull/2651\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n",
    "head_branch": "aaron-api-private-contrib",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update system metrics to work with new metrics imports (#1075)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211688ac254a19ac290c8f",
    "number": 1072,
    "body": "# Description\r\n\r\nMakes span attributes available in aiohttp_client at span start.\r\n\r\nFixes #939\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Existing test suite ran successfully\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "ns-939-make-requests-span-attributes-available-to-samplers-for-aiohttp-client",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Make span attributes available to sampler in aiohttp_client (#1072)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211689ac254a19ac290c90",
    "number": 1069,
    "body": "It is deprecated and excluded from other scripts. Should no longer run as a part of test suite.",
    "head_branch": "remove-ddexporter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove datadog exporter from tox (#1069)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621168aac254a19ac290c91",
    "number": 1067,
    "body": null,
    "head_branch": "release/1.11.1-0.30b1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Release 1.11.1-0.30b1 (#1067)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621168bac254a19ac290c92",
    "number": 1066,
    "body": "# Description\r\n\r\nThis prevents auto-instrumentation of subprocesses launched with `exec*` as soon as possible. The risk of autoinstrumenting these subprocesses is creating a loop of autoinstrumentation if the initialization code creates the subprocess.\r\n\r\nFixes #1050\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\nTested manually\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "autoinstrumentation-loop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Prune autoinstrumentation sitecustomize module directory from PYTHONPATH immediately (#1066)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621168cac254a19ac290c93",
    "number": 1065,
    "body": "This change adds a --version flag to both opentelemetry-instrument and opentelemetry-bootstrap to make debugging easier.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] manually tested\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n",
    "head_branch": "codeboten/add-version",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[opentelemetry-instrumentation] add version flag (#1065)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621168dac254a19ac290c94",
    "number": 1064,
    "body": "# Description\r\nChanging `add_custom_request_headers ` to `collect_custom_request_headers_attributes ` and `add_custom_response_headers` to `collect_custom_response_headers_attributes ` for making it consistent across ASGI, WSGI and tornado.\r\n\r\nFixes #1025 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nRunning available unit tests to capture request and response headers.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n",
    "head_branch": "refactor-collect-custom-header-api",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Refactoring custom header collection API for consistency (#1064)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621168eac254a19ac290c95",
    "number": 1062,
    "body": "Fixes #1053\r\nFixes #1054\r\n\r\n@ashu658 @sanketmehta28 if you want, you can add the company you work at.\r\n\r\nWelcome aboard!",
    "head_branch": "issue_1054_1053",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add Ashutosh Goel and Sanket Mehta to approvers (#1062)\n\n* Add Ashutosh Goel and Sanket Mehta to approvers\r\n\r\nFixes #1053\r\nFixes #1054\r\n\r\n* Adding company name for ashu658\r\n\r\n* adding company name for sanketmehta28\r\n\r\nCo-authored-by: Ashutosh Goel <39601429+ashu658@users.noreply.github.com>\r\nCo-authored-by: sanket Mehta <sankmeht@cisco.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621168eac254a19ac290c96",
    "number": 1061,
    "body": "Fixes #1060",
    "head_branch": "issue_1060",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Rename Measurement to Observation (#1061)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621168fac254a19ac290c97",
    "number": 1059,
    "body": "Fixes https://github.com/open-telemetry/opentelemetry-python-contrib/issues/1058\r\n\r\nAlso adds missing `opentelemetry-contrib-instrumentations` to build script.",
    "head_branch": "script",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "script (#1059)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211691ac254a19ac290c98",
    "number": 1057,
    "body": "Following [this](https://github.com/open-telemetry/opentelemetry-python/pull/2602), system metrics need to be updated for callbacks.",
    "head_branch": "fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix callbacks in system metrics instrumentation (#1057)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211692ac254a19ac290c99",
    "number": 1056,
    "body": null,
    "head_branch": "release/1.11.0-0.30b0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Release 1.11.0-0.30b0  (#1056)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211693ac254a19ac290c9a",
    "number": 1055,
    "body": "# Description\r\n\r\nFixes issue with AWS lambda - in some rare cases (API GW proxy integration test) `headers` are set to None, breaking context propagators.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- manual testing (pretty straightforward change)\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "aws-lambda-none-headers-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixes issue with headers not being a dict in AWS lambda instr (#1055)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211694ac254a19ac290c9b",
    "number": 1052,
    "body": "# Description\r\n\r\nThis changes the way spans are initialized for the celery instrumentation hooks and handles the case where Celery tasks are not available in the registry and called anonymously using the `signature()` or `send_task()`\r\n\r\nFixes #1002, #609 \r\npossibly addresses #784 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Ran changes against reproduced issue in repo linked in issue -> https://github.com/goatsthatcode/opentelemetry-instrumentation-celery-example\r\n- [x] Added Unit Test to cover new conditional branch\r\n- [x] Passed existing test suite\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "celery_add_support_for_anon_tasks",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211695ac254a19ac290c9c",
    "number": 1048,
    "body": "# Description\r\n\r\nFix bug in Tornado instrumentation. Current implementation erase http status codes and set 500 for any types of exceptions (tornado.web.HTTPError and others). But in Tornado [implemantation](https://github.com/tornadoweb/tornado/blob/master/tornado/web.py#L1767-L1770) setting http status 500 if exception not tornado.web.HTTPError. Otherwise, http status will set from exception. This fix repeat Tornado implementation logic. \r\n\r\nFixes #997\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- Just create handler which raise tornado.web.HTTPError with some code. (See unit test)\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "HH-148830",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix Tornado errors mapping to 500 (#1048)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211696ac254a19ac290c9d",
    "number": 1046,
    "body": "# Description\r\n\r\nThis PR contains py tests for Starlette framework. Actual code has been merged in this PR: https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1004\r\nIt also contains the doc update for Startlette framework\r\n\r\nFixes #917 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nAdded below unit tests for request and response headers for both http and websocket applications.\r\n\r\n- [x] Test A: check for request header which is set in OTEL_INSTRUMENTATION_HTTP_CAPTURE_HEADERS_SERVER_REQUEST env variable, is present in the span as attribute\r\n- [x] Test B: check for request header which is NOT set in OTEL_INSTRUMENTATION_HTTP_CAPTURE_HEADERS_SERVER_REQUEST env variable, is NOT present in the span as attribute\r\n- [x] Test C: check for response header which is set in OTEL_INSTRUMENTATION_HTTP_CAPTURE_HEADERS_SERVER_RESPONSE env variable, is present in the span as attribute\r\n- [x] Test D: check for response header which is NOT set in OTEL_INSTRUMENTATION_HTTP_CAPTURE_HEADERS_SERVER_RESPONSE env variable, is NOT present in the span as \r\nattribute\r\n\r\n- Also added test for NoOpTracerProvider as well\r\n\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "develop/capture_request_response_headers_starlette",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Starlette: capture custom request response headers in span attributes (#1046)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211697ac254a19ac290c9e",
    "number": 1045,
    "body": null,
    "head_branch": "codeboten/updatereadme",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[docs] update maintainers (#1045)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211698ac254a19ac290c9f",
    "number": 1044,
    "body": "# Description\r\n\r\nThis fresh release https://github.com/mozilla/bleach/releases/tag/v5.0.0 which is used by `readme-renderer` (which didn't pin the major version) causing some lint failures.  \r\n\r\nProbably something like `pip-tools` helps us in longterm to solve problems.\r\n\r\n",
    "head_branch": "yet-another-build-failure",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Pin bleach to 4.1.0 (#1044)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211698ac254a19ac290ca0",
    "number": 1038,
    "body": "# Description\r\nAdding examples for capturing HTTP request/response headers for flask, falcon, tornado and WSGI frameworks.\r\n\r\nFixes #1023 \r\n\r\n## Type of change\r\nDocumentation update\r\n\r\n# How Has This Been Tested?\r\nCaptured headers with different combinations to document the expected behaviour.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "docs-capture-http-headers",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add docs to capture HTTP request/response headers (#1038)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211699ac254a19ac290ca1",
    "number": 1032,
    "body": "# Description\r\n\r\nThis PR contains py tests for FastAPI framework. Actual code has been merged in this PR: [capture custom request response header for ASGI](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/1004)\r\nIt also contains the doc update for FastAPI as well as for ASGI framework\r\n\r\nFixes #916 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\nAdded unit tests for request and response headers for http and websocket applications. \r\n\r\nSame test cases for both http/websocket application\r\n\r\nTest A: check for request header which is set in OTEL_INSTRUMENTATION_HTTP_CAPTURE_HEADERS_SERVER_REQUEST env variable, is present in the span as attribute\r\nTest B: check for request header which is NOT set in OTEL_INSTRUMENTATION_HTTP_CAPTURE_HEADERS_SERVER_REQUEST env variable, is NOT present in the span as attribute\r\nTest C: check for response header which is set in OTEL_INSTRUMENTATION_HTTP_CAPTURE_HEADERS_SERVER_RESPONSE env variable, is present in the span as attribute\r\nTest D: check for response header which is NOT set in OTEL_INSTRUMENTATION_HTTP_CAPTURE_HEADERS_SERVER_RESPONSE env variable, is NOT present in the span as attribute\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "develop/capture_request_response_headers_fastapi",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "FastAPI: capture custom request response headers in span attributes (#1032)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621169aac254a19ac290ca2",
    "number": 1031,
    "body": "# Description\r\n\r\nThis workflow is failing consistently for some unexpected reasons even when components (mostly AWS) are not touched. Disabling them temporarily until proper fix.\r\n\r\n",
    "head_branch": "bench-disable",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Temporarily disable benchmarks workflow (#1031)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621169bac254a19ac290ca3",
    "number": 1030,
    "body": "# Description\r\n\r\nFixes the build failure import errors.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Build fix (non-breaking change which fixes an issue)\r\n",
    "head_branch": "werkzeug-brk",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix multiple import errors (#1030)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621169cac254a19ac290ca4",
    "number": 1029,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621169dac254a19ac290ca5",
    "number": 1028,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "lzchen-patch-7",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621169eac254a19ac290ca6",
    "number": 1024,
    "body": "# Description\r\n\r\nThis PR https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/semantic_conventions/http.md for django framework\r\n\r\nFixes #913\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\nAdded unit tests separately for request and response headers for ASGI and WSGI applications. Also tested it manually by capturing the request and response headers from a instrumented django app for both ASGI and WSGI application\r\n\r\nSame test cases for both ASGI/WSGI application\r\n- [x] Test A: check for request header which is set in OTEL_INSTRUMENTATION_HTTP_CAPTURE_HEADERS_SERVER_REQUEST env variable, is present in the span as attribute\r\n- [x] Test B: check for request header which is NOT set in OTEL_INSTRUMENTATION_HTTP_CAPTURE_HEADERS_SERVER_REQUEST env variable, is NOT present in the span as attribute\r\n- [x] Test C: check for response header which is set in OTEL_INSTRUMENTATION_HTTP_CAPTURE_HEADERS_SERVER_RESPONSE env variable, is present in the span as attribute\r\n- [x] Test D: check for response header which is NOT set in OTEL_INSTRUMENTATION_HTTP_CAPTURE_HEADERS_SERVER_RESPONSE env variable, is NOT present in the span as attribute\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "develop/capture_request_response_headers_django",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Django: Capture custom request/response headers (#1024)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621169fac254a19ac290ca7",
    "number": 1022,
    "body": "# Description\r\nThis PR implements the [HTTP request/response headers as span attributes semantic convention](https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/semantic_conventions/http.md) for pyramid framework.\r\n\r\nFixes #914 \r\n\r\n## Type of change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nAdded unit tests for the changes. Also, tested by capturing headers manually with instrumented pyramid app and observing the output on jaeger backend.\r\nAdded unit test for non-recording span.\r\n\r\n# Does This PR Require a Core Repo Change? \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "capture-custom-header-pyramid",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Pyramid: Capture custom request/response headers (#1022)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116a0ac254a19ac290ca8",
    "number": 1021,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "update-sha-noop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116a0ac254a19ac290ca9",
    "number": 1019,
    "body": "This PR intends to correct minor typos in the codebase.\r\n\r\n## Type of change\r\n\r\n- [X] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nTests have been run for the codebase post the change.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [X] Documentation has been updated\r\n",
    "head_branch": "otel-repo-typo-corrections",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Correct minor typos in the codebase (#1019)\n\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116a1ac254a19ac290caa",
    "number": 1018,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes #947 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "bugfix: correct generate search span_name (#1018)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116a2ac254a19ac290cab",
    "number": 1017,
    "body": "Fixes #1016",
    "head_branch": "issue_1016",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116a3ac254a19ac290cac",
    "number": 1015,
    "body": "# Description\r\n\r\nThe current documentation for Botocore and Pymongo instrumentation has incorrectly specified the argument `response_hook` as `response_hooks` for the `.instrument()` call. This PR fixes the argument name to use `response_hook` instead.\r\n\r\nCorrect Format:\r\n`BotocoreInstrumentor().instrument(request_hook=request_hook, response_hook=response_hook)`\r\n\r\n`PymongoInstrumentor().instrument(request_hook=request_hook, response_hook=response_hook, failed_hook=failed_hook)\r\n`\r\n## Type of change\r\n\r\n- [X] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nAll tests of the project have been run. \r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\n- [X] Documentation has been updated\r\n",
    "head_branch": "update-response-hook-documentation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update .instrument() call signature response_hook argument name in the header comments (#1015)\n\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116a4ac254a19ac290cad",
    "number": 1014,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes #938 \r\n\r\n## Type of change\r\n\r\nMakes use of span attribute in the urllib instrumentation\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n",
    "head_branch": "instrument",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "make span attribute available to urllib (#1014)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116a5ac254a19ac290cae",
    "number": 1013,
    "body": "The old link, https://opentelemetry-python-contrib.readthedocs.io/en/latest/getting-started.html, resulted in a 404:\r\n\r\n> <img width=\"666\" alt=\"image\" src=\"https://user-images.githubusercontent.com/4140793/159188346-7e0d6a8d-0801-4c69-b13d-80fb16f66ba4.png\">",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update README.md (#1013)\n\nCo-authored-by: Leighton Chen <lechen@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116a6ac254a19ac290caf",
    "number": 1012,
    "body": "# Description\r\n\r\nRestore the system-metrics instrumentation package into main from the `metrics` branch and update its usage of the api/sdk. Leaving in draft until the tests are fixed\r\n\r\nFix #1011\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "codeboten/restore-system-metrics",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "`opentelemetry-instrumentation-system-metrics` restore package (#1012)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116a7ac254a19ac290cb0",
    "number": 1007,
    "body": "# Description\r\n\r\nThe current elasticsearch instrumentation does not support version 8.x (see https://github.com/open-telemetry/opentelemetry-python-contrib/issues/620), which this PR does not fix, but it also does not support the async capabilities introduced in elasticsearch-python version 7.8.0 (https://elasticsearch-py.readthedocs.io/en/7.x/async.html#using-asyncio-with-elasticsearch). This PR aims to fix the latter, until a solution for the former is implemented.\r\n\r\nThis adds a wrapping of the `AsyncTransport` in addition to the already existing wrapping of `Transport`.\r\n\r\nProgress:\r\n- [x] Wrap AsyncTransport\r\n- [x] Extract common parts\r\n- [ ] Ensure it only runs if `AsyncTransport` is actually available (elasticsearch>=7.8.0)\r\n- [ ] Add tests\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update (probably?)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Original tests pass\r\n- [x] Manually checked that traces are delivered with elasticsearch==7.17.1 both with sync and async clients\r\n- [ ] Automatic tests for older versions of elasticsearch\r\n- [ ] Automatic tests for newer versions of elasticsearch\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "add_async_elasticsearch_support3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116a7ac254a19ac290cb1",
    "number": 1006,
    "body": "# Description\r\n\r\nThe current elasticsearch instrumentation does not support version 8.x (see https://github.com/open-telemetry/opentelemetry-python-contrib/issues/620), which this PR does not fix, but it also does not support the async capabilities introduced in elasticsearch-python version 7.8.0 (https://elasticsearch-py.readthedocs.io/en/7.x/async.html#using-asyncio-with-elasticsearch). This PR aims to fix the latter, until a solution for the former is implemented.\r\n\r\nThis adds a wrapping of the `AsyncTransport` in addition to the already existing wrapping of `Transport`.\r\n\r\nProgress:\r\n- [x] Wrap AsyncTransport\r\n- [x] Extract common parts\r\n- [ ] Ensure it only runs if `AsyncTransport` is actually available (elasticsearch>=7.8.0)\r\n- [ ] Add tests\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update (probably?)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Original tests pass\r\n- [x] Manually checked that traces are delivered with elasticsearch==7.17.1 both with sync and async clients\r\n- [ ] Automatic tests for older versions of elasticsearch\r\n- [ ] Automatic tests for newer versions of elasticsearch\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "add_async_elasticsearch_support2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116a8ac254a19ac290cb2",
    "number": 1005,
    "body": "# Description\r\n\r\nThe current elasticsearch instrumentation does not support version 8.x (see https://github.com/open-telemetry/opentelemetry-python-contrib/issues/620), which this PR does not fix, but it also does not support the async capabilities introduced in elasticsearch-python version 7.8.0 (https://elasticsearch-py.readthedocs.io/en/7.x/async.html#using-asyncio-with-elasticsearch). This PR aims to fix the latter, until a solution for the former is implemented.\r\n\r\nThis adds a wrapping of the `AsyncTransport` in addition to the already existing wrapping of `Transport`.\r\n\r\nProgress:\r\n- [x] Wrap AsyncTransport\r\n- [x] Extract common parts\r\n- [ ] Ensure it only runs if `AsyncTransport` is actually available (elasticsearch>=7.8.0)\r\n- [ ] Add tests\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update (probably?)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Original tests pass\r\n- [x] Manually checked that traces are delivered with elasticsearch==7.17.1 both with sync and async clients\r\n- [ ] Automatic tests for older versions of elasticsearch\r\n- [ ] Automatic tests for newer versions of elasticsearch\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "add_async_elasticsearch_support",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116a9ac254a19ac290cb3",
    "number": 1004,
    "body": "# Description\r\nThis PR will add a feature to add custom request and response headers of http as well as websocket application to span as attributes.\r\n\r\nFixes # https://github.com/open-telemetry/opentelemetry-python-contrib/issues/919\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\nI have added a new sample http_app_with_custom_headers and new websocket_app_with_custom_headers which will gives us sample apps to test and I have created a test class which will check expected as well as not expected span attributes in both type of applications\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "develop/capture_request_response_headers_asgi",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "code change to add custom http and websocket request and response hea… (#1004)\n\n* code change to add custom http and websocket request and response headers as span attributes. Issue: https://github.com/open-telemetry/opentelemetry-python-contrib/issues/919\r\n\r\n* adding entry to changelog\r\n\r\n* changes after running \"tox -e generate\" locally\r\n\r\n* - added server_span.is_recording() in _get_otel_send() just to make sure the span is recording before adding the attributes to span.\r\n- changed span to current_span to make sure attributes are being added to proper span.\r\n\r\n* removed commented code\r\n\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116aaac254a19ac290cb4",
    "number": 1003,
    "body": "# Description\r\nThis PR implements the [HTTP request/response headers as span attributes semantic convention](https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/semantic_conventions/http.md) for falcon framework.\r\n\r\nAdded check to add custom headers in Recording Span to avoid  bug #956 #998 that came in previous PRs.\r\n\r\nFixes #912 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\nAdded unit tests for the changes. Also, tested by capturing headers manually with instrumented falcon app and observing the output on jaeger backend.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "capture-custom-header-falcon",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      " Falcon: Capture request/response headers as span attributes (#1003)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116abac254a19ac290cb5",
    "number": 1001,
    "body": "# Description\r\n\r\nWhen raising non-HTTPExceptions, treat them as internal server errors for the purposes of tracing.\r\n\r\nFixes #888\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nAdds a new unit test that raises a non-HTTPException.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "pyramid-uninitialized-response-exceptions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Pyramid handle non-HTTPException (#1001)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116acac254a19ac290cb6",
    "number": 1000,
    "body": "# Description\r\n\r\nThe largest change between falcon 1.x and 2.x was the changing the placement of some exception args. This PR adds some logic to place those args in the correct places for all versions of falcon.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n- Made sure tests pass\r\n- Forked and ran against falcon instance internally.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n- [X] Documentation has been updated\r\n",
    "head_branch": "falcon141",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add falcon version 1.4.1 support to opentelemetry-instrumentation-falcon (#1000)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116adac254a19ac290cb7",
    "number": 999,
    "body": "# Description\r\n\r\nThis fixes the bug introduced in both the tornado and flask instrumentations\r\n\r\nFix https://github.com/open-telemetry/opentelemetry-python-contrib/issues/998\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "codeboten/fix-998",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix non-recording bug (#999)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116adac254a19ac290cb8",
    "number": 996,
    "body": null,
    "head_branch": "release/1.10.0-0.29b0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "updating changelogs and version to 1.10.0-0.29b0 (#995) (#996)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116aeac254a19ac290cb9",
    "number": 995,
    "body": null,
    "head_branch": "release/1.10.0-0.29b0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "updating changelogs and version to 1.10.0-0.29b0 (#995)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116afac254a19ac290cba",
    "number": 957,
    "body": "There was a bug caused by accessing `.kind` on a NonRecordingSpan. Added a test to validate the fix.\r\n\r\nFix #956\r\n",
    "head_branch": "codeboten/fix-non-recording-bug",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[instrumentation/wsgi] fix NonRecordingSpan bug (#957)\n\n* [instrumentation/wsgi] fix NonRecordingSpan bug\r\n\r\nThere was a bug caused by accessing `.kind` on a NonRecordingSpan. Added a test to validate the fix.\r\n\r\nFix #956\r\n\r\n* fix lint\r\n\r\n* use is_recording\r\n\r\n* fix lint\r\n\r\n* fix lint\r\n\r\n* fix lint"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116b0ac254a19ac290cbb",
    "number": 955,
    "body": null,
    "head_branch": "release/1.10.0-0.29b0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116b1ac254a19ac290cbc",
    "number": 954,
    "body": null,
    "head_branch": "release/1.10.1-0.28b1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116b2ac254a19ac290cbd",
    "number": 953,
    "body": "# Description\r\n\r\nI don't think I'll be able to contribute a lot of the project over the next few weeks/months so I'm giving up maintainer-ship until I can allocate considerable time to the project again.\r\n",
    "head_branch": "owais-to-approver",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Moving owais to approver (#953)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116b3ac254a19ac290cbe",
    "number": 952,
    "body": "# Description\r\nThis PR implements the [HTTP request/response headers as span attributes semantic convention](https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/semantic_conventions/http.md) for flask framework.\r\n\r\nFixes #911 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\nAdded unit tests for the changes. Also, tested by capturing headers manually with instrumented flask app and observing the output on jaeger backend.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "capture-custom-header-flask",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Flask: Capture custom request/response headers as span attributes (#952)\n\n* Capture request/response headers for flask\r\n\r\n* Update changelog and fixed lint errors"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116b4ac254a19ac290cbf",
    "number": 950,
    "body": "# Description\r\nThis PR implements the [HTTP request/response headers as span attributes semantic convention](https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/semantic_conventions/http.md) for tornado framework.\r\n\r\nFixes #915\r\n\r\n## Type of change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nAdded unit tests for the changes. Also, tested by capturing headers manually with tornado and observing the output on jaeger backend.\r\n\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "capture-custom-header-tornado",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Tornado: Capture custom request/response headers as span attributes (#950)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116b5ac254a19ac290cc0",
    "number": 949,
    "body": "# Description\r\n\r\nTopic was only extracted when sent as regular arg; it can also be provided as a kwarg.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nAdded a test case\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [] Documentation has been updated\r\n",
    "head_branch": "kafka_python_topic_extraction_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "support topic as kwarg (#949)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116b5ac254a19ac290cc1",
    "number": 942,
    "body": "# Description\r\n\r\nInstrument aiohttp server. Right now there is only instrumentation for the client.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "aiohttp-server-instrumentation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116b6ac254a19ac290cc2",
    "number": 941,
    "body": "# Changed the format of traceparent id\r\n\r\nCompressed the format of traceparent id from `/*span_id=16659691402252420308,trace_flags=1,trace_id=283190570959089573593920162873354610508,trace_state=''*/` to `/*traceparent='00-91be8b5a37d16542524ae5ae0907ec5f-543bfa9675358c75-1'*/`\r\n\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [X] tox -e test-instrumentation-dbapi                                         \r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [X] Yes. - Link to [PR](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/924/files#diff-4bf18e7d840238995e3eb1152d6bf0a3f56ce6ab6f2bcf1726ecbac7a79afedb) \r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [X] Changelogs have been updated\r\n",
    "head_branch": "dbapi-sqlcommenter-reformat",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Changed the format of traceparent id (#941)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116b7ac254a19ac290cc3",
    "number": 940,
    "body": "# Description\r\n\r\nThis PR integrates SQLCommenter into Psycopg2. When SQLCommenter is enabled in the library the SQL query logs will have traceparent id appended.\r\n\r\nIt's enabled using flag enable_commenter\r\n`Psycopg2Instrumentor()._instrument(tracer_provider=provider, enable_commenter=True)`\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [X] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [X] tox -e  py39-test-instrumentation-psycopg2\r\n- [X] tox -e docker-tests                                         \r\n\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [X] Yes. - Link to [PR](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/941): \r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [X] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "sqlcommenter-psycopg2-integration-v2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Extending SQLCommenter support of dbapi into psycopg2 (#940)\n\n* Added configuration for sqlcommenter\r\n\r\n* Fixed linting errors\r\n\r\n* Updated CHANGELOG.md\r\n\r\n* Unit test case for sqlcommenter in psycopg2\r\n\r\n* Merge conflict resolved\r\n\r\n* Update CHANGELOG.md\r\n\r\n* psycopg2 sqlcommenter integration test\r\n\r\n* linting changes\r\n\r\n* linting changes\r\n\r\n* linting changes\r\n\r\n* linting changes\r\n\r\n* linting changes\r\n\r\n* version compatability issue fix\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116b8ac254a19ac290cc4",
    "number": 935,
    "body": "# Description\r\n\r\nUpdate pymemcache instrumentation to support newer versions of pymemcache\r\n\r\nFixes #842\r\nFixes #907\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nUpdated tests to run against newer versions of pymemcache. \r\n\r\n# Does This PR Require a Core Repo Change?\r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "pymemcache_instruments_version_bump",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update pymemcache instrumentation to support pymemcache version >= 1.3.5 (#935)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116b9ac254a19ac290cc5",
    "number": 932,
    "body": "# Description\r\n\r\nThe `DatadogExportSpanProcessor ` suffered from the same problems as the [`BatchSpanProcessor`](https://github.com/open-telemetry/opentelemetry-python/pull/2242). When using the `DatadogSpanProcessor` I would see my background workers initialized with `os.fork()` deadlock. I observed this in RQ but I'm sure the same types of problems would happen in Celery.\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nI effectively copied over the test from https://github.com/open-telemetry/opentelemetry-python/pull/2242. Test passes when re-initializing on fork, fails without it.\r\n\r\nI haven't yet put this live into my project because there are a few questions I want to ask about the particulars of this implementation.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "datadog-exporter-forkaware",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116baac254a19ac290cc6",
    "number": 931,
    "body": "# Description\r\n\r\nUpdates requests instrumentation based on [http semantic conventions](https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/semantic_conventions/http.md#common-attributes):\r\n\r\n> Following attributes MUST be provided **at span creation time** (when provided at all), so they can be considered for sampling decisions:\r\n>\r\n> * `http.method`\r\n> * `http.url`\r\n> * ...\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] requests instrumentation tests were run\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "requests-span-attributes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Make requests span attributes available to samplers (#931)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116baac254a19ac290cc7",
    "number": 929,
    "body": "# Description\r\n\r\nThere are some typos which show up in the documentation. I copied/pasted the name of the environment variable to make sure I didn't get it wrong, but it was wrong in the documentation...\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nThis has not been tested, there are only doc changes.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix typos (#929)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116bbac254a19ac290cc8",
    "number": 928,
    "body": "# Description\r\nGenerate and Contrib Repo Tests (py310, instrumentation) are failing for #925 due to \r\n1) breaking change in markupsafe https://github.com/pallets/markupsafe/issues/282 and \r\n2) breaking change in itsdangerous https://github.com/pallets/itsdangerous/issues/289\r\n\r\nPinning markupsafe version to 2.0.1 and itsdangerous version to 2.0.1 to fix the issue.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project",
    "head_branch": "fix-build-failures",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixing build failures (#928)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116bcac254a19ac290cc9",
    "number": 926,
    "body": "# Description\r\n\r\nFixes [902](https://github.com/open-telemetry/opentelemetry-python-contrib/issues/902).  Current behavior is not setting a default for SpanKind in the lambda library.  When an event arrives that is not of type SQS, no exception is triggered and `span_kind` is accessed later when not set.  \r\n\r\nThis PR does two things:\r\n\r\n1. Sets a default of SpanKind.SERVER which seems to be the intent of the existing code.\r\n2. Expands the concept of consumer beyond SQS to include any event source that might send a message to a lambda.  This seems consistent with the idea that the lambda is responding to an event, e.g. consuming that event even though it's not a classic queue based consumer.\r\n\r\nFixes # (issue)\r\nhttps://github.com/open-telemetry/opentelemetry-python-contrib/issues/902\r\n\r\n## Type of change\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Create an S3 bucket.  Create a Lambda that utilizes the lambda layer for OTel.  Subscribe the lambda to the bucket via an event that occurs when files are created in the bucket.  Upload a file to the bucket.  Verify that telemetry does not occur correctly and instead messages related to `span_kind` being accessed before it is set.  \r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ NA] Followed the style guidelines of this project\r\n- [ Yes] Changelogs have been updated. \r\n- [ Yes] Unit tests have been added\r\n- [ NA] Documentation has been updated\r\n",
    "head_branch": "902-add-aws-consumers",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "adding additional event sources (#926)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116bdac254a19ac290cca",
    "number": 925,
    "body": "# Description\r\n- This PR implements the [HTTP request/response headers as span attributes semantic convention](https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/semantic_conventions/http.md) for wsgi frameworks.\r\nUser can configure environment variable `OTEL_INSTRUMENTATION_HTTP_CAPTURE_HEADERS_SERVER_REQUEST ` and `OTEL_INSTRUMENTATION_HTTP_CAPTURE_HEADERS_SERVER_RESPONSE ` to capture request/response headers respectively.\r\n- Changes `django` Instrumentation to pass response headers instead of response object.\r\n- Changes `pyramid` instrumentation to pass response headers as list.\r\n\r\nFixes #918 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nAdded unit tests for the changes. Also, tested captured headers manually with wsgi based framework by observing the output on jaeger backend.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "capture-custom-header-wsgi",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Capture custom request/response headers for wsgi and change in passing response_headers in django, pyramid (#925)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116beac254a19ac290ccb",
    "number": 924,
    "body": "# Description\r\n\r\nThis PR integrates SQLCommenter into SQLAlchemy. When SQLCommenter is enabled in the library the query logs will have traceparent id appended\r\n\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [X] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\nThe test cases are tested using the below commands\r\n`tox -e  py39-test-instrumentation-sqlalchemy14`  & `tox -e  py39-test-instrumentation-sqlalchemy14`\r\n`\r\n\r\nUnit Testcases has been added\r\n- [X] test_sqlcommenter_enabled\r\n- [X] test_sqlcommenter_disabled\r\n- [X] test_generate_commenter\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [X] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "sqlcommenter-psycopg2-integration",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Sqlcommenter integration into SQLAlchemy (#924)\n\n* Integrating sqlcommenter into psycopg2\r\n\r\n* Integrating sqlcommenter into psycopg2 - Converted public local variable into private\r\n\r\n* Added test cases for sqlcommenter & PR Changes\r\n\r\n* Code refactoring for generate sqlcommenter\r\n\r\n* Added testcase for sqlcommenter integration into sqlalchemy\r\n\r\n* updated change log\r\n\r\n* updated to accept latest logs\r\n\r\n* Updated lint changes\r\n\r\n* Fixed errors due to linting\r\n\r\n* Fixed linting errors\r\n\r\n* Fixed linting errors\r\n\r\n* Fixed linting errors\r\n\r\n* Update CHANGELOG.md\r\n\r\n* Update CHANGELOG.md\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116bfac254a19ac290ccc",
    "number": 923,
    "body": "Fixes #632\r\n",
    "head_branch": "codeboten/pylint",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[build] bump pylint (#923)\n\n* [build] bump pylint\r\n\r\nFixes #632\r\n\r\n* apply lint suggestions\r\n\r\n* specify encoding"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116c0ac254a19ac290ccd",
    "number": 909,
    "body": "# Description\r\nAgent fails to detach context with tornado 5.1.1. The issue comes because `contextvars` does not work perfectly with tornado's `gen.coroutine` as mentioned in this [issue](https://github.com/tornadoweb/tornado/issues/2731). `contextvars` has problems with resetting the context with `gen.coroutine`. The [fix](https://github.com/tornadoweb/tornado/pull/2938) for this is implemented in tornado 6.1\r\n\r\nIn tornado 5.1.1 `_execute` is implemented as `gen.coroutine` [link](https://github.com/tornadoweb/tornado/blob/branch5.1/tornado/web.py#L1554) whereas it is converted to a native coroutine in tornado 6 [link](https://github.com/tornadoweb/tornado/blob/branch6.0/tornado/web.py#L1659). `contextvars` works corretcly with native coroutines. So, changing the supported version for the agent to tornado>=6 solves the issue.\r\n\r\n## Type of change\r\n\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\nReproduce the issue: Running instrumented tornado 5.1.1 app with agent throws error. `ERROR:opentelemetry.context:Failed to detach context`\r\nThis error doesn’t come with tornado>=6. Tested by running manually.\r\n\r\nDetails on the setup to reproduce can be found in the comment thread of the issue #904 \r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "tornado-supported-version-change",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116c1ac254a19ac290cce",
    "number": 908,
    "body": "# Description\r\n\r\nThis PR adds support for an experimental and optional feature for enabling sql commenter capability to dbapi instrumentation. \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] `tox -e test-instrumentation-dbapi`\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n",
    "head_branch": "dbapi-comment-feat",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "feat(instrumentation-dbapi): add experimental sql commenter capability (#908)\n\n* feat(instrumentation-dbapi): add experimental sql commenter capability\r\n\r\n* Update instrumentation/opentelemetry-instrumentation-dbapi/src/opentelemetry/instrumentation/dbapi/__init__.py\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>\r\n\r\n* Fix lint\r\n\r\n* Add CHANGELOG entry\r\n\r\n* Fix lint\r\n\r\n* Fix lint again\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116c2ac254a19ac290ccf",
    "number": 905,
    "body": "# Description\r\n\r\nadded confluent-kafka-python module instrumentation\r\n\r\n## Type of change\r\nNew feature (non-breaking change which adds functionality)\r\nThis change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nAdded the following unit-tests:\r\n\r\n- [x]  instrumentation/opentelemetry-instrumentation-kafka-python/tests/test_instrumentation.py\r\n# Does This PR Require a Core Repo Change?\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "confluent-kafka",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116c3ac254a19ac290cd0",
    "number": 903,
    "body": "…tps://github.com/open-telemetry/opentelemetry-python-contrib/issues/454)\r\n\r\n# Description\r\n\r\nThis PR contains code changes for conditional server span creation for WSGI framework in case of another framework is present and it has already created SERVER span. In that case WSGI instrumentation will create a span of kind INTERNAL and make it a child of the SERVER span mentioned above.\r\nAlso I have added 'attributes' parameter to a util function _start_internal_or_server_span() util function to make it more compatible with multiple frameworks\r\n\r\nFixes # ([issue](https://github.com/open-telemetry/opentelemetry-python-contrib/issues/454))\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [ ] Test A: Provide an unit test where a SERVER span was already exists in the context and check if the newly created span is of kind INTERNAL and is it a child of SERVER span mentioned before.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n",
    "head_branch": "develop/conditional_server_span_wsgi",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "code changes to resolve conditional server span creation for WSGI and adding 'attributes' parameter to util function (#903)\n\n* code changes to resolve conditional server span creation for WSGI (https://github.com/open-telemetry/opentelemetry-python-contrib/issues/454)\r\n\r\n* Adding entry to changelog.md\r\n\r\n* modifying _start_internal_or_server_span() to add attributes as a parameter. Also calling _start_internal_or_server_span() in WSGI instrumentation\r\n\r\n* resolving flake8 and typo issues"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116c4ac254a19ac290cd1",
    "number": 900,
    "body": "# Description\r\n\r\nAdds deprecation note to the Datadog Span Exporter.\r\n\r\n## Type of change\r\n\r\nUpdates Readme\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nN/A\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "munir/deprecate-otel-datadog-exporter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "datadog-apm: deprecate datadog exporter (#900)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116c5ac254a19ac290cd2",
    "number": 899,
    "body": "# Description\r\nThis PR includes a unit test case for [PR](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/843/)  \r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n- [ ] Test A: Ran the full pytest for asgi framwork\r\n\r\n# Does This PR Require a Core Repo Change?\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Unit tests have been added\r\n",
    "head_branch": "develop/conditional_server_span_asgi",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "adding unit test case for ASGI framework for application wrapped with… (#899)\n\n* adding unit test case for ASGI framework for application wrapped with another framework\r\n\r\n* resolving lint errors\r\n\r\n* resolving generate build errors\r\n\r\n* resolving flake errors\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116c5ac254a19ac290cd3",
    "number": 898,
    "body": "# Description\r\n\r\nRefactoring asgi interceptor to use _start_internal_or_server_span function for conditional span creation logic.\r\n\r\n## Type of change\r\nRefactoring \r\n\r\n# How Has This Been Tested?\r\nManually tested by running an instrumented asgi app and checking spans are reported correctly.\r\n\r\n# Does This PR Require a Core Repo Change? \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "asgi-use-utility-function",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Using _start_internal_or_server_span function in asgi interceptor (#898)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116c6ac254a19ac290cd4",
    "number": 897,
    "body": "# Description\r\n\r\nAdding unit tests in starlette to test if spans are market as INTERNAL in presence of another span\r\n\r\nFixes #452 \r\n\r\n## Type of change\r\nUnit test Addition\r\n\r\n# How Has This Been Tested?\r\nAdded unit test and manually tested the scenario\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "conditional-server-span-starlette",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Adding unit tests for conditional server span creation in starlette (#897)\n\n* Adding unit tests for conditional server span creation in starlette\r\n\r\n* Adding changelog entry and renaming function\r\n\r\n* Update CHANGELOG.md\r\n\r\nRemoving changelog entry\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116c7ac254a19ac290cd5",
    "number": 896,
    "body": "# Description\r\n\r\nThis PR describes one possible way to integrate `[sqlcommenter-django](https://open-telemetry.github.io/opentelemetry-sqlcommenter/)` library into `opentelemetry-django`\r\n\r\nOne of the ways in which we can implement this is adding the SQLCommenter middleware into django instrumentation when a flag `enable_sqlcommenter=True` is added. This is similar to how other middlewares are added in[ opentelemetry-django](https://github.com/Thiyagu55/opentelemetry-python-contrib/blob/2189e81da15cc48f759860d7c628f5b8f4333a9d/instrumentation/opentelemetry-instrumentation-django/src/opentelemetry/instrumentation/django/__init__.py#L161)\r\n\r\nWhen this flag is enabled the SQLCommenter middleware is appended to the django’s existing middlewares. [See reference](https://github.com/Thiyagu55/opentelemetry-python-contrib/blob/0e112413b6b6283d2a283df95aa2a798b0b0fc3d/instrumentation/opentelemetry-instrumentation-django/src/opentelemetry/instrumentation/django/__init__.py#L168)\r\n\r\nSo for each request, SQLCommenter middleware appends additional [infos](https://open-telemetry.github.io/opentelemetry-sqlcommenter/#interpretation) to the postgresql query logs whenever any db call is made from the controller\r\n\r\nWe can customize the info to be added at the logs using [variables](https://open-telemetry.github.io/opentelemetry-sqlcommenter/python/django/#end-to-end-examples) defined in settings.py\r\n\r\nIt is enabled by adding `DjangoInstrumentor().instrument(tracer_provider=provider, is_sql_commentor_enabled=True)` in django’s settings.py\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [X] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\nUnit test cases has been added for sqlcommenter integration\r\n\r\n- [X] test_sqlcommenter.py\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [X] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n",
    "head_branch": "sqlcommenter-django-integration-solution-a",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Integrating sql commenter into otel_django_instrumentation (#896)\n\n* Integrating sql commenter into otel_django_instrumentation\r\n\r\n* Added test cases for django\r\n\r\n* - Linting changes\r\n- Added Changelog\r\n\r\n* - Linting changes\r\n\r\n* - Linting changes\r\n\r\n* - Linting changes\r\n\r\n* - Linting changes\r\n\r\n* - Linting changes\r\n\r\n* - Linting changes\r\n\r\n* - Linting changes\r\n\r\n* PR changes\r\n\r\n* PR changes\r\n\r\n* Linting changes\r\n\r\n* Linting changes\r\n\r\n* Linting changes\r\n\r\n* Linting changes\r\n\r\n* PR changes\r\n\r\n* PR changes\r\n\r\n* PR changes\r\n\r\n* linting changes\r\n\r\n* PR changes\r\n\r\n* linting changes\r\n\r\n* PR changes\r\n\r\n* PR changes\r\n\r\n* PR changes\r\n\r\n* PR changes\r\n\r\n* PR changes\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116c8ac254a19ac290cd6",
    "number": 895,
    "body": "# Description\r\n\r\nWe replace Falcon API class with a partial callable. It is safer to\r\nreplace it with a sub-class of the base falcon.API class so any other\r\nsystems making assumptions about falcon don't fail.\r\n\r\nFixes #894 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Existing tests\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix-894",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Safer patching for Falcon API (#895)\n\nWe replace Falcon API class with a partial callable. It is safer to\r\nreplace it with a sub-class of the base falcon.API class so any other\r\nsystems making assumptions about falcon don't fail."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116c9ac254a19ac290cd7",
    "number": 892,
    "body": "# Description\r\n\r\nNot sure how this test ever passed, but the method to call on `_lru_cache_wrapper` is `cache_clear`\r\n\r\nFixes #891 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n",
    "head_branch": "fix-jinja2-test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix broken jinja2 test (#892)\n\n* fix broken jinja2 test\r\n\r\n* fix test ..."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116caac254a19ac290cd8",
    "number": 890,
    "body": "# Description\r\n\r\nNow service name is extracted from the provider defensively and lazily.\r\nThis accounts for an SDK that does not provide access to \"resource\" via\r\nTracerProviders and for lazy initialization of TracerProviders.\r\n\r\nFixes #810\r\n\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Added new test to cover use case\r\n- [x] Manually\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "instrumentation-use-sdk-defensively",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Logging: Defensively access provider resource (#890)\n\nNow service name is extracted from the provider defensively and lazily.\r\nThis accounts for an SDK that does not provide access to \"resource\" via\r\nTracerProviders and for lazy initialization of TracerProviders.\r\n\r\nFixes #810\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116cbac254a19ac290cd9",
    "number": 889,
    "body": "# Description\r\n\r\n- Adds support to make spans as INTERNAL if a span is already present in current context in tornado.\r\n- Refactoring code in Django, Pyramid, Flask to use the utility funciton i.e. _start_internal_or_server_span\r\n\r\nFixes #450 \r\n\r\n## Type of change\r\n\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\nCurrently falcon only makes SERVER spans. With this PR it can make INTERNAL spans in presence of a span in current context.\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n# Does This PR Require a Core Repo Change?\r\n \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "conditional-server-span-tornado",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Mark span as internal in presence of another span for tornado and use (#889)\n\n_start_internal_or_server_span function for flask, pyramid and django\r\n\r\nAdding changelog entry\r\n\r\nAdding unit test and fixing lint errors\r\n\r\nRefactoring to use _start_internal_or_server_span function\r\n\r\nRemoving unwanted imports and variables\r\n\r\nFixing lint errors\r\n\r\nadding changes from tox -e generate\r\n\r\nFixing build errors"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116ccac254a19ac290cda",
    "number": 887,
    "body": "# Description\r\n\r\nPreparing 0.28b1 release to fix some dependency issues.\r\n\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Release PR\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] Yes. - Link to PR: https://github.com/open-telemetry/opentelemetry-python/pull/2423\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "release/1.9.1-0.28b1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "updating changelogs and version to 1.9.1-0.28b1 (#887)\n\n* updating changelogs and version to 1.9.1-0.28b1\r\n\r\n* Update CHANGELOG.md\r\n\r\nCo-authored-by: Nathaniel Ruiz Nowell <enruizno@uwaterloo.ca>\r\n\r\n* Update CHANGELOG.md\r\n\r\nCo-authored-by: Nathaniel Ruiz Nowell <enruizno@uwaterloo.ca>\r\n\r\nCo-authored-by: Nathaniel Ruiz Nowell <enruizno@uwaterloo.ca>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116cdac254a19ac290cdb",
    "number": 886,
    "body": "# Description\r\n\r\nPreparing 0.28b1 release to fix some dependency issues.\r\n\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Release PR\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] Yes. - Link to PR: https://github.com/open-telemetry/opentelemetry-python/pull/2422\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "release/1.9.0-0.28b1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116cdac254a19ac290cdc",
    "number": 885,
    "body": "# Description\r\n\r\n- Will not ignore files from build/dist directories. The script was picking up version.py files from these directories and updating them instead of the real version.py files.\r\n- Will ignore packages that are released independently of the contrib release process.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n- [x] Dev/Tooling update.\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Manual verification\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix-release-scripts",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "prepare_release script to ignore some packages/files (#885)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116ceac254a19ac290cdd",
    "number": 884,
    "body": null,
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix redis doc link (#884)\n\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116cfac254a19ac290cde",
    "number": 883,
    "body": "Part of https://github.com/open-telemetry/opentelemetry-python-contrib/issues/862\r\n\r\nAs part of an effort to push http semantic conventions to stable, this [otep](https://github.com/open-telemetry/oteps/pull/174) covers the outstanding http topics that are still being discussed and in scope for 1.0 release of http semantic conventions. The most notable topic is supporting creation of spans upon automatic redirect/retry for instrumentations that support them (for instrumentations that do not support automatic retry/redirect, our guidance to users is that the feature is not supported and they would have to add \"semantic convention related attributes/spans\" manually). Hence the \"SHOULD key words in the specs (this was discussed in the instrumentation SIG).\r\n\r\nThis PR is a prototype implementation for the urllib3 library to make the instrumentation comply with the spec [pr](https://github.com/open-telemetry/opentelemetry-specification/pull/2078). Note a couple of things with urllib3:\r\n\r\n1. Users can use [urllib3.PoolManager](https://urllib3.readthedocs.io/en/latest/reference/urllib3.poolmanager.html) or [urllib3.ConnectionPool](https://urllib3.readthedocs.io/en/latest/reference/urllib3.connectionpool.html#urllib3.HTTPConnectionPool) to make their requests. This implementation works for both ways.\r\n2. redirects are essentially retries, but the code path for retries is done RECURSIVELY, whereas redirects are handled separately AFTER the initial response returns a 3XX. \r\n3. EDIT: From the [discussion](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/883#discussion_r796036493), all created redirect/retry spans will be siblings of the original span of the request. They will be correlated purely with LINKs.\r\n4. This will be complicated if users want to use a higher level library such as `requests` that builds on top of urllib3 (as the implementation exists within urllib3 instrumentation and not requests instrumentation). In the future if this is implemented for requests, the logic will probably have to be duplicated, and suppression would probably have to be used in the underlying urllib3 library in the case both instrumentations are used.\r\n\r\nSince this is a prototype, I am open to alternative suggestions in how to implement this. :)\r\n\r\nExample cases exported to Jaeger:\r\n\r\nRedirect scenario:\r\n![image](https://user-images.githubusercontent.com/11580155/152442641-6d548673-556e-46c5-989e-bc61cd4ed61c.png)\r\n\r\nRetry scenario:\r\n![image](https://user-images.githubusercontent.com/11580155/152442878-c87a31d1-77e6-442b-a8ac-1a32941abb32.png)",
    "head_branch": "http",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116d0ac254a19ac290cdf",
    "number": 882,
    "body": "Fixes #881\r\n\r\n# Description\r\n\r\n#881\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nIn my project I added the `packaging` dependency and it resolved the issue detailed in #881.\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added n/a\r\n- [ ] Documentation has been updated n/a\r\n",
    "head_branch": "pika-packaging-transitive",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add packaging as a required package for pika instrumentation (#882)\n\nFixes #881"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116d1ac254a19ac290ce0",
    "number": 880,
    "body": "Add note about cadence to readme.",
    "head_branch": "add-release-cadence",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add release cadence (#880)\n\n* add note about monthly cadence\r\n\r\nUpdate the release section of the readme to include the monthly cadence of releases.\r\n\r\nFixes #457\r\n\r\n* add note about monthly cadence\r\n\r\nUpdate the release section of the readme to include the monthly cadence of releases.\r\n\r\nFixes #457"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116d2ac254a19ac290ce1",
    "number": 879,
    "body": "Update the release section of the readme to include the monthly cadence of releases.\r\n\r\nFixes #457",
    "head_branch": "add-release-cadence",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add release cadence (#879)\n\n* updating changelogs and version to 1.9.0-0.28b0 (#875)\r\n\r\n* Release Botocore Instrumentation as 0.28b0 (#878)\r\n\r\n* add note about monthly cadence\r\n\r\nUpdate the release section of the readme to include the monthly cadence of releases.\r\n\r\nFixes #457\r\n\r\nCo-authored-by: Owais Lone <owais@users.noreply.github.com>\r\nCo-authored-by: Nathaniel Ruiz Nowell <nathanielruiz98@gmail.com>"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116d3ac254a19ac290ce2",
    "number": 878,
    "body": "# Description\n\nFollow up to #875, where we released the instrumentations as `0.28b0`. We also want to release the `botocore` instrumentation because it needs to have the same dependencies as the other instrumentations.\n\n## Type of change\n\nPlease delete options that are not relevant.\n\n- [x] New Release\n\n# How Has This Been Tested?\n\nN/A\n\n# Does This PR Require a Core Repo Change?\n\n- [x] No.\n\n# Checklist:\n\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\n\n- [x] Followed the style guidelines of this project\n- [x] Changelogs have been updated\n~- [ ] Unit tests have been added~\n~- [ ] Documentation has been updated~\n",
    "head_branch": "release-botocore-instrumentation-0.28b0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Release Botocore Instrumentation as 0.28b0 (#878)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116d4ac254a19ac290ce3",
    "number": 877,
    "body": "Update the release section of the readme to include the monthly cadence of releases.\r\n\r\nFixes #457\r\n",
    "head_branch": "add-release-cadence",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116d5ac254a19ac290ce4",
    "number": 876,
    "body": "# Description\r\n\r\npymongo instrumentation already supported the latest releases (v4.0), I just needed to enable that configuration.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nRunning the same unit tests on the newer pymongo version\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "add_more_pymongo_supported_versions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "feat: support pymongo v4.0 (#876)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116d5ac254a19ac290ce5",
    "number": 875,
    "body": "# Description\r\n\r\nPreparing 1.9.0 and 0.28b0 release\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New Release\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] Yes. - Link to PR: https://github.com/open-telemetry/opentelemetry-python/pull/2411\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Changelogs have been updated\r\n\r\n",
    "head_branch": "release/1.9.0-0.28b0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "updating changelogs and version to 1.9.0-0.28b0 (#875)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116d6ac254a19ac290ce6",
    "number": 873,
    "body": "# Description\r\n\r\nDjango basic app auto instrumentation with sqlite3 as a backend didn't produce the db spans. Digging further I realised it uses the `dbapi2.connect` (which is same as `sqlite3.connect`) for historical reasons. This updates to instrument both.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] `tox -e test-instruementation-sqlite3`\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n",
    "head_branch": "sqlite-connect",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "(instrumentation-sqlite3): trace connections made with `dbapi2.connect` (#873)\n\n* Change wrap_connect method\r\n\r\n* Wrap both connect defs\r\n\r\n* Add tests\r\n\r\n* Add CHANGELOG entry"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116d7ac254a19ac290ce7",
    "number": 872,
    "body": "# Description\r\n\r\nIn some cases, which aren't consistently reproducible, the partition extraction of the kafka-python instrumentation fails. Since this isn't a crucial part of the instrumentation, we simply protect it with try/except to avoid a crash.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nA simple try/catch to prevent an issue that happened in our production environment.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix_kafka_partition_extraction_failure",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix: safe kafka partition extraction (#872)\n\n* safe partition extraction\r\n\r\n* update changelog"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116d8ac254a19ac290ce8",
    "number": 871,
    "body": "# Description\r\n\r\nThe trailing_metadata method was added to grpc._server.ServicerContext in gRPC v1.38.0.\r\n\r\n## Type of change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nManually validated this change works with our custom gRPC interceptors.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "trailing-metadata",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "add trailing_metadata to _OpenTelemetryServicerContext (#871)\n\nThe trailing_metadata method was added to grpc._server.ServicerContext\r\nin gRPC v1.38.0."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116d9ac254a19ac290ce9",
    "number": 870,
    "body": "# Description\r\n\r\nPrevious implementation would never use MIDDLEWARE_CLASSES as the default value in the getattr [] would not match the None\r\n\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [X] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix Django 1.9 issue preventing use of MIDDLEWARE_CLASSES (#870)\n\n* Update CHANGELOG.md\r\n\r\n* Fix Django 1.9 issue preventing use of MIDDLEWARE_CLASSES\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116daac254a19ac290cea",
    "number": 869,
    "body": "# Description\r\n\r\nThis PR will fix the issue of creating a separate span when pyramid application is instrumented along with any other framework like asgi or wsgi. This fix will extract the span from context first it exists and then create a child span which is expected behavior\r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python-contrib/issues/449\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nI have added a separate unit test in test_automatic.py for pyramid instrumentation\r\n\r\n- [ ] Test A:\r\n- SERVER span is provided in the context.\r\n- then test client send the request to instrumented pyramid application which will create its own span\r\n- check whether the newly created span is child of the existing span and of type INTERNEL\r\n\r\n# Does This PR Require a Core Repo Change?\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n",
    "head_branch": "develop/conditional_server_span_pyramid",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Develop/conditional server span pyramid (#869)\n\n* code change to resolve the bug https://github.com/open-telemetry/opentelemetry-python-contrib/issues/449\r\n\r\n* modifying the changelog file to add entry for PR #869\r\n\r\n* removing redundent get statement\r\n\r\n* Conditionally create server spans for falcon (#867)\r\n\r\n* Making span as internal for falcon in presence of a span in current context\r\n\r\n* Updating changelog\r\n\r\n* Fixing lint and generate build failures\r\n\r\n* Resolving comments: Converting snippet to re-usable function\r\n\r\n* Fixing build failures\r\n\r\n* Resolving comments: Creating wrapper for start span to make internal/server span\r\n\r\n* Rerun docker tests\r\n\r\n* Resolving comments: Refactoring\r\n\r\n* Fix Django 1.9 issue preventing use of MIDDLEWARE_CLASSES (#870)\r\n\r\n* Update CHANGELOG.md\r\n\r\n* Fix Django 1.9 issue preventing use of MIDDLEWARE_CLASSES\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>\r\n\r\n* changing the import trace statement to resolve issue with unit test cases\r\n\r\nCo-authored-by: Ashutosh Goel <39601429+ashu658@users.noreply.github.com>\r\nCo-authored-by: Dan <pezzer55@gmail.com>\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>\r\nCo-authored-by: Owais Lone <owais@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116dbac254a19ac290ceb",
    "number": 867,
    "body": "# Description\r\n\r\nAdds support to make spans as INTERNAL if a span is already present in current context in falcon.\r\n\r\nFixes #447\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n    Currently falcon only makes SERVER spans. With this PR it can make INTERNAL spans in presence of a span in current context.\r\n\r\n# How Has This Been Tested?\r\n\r\nAdded unit test for the changes.\r\nManually tested the scenario.\r\nTo reproduce the issue: Add two instrumentors i.e. FalconInstrumentor and OpenTelemetryMiddleware in the same app. This creates two separate traces instead of one.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "conditional-server-span-falcon",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Conditionally create server spans for falcon (#867)\n\n* Making span as internal for falcon in presence of a span in current context\r\n\r\n* Updating changelog\r\n\r\n* Fixing lint and generate build failures\r\n\r\n* Resolving comments: Converting snippet to re-usable function\r\n\r\n* Fixing build failures\r\n\r\n* Resolving comments: Creating wrapper for start span to make internal/server span\r\n\r\n* Rerun docker tests\r\n\r\n* Resolving comments: Refactoring"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116dcac254a19ac290cec",
    "number": 866,
    "body": "# Description\r\n\r\nSupport the latest versions of `httpx`, currently only versions lower than `0.19.0` are supported.\r\n\r\n## Type of change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nAdapting the existing tests of the previous versions of `httpx`.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "support_newer_httpx_versions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Support newer httpx versions (#866)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116ddac254a19ac290ced",
    "number": 865,
    "body": "# Description\r\n\r\nThis code change resolves the conditional span creation for pyramid framework in case of other framework is used as well. This fix will use the existing span and make the new span its child and create a parent child relation which is the right behavior\r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python-contrib/issues/449\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nI have added the unit test cases in test_automatic.py for this code change where I have added a span in current context and send a request using test client which will create the child span and I have checked that parent.id of the newly created span is equal to the id of the existing span.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Unit tests have been added\r\n",
    "head_branch": "condition_server_span_pyramid",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116deac254a19ac290cee",
    "number": 864,
    "body": "# Description\r\n\r\nUrl filter function receives `yarl.URL` type, as described in the documentation.\r\nBut `_UrlFilterT` type describes `str` input... We need to fix it\r\n\r\n<img width=\"748\" alt=\"Screenshot 2022-01-15 at 02 57 07\" src=\"https://user-images.githubusercontent.com/25399456/149599634-395a44e7-94ef-452d-98c4-3c4361bffd8b.png\">\r\n\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix-url-typing",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "aiohttp instrumentation: correct url filter input type (#864)\n\n* fix: correct _UrlFilterT\r\n\r\n* docs: CHANGELOG.md update\r\n\r\n* style: apply isort\r\n\r\n* fix: add yarl to docs requirements\r\n\r\n* Revert \"fix: add yarl to docs requirements\"\r\n\r\nThis reverts commit e482ba54fc119a16e001cccc0753554c92549c3e.\r\n\r\n* fix: add yarl to nitpick exceptions\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116dfac254a19ac290cef",
    "number": 860,
    "body": "# Description\r\n\r\nFollow up to https://github.com/open-telemetry/opentelemetry-python/pull/2363, not necessary for that change, but removes deprecation warnings.\r\n",
    "head_branch": "codeboten/default-to-noop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[tests] use _NoOpTracer and _NoOpTracerProvider (#860)\n\n* [tests] use _NoOpTracer and _NoOpTracerProvider\r\n\r\n* update"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116dfac254a19ac290cf0",
    "number": 859,
    "body": "Accidently updated version of moto. Reverting change.\r\n\r\nhttps://github.com/open-telemetry/opentelemetry-python-contrib/pull/851/files",
    "head_branch": "lzchen-patch-6",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Revert moto change (#859)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116e0ac254a19ac290cf1",
    "number": 857,
    "body": "# Description\r\n\r\nRemoved `span_name` from docs\r\n\r\nFixes #848\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n\r\n# How Has This Been Tested?\r\n\r\nNot tested\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "custom-span-name",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "aiohttp instrumentation: Remove `span_name` from docs (#857)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116e1ac254a19ac290cf2",
    "number": 854,
    "body": null,
    "head_branch": "lzchen-patch-5-1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116e2ac254a19ac290cf3",
    "number": 853,
    "body": "Fixes #852\r\n",
    "head_branch": "issue_852",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove support for 3.6 (#853)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116e3ac254a19ac290cf4",
    "number": 851,
    "body": "Instrumentation builds are failing for all version of Python due to a botocore test. Strangely enough this has never happened before, seems like the response body is empty? Removing this for now to unblock builds.\r\n\r\n@mariojonke \r\nI'm not too familiar with botocore instrumentation. Where in the instrumentation does it modify the RESPONSE body to add trace header information?",
    "head_branch": "fix-boto",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Unblock builds by removing botocore test (#851)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116e4ac254a19ac290cf5",
    "number": 850,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "lzchen-patch-4",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116e5ac254a19ac290cf6",
    "number": 849,
    "body": "From this comment https://github.com/open-telemetry/opentelemetry-python-contrib/pull/814#issuecomment-988199127\r\n\r\n@nozik \r\n@ItayGibel-helios ",
    "head_branch": "lzchen-patch-3",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Add @nozik as maintainer of kafka-python instrumentation (#849)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116e6ac254a19ac290cf7",
    "number": 847,
    "body": "# Description\r\n\r\nAdding support in partial time limit for celery tasks.\r\nInstrument celery task time limit even if only one limit was set (soft/hard limit).\r\nFixes #846 \r\n\r\n## Type of change\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nRunning unit test\r\n\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - https://github.com/open-telemetry/opentelemetry-python-contrib/pull/847\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "support-partial-timelimit",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Support partial timelimit for celery tasks (#847)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116e7ac254a19ac290cf8",
    "number": 843,
    "body": "# Description\r\n\r\nASGI part for https://github.com/open-telemetry/opentelemetry-python-contrib/issues/445\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- Fix\r\n\r\n# How Has This Been Tested?\r\n\r\nUnit tests\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n-  No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "asgi-conditional-server-spans",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "ASGI: Conditionally create SERVER spans (#843)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116e7ac254a19ac290cf9",
    "number": 841,
    "body": "# Description\r\n\r\nFollow up to #838, the benchmark-action requires you provide the `name` under which all the benchmarks should be uploaded. Because we merged all the benchmarks into one, it was combining all the benchmarks under the same name instead of distinguishing by `matrix.python-version` and `matrix.package`.\r\n\r\ni.e.\r\n\r\n`py7 - sdkextension`\r\n`py8 - sdkextension`\r\n`py7 - propagator`\r\n\r\nwere all going under the same name, with the last `{pyversion} - {package}` overwriting the previous one.\r\n\r\nTo fix this we upload files that use `matrix.python-version` and `matrix.package` as the key for file naming.\r\n\r\nNOTE: This means we will have **MANY more jobs** because there will be a job for every `(matrix.python-version, matrix.package)` permutation.\r\n\r\nQUESTION: Should we just combine everything under the same name (i.e. `OpenTelemetry Python Contrib Benchmarks`) so we can do it all in one job?\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nDidn't have a chance to run on my fork, but this is all on the `gh-pages` branch which should be easy to clean up.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [] Changelogs have been updated~\r\n~- [] Unit tests have been added~\r\n~- [] Documentation has been updated~\r\n",
    "head_branch": "run-benchmarks-per-py-version-and-package-type",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116e8ac254a19ac290cfa",
    "number": 839,
    "body": null,
    "head_branch": "changelog",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix CHANGELOG (#839)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116e9ac254a19ac290cfb",
    "number": 838,
    "body": "# Description\r\n\r\n* When we moved the aws-xray propagator in #720, we needed to update the benchmark step of the workflow\r\n* Additionally, the GH action has evolved since we added benchmarks so we should use the latest version\r\n* Now that different jobs create benchmarks, we added a way to wait for them all to finish and merge them at the end\r\n\r\n~NOTE: Because the test run in parallel, there is a chance there is a race condition between the tests as they fight to lock the `gh-pages` branch and publish the benchmarks. This will cause the test to fail. We should come up with  a way to have all the jobs upload the benchmarks as artifacts and then combine them in a later job.~ I decided to add the separate job in this PR, please let me know what you all think!\r\n\r\nFixes: N/A\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nThe test worked before, this just includes them again now that they are in a new package.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "include-propagator-benchmarks",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge parallel benchmarks + include propagator + latest GH action (#838)\n\n* Include propagator benchmarks + latest GH action\r\n* When we moved the aws-xray propagator in #720, we needed to update the benchmark step of the workflow\r\n* Additionally, the GH action has evolved since we added benchmarks so we should use the latest version\r\n\r\n* Merge all parallel benchmarks after they complete"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116eaac254a19ac290cfc",
    "number": 837,
    "body": "# Description\r\n\r\nCurrently, `opentelemetry-instrumentation-pika` supports only `pika` versions above `1.0.0`. This PR adds support to `pika >= 0.12.0`\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nI've updated `tox.ini` to include tests for the older `pika` versions.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "support_older_pika_versions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Support older pika versions (#837)\n\n* feat: support older pika versions\r\n\r\n* update tox.ini\r\n\r\n* update changelog\r\n\r\n* take version from pika\r\n\r\n* avoid exception when property name changes\r\n\r\n* add callback attr name test"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116ebac254a19ac290cfd",
    "number": 836,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "support_older_pika_versions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116ecac254a19ac290cfe",
    "number": 835,
    "body": "Fixes #833",
    "head_branch": "release/1.8.0-0.27b0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "updating changelogs and version to 1.8.0-0.27b0 (#835)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116edac254a19ac290cff",
    "number": 834,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116eeac254a19ac290d00",
    "number": 832,
    "body": "# Description\r\n\r\nthere may be other instrumented components that wrap an instrumented web framework such as WSGI. In such cases WSGI would already have generated a server span and used the remote span as parent. If Django did the same, traces would not make a lot of sense. Depending on whether a remote span is present in the incoming request's carrier, Django and WSGI spans would be completely different traces or be siblings instead of parent and child.\r\n\r\nFixes # https://github.com/open-telemetry/opentelemetry-python-contrib/issues/448\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- I have tested it locally using a sample app with django and wsgi instrumentation enabled with jaeger exporter.\r\n- I have sent a request to the app and observe on jaeger that there are two span created: WSGI span as SERVER span and Django span as INTERNEL span.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Unit tests have been added\r\n",
    "head_branch": "develop/condition_server_span_django",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Develop/condition server span django (#832)\n\n* Code changes and pytests for https://github.com/open-telemetry/opentelemetry-python-contrib/issues/448\r\n\r\n* removing unnecessary imports\r\n\r\n* removing unnecessary imports\r\n\r\n* adding wsgi.py file to get the wsgi application object\r\n\r\n* Revert \"Updating personal fork from public repo\"\r\n\r\n* Revert \"Updating personal fork from public repo\"\r\n\r\n* Revert \"Updating personal fork from public repo\"\r\n\r\n* Revert \"Updating personal fork from public repo\"\r\n\r\n* Changing the unit test case by removing WSGI instrumentation and make it from generalised\r\n\r\n* removing unnecessary import statements\r\n\r\n* Revert \"Updating personal fork from public repo\"\r\n\r\n* resolving failed builds for lint and generate\r\n\r\n* removing commented code\r\n\r\n* removing blank line\r\n\r\n* removed unused variable resp from test_middleware.py and modified the CHANGELOG.md with PR entry\r\n\r\n* modified the CHANGELOG.md to removed unnecessary entry\r\n\r\n* modified the CHANGELOG.md to add proper PR entry\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116eeac254a19ac290d01",
    "number": 830,
    "body": "# Description\r\n\r\nThe _traced_init wrapper is getting one caller too far up. Example below.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nI put a pdb statement in the Registry constructor, which is called by the Configurator constructor. This is the same code running. The top has otel enabled and the bottom has it disabled.\r\n\r\n```\r\n  /home/ken/.pyenv/versions/3.7.5/envs/webapp/lib/python3.7/site-packages/paste/deploy/loadwsgi.py(152)invoke()\r\n-> return fix_call(context.object, context.global_conf, **context.local_conf)\r\n  /home/ken/.pyenv/versions/3.7.5/envs/webapp/lib/python3.7/site-packages/paste/deploy/util.py(55)fix_call()\r\n-> val = callable(*args, **kw)\r\n  /opt/src/webapp/webapp/__init__.py(44)main()\r\n-> config = Configurator(root_factory=Root, settings=settings)\r\n  /home/ken/.pyenv/versions/3.7.5/envs/webapp/lib/python3.7/site-packages/opentelemetry/instrumentation/pyramid/__init__.py(142)_traced_init()\r\n-> wrapped(*args, **kwargs)\r\n  /home/ken/.pyenv/versions/3.7.5/envs/webapp/lib/python3.7/site-packages/pyramid/config/__init__.py(314)__init__()\r\n-> registry = Registry(self.package_name)\r\n> /home/ken/.pyenv/versions/3.7.5/envs/webapp/lib/python3.7/site-packages/pyramid/registry.py(62)__init__()\r\n-> Components.__init__(self, package_name, *args, **kw)\r\n(Pdb) package_name\r\n'paste.deploy'\r\n\r\n /home/ken/.pyenv/versions/3.7.5/envs/webapp/lib/python3.7/site-packages/paste/deploy/loadwsgi.py(152)invoke()\r\n-> return fix_call(context.object, context.global_conf, **context.local_conf)\r\n  /home/ken/.pyenv/versions/3.7.5/envs/webapp/lib/python3.7/site-packages/paste/deploy/util.py(55)fix_call()\r\n-> val = callable(*args, **kw)\r\n  /opt/src/webapp/webapp/__init__.py(44)main()\r\n-> config = Configurator(root_factory=Root, settings=settings)\r\n  /home/ken/.pyenv/versions/3.7.5/envs/webapp/lib/python3.7/site-packages/pyramid/config/__init__.py(314)__init__()\r\n-> registry = Registry(self.package_name)\r\n> /home/ken/.pyenv/versions/3.7.5/envs/webapp/lib/python3.7/site-packages/pyramid/registry.py(62)__init__()\r\n-> Components.__init__(self, package_name, *args, **kw)\r\n(Pdb) package_name\r\n'webapp'\r\n``` \r\n\r\nAdded unit test to ensure registry name value matches the module of the caller.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [X] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n- [X] Documentation has been updated\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "pyramid: Fix which package is the correct caller in _traced_init. (#830)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116efac254a19ac290d02",
    "number": 829,
    "body": "# Description\r\n\r\nRemove the  `_excluded_urls`, `_tracer_provider` , ` _request_hook` and `_response_hook` attributes from the `_instrumentedFlask` class and instead made them instance variables. Fixes #654\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Run tox tests for the flask instrumentator\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "remove-instrumentator-configuration-from-class",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116f0ac254a19ac290d03",
    "number": 828,
    "body": "# Description\r\n\r\nAdds support to make spans as INTERNAL if a span is already present in current context in flask. \r\n\r\nFixes #446 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\nCurrently flask only makes SERVER spans. With this PR it can make INTERNAL spans in presence of a span in current context.\r\n\r\n# How Has This Been Tested?\r\n\r\nAdded unit test for the changes.\r\nManually tested the scenario.\r\nTo reproduce the issue: Add two instrumentors i.e. FlaskInstrumentor and  OpenTelemetryMiddleware in the same app. This creates two separate traces instead of one.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "conditonal-server-span-flask",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Conditionally create server spans for flask (#828)\n\n* Making span as internal in presence of a span in current context\r\n\r\n* Updating changelog\r\n\r\n* Removing extra print statements\r\n\r\n* Resolving comments: Setting current context as parent in its presence\r\n\r\n* Ignoring pylint check as django.conf.urls.url is removed in django 4.0\r\nDjango release notes: https://docs.djangoproject.com/en/4.0/releases/4.0/\r\n\r\n* Removing changes in django files"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116f1ac254a19ac290d04",
    "number": 826,
    "body": null,
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116f2ac254a19ac290d05",
    "number": 825,
    "body": "# Description\r\n\r\nAdds support for configurable flush timeout to AWS lambda instrumentation. Property name aligned with other implementations (Java).\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- unit test\r\n- previously implemented in the otel-lambda module (before instrumentation was moved here)\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "add-lambda-configurable-flush-timeout",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "lambda instrumentation - support for flush timeout (#825)\n\n* lambda instrumentation - support for flush timeout\r\n\r\n* Update instrumentation/opentelemetry-instrumentation-aws-lambda/tests/test_aws_lambda_instrumentation_manual.py\r\n\r\nCo-authored-by: (Eliseo) Nathaniel Ruiz Nowell <enruizno@uwaterloo.ca>\r\n\r\n* Update instrumentation/opentelemetry-instrumentation-aws-lambda/tests/test_aws_lambda_instrumentation_manual.py\r\n\r\nCo-authored-by: (Eliseo) Nathaniel Ruiz Nowell <enruizno@uwaterloo.ca>\r\n\r\n* fixing lint\r\n\r\n* fixing django lint\r\n\r\nCo-authored-by: (Eliseo) Nathaniel Ruiz Nowell <enruizno@uwaterloo.ca>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116f3ac254a19ac290d06",
    "number": 823,
    "body": "# Description\r\n\r\nThis handles None statuses passed to the http_status_to_status_code utility function. This treats None statuses as `StatusCode.UNSET`.\r\n\r\nFixes #820 \r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nThis adds new unit tests.\r\n- [x] None status codes are interpreted as StatusCode.UNSET.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "urllib-none-status",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Handle null statuses in http_status_to_status_code (#823)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116f4ac254a19ac290d07",
    "number": 822,
    "body": null,
    "head_branch": "develop/conditional-server-span-flask",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116f5ac254a19ac290d08",
    "number": 819,
    "body": "# Description\r\n\r\nCelery worker Pipeline Service Map (Grafana Node Map)does not reflect the real nodes in the system.\r\nWhen we have a Celery worker \"A\" which publishes a Task for Celery worker \"B\" the Service Map will not show the Service \"B\" and it would all be contained under a node \"celery\"\r\n\r\nCode change:\r\n\r\nIn function `_trace_prerun`, just change the `SpanKind=CONSUMER` to `SpanKind=SERVER`\r\nFixes # (issue)\r\nIt also pertained to issue #609 \r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Test A\r\nExisting Test at\r\n`instrumentation/opentelemetry-instrumentation-celery/tests/test_tasks.py`\r\nwas changed to assert the `SpanKind=SERVER`\r\n\r\n# Does This PR Require a Core Repo Change?\r\n- [x] No.\r\n\r\n# Checklist:\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "celey-server-kind",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116f6ac254a19ac290d09",
    "number": 817,
    "body": "# Description\r\n\r\nAdds a `traceresponse` header for ASGI apps just like the WSGI version in #436.\r\n\r\nFixes #803\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nYes. Added unit tests to assert whether or not the `traceresponse` header is included.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "asgi-traceresponse",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add traceresponse headers for asgi apps (FastAPI, Starlette) (#817)\n\nThis asgi version is modeled after the original wsgi version in #436 and corresponds to the SERVER span. Also cleans up some of the existing ASGI functionality to reduce complexity and make future contributions more straightforward."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116f6ac254a19ac290d0a",
    "number": 816,
    "body": "Zoom links are randomized and in the calendar. Removed the existing link.\r\n\r\nThis is a docs-only change.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove direct Zoom link (#816)\n\nZoom links are randomized and in the calendar. Removed the existing link."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116f7ac254a19ac290d0b",
    "number": 815,
    "body": "# Description\r\n\r\nAdd an option to disable intern trace of the asgi instrumentation\r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python-contrib/issues/831\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix/disable_asgi_intern_trace",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116f8ac254a19ac290d0c",
    "number": 814,
    "body": "# Description\r\n\r\nadded kafka-python module instrumentation\r\n\r\n\r\n## Type of change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nAdded the following unit-tests:\r\n\r\n- [x] instrumentation/opentelemetry-instrumentation-kafka-python/tests/test_instrumentation.py\r\n- [x] instrumentation/opentelemetry-instrumentation-kafka-python/tests/test_utils.py\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "kafka",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "kafka-python instrumentation (#814)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116f9ac254a19ac290d0d",
    "number": 812,
    "body": "# Description\r\n\r\nNow tornado-instrumentaion support only Tornado version more than 6.0, but in instrumentation code not anything specifics for Tornado 6 there are. There is [release note](https://www.tornadoweb.org/en/stable/releases/v6.0.0.html#backwards-incompatible-changes) for Tornado 6.0, and noone backwards-incompatible changes using in actual implementation of instumentation. I've tested Tornado instrumentation for last 5s version (5.1.1) in my highload project for this version and it works for me. Alternative way, using opentracing instead of opentelemetry, is not quite good, because a lot of part of microserfices may using opentelemetry for Java, Go and different languages. For more complecevity good reason for using opentelemetry for old tornado version. \r\n\r\n## Type of change\r\n\r\n- [X] New feature (non-breaking change which adds functionality)\r\n- [X] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nRun current tests for Tornado 5.1.1 on Python 3.8.10. Start up on highload service (8000 rps) on pythonv 3.8.10. Check generated span and send throgh OTL. As a result - see span on Jaeger.\r\n\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [X] Changelogs have been updated\r\n- [ ] Unit tests have been added. Not reasons for add new tests\r\n- [X] Documentation has been updated\r\n",
    "head_branch": "tornado",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add support instrumentation for Tornado 5.1.1 (#812)\n\n* Add support instrumentation for Tornado 5.1.1\r\n\r\n* update CHANGELOG.md"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116faac254a19ac290d0e",
    "number": 809,
    "body": "\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR:  https://github.com/open-telemetry/opentelemetry-python/pull/2274\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "release/1.7.1-0.26b1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "updating changelogs and version to 1.7.1-0.26b1 (#809)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116fbac254a19ac290d0f",
    "number": 807,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: https://github.com/open-telemetry/opentelemetry-python/pull/2273\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "update-opentelemetry-tests-package-name",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Rename opentelemetry-test to opentelemetry-test-utils (#807)\n\n* updating changelogs and version to 1.7.0-0.26b0\r\n\r\n* Rename opentelemetry-test to opentelemetry-test-utils"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116fcac254a19ac290d10",
    "number": 806,
    "body": "# Description\r\n\r\nUsing the `aiohttp-client` instrument I would like to be able to add extra context from the http request object to the current span. Currently the `response_hook` callable does not support coroutines but this is required in order to access certain http response data, e.g. `await response.text()`.\r\n\r\n## Type of change\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Unit Test\r\n- [x] Manual Test\r\n\r\nManual test can be achieved using the following setup:\r\n```python\r\nasync def response_hook(span, params):\r\n     content = await params.response.text()\r\n     span.set_attribute(\"http.content\", content)\r\n\r\ntrace_config = aiohttp_client.create_trace_config(response_hook=response_hook)\r\nurl = 'https://jsonplaceholder.typicode.com/todos/1'\r\n\r\nasync with aiohttp.ClientSession(trace_configs=[trace_config]) as session:\r\n   await session.request(method=\"GET\", url=url)\r\n```\r\n\r\nI have added a new unit test but having trouble running the test suite locally:\r\n\r\n```sh\r\n> tox -e test-instrumentation-aiohttp-client\r\n\r\ntest-instrumentation-aiohttp-client run-test-pre: commands[3] | pip install 'opentelemetry-test[test] @ git+https://github.com/open-telemetry/opentelemetry-python.git@main#egg=opentelemetry-test&subdirectory=tests/opentelemetry-tests'\r\nCollecting opentelemetry-test[test]@ git+https://github.com/open-telemetry/opentelemetry-python.git@main#egg=opentelemetry-test&subdirectory=tests/opentelemetry-tests\r\n  Cloning https://github.com/open-telemetry/opentelemetry-python.git (to revision main) to /private/var/folders/c8/gp1k0qt51_v3yxbtmt2vk33m0000gn/T/pip-install-78r42ydg/opentelemetry-test_73ed373c76fe4dfaa4bcc3166a343246\r\n  Running command git clone -q https://github.com/open-telemetry/opentelemetry-python.git /private/var/folders/c8/gp1k0qt51_v3yxbtmt2vk33m0000gn/T/pip-install-78r42ydg/opentelemetry-test_73ed373c76fe4dfaa4bcc3166a343246\r\n  Resolved https://github.com/open-telemetry/opentelemetry-python.git to commit 9ed60ea600cd0ffda6b614fc30b62117a84aeea7\r\nERROR: File \"setup.py\" not found for legacy project opentelemetry-test[test]@ git+https://github.com/open-telemetry/opentelemetry-python.git@main#egg=opentelemetry-test&subdirectory=tests/opentelemetry-tests from git+https://github.com/open-telemetry/opentelemetry-python.git@main#egg=opentelemetry-test&subdirectory=tests/opentelemetry-tests.\r\nWARNING: You are using pip version 21.2.4; however, version 21.3.1 is available.\r\nYou should consider upgrading via the '/Users/me/Projects/opentelemetry-python-contrib/.tox/test-instrumentation-aiohttp-client/bin/python -m pip install --upgrade pip' command.\r\nERROR: InvocationError for command /Users/me/Projects/opentelemetry-python-contrib/.tox/test-instrumentation-aiohttp-client/bin/pip install 'opentelemetry-test[test] @ git+https://github.com/open-telemetry/opentelemetry-python.git@main#egg=opentelemetry-test&subdirectory=tests/opentelemetry-tests' (exited with code 1)\r\n```\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "aiohttp-async-response-hook",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116fdac254a19ac290d11",
    "number": 805,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Release prep\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Existing tests\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] Yes. - Link to PR: https://github.com/open-telemetry/opentelemetry-python/pull/2272\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "release/1.7.0-0.26b0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "updating changelogs and version to 1.7.0-0.26b0 (#805)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116feac254a19ac290d12",
    "number": 804,
    "body": "# Description\r\n\r\nFixed sub-directory name for opentelemetry-test package.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] Yes. - Link to PR: https://github.com/open-telemetry/opentelemetry-python/pull/2269\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "update-opentelemetry-tests-package-location-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixed opentelemetry-test package subdir name (#804)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116ffac254a19ac290d13",
    "number": 802,
    "body": "# Description\r\n\r\nUpgraded black to `21.10b0`\r\n\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "upgrade-black",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Upgrade black (#802)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662116ffac254a19ac290d14",
    "number": 801,
    "body": "# Description\r\nUpdate directory location for opentelemetry-tests package\r\n\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] Yes. - Link to PR: https://github.com/open-telemetry/opentelemetry-python/pull/2269\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "update-opentelemetry-tests-package-location",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update core opentelemetry-tests subdirectory (#801)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211700ac254a19ac290d15",
    "number": 799,
    "body": "# Description\r\n\r\nThis is not required anymore after merging https://github.com/open-telemetry/opentelemetry-python/pull/2242\r\n\r\nContext: https://github.com/open-telemetry/opentelemetry-python/issues/2266\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Existing tests\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "remove-celery-special-case",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove special support for celery from sitecustomize (#799)\n\nThis is not required anymore after merging https://github.com/open-telemetry/opentelemetry-python/pull/2242"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211701ac254a19ac290d16",
    "number": 797,
    "body": "Fixes #796",
    "head_branch": "issue_796",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use augmented assignment statements (#797)\n\nFixes #796"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211702ac254a19ac290d17",
    "number": 794,
    "body": "Fixes #787",
    "head_branch": "issue_787",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use __name__ instead of __file__ (#794)\n\nFixes #787"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211703ac254a19ac290d18",
    "number": 793,
    "body": "# Description\r\n\r\nAdding hooks to pymongo instrumentation\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nAdded the hook functionality to existing pymongo instrumentation tests\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "pymongo-hooks",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "pymongo instrumentation hooks (#793)\n\n* pymongo instrumentation hooks\r\n\r\n* update PR number"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211704ac254a19ac290d19",
    "number": 792,
    "body": "# Description\r\n\r\n\r\n\r\nFixes #791\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Existing tests\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "pymysql-dep-update",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Support PyMySQL 1.x series (#792)\n\nFixes #791"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211705ac254a19ac290d1a",
    "number": 790,
    "body": "# Description\r\n\r\nUse `OTEL_PYTHON_EXCLUDED_URLS` environment variable as a fallback of `OTEL_PYTHON_{instrumentation}_EXCLUDED_URLS`.\r\n\r\nFixes #789\r\n\r\n## Type of change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] `tox -e test-util-http`\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "add-OTEL_PYTHON_EXCLUDED_URLS",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add support for generic OTEL_PYTHON_EXCLUDED_URLS variable (#790)\n\n* Add support for generic OTEL_PYTHON_EXCLUDED_URLS variable\r\n\r\nUse `OTEL_PYTHON_EXCLUDED_URLS` environment variable as a fallback of\r\n`OTEL_PYTHON_{instrumentation}_EXCLUDED_URLS`.\r\n\r\n* Only use generic variable when instrumentation-specific is not set\r\n\r\n* Change wording on docs\r\n\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211706ac254a19ac290d1b",
    "number": 788,
    "body": "# Description\r\n\r\nAllows for a consistent naming structure for logger names.\r\n\r\nFixes #787\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211707ac254a19ac290d1c",
    "number": 783,
    "body": "Fixes https://github.com/open-telemetry/opentelemetry-python-contrib/issues/773 in conjunction with https://github.com/open-telemetry/opentelemetry-python/pull/2243",
    "head_branch": "version",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Pass in auto-instrumentation version to configurator (#783)\n\n* version\r\n\r\n* Update CHANGELOG.md\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211707ac254a19ac290d1d",
    "number": 782,
    "body": "Fixes #771 ",
    "head_branch": "rich_parent_fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix a logic bug on parentless spans (#782)\n\n* Fix a logic bug on parentless spans\r\n\r\n* Add a test\r\n\r\n* Simplify logic\r\n\r\n* Add changelog entry\r\n\r\n* Update tox configuration\r\n\r\n* Rename the fixtures to keep pylint happy"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211708ac254a19ac290d1e",
    "number": 781,
    "body": "# Description\r\n\r\nThe `setuptools` package is not part of the stdlib, but often available in the system environment (it is a buildtime requirement).\r\n\r\n`pkg_resources` (a package provided by `setuptools`) is used as a runtime requirement in `opentelemetry-instrumentation`. Explicitly listing `setuptools` as a requirement protects instrumentation from breaking with import errors in cases where `setuptools` is not available system-wide.\r\n\r\nFor example:\r\n\r\n* A multi-stage Docker build where the final image does not contain buildtime requirements.\r\n* A build system that packages the runtime dependencies into a single binary.\r\n\r\nThis commit pins `setuptools >= 16.0` because that is the first release that included all 5 imports instrumentation currently relies on.\r\n\r\nFixes #778\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nTo verify the correct pin for `setuptools` I used `git bisect`, checking for the first version that included all imports used by `opentelemetry-instrumentation`. Further details can be found in the linked issue.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated",
    "head_branch": "778/instrumentation-setuptools-requirement",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add setuptools instrumentation install requirement (#781)\n\nThe `setuptools` package is not part of the stdlib, but often available\r\nin the system environment (it is a buildtime requirement).\r\n\r\n`pkg_resources` (a package provided by `setuptools`) is used as\r\na runtime requirement in `opentelemetry-instrumentation`. Explicitly\r\nlisting `setuptools` as a requirement protects instrumentation from\r\nbreaking with import errors in cases where `setuptools` is not available\r\nsystem-wide.\r\n\r\nFor example:\r\n\r\n* A multi-stage Docker build where the final image does not contain\r\nbuildtime requirements.\r\n* A build system that packages the runtime dependencies into a single\r\nbinary.\r\n\r\nThis commit pins `setuptools >= 16.0` because that is the first release\r\nthat included all 5 imports instrumentation currently relies on.\r\n\r\nCo-authored-by: Matt Oberle <mattoberle@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211709ac254a19ac290d1f",
    "number": 780,
    "body": "# Description\r\n\r\n* Fix support for Django `1.10`/`1.11`, by allowing `settings.MIDDLEWARE_CLASSES`.\r\n* Add Tox environments for every Django major version, including 4.0 beta.\r\n* Fix tests for new Tox environments to pass.\r\n\r\nRelevant context:\r\n\r\n* In Django 1.x, usage of `settings.MIDDLEWARE_CLASSES` is detected by running `settings.MIDDLEWARE is None`: https://github.com/django/django/blob/58f02c498b659a906e9c30d946bd89bedc4717e5/django/core/handlers/base.py#L48\r\n* HTTP route in `ResolverMatch` object is only available since Django 2.2: https://github.com/django/django/pull/10657\r\n* Django class `HttpResponseBase` works as a mapping object, so avoiding accessing its internal headers object simplifies support across Django versions.\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] `tox -e test-instrumentation-django{1,2,3,4}`\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix-django-legacy-support",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "`django`: Fix instrumentation and tests for all Django major versions (#780)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621170aac254a19ac290d20",
    "number": 777,
    "body": "# Description\r\n\r\nFollow up to #739. In this PR, we add the Python code to actually implement instrumentation.\r\n\r\nThis PR adds Instrumentation for Lambda functions on the AWS Lambda service. Specifically, when you use AWS Lambda to call your `def lambda_handler(lambda_event, lambda_context)` on AWS, you can use this instrumentation package and its scripts to instrument that invocation with OpenTelemetry!\r\n\r\nPlease read the description in #739 to learn more.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nThe unit tests cover the **manual instrumentation** scenarios of \r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] Yes. Link to PR: https://github.com/open-telemetry/opentelemetry-python/pull/2197\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "fill-in-aws_lambda-instrumentation-files",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add instrumentation for AWS Lambda Service - Implementation (Part 2/2) (#777)\n\n* Add instrumentation for AWS Lambda Service - Implementation\r\n\r\n* Lambda is CONSUMER SQS trace if 'Records' key in Lambda event\r\n\r\n* More robust check of SQS by indexing and catching\r\n\r\n* Explicitly catch errors we expect when determinig if SQS triggered Lambda"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621170bac254a19ac290d21",
    "number": 776,
    "body": "From [spec](https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/semantic_conventions/http.md#status)\r\n\r\n`For HTTP status codes in the 4xx range span status MUST be left unset in case of SpanKind.SERVER`",
    "head_branch": "server",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Don't set STATUS on SpanKind SERVER for 4XX status (#776)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621170cac254a19ac290d22",
    "number": 774,
    "body": "# Description\r\n\r\nRemove unwanted support for Python versions <3.6. This integration mistakenly lists Python 3.4 support, because it was merged in https://github.com/open-telemetry/opentelemetry-python/pull/1039, after the merge of https://github.com/open-telemetry/opentelemetry-python/pull/1099, so the latter didn't consider `falcon`.\r\n\r\nPython 3.4 is broken nevertheless, as this integration already includes f-strings and other `opentelemetry` dependencies, which require Python 3.6.\r\n\r\nFixes #772.\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "falcon-drop-py34",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "`falcon`: Drop support for Python 3.4 (#774)\n\nRemove unwanted support for Python versions <3.6.\r\nThis integration mistakenly lists Python 3.4 support, because it was\r\nmerged in\r\nhttps://github.com/open-telemetry/opentelemetry-python/pull/1039,\r\nafter the merge of\r\nhttps://github.com/open-telemetry/opentelemetry-python/pull/1099, so the\r\nlatter didn't consider `falcon`.\r\n\r\nPython 3.4 is broken nevertheless, as this integration already includes\r\nf-strings and other `opentelemetry` dependencies, which require Python 3.6.\r\n\r\nFixes #772."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621170dac254a19ac290d23",
    "number": 770,
    "body": "# Description\r\n\r\nThis diff is the result of applying the following command to the project:\r\n\r\n```shell\r\nfind . -type f -name \"*.py\" -exec pyupgrade --py36-plus '{}' +\r\n```\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Existing CI test coverage.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "pyupgrade-py3-run",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Refactor code using pyupgrade for Python 3.6 (#770)\n\n* Refactor code using pyupgrade for Python 3.6\r\n\r\nThis diff is the result of applying the following command to the\r\nproject:\r\n\r\n```shell\r\nfind . -type f -name \"*.py\" -exec pyupgrade --py36-plus '{}' +\r\n```\r\n\r\n* Simplify yield from"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621170eac254a19ac290d24",
    "number": 767,
    "body": "# Description\r\n\r\nFor ASGI requests, we must use `request.scope` instead of `request.META`. This is because `ASGIGetter` retrieves the `headers` key from the carrier [0], which is only present in `request.scope`.\r\n\r\n[0] https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/instrumentation/opentelemetry-instrumentation-asgi/src/opentelemetry/instrumentation/asgi/__init__.py#L133\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Tested Django ASGI application along with the `aws` propagator and requests including header: `X-Amzn-Trace-Id: Root=1-5759e988-bd862e3fe1be46a994272793; Parent=53995c3f42cd8ad8; Sampled=1`\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated",
    "head_branch": "django-fix-carrier-extract",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "django: Fix carrier usage on ASGI requests (#767)\n\n* django: Fix carrier usage on ASGI requests\r\n\r\nFor ASGI requests, we must use `request.scope` instead of\r\n`request.META`. This is because `ASGIGetter` retrieves the `headers` key\r\nfrom the carrier [0], which is only present in `request.scope`.\r\n\r\n[0] https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/instrumentation/opentelemetry-instrumentation-asgi/src/opentelemetry/instrumentation/asgi/__init__.py#L133\r\n\r\n* Add unit tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621170fac254a19ac290d25",
    "number": 766,
    "body": "Fixing the context propagation to consumer callback.\r\n\r\n# Description\r\nThe bug was fixed by attaching and detaching the context before executing the user callback.\r\nHook location was changed to hook the user callback and not the async enqueuing of messages.\r\n\r\nFixes # (issue)\r\nFixing context propagation to other instrumentors executed from inside the basicConsume callback.\r\n\r\n## Type of change\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n- [x] Creating rabbitMQ consumer which receives a message and performs requests.get() using the Requests instrumntor, verifying the traceID for both the requests span and the pika receive is the same.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n- [x] No.\r\n\r\n# Checklist:\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "bugix/pika-basic-consume-context-propegation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Bugfix: Pika basicConsume context propagation (#766)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211710ac254a19ac290d26",
    "number": 765,
    "body": "# Description\r\n\r\nopentelemetry-instrumentaiton-asgi does not contain an instrumentor for\r\nasgiref. Instead, it implements an ASGI middleware that other\r\ninstrumentors import and use. As such, other instrumentors can take a\r\ndependency on this package without asgiref being installed locally. This\r\ncommit adds `asgiref` as a dependency to the\r\nopentelemetry-instrumentation-asgi package so the middleware can\r\nfunction properly when used by another instrumentation.\r\n\r\nFixes #764 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Existing tests\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix-asgi-instrumentation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added asgiref depedency to opentelemetry-instrumentation-asgi (#765)\n\nopentelemetry-instrumentaiton-asgi does not contain an instrumentor for\r\nasgiref. Instead, it implements an ASGI middleware that other\r\ninstrumentors import and use. As such, other instrumentors can take a\r\ndependency on this package without asgiref being installed locally. This\r\ncommit adds `asgiref` as a dependency to the\r\nopentelemetry-instrumentation-asgi package so the middleware can\r\nfunction properly when used by another instrumentation."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211710ac254a19ac290d27",
    "number": 763,
    "body": "# Description\r\n\r\nAdding consume_hook and produce_hook to Pika instrumentor\r\n\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] test_decorate_callback_with_hook\r\n- [x] test_decorate_basic_publish_with_hook\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "pika_hooks",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Pika - add publish_hook and consume_hook (#763)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211711ac254a19ac290d28",
    "number": 762,
    "body": "\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New release\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Existing tests\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] Yes. - Link to PR: https://github.com/open-telemetry/opentelemetry-python/pull/2230\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "release/1.6.2-0.25b2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Prepare release v1.6.2 and 0.25b2 (#762)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211712ac254a19ac290d29",
    "number": 761,
    "body": "# Description\r\n\r\nThis PR addresses an issue that breaks `opentelemetry-instrumentation-sqlalchemy` when connecting to Postgres via Unix socket.\r\n\r\nThe following bit of replaced code contained a type inconsistency:\r\n\r\n```py\r\nattrs[SpanAttributes.NET_PEER_PORT] = int(data.get(\"port\"))\r\n# data.get -> Optional[str]\r\n# int(None)\r\n```\r\n\r\nWhen using postgresql via unix socket `dsn` looks something like this:\r\n\r\n```py\r\n'user=postgres host=/tmp/socket dbname=postgres'\r\n```\r\n\r\nThe `parse_dsn` function returns this:\r\n\r\n```py\r\n{'user': 'postgres', 'dbname': 'postgres', 'host': '/tmp/socket'}\r\n```\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nI applied the patch locally and then did this:\r\n\r\n1. Set a SQLAlchemy URL like this: `postgresql+psycopg2://{user}:@/{dbname}?host={socket_path}`.\r\n2. Apply the instrumentation to the engine.\r\n3. Execute a query through the ORM and commit.\r\n\r\n> Note: I'm happy to write a test for this as well, but there aren't currently tests against specific engines or private functions. I wasn't sure if that was by design.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "bugfix/sqlalchemy/unix-sockets",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix sqlalchemy for postgres Unix sockets (#761)\n\n* Fix sqlalchemy for postgres unix sockets\r\n\r\nThe following bit of replaced code contained a type inconsistency:\r\n\r\n```py\r\nattrs[SpanAttributes.NET_PEER_PORT] = int(data.get(\"port\"))\r\n```\r\n\r\n`data.get` returns `Optional[str]` but `int(None)` throws a `TypeError`.\r\n\r\nWhen using postgresql via unix socket `dsn` looks something like this:\r\n\r\n```py\r\n'user=postgres host=/tmp/socket dbname=postgres'\r\n```\r\n\r\nThe `parse_dsn` function returns this:\r\n\r\n```py\r\n{'user': 'postgres', 'dbname': 'postgres', 'host': '/tmp/socket'}\r\n```\r\n\r\n* Update CHANGELOG\r\n\r\n* Conditionally set net.transport for psql tcp/unix\r\n\r\n* Use .value properties of enums\r\n\r\n* Improve postgresql attribute detection from cursor\r\n\r\n* Fix formatting\r\n\r\nCo-authored-by: Matt Oberle <mattoberle@users.noreply.github.com>\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211713ac254a19ac290d2a",
    "number": 760,
    "body": "# Description\r\n\r\nAdds an extension for AWS lambda to add additional attributes on `Invoke` operations. The added attributes follow the semantic conventions for [outgoing FaaS invocations](https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/semantic_conventions/faas.md#outgoing-invocations).\r\nMoves also the existing context propagation / span injection for lambda invocations into the extension.\r\n\r\n## Type of change\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nAdds additional tests\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n\r\n",
    "head_branch": "botocore-lambda",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "botocore: Add Lambda extension (#760)\n\n* botocore: Add Lambda extension\r\n\r\n* add extension to add additional attributes for lambda invoke\r\n  calls\r\n* move lambda specific tests to separate module\r\n\r\n* changelog\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>\r\nCo-authored-by: Owais Lone <owais@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211714ac254a19ac290d2b",
    "number": 759,
    "body": "# Description\r\n\r\nThe bugfix fixes the following flow:\r\n```python\r\nPikaInstrumentor().instrument()\r\nconnection = pika.BlockingConnection(parameters)\r\nchannel = connection.channel()\r\nchannel.basic_consume(queue='helloworld', on_message_callback=callback, auto_ack=True)\r\n```\r\nIn this flow, the newly added callback is not decorated because `basic_consume` was not wrapped.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\nUsing the provided snippet and a ConsoleExporter\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "bugfix/instrument_basic_publish_in_pika",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Bugfix/instrument basic publish in pika (#759)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211715ac254a19ac290d2c",
    "number": 758,
    "body": null,
    "head_branch": "pika_hooks",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211716ac254a19ac290d2d",
    "number": 757,
    "body": "## Description\r\n\r\nGlobal generate check was removed from CI workflow and a specific check was added to generate bootstrap script in this commit:\r\nhttps://github.com/open-telemetry/opentelemetry-python-contrib/commit/d2984f5242ed2250ad1c11b6164e2e8e11e2a804#diff-faff1af3d8ff408964a57b2e475f69a6b7c7b71c9978cccc8f471798caac2c88L112-L114\r\nhttps://github.com/open-telemetry/opentelemetry-python-contrib/commit/d2984f5242ed2250ad1c11b6164e2e8e11e2a804#diff-0b911e478cf36c1398ccb7c6b5a371bc2fb5b7a962f897ae28acd3027fe1cecdR109-R120\r\n\r\nHowever, it prevented the checks to actually run for code generation scripts other than genertate_instrumentation_bootstrap.py. At this point we had generate check only working for generate_instrumentation_bootstrap.py in CI.\r\n\r\nNext change was migration of opentelemetry-instrumentation to contrib which included removal of the bootstap specific check here: https://github.com/open-telemetry/opentelemetry-python-contrib/commit/7cf3cb42cf42c3cb9781ed219a8edff0f57302e4#diff-0b911e478cf36c1398ccb7c6b5a371bc2fb5b7a962f897ae28acd3027fe1cecdL109-L120\r\n\r\nSince that commit, we haven't had generate checks run in CI for any script.\r\n\r\nThis PR adds the generate checks back. \r\n\r\nAs a direct result of this, our latest release is somewhat broken. Installing `opentelemetry-instrumentation==0.25b1` install a bootstrap command which forces a downgrade to `0.25b0` of all instrumentation packages.\r\n\r\n## Effect\r\n\r\nCheck is working as expected now:\r\n<img width=\"933\" alt=\"image\" src=\"https://user-images.githubusercontent.com/46186/137867138-09ad1338-a4f8-41e7-94e9-23f0f0c7c939.png\">\r\n\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Dev/tooling enhancement\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "update-bootstrap-gen",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Re-enable CI generate check and generate bootstrap_gen (#757)\n\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211717ac254a19ac290d2e",
    "number": 755,
    "body": "The entry point was renamed to remove the `_span` suffix but the values configured in the distro were not.",
    "head_branch": "codeboten/fix-default",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "default value is invalid, was renamed (#755)\n\n* default value is invalid, was renamed\r\n\r\n* Update CHANGELOG.md\r\n\r\nCo-authored-by: Owais Lone <owais@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211717ac254a19ac290d2f",
    "number": 754,
    "body": "Updates instrumentation docstrings to include section on configuration. Most are related to `exclude_url` functionality and `request/response` hooks. We want all of our documentation to exist in one place (readthedocs).",
    "head_branch": "docs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Consolidate instrumentation documentation in docstrings (#754)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211718ac254a19ac290d30",
    "number": 753,
    "body": "# Description\r\n\r\nThis PR is part of continuous updates and releases to the packages which makes OpenTelemetry compatible with AWS.\r\n\r\nIn this release:\r\n\r\n`opentelemetry-sdk-extension-aws==2.0.1`\r\n* Removed an unnecessary dependency on `opentelemetry-test`\r\n\r\n`opentelemetry-propagator-aws==2.0.1`\r\n* Removed an unnecessary dependency on `opentelemetry-test`\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nN/A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "release-aws-packages-patch",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Release AWS Python SDK Extension as 2.0.1 and AWS Propagator as 1.0.1 (#753)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211719ac254a19ac290d31",
    "number": 752,
    "body": "# Description\r\n\r\nWe just found out that the `opentelemetry-sdk-extension-aws` and `opentelemetry-propagator-aws-xray` packages do not need to depend on the `opentelemetry-test` package.\r\n\r\nWe remove their dependencies in this PR.\r\n\r\nSince it is _removing_ a dependency and not _adding_ one, we can release these packages as _patch` updates.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- Made a new virtual environment\r\n- Cloned the contrib repo\r\n- Removed the dependencies on `opentelemetry-test`\r\n- Ran both `tox -e test-sdkextensionaws` and `tox -e test-propagator-aws`\r\n- Saw that they both ran successfully\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n~- [] Unit tests have been added~\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "remove-unnecessary-deps-on-test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove unnecessary deps on test pkgs (#752)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621171aac254a19ac290d32",
    "number": 751,
    "body": null,
    "head_branch": "release/1.6.1-0.25b1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "updating changelogs and version to 1.6.1-0.25b1 (#751)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621171bac254a19ac290d33",
    "number": 750,
    "body": "# Description\r\n\r\nA while ago I said we could not check the request ID on S3 tests [because moto did not have this feature](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/150/files?authenticity_token=Z%2BviMS6g0n3M5x%2BSwN97WQ%2FrS7OIjIXqV5yB6pA%2BO8xfyHtSvPeb75k1PGoNFPNiJd34JDcmCSkOEouKDO4ykQ%3D%3D&file-filters%5B%5D=.py#r519485813) for its mock of the AWS service.\r\n\r\nRecently I noticed that `moto` [fixed this](https://github.com/spulec/moto/pull/3836) as of their `2.2.6` release so I updated it to that version and added the check so there is consistency with the other tests.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nUnit tests are still passing with this restriction on a _test_ dependency.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "check-requestid-on-s3-call",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Check Request ID format on S3 call (#750)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621171cac254a19ac290d34",
    "number": 747,
    "body": "# Description\r\n\r\nSince the change in `opentelemetry-instrument` to understand environment variables [0], the options documented in this README file are outdated.\r\n\r\n[0] https://github.com/open-telemetry/opentelemetry-python/pull/1969\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] `opentelemetry-instrument --help`\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "opentelemetry-instrument-fix-documented-options",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "opentelemetry-instrument: Fix documented options (#747)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621171dac254a19ac290d35",
    "number": 746,
    "body": "## Before\r\n<img width=\"704\" alt=\"image\" src=\"https://user-images.githubusercontent.com/46186/137534729-bdb075f9-877e-4eb5-a150-e1bc614f51ca.png\">\r\n\r\n\r\n## After\r\n\r\n<img width=\"697\" alt=\"image\" src=\"https://user-images.githubusercontent.com/46186/137534789-0f16a02b-d7fe-46cd-ae89-e06ff1bad6f9.png\">\r\n\r\n",
    "head_branch": "fix-changelog",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixed changelog (#746)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621171eac254a19ac290d36",
    "number": 745,
    "body": "# Description\r\n\r\nFixes #744\r\n\r\nThis is a temporary hotfix for the issue linked above. We'll need to\r\nfigure out a proper fix later.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix-opentelemetry-util-http",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove HTTPClientInstrumentor instrumentation entry point (#745)\n\nFixes #744\r\n\r\nThis is a temporary hotfix for the issue linked above. We'll need to\r\nfigure out a proper fix later."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621171fac254a19ac290d37",
    "number": 743,
    "body": "# Description\r\n\r\nIn #598 we modified the release skip to not release packages that have hit `1.0.0` because they should be released using a pushed `tag`.\r\n\r\nAfter the latest release however, `1.0.0`+ packages [were released together](https://github.com/open-telemetry/opentelemetry-python-contrib/runs/3888307687?check_suite_focus=true#step:7:419) with the beta packages when using this script. They should not have been. The problem was that we were using Double Square brackets `[[` to do a \"bash\" test but this is not available on GitHub's shell environment and so [the check was being ignored](https://github.com/open-telemetry/opentelemetry-python-contrib/runs/3888307687?check_suite_focus=true#step:4:2450)\r\n\r\nThis PR fixes this by using a test method for the regex match that should [work for any POSIX compliant shell](https://stackoverflow.com/a/21112809/7460739).\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- It works locally when I run `./scripts/build.sh` because I don't see the `1.0.0`+ components.\r\n- It also works on GitHub runners because I pushed the change to my fork and I can confirm [that the 1.0.0 packages get skipped](https://github.com/NathanielRN/opentelemetry-python-contrib-1/runs/3900444665?check_suite_focus=true#step:4:2418)\r\n- In that same workflow, you can see that no wheel is generated for the `1.0.0` packages.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "fix-build-script-to-not-release-stable-pkgs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix build script to not release stable pkgs (#743)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211720ac254a19ac290d38",
    "number": 742,
    "body": "Follow up to https://github.com/open-telemetry/opentelemetry-python/pull/2207",
    "head_branch": "codeboten/add-py3.10",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "adding CI testing for python 3.10 (#742)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211721ac254a19ac290d39",
    "number": 741,
    "body": "Some setup.cfg files were missing the 3.9 classifier, this PR fixes that.",
    "head_branch": "codeboten/missing-classifier",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "adding missing python 3.9 classifier (#741)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211721ac254a19ac290d3a",
    "number": 740,
    "body": "# Description\r\n\r\nThe pika instrumentation injects the context into the `properties.headers` of the connection. If the properties are not provided, it generates a new `BasicProperties` object, which by default sets headers to `None` instead of an empty dict - which results in a failure to inject the context into the headers.\r\nThe fix was to set the `headers={}` by default when creating the `BasicProperties` object.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\nA pika client that creates a pika connection and executes `basic_publish` without properties.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n",
    "head_branch": "bugfix/set_default_headers_for_properties_in_pika",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Bugfix/set default headers for properties in pika (#740)\n\n* Bugfix the porperties.headers in the pika instrumentation, and write tests that ensure it\r\n\r\n* Ensure that BasicProperties is called with headers={}\r\n\r\n* Update CHANGELOG.md\r\n\r\n* Update the span kind from SERVER/CLIENT to PRODUCER/CONSUMER\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211722ac254a19ac290d3b",
    "number": 739,
    "body": "# Description\r\n\r\nIn this PR, we ONLY add package metadata files.\r\n\r\nThis PR adds Instrumentation for Lambda functions on the AWS Lambda service. Specifically, when you use AWS Lambda to call your `def lambda_handler(lambda_event, lambda_context)` on AWS, you can use this instrumentation package and its scripts to instrument that invocation with OpenTelemetry!\r\n\r\nOpenTelemetry already hosts this code on [the OpenTelemetry Lambda repository](https://github.com/open-telemetry/opentelemetry-lambda/tree/972d81e7487d6588d847c79344d48ac924f1517a/python/src), but it has a `TODO` to migrate it here, to the OpenTelemetry Python Contrib repository.\r\n\r\nInstrumenting AWS Lambda is [defined in the OpenTelemetry specifications](https://github.com/open-telemetry/opentelemetry-specification/blob/90b6df717d1b3b686cd64042d40d0440c7c54d81/specification/trace/semantic_conventions/instrumentation/aws-lambda.md#instrumenting-aws-lambda) and \"AWS Lambda Instrumentations\" also already exist in other languages:\r\n- [AWS Lambda Instrumentation on OpenTelemetry JS](https://github.com/open-telemetry/opentelemetry-js-contrib/tree/5a00bedece35b0e9f934a0f7c171796f6ce725ad/plugins/node/opentelemetry-instrumentation-aws-lambda)\r\n- [AWS Lambda Instrumentation on OpenTelemetry .NET](https://github.com/open-telemetry/opentelemetry-dotnet-contrib/tree/91a1269a496cd8c8e29c97a5e800cda770395ee3/src/OpenTelemetry.Contrib.Instrumentation.AWSLambda)\r\n- [PR to add AWS Lambda Instrumentation on OpenTelemetry Go](https://github.com/open-telemetry/opentelemetry-go-contrib/pull/983)\r\n\r\nYou can learn more about how they are used on the [AWS Distro for OpenTelemetry - Python Lambda Layer documentation](https://aws-otel.github.io/docs/getting-started/lambda/lambda-python)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nN/A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] Yes. Link to PR: https://github.com/open-telemetry/opentelemetry-python/pull/2197\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "add-aws_lambda-instrumentation-package",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add instrumentation for AWS Lambda Service - pkg metadata files (Part 1/2) (#739)\n\n* Add instrumentation for AWS Lambda Service\r\n\r\n* Add AWS Lambda package metadata files"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211723ac254a19ac290d3c",
    "number": 738,
    "body": "# Description\r\n\r\nNow that SDK does not depend on opentelemetry-instrumentation anymore and opentelemetry-instrumentation has actual build time dependencies on the contrib repo, it makes maintanence a lot easier if we move opentelemetry-instrumentation to contrib repo. opentelemetry-distro depends on opentelemetry-instrumentation and is being moved as well. Neither of the two packages are really part of \"core\" Otel python anyway.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Existing tests\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] Yes. - Link to PR: https://github.com/open-telemetry/opentelemetry-python/pull/2196\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "add-opentelemetry-instrumentation-package",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add instrumentation and distro packages (#738)\n\nNow that SDK does not depend on opentelemetry-instrumentation\r\nanymore and opentelemetry-instrumentation has actual build time\r\ndependencies on the contrib repo, it makes maintanence a lot\r\neasier if we move opentelemetry-instrumentation to contrib repo.\r\nopentelemetry-distro depends on opentelemetry-instrumentation\r\nand is being moved as well. Neither of the two packages are\r\nreally part of \"core\" Otel python anyway."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211724ac254a19ac290d3d",
    "number": 736,
    "body": "\r\n\r\n# Description\r\n\r\nFixes #687 \r\n\r\nCheck for suppression key and return early from pymongo monitoring hooks if it is set.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\nAdded a test that suppression key results in early return. \r\n\r\n- [x] `test_suppression_key`\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n\r\nI don't think any doc needs to be updated.\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Implement checking for suppression key in pymongo instrumentation (#736)\n\n* Implement checking for suppression key\r\n\r\n\r\nAdd test for suppression key with pymongo\r\n\r\n\r\nchangelog update\r\n\r\n* Linting\r\n\r\n* pylint\r\n\r\n* Bad reformat\r\n\r\n* Update changelog with PR\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211725ac254a19ac290d3e",
    "number": 735,
    "body": "# Description\r\n\r\nAdds an extension to extract additional request/response attributes for DynamoDB as defined in the [semantic conventions](https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/semantic_conventions/instrumentation/aws-sdk.md#dynamodb) for the AWS SDK. Depending on which DynamoDB operation is called via the AWS SDK, different attributes are extracted.\r\n\r\nTo follow the database semantic conventions, relevant [connection](https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/semantic_conventions/database.md#connection-level-attributes) and [call-level](https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/semantic_conventions/database.md#call-level-attributes) attributes are also extracted. Those attributes are:\r\n* `db.system`: always 'dynamodb'\r\n* `db.operation`: corresponds to the called DynamoDB method/operation of the AWS SDK\r\n* `net.peer.name`: basically corresponds to 'dynamodb.<region>.amazonaws.com'\r\n\r\nRemoves the attribute `aws.table_name` as according to the AWS SDK spec,  `aws.dynamodb.table_names` should be used.  (According to the spec the attribute is now also a list of table names instead of a single table name.) \r\n\r\n\r\n## Type of change\r\n\r\n- [x] Breaking change: breaks existing span attribute names to make them spec compliant\r\n\r\n# How Has This Been Tested?\r\n\r\nAdds additional unit tests to verify that DynamoDB related attributes are extracted accordingly\r\n\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n",
    "head_branch": "botocore-dynamodb",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "botocore: Add DynamoDB extension (#735)\n\n* botocore: Add dynamodb extension\r\n\r\n* extract addtional DynamoDB specific attributes according to the spec\r\n* move DynamoDB tests to separate test module\r\n\r\n* changelog\r\n\r\n* add license info\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211726ac254a19ac290d3f",
    "number": 734,
    "body": "# Description\r\n\r\nCheck for `flask.request` to avoid `RuntimeError: Working outside of request context.` error.\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nValidated locally.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n",
    "head_branch": "flask_request_context_bug",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix RuntimeError: Working outside of request context. (#734)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211727ac254a19ac290d40",
    "number": 733,
    "body": "# Description\r\n\r\nVery sorry for the spam of small pull requests today 😓 But my many many thanks for their review! 😄\r\n\r\nFollow up to #731, the path for the tests files were still in the same path as the original `opentelemetry-sdk-extension-aws` package. This PR moves them out to better match the structure of the `src` folder in `opentelemetry-propagators-aws-xray`.\r\n\r\nIt also has some very small formatting updates to the `opentelemetry-propagators-aws` package.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)",
    "head_branch": "test-files-match-src-paths",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Path of AWS Propagator tests match src structure (#733)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211727ac254a19ac290d41",
    "number": 732,
    "body": null,
    "head_branch": "release/1.6.0-0.25b0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Release/1.6.0 0.25b0 (#732)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211728ac254a19ac290d42",
    "number": 731,
    "body": "# Description\r\n\r\nFollow up to #729, where I missed one reference from the `AwsXrayFormat` to `AwsXrayPropagator` rename.\r\n",
    "head_branch": "rename-aws-xray-propagator-test-file",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Rename AWS X-Ray propagator test file for  to  change (#731)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211729ac254a19ac290d43",
    "number": 729,
    "body": "# Description\r\n\r\nFollow up to #720\r\n\r\nWe put the propagator code in `aws_xray_format.py` instead of `__init__.py` to make it easier to find in the repo. By putting it as an export in the `__init__.py` file you can still import it at the same location.\r\n\r\nAlso add myself @NathanielRN as a codeowner for the propagator so I get notified when there is a request to change it.\r\n\r\n# Description\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nTest make sure the import still works.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-aws-propagator-into-its-own-file",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Better file naming for AWS XRay Propagator + Add NathanielRN as Propagator owner (#729)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621172aac254a19ac290d44",
    "number": 728,
    "body": "# Description\r\n\r\nThis change updates the SQLALchemyInstrumentor to respect the tracer provider that is passed in through the kwargs when patching the `create_engine` functionality provided by SQLAlchemy. Previously, it would default to the global tracer provider.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nUnit tested and tested in a real environment.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "respect-tracer-provider-sqlalchemy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Respect provided tracer provider when instrumenting SQLAlchemy (#728)\n\n* respect provided tracer provider when instrumenting sqlalchemy\r\n\r\nThis change updates the SQLALchemyInstrumentor to respect the tracer\r\nprovider that is passed in through the kwargs when patching the\r\n`create_engine` functionality provided by SQLAlchemy. Previously, it\r\nwould default to the global tracer provider.\r\n\r\n* feedback: pass in tracer_provider directly rather than kwargs\r\n\r\n* feedback: update changelog\r\n\r\n* build: lint"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621172bac254a19ac290d45",
    "number": 727,
    "body": "# Description\r\n\r\nWe were giving mssql server 10 seconds to start before creating the test\r\ndatabase. It now takes Github CI more than 10 seconds to start the mssql\r\nserver. Instead of increasing the leeway with guesses, this commit moves\r\nthe creation of test database from docker compose to the python test suite.\r\nThis allows the docker image to come up first and then create the DB\r\ninside the test suite with proper retry mechanism that is already in\r\nplace.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Existing tests\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix-mssql-docker-tests-v4",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix mssql docker tests v4 (#727)\n\n* Remove unneded CI steps\r\n\r\nThese were not really needed and got in by mistake.\r\n\r\n* Fix broken mssql integration tests\r\n\r\nWe were giving mssql server 10 seconds to start before creating the test\r\ndatabase. It now takes Github CI more than 10 seconds to start the mssql\r\nserver. Instead of increasing the leeway with guesses, this commit moves\r\nthe creation of test database from docker compose to the python test suite.\r\nThis allows the docker image to come up first and then create the DB\r\ninside the test suite with proper retry mechanism that is already in\r\nplace."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621172cac254a19ac290d46",
    "number": 726,
    "body": "\r\n# Description\r\n\r\nThese were not really needed and got in by mistake. I forgot to remove commit that added this before adding the commit with actual fix so reverting this bit.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Existing tests\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "remove-unneeded-ci-steps",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621172dac254a19ac290d47",
    "number": 724,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix-mssql-docker-tests-v3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621172dac254a19ac290d48",
    "number": 723,
    "body": "# Description\r\n\r\n`2017-latest` tag was recently updated to a newer image which apparently broke authentication for mssql container. Pinned the mssql container image to the last know working version.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Dev/Tooling enhancement\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Existing test suite\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix-mssql-docker-tests-v2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix mssql docker tests v2 (#723)\n\n* Pin ubuntu to 20.04 in CI\r\n\r\n* Fix mssql docker tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621172eac254a19ac290d49",
    "number": 722,
    "body": "# Description\r\n\r\nAttempt to fix mssql docker tests.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] dev/tooling enhancement\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Existing test suite\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix-mssql-docker-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621172fac254a19ac290d4a",
    "number": 721,
    "body": "# Description\r\n\r\nThis avoids unexpected breakage and surprises when new versions of the OS images become available.\r\n\r\n\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Dev/tooling update\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Existing test suite\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "pin-ci-ubuntu-version",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211730ac254a19ac290d4b",
    "number": 720,
    "body": "# Description\r\n\r\nRecently the AWS team discovered that we made the error of bundling the `AWSXrayFormat` propagator with the rest of the code in the `opentelemetry-sdk-extension-aws` package. While the `AWSXrayIdGenerator` and `Aws<Service>ResourceDetector` need a direct dependency on the `opentelemetry-sdk` package, the `AWSXrayFormat` propagator **should only depend on the** `opentelemetry-api` package.\r\n\r\nThis became obvious to us when we started making plans to upstream the [OpenTelemetry Lambda Python Package](https://github.com/open-telemetry/opentelemetry-lambda/tree/main/python/src/otel) and to get the propagator, would have to take a dependency on `opentelemetry-sdk`. This is wrong because none of the instrumentation depend on `opentelemetry-sdk`.\r\n\r\nThis matches the pattern we have in other languages:\r\n\r\nIn JavaScript:\r\n- [Propagators Package](https://github.com/open-telemetry/opentelemetry-js-contrib/tree/main/propagators/opentelemetry-propagator-aws-xray)\r\n- [IDs Generator Package](https://github.com/open-telemetry/opentelemetry-js-contrib/tree/main/packages/opentelemetry-id-generator-aws-xray)\r\n- [AWS Resource Detectors Package](https://github.com/open-telemetry/opentelemetry-js-contrib/tree/main/detectors/node/opentelemetry-resource-detector-aws)\r\n\r\n(JS splits the detectors & ID Generator but we shouldn't have to)\r\n\r\nIn Java:\r\n- [Extension Package (Propagator)](https://github.com/open-telemetry/opentelemetry-java/tree/main/extensions/aws)\r\n- [SDK Extension Package (IDs Generator + Detectors)](https://github.com/open-telemetry/opentelemetry-java/tree/main/sdk-extensions/aws)\r\n\r\netc.\r\n\r\nThe solution we propose is a new `opentelemetry-propagators-aws` package to hold just the propagator.\r\n\r\nSince the `opentelemetry-sdk-extension-aws` package is already released as `1.0.1`, this must be a **breaking change** to `1.1.0`.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nWe moved all the unit tests to \r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "move-aws-xray-propagator-into-own-package",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Move AWS X-Ray Propagator into its own package (#720)\n\nCo-authored-by: Owais Lone <owais@users.noreply.github.com>\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211731ac254a19ac290d4c",
    "number": 719,
    "body": "# Description\r\n\r\nThis PR fixes a bug in the pika instrumentation library. When the propagator could not detect a context from the message headers (for example in the sending action `properties.headers`) the context would be set to `{}` instead of the current context - thus breaking the trace chain.\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Unit tests\r\n- [x] Maunal Instrumentation test\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "bugfix/set_default_context_in_pika",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Bugfix/set default context in pika (#719)\n\n* Add a default context when one does not exist\r\n\r\n* Split the if to fit C0325: Unnecessary parens after 'not' keyword\r\n\r\n* Split the context retrieving according to the function"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211732ac254a19ac290d4d",
    "number": 718,
    "body": "# Description\r\n\r\nAdds an extension mechanism that allows enriching the botocore span with additional request/response attributes. An extension is specific to the called AWS service (e.g. 'lambda', 'sqs', 'dynamodb', ...) and provides callbacks that get invoked before and after the actual AWS service call is made.\r\nAs the initial part SQS specifics are moved to a dedicated extension. Extensions for 'dynamodb' and 'lambda' will be added in followup PRs.\r\n\r\n## Type of change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\ncovered by existing tests\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n",
    "head_branch": "botocore-service-extensions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "botocore: Introduce instrumentation extensions (#718)\n\n* botocore: Introduce instrumentation extensions\r\n\r\n* add extensions that are invoked before and after an AWS SDK\r\n  service call to enrich the span with service specific request and\r\n  response attirbutes\r\n* move SQS specific parts to a separate extension\r\n\r\n* changelog\r\n\r\nCo-authored-by: Owais Lone <owais@users.noreply.github.com>\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211733ac254a19ac290d4e",
    "number": 717,
    "body": "@oxeye-nikolay\r\n\r\n",
    "head_branch": "lzchen-patch-2",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Add oxeye-nikolay as codeowner for pika instrumentation (#717)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211734ac254a19ac290d4f",
    "number": 714,
    "body": "# Description\r\n\r\nAdded a `tracked_url_callback` argument to `RequestsInstrumentor` for the purpose of excluding URLs you don't want tracked.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] instrumentation/opentelemetry-instrumentation-requests/tests/test_requests_integration.py::RequestsIntegrationTestBase::test_tracked_url_callback\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "tracked_url_callback",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Adding `tracked_url_callback` to `RequestsInstrumentor` (#714)\n\n* Adding `tracked_url_callback` to `RequestsInstrumentor`\r\n\r\n* linting fixes and CHANGELOG update\r\n\r\n* Switching to `get_excluded_urls`\r\n\r\n* Update CHANGELOG.md\r\n\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>\r\n\r\n* Fixing linting\r\n\r\n* Stop patch in tearDown\r\n\r\n* Fixing lint\r\n\r\n* Fixing lint\r\n\r\n* Fixing lint\r\n\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>\r\nCo-authored-by: Owais Lone <owais@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211734ac254a19ac290d50",
    "number": 713,
    "body": "# Description\r\n\r\nThe `sqlalchemy` instrumentation uses the `packaging` library to parse the `sqlalchemy` SemVer.\r\n\r\n`packaging` is not part of the standard library and should be included in the `setup.cfg` file to avoid:\r\n\r\n```\r\nModuleNotFoundError: No module named 'packaging'\r\n```\r\n\r\n> Note: I chose the latest version of `packaging` because the supported python versions align with those of the `sqlalchemy` instrumentation, but open to alternatives.\r\n\r\nA different approach would be to just remove the extra requirement.\r\nSince we are just checking for `>=1.4` (and don't care about all the extra SemVer stuff):\r\n\r\n```py\r\nif tuple(map(int, sqlalchemy.__version__.split('.')[:2])) >= (1, 4):\r\n    ...\r\n```\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- ~[ ] Unit tests have been added~\r\n- ~[ ] Documentation has been updated~\r\n",
    "head_branch": "sqlalchemy/missing-packaging-req",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix missing 'packaging' requirement (#713)\n\nThe `sqlalchemy` instrumentation uses the `packaging` library to parse\r\nthe `sqlalchemy` SemVer.\r\n\r\n`packaging` is not part of the standard library and should be included\r\nin the `setup.cfg` file to avoid:\r\n\r\n```\r\nModuleNotFoundError: No module named 'packaging'\r\n```\r\n\r\nCo-authored-by: Matt Oberle <mattoberle@users.noreply.github.com>\r\nCo-authored-by: Owais Lone <owais@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211735ac254a19ac290d51",
    "number": 712,
    "body": "# Description\r\n\r\nThe Jinja2 API hasn't changed the functions that have been wrapped in at least 8 years.\r\nThe version supported should be much more broad.\r\n\r\nSpecifically, \r\n`\r\njinja2.environment.Template.render\r\njinja2.Template.generate\r\njinja2.Environment.compile\r\njinja2.Environment._load_template\r\n`\r\nwhich are the only wrapped functions seem to be appropriate for the instrumentation wrappers without further changes.\r\n\r\nI'm not a jinja2 expert, so it's possible I'm missing something. Happy to help with changes if it seems that I am.\r\n\r\n\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nThis change produces useful traces in our system.\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Expand allowed versions for jinja2 instrumentation (#712)\n\n* Expand allowed versions\r\n\r\nThe Jinja2 API hasn't changed the functions that have been wrapped in at least 8 years.\r\nThe version supported should be much more broad.\r\n\r\n* don't include 4+\r\n\r\n* Update changelog\r\n\r\n* Fix test that depends on lru_cache now\r\n\r\n* tox -e generate\r\n\r\n* Make test setup backwards compatible\r\n\r\n* Update for code review feedback\r\n\r\n* Disable linting check\r\n\r\n* Fix black formatting issue\r\n\r\n* Update readme from tox -e generate\r\n\r\n* Update core repo sha\r\n\r\nCo-authored-by: alrex <aboten@lightstep.com>\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>\r\nCo-authored-by: Owais Lone <owais@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211736ac254a19ac290d52",
    "number": 711,
    "body": "# Description\r\n\r\n- Add new `opentelemetry.conf.configure_tracing` package.\r\n- When auto-instrumenting, call `configure_tracing` if no global pipeline is detected after loading hooks/entrypoints.\r\n\r\n\r\nDepends on #709 \r\n\r\nPart of: https://docs.google.com/document/d/1qb05E45hEGbxKQ7UVXpB-7aGTN7Pjh4vok1l07weudA/edit#heading=h.rkrrdheasnx9\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added tests\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "add-conf-helpers",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211737ac254a19ac290d53",
    "number": 710,
    "body": "# Description\r\n\r\nThe previous code example here was missing () so you get this if you try to use it:\r\n\r\n  Traceback (most recent call last):\r\n    File \"./foo.py\", line 37, in <module>\r\n      RequestsInstrumentor.instrument()\r\n  TypeError: instrument() missing 1 required positional argument: 'self'\r\n\r\nThis change makes the code example in this file function again. it also matches the code example in the opentelemetry-instrumentation-requests README.rst.\r\n\r\nI didn't find any open issues for this problem. It looks like it was introduced in #557. No dependencies.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nNo code change so no tests added/changed. I have tested that the updated code example in the documentation works.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated -- I suspect this minor change doesn't make sense to mention in the Changelogs. \r\n- [ ] Unit tests have been added -- No code changes introduced.\r\n- [X] Documentation has been updated -- Documentation is the entirety of the content of this change.\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix doc error in file-level code block (#710)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211738ac254a19ac290d54",
    "number": 709,
    "body": "# Description\r\n\r\n- Add new `opentelemetry` package.\r\n- Add instrument and bootstrap commands to the new package.\r\n- Python code is purely lift and shift. I've tried to not make any changes or fixes to commands in this PR. \r\n- Updated the generate command to generate local bootstrap_gen.py\r\n\r\nPart of: https://docs.google.com/document/d/1qb05E45hEGbxKQ7UVXpB-7aGTN7Pjh4vok1l07weudA/edit#heading=h.rkrrdheasnx9\r\n\r\n## Role of the new package\r\n\r\nThis package builds on top of other lower level \"concepts\" to make it easier for users to consume OpenTelemetry. This includes things like easier configuration/setup with one function call (automatically sets up tracing pipeline, propagators, etc but allows customization), easier instrumentation with a single function call (automatically finds and instruments relevant packages), auto-instrumentation with CLI command, easier installation of instrumentation packages using a CLI command or optional dependencies. \r\n\r\nIn other words, this package can become the official OpenTelemetry package that most users would install. Users shouldn't have to care or learn about other \"lower level\" packages or details. Advanced users can still skip this package and achieve everything this package does with custom code by manually setting up the SDK, importing and instrumenting specific instrumentation packages, etc.\r\n\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Manual tests\r\n- [x] Unit tests\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] Yes. - Link to PR:  https://github.com/open-telemetry/opentelemetry-python/pull/2173\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "opentelemetry-package",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211739ac254a19ac290d55",
    "number": 706,
    "body": "# Description\r\n\r\n* Set `http.client_ip` instead of `net.peer.ip`: the value is changed by Tornado to `X-Forwarded-For` or `X-Real-IP`, see [Tornado code](https://github.com/tornadoweb/tornado/blob/790715ae0f0a30b9ee830bfee75bb7fa4c4ec2f6/tornado/httpserver.py#L332-L352), see [spec](https://github.com/open-telemetry/opentelemetry-specification/blob/b46bcab5fb709381f1fd52096a19541370c7d1b3/specification/trace/semantic_conventions/http.md#http-server-semantic-conventions)\r\n    * The actual `net.peer.ip` is in `_orig_remote_ip`, however I thought it best not to read a private field. Let me know if it's ok.\r\n* Set `handler` to the fully-qualified name of the request handler class\r\n    * The Tornado instrumentation does not provide any route information, such as `http.route`, only the base handler class's name as the span name. I didn't find an easy way to read the route pattern, the name of the handler seems like the next best thing\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] `tox -e py38-test-instrumentation-tornado` (`TestTornadoInstrumentation` updated)\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated",
    "head_branch": "tornado-attributes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Tornado attributes (#706)\n\n* Remove duplicate HTTP_HOST\r\n\r\n* Set http.client_ip instead of net.peer.ip\r\n\r\nTornado sets remote_ip to the value of X-Forwarded-For or X-Real-IP if\r\nthe 'xheaders' setting is set.\r\n\r\n* Add a \"handler\" attribute, with full class name\r\n\r\nThe spec has a 'http.route' which unfortunately seems difficult to get\r\nat. However the full class name is readily available and most helpful.\r\n\r\n* Add net.peer.ip from _orig_remote_ip\r\n\r\n* Address review comments\r\n\r\n- Don't set NET_PEER_IP if '_orig_remote_ip' is not set\r\n- Add a comment about the difference between the attributes\r\n\r\n* Make \"handler\" attribute into \"tornado.handler\"\r\n\r\n* Add CHANGELOG entry\r\n\r\n* Add test with X-Forwarded-For\r\n\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621173aac254a19ac290d56",
    "number": 705,
    "body": "# Description\r\n\r\nThis removes the unique document IDs from the span names, replacing them with ':id'. It greatly reduces the number of span names created by the elasticsearch intrumentation (e.g. no longer potentially infinite).\r\n\r\nNote that this only works if the mapping type is `_doc`. Unfortunately elasticsearch `index()`/`delete()`/... uses `_make_path()` before calling `perform_request()` and this is not easily reversible. I believe this to be fine because mapping types are deprecated since Elasticsearch 7: https://www.elastic.co/guide/en/elasticsearch/reference/current/removal-of-types.html\r\n\r\nFixes #704\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Tested on my system with index and delete operations\r\n- [x] Ran `tox -e py38-test-instrumentation-elasticsearch6`\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated",
    "head_branch": "elasticsearch-names",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Don't create Elasticsearch span names containing document IDs (#705)\n\n* Fix typo: _DEFALT_OP_NAME\r\n\r\n* Extract ES document ID from URL, put in attributes\r\n\r\nElasticsearch creates URLs for index() and delete() before they hit\r\nperform_request(). This means there would be many unique span names\r\ncontaining unique document IDs, of the form\r\n'Elasticsearch/indexname/_doc/documentid'.\r\n\r\nThis extracts the document ID from the URL and replaces it with ':id',\r\nthen puts it in the span's attributes.\r\n\r\n* Add TODO comment with link to issue\r\n\r\n* Add CHANGELOG entry\r\n\r\n* Don't use custom doc types, deprecated in ES 7\r\n\r\n* Update tests to match instrumentation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621173bac254a19ac290d57",
    "number": 702,
    "body": "# Description\r\n\r\nSmall PR to fix typo in propagator error message.\r\n",
    "head_branch": "typo-fix-aws-xray-propagator",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix typo in AWS X-RAY Propagator (#702)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621173cac254a19ac290d58",
    "number": 700,
    "body": null,
    "head_branch": "codeboten/refactor-traceresponse-test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "refactor common test code to use utility method (#700)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621173cac254a19ac290d59",
    "number": 699,
    "body": null,
    "head_branch": "codeboten/py39-template",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix tox.ini and update SHA (#699)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621173dac254a19ac290d5a",
    "number": 698,
    "body": "# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n",
    "head_branch": "codeboten/py39-template",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "add Python 3.9 to setup.cfg template (#698)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621173eac254a19ac290d5b",
    "number": 697,
    "body": "Fixes the test setup for `test_datadog_exporter.test_origin`. The test manually creates the spans and used the `INVALID_SPAN` was used as span ID. So instead of an expected `int` value, a whole `NonRecordingSpan` was used. \r\n",
    "head_branch": "fix-dd-exporter-test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix datadog exporter test (#697)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621173fac254a19ac290d5c",
    "number": 696,
    "body": "# Description\r\n\r\nFollowing #672, we set the version of the AWS SDK so that development can be done on this package in foresight of a `1.1.0` release.\r\n\r\nIf however, a path would be needed, that PR could simply change the version to the path number needed, with a follow up PR to set it back to this `dev0` state if needed.\r\n",
    "head_branch": "set-sdk-extension-aws-to-1.1.0dev0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "chore: Set SDK Ext AWS to 1.1.0dev0 (#696)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211740ac254a19ac290d5d",
    "number": 695,
    "body": "# Description\r\n\r\nAs per `R1735: Consider using {} instead of dict() (use-dict-literal)`\r\n\r\nFixes #694 \r\n",
    "head_branch": "codeboten/replace-dict",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "use {} instead of dict() (#695)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211741ac254a19ac290d5e",
    "number": 693,
    "body": "# Description\r\n\r\nContinuing work to support pylint 2.11.0, addressing string formatting in code.\r\n\r\nFixes #692\r\n\r\n",
    "head_branch": "codeboten/fstrings",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "use f-strings instead of format (#693)\n\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211742ac254a19ac290d5f",
    "number": 691,
    "body": "# Description\r\n\r\nThis file is causing pylint >2.9.6 to hang, disabling pylint for this file to allow us to move forward w/ the rest of the code.\r\n\r\nFixes #690 \r\n",
    "head_branch": "codeboten/690",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211743ac254a19ac290d60",
    "number": 689,
    "body": "# Description\r\n\r\nRemove unicode prefix, no longer necessary as per pylint 2.11.0 recommendation:\r\n`W1406: The u prefix for strings is no longer necessary in Python >=3.0`\r\n\r\nFixes #688 \r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n",
    "head_branch": "codeboten/rm-u-prefix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "remove unicode prefix, no longer necessary (#689)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211743ac254a19ac290d61",
    "number": 686,
    "body": "# Description\r\n\r\nThis is an alternative to the Console Exporter, that uses the Rich Console library to print colorised trees from a batch span processor. Span attributes are shown as nodes in the tree and spans are children of their related parent span/trace.\r\n\r\nThis is easier to read than the console exporter and see the relationships between traces.\r\n\r\nUseful for debugging.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n\r\nExample output:\r\n\r\n```\r\nTrace 6d3953ac92706f9dcbdc7129a4c72736                                                                                              \r\n└── [01:40:55.139608] /locations, span 503921bf52866810                                                                             \r\n    ├── Kind : SERVER                                                                                                               \r\n    ├── Attributes :                                                                                                                \r\n    │   ├── http.scheme : http                                                                                                      \r\n    │   ├── http.host : 127.0.0.1:8000                                                                                              \r\n    │   ├── net.host.port : 8000                                                                                                    \r\n    │   ├── http.flavor : 1.1                                                                                                       \r\n    │   ├── http.target : /locations                                                                                                \r\n    │   ├── http.url : http://127.0.0.1:8000/locations                                                                              \r\n    │   ├── http.method : GET                                                                                                       \r\n    │   ├── http.server_name : 127.0.0.1:8000                                                                                       \r\n    │   ├── http.user_agent : Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko)              \r\n    │   │   Version/14.1.2 Safari/605.1.15                                                                                          \r\n    │   ├── net.peer.ip : 127.0.0.1                                                                                                 \r\n    │   ├── net.peer.port : 64673                                                                                                   \r\n    │   ├── http.route : /locations                                                                                                 \r\n    │   └── http.status_code : 200                                                                                                  \r\n    ├── [01:40:55.142977] SELECT \"id\",\"name\",\"private\" FROM \"locations\", span c12862a73454ecc1                                      \r\n    │   ├── Kind : CLIENT                                                                                                           \r\n    │   └── Attributes :                                                                                                            \r\n    │       ├── db.system : sqlite                                                                                                  \r\n    │       ├── db.name : sample.db                                                                                                 \r\n    │       ├── db.statement :                                                                                                      \r\n    │       └── SELECT \"id\",\"name\",\"private\" FROM \"locations\"                                                                       \r\n    ├── [01:40:55.145724] /locations http send, span 08dff3718cf0a4a3                                                               \r\n    │   ├── Kind : INTERNAL                                                                                                         \r\n    │   └── Attributes :                                                                                                            \r\n    │       ├── http.status_code : 200                                                                                              \r\n    │       └── type : http.response.start                                                                                          \r\n    └── [01:40:55.147593] /locations http send, span d3088e87ff397dc4                                                               \r\n        ├── Kind : INTERNAL                                                                                                         \r\n        └── Attributes :                                                                                                            \r\n            └── type : http.response.body                                 \r\n```\r\n\r\nColorised:\r\n\r\n<img width=\"855\" alt=\"screenshot 2021-09-18 at 13 16 51\" src=\"https://user-images.githubusercontent.com/1532417/133945532-a4bf8d2d-c872-46e7-b036-694bfe66a419.png\">\r\n\r\n\r\n",
    "head_branch": "rich_exporter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add a rich console exporter (#686)\n\n* Add a rich console exporter\r\n\r\n* be more lenient on missing parent spans\r\n\r\n* Apply suggestions from code review\r\n\r\nCo-authored-by: Aaron Abbott <aaronabbott@google.com>\r\n\r\n* run black over source\r\n\r\n* patch change by hand\r\n\r\n* update changelog\r\n\r\n* remove defunct statement\r\n\r\n* Clarify the simple/batch span processor\r\n\r\n* fix f-strings that dont have formatting\r\n\r\n* clarify span usage and update classifiers\r\n\r\n* make child_to_tree a private function and rename some variables\r\n\r\nCo-authored-by: Aaron Abbott <aaronabbott@google.com>\r\nCo-authored-by: Srikanth Chekuri <srikanth.chekuri92@gmail.com>\r\nCo-authored-by: alrex <aboten@lightstep.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211744ac254a19ac290d62",
    "number": 685,
    "body": "# Description\r\n\r\nThis PR introduces an instrumentation module for Tortoise ORM https://tortoise-orm.readthedocs.io/en/latest/getting_started.html\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Implemented an instrumented application using Tortoise with a console exporter\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "tortoise",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Tortoise ORM instrumentation (#685)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211745ac254a19ac290d63",
    "number": 684,
    "body": "# Description\r\n\r\nContrib repo counterpart to https://github.com/open-telemetry/opentelemetry-python/issues/2126",
    "head_branch": "codeboten/fix-open",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "update open calls to pass encoding (#684)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211746ac254a19ac290d64",
    "number": 682,
    "body": "As discussed in the SIG last week, the issues backlog is in a good enough place we don't need this workflow anymore.\r\n",
    "head_branch": "codeboten/rm-auto-stale",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "removing workflow to automatically close issues (#682)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211747ac254a19ac290d65",
    "number": 681,
    "body": "# Description\r\n\r\nThis package does not contain any features on its own but serves is a\r\nconvenient way to install all supported instrumentations at once.\r\n\r\nAlso pins `markupsafe` to `2.0.1` in tests as `2.1.1` adding some breaking changes.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New package\r\n- [x] Packaging fix \r\n\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Manually\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "instrumentation-meta-package",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add opentelemetry-contrib-instrumentations meta package (#681)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211748ac254a19ac290d66",
    "number": 680,
    "body": "# Description\r\n\r\nAdded a new instrumentor for the pika module - python RabbitMQ library.\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Test instrumentation API and individual channel instrumentation.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [V] Yes. - [PR #2160](https://github.com/open-telemetry/opentelemetry-python/pull/2160):\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "feature/add_pika_instrumentation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Feature/add pika instrumentation (#680)\n\n* Added initial code\r\n\r\n* Add all needed spans, and add support of instrumentation and uninstrumentation\r\n\r\n* Added tests. Ready for PR\r\n\r\n* Rename RequestsInstrumentation to RequestsInstrumentor to follow conventions\r\n\r\n* Add suppress_instrumentation functionality\r\n\r\n* Fix suppress_instrumentation functionality\r\n\r\n* Fix CR comments and lint test failures\r\n\r\n* Add usage of wrapt according to CR comments\r\n\r\n* Fix according to CR Comments\r\n\r\n* Move the tracer to be an attribute of the instrumentor instead of the channel\r\n\r\n* Fix Tests\r\n\r\n* Update Changelog and fix failing test\r\n\r\n* update code using tox -e generate\r\n\r\n* Update the name of the variable to store the tracer provider.\r\n\r\n* Update the core repo hash in the workflow\r\n\r\n* Update the core repo hash in the workflow\r\n\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>\r\nCo-authored-by: Owais Lone <owais@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211749ac254a19ac290d67",
    "number": 679,
    "body": "# Description\r\n\r\n`opentelemetry-instrumentation-botocore`: added request_hooks response_hooks  dictionaries passed as arguments to the instrument method.\r\n\r\nThese dictionaries contain a mapping between AWS service names and callable objects that will be invoked before/after an api call to the respective service\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nadded a new unit test, testing the hooks activation\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "botocore_hooks",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "botocore hooks (#679)\n\n* botocore hooks\r\n\r\n* a single hook for all aws services\r\n\r\n* fix test\r\n\r\n* rename get_item_attributes variable to put_item_attributes\r\n\r\n* rename tests\r\n\r\n* delete redundant line"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621174aac254a19ac290d68",
    "number": 678,
    "body": "# Description\r\n\r\nCompanion PR to https://github.com/open-telemetry/opentelemetry-python/pull/2108, this removes the need to clone the core repo in order to run tox. It uses pip instead.\r\n\r\nNOTE: This change also removes lint ignore rules for the `opentelemetry-python-core` subdirectory. This means after this PR, contributors should remove that folder from their local environment.\r\n\r\n",
    "head_branch": "codeboten/rm-core",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "remove need to clone core repo (#678)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621174bac254a19ac290d69",
    "number": 674,
    "body": "# Description\r\n\r\nThis PR changes common span attributes for an AWS SDK call to make them comply with the semantic conventions in the [spec](https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/semantic_conventions/instrumentation/aws-sdk.md#common-attributes):\r\n*  adds `rpc.system`\r\n* changes `aws.operation` -> `rpc.method`\r\n* changes `aws.service` -> `rpc.service`\r\n\r\nAttributes for which no semantic conventions exist are kept unchanged. These are:\r\n* `aws.region`\r\n* `aws.request_id`\r\n* `retry_attempts`\r\n\r\nSimplifies unit tests as most of the assertions follow a similar pattern.\r\n\r\n## Type of change\r\n\r\n- [x] Breaking change (changes semantic conventions of existing attributes)\r\n\r\n\r\n# How Has This Been Tested?\r\n\r\nExisting tests have been adapted\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n",
    "head_branch": "botocore-general-semconv",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "botocore: Make common span attributes compliant with semconv in spec (#674)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621174cac254a19ac290d6a",
    "number": 673,
    "body": null,
    "head_branch": "merge",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge main into logs (#673)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": true
  },
  {
    "_id": "6621174cac254a19ac290d6b",
    "number": 672,
    "body": "# Description\r\n\r\nAfter [releasing the opentelemetry-sdk-extension-aws package as 1.0.0](https://pypi.org/project/opentelemetry-sdk-extension-aws/), we should update the development version to be a beta version like we normally do for packages.\r\n\r\nThis PR also removes the \"Beta\" classifier for the package.\r\n\r\nFollow up to #667\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nN/A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "move-sdk-extension-aws-1.0.1b0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Patch update SDK Extension AWS to version 1.0.1 (#672)\n\nCo-authored-by: Leighton Chen <lechen@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621174dac254a19ac290d6c",
    "number": 671,
    "body": "Fixes #668",
    "head_branch": "issue_668",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621174eac254a19ac290d6d",
    "number": 670,
    "body": "# Description\r\n\r\n`opentelemetry-instrumentation-elasticsearch`: added response_hook callback passed as an argument to the instrument method, enabling the users to add data from the response to the span attributes\r\n\r\n## Type of change\r\n\r\n- [X] New feature (non-breaking change which adds functionality)\r\n- [X] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [X] `test_response_hook` -  a new unit test testing the hook activation\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [X] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "elastic_response_hook",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "adding response_hook to elastic instrumentation (#670)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621174fac254a19ac290d6e",
    "number": 669,
    "body": "# Description\r\n\r\n`opentelemetry-instrumentation-redis`: added response_hook callback passed as an argument to the instrument method, enabling the users to add data from the response to the span attributes\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] New feature (non-breaking change which adds functionality)\r\n- [X] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [X] `test_response_hook` -  a new unit test testing the hook activation\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [X] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "redis_response_hook",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "adding response_hook to redis instrumentor (#669)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211750ac254a19ac290d6f",
    "number": 667,
    "body": "# Description\r\n\r\nWith #596 and #598 merged we completed the major tasks we wanted to release packages from Contrib as 1.0 Instrumentation API is not stable so they cannot be released as 1.0, but packages that the maintainers feel comfortable to release _can_ be released as 1.0.\r\n\r\nWith that said, I became the CODEOWNER for the `sdk-extension/opentelemetry-sdk-extension-aws` package in #655 , and after bringing it up at the SIG meeting got the go-ahead to release this package as 1.0!\r\n\r\nThe `sdk-extension/opentelemetry-sdk-extension-aws` package only depends on `opentelemetry-sdk`, which is 1.0 stable as well so it should give us confidence the APIs needed for this `sdk-extension` package are also stable.\r\n\r\nSee:\r\n\r\nhttps://github.com/open-telemetry/opentelemetry-python-contrib/blob/704f1d9cfdd59f84162885bfc611f416ba37f0c7/sdk-extension/opentelemetry-sdk-extension-aws/setup.cfg#L40-L41\r\n\r\nOnce we merge this, we can try the changes from #598 to _release from a tag_. (e.g. `opentelemetry-sdk-extension-aws==1.0.0`)\r\n\r\n## Type of change\r\n\r\nIndividual Contrib package release.\r\n\r\n# How Has This Been Tested?\r\n\r\nN/A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "release-aws-sdk-extension-1.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Release AWS Python SDK Extension as 1.0 (#667)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211751ac254a19ac290d70",
    "number": 666,
    "body": "# Description\r\n\r\nFollow up to #659, #656 revealed that the Component Owners action can fail if users send a `git commit --amend` instead of pushing a new commit. It's not ideal, but we can ignore this failure and let the PR pass if any errors occur with this action because it is supposed to just be a convenience for assigning respective CODEOWNERs.\r\n\r\nApprovers can always assign reviewers directly.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\nN/A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "do-not-block-on-component-owners",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Do not fail tests if component owners workflow fails (#666)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211752ac254a19ac290d71",
    "number": 665,
    "body": "Add closing parenthesis to documentation example.\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix documentation for MySQL instrumentation (#665)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211752ac254a19ac290d72",
    "number": 664,
    "body": "# Description\r\n\r\nbotocore instrumentor is patching `botocore.endpoint.Endpoint.prepare_reqyest` in the instrument method but did not unpatch it in the uninstrument method.\r\n\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nAdditional unit test was added\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n",
    "head_branch": "botocore-fix-uninstrument",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "botocore: Fix uninstrument to also unpatch header injection on Endpoint (#664)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211753ac254a19ac290d73",
    "number": 663,
    "body": "# Description\r\n\r\nSpan injection for lambda invoke in the botocore instrumentation happened before the botocore span was actually created which resulted in injecting the parent span instead of the actual botocore span.\r\nThis PR fixes span injection to inject the actual botocore span.\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nAdapted existing unit test\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been updated\r\n\r\n",
    "head_branch": "botocore-fix-lambda-invoke-inject",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "botocore: Fix span inject for lambda invoke (#663)\n\n* Botocore: Fix span inject for lambda invoke\r\n\r\n* for lambda invoke span injection happend to early which resulted in the botocore\r\n  span being injected instead of the actual botocore span\r\n\r\n* changelog\r\n\r\nCo-authored-by: alrex <aboten@lightstep.com>\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211754ac254a19ac290d74",
    "number": 662,
    "body": "Fixes #653",
    "head_branch": "issue_653",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211755ac254a19ac290d75",
    "number": 661,
    "body": "# Description\r\n\r\nCapture net.peer.ip in requests & urllib3 instrumentations, using a shared new ~~package `opentelemetry-instrumentation-http-base`~~ instrumentor for httplib.client that could also be used to easily add net.peer.ip to other instrumentations based on the stdlib's httplib.client (but this PR starts with only the aforementioned two).\r\n\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nUnit tests included. Due to how sharing of test code is currently set up, this requires a change to the main repo to add the test base class.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [X] Yes. - Link to PR: https://github.com/open-telemetry/opentelemetry-python/pull/2101\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n-  ~~Documentation has been updated~~\r\n",
    "head_branch": "http-client-peer-ip",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add net.peer.ip in requests & urllib3 instrumentations. (#661)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211756ac254a19ac290d76",
    "number": 660,
    "body": "# Description\r\n\r\nAdding an option for an extended form of Urllib3 request hook with additional two arguments:\r\n1. headers - a dictionary containing the request headers\r\n2. body - a string containing the encoded request body \r\n\r\n\r\n## Type of change\r\n\r\n- [X] New feature (non-breaking change which adds functionality)\r\n- [X] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nAdded a unit test named `test_extended_request_hook` testing the extended arguments\r\n\r\n# Does This PR Require a Core Repo Change?\r\n - No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [X] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "urllib3_request_hook",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Urllib3 request hook (#660)\n\n* Urllib3: extend request hook with request body and headers\r\n\r\n* Change GET to POST in test_extended_request_hook\r\n\r\n* added changelog entry\r\n\r\n* update ExtendedReqeustHookT\r\n\r\n* adding up to date generated code\r\n\r\n* replace _RequestHookT with _ExtendedRequestHookT\r\n\r\n* updated Changelog\r\n\r\nCo-authored-by: Ran Nozik <ran@heliosphere.io>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211757ac254a19ac290d77",
    "number": 659,
    "body": null,
    "head_branch": "owner",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Change action to address forks (#659)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211758ac254a19ac290d78",
    "number": 658,
    "body": "# Description\r\n\r\nDupe of #656, for also testing CODEOWNERS\r\n\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211759ac254a19ac290d79",
    "number": 657,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "lzchen-patch-1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621175aac254a19ac290d7a",
    "number": 656,
    "body": "# Description\r\n\r\nBy default the `TraceProvider` uses a Sampler which respects the Parent Sampling decision. If the user does not provide `Sampled=1;` into their `X-Amzn-Trace-Id` header when using the `AwsXrayFormat` propagator, the parent context (and all subsequent child spans) are assumed to be `sampled=false` by default.\r\n\r\nThis PR updates the docs to warn users about that.\r\n\r\nFixes #649\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nN/A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "document-parent-context-behavior",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update Doc for aws propagator default sampling behavior (#656)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621175aac254a19ac290d7b",
    "number": 655,
    "body": "Assigns and requires review from owners of components on PRs that are against those components.\r\n\r\nAdds @NathanielRN  as the first code owner for aws sdk extension component.",
    "head_branch": "owner",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add component owner action (#655)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621175bac254a19ac290d7c",
    "number": 652,
    "body": "Fixes #638\r\n\r\n# Description\r\n\r\nThe test was actually generating 2 spans but on very fast systems we\r\nonly saw one as the test ran faster than the message would travel\r\nthrough the broker, trigger a task and generate 2nd span.\r\n\r\nSwitched from .delay() to .apply() so only one span is generated which\r\nis enough for the test in question.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Dev/Tooling enhancement\r\n \r\n# How Has This Been Tested?\r\n\r\n- [x] Unit Tests\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix-celery-docker-test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix flaky celery docker test (#652)\n\nThe test was actually generating 2 spans but on very fast systems we\r\nonly saw one as the test ran faster than the message would travel\r\nthrough the broker, trigger a task and generate 2nd span.\r\n\r\nSwitched from .delay() to .apply() so only one span is generated which\r\nis enough for the test in question."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621175cac254a19ac290d7d",
    "number": 651,
    "body": "# Description\r\n\r\nCouple of changes that should make the tests a bit more independent. \r\n\r\nI've not been able to reproduce this locally so also added some log statements to provide extra context next time this fails in CI.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Dev/Tooling enchancement\r\n\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "flaky-test-logs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621175dac254a19ac290d7e",
    "number": 650,
    "body": "All instrumentations read most env vars today at module level. This has\r\na few disadvantages.\r\n\r\n- harder to test.\r\n- code executed on import even if instrumentation is not used.\r\n- forces to use global vars.\r\n\r\nThis commit fixes the Falcon instrumentation to handle env vars locally\r\nduring instrumentor initialization and considerably simplifies testing.\r\nOther instrumentations should receive similar treatment.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Code/Tooling enhancement (non-breaking change which fixes an issue)\r\n\r\n\r\n# How Has This Been Tested?\r\n\r\n\r\n- [x] Existing tests\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "update-falcon-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Falcon: handle env vars locally vs globally (#650)\n\nAll instrumentations read most env vars today at module level. This has\r\na few disadvantages.\r\n\r\n- harder to test.\r\n- code executed on import even if instrumentation is not used.\r\n- forces to use global vars.\r\n\r\nThis commit fixes the Falcon instrumentation to handle env vars locally\r\nduring instrumentor initialization and considerably simplifies testing.\r\nOther instrumentations should receive similar treatment."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621175eac254a19ac290d7f",
    "number": 647,
    "body": "# Description\r\n\r\nThis file lists down all instrumentations and the packages+versions they\r\nsupport. This is helpful to find out  what exactly is supported at a glance.\r\n\r\nGenerated file look like this: https://github.com/open-telemetry/opentelemetry-python-contrib/blob/70ee480a89aa3d0aa3dc78e32c76004c82be411d/instrumentation/README.md\r\n\r\n![Screen Shot 2021-09-01 at 19 08 08](https://user-images.githubusercontent.com/46186/131681533-c05b90e8-48c8-4e81-8e31-96a2041db748.png)\r\n\r\n\r\n## Future iterations\r\n\r\nI plan to extend this to generate a similar index page for the main docs website.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Doc/Repo enhancement\r\n\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "generate-instrumentation-root-readme",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added a script to generate readme file for root instrumentations (#647)\n\ndirectory\r\n\r\nThis file lists down all instrumentations and the packages+versions they\r\nsupport. This is helpful to find out at a glance what is exactly\r\nsupported.\r\n\r\nCo-authored-by: alrex <aboten@lightstep.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621175fac254a19ac290d80",
    "number": 646,
    "body": "Fixes #645",
    "head_branch": "issue_645",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove unused imports (#646)\n\n* Remove unused imports\r\n\r\nFixes #645\r\n\r\n* Fix lint\r\n\r\n* Import trace_tween_factory\r\n\r\n* Fix lint\r\n\r\n* Fix lint\r\n\r\n* Fix pylint\r\n\r\n* Try without using the symbol\r\n\r\n* Fix isort\r\n\r\n* Revert \"Fix isort\"\r\n\r\nThis reverts commit 4dbd91450b4ee099fd09ab1ca0fb8ae9c10bdcfa.\r\n\r\n* Revert \"Try without using the symbol\"\r\n\r\nThis reverts commit d94f95564671a3155edf44bf71bf58f22ca309f0."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211760ac254a19ac290d81",
    "number": 644,
    "body": null,
    "head_branch": "falcon-3-redux",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Falcon 3 support (#644)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211761ac254a19ac290d82",
    "number": 643,
    "body": "# Description\r\n\r\nUpdate some tests to use more deterministic methods of testing in memory\r\nspans. This helps the core repo pass tests after adding Windows to CI\r\nmatrix.\r\n\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Dev/Tooling enchancement\r\n\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration.\r\n\r\nThis PR has been split out of #531 in order to not block the core Windows PR. We can merge core Windows PR along with this one and continue to work on contrib Windows.\r\n\r\n- [x] Updated Tests\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] Yes. - Link to PR: https://github.com/open-telemetry/opentelemetry-python/pull/1889\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "more-deterministic-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Improve reliability of tests (#643)\n\n* Run tests on Windows in Github Actions\r\n\r\n* core sha update\r\n\r\n* format code\r\n\r\n* fix ci yaml\r\n\r\n* rebase\r\n\r\n* lint\r\n\r\n* Try without win+py3.6 fix\r\n\r\n* Try without win+py3.6 fix\r\n\r\n* Improve test reliability\r\n\r\nUpdate some tests to use more deterministic methods of testing in memory\r\nspans. This helps the core repo pass tests after adding Windows to CI\r\nmatrix."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211761ac254a19ac290d83",
    "number": 641,
    "body": "# Description\r\n\r\n\r\n- Update base test class to have more consistent assertion methods with rest of Python ecosystem.\r\n- Fix breaking botocore instrumentation tests\r\n\r\n- [x] Dev/Tooling enchancement\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Existing Tests\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] Yes. - Link to PR: https://github.com/open-telemetry/opentelemetry-python/pull/2084\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "upgrade-assertion-methods",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "More consistent assertion methods (#641)\n\n* More consistent assertion methods\r\n\r\n* Updated core SHA"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211762ac254a19ac290d84",
    "number": 639,
    "body": "Workaround for #638",
    "head_branch": "issue_638",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Rerun a flaky test (#639)\n\n* Rerun a flaky test"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211763ac254a19ac290d85",
    "number": 634,
    "body": "# Description\r\n\r\nThis PR adapts the span attributes of the botocore (AWS SDK) instrumentation to make them (mostly) comply with the [semantic conventions](https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/semantic_conventions/instrumentation/aws-sdk.md) defined in the spec.\r\n\r\nAll spans created with the botocore instrumentation will generally set the [common attributes](https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/semantic_conventions/instrumentation/aws-sdk.md#common-attributes) for the invoked AWS service and operation.\r\n\r\nTo handle service specifics, `AwsSdkExtension`s are introduced. An extension is a set of callbacks that get invoked for a traced AWS SDK call. A concrete extension might extract additional attributes before/after the service call, inject the span into a certain carrier, do some additional error handling, ...\r\n\r\nFollowing extensions are added:\r\n* DynamoDB: extracts the request and response attributes for the operations defined in the [AWS SDK spec](https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/semantic_conventions/instrumentation/aws-sdk.md#dynamodb) and follows the database semantic conventions for [connection](https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/semantic_conventions/database.md#connection-level-attributes) and [call-level](https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/semantic_conventions/database.md#call-level-attributes) attributes.\r\n* Lambda:  follows the semantic conventions for [outgoing invocations](https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/semantic_conventions/faas.md#outgoing-invocations).\r\n* SQS: only extracts the `aws.queue_url` which does not comply with the spec and was kept for backward compatibility.\r\n\r\nGeneral span attributes `aws.region`, `aws.request_id`, `retry_attempts`, for which no semantic convetions exist, were kept for backward compability.\r\n\r\nAlso fixes some issues:\r\n* Lambda invoke: injects now the actual botocore span instead of its parent\r\n* uninstruments now also `Endpoint.prepare_request` which was missing before\r\n\r\n## Type of change\r\n\r\n- [x] Breaking change: breaks existing span attribute names to make them spec compliant\r\n\r\n# How Has This Been Tested?\r\n\r\nNew unit tests + adapting existing tests\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "extend-botocore-instr",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211764ac254a19ac290d86",
    "number": 633,
    "body": "Fixes #632",
    "head_branch": "issue_632",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211765ac254a19ac290d87",
    "number": 631,
    "body": "Fixes #547 ",
    "head_branch": "issue_547",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove unnecessary dependencies (#631)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211766ac254a19ac290d88",
    "number": 629,
    "body": "# Description\r\n\r\nIt seems the same in memory span exporter was being reused by multiple\r\ntests. This change _should_ create a new instance of memeory exporter\r\nper test/function.\r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python/issues/2067 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Existing tests\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix-docker-celery-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Potential fix for flaky celery test (#629)\n\nIt seems the same in memory span exporter was being reused by multiple\r\ntests. This change _should_ create a new instance of memeory exporter\r\nper test/function.\r\n\r\nFixes #2067"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211767ac254a19ac290d89",
    "number": 628,
    "body": null,
    "head_branch": "release/1.5.0-0.24b0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Release/1.5.0 0.24b0 (#628)\n\n* updating changelogs and version to 1.4.0-0.24.dev0\r\n\r\n* updating changelogs and version to 1.5.0-0.24b0\r\n\r\n* Update CHANGELOG.md\r\n\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>\r\n\r\n* Update CHANGELOG.md\r\n\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>\r\n\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211768ac254a19ac290d8a",
    "number": 627,
    "body": null,
    "head_branch": "release/1.4.0-0.24b0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211769ac254a19ac290d8b",
    "number": 624,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix-slow-lint",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211769ac254a19ac290d8c",
    "number": 623,
    "body": "# Description\r\n\r\n- Move apt-get install command to github actions to run on an ubuntu\r\n  system only. This keeps tox.ini cross-platform and enabled to run on\r\n  non-ubuntu systems locally.\r\n- Add `-y` flag to apt-get install command so it does not wait for\r\n  configuration on CI.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix-lint",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix tox lint command (#623)\n\n* Fix tox lint command\r\n\r\n- Move apt-get install command to github actions to run on an ubuntu\r\n  system only. This keeps tox.ini cross-platform and enabled to run on\r\n  non-ubuntu systems locally.\r\n- Add `-y` flag to apt-get install command so it does not wait for\r\n  configuration on CI.\r\n\r\n* Downgrade pylint to 2.9.x\r\n\r\n* Add pip cache to github actions cache"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621176aac254a19ac290d8d",
    "number": 621,
    "body": "Follow up to @NathanielRN's suggestion here: https://github.com/open-telemetry/opentelemetry-python-contrib/pull/619#discussion_r687930629",
    "head_branch": "codeboten/add-comment",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "add comment to tox (#621)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621176bac254a19ac290d8e",
    "number": 619,
    "body": "this tox task appears to be hanging. This is what I saw when I ran it locally:\r\n\r\n```\r\n\r\ntest_elasticsearch.py::TestElasticsearchIntegration::test_dsl_create FAILED                                                                        [  8%]\r\ntest_elasticsearch.py::TestElasticsearchIntegration::test_dsl_index FAILED                                                                         [ 16%]\r\ntest_elasticsearch.py::TestElasticsearchIntegration::test_dsl_search FAILED                                                                        [ 25%]\r\ntest_elasticsearch.py::TestElasticsearchIntegration::test_instrumentor FAILED                                                                      [ 33%]\r\ntest_elasticsearch.py::TestElasticsearchIntegration::test_multithread \r\n```",
    "head_branch": "codeboten/disable-elastic7",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "disable elasticcachesearch7 (#619)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621176cac254a19ac290d8f",
    "number": 618,
    "body": null,
    "head_branch": "bump-ci-cache-key",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621176dac254a19ac290d90",
    "number": 617,
    "body": "Contrib repo PR for the workaround suggested here https://github.com/open-telemetry/opentelemetry-python/pull/2022/files",
    "head_branch": "codeboten/ubuntu-18.04",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621176eac254a19ac290d91",
    "number": 616,
    "body": "# Description\n\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\n\nFixes # (issue)\n\n## Type of change\n\nPlease delete options that are not relevant.\n\n- [ ] Bug fix (non-breaking change which fixes an issue)\n- [ ] New feature (non-breaking change which adds functionality)\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\n- [ ] This change requires a documentation update\n\n# How Has This Been Tested?\n\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\n\n- [ ] Test A\n\n# Does This PR Require a Core Repo Change?\n\n- [ ] Yes. - Link to PR: \n- [x] No.\n\n# Checklist:\n\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\n\n- [ ] Followed the style guidelines of this project\n- [ ] Changelogs have been updated\n- [ ] Unit tests have been added\n- [ ] Documentation has been updated\n",
    "head_branch": "missing-licenses",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621176fac254a19ac290d92",
    "number": 615,
    "body": "# Description\r\n\r\nJust a small documentation change. With the newest changes, the example is no longer correct.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [X] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nTried to run the latest released version with the example in the docs and it didn't work. It required the change to properly function.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [X] Documentation has been updated\r\n",
    "head_branch": "fastapi-docs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "docs: Update instrumentation example in readme (#615)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211770ac254a19ac290d93",
    "number": 614,
    "body": null,
    "head_branch": "codeboten/update-approvers-maintainers",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "update approvers/maintainers list (#614)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211771ac254a19ac290d94",
    "number": 613,
    "body": "# Description\r\n\r\nWe noticed a logic mistake in the \"bad\" path of the EKS detector. Instead of returning `Resource.get_empty()`, we should return the empty string `\"\"` if the process can't be verified to be running on EKS.\r\n\r\nThis check was probably moved by me when I was setting up the tests. I've added a unit test for it now.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nCreated a unit test to make sure this code path raises an exception.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~ Should not need a CHANGELOG if we merge before the next release\r\n- [x] Unit tests have been added\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "check-if-on-eks-first",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "EKS Detector should return empty string, not resource if env var missing (#613)\n\n* EKS Detector returns string if missing env var\r\n\r\n* Update sdk-extension/opentelemetry-sdk-extension-aws/src/opentelemetry/sdk/extension/aws/resource/eks.py\r\n\r\nAdd return value typing to _get_cluster_name method\r\n\r\nCo-authored-by: Aaron Abbott <aaronabbott@google.com>\r\n\r\nCo-authored-by: Aaron Abbott <aaronabbott@google.com>\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211772ac254a19ac290d95",
    "number": 612,
    "body": "# Description\r\n\r\nThe container ID in the `/proc/self/cgroup` file available on every container should be the same on every line that actually has it. For that reason, we can exit the file read early if we find it instead of loop and replacing it over and over again.\r\n\r\nIf we merge this before the next release I think we can just use the \"SKIP CHANGELOG\" tag 🙂 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nCovered by previous unit tests.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "exit-ecs-detector-early",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Exit AWS ECS and EKS Detector container file reads early if container id found (#612)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211773ac254a19ac290d96",
    "number": 611,
    "body": "@owais I'm opening this partially so that I can get workflows to run on push and make my life easier in #607 . But also until #607 gets merged, this can't hurt to have 😄 ",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add note about Falcon version support (#611)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211773ac254a19ac290d97",
    "number": 608,
    "body": "0.23b2 hotfix",
    "head_branch": "release/1.4.1-0.23b2",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "hotfix: 0.23b2 (#608)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211774ac254a19ac290d98",
    "number": 607,
    "body": "Replace falcon.api.Request -> falcon.Request which exists on both Falcon 2 & 3\r\n\r\nSteps to reproduce:\r\n\r\n1. Install Falcon >=3: `pip install falcon==3.0.0`\r\n2. Run the docs: https://opentelemetry-python-contrib.readthedocs.io/en/latest/instrumentation/falcon/falcon.html#usage\r\n\r\nYou'll get:\r\n\r\n```\r\n.../dist-packages/opentelemetry/instrumentation/falcon/__init__.py in <module>()\r\n--> 129 _response_propagation_setter = FuncSetter(falcon.api.Response.append_header)\r\nAttributeError: module 'falcon' has no attribute 'api'\r\n```\r\n\r\nAnd I verified that in Falcon >=3 `falcon.api` does not exit.\r\n\r\nAlso to note, `falcon.API` is being deprecated in favor of `falcon.App`. Not sure how you want to handle that. I reckon some version checks will be needed to support both Falcon 2 & 4.",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Make Falcon  instrumentation compatible with Falcon >=3 (#607)\n\n* Make Falcon  instrumentation compatible with Falcon >=3\r\n\r\nReplace falcon.api.Request -> falcon.Request which exists on both Falcon 2 & 3\r\n\r\n* Update package.py\r\n\r\n* Update CHANGELOG.md\r\n\r\n* update tox.ini\r\n\r\n* revert changes to tox.ini to test failures\r\n\r\n* Update package.py\r\n\r\nCo-authored-by: Owais Lone <owais@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211775ac254a19ac290d99",
    "number": 606,
    "body": "",
    "head_branch": "0.24dev",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Back to develop after 0.23b0 release (#606)\n\n* Back to develop after 0.23b0 release\r\n\r\n* Update SHA\r\n\r\n* Update SHA\r\n\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211776ac254a19ac290d9a",
    "number": 605,
    "body": "# Description\r\n\r\nQuick PR to remove `opentelemetry-api` as a dependency for the SDK extension because it should already get that dependency through` opentelemetry-sdk`.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nN/A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [] Changelogs have been updated~ Hopefully we can skip this for such a minor change?\r\n~- [] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "better-aws-sdk-extension-dependency",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "SDK extension does not need to depend on API directly (#605)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211777ac254a19ac290d9b",
    "number": 604,
    "body": "# Description\r\n\r\nProposal to solve #375 for the `FlaskInstrumentor`, based on the `FastAPIInstrumentor` solution in #486.\r\nThis PR allows users to pass an explicit `excluded_urls` argument during instrumentation.\r\nThe explicit argument will override values set via environment variable.\r\n\r\n## Type of change\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Test A: The `test_programmatic` module was modified to test both environment-based and explicit exclusions.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated",
    "head_branch": "flask-excluded_urls",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Provide excluded_urls argument to Flask instrumentation (#604)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211778ac254a19ac290d9c",
    "number": 603,
    "body": "# Description\r\n\r\nZoom link on Contrib repo is incorrect! This PR fixes it.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\nN/A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n",
    "head_branch": "update-zoom-meeting-link",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update Zoom link to match core (#603)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211779ac254a19ac290d9d",
    "number": 602,
    "body": "# Description\r\n\r\nSince the introduction of the `_instruments` runtime checks in #475, the FastAPI instrumentation has stopped working for versions >= `0.59.0`. However the current test suite passes even for the latest released version at the moment (`0.67.0`).\r\n\r\nIt seems this isn't related to a limitation in the instrumentation code, but actually because of it being created when `0.58` was the latest version: https://github.com/open-telemetry/opentelemetry-python/commit/7bec76a22032e498911d06b9e3dab4e33528d995.\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] `tox -e test-instrumentation-fastapi`, which now installs latest FastAPI version.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fastapi-newer-versions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Allow instrumentation of newer FastAPI versions (#602)\n\n* Allow instrumentation of newer FastAPI versions\r\n\r\nSince the introduction of the `_instruments` runtime checks in #475, the\r\nFastAPI instrumentation has stopped working for versions >= `0.59.0`.\r\nHowever the current test suite passes even for the latest released\r\nversion at the moment (`0.67.0`).\r\n\r\nIt seems this isn't related to a limitation in the instrumentation code,\r\nbut actually because of it being created when `0.58` was the latest version:\r\nhttps://github.com/open-telemetry/opentelemetry-python/commit/7bec76a22032e498911d06b9e3dab4e33528d995.\r\n\r\n* Add changelog entry\r\n\r\nCo-authored-by: Owais Lone <owais@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621177aac254a19ac290d9e",
    "number": 601,
    "body": "",
    "head_branch": "codeboten/update-publish-workflow",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Update publish.yml (#601)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621177bac254a19ac290d9f",
    "number": 600,
    "body": "",
    "head_branch": "codeboten/update-changelog",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "update changelog (#600)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621177cac254a19ac290da0",
    "number": 599,
    "body": "Changed all opentelemetry to oxeye_opentelemetry, and created a mac building script",
    "head_branch": "feature/change_opentelemetry_to_oxeye_opentelemetry",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621177dac254a19ac290da1",
    "number": 598,
    "body": "# Description\r\n\r\nAdds a new workflow (`.github/publish-a-package.yml`) and a new build script (`scripts/build_a_package.sh`) to allow releases of contrib repo packages from a push of a tag.\r\n\r\nThe hope is that once we approve CODEOWNERS who own contrib packages, they **can release packages independent of the maintainers by simply pushing a tag** with a package name and package version that matches a package in this repo.\r\n\r\nThe format of the tag should be:\r\n\r\n`opentelemetry-<PKG_NAME>==<PKG_VERSION>`\r\n\r\nNOTE: You can only release a package that is `>=1.0`! This is to allow beta packages to be released by the regular release workflow when the maintainers have a chance to do it.\r\n\r\nI also updated the original script to skip `.tar.gz` files which are `>=1.0` for this very reason.\r\n\r\nThis is very similar to the setup over [on opentelemtry-dotnet-contrib where they have a separate workflow for every package](https://github.com/open-telemetry/opentelemetry-dotnet-contrib/tree/main/.github/workflows). That workflow gets triggered on a push to a relevant tag. However, my goal here is to one have **one workflow for each package**.\r\n\r\nAlso see the .NET PR that added this functionality: https://github.com/open-telemetry/opentelemetry-dotnet-contrib/pull/64\r\n\r\nThe PRO is less code duplication.\r\n\r\nThe CON is less control by CODEOWNERS as to what the workflow does for their specific package (although we can address those later on a case-by-case need)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n~- [ ] This change requires a documentation update~ No?\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- You can run `./scripts/build_a_package.sh` locally, you just need to:\r\n  - Set `GITHUB_REF=` to something like `refs/tags/opentelemetry-sdk-extension-aws==0.23b0`\r\n  - Update the `BASE_DIR` variable to the location of your contrib repo\r\n\r\n- To test the actual workflow, I'll try to create my own repo sometime this week to validate everything works.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~ Didn't see any for the previous release flow?\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "separate-package-releases",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Worklow to publish a package from a CODEOWNER tag (#598)\n\n* Worklow to publish a package from a CODEOWNER tag\r\n\r\n* Prevent main script from release >=1.0 packages\r\n\r\n* Fixes to build package workflow and script\r\n\r\n* Better naming and remove redundant ls flag\r\n\r\n* Add err msg for missing setup.py ls match\r\n\r\n* Use lowercase for all non env variable vars"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621177eac254a19ac290da2",
    "number": 597,
    "body": "",
    "head_branch": "release/1.4.0-0.23b0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Release/1.4.0 0.23b0 (#597)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621177fac254a19ac290da3",
    "number": 596,
    "body": "# Description\r\n\r\nIn preparation for releasing instrumentation packages as 1.0, we add a path forward for members of the community who want to help release instrumentation packages as 1.0.\r\n\r\nThis PR adds a description of what it means to be a CODEOWNER, deletes a superfluous CONDEWONERS file, and updates the README to tell the community what we decided is the **checklist** for moving a package to 1.0.\r\n\r\nFixes #590 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nN/A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "checklist-for-instrumentation-1.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "README includes 1.0 release checklist + CODEOWNER description (#596)\n\n* README 1.0 release checklist + what is a CODEOWNER\r\n\r\n* Do not required SLA for responding to asks\r\n\r\n* Easy changes to address reviewer comments\r\n\r\n* Introduce on Slack at least not SIG meeting\r\n\r\n* Give guidance when a CODEOWNER wants to leave a project\r\n\r\n* Update README.md\r\n\r\nTake suggestion package \"MUST\" wording.\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>\r\n\r\n* Update README.md\r\n\r\nTake suggestion on CODEOWNER requirement wording.\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>\r\n\r\n* Apply suggestions from code review\r\n\r\nTake more suggestions on checklist list requirements.\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>\r\n\r\n* Update README.md\r\n\r\nTake suggestion on MUST requirement for documentation.\r\n\r\n* Add back missing bullet point\r\n\r\n* Do not say perpetually 1.0 instead say up to maintainers\r\n\r\n* Make it explicity CODEOWNER is for 1 file\r\n\r\n* Make OTel Community membership a requirement because the action we use requires it\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211780ac254a19ac290da4",
    "number": 595,
    "body": "Fixes #592\r\n",
    "head_branch": "issue_592",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove opentelemetry-instrumentation (#595)\n\nFixes #592"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211780ac254a19ac290da5",
    "number": 594,
    "body": "Fixes #592",
    "head_branch": "issue_592",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211781ac254a19ac290da6",
    "number": 593,
    "body": "This package will be moved to the core repo.\r\nFixes #592\r\n",
    "head_branch": "issue_592",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211782ac254a19ac290da7",
    "number": 588,
    "body": "# Description\r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python/issues/1931",
    "head_branch": "note",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Make it explicit to install distro to get auto-instrumentation working (#588)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211783ac254a19ac290da8",
    "number": 587,
    "body": "# Description\r\n\r\nAn important change that went into Core was the update to the semantic conventions https://github.com/open-telemetry/opentelemetry-python/pull/1946. Instrumentations usually rely on it indirectly through the `opentelemetry-sdk`, so to continue passing the CI in Contrib we need to bump the version.\r\n\r\nPointing to this commit: https://github.com/open-telemetry/opentelemetry-python/tree/bb41b81093d4010dadb233f146e8ba04973ec5a3\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- CI tests will show it works\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "update-semantic-conventions-commit",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211784ac254a19ac290da9",
    "number": 586,
    "body": "# Description\r\n\r\nThis PR adds Resource Detectors to automatically populate attributes under the `resource` namespace of every span. The included Resource Detectors are for the following AWS Service:\r\n* AWS Lambda\r\n* AWS Beanstalk\r\n* AWS EC2\r\n* AWS ECS\r\n* AWS EKS\r\n\r\nThis is similar to packages already available on [OpenTelemetry JavaScript](https://github.com/open-telemetry/opentelemetry-js/tree/main/packages/opentelemetry-resource-detector-aws) and [OpenTelemetry Java](https://github.com/open-telemetry/opentelemetry-java/tree/main/sdk-extensions/aws/src/main/java/io/opentelemetry/sdk/extension/aws/resource).\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- All `ResourceDetectors` have unit tests to verify file reading/API conformance\r\n- For all `ResourceDetectors`, I was able to run OTel Python on these services and verify that the spans are populated with the right attributes.\r\n- Beanstalk + EKS had additional non-obvious steps so for those I added links in the docstring!\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "add-aws-resource-detectors-to-extension",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add AWS resource detectors to extension package (#586)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211785ac254a19ac290daa",
    "number": 585,
    "body": "",
    "head_branch": "release/1.4.0-0.23b0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211786ac254a19ac290dab",
    "number": 584,
    "body": "",
    "head_branch": "release/1.4.0-0.23b0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211787ac254a19ac290dac",
    "number": 583,
    "body": "Fixes #582",
    "head_branch": "issue_582",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use basename to get package name (#583)\n\nFixes #582"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211787ac254a19ac290dad",
    "number": 581,
    "body": "# Description\r\n`getattr` throws `AttributeError` if named attribute doesn't exist. \r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python/issues/1948\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Manually tested with Django 2.1\r\n",
    "head_branch": "route-attr-bug",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix AttributeError: `ResolverMatch` object has no attribute `route` (#581)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211788ac254a19ac290dae",
    "number": 580,
    "body": "",
    "head_branch": "release/1.4.0-0.23b0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211789ac254a19ac290daf",
    "number": 579,
    "body": "",
    "head_branch": "release/1.4.0.dev0-0.23.dev0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621178aac254a19ac290db0",
    "number": 577,
    "body": "Fixes https://github.com/open-telemetry/opentelemetry-python-contrib/issues/554\r\n\r\nInstead of wrapping `send`, replace `client` classes with instrumented versions, similar to [flask](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/instrumentation/opentelemetry-instrumentation-flask/src/opentelemetry/instrumentation/flask/__init__.py#L187).",
    "head_branch": "httpx",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Refactor httpx instrumentation (#577)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621178bac254a19ac290db1",
    "number": 576,
    "body": "# Description\r\n\r\nThis PR implements request and response hooks for the remaining web framework instrumentations excluding the `requests` instrumentation (see notes). These hooks enable users to customize behavior (ex: update span name), record additional information, and/or allow injecting tracing-related data from incoming/outgoing requests/responses. Hooks were implemented in line with what was previously implemented in other instrumentations as well as what was specified in issue #408.\r\n\r\nAny previous usage of a span_name or span_detail callback was removed as its functionality of customizing a span_name is achievable through request/response_hooks.\r\n\r\nAdditionally, in the asgi instrumentation the existing `span_details_callback` was kept and renamed to `default_span_details`. This is because the FastAPI and Starlette instrumentation, which utilizes the asgi framework, requires **all created spans** to use FastAPI/Starlette routes as the span name. This function essentially provides the ability to configure the default span name that all spans would use.\r\n\r\nThis PR fixes issues #135, #136, #412  in addition to implementing hooks for the **asgi** and **aiohttp-client** instrumentations.\r\n\r\n## Type of change\r\n\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n\r\nAny previous usage of span_name modifications would not work. Instead, implemented request and response hooks should be utilized.\r\n\r\n# How Has This Been Tested?\r\n\r\nAn additional test called `test_hooks` was implemented in each of the updated instrumentations: aiohttp-client, asgi, fastapi, starlette, urllib, urllib3. Tests were executed locally using tox.\r\n\r\n## Notes\r\n1. Hooks were not implemented for the request instrumentation #411. This is because the wrapper for `Session.request` provides no ability to access a request-like object which is necessary for a `request_hook` so this instrumentation was left for further discussion.\r\n2. In the Starlette and FastAPI instrumentations, the asynchronous function [`wrapped_recieve()`](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/instrumentation/opentelemetry-instrumentation-asgi/src/opentelemetry/instrumentation/asgi/__init__.py#L218) is never invoked so a receive_span is never created. This means that the `client_request_hook` is never called and thus this was not tested in the Starlette and FastAPI instrumentations. However, this functionality is tested in the asgi framework and is deemed to work.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "add-remaining-hooks",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add hooks for aiohttp, asgi, starlette, fastAPI, urllib, urllib3 (#576)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621178cac254a19ac290db2",
    "number": 571,
    "body": "# Description\r\n\r\nSmall PR to enforce that only one distro be installed when trying to run auto instrumentation.\r\n\r\nAdditionally, checks that the `Configurator` that is loaded automatically is a derived class of `BaseConfigurator`. The idea is that `Configurator`s should come from distros and every distro should provide one. (Even if they just subclass the `opentelemetry-sdk` package Configurator which does a pretty good configuration).\r\n\r\nFollow up to: https://github.com/open-telemetry/opentelemetry-python-contrib/issues/551\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nUnfortunately I can't add unit tests because if you import functions from `sitecustomize.py` it will try to run the whole file and auto instrument which we can't do in a testing environment for now...\r\n\r\nBut I did confirm locally that an error is thrown _only_ if multiple distros are installed:\r\n\r\n```\r\n$ OTEL_RESOURCE_ATTRIBUTES=service.name=my_auto_app \\\r\nOTEL_EXPORTER_OTLP_INSECURE=True \\\r\nOTEL_EXPORTER_OTLP_ENDPOINT=localhost:4317 \\\r\nLISTEN_ADDRESS=127.0.0.1:8080 \\\r\nopentelemetry-instrument python3 auto-instrumentation/flask/application.py\r\n\r\nMultiple distros were found: (opentelemetry.distro,opentelemetry.distro_aws,opentelemetry.distro_test). Only one should be installed.\r\nFailed to auto initialize opentelemetry\r\nTraceback (most recent call last):\r\n  File \"/Users/enowell/git/opentelemetry-python-contrib/opentelemetry-instrumentation/src/opentelemetry/instrumentation/auto_instrumentation/sitecustomize.py\", line 132, in initialize\r\n    distro = _load_distros()\r\n  File \"/Users/enowell/git/opentelemetry-python-contrib/opentelemetry-instrumentation/src/opentelemetry/instrumentation/auto_instrumentation/sitecustomize.py\", line 45, in _load_distros\r\n    raise RuntimeError(\"Cannot Auto Instrument with multiple distros installed.\")\r\nRuntimeError: Cannot Auto Instrument with multiple distros installed.\r\n * Serving Flask app \"create_flask_app\" (lazy loading)\r\n * Environment: production\r\n   WARNING: This is a development server. Do not use it in a production deployment.\r\n   Use a production WSGI server instead.\r\n * Debug mode: on\r\n * Running on http://127.0.0.1:8080/ (Press CTRL+C to quit)\r\n```\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n~- [ ] Unit tests have been added~ See comment about testing above.\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "enforce-one-distro-and-configurator",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621178dac254a19ac290db3",
    "number": 570,
    "body": "# Description\r\n\r\nThis PR fixes the `service_name` resolution for the datadog exporter. The order of operations here is:\r\n\r\n1. Resource attribute `service.name`\r\n2. User supplied datadog `service`\r\n\r\nHowever, in practice due to the work done in this PR: https://github.com/open-telemetry/opentelemetry-python/pull/1480\r\n\r\nThe resource attribute resolution will provide a default resource service.name of \"unknown_service\" in the event no resource attribute has been set for `service.name`. This means that even when a user does supply a fallback datadog `service` it will never be discovered beacuse the default `\"unknown_service\"` will take precedence. This PR updates the datadog exporter to explicitly check if a default `unknown_service` is being used for resource attribute `service.name` and if it does, allows the datadog supplied `service` to override it. \r\n\r\nFixes # (issue)\r\n\r\nInternall bug reports impacting end users\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "datadog_fix_env_var",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[exporter/datadog]: fix service name resolution (#570)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621178eac254a19ac290db4",
    "number": 569,
    "body": "# Description\r\n\r\nThis adds instrumentation support for [aioredis](https://github.com/aio-libs/aioredis-py). It replicates the functionality of the existing `redis` instrumentation.  \r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "aioredis",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621178fac254a19ac290db5",
    "number": 568,
    "body": "# Description\r\n\r\nThis adds support for SQLAlchemy 1.4. SQLAlchemy 1.4 (and ultimately SA 2.0) introduces a new async variant of the Engine and Session classes (called AsyncEngine and AsyncSession respectively). More details are available at https://docs.sqlalchemy.org/en/14/orm/extensions/asyncio.html\r\n\r\nThe current implementation uses thread locals to maintain a mapping between spans and threads. As thread locals are not available in an async/await environment this approach does not support the new AsyncEngine. \r\n\r\nBy attaching the span to the execution context state we avoid any interaction with concurrency primitives and instead rely on SQLAlchemy's underlying implementation. \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nThis uses the existing test suite for SQLAlchemy + an additional test to cover the async engine. \r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "sqlalchemy-14",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add support for SQLAlchemy 1.4 (#568)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211790ac254a19ac290db6",
    "number": 567,
    "body": "# Description\r\n\r\nThis changes the dependency for contrib packages to match the major version for API and SDK packages. This allows users more freedom to use contrib packages with various versions, including experimental ones.\r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python/issues/1924\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n",
    "head_branch": "codeboten/unpin-api-sdk",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "updating dependency for api/sdk to major version  (#567)\n\n\r\nCo-authored-by: Leighton Chen <lechen@microsoft.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211790ac254a19ac290db7",
    "number": 566,
    "body": "# Description\r\n\r\nQuick PR to change the name of the entry points for the `opentelemetry-sdk-extension-aws` package. They have been updated to be `xray` instead of `aws_xray` so we make this change just for consistency with other languages.\r\n\r\nFixes #565 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nShould not need more tests since it doesn't change any code, only changes how the package is used.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n~- [ ] Unit tests have been added~\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "update-aws-entry-points",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update AWS entry points to match spec (#566)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211791ac254a19ac290db8",
    "number": 563,
    "body": "# Description\r\n\r\nI noticed that if I instrument _both_ `urllib3` and `botocore` that I will get 2 traces (e.g. S3 and s3.amazon.com) when I should only get 1.\r\n\r\nBefore this fix:\r\n\r\n<img width=\"609\" alt=\"Screen Shot 2021-07-02 at 2 40 58 PM\" src=\"https://user-images.githubusercontent.com/23139455/124332181-b7559e00-db45-11eb-90dc-dd7052adc8c8.png\">\r\n\r\n\r\nAfter this fix:\r\n\r\n<img width=\"609\" alt=\"Screen Shot 2021-07-02 at 2 40 34 PM\" src=\"https://user-images.githubusercontent.com/23139455/124331822-e61f4480-db44-11eb-82ce-81033bb11d20.png\">\r\n\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nThe first way I thought to write a test for this would be to create an instance of the `urllib3` `Instrumentor` and prove that only 1 trace gets created, but since this is a common pattern among all the instrumentation libraries I didn't add it.\r\n\r\nLet me know if this would be useful though!\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n~- [] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "suppress-downstream-botocore",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Suppress botocore downstream instrumentation like urllib3 (#563)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211792ac254a19ac290db9",
    "number": 562,
    "body": "The `RequestsInstrumentor` contained some dead code from an early metrics implementation that in certain situations failed with an `AttributeError`. The `AttributeError` happened when trying to determine the HTTP flavor from the `raw.version` attribute on the returned `Response` object. \r\nBy default, the `raw` attribute is an `urllib3` response that has the `version` attribute. However, `requests` allows mounting custom [transport adapters](https://docs.python-requests.org/en/master/user/advanced/#transport-adapters) for certain URLs. \r\nA custom adapter can return a `Response` where the `raw` object isn't an `urllib3` response and the version attribute might not be present. Thus, the `RequestsInstrumentor` could run into an `AttributeError`.\r\n\r\nThis change removes the dead metrics code.\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nAdditional unit test to verify that the `RequestsInstrumentor` works with custom transport adapters.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n",
    "head_branch": "fix-requests-custom-adapters",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix RequestsInstrumentor for custom transport adapters (#562)\n\n* Fix RequestsInstrumentor for custom transport adapters\r\nremove dead/leftover code from an early metrics implementation which\r\ntried to access the raw.version attribute on the response object.\r\nThe 'version' attribute might not be present in every case, especially\r\nwhen custom transport adapters are used."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211793ac254a19ac290dba",
    "number": 560,
    "body": "# Description\r\n\r\n\r\nAiopg latest version has breaking changes in its internal object.\r\nIt breaks the build in default branch.\r\nI have fixed the version here to make the build pass first.\r\nIt has a break changes in its API so we may need a further discussion on how to handle this case.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix-aiopg-integration",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Require aiopg to be less than 1.3.0 (#560)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211794ac254a19ac290dbb",
    "number": 559,
    "body": "# Description\r\n\r\nMake gRPC client instrumentor respect `_SUPPRESS_INSTRUMENTATION_KEY`\r\n\r\nFixes # (issue)\r\n#476 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [X] Unit Test added\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this projects\r\n- [ ] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "respect-suppress_instrumentation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Respect suppress instrumentation key in gRPC client (#559)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211795ac254a19ac290dbc",
    "number": 558,
    "body": "# Description\r\n\r\nFollow up to #283 when the `IdGenerator` was moved from the `opentelemetry-api` package to the `opentelemetry-sdk` package. It makes this extension package take a dependency on `opentelemetry-sdk` instead.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nN/A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "aws-extension-sdk-dependency",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "AWS ext depends on SDK IdGenerator (#558)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211796ac254a19ac290dbd",
    "number": 557,
    "body": "# Description\r\n\r\ndocs-requirements.txt was missing an important dependency at build time.\r\n\r\nFixes #552 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "codeboten/552",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix missing dep in docs build (#557)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211797ac254a19ac290dbe",
    "number": 556,
    "body": "# Description\r\nAdded steps to enable requests instrumentation (currently one has to look to integration tests to see how it has to be done)\r\n\r\n## Type of change\r\n\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\ncreated sample app and saw requests instrumentation tracking span\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add configuration to requests instrumentation readme (#556)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211797ac254a19ac290dbf",
    "number": 555,
    "body": "# Description\r\n\r\nAccording to the [specs for HTTP spans][1], `http.url` MUST NOT contain credentials. This change adds a test case to ensure that they are not in the URL attribute.\r\n\r\nFor code clarity we rename the type `RawURL` (a low-level tuple) to avoid confusion with `httpx.URL` (a high-level object). This is the same naming used in httpx internals.\r\n\r\n[1]: https://github.com/open-telemetry/opentelemetry-specification/blob/main/specification/trace/semantic_conventions/http.md#common-attributes\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nTested locally.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Unit tests have been added\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211798ac254a19ac290dc0",
    "number": 549,
    "body": "Fixes https://github.com/open-telemetry/opentelemetry-python-contrib/issues/439\r\nWe use `_is_instrumented_by_opentelemetry` for all functionality involving indicating whether a component has been instrumented. This is the text that should be used for any context variable/property that is used revolving around determining whether an instrumentation is already instrumented or not.\r\n\r\nAnother thing to note is the relationship between `instrument()` and `instrument_app`/`instrument_connection()` etc.\r\n`instrument_X()` should take priority over `instrument()`, i.e. if `uninstrument_app(app)` is called after `instrument()`, `app` should produce no telemetry.\r\n\r\nAs well, calling `instrument_app(app)` after `instrument()` should not produce double telemetry.\r\n\r\nAlso a bunch of other consistency-based changes:\r\n\r\n1. Made all `instrument/uninstrument_X` static methods, where `X` is a component\r\n2. fastapi - added `uninstrument_app`\r\n3. Changed `warning` to `error` on dependency conflict for `instrument()`\r\n",
    "head_branch": "instr",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Consistent way of not instrumenting multiple times (#549)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211799ac254a19ac290dc1",
    "number": 545,
    "body": "# Description\r\n\r\n`opentelemetry-instrumentation-flask` uses `flask.Flask` to instrument the `flask` package. Initially instrumentation worked for `flask~=1.0`. About a month ago, [Flask 2.0 was released](https://flask.palletsprojects.com/en/2.0.x/changes/#version-2-0-0) and thankfully our instrumentation still works with it!\r\n\r\nWe need to manually update `package.py` to indicate that our instrumentation still works **for auto-instrumentation**. Auto-instrumentation will only instrumentation packages _and versions_ which match what we have in `instrumentations/`.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nThe packages found by Auto Instrumentation can be found by running `opentelemetry-bootstrap` after installing `pip opentelemetry-instrumentation`.\r\n\r\n## Before the change:\r\n\r\nIf you have `pip install flask~=1.0` then running `opentelemetry-bootstrap` returns at least:\r\n\r\n```\r\nopentelemetry-instrumentation-flask==0.22b0\r\n```\r\n\r\nIf you have `pip install flask ~=2.0` then running `opentelemetry-bootstrap` returns nothing.\r\n\r\n## After the change:\r\n\r\nBoth `pip install flask~=1.0` and `pip install flask~=2.0` will make running `opentelemetry-bootstrap` return at least:\r\n\r\n```\r\nopentelemetry-instrumentation-flask==0.22b0\r\n```\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "bump-flask-instrumentation-compatability",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Include Flask 2.0 as compatible with existing flask instrumentation (#545)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621179aac254a19ac290dc2",
    "number": 544,
    "body": "# Description\r\n\r\nThis PR fixes issue #445. I check if if an active span is present in the current context by calling `opentelemetry.trace.get_current_span()`. If one is found, an internal span is created and the span found is used as the parent. If one is not found, a server span is created and the remote span context from the incoming request is used as a parent.\r\n\r\nI used either this logic for all of the server instrumentations that create server spans: Falcon, Flask, Django, Pyramid, Tornado, WSGI, and ASGI. There are references to the issue that mention that FastAPI and Starlette also create server spans, but I could not find where this occurs in the opentelemetry-python-contrib repo. If someone could point out where they are created, I can add the logic I used for the other instrumentations. \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ✅ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n     -This feature causes server spans to be only created conditionally, so at times existing functionality will not work as expected. \r\n\r\n\r\n# How Has This Been Tested?\r\n\r\nAll the instrumentation tests were run and passed successfully. \r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ✅ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ✅ ] Followed the style guidelines of this project\r\n- [ ✅ ] Changelogs have been updated\r\n- [ ✅ ] Unit tests have been added\r\n- [ ✅ ] Documentation has been updated\r\n",
    "head_branch": "checking-parent-spans-current-context",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621179bac254a19ac290dc3",
    "number": 543,
    "body": "# Description\r\nFixes #541\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "Use-psycopg2-for-dependency-instead",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update the psycopg2 dependency (#543)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621179cac254a19ac290dc4",
    "number": 542,
    "body": "Also fix dependabot alert about fastAPI",
    "head_branch": "docs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix tox build (#542)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621179dac254a19ac290dc5",
    "number": 538,
    "body": "# Description\r\n\r\nThis PR fixes issue [#367](https://github.com/open-telemetry/opentelemetry-python-contrib/issues/367) in which a new specification was established such that http.url, a span attribute, must not contain username or password information for security purposes. This would ensure that URLs passed in the form of `https://username:password@www.example.com/` would result in a http span attribute value of `https://www.example.com/`.\r\n\r\nThis issue was fixed by implementing an additional util function in `util/open-telemetry-http` called `remove_url_credentials(url: str) -> str`. This function utilizes the `urllib.parse` module to cleanly strip a username and password from a given url if present. This fix was applied to the following instrumentations: aiohttp-client, asgi, requests, tornado, urllib, and wsgi. Note that the current implementation of the urllib3 instrumentation would not process the username and password of a url so this logic was not needed.\r\n\r\n## Type of change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nAn additional test called `test_credential_removal` was provided in every instrumentation that sets the `HTTP_URL` attribute. This includes the instrumentations aiohttp-client, asgi, requests, tornado, urllib, urllib3, and wsgi. Tests were run using tox.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "ensure-clean-httpURL",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Ensure clean http url (#538)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621179eac254a19ac290dc6",
    "number": 537,
    "body": "Adding a check to see if the host_port is empty. Previously, this used to throw ValueError exception if host_port is empty.\r\n\r\n# Description\r\n\r\nAdding a defensive a check to see if host_port is empty to avoid the ValueError exception being raised.\r\n\r\nFixes #532 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n- [ ] Test A\r\n\r\nTest program:\r\n```\r\nimport web\r\nfrom time import sleep\r\nfrom opentelemetry import trace\r\nfrom opentelemetry.sdk.trace import TracerProvider\r\nfrom opentelemetry.sdk.trace.export import (\r\n    ConsoleSpanExporter,\r\n    SimpleSpanProcessor,\r\n)\r\nfrom opentelemetry.instrumentation.wsgi import OpenTelemetryMiddleware\r\nfrom cheroot import wsgi\r\n\r\ntrace.set_tracer_provider(TracerProvider())\r\ntrace.get_tracer_provider().add_span_processor(\r\n    SimpleSpanProcessor(ConsoleSpanExporter())\r\n)\r\n\r\n#tracer = trace.get_tracer(__name__)\r\n\r\nurls = (\r\n    '/', 'index'\r\n)\r\nclass index:\r\n    def GET(self):\r\n        return \"Hello, world!\"\r\n\r\nif __name__ == \"__main__\":\r\n  app = web.application(urls, globals())\r\n  func = app.wsgifunc()\r\n\r\n  func = OpenTelemetryMiddleware(func)\r\n\r\n  server = wsgi.WSGIServer(\"/tmp/lr.sock\", func, server_name=\"localhost\")\r\n  server.start()\r\n```\r\n\r\nTest client\r\n```\r\n echo -ne 'GET / HTTP/1.1\\r\\nHost: test.com\\r\\n\\r\\n' | nc -U /tmp/lr.sock\r\nHTTP/1.1 200 OK\r\nTransfer-Encoding: chunked\r\nDate: Mon, 07 Jun 2021 16:53:30 GMT\r\nServer: localhost\r\n\r\nd\r\nHello, world!\r\n0\r\n```\r\nResponse from the server:\r\n\r\n```\r\nOverriding of current TracerProvider is not allowed\r\n{\r\n    \"name\": \"HTTP GET\",\r\n    \"context\": {\r\n        \"trace_id\": \"0xb53b71d4e09f3e00220cbc163f5fadbc\",\r\n        \"span_id\": \"0xcb1d28831d509698\",\r\n        \"trace_state\": \"[]\"\r\n    },\r\n    \"kind\": \"SpanKind.SERVER\",\r\n    \"parent_id\": null,\r\n    \"start_time\": \"2021-06-07T16:53:30.603608Z\",\r\n    \"end_time\": \"2021-06-07T16:53:30.615360Z\",\r\n    \"status\": {\r\n        \"status_code\": \"UNSET\"\r\n    },\r\n    \"attributes\": {\r\n        \"http.method\": \"GET\",\r\n        \"http.server_name\": \"localhost\",\r\n        \"http.scheme\": \"http\",\r\n        \"http.host\": \"test.com\",\r\n        \"http.target\": \"/\",\r\n        \"net.peer.port\": \"\",\r\n        \"http.flavor\": \"1.1\",\r\n        \"http.status_code\": 200\r\n    },\r\n    \"events\": [],\r\n    \"links\": [],\r\n    \"resource\": {\r\n        \"telemetry.sdk.language\": \"python\",\r\n        \"telemetry.sdk.name\": \"opentelemetry\",\r\n        \"telemetry.sdk.version\": \"1.0.0\",\r\n        \"service.name\": \"unknown_service\"\r\n    }\r\n}\r\n{\r\n    \"name\": \"HTTP GET\",\r\n    \"context\": {\r\n        \"trace_id\": \"0xb53b71d4e09f3e00220cbc163f5fadbc\",\r\n        \"span_id\": \"0xcb1d28831d509698\",\r\n        \"trace_state\": \"[]\"\r\n    },\r\n    \"kind\": \"SpanKind.SERVER\",\r\n    \"parent_id\": null,\r\n    \"start_time\": \"2021-06-07T16:53:30.603608Z\",\r\n    \"end_time\": \"2021-06-07T16:53:30.615360Z\",\r\n    \"status\": {\r\n        \"status_code\": \"UNSET\"\r\n    },\r\n    \"attributes\": {\r\n        \"http.method\": \"GET\",\r\n        \"http.server_name\": \"localhost\",\r\n        \"http.scheme\": \"http\",\r\n        \"http.host\": \"test.com\",\r\n        \"http.target\": \"/\",\r\n        \"net.peer.port\": \"\",\r\n        \"http.flavor\": \"1.1\",\r\n        \"http.status_code\": 200\r\n    },\r\n    \"events\": [],\r\n    \"links\": [],\r\n    \"resource\": {\r\n        \"telemetry.sdk.language\": \"python\",\r\n        \"telemetry.sdk.name\": \"opentelemetry\",\r\n        \"telemetry.sdk.version\": \"1.0.0\",\r\n        \"service.name\": \"unknown_service\"\r\n    }\r\n}\r\n```\r\n\r\n# Does This PR Require a Core Repo Change?\r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "patch-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update __init__.py (#537)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621179eac254a19ac290dc7",
    "number": 536,
    "body": "# Description\r\n\r\nWhen calling the GRPC client with `future()`, the client fails as the context object is re-entered during the asynchonous callback. See `test_unary_unary_future`. This PR fixes that by using lower level function calls to control the re-entry of context during the synchronous and asynchonous bits.\r\n\r\n## Type of change\r\nBug fix\r\n\r\n# How Has This Been Tested?\r\n\r\n-  `tox -e test-instrumentation-grpc test_client_interceptor.py::TestClientProto::test_unary_unary_future`\r\n\r\n# Does This PR Require a Core Repo Change?\r\nNo.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\nFollowed the style guidelines of this project\r\nUnit tests have been added\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix asynchonous unary call traces (#536)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621179fac254a19ac290dc8",
    "number": 535,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\nhttps://github.com/open-telemetry/opentelemetry-python-contrib/issues/534\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117a0ac254a19ac290dc9",
    "number": 533,
    "body": "# Description\r\n\r\nNew-style middlewares were [introduced][django_1_10_changelog] in Django `1.10`, and also `settings.MIDDLEWARE_CLASSES` was [removed][django_2_0_changelog] in Django 2.0.\r\n\r\nThis change migrates the Django middleware to conform with the new style, from Django `2.0` onwards. This is useful because it will help us solve the pending issue in https://github.com/open-telemetry/opentelemetry-python-contrib/pull/391.\r\n\r\nBy having a single entrypoint to the middleware, `__call__`, which is [wrapped with `sync_to_async` just once][call_wrapped] for async requests, we avoid the [issue][asgiref_issue] where a `ContextVar` cannot be reset from a different context.\r\n\r\nWith the current deprecated `MiddlewareMixin` way, both `process_request` and `process_response` were being [wrapped separately with `sync_to_async`][mixin_wrapped], which was the source of the mentioned issue.\r\n\r\nIt's worth mentioning that this change **maintains compatibility with legacy Django versions**.\r\n\r\n[django_1_10_changelog]: https://docs.djangoproject.com/en/3.2/releases/1.10/#new-style-middleware\r\n[django_2_0_changelog]: https://docs.djangoproject.com/en/3.2/releases/2.0/#features-removed-in-2-0\r\n[call_wrapped]: https://github.com/django/django/blob/213850b4b9641bdcb714172999725ec9aa9c9e84/django/core/handlers/base.py#L54-L57\r\n[mixin_wrapped]: https://github.com/django/django/blob/213850b4b9641bdcb714172999725ec9aa9c9e84/django/utils/deprecation.py#L137-L147\r\n[asgiref_issue]: https://github.com/django/asgiref/issues/267\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] `tox -e test-instrumentation-django`\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "django-new-style-middleware",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Migrate Django middleware to new-style (#533)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117a1ac254a19ac290dca",
    "number": 531,
    "body": "# Description\r\n\r\nRun tests on Windows\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Tooling/Dev enchancement\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Updated tests\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] Yes. - Link to PR: https://github.com/open-telemetry/opentelemetry-python/pull/1889\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "windows-ci",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117a2ac254a19ac290dcb",
    "number": 530,
    "body": "# Description\r\n\r\nFixes #529 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "instrumentation-check-dep-conflicts-without-markers",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix auto-instrumentation dependency conflict detection (#530)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117a3ac254a19ac290dcc",
    "number": 528,
    "body": "Also made some changes in release script for running on windows.",
    "head_branch": "chore",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[chore] update main after 0.22b0 release (#528)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117a4ac254a19ac290dcd",
    "number": 527,
    "body": "# Description\r\n\r\nThis should fix the generate scripts on windows.\r\n\r\nAlso running `eachdist format` instead of `black` to format files post-generation.\r\n\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n- [x] Tooling enchancement\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Manually\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "cross-plat-gen-script",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix generate_instrumentation_bootstrap script on windows (#527)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117a4ac254a19ac290dce",
    "number": 526,
    "body": "",
    "head_branch": "release/1.3.0-0.22b0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Release for V1.3.0 and 0.22b0 (#526)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117a5ac254a19ac290dcf",
    "number": 525,
    "body": "Fixes #524",
    "head_branch": "issue_524",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add employer for Diego (#525)\n\nFixes #524"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117a6ac254a19ac290dd0",
    "number": 523,
    "body": "# Description\r\n\r\nAdding a Web.py example for the wsgi instrumentation module.\r\n\r\nFixes #519 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nIt is  a documentation change only.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ * ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ * ] Documentation has been updated\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Adding web.py example (#523)\n\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117a7ac254a19ac290dd1",
    "number": 522,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "test-pr",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117a8ac254a19ac290dd2",
    "number": 521,
    "body": "Fixes #520",
    "head_branch": "issue_520",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix error in license files (#521)\n\nFixes #520"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117a9ac254a19ac290dd3",
    "number": 518,
    "body": "Fixes #517\r\n\r\nThis should fix the lint failure of #515",
    "head_branch": "issue_517",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117aaac254a19ac290dd4",
    "number": 516,
    "body": "# Description\r\n\r\nAdd a new `opentelemetry-instrumentation-all` metapackage that does not ship any code but pulls in all instrumentations maintained by us.\r\n\r\nDepends on #514 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "meta-packages",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117aaac254a19ac290dd5",
    "number": 515,
    "body": "Noticed the tox target was still on python3.8, updating to 3.9",
    "head_branch": "codeboten/update-lint-py39",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "update base version of python to 3.9 (#515)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117abac254a19ac290dd6",
    "number": 514,
    "body": "# Description\r\n\r\nhttps://user-images.githubusercontent.com/46186/120125067-c5c23a00-c1d4-11eb-8476-f7d33da114ed.mp4\r\n\r\n## Details\r\n\r\n- We now automatically generate bootstrap_gen.py file from the list of instrumentations present in the source tree.\r\n- Bootstrap command now uses consumes this auto-generated list instead of keeping it's own local copy.\r\n- We no longer uninstall packages before installing them as instrumentation package no longer specify libraries as dependencies so the edge cases are no longer there.\r\n- We no longer try to install an incompatible version or force upgrade/downgrade an installed version. This used to leave systems in broken states which should happen no more.\r\n- Updated `scripts/prepare_release.py` to generate instrumentation setup.py files and instrumentation list for the bootstrap command.\r\n\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Updated tests\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "generate-instrumentation-list",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Simplify bootstrap and generate code (#514)\n\n- We now automatically generate bootstrap_gen.py file from the list of instrumentations present in the source tree.\r\n- Bootstrap command now uses consumes this auto-generated list instead of keeping it's own local copy.\r\n- We no longer uninstall packages before installing them as instrumentation package no longer specify libraries as dependencies so the edge cases are no longer there.\r\n- We no longer try to install an incompatible version or force upgrade/downgrade an installed version. This used to leave systems in broken states which should happen no more."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117acac254a19ac290dd7",
    "number": 513,
    "body": "# Description\r\n\r\nhttps://docs.djangoproject.com/en/2.2/ref/urlresolvers/#django.urls.ResolverMatch.route\r\n\r\n\"route\" does not exists in ResolverMatch before Django 2.2\r\n\r\nFixes #512 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] it can work in my Django 1.11 project\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix-resolve_match_route",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117adac254a19ac290dd8",
    "number": 511,
    "body": "[opentelemetry-python#1862](https://github.com/open-telemetry/opentelemetry-python/issues/1862)\r\n\r\nA [change in the OTel specification](https://github.com/open-telemetry/opentelemetry-specification/pull/1692/files) requires a new `schema_url` field in the `Resource` class. This change modifies tests which used the old constructor signature. \r\n\r\n## Type of change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nAll `tox` tests were ran on Python 3.9. One test was modified to account for the change in constructor signature.\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [The OTel specification](https://github.com/open-telemetry/opentelemetry-specification) has changed which prompted this PR to update the method interfaces of `opentelemetry-api/` or `opentelemetry-sdk/`\r\n\r\n- [x] Yes. - Link to PR: https://github.com/open-telemetry/opentelemetry-python/pull/1871/ \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated - The documentation doesn't reference the method headers, so there's no update to the documentation.",
    "head_branch": "add-schema_url-attribute",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117aeac254a19ac290dd9",
    "number": 510,
    "body": "",
    "head_branch": "chore",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[Chore] Change main after opentelemetry-instrumentation-tornado hotfix (#510)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117afac254a19ac290dda",
    "number": 509,
    "body": "",
    "head_branch": "hotfix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Hotfix for tornado instrumentation (#509)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117b0ac254a19ac290ddb",
    "number": 508,
    "body": "# Description\r\n\r\nImplements https://github.com/open-telemetry/opentelemetry-python-contrib/issues/501\r\n\r\n## Type of change\r\n\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\nNo.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "aiohttp-server",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117b0ac254a19ac290ddc",
    "number": 507,
    "body": "Fixes https://github.com/open-telemetry/opentelemetry-python-contrib/issues/506\r\n\r\nNot a comprehensive list. Feel free to suggest things that I've missed.",
    "head_branch": "contrib",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add an excerpt in CONTRIBUTING.MD for consistency in instrumentation implementations (#507)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117b1ac254a19ac290ddd",
    "number": 504,
    "body": "\r\n# Description\r\n\r\nTornado will only set Status description if the accompanying status_code\r\nis an error status.\r\n\r\nFixes: #500 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "fix-tornado-set-span",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix tornado instrumentation's usage of Span Status (#504)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117b2ac254a19ac290dde",
    "number": 503,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "catch-bad-span-status",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117b3ac254a19ac290ddf",
    "number": 502,
    "body": "# Description\r\n\r\nThis PR makes the corresponding changes from otel-python [open-telemetry/opentelemetry-python#1372](https://github.com/open-telemetry/opentelemetry-python/pull/1853) in the contrib to implement `create_key` functionality as noted [here](https://github.com/open-telemetry/opentelemetry-python/issues/1737).\r\n\r\n# How Has This Been Tested?\r\n\r\n`tox` was ran to ensure the new and existing unit tests all pass.\r\n",
    "head_branch": "context-key-contrib",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add create context key to contrib (#502)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117b4ac254a19ac290de0",
    "number": 499,
    "body": "# Description\r\n\r\nThis PR ensures trace processing is closed only after tornado's on_finish method is called\r\n\r\nFixes #495 \r\n\r\n## Type of change\r\n-  [*] Bug fix (non-breaking change which fixes an issue)\r\n\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Reorder on_finish call order to correctly instrument all tornado work done during a request (#499)\n\nCo-authored-by: alrex <aboten@lightstep.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117b5ac254a19ac290de1",
    "number": 497,
    "body": "# Description\r\n\r\nFixes #496 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [ ] Manually\r\n",
    "head_branch": "codeboten/fix-496",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "fix build script issue (#497)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117b6ac254a19ac290de2",
    "number": 494,
    "body": "",
    "head_branch": "codeboten/bump-versions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[chore] bump 1.3.0.dev0 & 0.22.dev0 versions (#494)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117b7ac254a19ac290de3",
    "number": 493,
    "body": "",
    "head_branch": "release/1.2.0-0.21b0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "prepare 0.21b0 release (#493)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117b7ac254a19ac290de4",
    "number": 492,
    "body": "# Description\r\n\r\nFixes #491 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [ ] Tested the entrypoint manually\r\n\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n",
    "head_branch": "fix-491",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix entrypoint for ottrace propagator (#492)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117b8ac254a19ac290de5",
    "number": 489,
    "body": "Thanks for all the contributions @hectorhdzg!\r\n",
    "head_branch": "codeboten/update-approvers",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "remove hectorhdzg from approvers (#489)\n\nThanks for all the contributions @hectorhdzg!"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117b9ac254a19ac290de6",
    "number": 488,
    "body": "# Description\r\n\r\nPropagators use the root context as default value for the extract operation. Additionally avoid modifying the context in case there is nothing to extract or the carrier does not hold valid data.\r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python/issues/1765\r\n\r\nFixes also an issue in the `ot-trace` propagator where trace/span id validity was comparing str with int values.\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\nunit tests have been added/adapted\r\n\r\n# Does This PR Require a Core Repo Change?\r\n- [x] No.\r\n\r\n# Checklist:\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "propagator-extract-ctx",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Make propagators conform to spec (#488)\n\n* Make propagators conform to spec\r\n\r\n* do not modify / set an invalid span in the passed context in case\r\n  a propagator did not manage to extract\r\n* in case no context is passed to propagator.extract assume the root\r\n  context as default so that a new trace is started instead of continung\r\n  the current active trace in case extraction fails\r\n* fix also ot-trace propagator which compared int with str trace/span ids\r\n  when checking for validity in extract"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117baac254a19ac290de7",
    "number": 487,
    "body": "# Description\r\n\r\nAdded `format` command to eachdist.py script. This just run black and isort over the entire repository or the provided path via `--path` option.\r\n\r\nUsage:\r\n\r\n```\r\n./scripts/eachdist.py format\r\n```\r\n\r\nor\r\n\r\n```\r\n./scripts/eachdist.py format --path instrumentation/opentelemetry-instrumentation-dbapi\r\n```\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n- [x] Tooling enhancement\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Tested manually\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "format-commands",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added `eachdist.py format` command (#487)\n\nThis just runs black and isort of the entire repository."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117bbac254a19ac290de8",
    "number": 486,
    "body": "# Description\r\nProposal to solve https://github.com/open-telemetry/opentelemetry-python-contrib/issues/375\r\nCurrently, only environment variables are supported to exclude URLs. With this change, the users can pass a list explicitly during the instrumentation, so other sources can be easily plugged in (hardcoded, config files, settings, etc).\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [X] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [X] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A: Instrument the app manually passing the excluded_urls list. Verify that no traces are being generated for those urls.\r\n- [ ] Test B: Instrument app automatically (using instrument). You can pass the explicit_urls list to it so. Verify that no traces are being generated for those urls\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n- [X] Documentation has been updated\r\n",
    "head_branch": "fastapi-excluded_urls",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Enable passing explicit urls to exclude in instrumentation in FastAPI (#486)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117bcac254a19ac290de9",
    "number": 485,
    "body": "Fixes #484\r\n\r\n# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes #484\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "issue_484",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117bdac254a19ac290dea",
    "number": 483,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "action",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117bdac254a19ac290deb",
    "number": 482,
    "body": "",
    "head_branch": "lzchen-patch-1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Add expectation excerpt in contributing.md for instrumentations (#482)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117beac254a19ac290dec",
    "number": 480,
    "body": "# Description\r\n\r\nThis feature allows distros to customize instrumentation initialization when using automatically instrumenting with the `opentelemetry-instrument` command. \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Tested manually\r\n- [x] Added test for newly introduced method \r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes.\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "instrumentation-loader",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Load instrumentors via Distro (#480)\n\nThis commit makes the following changes:\r\n\r\n- Introduces a new `load_instrumentor(EntryPoint) -> None:` with a\r\ndefault implementation method to the `BaseDistro` class.\r\n- The default implementation loads the insrumentor from the provided\r\nentry point and calls applies it without any arguments. (same as before)\r\n- sitecustomize now calls Distro's `load_instrumentor` method to load\r\nand activate an instrumentor instead of doing it directly.\r\n- Added a new `DefaultDistro` implementation which is used if not distro\r\nis found by entry points."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117bfac254a19ac290ded",
    "number": 479,
    "body": "\r\n\r\n# Description\r\n\r\nFixes a typo in the documentation.\r\n\r\n## Type of change\r\n\r\nDocumentation typo\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ X] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ X] Documentation has been updated\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Docs typo fix (#479)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117c0ac254a19ac290dee",
    "number": 478,
    "body": "# Description\r\n\r\nSet the status code on the ASGI server span so that the proper response status code is displayed when exported to something like Azure Monitor\r\n\r\nFixes #427\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Updated the tests to verify the status code is in the server span\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "fix/asgi-status-code",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Set status code on ASGI server span (#478)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117c1ac254a19ac290def",
    "number": 475,
    "body": "# Description\r\n\r\nThis change updates instrumentations to remove the instrumented libraries as install time dependencies. It also adds runtime checks to instrumentations so they don't try to instrument unsupported versions of a library. \r\n\r\nEffectively this means installing instrumentations will not automatically install the instrumented libraries. For example:\r\n\r\n- Installing `opentelemetry-instrumentation-requests` will not install `requests`.\r\n\r\n### Manual instrumentation\r\n- If requests is not installed and a user still attempts to manually instrument requests in code, it'll result in `ImportError`.\r\n- If a version of requests is installed that is not supported by the instrumenation, the instrumentation will be a noop and will log a debug message.\r\n\r\n### Auto instrumentation (via opentelemetry-instrument command)\r\n- If requests is not installed or an incompatible version is installed, the instrumentation will not be used. In fact it won't be imported at all. No errors are raised for missing or incompatible instrumentations when auto-instrumenting.\r\n\r\nUpdated logic is mostly contained in the opentelemetry-instrumentation package. Look at `instrumentors.BaseInsrumentor` and `sitecustomize._load_instrumentors`. Rest of the changes are just about updating packaging/layout for all instrumentations.\r\n\r\nImplements a solution for: https://github.com/open-telemetry/opentelemetry-python/discussions/1729\r\n\r\nIncludes changes from #474. Will get simpler once that is merged.\r\n\r\nBlocks #514 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Unit Test\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "instrumentation-runtime-checks",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Instrumentation runtime checks (#475)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117c2ac254a19ac290df0",
    "number": 474,
    "body": "# Description\r\n\r\nAll instrumentations packages have almost exactly same setup.py files. This commit adds a python script that generates it from a source template. This dramatically reduces the time and effort required to update all instrumentation setup.py files, and also reduces chances of making manual mistakes.\r\n\r\nI'm working on another feature where I needed to update setup.py files for all insrumentations. I'll use this once it is merged.\r\n\r\nAnother alternative is to take out common code as yet another package and add it as a `setup_requires` dependency so it is installed in target envs before setup.py runs but this adds another runtime dependency for users and doesn't give them any benefits. It's also not heavily used in the eco-system so non standard tools (other than pip) may not work well with it.\r\n\r\n## Type of change\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n- [x] Tooling enhancement\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "generate-setuppy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Generate instrumentation packages setup.py files (#474)\n\nAll instrumentations packages have almost exactly same setup.py files.\r\nThis commit adds a python script that generates it from a source\r\ntemplate. This dramatically reduces the time and effort required to\r\nupdate all instrumentation setup.py files, and also reduces chances of\r\nmaking manual mistakes."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117c3ac254a19ac290df1",
    "number": 473,
    "body": "# Description\r\n\r\n`traced_request_attrs` cannot be passed by the instrumentation arguments.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nN/A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix traced_request_attrs (#473)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117c4ac254a19ac290df2",
    "number": 472,
    "body": "Fixes #471\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "issue_471",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use traceflags object (#472)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117c4ac254a19ac290df3",
    "number": 470,
    "body": "",
    "head_branch": "lzchen-patch-1",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Revert typo (#470)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117c5ac254a19ac290df4",
    "number": 469,
    "body": "# Description\r\n\r\nDeleting the cursor reference after execution and in the error handler\r\ninstead of keeping a weak reference.\r\n\r\nFixes #460\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added Docker tests for MSSQL and pyodbc to verify the instrumentation as\r\nworking\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "sqlalchemy-pyodbc-cursor-error",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix pyodbc cursor error in SQLA instrumentation (#469)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117c6ac254a19ac290df5",
    "number": 468,
    "body": "# Description\r\n\r\nI was able to get the test to fail reliably for PostgreSQL by reverting\r\nback the behavior before #315. When going back to the current behavior,\r\nthe test passes fine.\r\n\r\nShould more be done to try to trigger the others\r\nto also log the warning?\r\n\r\nResolves #383 \r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Docker SQLAlchemy test added\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "sqlalchemy-multithreading-test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add SQLAlchemy multithreading test (#468)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117c7ac254a19ac290df6",
    "number": 466,
    "body": "Python 3.9 wasn't being tested in this repo, fixing that.",
    "head_branch": "codeboten/py39",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "add python 3.9 tests (#466)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117c8ac254a19ac290df7",
    "number": 465,
    "body": "Part of https://github.com/open-telemetry/opentelemetry-python/pull/1797",
    "head_branch": "instr",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Move opentelemetry-instrumentation from core (#465)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117c9ac254a19ac290df8",
    "number": 463,
    "body": "",
    "head_branch": "update",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[chore] Update main after 1.1.0 release (#463)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117caac254a19ac290df9",
    "number": 462,
    "body": "",
    "head_branch": "release/0.20b0-auto",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Release for 1.1.0/0.20b0 (#462)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117caac254a19ac290dfa",
    "number": 461,
    "body": "# Description\r\n\r\nThis builds off of the initial idea in [this issue][1] of using the\r\ntransport API in `httpx`. This allows for using [custom transports][2].\r\n\r\nThis allows for manually creating transports to use with individual\r\nclients and for instrumenting all created clients.\r\n\r\nOne issue with this current implementation is that there are few more\r\n[changes coming][3] in 0.18.0 that this will probably want to use. So\r\nmaybe it will make sense to finalize this on that version before\r\nreleasing it. Want to get some eyes on this sooner.\r\n\r\nFixes #263\r\n\r\n## Type of change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nAdded unit tests for the transports used manually and for an instrumentor class\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n\r\n[1]: https://github.com/encode/httpx/issues/1264#issuecomment-732034750\r\n[2]: https://www.python-httpx.org/advanced/#custom-transports\r\n[3]: https://github.com/encode/httpx/pull/1522",
    "head_branch": "feature/httpx-instrumentation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add support for HTTPX instrumentation (#461)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117cbac254a19ac290dfb",
    "number": 459,
    "body": "# Description\r\n\r\nFixes #244(https://github.com/open-telemetry/opentelemetry-python-contrib/issues/244). I think this is ready for review, pretty straightforward, when span status is not `ok` we iterate over events and look for exception info.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nUpdated Unit Tests\r\n\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "update_datadog_exporter_error_tagging",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update datadog exporter error tagging (#459)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117ccac254a19ac290dfc",
    "number": 458,
    "body": "# Description\r\n\r\nImplements context propagation for lambda invoke (botocore) which needs to have the headers as a part of the payload.\r\nAdds tests.\r\nBumps moto to ~2.0 - previous version had issues preventing lambda tests.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- Automated test with moto\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "implement_lambda_invoke_context_propagation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "implements context propagation for lambda invoke + tests (#458)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117cdac254a19ac290dfd",
    "number": 443,
    "body": "Same change as in core to fix https://github.com/open-telemetry/opentelemetry-python/issues/453",
    "head_branch": "codeboten/fix-sphinx-issue",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "no longer pin sphinx (#443)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117ceac254a19ac290dfe",
    "number": 442,
    "body": "# Description\r\nKeep the opentelemetry interceptors in sync with grpc interceptors\r\n\r\nFixes # (issue)\r\nhttps://github.com/open-telemetry/opentelemetry-python-contrib/issues/320\r\nThe discussion on this issue states a more serious refactoring is needed. This fix is to get people unblocked.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\nYes. Updated test cases\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n- [x] Unit tests have been added\r\n",
    "head_branch": "fix_client_interceptors",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Keep client interceptors in sync with grpc client interceptors (#442)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117cfac254a19ac290dff",
    "number": 438,
    "body": "Added examples folder link in the core repo in References section for every instrumentation\r\n\r\nFixes #328 ",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added link to examples folder in each instrumentation (#438)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117d0ac254a19ac290e00",
    "number": 436,
    "body": "# Description\r\n\r\nAdded opt-in support to return traceresponse headers for server instrumentations.\r\n\r\nThis allows users to configure their web apps to inject trace context\r\nas headers in HTTP responses. This is useful when client side apps need\r\nto connect their spans with the server side spans e.g, in RUM products.\r\n\r\nToday the most practical way to do this is to use the `Server-Timing`\r\nheader but in near future we might use the `traceresponse` header as\r\ndescribed here: https://w3c.github.io/trace-context/#trace-context-http-response-headers-format\r\n\r\nAdded trace response propagation support for:\r\n\r\n- Django\r\n- Falcon\r\n- Flask\r\n- Pyramid\r\n- Tornado\r\n\r\n\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added unit tests\r\n- [x] Manual testing\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] Yes. - Link to PR: open-telemetry/opentelemetry-python#1762\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "traceresponse-header-propagation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added opt-in support to return traceresponse headers for server instrumentations. (#436)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117d0ac254a19ac290e01",
    "number": 435,
    "body": "# Description\r\n\r\nAdded trace response headers to Pyramid\r\n\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Unit test\r\n- [x] Manual testing\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] Yes. - Link to PR: open-telemetry/opentelemetry-python#1762\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "pyramid-response-headers",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117d1ac254a19ac290e02",
    "number": 433,
    "body": "# Description\r\n\r\nAdded trace response headers to Tornado\r\n\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Unit test\r\n- [x] Manual testing\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] Yes. - Link to PR: open-telemetry/opentelemetry-python#1762\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "tornado-response-headers",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117d2ac254a19ac290e03",
    "number": 432,
    "body": "# Description\r\n\r\nImplements trace response headers for Falcon similar to what was done for Django in https://github.com/open-telemetry/opentelemetry-python-contrib/pull/395\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Added unit tests\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] Yes. - Link to PR: https://github.com/open-telemetry/opentelemetry-python/pull/1762\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "falcon-trace-response",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117d3ac254a19ac290e04",
    "number": 431,
    "body": "# Description\r\n\r\nImplements trace response headers for Flask similar to what was done for Django in https://github.com/open-telemetry/opentelemetry-python-contrib/pull/395\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Added unit tests\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] Yes. - Link to PR: https://github.com/open-telemetry/opentelemetry-python/pull/1762\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "flask-trace-response",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117d4ac254a19ac290e05",
    "number": 428,
    "body": "Sync up with https://github.com/open-telemetry/opentelemetry-python/pull/1759",
    "head_branch": "use-auto-generated",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Sync with auto generated semantic convention constants (#428)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117d5ac254a19ac290e06",
    "number": 426,
    "body": "# Description\r\n\r\n\r\nAdds support for request and response hooks to Falcon instrumentation. Given how tornado works, we only have a single hook that gets called once per request. It gets passed the active handler instead of request/response objects. \r\n\r\nFixes #132 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added tests\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "tornado-hooks-2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Request/Response hooks for Tornado server and client (#426)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117d6ac254a19ac290e07",
    "number": 425,
    "body": "# Description\r\n\r\n\r\nAdds support for request and response hooks to Falcon instrumentation. Given how tornado works, we only have a single hook that gets called once per request. It gets passed the active handler instead of request/response objects. \r\n\r\nFixes #132 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added tests\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "tornado-hooks",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117d7ac254a19ac290e08",
    "number": 424,
    "body": "# Description\r\n\r\nReplaced WSGI name callback with request/response hooks\r\n\r\nFixes #409 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added test case\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "wsgi-hooks",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Replaced WSGI name callback with request/response hooks (#424)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117d7ac254a19ac290e09",
    "number": 423,
    "body": "Keeping the same filters as in the core repo",
    "head_branch": "codeboten/add-triaged-label",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "add triaged label (#423)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117d8ac254a19ac290e0a",
    "number": 422,
    "body": "# Description\r\n\r\n\r\nAdds support for request and response hooks to Falcon instrumentation. Given how tornado works, we only have a single hook that gets called once per request. It gets passed the active handler instead of request/response objects. \r\n\r\nFixes #132 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added tests\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "tornado-hooks",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117d9ac254a19ac290e0b",
    "number": 421,
    "body": "# Description\r\n\r\nUpdate docstring to describe the expected format of one of the arguments.\r\n\r\nFixes #274\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nNo tests, it's a documentation update.\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [X] Documentation has been updated\r\n",
    "head_branch": "fix-datadog-docstring",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix docstring to clarify data format (#421)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117daac254a19ac290e0c",
    "number": 420,
    "body": "# Description\r\n\r\nThere are a few cases where one needs to dig into `grpc.ServicerContext` objects, and these fields were missing from our wrapper, which can cause issues with implmementation.\r\n\r\nYes, they're private attributes, but there's no way to get the data they hold otherwise, so we should properly map them so our wrapper Context behaves like a real one does.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nThere don't seem to be any test cases which cover this - I only noticed because I have an interceptor that reports exceptions  to Sentry, and so it has to dig into the `grpc.ServicerContext` object for details, rather than wrapping it like we do here.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [X] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "grpc-bugfixes",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update gRPCContext wrapper class (#420)\n\nThere are a few cases where one needs to dig into `grpc.ServicerContext`\r\nobjects, and these fields were missing from our wrapper, which can cause\r\nissues with implmementation."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117dbac254a19ac290e0d",
    "number": 419,
    "body": "Fixes broken links to project in a few READMEs, closes https://github.com/open-telemetry/opentelemetry-python-contrib/issues/323.\r\n\r\nThe same as https://github.com/open-telemetry/opentelemetry-python-contrib/pull/413, except for the metrics branch.",
    "head_branch": "fix-url-metrics",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117dcac254a19ac290e0e",
    "number": 418,
    "body": "# Description\r\n\r\nFixes ASGI default span name for SERVER spans, to be `HTTP <method>`.\r\n\r\nFixes #146.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nUpdated unit tests, executed with `tox -e test-instrumentation-asgi`.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "asgi-default-span-name",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix ASGI instrumentation default span name (#418)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117ddac254a19ac290e0f",
    "number": 417,
    "body": "Updated the CONTRIBUTING document to include steps for running tests locally.\r\n\r\nFixes #414",
    "head_branch": "update-contrib-doc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update CONTRIBUTING document  (#417)\n\nCo-authored-by: alrex <aboten@lightstep.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117deac254a19ac290e10",
    "number": 416,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [X] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\nTested using `tox -e test-instrumentation-flask`, wrote two new tests \r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [X] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "flask_hooks",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[FLASK] added request and response hook  (#416)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117dfac254a19ac290e11",
    "number": 415,
    "body": "# Description\r\n\r\nAdds support for request and response hooks to Falcon instrumentation.\r\n\r\nFixes #137 \r\nFixes #362 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added new tests\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "falcon-request-hooks",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Adds support for request and response hooks to Falcon instrumentation. (#415)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117dfac254a19ac290e12",
    "number": 413,
    "body": "Fixes broken links to project in a few READMEs, closes https://github.com/open-telemetry/opentelemetry-python-contrib/issues/323.",
    "head_branch": "fix-url",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix broken links to projects (#413)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117e1ac254a19ac290e13",
    "number": 407,
    "body": "# Description\r\n\r\nAdd request and response hooks support for Django instrumentation. This allows users to customize a bunch of things. Users can set custom span names, add additional attributes or other information to spans, inject tracing information into responses, etc.\r\n\r\nFixes #138 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Added unit test\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "instrumentation-hooks",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Support request and resposne hooks for Django instrumentation (#407)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117e1ac254a19ac290e14",
    "number": 406,
    "body": "# Description\r\n\r\n`http.status_text` was removed in this spec pr https://github.com/open-telemetry/opentelemetry-specification/pull/972\r\n\r\n",
    "head_branch": "remote-status-text",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove http.status_text from span attributes (#406)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117e2ac254a19ac290e15",
    "number": 404,
    "body": "officially removing toumorokoshi from approvers.\r\n\r\nSee https://github.com/open-telemetry/opentelemetry-python/pull/1744.\r\n\r\nUpon merge of this PR, I will remove myself from the GitHub group.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] Yes. - Link to PR: https://github.com/open-telemetry/opentelemetry-python/pull/1744",
    "head_branch": "feature/goodbye-yusuke",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "removing toumorokoshi from approvers (#404)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117e3ac254a19ac290e16",
    "number": 403,
    "body": "# Description\r\n\r\nContributes to #159 \r\n\r\n",
    "head_branch": "redis-sem-conv",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update redis instrumentation to follow semantic conventions (#403)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117e4ac254a19ac290e17",
    "number": 402,
    "body": "# Description\r\nAn optional tracer provider can be passed to instrumentations to use for creating tracer instances. There is no consistency in instrumentations.\r\n\r\nContributes to #401\r\n",
    "head_branch": "issue-401",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update instrumentations to use tracer_provider for creating tracer if given, otherwise use global tracer provider (#402)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117e5ac254a19ac290e18",
    "number": 400,
    "body": "# Description\r\n\r\nFixed DataDog trace exporter\r\n\r\n`ddtrace` package introduced some breaking changes that break the\r\nDataDog trace exporter. This commit downgrades the dependency to last\r\nknow working version to fix the exporter.\r\n\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "ddtrace-exporter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix DataDog trace exporter (#400)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117e6ac254a19ac290e19",
    "number": 399,
    "body": "# Description\r\n\r\nUpdated tests that relied on unset tracer being a noop tracer instead of a proxy tracer.\r\n\r\nIncludes changes from #400 to make the tests pass.\r\n\r\nFixes #405 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Fixed broken tests due to change in core repo\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Fixed tests\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] Yes. - Link to PR: https://github.com/open-telemetry/opentelemetry-python/pull/1726\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "update-tests-to-account-for-proxy-tracer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Account for ProxyTracerProvider (#399)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117e7ac254a19ac290e1a",
    "number": 398,
    "body": "# Description\r\n\r\nUpon using the SDK class AwsXRayIdGenerator(), I found that the trace_id and span_id generated is in completely wrong format although a correct Xray Documentation was pasted in the python class. A sample implementation in Javascript is here: https://github.com/aws-observability/aws-otel-js/tree/main/packages/opentelemetry-id-generator-aws-xray \r\n\r\nBefore: \r\ntrace_id and span_id gave random numbers \r\n\r\nAfter: \r\ntrace_id is a combination of a 8 hexadecimal digits created from timestamp and 24 random hexadecimal digit as per [aws documentation](https://docs.aws.amazon.com/xray/latest/devguide/xray-api-sendingdata.html#xray-api-traceids)\r\n\r\nspan_id is equivalent to [xray segment id](https://docs.aws.amazon.com/xray/latest/devguide/xray-api-segmentdocuments.html) which is 16 random hexadecimal digits \r\n\r\nFixes # (issue)\r\nFixed format for generating trace id and span id created by AwsXRayIdGenerator()\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] For trace Id, modified test to reconvert the portion of trace_id timestamp from hexadecimal back to int. The rest of the trace_id and span_ids are completely randomized, as such no longer need any specific tests except length. \r\n- [x] Added test to assert trace id and span id length\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117e7ac254a19ac290e1b",
    "number": 397,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "instrumentation-target-dependencies",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117e8ac254a19ac290e1c",
    "number": 396,
    "body": "# Description\r\n\r\nUpdate version to 0.20.dev0\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] Yes. - Link to PR: https://github.com/open-telemetry/opentelemetry-python/pull/1740\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n",
    "head_branch": "codeboten/bump-version-to-1.0.1.dev0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "bump version to 0.20.dev0 (#396)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117e9ac254a19ac290e1d",
    "number": 395,
    "body": "# Description\r\n\r\nAdded opt-in support to return trace response headers from Django.\r\n\r\nThis allows users to configure their Django apps to inject trace context\r\nas headers in HTTP responses. This is useful when client side apps need\r\nto connect their spans with the server side spans e.g, in RUM products.\r\n\r\nToday the most practical way to do this is to use the `Server-Timing`\r\nheader but in near future we might use the `traceresponse` header as\r\ndescribed here: https://w3c.github.io/trace-context/#trace-context-http-response-headers-format\r\n\r\nAs a result the implementation does not use a hard-coded header and\r\ninstead let's the users pick one.\r\n\r\nThis can be done by setting the `OTEL_PYTHON_TRACE_RESPONSE_HEADER` to\r\nthe header name that users want to inject in HTTP responses. The option\r\ndoes not have a default value and the feature is disbaled when a env var\r\nis not set.\r\n\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Tested manually\r\n- [x] Added unit tests\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] Yes. - Link to PR: https://github.com/open-telemetry/opentelemetry-python/pull/1762\r\n- [ ] No.\r\n\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "traceresponse-headers",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117eaac254a19ac290e1e",
    "number": 394,
    "body": "# Description\r\n\r\nThis pull request implements instrumentation for the pymssql library (https://pypi.org/project/pymssql/).\r\nIt is basically a copy of the pymysql instrumentation.\r\n\r\n_Still a work-in-progress._\r\n\r\n## Type of change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Ran tox tests\r\n- [x] Tested manually in a python program - verified that traces are properly sent\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated  [PARTIAL] -> I can complete that once the PR is opened and I have an issue number\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "instrument_pymssql",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117ebac254a19ac290e1f",
    "number": 393,
    "body": "Fixes https://github.com/open-telemetry/opentelemetry-python/issues/1618",
    "head_branch": "codeboten/issue-1618",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      " add automation to close stale issues (#393)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117ecac254a19ac290e20",
    "number": 392,
    "body": "# Description\r\n\r\nGRPC instrumentation was not correctly injecting trace context into outgoing requests. This patch fixes the issue.\r\n\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Test manually\r\n- [x] Added unit test\r\n\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "grpc-propagation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix GRPC context propagation (#392)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117edac254a19ac290e21",
    "number": 391,
    "body": "# Description\r\nThis diff adds `asgi` as an extra, and uses its methods if the current request is an `ASGIRequest`. Also adds support for traced request attributes, by retrieving them from request scope headers.\r\n\r\nFixes #165, fixes #185, fixes #280, fixes #334.\r\n\r\n## Type of change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] `tox -e test-instrumentation-django -- -k TestMiddlewareAsgi`\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "django-asgi",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add Django ASGI support (#391)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117eeac254a19ac290e22",
    "number": 388,
    "body": "# Description\r\n\r\nAs the opentelemtry-api has a breaking change in the arguments of the `inject` method, we need to adopt it.\r\n\r\nhttps://github.com/open-telemetry/opentelemetry-python/commit/25edfefd70f2d2fd8f6c6a90293d598a358fbb96#diff-b0320c590cdc029baa73878aad144c5ba225caf819db268eecfbbf13b6bfbb1a\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] I tested it by installing it locally.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix-metadata-inject",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117efac254a19ac290e23",
    "number": 387,
    "body": "# Description\r\n\r\nFixes #386 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n1. Run `./scripts/build.sh`\r\n2. Observe `opentelemetry-propagator-ot-trace-0.19b0.tar.gz` present in the `dist/` folder\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "release-propagators",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Consider propagator folder packages when building (#387)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117efac254a19ac290e24",
    "number": 384,
    "body": "",
    "head_branch": "codeboten/prepare-1.0.0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "preparing 1.0.0/0.19b0 release (#384)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117f0ac254a19ac290e25",
    "number": 381,
    "body": "…le times\r\n\r\n# Description\r\n\r\nFix appearing multiple nested spans when instrumented `aiopg.pool` was used. The reason of the bug was that `pool.acquire` instrumented connection every time. But pool reuses old connections which had already been instrumented. This fix addes checking connection. Instrumenting connection only if it was not instrumented.\r\n\r\nFixes #336\r\n\r\n## Type of change\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nSee added integration test in this PR.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix_336",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix instrumentation of connection when pool.acquire was called multiple times (#381)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117f1ac254a19ac290e26",
    "number": 380,
    "body": "…le times\r\n\r\n# Description\r\n\r\nFix appearing multiple nested spans when instumented `aiopg.pool` was used. The reason of the bug was that `pool.acquire` instrumented connection every time. But pool reuses old connections which had already been instrumented. This fix addes checking connection. Instrumenting connection only if it was not instrumented.\r\n\r\nFixes #372\r\n\r\n## Type of change\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nSee added integration test in this PR.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "issue_336",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117f2ac254a19ac290e27",
    "number": 379,
    "body": "# Description\r\n\r\nImplements keys method in WSGI CarrierGetter (previously a static, empty list was returned)\r\n\r\nFixes #376 \r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nSee the unit test added in this PR.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "wsgi-carrier-keys",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Reimplement the keys method in WSGI CarrierGetter (#379)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117f3ac254a19ac290e28",
    "number": 378,
    "body": "# Description\r\nFix the empty headers use case (ignore instead of throwing an exception) for `OTTracePropagator`.\r\nSee more details in the issue below.\r\n\r\nFixes #377 \r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nSee added unit test in this PR.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "ot-trace-empty-headers",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix the empty headers use case for OTTracePropagator (#378)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117f4ac254a19ac290e29",
    "number": 374,
    "body": "# Description\r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python/pull/1706\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] Yes. - Link to PR: https://github.com/open-telemetry/opentelemetry-python/pull/1706\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "codeboten/deprecate-3.5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "remove python 3.5 support (#374)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117f5ac254a19ac290e2a",
    "number": 372,
    "body": "Fixes #372\r\n\r\n# Description\r\n\r\nRemoves setters and getters from contribs.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [X] Yes. - Link to PR:  https://github.com/open-telemetry/opentelemetry-python/pull/1690\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "issue_371",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Sync with Make setters and getters optional (#372)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117f5ac254a19ac290e2b",
    "number": 370,
    "body": "# Description\r\n\r\nUpdating reference to JaegerExporter in the documentation\r\n\r\nPart of https://github.com/open-telemetry/opentelemetry-python/issues/1604\r\n\r\nSee [PR #1694](https://github.com/open-telemetry/opentelemetry-python/pull/1694) for more details\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Documentation update\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "split-jaeger-package",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "update docs to match new jaeger path (#370)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117f6ac254a19ac290e2c",
    "number": 368,
    "body": "# Description\r\n\r\nThe datadog exporter sometimes attempts to add a \"None\" value to the TraceState, if the\r\ndatadog origin header doesn't exist.\r\n\r\nThis does not cause runtime errors in the most recent opentelemetry\r\nrelease (tracestate protects against an invalid value), but does cause warnings:\r\n\r\nWARNING  opentelemetry.trace.span:span.py:230 Invalid key/value pair (dd_origin, None) found.\r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python-contrib/issues/262#issuecomment-788969716\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nThe existing tests suffice to verify my change didn't affect behavior, aside from the warning.\r\n\r\nI was thinking of adding a log.capture test, but thought it would be overkill.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "feature/remove-datadog-warnings",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "datadog: do not add None tracestate value. (#368)\n\nThe datadog exporter sometimes attempts to add a \"None\" value, if the\r\ndatadog origin header doesn't exist.\r\n\r\nThis does not cause runtime errors in the most recent opentelemetry\r\nrelease (tracestate protects against an invalid value), but does cause warnings:\r\n\r\nWARNING  opentelemetry.trace.span:span.py:230 Invalid key/value pair (dd_origin, None) found."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117f7ac254a19ac290e2d",
    "number": 366,
    "body": "# Description\r\n\r\nUpdating reference to `StatusCode` to use the simpler path.\r\n\r\nRelated to: https://github.com/open-telemetry/opentelemetry-python/issues/1619\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] Yes. - Link to PR: https://github.com/open-telemetry/opentelemetry-python/pull/1681\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Unit tests have been updated\r\n",
    "head_branch": "expose-status-code",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "use StatusCode from trace instead of trace.status (#366)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117f8ac254a19ac290e2e",
    "number": 364,
    "body": "# Description\r\n\r\nReplaces `Tracer.use_span()` with `opentelemetry.trace.use_span()`.\r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python/issues/1630\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Updated existing tests\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] Yes. - Link to PR: https://github.com/open-telemetry/opentelemetry-python/pull/1668\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "update-use_span-usage",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Replaced Tracer.use_span() with opentelemetry.trace.use_span() (#364)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117f9ac254a19ac290e2f",
    "number": 363,
    "body": "Fixes #321\r\n\r\n# Description\r\n\r\nI am not an expert in gRPC, but I _think_ this should fix this issue. I did this:\r\n\r\n1. I created a virtual environment with this:\r\n```\r\nbackcall==0.2.0\r\ndecorator==4.4.2\r\ngrpcio==1.36.0\r\ngrpcio-tools==1.36.0\r\nipdb==0.13.5\r\nipython==7.21.0\r\nipython-genutils==0.2.0\r\njedi==0.18.0\r\n-e git+git@github.com:ocelotl/opentelemetry-python.git@9bf28fb451a85fd9e9a4f2276c3eebd484e55d02#egg=opentelemetry_api&subdirectory=opentelemetry-api\r\n-e git+git@github.com:ocelotl/opentelemetry-python.git@9bf28fb451a85fd9e9a4f2276c3eebd484e55d02#egg=opentelemetry_instrumentation&subdirectory=opentelemetry-instrumentation\r\n-e git+git@github.com:ocelotl/opentelemetry-python-contrib.git@88d8d6e9cab0ce970758ff6acd256f637ebbc368#egg=opentelemetry_instrumentation_grpc&subdirectory=instrumentation/opentelemetry-instrumentation-grpc\r\n-e git+git@github.com:ocelotl/opentelemetry-python.git@9bf28fb451a85fd9e9a4f2276c3eebd484e55d02#egg=opentelemetry_sdk&subdirectory=opentelemetry-sdk\r\nparso==0.8.1\r\npexpect==4.8.0\r\npickleshare==0.7.5\r\nprompt-toolkit==3.0.16\r\nprotobuf==3.15.3\r\nptyprocess==0.7.0\r\nPygments==2.8.0\r\nsix==1.15.0\r\ntraitlets==5.0.5\r\nwcwidth==0.2.5\r\nwrapt==1.12.1\r\n```\r\n2. I cloned the gRPC repo as [per this](https://grpc.io/docs/languages/python/quickstart/#download-the-example)\r\n3. I created this 2 files in `.../grpc/examples/python/helloworld` (both these files are pretty much copy and paste of [this](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/instrumentation/opentelemetry-instrumentation-grpc/src/opentelemetry/instrumentation/grpc/__init__.py#L19-L120):\r\n\r\nserver.py\r\n\r\n``` python\r\nimport logging\r\nfrom concurrent import futures\r\n\r\nimport grpc\r\n\r\nfrom opentelemetry import trace\r\nfrom opentelemetry.instrumentation.grpc import GrpcInstrumentorServer\r\nfrom opentelemetry.sdk.trace import TracerProvider\r\nfrom opentelemetry.sdk.trace.export import (\r\n    ConsoleSpanExporter,\r\n    SimpleSpanProcessor,\r\n)\r\n\r\nimport helloworld_pb2\r\nimport helloworld_pb2_grpc\r\n\r\ntrace.set_tracer_provider(TracerProvider())\r\ntrace.get_tracer_provider().add_span_processor(\r\n    SimpleSpanProcessor(ConsoleSpanExporter())\r\n)\r\n\r\ngrpc_server_instrumentor = GrpcInstrumentorServer()\r\ngrpc_server_instrumentor.instrument()\r\n\r\n\r\nclass Greeter(helloworld_pb2_grpc.GreeterServicer):\r\n    def SayHello(self, request, context):\r\n        return helloworld_pb2.HelloReply(message=\"Hello, %s!\" % request.name)\r\n\r\n\r\ndef serve():\r\n\r\n    server = grpc.server(futures.ThreadPoolExecutor())\r\n\r\n    helloworld_pb2_grpc.add_GreeterServicer_to_server(Greeter(), server)\r\n    server.add_insecure_port(\"[::]:50051\")\r\n    server.start()\r\n    server.wait_for_termination()\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    logging.basicConfig()\r\n    serve()\r\n```\r\n\r\nclient.py\r\n\r\n``` python\r\nimport logging\r\n\r\nimport grpc\r\n\r\nfrom opentelemetry import trace\r\nfrom opentelemetry.instrumentation.grpc import GrpcInstrumentorClient\r\nfrom opentelemetry.sdk.trace import TracerProvider\r\nfrom opentelemetry.sdk.trace.export import (\r\n    ConsoleSpanExporter,\r\n    SimpleSpanProcessor,\r\n)\r\n\r\nimport helloworld_pb2\r\nimport helloworld_pb2_grpc\r\n\r\ntrace.set_tracer_provider(TracerProvider())\r\ntrace.get_tracer_provider().add_span_processor(\r\n    SimpleSpanProcessor(ConsoleSpanExporter())\r\n)\r\n\r\ninstrumentor = GrpcInstrumentorClient().instrument()\r\n\r\n\r\ndef run():\r\n    with grpc.insecure_channel(\"localhost:50051\") as channel:\r\n\r\n        stub = helloworld_pb2_grpc.GreeterStub(channel)\r\n        response = stub.SayHello(helloworld_pb2.HelloRequest(name=\"YOU\"))\r\n\r\n    print(\"Greeter client received: \" + response.message)\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    logging.basicConfig()\r\n    run()\r\n```\r\n\r\nI ran `python server.py` and `python client.py` in separate consoles with the activated virtual environment before and I got this output:\r\n\r\n`python server.py`\r\n\r\n```\r\n{\r\n    \"name\": \"/helloworld.Greeter/SayHello\",\r\n    \"context\": {\r\n        \"trace_id\": \"0xe45b7b876aa4d9651e67e6b09050ef6e\",\r\n        \"span_id\": \"0x5ef0d068dbf136f9\",\r\n        \"trace_state\": \"[]\"\r\n    },\r\n    \"kind\": \"SpanKind.SERVER\",\r\n    \"parent_id\": \"0xe7dbf06ec1c87611\",\r\n    \"start_time\": \"2021-03-03T02:56:16.674987Z\",\r\n    \"end_time\": \"2021-03-03T02:56:16.675061Z\",\r\n    \"status\": {\r\n        \"status_code\": \"UNSET\"\r\n    },\r\n    \"attributes\": {\r\n        \"rpc.system\": \"grpc\",\r\n        \"rpc.grpc.status_code\": 0,\r\n        \"rpc.method\": \"SayHello\",\r\n        \"rpc.service\": \"helloworld.Greeter\",\r\n        \"rpc.user_agent\": \"grpc-python/1.36.0 grpc-c/15.0.0 (linux; chttp2)\",\r\n        \"net.peer.ip\": \"[::1]\",\r\n        \"net.peer.port\": \"35030\",\r\n        \"net.peer.name\": \"localhost\"\r\n    },\r\n    \"events\": [],\r\n    \"links\": [],\r\n    \"resource\": {\r\n        \"telemetry.sdk.language\": \"python\",\r\n        \"telemetry.sdk.name\": \"opentelemetry\",\r\n        \"telemetry.sdk.version\": \"1.0.0.dev0\",\r\n        \"service.name\": \"unknown_service\"\r\n    }\r\n}\r\n```\r\n`python client.py`\r\n```\r\n{\r\n    \"name\": \"/helloworld.Greeter/SayHello\",\r\n    \"context\": {\r\n        \"trace_id\": \"0xe45b7b876aa4d9651e67e6b09050ef6e\",\r\n        \"span_id\": \"0xe7dbf06ec1c87611\",\r\n        \"trace_state\": \"[]\"\r\n    },\r\n    \"kind\": \"SpanKind.CLIENT\",\r\n    \"parent_id\": null,\r\n    \"start_time\": \"2021-03-03T02:56:16.672359Z\",\r\n    \"end_time\": \"2021-03-03T02:56:16.676067Z\",\r\n    \"status\": {\r\n        \"status_code\": \"UNSET\"\r\n    },\r\n    \"attributes\": {\r\n        \"rpc.system\": \"grpc\",\r\n        \"rpc.grpc.status_code\": 0,\r\n        \"rpc.method\": \"SayHello\",\r\n        \"rpc.service\": \"helloworld.Greeter\"\r\n    },\r\n    \"events\": [],\r\n    \"links\": [],\r\n    \"resource\": {\r\n        \"telemetry.sdk.language\": \"python\",\r\n        \"telemetry.sdk.name\": \"opentelemetry\",\r\n        \"telemetry.sdk.version\": \"1.0.0.dev0\",\r\n        \"service.name\": \"unknown_service\"\r\n    }\r\n}\r\nGreeter client received: Hello, YOU!\r\n```\r\n\r\nWithout these changes I would end up getting the error reported in #321 when I ran `client.py`.\r\n\r\nFixes #321\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [X] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "issue_321",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Implement missing context methods (#363)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117faac254a19ac290e30",
    "number": 361,
    "body": "Following https://github.com/open-telemetry/opentelemetry-python/pull/1664",
    "head_branch": "span",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix doc (#361)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117fbac254a19ac290e31",
    "number": 360,
    "body": "Fixes #359\r\n\r\n# Description\r\n\r\nAdds missing dependencies for some instrumentations.\r\n\r\nFixes #359\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "issue_359",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add missing dependencies (#360)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117fcac254a19ac290e32",
    "number": 358,
    "body": "# Description\r\n\r\nAdd wrapt for the gRPC instrumentation\r\n\r\nFixes #357 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "issue_357",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add missing dependency (#358)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117fdac254a19ac290e33",
    "number": 355,
    "body": "# Description\r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python/issues/1638\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] Yes. - Link to PR: https://github.com/open-telemetry/opentelemetry-python/pull/1662\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n",
    "head_branch": "move-getter-setter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "move textmap propagators to opentelemetry.propagators (#355)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117feac254a19ac290e34",
    "number": 354,
    "body": "Follows https://github.com/open-telemetry/opentelemetry-python/pull/1661",
    "head_branch": "rec",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Rename DefaultSpan to NonRecordingSpan (#354)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117feac254a19ac290e35",
    "number": 352,
    "body": "# Description\r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python/issues/1634\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] Yes. - Link to PR: https://github.com/open-telemetry/opentelemetry-python/pull/1656\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Unit tests have been updated\r\n",
    "head_branch": "rename-processors",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "rename simple/batch span processors (#352)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662117ffac254a19ac290e36",
    "number": 351,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211800ac254a19ac290e37",
    "number": 350,
    "body": "Related to https://github.com/open-telemetry/opentelemetry-python/pull/1651",
    "head_branch": "id",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Rename IdsGenerator to IdGenerator (#350)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211801ac254a19ac290e38",
    "number": 349,
    "body": "",
    "head_branch": "update",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove gitter from docs (#349)\n\n\r\nCo-authored-by: alrex <alrex.boten@gmail.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211802ac254a19ac290e39",
    "number": 348,
    "body": "# Description\r\n\r\nFixes #303 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Tested in branch readthedocs build: https://opentelemetry-python-contrib.readthedocs.io/en/fix-docs/\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "fix-docs",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Fix docs build (#348)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211803ac254a19ac290e3a",
    "number": 347,
    "body": "Fixes https://github.com/open-telemetry/opentelemetry-python-contrib/issues/346",
    "head_branch": "release/0.18b1-auto",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Hotfix for previous release (#347)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211804ac254a19ac290e3b",
    "number": 345,
    "body": "# Description\r\n\r\nAdded logging instrumentation to enable log - trace correlation\r\n\r\nThis commit adds a new logging instrumentation. The instrumentation\r\npatches standard library logging module to inject tracing context\r\nvariables (otelSpanID, otelTraceID, otelServiceName) into log record\r\nobjects. It also optionally calls `logging.basicConfig()` and sets a\r\nlogging format that makes use of these vars if instructed by the user.\r\n\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added unit tests\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "logging-correlation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added logging instrumentation to enable log - trace correlation (#345)\n\nThis commit adds a new logging instrumentation. The instrumentation\r\npatches standard library logging module to inject tracing context\r\nvariables (otelSpanID, otelTraceID, otelServiceName) into log record\r\nobjects. It also optionally calls `logging.basicConfig()` and sets a\r\nlogging format that makes use of these vars if instructed by the user."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211804ac254a19ac290e3c",
    "number": 342,
    "body": "# Description\r\n\r\nUpdate contrib modules so that they match with the changes added [here](https://github.com/open-telemetry/opentelemetry-python/pull/1602).\r\n\r\nFixes #332\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [X] Yes. - Link to PR: https://github.com/open-telemetry/opentelemetry-python/pull/1602\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "issue_332",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Sync with Remove time_ns from API (#342)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211805ac254a19ac290e3d",
    "number": 341,
    "body": "",
    "head_branch": "update",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211806ac254a19ac290e3e",
    "number": 340,
    "body": "",
    "head_branch": "util",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update build.sh (#340)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211807ac254a19ac290e3f",
    "number": 338,
    "body": "",
    "head_branch": "version",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[Chore] Update main after 0.18b0 release (#338)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211808ac254a19ac290e40",
    "number": 337,
    "body": "Release 0.18b0 for instrumentations.\r\n\r\nAlso updates all references to core packages to use rc1 version.\r\n\r\nCore release: https://github.com/open-telemetry/opentelemetry-python/pull/1610",
    "head_branch": "release/0.18b0-auto",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "update (#337)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211809ac254a19ac290e41",
    "number": 333,
    "body": "",
    "head_branch": "version",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update main after 1.0.0rc1 release from core (#333)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621180aac254a19ac290e42",
    "number": 331,
    "body": "# Description\r\n\r\nUpdate `opentelemetry.util` paths to make them match with the changes introduced [here](https://github.com/open-telemetry/opentelemetry-python/pull/1599).\r\n\r\nFixes #330\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] Yes. - Link to PR: https://github.com/open-telemetry/opentelemetry-python/pull/1599\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "issue_330",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Sync with Refactor utils (#331)\n\n\r\nCo-authored-by: alrex <aboten@lightstep.com>\r\nCo-authored-by: Aaron Abbott <aaronabbott@google.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621180bac254a19ac290e43",
    "number": 329,
    "body": "",
    "head_branch": "release/0.18b0-auto",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621180cac254a19ac290e44",
    "number": 326,
    "body": "Removing the reference directory, it was confusing to have and there's no clear value.",
    "head_branch": "rm-reference",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "remove reference folder (#326)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621180dac254a19ac290e45",
    "number": 325,
    "body": "Fixes https://github.com/open-telemetry/opentelemetry-python/issues/1576",
    "head_branch": "use-github-discussions",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Update README to link to GitHub Discussions (#325)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621180dac254a19ac290e46",
    "number": 324,
    "body": "# Description\r\n\r\nAs per PR https://github.com/open-telemetry/opentelemetry-python/pull/1560, attributes return a MappingProxy, updating the botocore tests to prevent them from writing the attributes.\r\n\r\nAlso per that PR, the sampler is not exposed through the ReadableSpan interface, updating the datadog exporter to use the sampler set in the tracer_provider instead.",
    "head_branch": "readonly-attrs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update span interface usage (#324)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621180eac254a19ac290e47",
    "number": 319,
    "body": "Fixes #318\r\n\r\n# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [X] Yes. - Link to PR: https://github.com/open-telemetry/opentelemetry-python/pull/1582\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "issue_318",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update util path (#319)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621180fac254a19ac290e48",
    "number": 317,
    "body": "# Description\r\n\r\nThe aiopg builds were hanging. Found a bug reported that aiopg [connections hang](https://github.com/aio-libs/aiopg/issues/275) when failing to resolve localhost, updated the host to 127.0.0.1 instead\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] Yes. - Link to PR: https://github.com/open-telemetry/opentelemetry-python/pull/1578\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project",
    "head_branch": "update-sha",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix failing aiopg tests (#317)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211810ac254a19ac290e49",
    "number": 316,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211811ac254a19ac290e4a",
    "number": 315,
    "body": "# Description\r\n\r\nThis change ensures the SQLAlchemy instrumentation to b thread safe. \r\n\r\nIn tests using Flask with gunicorn and uwsgi we were often getting a \"Trying to end span which has already been ended\" error. After checking we realized that this has to do with the SQLAlchemy `EngineTracer` using one local variable, namely `current_span` to try to track the span of the SQL request. If threading is involved and multiple SQL commands are running at the same time, this breaks as `current_span` will be overwritten before it has been ended. The new span will then be tried to be ended twice.\r\n\r\nTo remedy this, the changes introduce a tracking mechanism over SQLAlchemy cursors, tracking via a weakref dictionary all spans which are currently existing on a cursor level.\r\n\r\nTo still support error handling, we also store the span in a thread local variable to esnure that `_handle_error` can be utilized. This will break if a query is executed in another thread then `_before_cur_exec` has been called. I think that this is highly unlikely to actually outside of an artifical test written happen.\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Run parallel requests on a web server with `ab` executing multiple sql statements in parallel and check jaeger if the instances are recorded as expected.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added (no functionality which can be unit tested)\r\n- [x] Documentation has been updated (no change necessary)\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "sqlalchemy: make sqlalchemy thread safe (#315)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211812ac254a19ac290e4b",
    "number": 314,
    "body": "Fixes #313 ",
    "head_branch": "fix-docker-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "update requirements for snappy (#314)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211813ac254a19ac290e4c",
    "number": 312,
    "body": "Core pr: https://github.com/open-telemetry/opentelemetry-python/pull/1568\r\n\r\nAs part of the discussion [here](https://github.com/open-telemetry/opentelemetry-python/issues/1547#issuecomment-768592654)",
    "head_branch": "remove-metrics",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove metrics from main branch  (#312)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211813ac254a19ac290e4d",
    "number": 310,
    "body": "# Description\r\n\r\nAs per the spec, a Resource is immutable, the boto instrumentation was changing this resource. This PR fixes this. This wass discovered as part of the work to \r\n\r\nFixes #309\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] Yes. - Link to PR: https://github.com/open-telemetry/opentelemetry-python/pull/1560\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been updated\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "readable-span",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Ensure resources are not mutated (#310)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211814ac254a19ac290e4e",
    "number": 308,
    "body": "# Description\r\n\r\nMade Asgi Instrumentor retrieve header keys in lower case.\r\n\r\nFixes #307 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\ntox -e test-instrumentation-asgi\r\n\r\nAdded new test cases in test_getter.py\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/main/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Case insensitive header key retrieval for asgi instrumentation (#308)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211815ac254a19ac290e4f",
    "number": 306,
    "body": "Fixes #305 ",
    "head_branch": "rename-main",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "update references to main (#306)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211816ac254a19ac290e50",
    "number": 302,
    "body": "# Description\r\n\r\nAdds propagator for OpenTracing.\r\n\r\nFixes #294 \r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [X] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/master/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "issue_294",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add OpenTracing propagator (#302)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211817ac254a19ac290e51",
    "number": 301,
    "body": "# Description\r\n\r\nFixes #300 \r\n\r\n## Type of change\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n",
    "head_branch": "remove-component-semconv-attr",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove 'component' span attribute in instrumentations (#301)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211818ac254a19ac290e52",
    "number": 299,
    "body": "# Description\r\n\r\nAdds instrumentation support for the urllib3 library.\r\n\r\n## Type of change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nAdditional unit tests were added.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/master/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "urllib3-instrumentation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add urllib3 instrumentation (#299)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211819ac254a19ac290e53",
    "number": 297,
    "body": "",
    "head_branch": "update-py-version",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "update python version for readthedocs (#297)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621181aac254a19ac290e54",
    "number": 296,
    "body": "",
    "head_branch": "update-readme",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "updating readme (#296)\n\nAdding more details to the readme including a link to the read the docs"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621181bac254a19ac290e55",
    "number": 295,
    "body": "This is a documentation-only change",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added Zoom passcode (#295)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621181bac254a19ac290e56",
    "number": 293,
    "body": "# Description\r\n\r\nFixes #292 \r\n",
    "head_branch": "contrib-examples",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621181cac254a19ac290e57",
    "number": 289,
    "body": "",
    "head_branch": "update-version-18dev",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[post-release] updating version to 0.18.dev0 (#289)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621181dac254a19ac290e58",
    "number": 287,
    "body": "",
    "head_branch": "release/0.17b0-auto",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[pre-release] Update changelogs, version [0.17b0] (#287)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621181eac254a19ac290e59",
    "number": 286,
    "body": "# Description\r\n\r\nImproved documentation with a minimal viable example for aiohttp instrumentation. There is currently not a clear example of this anywhere in the wild, nor is there much in the way of documentation explaining what glue is required between instrumentation and jaeger / opentelemetry layers. Now there is.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nSmall docs change.\r\n\r\n# How Has This Been Tested?\r\n\r\nYou can take a look at the well rendered example here: https://github.com/theelous3/opentelemetry-python-contrib/tree/aiohttp-instrumentation-readme/instrumentation/opentelemetry-instrumentation-aiohttp-client\r\n\r\nRun the code in the example yourself if you like. Should be self explanatory.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nN/A\r\n",
    "head_branch": "aiohttp-instrumentation-readme",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Aiohttp instrumentation readme (#286)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621181fac254a19ac290e5a",
    "number": 285,
    "body": "# Description\r\n\r\nAs discussed [here](https://github.com/open-telemetry/opentelemetry-python/issues/1494) we are removing `Configuration` from the core repo. This means that it needs to be removed here as well. This PR does that.\r\n\r\nThis also adds an `opentelemetry.util` namespace where util code can be added to. Should this go into a separate PR? I also think so. Nevertheless, I am adding this here because there was some non-configuration-related code in the old `Configuration` class that I am moving into this namespace now. I understand that this can be controversial, so if you prefer this to be split into 2 PRs comment below, please. :+1: \r\n\r\nFixes #284\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] Yes. - Link to PR: https://github.com/open-telemetry/opentelemetry-python/pull/1523\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/master/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [X] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "issue_284",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove Configuration from instrumentations (#285)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211820ac254a19ac290e5b",
    "number": 283,
    "body": "Part of https://github.com/open-telemetry/opentelemetry-python/pull/1514",
    "head_branch": "id",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix ids_generator references from moving from api to sdk (#283)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211821ac254a19ac290e5c",
    "number": 282,
    "body": "# Description\r\n\r\nI'm updating the pip requirements for the docker-tests tox target to address this. We should probably consider making this a more global requirement.\r\n\r\nFixes #281\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] ran the docker-tests target locally\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/master/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix-docker-test-build",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "fix docker-tests build (#282)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211822ac254a19ac290e5d",
    "number": 278,
    "body": "# Description\r\n\r\nSQLAlchemy spans were missing kind field and it was being set to\r\ninternal instead of client. This commit changes sqlalchemy spans to have\r\nkind set to \"client\" instead.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Updated existing tests\r\n- [x] Manual testing\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/master/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "db-span-kind",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Ensure SQLAlchemy spans have kind set to CLIENT (#278)\n\nSQLAlchemy spans were missing kind field and it was being set to\r\ninternal instead of client. This commit changes sqlalchemy spans to have\r\nkind set to \"client\" instead."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211823ac254a19ac290e5e",
    "number": 277,
    "body": "## Motivation\r\nFollow up to issue Follow up to issue https://github.com/open-telemetry/oteps/issues/144 \r\n\r\n\r\n[CodeQL](https://github.com/github/codeql-action) is GitHub's static analysis engine which scans repos for security vulnerabilities. As the project grows and we near GA it might be useful to have a workflow which checks for security vulnerabilities with every PR so we can ensure every incremental change is following best development practices. Also passing basic security checks will also make sure that there aren't any glaring issues for our users. \r\n\r\n## Changes\r\n\r\n* This PR adds [CodeQL](https://github.com/github/codeql-action) security checks to the repo\r\n* After every run the workflow uploads the results to GitHub. Details on the run and security alerts will show up in the `security` tab of this repo. \r\n\r\n**Workflow Triggers**\r\n* daily cron job at 1:30am\r\n* workflow_dispatch (in case maintainers want to trigger a security check manually)\r\n\r\ncc- @alolita ",
    "head_branch": "AddCodeQL",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add CodeQL analysis (#277)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211824ac254a19ac290e5f",
    "number": 276,
    "body": "Part of https://github.com/open-telemetry/opentelemetry-python/pull/1502",
    "head_branch": "trace-state-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update TraceState (#276)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211825ac254a19ac290e60",
    "number": 275,
    "body": "# Description\r\n\r\nThe `retry_attempts` field in `instrumentation-botocore` previously reported how many retries it took botocore to complete an API request (e.g. if the client is rate limited).\r\n\r\nIt was lost during this refactor https://github.com/open-telemetry/opentelemetry-python-contrib/pull/150 & and I can't find any comments or issues saying it was intentionally dropped (sorry if I missed this!).\r\n\r\nSo this PR adds it back :D\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- Manual test: https://gist.github.com/thomasdesr/08849445953715f38cf6d29d17b00adf\r\n- Updated the existing botocore automated tests\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/master/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n\r\n(Lmk if you want me to add this to the changelog)\r\n",
    "head_branch": "thomas/botocore-retry_attempts",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Adds back retry_attempts to botocore (#275)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211826ac254a19ac290e61",
    "number": 273,
    "body": "There are some exception types that set the response attribute to a\r\nnon-Response type, e.g. \"AttributeError: 'dict' object has no attribute\r\n'status_code'\"\r\n\r\n# Description\r\n\r\nAt $WORK, we have an integration with a vendor (i.e. POST calls via `requests`) that will fail once-in-a-while with an exception where the `response` attribute on the exception is a dictionary instead of a `Response` object. Because the instrumentation doesn't have a type check, it tries to get the `status_code` attribute from the dictionary and fails with an `AttributeError`. Since it swallows the exception thrown from `requests`, we can't easily debug it (vendor issue is not easily reproducible). This change will allow the instrumentation to work in this edge case.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [X] Added unit tests\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/master/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "check-response-type",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use instanceof to check if responses are valid Response objects (#273)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211827ac254a19ac290e62",
    "number": 272,
    "body": "# Description\r\n\r\nThis is often `None`, but tags are always strings, and so things get broken when spans get passed along to other client calls.\r\n\r\nFixes #262\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nThis passes existing tests, and I've added one to verify when the field is set to `None`, it's skipped.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/master/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [X] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n",
    "head_branch": "datadog-propagator-bugfix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211827ac254a19ac290e63",
    "number": 270,
    "body": "# Description\r\n\r\nAs a follow up to #1443, this PR adds a limit to the number of commits saved and displayed in the performance graph.\r\n\r\nBy default [there is no limit](https://github.com/rhysd/github-action-benchmark#max-items-in-chart-optional) so I thought this would be a good preemptative measure to avoid a noisy (and maybe unreadable?) graph.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nN/A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "max-item-in-performance-chart",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Set max number of commits in performance graph (#270)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211828ac254a19ac290e64",
    "number": 269,
    "body": "# Description\r\n\r\nUpdates the gRPC client instrumentation:\r\n\r\n* Add additional attributes to span described in the spec but not previously added\r\n* fix example in docs that didn't work #256\r\n* rework the instrumentation call so both secure and insecure connections are instrumented by default - otherwise there's no way to handle both\r\n* properly capture and record RPC errors\r\n* change all metrics labels recorded to be strings\r\n* change metrics labels to be namespaced like the span attributes are, this seems to be a convention when looking at other client instrumentation (i.e. requests)\r\n\r\nRe: the instrumentation call - I preserved the existing parameter so as to not break changes, but we may wish to mark that as deprecated, I don't know the convention with this library on how to do that.\r\n\r\nFixes #256 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [X] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\nI've added new checks in the existing tests to make sure the attributes \r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/master/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [X] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n- [X] Documentation has been updated\r\n",
    "head_branch": "grpc-client-additions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "gRPC instrumentation: client additions (#269)\n\nThe docs on metric labels suggests that they should probably be strings,\r\nand all others I can find are strings, and so these ought to be also.\r\nOtherwise, some of the exporters/processors have to handle things\r\nspecifically, and not all of these come out as nice as could be when you\r\n`str()` them.\r\n\r\nI've also made sure to use the `StatusCode` name, as that's the\r\ninteresting thing.\r\n\r\nFinally, there's no need to report specifically that `error=false`, so\r\nI've removed that tag."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211829ac254a19ac290e65",
    "number": 266,
    "body": "# Description\r\n\r\nAdd support for Celery v5, which apparently didn't introduce changes that affect the current instrumentation code [0].\r\n\r\n[0] https://github.com/celery/celery/blob/master/Changelog.rst#500\r\n\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n\r\n# How Has This Been Tested?\r\n\r\nTested locally using:\r\n```\r\ntox -e test-instrumentation-celery\r\n```\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/master/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "celery5",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Celery: Add support for new major version 5.x (#266)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621182aac254a19ac290e66",
    "number": 265,
    "body": "# Description\r\n- fix default port KeyError\r\n- wrong attr name (net.peer.ip -> net.peer.port)\r\n\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/master/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "redis: fix default port KeyError, wrong attr name (#265)\n\n* redis: fix default port KeyError, wrong attr name\r\n* fix docker tests and another ip/port issue in asyncpg\r\n\r\nCo-authored-by: Alex Boten <aboten@lightstep.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621182bac254a19ac290e67",
    "number": 264,
    "body": "# Description\r\n\r\nOccasionally not all of the headers available to botocore are strings - I've noticed this when a call is being made with an active span passed from a different application (specifically via gRPC).  Botocore does allow this, using the `add_header` method rather than `__setitem__`.  According to the docs for `botocore.compat.HTTPHeaders`:\r\n\r\n```\r\nIf a parameter value contains non-ASCII characters it can be specified\r\nas a three-tuple of (charset, language, value), in which case it will be\r\nencoded according to RFC2231 rules.  Otherwise it will be encoded using\r\nthe utf-8 charset and a language of ''\r\n```\r\n\r\nWhereas using `__setitem__` does not do this conversion.\r\n\r\nI'm not convinced this is the right place to fix this, however - I've only encountered it in the situation described in #262, and haven't been able to find what would be passing in a non-string header in the first place.  I'll be happy to dig more if anyone has a better suggestion, but as far as I can tell, this is also an innocuous change.\r\n\r\nOne question I have though is about how I could test this - I don't know how to simulate (in the botocore tests) having an active trace passed through from another application, so advice on this would be welcome.\r\n\r\nFixes #262\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nAll existing tests still pass, and I've been working with the situation described in #262 \r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/master/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "botocore-instrumentation-fix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621182cac254a19ac290e68",
    "number": 261,
    "body": "# Description\r\n\r\nUsing `|=` here makes `trace_flags` into an int, rather than a `TraceFlags` object:\r\n\r\n```\r\n>>> import opentelemetry.trace as trace\r\n>>> f = trace.TraceFlags()\r\n>>> type(f)\r\n<class 'opentelemetry.trace.span.TraceFlags'>\r\n>>> f |= trace.TraceFlags.SAMPLED\r\n>>> type(f)\r\n<class 'int'>\r\n```\r\n\r\nThis fix will preserve the type.  I assume this is desired - can't see why it wouldn't be, but I'm still a bit new to this stack, so confirmation would be welcome.\r\n\r\nYou may ask, but where's the sample code to demonstrate the bug?  I'm in the middle of trying to debug a number of odd issues with the gRPC client interceptor when used with Datadog, so it's a bit convoluted - essentially I'm making a gRPC request to one service which makes a gRPC request to another.  When the Datadog exporter is enabled, I get a traceback like this:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/michael/work/myapp/.venv/lib/python3.8/site-packages/grpc/_server.py\", line 435, in _call_behavior\r\n    response_or_iterator = behavior(argument, context)\r\n  File \"/home/michael/xfer/opentelemetry-python-contrib/instrumentation/opentelemetry-instrumentation-grpc/src/opentelemetry/instrumentation/grpc/_server.py\", line 252, in telemetry_interceptor\r\n    with self._start_span(\r\n  File \"/home/michael/xfer/opentelemetry-python-contrib/instrumentation/opentelemetry-instrumentation-grpc/src/opentelemetry/instrumentation/grpc/_server.py\", line 232, in _start_span\r\n    return self._tracer.start_as_current_span(\r\n  File \"/home/michael/xfer/opentelemetry-python/opentelemetry-sdk/src/opentelemetry/sdk/trace/__init__.py\", line 756, in start_as_current_span\r\n    span = self.start_span(\r\n  File \"/home/michael/xfer/opentelemetry-python/opentelemetry-sdk/src/opentelemetry/sdk/trace/__init__.py\", line 807, in start_span\r\n    sampling_result = self.sampler.should_sample(\r\n  File \"/home/michael/xfer/opentelemetry-python/opentelemetry-sdk/src/opentelemetry/sdk/trace/sampling.py\", line 273, in should_sample\r\n    if parent_span_context.trace_flags.sampled:\r\nAttributeError: 'int' object has no attribute 'sampled'\r\n```\r\n\r\nIf I switch to the Jaeger exporter rather than Datadog, my code runs perfectly fine.\r\n\r\nIf I remove this code from my primary service, it also runs fine:\r\n```\r\nfrom opentelemetry.exporter.datadog.propagator import DatadogFormat\r\nfrom opentelemetry import propagators\r\npropagators.set_global_textmap(DatadogFormat())\r\n```\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\nThe best way is to just look at what the code does in the console.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/master/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [X] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n",
    "head_branch": "fix-datadog-bug",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "datadog-exporter: bugfix for unintentional type change (#261)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621182dac254a19ac290e69",
    "number": 260,
    "body": "# Description\r\n\r\nFix for a bug I introduced when rewriting the gRPC instrumentation where child spans weren't properly being tracked as part of the same trace.  Also there weren't tests for streaming responses before, so I've added one, and several to verify child spans are handled properly in both unary and streaming responses.\r\n\r\nFixes #257 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nAdded new tests:\r\n* `test_create_two_spans`\r\n* `test_create_span_streaming`\r\n* `test_create_two_spans_streaming`\r\n\r\nAlso verified manually via exporting spans to Jaeger as part of a test application based on the sample server code.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/master/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [X] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n",
    "head_branch": "grpc-streaming-bugfix",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "gRPC streaming bugfix (#260)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621182eac254a19ac290e6a",
    "number": 259,
    "body": "Addresses this [comment](https://github.com/open-telemetry/opentelemetry-python-contrib/issues/149#issuecomment-745074789)",
    "head_branch": "hooks",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix requests and urllib instrumentations span name callback parameters (#259)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621182eac254a19ac290e6b",
    "number": 258,
    "body": "Build was [failing](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/253/checks?check_run_id=1556814176) due to core repo [pr](https://github.com/open-telemetry/opentelemetry-python/pull/1420) which maks sdk have a dependency on the instrumentation package. Simply reorder the installations in the tox environments will fix this.\r\n\r\nProbably temporary as well, since after distros, sdk shouldn't have dependency on instrumentation package.",
    "head_branch": "test",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix build (#258)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621182fac254a19ac290e6c",
    "number": 254,
    "body": "# Description\r\n\r\nCurrent instrumentation uses the entire SQL query as the operation name\r\nwhich makes traces very hard to read and understand in addition to\r\nintroducing high-cardinality issues. This commit fixes the problem by\r\nusing only the SQL operation name and the DB name instead of the entire\r\nquery.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Manual testing\r\n- [x] Updated unit tests\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/master/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix-sqlalchemy-operation-name",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "SQLAlchemy: Use SQL operation and DB name as the Span name (#254)\n\nCurrent instrumentation uses the entire SQL query as the operation name\r\nwhich makes traces very hard to read and understand in addition to\r\nintroducing high-cardinality issues. This commit fixes the problem by\r\nusing only the SQL operation name and the DB name instead of the entire\r\nquery."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211830ac254a19ac290e6d",
    "number": 253,
    "body": "# Description\r\n\r\nIf a Flask request doesn't have an active span, it just means that it was initialized via a mechanism that doesn't run `before_request`, like `app.test_request_context` or even manually. It is okay and instrumentation still works.\r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python-contrib/issues/160.\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nI ran the same script that is in https://github.com/open-telemetry/opentelemetry-python-contrib/issues/160 and I didn't get the warning message.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes\r\n- [x] No\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/master/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] ~Unit tests have been added~ Not needed\r\n- [ ] ~Documentation has been updated~ Not needed\r\n",
    "head_branch": "fix-flask-test-request-context",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "When Flask activation is missing, do not emit a log message (#253)\n\nIf a Flask request doesn't have an active span, it just means that it\r\nwas initialized via a mechanism that doesn't run `before_request`, like\r\n`app.test_request_context` or even manually. It is okay and\r\ninstrumentation still works."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211831ac254a19ac290e6e",
    "number": 252,
    "body": "# Description\r\n\r\nAdds the readTheDocs build to the Contrib repo. I went back to the Core PR https://github.com/open-telemetry/opentelemetry-python/pull/1258 where I removed the documentation for the individual instrumentation packages and added them back now in this PR.\r\n\r\nHowever it ended up being much more annoying than I thought :)\r\n\r\nI kept getting errors such as\r\n\r\n```\r\npy:class reference target not found: opentelemetry.instrumentation.instrumentor.BaseInstrumentor\r\n```\r\n\r\nEven though the test correctly installed all 3 of the `API`, `SDK`, and `Instrumentation` repos from GitHub correctly through VCS pip installs. (I verified that if I deleted the relevant `.tox/docs/src/opentelemetry-instrumentation/opentelemetry-instrumentation/` folder the Docs output a helpful message \"error this module does not exist!\")\r\n\r\nBut I finally found [this StackOverflow post](https://stackoverflow.com/a/30624034/7460739) which explained that this is a known issue with Sphinx.\r\n\r\nI think the problem is that Sphinx will output warnings when imports are from OTHER REPOS, even though it can verify that they do exist in the Python install path.\r\n\r\nThis solution goes with the solution suggested in the StackOverflow post, but with an easy to comment/uncomment `nitpick-exceptions.ini` file.\r\n\r\nI think it's worth it to keep the \"error on warning\" setting on because it will show us if our docs have invalid imports (although maybe that's that's what unit tests are supposed to be for???)\r\n\r\nFixes #194 \r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nBoth `tox -e docs` and `make html` produce html files in `_bulid/html` that make sense!\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/master/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [] Changelogs have been updated~\r\n~- [] Unit tests have been added~\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "add-docs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add readTheDocs (#252)\n\nCo-authored-by: Aaron Abbott <aaronabbott@google.com>\r\nCo-authored-by: alrex <aboten@lightstep.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211832ac254a19ac290e6f",
    "number": 250,
    "body": "# Description\r\n\r\nA follow up to the Core PR that adds benchmarking tests: https://github.com/open-telemetry/opentelemetry-python/pull/1443\r\n\r\nWe added an issue in #249 and link the issue in the code here\r\n\r\nWe also found out that the GitHub action [will fetch the branch even if it on that branch which produces an error](https://github.com/rhysd/github-action-benchmark/issues/51).\r\n\r\nThis PR goes back to using `gh-pages` and adds a link in the ReadTheDocs directory to point to the benchmarks graphs which will live on the `gh-pages` branch.\r\n\r\nThis is also a good idea to reduce the noise on the `master` branch.\r\n\r\nThis will fix the current Contrib Repo Tests.\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nSee [my example repo](https://github.com/NathanielRN/github-benchmarks-example/runs/1532810344?check_suite_focus=true#step:8:25) which uses `gh-pages` correctly to publish to https://nathanielrn.github.io/github-benchmarks-example/benchmarks/index.html\r\n\r\n# Does This PR Require a Contrib Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "link-benchmarks-issue",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Only commit benchmark results to master folder (#250)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211833ac254a19ac290e70",
    "number": 248,
    "body": "isort and black can be incompatible. Often isort re-writes files in a\r\nway black doesn't like. It takes quite some time and manual effort to\r\nmake changes that satisfy both isort and black.\r\n\r\nFortunately, newer versions of isort support a black compatibility mode by setting\r\nisort profile to \"black\". This makes isort order imports in a way that\r\nis compatible with how black formats Python code. This PR configures\r\nisort to use the black profile by default\r\n\r\nDepends on #231 \r\n",
    "head_branch": "isort-and-black-be-friends",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Upgrade isort and enable black compat mode (#248)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211834ac254a19ac290e71",
    "number": 247,
    "body": "# Description\r\n\r\nFollow up to the [Core PR which removed examples related to Contrib packages](https://github.com/open-telemetry/opentelemetry-python/pull/1465), this PR adds them back into the Contrib repo.\r\n\r\nThis way, the examples are near the code they are providing examples for.\r\n\r\nI think this is a much more manageable solution because the Core repo has a more sensible dependency on the Core repo and the numbers of packages it will require seems to much more bounded than the vice-versa of Core depending on Contrib 🙂 \r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nNo tests so far. `tox -e docs` should be added as a quick follow up when docs are added to the Contrib repo.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/master/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-core-contrib-docs-examples",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211835ac254a19ac290e72",
    "number": 246,
    "body": "# Description\r\n\r\n* Updated psycopg2 instrumentation to work with registered types like JSONB. This makes the instrumentation compatible with psycopg2 when registering types manually. It also enables the instrumentation to work with frameworks like Django that register types implicitly.\r\n* Updated DBAPI to use statement and DB name as the span name as recommended by the spec instead of using the entire query.\r\n\r\nFixes #143\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Updated tests and added new ones.\r\n- [x] Manual testing with django and custom registration of types with psycopg2.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "dbapi-rework",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Updated dbapi and psycopg2 instrumentations. (#246)\n\nChanges:\r\n\r\n- Update dbapi instrumentation to use the SQL statement name as the span\r\ninstead of the entire SQL query.\r\n- Renamed TracedCursor with CursorTracing. The class was not a valid\r\nCursor so the name was confusing.\r\n- Updated CursorTracing's (previously TracedCursor) traced_execution\r\nmethod to accept the cursor instance as the first argument. This is\r\nrequired as for some dbapi implementations, we need a reference to the\r\ncursor in order to correctly format the SQL query.\r\n- Updated psycopg2 instrumentation to leverage dbapi's `cursor_factory`\r\nmechanism instead of wrapping the cursor with wrapt. This results in a\r\nsimpler instrumentation without monkey patching objects at runtime and\r\nallows psycopg2's type registration system to work. This should make it\r\npossible to use psycopg2 instrumentation when using the JSONB feature or\r\nwith frameworks like Django."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211836ac254a19ac290e73",
    "number": 245,
    "body": "# Description\r\n\r\nA simple bugfix for incorrect docs which led me astray for a good half hour :)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nIt's documentation, no tests.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/master/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "grpc-client-docs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "gRPC client instrumentation docs fixes (#245)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211836ac254a19ac290e74",
    "number": 243,
    "body": "# Description\r\n\r\nFollow up to the Core repo PR which adds a way to add performance tests: https://github.com/open-telemetry/opentelemetry-python/pull/1443\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nRunning `tox -e test-sdkextension-aws` locally I can produce the following results:\r\n\r\n```\r\ntest-sdkextension-aws run-test: commands[0] | pytest\r\n================================================================================================================================================= test session starts =================================================================================================================================================\r\nplatform darwin -- Python 3.8.2, pytest-6.1.2, py-1.9.0, pluggy-0.13.1 -- /Users/enowell/git/opentelemetry-python-contrib/.tox/test-sdkextension-aws/bin/python\r\ncachedir: .tox/test-sdkextension-aws/.pytest_cache\r\nbenchmark: 3.2.3 (defaults: timer=time.perf_counter disable_gc=False min_rounds=5 min_time=0.000005 max_time=1.0 calibration_precision=10 warmup=False warmup_iterations=100000)\r\nrootdir: /Users/enowell/git/opentelemetry-python-contrib, configfile: pytest.ini\r\nplugins: benchmark-3.2.3\r\ncollected 24 items\r\n\r\nperformance/benchmarks/trace/test_benchmark_aws_xray_ids_generator.py::test_generate_xray_trace_id PASSED                                                                                                                                                                                                       [  4%]\r\nperformance/benchmarks/trace/test_benchmark_aws_xray_ids_generator.py::test_generate_xray_span_id PASSED                                                                                                                                                                                                        [  8%]\r\nperformance/benchmarks/trace/propagation/test_benchmark_aws_xray_format.py::test_extract_single_header PASSED                                                                                                                                                                                                   [ 12%]\r\nperformance/benchmarks/trace/propagation/test_benchmark_aws_xray_format.py::test_inject_empty_context PASSED\r\n\r\n...\r\n\r\n-------------------------------------------------------------------------------------------------- benchmark: 4 tests -------------------------------------------------------------------------------------------------\r\nName (time in ns)                      Min                    Max                  Mean                StdDev                Median                 IQR            Outliers  OPS (Kops/s)            Rounds  Iterations\r\n-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\ntest_generate_xray_span_id        300.2500 (1.0)       4,729.1500 (1.0)        358.2244 (1.0)        117.4173 (1.0)        329.7750 (1.0)       66.6000 (1.42)    2505;2451    2,791.5467 (1.0)      105608          20\r\ntest_generate_xray_trace_id       576.0000 (1.92)     58,391.0000 (12.35)      765.5374 (2.14)       609.1449 (5.19)       739.0000 (2.24)      47.0000 (1.0)    1241;13007    1,306.2719 (0.47)     102533           1\r\ntest_inject_empty_context       1,379.0000 (4.59)     59,260.0000 (12.53)    1,899.8021 (5.30)     1,099.5063 (9.36)     1,872.0000 (5.68)     305.0000 (6.49)    1598;2308      526.3706 (0.19)      65433           1\r\ntest_extract_single_header      8,246.0000 (27.46)    29,191.0000 (6.17)     9,066.2906 (25.31)    2,448.8693 (20.86)    8,669.0000 (26.29)    301.5000 (6.41)          3;8      110.2987 (0.04)        117           1\r\n-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\r\n\r\nLegend:\r\n  Outliers: 1 Standard Deviation from Mean; 1.5 IQR (InterQuartile Range) from 1st Quartile and 3rd Quartile.\r\n  OPS: Operations Per Second, computed as 1 / Mean\r\n```\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/master/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "add-aws-sdk-extension-performance-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add performance tests to AWS SDK Extension (#243)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211837ac254a19ac290e75",
    "number": 242,
    "body": "# Description\r\n\r\nAccording to Semantic Conventions https://github.com/open-telemetry/opentelemetry-specification/blob/master/specification/metrics/semantic_conventions/http-metrics.md\r\nattribute \"net.host.port\" should be used instead of \"host.port\"\r\n\r\nFixes #240\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] tox -e test-instrumentation-wsgi\r\n- [x] tox -e test-instrumentation-pyramid\r\n- [x] tox -e test-instrumentation-flask\r\n- [x] tox -e test-instrumentation-falcon\r\n- [x] tox -e test-instrumentation-asgi \r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/master/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "net.host.port",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Rename \"host.port\" attribute to \"net.host.port\" (#242)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211838ac254a19ac290e76",
    "number": 241,
    "body": "Similar to https://github.com/open-telemetry/opentelemetry-python/pull/1456",
    "head_branch": "lint",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Explicitly install dependencies in lint env for tox (#241)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211839ac254a19ac290e77",
    "number": 239,
    "body": "# Description\r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python/issues/1446\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "unify-changelog",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Combine changelogs (#239)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621183aac254a19ac290e78",
    "number": 238,
    "body": "",
    "head_branch": "pip-old-resolver",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621183bac254a19ac290e79",
    "number": 237,
    "body": "Fixes #147 ",
    "head_branch": "fastapi-starlette-exclude-urls",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add ability to exclude some routes in fastapi and starlette (#237)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621183cac254a19ac290e7a",
    "number": 236,
    "body": "# Description\r\n\r\n## A whole bunch of reworking the tests\r\n\r\nI've updated tests to use proper handler names - In the real world, the interceptor is always going to be passed a HandlerCallDetails object with the `method` field set to something valid... previously these tests set this to an empty string, but that's not what happens in a real case. So I've updated the tests to do that right, but also made sure that the span processing allows this to be unset, just in case someone was expecting this behavior to be present.\r\n\r\nI've added more checks into the existing tests, now we're checking that span attributes are set as expected.\r\n\r\nFixed a few bugs in the tests where things which were intended to be checked, actually were not.\r\n\r\nAnd finally, I've added a test to catch the gRPC `abort()` and verify the error status in the span.\r\n\r\n## Updated status codes to be compliant with specifications\r\n\r\nThe previous PR I made had the gRPC status codes using the English names for the status, but the spec has been clarified to require the integer value.\r\n\r\nAlso, the specs say to not use `span.set_status()` for a non-error condition, so I've added a check for that in a few places.\r\n\r\n## Added additional attributes\r\n\r\nAlso as the spec has been clarified, I've added the `rpc.method` and `rpc.service` attributes.\r\n\r\nFixes #173\r\nFixes #139 \r\n\r\n# Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [X] New feature (non-breaking change which adds functionality)\r\n- [X] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nAs most of this is either test changes or changes covered by new or existing tests, I've just run a bunch of tests :)\r\n\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/master/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [X] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "fix-semantics",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add more tests, fix compliance to semantics (#236)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621183dac254a19ac290e7b",
    "number": 235,
    "body": "# Description\r\n\r\nFunction `async def wrap_connect_(...)` used  for patch `wrapt.wrap_function_wrapper(aiopg, \"connect\", wrap_connect_)` is an awaitable function. It works when aiopg is connection is made using await `conn = await aiopg.connect(...)` but raises error when used with context manager `async with aiopg.connect(...) as conn`.\r\n\r\nIt is very common to use with context manager to automatically close conn. This makes the change from awaitable function to context manager for both `aiopg.connect` and `aiopg.create_pool`. It works for both the cases.\r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python/issues/1448\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] `tox -e test-instrumentation-aiopg`\r\n",
    "head_branch": "aiopg-ctx",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix AttributeError: __aexit__ for aiopg.connect and aiopg.create_pool (#235)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621183eac254a19ac290e7c",
    "number": 234,
    "body": "Original issue https://github.com/open-telemetry/opentelemetry-python/issues/1448. This is just to ensure there is bug in aiopg instrumentation when connect is used with context manager. ",
    "head_branch": "aiopg-ctx-test-fail",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621183eac254a19ac290e7d",
    "number": 233,
    "body": "Part of https://github.com/open-telemetry/opentelemetry-python/issues/1274",
    "head_branch": "prop",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Return none for Getter if key does not exist (#233)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621183fac254a19ac290e7e",
    "number": 232,
    "body": "Related to https://github.com/open-telemetry/opentelemetry-python/pull/1438",
    "head_branch": "meter-changer",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update instrumentations (#232)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211840ac254a19ac290e7f",
    "number": 231,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes #230\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [X] test_fields\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [X] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/master/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [X] Changelogs have been updated\r\n- [X] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "issue_230",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add test case for DataDog fields and AWS SDK Extension (#231)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211841ac254a19ac290e80",
    "number": 229,
    "body": "# Description\r\n\r\nhttps://github.com/open-telemetry/opentelemetry-python/issues/1431\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/master/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211842ac254a19ac290e81",
    "number": 228,
    "body": "# Description\r\n\r\nFollow up to #226, where a `fields()` method was added, this test validates that the the keys set by the `inject` method match the values returned by this `fields()` method.\r\n\r\n## Type of change\r\n\r\nTesting\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Added unit test to validate new `fields()` method\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/master/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [] Changelogs have been updated~\r\n- [x] Unit tests have been added\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "test-fields-method",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add test to validate propagator fields method (#228)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211843ac254a19ac290e82",
    "number": 227,
    "body": "# Description\r\nThis is PR 2/6 of adding a Prometheus Remote Write Exporter in Python SDK and address Issue https://github.com/open-telemetry/opentelemetry-python/issues/1302\r\n\r\n**[Part 1/6](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/180)**\r\n* Adds class skeleton\r\n* Adds all function signatures\r\n\r\n\r\n**[Part 2/6](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/206)**\r\n* Adds validation of exporter constructor commands\r\n* Add unit tests for validation\r\n\r\n**[Part 3/6](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/207)**\r\n* Adds conversion methods from OTel metric types to Prometheus [TimeSeries](https://github.com/prometheus/prometheus/blob/master/prompb/types.proto#L47)\r\n* Add unit tests for conversion\r\n\r\n\r\n**[Part 4/6](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/212)**\r\n* Adds methods to export metrics to Remote Write endpoint\r\n* Add unit tests for exporting\r\n\r\n**[Part 5/6](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/216)**\r\n* Add integration tests\r\n\r\n👉 **[Part 6/6](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/227)**\r\n* Add README, Design Doc and other necessary documentation.\r\n* Add sample app running in dockerized environment\r\n\r\n## Type of change\r\n- [x] New feature (non-breaking change which adds functionality)\r\n# How Has This Been Tested?\r\n\r\nReadme and documentation changes\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\ncc- @shovnik, @alolita ",
    "head_branch": "5-prometheus-remote-write",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Prometheus Remote Write Exporter (6/6) (#227)\n\n* adding README\r\n\r\nadding sample app\r\n\r\nadding examples readme\r\n\r\nfixing lint errors\r\n\r\nlinting examples\r\n\r\nupdating readme tls_config example\r\n\r\nexcluding examples\r\n\r\nadding examples to exclude in all linters\r\n\r\nadding isort.cfg skip\r\n\r\nchanging isort to path\r\n\r\nignoring yml only\r\n\r\nadding it to excluded directories in pylintrc\r\n\r\nonly adding exclude to directory\r\n\r\nremoving readme.rst and adding explicit file names to ignore\r\n\r\nadding the rest of the files\r\n\r\nadding readme.rst back\r\n\r\nadding to ignore glob instead\r\n\r\nreverting back to ignore list\r\n\r\nconverting README.md to README.rst\r\n\r\n* addressing readme comments\r\n\r\n* adding link to spec for details on aggregators\r\n\r\n* updating readme\r\n\r\n* adding python-snappy to setup.cfg"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211844ac254a19ac290e83",
    "number": 226,
    "body": "Fixes #224\r\n\r\n# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [X] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/master/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "issue_224",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add fields method (#226)\n\nCo-authored-by: (Eliseo) Nathaniel Ruiz Nowell <enruizno@uwaterloo.ca>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211845ac254a19ac290e84",
    "number": 225,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/master/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "issue_224",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211845ac254a19ac290e85",
    "number": 223,
    "body": "Small docs typo issue fixed.\r\n\r\n# Description\r\n\r\nFixed #1431\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nI tested requests instrumentation and it works great!\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n\r\n- [ ] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/master/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update __init__.py (#223)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211846ac254a19ac290e86",
    "number": 222,
    "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x]  tox -e test-instrumentation-urllib\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/master/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "feature/urllib-instrumentation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Feature/urllib instrumentation (#222)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211847ac254a19ac290e87",
    "number": 221,
    "body": "",
    "head_branch": "release/0.16b1-auto",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[pre-release] Update changelogs, version [0.16b1] (#221)\n\n* updating changelogs and version to 0.16b1\r\n\r\n* update core SHA"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211848ac254a19ac290e88",
    "number": 220,
    "body": "# Description\r\n\r\nMore context [here](https://github.com/open-telemetry/opentelemetry-python/issues/1217)\r\n\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] Yes. - Link to PR: https://github.com/open-telemetry/opentelemetry-python/pull/1426\r\n",
    "head_branch": "common-config",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use Config class methods for common purposes (#220)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211849ac254a19ac290e89",
    "number": 218,
    "body": "",
    "head_branch": "bump-0.17dev0",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #218 from open-telemetry/bump-0.17dev0\n\nUpdate master branch to 0.17.dev0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621184aac254a19ac290e8a",
    "number": 217,
    "body": "Prepare 0.16b0 releases",
    "head_branch": "release/0.16b0-auto",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[pre-release] Update changelogs, version [0.16b0] (#217)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621184bac254a19ac290e8b",
    "number": 216,
    "body": "# Description\r\nThis is PR 5/6 of adding a Prometheus Remote Write Exporter in Python SDK and address Issue https://github.com/open-telemetry/opentelemetry-python/issues/1302\r\n\r\n**[Part 1/6](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/180)**\r\n* Adds class skeleton\r\n* Adds all function signatures\r\n\r\n\r\n**[Part 2/6](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/206)**\r\n* Adds validation of exporter constructor commands\r\n* Add unit tests for validation\r\n\r\n**[Part 3/6](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/207)**\r\n* Adds conversion methods from OTel metric types to Prometheus [TimeSeries](https://github.com/prometheus/prometheus/blob/master/prompb/types.proto#L47)\r\n* Add unit tests for conversion\r\n\r\n\r\n**[Part 4/6](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/212)**\r\n* Adds methods to export metrics to Remote Write endpoint\r\n* Add unit tests for exporting\r\n\r\n👉 **[Part 5/6](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/216)**\r\n* Add docker integration tests\r\n\r\n**[Part 6/6](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/227)**\r\n* Add README, Design Doc and other necessary documentation.\r\n* Set up example app\r\n\r\n## Type of change\r\n- [x] New feature (non-breaking change which adds functionality)\r\n# How Has This Been Tested?\r\n\r\n- [ ] Added class `TestPrometheusRemoteWriteExporterCortex` in `opentelemetry-docker-tests`\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] ~~Documentation has been updated~~\r\ncc- @shovnik, @alolita ",
    "head_branch": "6-prometheus-remote-write",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Prometheus Remote Write Exporter (5/6) (#216)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621184cac254a19ac290e8c",
    "number": 214,
    "body": "",
    "head_branch": "ext-to-instrumentation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update README.md (#214)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621184cac254a19ac290e8d",
    "number": 213,
    "body": "Preparing 0.16b0 release",
    "head_branch": "release/0.16b0-auto",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "[pre-release] Update changelogs, version [0.16b0] (#213)"
    ],
    "has_test_file": true,
    "was_merged": true,
    "documentation_file_was_changed": true,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621184dac254a19ac290e8e",
    "number": 212,
    "body": "# Description\r\nThis is PR 3/6 of adding a Prometheus Remote Write Exporter in Python SDK and address Issue https://github.com/open-telemetry/opentelemetry-python/issues/1302\r\n\r\n**[Part 1/6](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/180)**\r\n* Adds class skeleton\r\n* Adds all function signatures\r\n\r\n\r\n**[Part 2/6](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/206)**\r\n* Adds validation of exporter constructor commands\r\n* Add unit tests for validation\r\n\r\n**[Part 3/6](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/207)**\r\n* Adds conversion methods from OTel metric types to Prometheus [TimeSeries](https://github.com/prometheus/prometheus/blob/master/prompb/types.proto#L47)\r\n* Add unit tests for conversion\r\n\r\n\r\n👉 **[Part 4/6](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/212)**\r\n* Adds methods to export metrics to Remote Write endpoint\r\n* Add unit tests for exporting\r\n\r\n**[Part 5/6](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/216)**\r\n* Add integration tests using sample app and instance of Cortex\r\n\r\n**Part 6/6**\r\n* Add README, Design Doc and other necessary documentation.\r\n\r\n## Type of change\r\n- [x] New feature (non-breaking change which adds functionality)\r\n# How Has This Been Tested?\r\n\r\n- [ ] Added class `TestValidation` in `test_prometheus_remote_write_exporter.py`\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\ncc- @AzfaarQureshi , @alolita ",
    "head_branch": "3-prometheus-remote-write",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Added exporter request methods (#212)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621184eac254a19ac290e8f",
    "number": 211,
    "body": "Copying scripts to prepare the release and publish packages to pypi from the core repo. Ideally this could be using the same scripts in the long run as they're fairly similar.",
    "head_branch": "add-scripts",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "copying scripts to prepare release (#211)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621184fac254a19ac290e90",
    "number": 210,
    "body": "Fixes #209 ",
    "head_branch": "dbindex-redis",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #210 from lonewolf3739/dbindex-redis"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211850ac254a19ac290e91",
    "number": 208,
    "body": "# Description\r\nThis is PR 2/7 of adding a Prometheus Remote Write Exporter in Python SDK and address Issue https://github.com/open-telemetry/opentelemetry-python/issues/1302\r\n\r\n**[Part 1/7](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/180)**\r\n* Adds class skeleton\r\n* Adds all function signatures\r\n\r\n\r\n**[Part 2/7](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/206)**\r\n* Adds validation of exporter constructor commands\r\n* Add unit tests for validation\r\n\r\n**[Part 3/7](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/207)**\r\n* Adds conversion methods from OTel metric types to Prometheus [TimeSeries](https://github.com/prometheus/prometheus/blob/master/prompb/types.proto#L47)\r\n* Add unit tests for conversion\r\n\r\n\r\n👉 **[Part 4/7](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/208)**\r\n* Adds methods to export metrics to Remote Write endpoint\r\n* Add unit tests for exporting\r\n\r\n**Part 5/7**\r\n* Add support for optional request parameters (timeout, proxy)\r\n* Add support for tls config\r\n\r\n**Part 6/7**\r\n* Add integration tests using sample app and instance of Cortex\r\n\r\n**Part 7/7**\r\n* Add README, Design Doc and other necessary documentation.\r\n\r\n## Type of change\r\n- [x] New feature (non-breaking change which adds functionality)\r\n# How Has This Been Tested?\r\n\r\n- [ ] Added class `TestValidation` in `test_prometheus_remote_write_exporter.py`\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n- [x] Followed the style guidelines of this project\r\n- [ ] ~~Changelogs have been updated~~ (change logs will be updated when PR 7/7 is merged and the RW exporter is complete)\r\n- [x] Unit tests have been added\r\n- [ ] ~~Documentation has been updated~~\r\ncc- @shovnik, @alolita ",
    "head_branch": "3-prometheus-remote-write",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211851ac254a19ac290e92",
    "number": 207,
    "body": "# Description\r\nThis is PR 3/6 of adding a Prometheus Remote Write Exporter in Python SDK and address Issue https://github.com/open-telemetry/opentelemetry-python/issues/1302\r\n\r\n**[Part 1/6](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/180)**\r\n* Adds class skeleton\r\n* Adds all function signatures\r\n\r\n\r\n**[Part 2/6](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/206)**\r\n* Adds validation of exporter constructor commands\r\n* Add unit tests for validation\r\n\r\n👉 **[Part 3/6](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/207)**\r\n* Adds conversion methods from OTel metric types to Prometheus [TimeSeries](https://github.com/prometheus/prometheus/blob/master/prompb/types.proto#L47)\r\n* Add unit tests for conversion\r\n\r\n\r\n**[Part 4/6](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/212)**\r\n* Adds methods to export metrics to Remote Write endpoint\r\n* Add unit tests for exporting\r\n\r\n**[Part 5/6](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/216)**\r\n* Add integration tests using sample app and instance of Cortex\r\n\r\n**Part 6/6**\r\n* Add README, Design Doc and other necessary documentation.\r\n\r\n## Type of change\r\n- [x] New feature (non-breaking change which adds functionality)\r\n# How Has This Been Tested?\r\n\r\n- [ ] Added class `TestValidation` in `test_prometheus_remote_write_exporter.py`\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated (change logs will be updated when PR 7/7 is merged and the RW exporter is complete)\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\ncc- @AzfaarQureshi , @alolita ",
    "head_branch": "2-prometheus-remote-write",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add conversion to TimeSeries methods (#207)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211852ac254a19ac290e93",
    "number": 206,
    "body": "# Description\r\nThis is PR 2/6 of adding a Prometheus Remote Write Exporter in Python SDK and address Issue https://github.com/open-telemetry/opentelemetry-python/issues/1302\r\n\r\n**[Part 1/6](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/180)**\r\n* Adds class skeleton\r\n* Adds all function signatures\r\n\r\n\r\n👉 **[Part 2/6](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/206)**\r\n* Adds validation of exporter constructor commands\r\n* Add unit tests for validation\r\n\r\n**[Part 3/6](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/207)**\r\n* Adds conversion methods from OTel metric types to Prometheus [TimeSeries](https://github.com/prometheus/prometheus/blob/master/prompb/types.proto#L47)\r\n* Add unit tests for conversion\r\n\r\n\r\n**[Part 4/6](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/212)**\r\n* Adds methods to export metrics to Remote Write endpoint\r\n* Add unit tests for exporting\r\n\r\n**[Part 5/6](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/216)**\r\n* Add integration tests using sample app and instance of Cortex\r\n\r\n**Part 6/6**\r\n* Add README, Design Doc and other necessary documentation.\r\n\r\n## Type of change\r\n- [x] New feature (non-breaking change which adds functionality)\r\n# How Has This Been Tested?\r\n\r\n- [ ] Added class `TestValidation` in `test_prometheus_remote_write_exporter.py`\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] ~~Documentation has been updated~~\r\ncc- @shovnik, @alolita ",
    "head_branch": "1-prometheus-remote-write",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Adding param validation (#206)\n\nfix lint changes"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211853ac254a19ac290e94",
    "number": 205,
    "body": "# Description\r\n\r\nFollow up to https://github.com/open-telemetry/opentelemetry-python/pull/1410, move the example app to the Contrib repo since it uses instrumentation.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nTests confirm the moving of the app works well.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\nNot dependent on a change in Core.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/master/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n",
    "head_branch": "move-core-example-app",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211854ac254a19ac290e95",
    "number": 204,
    "body": "preparing 0.16b0 release",
    "head_branch": "release/0.16b0-auto",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211854ac254a19ac290e96",
    "number": 203,
    "body": "# Description\r\nPart of  #159 \r\n\r\n# Type of change\r\n\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n",
    "head_branch": "pymongo-semantic-conv",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #203 from lonewolf3739/pymongo-semantic-conv"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211855ac254a19ac290e97",
    "number": 202,
    "body": "# Description\r\nPart of  #159 \r\n\r\n# Type of change\r\n\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n",
    "head_branch": "sqlalchemy-semantic-conv",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #202 from lonewolf3739/sqlalchemy-semantic-conv"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211856ac254a19ac290e98",
    "number": 201,
    "body": "# Description\r\n\r\nIn response to https://github.com/open-telemetry/opentelemetry-python/pull/1404, it is convenient to be able to auto instrument the AWS SDK Extension by adding `AwsXrayIdsGenerator` as an entry point.\r\n\r\n## Type of change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nA test in https://github.com/open-telemetry/opentelemetry-python/pull/1404 covers using an environment variable to find and set a `CustomIdsGenerator`.\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/master/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "ids-generator-entry-point",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add AWS X-Ray Ids Generator Entry Point (#201)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211857ac254a19ac290e99",
    "number": 200,
    "body": "# Description\r\n\r\nTypo mistake from my PR in 198. Very sorry about this!\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] This change requires a documentation update\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/master/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "fix-docs-typo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix typo for installing OTel SDK in docs (#200)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211858ac254a19ac290e9a",
    "number": 198,
    "body": "# Description\r\n\r\nAdded import statements for components used in the example to make it obvious what is required.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] This change requires a documentation update\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/master/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "improve-aws-extension-docs",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Import missing components for docs (#198)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211859ac254a19ac290e9b",
    "number": 197,
    "body": "This marks the test case as flaky, making it run at most 3 times. It is\r\nenough for one of this runs to pass to consider this test case passed\r\nand ran no more. If 3 consecutive runs of this test case fail, the test\r\ncase will be considered failed. It has been reported that running this\r\ntest case again makes it pass, usually. This approach is preferred over\r\nmarking it as xfail(strict=False) because most of the times the test\r\nends up passing after another run, so that in most of the cases we\r\ncan still benefit from running this test case (since if it is actually\r\nfailing because of a bug it will be reported as such after failing 3\r\ntimes, making the team aware of an actual issue happening here).\r\n\r\n# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes #196\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/master/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "issue_196",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Mark test case as flaky (#197)\n\nFixes #196\r\n\r\nThis marks the test case as flaky, making it run at most 3 times. It is\r\nenough for one of this runs to pass to consider this test case passed\r\nand ran no more. If 3 consecutive runs of this test case fail, the test\r\ncase will be considered failed. It has been reported that running this\r\ntest case again makes it pass, usually. This approach is preferred over\r\nmarking it as xfail(strict=False) because most of the times the test\r\nends up passing after another run, so that in most of the cases we\r\ncan still benefit from running this test case (since if it is actually\r\nfailing because of a bug it will be reported as such after failing 3\r\ntimes, making the team aware of an actual issue happening here)."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621185aac254a19ac290e9c",
    "number": 195,
    "body": "# Description\r\nPart of  #159 \r\n\r\n# Type of change\r\n\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n\r\n",
    "head_branch": "dbapi-semantic-conv",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #195 from lonewolf3739/dbapi-semantic-conv"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621185bac254a19ac290e9d",
    "number": 193,
    "body": "# Description\r\n\r\nQuick PR to add prompt in PR template regarding opening a Core PR\r\n\r\n## Type of change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/master/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n",
    "head_branch": "core-repo-pr-template",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add PR question regarding Core Repo Link (#193)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621185cac254a19ac290e9e",
    "number": 192,
    "body": "### Description\r\n\r\nThis PR makes the corresponding renaming changes from otel-python https://github.com/open-telemetry/opentelemetry-python/pull/1372 in the contrib to fix failing tests as noted here: https://github.com/open-telemetry/opentelemetry-python/pull/1372#issuecomment-729926241\r\n\r\ncc - @alolita \r\n\r\n",
    "head_branch": "add-metrics-renaming-changes-to-contrib",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "[fixes broken contrib tests] Add metrics renaming changes to contrib (#192)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621185cac254a19ac290e9f",
    "number": 191,
    "body": "# Description\r\n\r\nBroken doc link fixed\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #191 from joncwong/master"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621185dac254a19ac290ea0",
    "number": 190,
    "body": "Part of https://github.com/open-telemetry/opentelemetry-python/issues/1301",
    "head_branch": "req",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #190 from lzchen/req"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621185eac254a19ac290ea1",
    "number": 189,
    "body": "Part of https://github.com/open-telemetry/opentelemetry-python/issues/1301\r\n",
    "head_branch": "error",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621185fac254a19ac290ea2",
    "number": 188,
    "body": "# Description\r\nPart of  #159 \r\n\r\n# Type of change\r\n\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] `tox -e test-instrumentation-asyncpg`\r\n",
    "head_branch": "asyncpg-semantic-conv",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #188 from lonewolf3739/asyncpg-semantic-conv"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211860ac254a19ac290ea3",
    "number": 187,
    "body": "Re-opened PR from main repo #[1313](https://github.com/open-telemetry/opentelemetry-python/pull/1313)",
    "head_branch": "usage",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #187 from lonewolf3739/usage\n\nTypeError: Can't instantiate abstract class TracerProvider with abstract methods get_tracer"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211861ac254a19ac290ea4",
    "number": 184,
    "body": "# Description\r\nPart of  #159 \r\n\r\n# Type of change\r\n\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] `tox -e test-instrumentation-redis`\r\n",
    "head_branch": "redis-semantic-conv",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #184 from lonewolf3739/redis-semantic-conv\n\nUpdate redis instrumentation to follow semantic conventions"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211862ac254a19ac290ea5",
    "number": 183,
    "body": "# Description\r\nPart of  #159 \r\n\r\n# Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] `tox -e test-instrumentation-pymemcache`\r\n",
    "head_branch": "memcached-semantic-conv",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #183 from lonewolf3739/memcached-semantic-conv"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211863ac254a19ac290ea6",
    "number": 182,
    "body": "# Description\r\n\r\nFollow up to the PR originally submitted by @wangzlei that was on the Core repo: https://github.com/open-telemetry/opentelemetry-python/pull/1291\r\n\r\nBy checking if instrumentation has been suppressed, we avoid double instrumentation if a call is already being traced from some other package.\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nAdded a unit test which checks that the flag is used to stop further instrumentation.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "suppress-downstream-botocore-instrumentation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #182 from NathanielRN/suppress-downstream-botocore-instrumentation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211863ac254a19ac290ea7",
    "number": 181,
    "body": "# Description\r\n\r\nCalls using the `botocore` SDK now use the global propagator to inject context into the request headers before they are sent to AWS.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nAdded a unit test to verify a function which wraps `Endpoint.prepare_request` gets called and inserts a value using the global propagator\r\n\r\n# Checklist:\r\n\r\nSee [contributing.md](https://github.com/open-telemetry/opentelemetry-python-contrib/blob/master/CONTRIBUTING.md) for styleguide, changelog guidelines, and more.\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "botocore-propagation-injection",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #181 from NathanielRN/botocore-propagation-injection\n\nAdd propagator injection for botocore calls"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211864ac254a19ac290ea8",
    "number": 180,
    "body": "# Description\r\nThis is PR 1/6 of adding a Prometheus Remote Write Exporter in Python SDK and address Issue https://github.com/open-telemetry/opentelemetry-python/issues/1302\r\n\r\n👉 **[Part 1/6](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/180)**\r\n* Adds class skeleton\r\n* Adds all function signatures\r\n\r\n\r\n**[Part 2/6](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/206)**\r\n* Adds validation of exporter constructor commands\r\n* Add unit tests for validation\r\n\r\n**[Part 3/6](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/207)**\r\n* Adds conversion methods from OTel metric types to Prometheus [TimeSeries](https://github.com/prometheus/prometheus/blob/master/prompb/types.proto#L47)\r\n* Add unit tests for conversion\r\n\r\n\r\n**[Part 4/6](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/212)**\r\n* Adds methods to export metrics to Remote Write endpoint\r\n* Add unit tests for exporting\r\n\r\n**[Part 5/6](https://github.com/open-telemetry/opentelemetry-python-contrib/pull/216)**\r\n* Add integration tests using sample app and instance of Cortex\r\n\r\n**Part 6/6**\r\n* Add README, Design Doc and other necessary documentation.\r\n\r\n## Type of change\r\n- [x] New feature (non-breaking change which adds functionality)\r\n# How Has This Been Tested?\r\n\r\n- [ ] Added class `TestValidation` in `test_prometheus_remote_write_exporter.py`\r\n\r\n# Does This PR Require a Core Repo Change?\r\n\r\n- [ ] Yes. - Link to PR: \r\n- [x] No.\r\n\r\n# Checklist:\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [ ] Documentation has been updated (Full documentation in final exporter PR)\r\ncc- @AzfaarQureshi , @alolita ",
    "head_branch": "SetupPrometheusRWExporter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Setup Prometheus Remote Write Exporter (#180)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211865ac254a19ac290ea9",
    "number": 179,
    "body": "There were questions regarding what situations require a changelog.\r\n\r\nThe intent of this change is to make the changelog requirements more\r\neasily discoverable and clear.\r\n\r\nSee https://github.com/open-telemetry/opentelemetry-python-contrib/pull/175#issuecomment-725201844\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n",
    "head_branch": "feature/clarify-changelog-request",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Merge pull request #179 from open-telemetry/feature/clarify-changelog-request"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211866ac254a19ac290eaa",
    "number": 178,
    "body": "# Description\r\n\r\nAdds `requests` module as a test dependency to the sdk aws extension.\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nMinor.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "aws-sdk-extension-dependency",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211867ac254a19ac290eab",
    "number": 177,
    "body": "# Description\r\n\r\nAdds `sklearn` instrumentation package to the `tox.ini` file so that it can be picked up by the Github actions test workflow\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "sklearn-tox-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add sklearn tests to test workflow (#177)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211868ac254a19ac290eac",
    "number": 176,
    "body": "# Description\r\n\r\nUpdates all the packages links to point to `opentelemetry-python-contrib` instead of `opentelemetry-python`.\r\n\r\n**NOTE:** There is no `readTheDocs` build here yet so these links still don't point to anything.\r\n\r\n## Type of change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)",
    "head_branch": "fix-contrib-links",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #176 from NathanielRN/fix-contrib-links"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211869ac254a19ac290ead",
    "number": 175,
    "body": "Addresses #159 ",
    "head_branch": "db-semantic-conv",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211869ac254a19ac290eae",
    "number": 174,
    "body": "# Description\r\n\r\nAWS Lambda function instrumentation\r\n\r\nFixes # (issue)\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nDeployed to AWS Lambda environment, can get traces in AWS XRay.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "master",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621186aac254a19ac290eaf",
    "number": 172,
    "body": "Signed-off-by: VictoryWekwa <victorywekwa@gmail.com>\r\n\r\n# Description\r\nRemoved unused import in the jinja2 instrumentation as per comment #107 (comment).\r\n\r\nFixes #124 \r\n\r\n## Type of change\r\n\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "remove-unused-import",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #172 from VictoryWekwa/remove-unused-import"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621186bac254a19ac290eb0",
    "number": 158,
    "body": "Fixes https://github.com/open-telemetry/opentelemetry-python-contrib/issues/149",
    "head_branch": "http",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #158 from lzchen/http"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621186cac254a19ac290eb1",
    "number": 156,
    "body": "# Description\r\n\r\nSwitched DBAPI so that it will not capture parameterized query parameters.  Capturing this would be a problem in production environments since they will contain sensitive information such as session tokens and hashed passwords.\r\n\r\nHave added a parameter to the instrumentation constructor to allow for this feature to be turned on.\r\n\r\nI will mark this as a breaking change since I am removing the db.statement.parameter span attribute and something might be depending on it. \r\n\r\nFixes https://github.com/open-telemetry/opentelemetry-python-contrib/issues/157\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [X] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Unit Tests\r\n\r\n# Checklist:\r\n\r\n- [ x] Followed the style guidelines of this project\r\n- [ x] Changelogs have been updated\r\n- [ x] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n\r\n",
    "head_branch": "dbapi-skip-params-by-default",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #156 from stschenk/dbapi-skip-params-by-default"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621186dac254a19ac290eb2",
    "number": 153,
    "body": "# Description\r\n\r\nFound this small typo on the ElasticsearchInstrumentor instructions.  \r\n\r\nFixes # typeo\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Test A\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #153 from gnagel/patch-1"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621186eac254a19ac290eb3",
    "number": 152,
    "body": "Addresses #134 ",
    "head_branch": "flask-custom-span",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #152 from lonewolf3739/flask-custom-span\n\nAdd hook to set custom span name in flask instrumentation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621186fac254a19ac290eb4",
    "number": 151,
    "body": "# Description\r\n\r\nProvides an opentelemetry instrumentation package for sklearn models, instrumenting internal spans at the estimator level. The motivation is to provide observability into machine learning models that run for realtime predictive applications that have many complex transformers and predictors.\r\n\r\nThe instrumentor adds spans to sklearn estimators according to a set of default estimator methods (namely `fit`, `predict`, `predict_proba` and `transform`) and other configuration parameters that determine how spans are implemented through the model hierarchy. The default configuration also handles `Pipeline` and `FeatureUnion` hierarchies. Since sklearn's API is easily extended, the configuration parameters allow for custom model hierarchy traversal, allowing spans to be implemented in custom estimators as well.\r\n\r\n## Type of change\r\n\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nThere are multiple tests for instrumentation on/off, span attributes, and configuration args.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n\r\nOriginally https://github.com/open-telemetry/opentelemetry-python/pull/1054",
    "head_branch": "opentelemetry-instrumentation-sklearn",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #151 from crflynn/opentelemetry-instrumentation-sklearn"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211870ac254a19ac290eb5",
    "number": 150,
    "body": "# Description\r\n\r\nThis PR aims to update the `botocore` instrumentation by doing the following:\r\n\r\nFixes:\r\n- Removed code that modified `span.resource` since resource should be immutable\r\n- Change `SpanKind` from `CONSUMER` to `CLIENT` because `botocore` api calls can be considered _remote outgoing_ and _synchronous requests_ requests as laid out in the [SpanKind specifications](https://github.com/open-telemetry/opentelemetry-specification/blob/06d16d7db88c3e266636f84887de61e3363b5429/specification/trace/api.md#spankind) - Important so that AWS services are treated as separate services in Tracing Backends. (See picture below!)\r\n- Use `instrumentation.utils.unwrap` instead of creating the function again\r\n\r\n\r\nSimplifications:\r\n- Remove code that searches for nested attributes using `deep_getattr` and instead pulls values from properties of the `botocore.BaseClient` class since they should always be there\r\n- Removed _params_ from attributes. There is [a PR](https://github.com/open-telemetry/opentelemetry-specification/pull/1095/files) to add more specific semantic conventions for which params should be trace in AWS SDKs in the specifications so the plan was to revisit when it gets merged\r\n\r\n\r\nImprovements:\r\n- More comprehensive logic to parse out `request_id` if it can be found in the headers instead of the usual location. Just like [.NET botocore instrumentation](https://github.com/open-telemetry/opentelemetry-dotnet-contrib/blob/c8c73749e365f9bcddf9ffb45661f18c2effbee2/src/OpenTelemetry.Contrib.Extensions.AWSXRay/Instrumentation/AWSTracingPipelineHandler.cs#L240-L267)\r\n- Add `aws.table_name` and `aws.queue_url` for DynamoDB and SQS specifically as traced properties (this will be added in the specifications)\r\n- Format tests checking of attributes to look nice!\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected) - Not all params are recorded now\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] With the change to `SpanKind.CLIENT`, S3 (and other services) are considered their own services\r\n\r\nBefore:\r\n![image](https://user-images.githubusercontent.com/23139455/97763226-3fbc0480-1ac8-11eb-93a8-00b9c2871fed.png)\r\n\r\n\r\nAfter:\r\n![image](https://user-images.githubusercontent.com/23139455/97763170-0f746600-1ac8-11eb-8d87-ddfd284c46a1.png)\r\n\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "update-botocore-instrumentation",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fixes and Improvements to botocore instrumentation (#150)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211871ac254a19ac290eb6",
    "number": 148,
    "body": "# Description\r\n\r\nMoves over changes in gRPC instrumentation that were already merged into master https://github.com/open-telemetry/opentelemetry-python/pull/1356",
    "head_branch": "issue_1355",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update protobuf versions (#1356) (#148)\n\nFixes #1355\r\n\r\nCo-authored-by: Diego Hurtado <ocelotl@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211871ac254a19ac290eb7",
    "number": 131,
    "body": "# Description\r\n\r\nSolves the issue with the lint tests by disabling the few remaining lint errors. We already ignore the `import-error` case for many `tests/` directories so this follows nicely. Also needed to update to `pylint==2.4.4` to solve some test issues.\r\n\r\nIt is curious that this didn't fail in the main repo... I was thinking maybe because `opentelemetry-test` package is closer to `{toxinidir}` root? This was a helpful comment:\r\n\r\nhttps://github.com/open-telemetry/opentelemetry-python/blob/master/docs/examples/opentracing/rediscache.py#L10-L14\r\n\r\nFixes #127\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nThe tests work now!\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "fix-lint-issues",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Fix lint by making pkg tests folders namespace pkgs (#131)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211872ac254a19ac290eb8",
    "number": 130,
    "body": "# Description\r\n\r\nFollowing our discussion from the SIG meetings, reopening [this PR that was on Core](https://github.com/open-telemetry/opentelemetry-python/pull/1189) here in the Contrib now that the Contrib repo is much farther along.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nAdded unit tests to verify expected behavior of these components. They validate the ID generator and Propagator work under multiple scenarios. \r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [x] Changelogs have been updated\r\n- [x] Unit tests have been added\r\n- [x] Documentation has been updated\r\n",
    "head_branch": "sdk-extension-aws",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #130 from NathanielRN/sdk-extension-aws"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211873ac254a19ac290eb9",
    "number": 129,
    "body": "# Description\r\n\r\nBump Contrib packages to `0.16dev0` so that when the Core repo pulls this repo, it can run its test against its currently developing Core version `0.16dev0`.\r\n\r\nSee my [example PR here](https://github.com/NathanielRN/opentelemetry-python/runs/1354579012)",
    "head_branch": "update-to-dev",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Update Contrib packages to 0.16dev0 (#129)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211874ac254a19ac290eba",
    "number": 128,
    "body": "# Description\r\n\r\nNot sure how it got into the Contrib repo, but removing it since it should be in the Core repo only.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# Checklist:\r\n\r\n- [x ] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "remove-opentracing-shim",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #128 from NathanielRN/remove-opentracing-shim\n\nRemove Opentracing Shim Instrumentation"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211875ac254a19ac290ebb",
    "number": 126,
    "body": "# Description\r\n\r\nUpdate scripts with commits from Core repo.\r\n\r\nAdds remaining changes needed to get instrumentation packages to tag `v0.15b0` at https://github.com/open-telemetry/opentelemetry-python/commit/725655a20b370c5f2efcab6797dd841bad8e8600 of the Core Repo\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nTests will be added in a future PR\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-scripts-v0.15b0",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #126 from NathanielRN/move-scripts-v0.15b0\n\nMove scripts to match Core at v0.15b0"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211876ac254a19ac290ebc",
    "number": 125,
    "body": "# Description\r\n\r\nChanges for tests in `tests/opentelemetry-docker-tests`.\r\n\r\nAdds remaining changes needed to get instrumentation packages to tag `v0.15b0` at https://github.com/open-telemetry/opentelemetry-python/commit/725655a20b370c5f2efcab6797dd841bad8e8600 of the Core Repo\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nTests will be added in a future PR\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-docker-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #125 from NathanielRN/move-docker-tests\n\nMove docker tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211877ac254a19ac290ebd",
    "number": 123,
    "body": "# Description\r\n\r\nChanges for package `exporter/opentelemetry-exporter-datadog`.\r\n\r\nAdds remaining changes needed to get instrumentation packages to tag `v0.15b0` at https://github.com/open-telemetry/opentelemetry-python/commit/725655a20b370c5f2efcab6797dd841bad8e8600 of the Core Repo\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nTests will be added in a future PR\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-exporter-datadog",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #123 from NathanielRN/move-exporter-datadog\n\nMove exporter datadog"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211878ac254a19ac290ebe",
    "number": 122,
    "body": "# Description\r\n\r\nChanges for package `instrumentation/opentelemetry-instrumentation-wsgi`.\r\n\r\nAdds remaining changes needed to get instrumentation packages to tag `v0.15b0` at https://github.com/open-telemetry/opentelemetry-python/commit/725655a20b370c5f2efcab6797dd841bad8e8600 of the Core Repo\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nTests will be added in a future PR\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-instrumentation-wsgi",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #122 from NathanielRN/move-instrumentation-wsgi\n\nMove instrumentation wsgi"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211878ac254a19ac290ebf",
    "number": 121,
    "body": "# Description\r\n\r\nChanges for package `instrumentation/opentelemetry-instrumentation-tornado`.\r\n\r\nAdds remaining changes needed to get instrumentation packages to tag `v0.15b0` at https://github.com/open-telemetry/opentelemetry-python/commit/725655a20b370c5f2efcab6797dd841bad8e8600 of the Core Repo\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nTests will be added in a future PR\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-instrumentation-tornado",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #121 from NathanielRN/move-instrumentation-tornado\n\nMove instrumentation tornado"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211879ac254a19ac290ec0",
    "number": 120,
    "body": "# Description\r\n\r\nChanges for package `instrumentation/opentelemetry-instrumentation-system-metrics`.\r\n\r\nAdds remaining changes needed to get instrumentation packages to tag `v0.15b0` at https://github.com/open-telemetry/opentelemetry-python/commit/725655a20b370c5f2efcab6797dd841bad8e8600 of the Core Repo\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nTests will be added in a future PR\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-instrumentation-system-metrics",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #120 from NathanielRN/move-instrumentation-system-metrics\n\nMove instrumentation system metrics"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621187aac254a19ac290ec1",
    "number": 119,
    "body": "# Description\r\n\r\nChanges for package `instrumentation/opentelemetry-instrumentation-starlette`.\r\n\r\nAdds remaining changes needed to get instrumentation packages to tag `v0.15b0` at https://github.com/open-telemetry/opentelemetry-python/commit/725655a20b370c5f2efcab6797dd841bad8e8600 of the Core Repo\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nTests will be added in a future PR\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-instrumentation-starlette",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #119 from NathanielRN/move-instrumentation-starlette\n\nMove instrumentation starlette"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621187bac254a19ac290ec2",
    "number": 118,
    "body": "# Description\r\n\r\nChanges for package `instrumentation/opentelemetry-instrumentation-sqlite3`.\r\n\r\nAdds remaining changes needed to get instrumentation packages to tag `v0.15b0` at https://github.com/open-telemetry/opentelemetry-python/commit/725655a20b370c5f2efcab6797dd841bad8e8600 of the Core Repo\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nTests will be added in a future PR\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-instrumentation-sqlite3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #118 from NathanielRN/move-instrumentation-sqlite3\n\nMove instrumentation sqlite3"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621187cac254a19ac290ec3",
    "number": 117,
    "body": "# Description\r\n\r\nChanges for package `instrumentation/opentelemetry-instrumentation-sqlalchemy`.\r\n\r\nAdds remaining changes needed to get instrumentation packages to tag `v0.15b0` at https://github.com/open-telemetry/opentelemetry-python/commit/725655a20b370c5f2efcab6797dd841bad8e8600 of the Core Repo\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nTests will be added in a future PR\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-instrumentation-sqlalchemy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #117 from NathanielRN/move-instrumentation-sqlalchemy\n\nMove instrumentation sqlalchemy"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621187dac254a19ac290ec4",
    "number": 116,
    "body": "# Description\r\n\r\nChanges for package `instrumentation/opentelemetry-instrumentation-requests`.\r\n\r\nAdds remaining changes needed to get instrumentation packages to tag `v0.15b0` at https://github.com/open-telemetry/opentelemetry-python/commit/725655a20b370c5f2efcab6797dd841bad8e8600 of the Core Repo\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nTests will be added in a future PR\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-instrumentation-requests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #116 from NathanielRN/move-instrumentation-requests\n\nMove instrumentation requests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621187eac254a19ac290ec5",
    "number": 115,
    "body": "# Description\r\n\r\nChanges for package `instrumentation/opentelemetry-instrumentation-redis`.\r\n\r\nAdds remaining changes needed to get instrumentation packages to tag `v0.15b0` at https://github.com/open-telemetry/opentelemetry-python/commit/725655a20b370c5f2efcab6797dd841bad8e8600 of the Core Repo\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nTests will be added in a future PR\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-instrumentation-redis",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #115 from NathanielRN/move-instrumentation-redis\n\nMove instrumentation redis"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621187eac254a19ac290ec6",
    "number": 114,
    "body": "# Description\r\n\r\nChanges for package `instrumentation/opentelemetry-instrumentation-pyramid`.\r\n\r\nAdds remaining changes needed to get instrumentation packages to tag `v0.15b0` at https://github.com/open-telemetry/opentelemetry-python/commit/725655a20b370c5f2efcab6797dd841bad8e8600 of the Core Repo\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nTests will be added in a future PR\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-instrumentation-pyramid",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #114 from NathanielRN/move-instrumentation-pyramid\n\nMove instrumentation pyramid"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621187fac254a19ac290ec7",
    "number": 113,
    "body": "# Description\r\n\r\nChanges for package `instrumentation/opentelemetry-instrumentation-pymysql`.\r\n\r\nAdds remaining changes needed to get instrumentation packages to tag `v0.15b0` at https://github.com/open-telemetry/opentelemetry-python/commit/725655a20b370c5f2efcab6797dd841bad8e8600 of the Core Repo\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nTests will be added in a future PR\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-instrumentation-pymysql",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #113 from NathanielRN/move-instrumentation-pymysql\n\nMove instrumentation pymysql"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211880ac254a19ac290ec8",
    "number": 112,
    "body": "# Description\r\n\r\nChanges for package `instrumentation/opentelemetry-instrumentation-pymongo`.\r\n\r\nAdds remaining changes needed to get instrumentation packages to tag `v0.15b0` at https://github.com/open-telemetry/opentelemetry-python/commit/725655a20b370c5f2efcab6797dd841bad8e8600 of the Core Repo\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nTests will be added in a future PR\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-instrumentation-pymongo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #112 from NathanielRN/move-instrumentation-pymongo\n\nMove instrumentation pymongo"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211881ac254a19ac290ec9",
    "number": 111,
    "body": "# Description\r\n\r\nChanges for package `instrumentation/opentelemetry-instrumentation-pymemcache`.\r\n\r\nAdds remaining changes needed to get instrumentation packages to tag `v0.15b0` at https://github.com/open-telemetry/opentelemetry-python/commit/725655a20b370c5f2efcab6797dd841bad8e8600 of the Core Repo\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nTests will be added in a future PR\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-instrumentation-pymemcache",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #111 from NathanielRN/move-instrumentation-pymemcache\n\nMove instrumentation pymemcache"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211882ac254a19ac290eca",
    "number": 110,
    "body": "# Description\r\n\r\nChanges for package `instrumentation/opentelemetry-instrumentation-psycopg2`.\r\n\r\nAdds remaining changes needed to get instrumentation packages to tag `v0.15b0` at https://github.com/open-telemetry/opentelemetry-python/commit/725655a20b370c5f2efcab6797dd841bad8e8600 of the Core Repo\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nTests will be added in a future PR\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-instrumentation-psycopg2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #110 from NathanielRN/move-instrumentation-psycopg2\n\nMove instrumentation psycopg2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211883ac254a19ac290ecb",
    "number": 109,
    "body": "# Description\r\n\r\nChanges for package `instrumentation/opentelemetry-instrumentation-opentracing-shim`.\r\n\r\nAdds remaining changes needed to get instrumentation packages to tag `v0.15b0` at https://github.com/open-telemetry/opentelemetry-python/commit/725655a20b370c5f2efcab6797dd841bad8e8600 of the Core Repo\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nTests will be added in a future PR\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-instrumentation-opentracing-shim",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211884ac254a19ac290ecc",
    "number": 108,
    "body": "# Description\r\n\r\nChanges for package `instrumentation/opentelemetry-instrumentation-mysql`.\r\n\r\nAdds remaining changes needed to get instrumentation packages to tag `v0.15b0` at https://github.com/open-telemetry/opentelemetry-python/commit/725655a20b370c5f2efcab6797dd841bad8e8600 of the Core Repo\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nTests will be added in a future PR\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-instrumentation-mysql",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #108 from NathanielRN/move-instrumentation-mysql\n\nMove instrumentation mysql"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211884ac254a19ac290ecd",
    "number": 107,
    "body": "# Description\r\n\r\nChanges for package `instrumentation/opentelemetry-instrumentation-jinja2`.\r\n\r\nAdds remaining changes needed to get instrumentation packages to tag `v0.15b0` at https://github.com/open-telemetry/opentelemetry-python/commit/725655a20b370c5f2efcab6797dd841bad8e8600 of the Core Repo\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nTests will be added in a future PR\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-instrumentation-jinja2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #107 from NathanielRN/move-instrumentation-jinja2\n\nMove instrumentation jinja2"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211885ac254a19ac290ece",
    "number": 106,
    "body": "# Description\r\n\r\nChanges for package `instrumentation/opentelemetry-instrumentation-grpc`.\r\n\r\nAdds remaining changes needed to get instrumentation packages to tag `v0.15b0` at https://github.com/open-telemetry/opentelemetry-python/commit/725655a20b370c5f2efcab6797dd841bad8e8600 of the Core Repo\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nTests will be added in a future PR\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-instrumentation-grpc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #106 from NathanielRN/move-instrumentation-grpc\n\nMove instrumentation grpc"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211886ac254a19ac290ecf",
    "number": 105,
    "body": "# Description\r\n\r\nChanges for package `instrumentation/opentelemetry-instrumentation-flask`.\r\n\r\nAdds remaining changes needed to get instrumentation packages to tag `v0.15b0` at https://github.com/open-telemetry/opentelemetry-python/commit/725655a20b370c5f2efcab6797dd841bad8e8600 of the Core Repo\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nTests will be added in a future PR\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-instrumentation-flask",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #105 from NathanielRN/move-instrumentation-flask\n\nMove instrumentation flask"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211887ac254a19ac290ed0",
    "number": 104,
    "body": "# Description\r\n\r\nChanges for package `instrumentation/opentelemetry-instrumentation-fastapi`.\r\n\r\nAdds remaining changes needed to get instrumentation packages to tag `v0.15b0` at https://github.com/open-telemetry/opentelemetry-python/commit/725655a20b370c5f2efcab6797dd841bad8e8600 of the Core Repo\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nTests will be added in a future PR\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-instrumentation-fastapi",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #104 from NathanielRN/move-instrumentation-fastapi\n\nMove instrumentation fastapi"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211888ac254a19ac290ed1",
    "number": 103,
    "body": "# Description\r\n\r\nChanges for package `instrumentation/opentelemetry-instrumentation-falcon`.\r\n\r\nAdds remaining changes needed to get instrumentation packages to tag `v0.15b0` at https://github.com/open-telemetry/opentelemetry-python/commit/725655a20b370c5f2efcab6797dd841bad8e8600 of the Core Repo\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nTests will be added in a future PR\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-instrumentation-falcon",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #103 from NathanielRN/move-instrumentation-falcon\n\nMove instrumentation falcon"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211889ac254a19ac290ed2",
    "number": 102,
    "body": "# Description\r\n\r\nChanges for package `instrumentation/opentelemetry-instrumentation-elasticsearch`.\r\n\r\nAdds remaining changes needed to get instrumentation packages to tag `v0.15b0` at https://github.com/open-telemetry/opentelemetry-python/commit/725655a20b370c5f2efcab6797dd841bad8e8600 of the Core Repo\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nTests will be added in a future PR\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-instrumentation-elasticsearch",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #102 from NathanielRN/move-instrumentation-elasticsearch\n\nMove instrumentation elasticsearch"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621188aac254a19ac290ed3",
    "number": 101,
    "body": "# Description\r\n\r\nChanges for package `instrumentation/opentelemetry-instrumentation-django`.\r\n\r\nAdds remaining changes needed to get instrumentation packages to tag `v0.15b0` at https://github.com/open-telemetry/opentelemetry-python/commit/725655a20b370c5f2efcab6797dd841bad8e8600 of the Core Repo\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nTests will be added in a future PR\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-instrumentation-django",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #101 from NathanielRN/move-instrumentation-django\n\nMove instrumentation django"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621188bac254a19ac290ed4",
    "number": 100,
    "body": "# Description\r\n\r\nChanges for package `instrumentation/opentelemetry-instrumentation-dbapi`.\r\n\r\nAdds remaining changes needed to get instrumentation packages to tag `v0.15b0` at https://github.com/open-telemetry/opentelemetry-python/commit/725655a20b370c5f2efcab6797dd841bad8e8600 of the Core Repo\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nTests will be added in a future PR\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-instrumentation-dbapi",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #100 from NathanielRN/move-instrumentation-dbapi\n\nMove instrumentation dbapi"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621188bac254a19ac290ed5",
    "number": 99,
    "body": "# Description\r\n\r\nChanges for package `instrumentation/opentelemetry-instrumentation-celery`.\r\n\r\nAdds remaining changes needed to get instrumentation packages to tag `v0.15b0` at https://github.com/open-telemetry/opentelemetry-python/commit/725655a20b370c5f2efcab6797dd841bad8e8600 of the Core Repo\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nTests will be added in a future PR\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-instrumentation-celery",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #99 from NathanielRN/move-instrumentation-celery\n\nMove instrumentation celery"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621188cac254a19ac290ed6",
    "number": 98,
    "body": "# Description\r\n\r\nChanges for package `instrumentation/opentelemetry-instrumentation-botocore`.\r\n\r\nAdds remaining changes needed to get instrumentation packages to tag `v0.15b0` at https://github.com/open-telemetry/opentelemetry-python/commit/725655a20b370c5f2efcab6797dd841bad8e8600 of the Core Repo\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nTests will be added in a future PR\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-instrumentation-botocore",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #98 from NathanielRN/move-instrumentation-botocore\n\nMove instrumentation botocore"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621188dac254a19ac290ed7",
    "number": 97,
    "body": "# Description\r\n\r\nChanges for package `instrumentation/opentelemetry-instrumentation-boto`.\r\n\r\nAdds remaining changes needed to get instrumentation packages to tag `v0.15b0` at https://github.com/open-telemetry/opentelemetry-python/commit/725655a20b370c5f2efcab6797dd841bad8e8600 of the Core Repo\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nTests will be added in a future PR\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-instrumentation-boto",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #97 from NathanielRN/move-instrumentation-boto\n\nMove instrumentation boto"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621188eac254a19ac290ed8",
    "number": 96,
    "body": "# Description\r\n\r\nChanges for package `instrumentation/opentelemetry-asyncpg`.\r\n\r\nAdds remaining changes needed to get instrumentation packages to tag `v0.15b0` at https://github.com/open-telemetry/opentelemetry-python/commit/725655a20b370c5f2efcab6797dd841bad8e8600 of the Core Repo\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nTests will be added in a future PR\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-instrumentation-asyncpg",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #96 from NathanielRN/move-instrumentation-asyncpg\n\nMove instrumentation asyncpg"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621188fac254a19ac290ed9",
    "number": 95,
    "body": "# Description\r\n\r\nChanges for package `instrumentation/opentelemetry-asgi`.\r\n\r\nAdds remaining changes needed to get instrumentation packages to tag `v0.15b0` at https://github.com/open-telemetry/opentelemetry-python/commit/725655a20b370c5f2efcab6797dd841bad8e8600 of the Core Repo\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nTests will be added in a future PR\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-instrumentation-asgi",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #95 from NathanielRN/move-instrumentation-asgi\n\nMove instrumentation asgi"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211890ac254a19ac290eda",
    "number": 94,
    "body": "# Description\r\n\r\nChanges for package `instrumentation/opentelemetry-aiopg`.\r\n\r\nAdds remaining changes needed to get instrumentation packages to tag `v0.15b0` at https://github.com/open-telemetry/opentelemetry-python/commit/725655a20b370c5f2efcab6797dd841bad8e8600 of the Core Repo\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nTests will be added in a future PR\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-instrumentation-aiopg",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #94 from NathanielRN/move-instrumentation-aiopg\n\nMove instrumentation aiopg"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211891ac254a19ac290edb",
    "number": 93,
    "body": "# Description\r\n\r\nChanges for package `instrumentation/opentelemetry-aiohttp-client`.\r\n\r\nAdds remaining changes needed to get instrumentation packages to tag `v0.15b0` at https://github.com/open-telemetry/opentelemetry-python/commit/725655a20b370c5f2efcab6797dd841bad8e8600 of the Core Repo\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nTests will be added in a future PR\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-instrumentation-aiohttp-client",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #93 from NathanielRN/move-instrumentation-aiohttp-client\n\nMove instrumentation aiohttp client"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211891ac254a19ac290edc",
    "number": 92,
    "body": "# Description\r\n\r\nChanges for package `instrumentation/opentelemetry-aiohttp-client`.\r\n\r\nAdds remaining changes needed to get instrumentation packages to tag `v0.15b0` at https://github.com/open-telemetry/opentelemetry-python/commit/725655a20b370c5f2efcab6797dd841bad8e8600 of the Core Repo\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nTests will be added in a future PR\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-instrumentation-aiohttp-client",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211892ac254a19ac290edd",
    "number": 90,
    "body": "Reverts open-telemetry/opentelemetry-python-contrib#82\r\n\r\nThis exporter will remain in the core repo, see the list of exporters here https://github.com/open-telemetry/opentelemetry-specification/blob/b8b130d6d26e11d00c2b82be3cc3c9431da20fd0/spec-compliance-matrix.md#exporters",
    "head_branch": "revert-82-move-exporter-zipkin",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Revert \"Rename exporter packages from \"ext\" to \"exporter\" (#953)\"\n\nThis reverts commit b2d3d56e5267dc179eaa20af8280e08803b6fbe0."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211893ac254a19ac290ede",
    "number": 89,
    "body": "Reverts open-telemetry/opentelemetry-python-contrib#78\r\n\r\nThis exporter will remain in the core repo, see the list of exporters here https://github.com/open-telemetry/opentelemetry-specification/blob/b8b130d6d26e11d00c2b82be3cc3c9431da20fd0/spec-compliance-matrix.md#exporters",
    "head_branch": "revert-78-move-exporter-jaeger",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Revert \"Rename exporter packages from \"ext\" to \"exporter\" (#953)\"\n\nThis reverts commit 90af26d8ed8370209883db71277f5696c27df4b7."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211894ac254a19ac290edf",
    "number": 88,
    "body": "Reverts open-telemetry/opentelemetry-python-contrib#81",
    "head_branch": "revert-81-move-exporter-prometheus",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Revert \"Rename exporter packages from \"ext\" to \"exporter\" (#953)\"\n\nThis reverts commit 678972468693f202f5d51625aa7bf8451d48ad63."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211895ac254a19ac290ee0",
    "number": 87,
    "body": "# Description\r\n\r\nMoves the `instrumentation/opentelemetry-instrumentation-aiopg` from the core repo into the contrib repo.\r\n\r\nThe original code is being copied over from the Core repo here: https://github.com/open-telemetry/opentelemetry-python/tree/master/instrumentation/opentelemetry-instrumentation-aiopg\r\n\r\n# How Has This Been Tested?\r\n\r\nCI tests will confirm it works correctly.\r\n\r\nThe only reason I didn't add tests yet (and I didn't plan to until we get all the packages we want in) is because the tests introduced here depend on other packages that will be coming (very soon hopefully!) in future PRs.\r\n\r\nAfter the PRs with the packages are merged, I'll take the same approach I took in my large PR #47 where I got the tests to pass.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-instrumentation-aiopg",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #87 from NathanielRN/move-instrumentation-aiopg\n\nMove instrumentation aiopg"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211896ac254a19ac290ee1",
    "number": 86,
    "body": "# Description\r\n\r\nMoves some root level files from the core repo into the contrib repo.\r\n\r\nThe original code is being copied over from the Core repo here: https://github.com/open-telemetry/opentelemetry-python/tree/master\r\n\r\nThe modifications are what's necessary to get a simple CI pipline. **This is also pending another workflow which would allow PRs in the Core repo to trigger workflow runs in this Contrib repo**\r\n\r\n# How Has This Been Tested?\r\n\r\nIntroduces a CI to tests all PRs before it.\r\n\r\nWill include tests to validate these PRs:\r\n#49\r\n#50\r\n#51\r\n#52\r\n#53\r\n#54\r\n#55\r\n#56\r\n#57\r\n#58\r\n#59\r\n#60\r\n#61\r\n#62\r\n#63\r\n#64\r\n#65\r\n#66\r\n#67\r\n#68\r\n#69\r\n#70\r\n#71\r\n#72\r\n#73\r\n#74\r\n#75\r\n#76\r\n#77\r\n#78\r\n#79\r\n#80\r\n#81\r\n#82\r\n#83\r\n#84\r\n#85\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-edit-root-files-for-ci",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #86 from NathanielRN/move-edit-root-files-for-ci"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211897ac254a19ac290ee2",
    "number": 85,
    "body": "# Description\r\n\r\nMoves the `tests/opentelemetry-docker-tests` from the core repo into the contrib repo.\r\n\r\nThe original code is being copied over from the Core repo here: https://github.com/open-telemetry/opentelemetry-python/tree/master/tests/opentelemetry-docker-tests\r\n\r\n# How Has This Been Tested?\r\n\r\nCI tests will confirm it works correctly.\r\n\r\nThe only reason I didn't add tests yet (and I didn't plan to until we get all the packages we want in) is because the tests introduced here depend on other packages that will be coming (very soon hopefully!) in future PRs.\r\n\r\nAfter the PRs with the packages are merged, I'll take the same approach I took in my large PR #47 where I got the tests to pass.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-tests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #85 from NathanielRN/move-tests\n\nMove docker tests"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211898ac254a19ac290ee3",
    "number": 84,
    "body": "# Description\r\n\r\nMoves the `instrumentation/opentelemetry-instrumentation-flask` from the core repo into the contrib repo.\r\n\r\nThe original code is being copied over from the Core repo here: https://github.com/open-telemetry/opentelemetry-python/tree/master/instrumentation/opentelemetry-instrumentation-flask\r\n\r\n# How Has This Been Tested?\r\n\r\nCI tests will confirm it works correctly.\r\n\r\nThe only reason I didn't add tests yet (and I didn't plan to until we get all the packages we want in) is because the tests introduced here depend on other packages that will be coming (very soon hopefully!) in future PRs.\r\n\r\nAfter the PRs with the packages are merged, I'll take the same approach I took in my large PR #47 where I got the tests to pass.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-instrumentation-flask",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #84 from NathanielRN/move-instrumentation-flask\n\nMove instrumentation flask"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211899ac254a19ac290ee4",
    "number": 83,
    "body": "# Description\r\n\r\nMoves the `instrumentation/opentelemetry-instrumentation-django` from the core repo into the contrib repo.\r\n\r\nThe original code is being copied over from the Core repo here: https://github.com/open-telemetry/opentelemetry-python/tree/master/instrumentation/opentelemetry-instrumentation-django\r\n\r\n# How Has This Been Tested?\r\n\r\nCI tests will confirm it works correctly.\r\n\r\nThe only reason I didn't add tests yet (and I didn't plan to until we get all the packages we want in) is because the tests introduced here depend on other packages that will be coming (very soon hopefully!) in future PRs.\r\n\r\nAfter the PRs with the packages are merged, I'll take the same approach I took in my large PR #47 where I got the tests to pass.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-instrumentation-django",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #83 from NathanielRN/move-instrumentation-django\n\nMove instrumentation django"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "66211899ac254a19ac290ee5",
    "number": 82,
    "body": "# Description\r\n\r\nMoves the `exporter/opentelemetry-exporter-zipkin` from the core repo into the contrib repo.\r\n\r\nThe original code is being copied over from the Core repo here: https://github.com/open-telemetry/opentelemetry-python/tree/master/exporter/opentelemetry-exporter-zipkin\r\n\r\n# How Has This Been Tested?\r\n\r\nCI tests will confirm it works correctly.\r\n\r\nThe only reason I didn't add tests yet (and I didn't plan to until we get all the packages we want in) is because the tests introduced here depend on other packages that will be coming (very soon hopefully!) in future PRs.\r\n\r\nAfter the PRs with the packages are merged, I'll take the same approach I took in my large PR #47 where I got the tests to pass.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-exporter-zipkin",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "chore: bump dev version (#1235)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621189aac254a19ac290ee6",
    "number": 81,
    "body": "# Description\r\n\r\nMoves the `exporter/opentelemetry-exporter-prometheus` from the core repo into the contrib repo.\r\n\r\nThe original code is being copied over from the Core repo here: https://github.com/open-telemetry/opentelemetry-python/tree/master/exporter/opentelemetry-exporter-prometheus\r\n\r\n# How Has This Been Tested?\r\n\r\nCI tests will confirm it works correctly.\r\n\r\nThe only reason I didn't add tests yet (and I didn't plan to until we get all the packages we want in) is because the tests introduced here depend on other packages that will be coming (very soon hopefully!) in future PRs.\r\n\r\nAfter the PRs with the packages are merged, I'll take the same approach I took in my large PR #47 where I got the tests to pass.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-exporter-prometheus",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "chore: bump dev version (#1235)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621189bac254a19ac290ee7",
    "number": 80,
    "body": "# Description\r\n\r\nMoves the `exporter/opentelemetry-exporter-otlp` from the core repo into the contrib repo.\r\n\r\nThe original code is being copied over from the Core repo here: https://github.com/open-telemetry/opentelemetry-python/tree/master/exporter/opentelemetry-exporter-otlp\r\n\r\n# How Has This Been Tested?\r\n\r\nCI tests will confirm it works correctly.\r\n\r\nThe only reason I didn't add tests yet (and I didn't plan to until we get all the packages we want in) is because the tests introduced here depend on other packages that will be coming (very soon hopefully!) in future PRs.\r\n\r\nAfter the PRs with the packages are merged, I'll take the same approach I took in my large PR #47 where I got the tests to pass.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-exporter-otlp",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621189cac254a19ac290ee8",
    "number": 79,
    "body": "# Description\r\n\r\nMoves the `exporter/opentelemetry-exporter-opencensus` from the core repo into the contrib repo.\r\n\r\nThe original code is being copied over from the Core repo here: https://github.com/open-telemetry/opentelemetry-python/tree/master/exporter/opentelemetry-exporter-opencensus\r\n\r\n# How Has This Been Tested?\r\n\r\nCI tests will confirm it works correctly.\r\n\r\nThe only reason I didn't add tests yet (and I didn't plan to until we get all the packages we want in) is because the tests introduced here depend on other packages that will be coming (very soon hopefully!) in future PRs.\r\n\r\nAfter the PRs with the packages are merged, I'll take the same approach I took in my large PR #47 where I got the tests to pass.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-exporter-opencensus",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621189dac254a19ac290ee9",
    "number": 78,
    "body": "# Description\r\n\r\nMoves the `exporter/opentelemetry-exporter-jaeger` from the core repo into the contrib repo.\r\n\r\nThe original code is being copied over from the Core repo here: https://github.com/open-telemetry/opentelemetry-python/tree/master/exporter/opentelemetry-exporter-jaeger\r\n\r\n# How Has This Been Tested?\r\n\r\nCI tests will confirm it works correctly.\r\n\r\nThe only reason I didn't add tests yet (and I didn't plan to until we get all the packages we want in) is because the tests introduced here depend on other packages that will be coming (very soon hopefully!) in future PRs.\r\n\r\nAfter the PRs with the packages are merged, I'll take the same approach I took in my large PR #47 where I got the tests to pass.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-exporter-jaeger",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Support Environment Variables for JaegerSpanExporter configuration (#1114)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621189eac254a19ac290eea",
    "number": 77,
    "body": "# Description\r\n\r\nMoves the `instrumentation/opentelemetry-instrumentation-falcon` from the core repo into the contrib repo.\r\n\r\nThe original code is being copied over from the Core repo here: https://github.com/open-telemetry/opentelemetry-python/tree/master/instrumentation/opentelemetry-instrumentation-falcon\r\n\r\n# How Has This Been Tested?\r\n\r\nCI tests will confirm it works correctly.\r\n\r\nThe only reason I didn't add tests yet (and I didn't plan to until we get all the packages we want in) is because the tests introduced here depend on other packages that will be coming (very soon hopefully!) in future PRs.\r\n\r\nAfter the PRs with the packages are merged, I'll take the same approach I took in my large PR #47 where I got the tests to pass.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-instrumentation-falcon",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Make SpanProcessor.on_start accept parent Context (#1251)\n\n* context from Tracer.start_span is passed through to the SpanProcessor\r\n* fix linting issue in falcon test app when linting with eachdist script\r\n* fix global error handler test as it read installed extensions\r\n* reset global Configuration object state after tests were run"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "6621189fac254a19ac290eeb",
    "number": 76,
    "body": "# Description\r\n\r\nMoves the `exporter/opentelemetry-exporter-datadog` from the core repo into the contrib repo.\r\n\r\nThe original code is being copied over from the Core repo here: https://github.com/open-telemetry/opentelemetry-python/tree/master/exporter/opentelemetry-exporter-datadog\r\n\r\n# How Has This Been Tested?\r\n\r\nCI tests will confirm it works correctly.\r\n\r\nThe only reason I didn't add tests yet (and I didn't plan to until we get all the packages we want in) is because the tests introduced here depend on other packages that will be coming (very soon hopefully!) in future PRs.\r\n\r\nAfter the PRs with the packages are merged, I'll take the same approach I took in my large PR #47 where I got the tests to pass.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-exporter-datadog",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Make SpanProcessor.on_start accept parent Context (#1251)\n\n* context from Tracer.start_span is passed through to the SpanProcessor\r\n* fix linting issue in falcon test app when linting with eachdist script\r\n* fix global error handler test as it read installed extensions\r\n* reset global Configuration object state after tests were run"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662118a0ac254a19ac290eec",
    "number": 75,
    "body": "# Description\r\n\r\nMoves the `instrumentation/opentelemetry-instrumentation-wsgi` from the core repo into the contrib repo.\r\n\r\nThe original code is being copied over from the Core repo here: https://github.com/open-telemetry/opentelemetry-python/tree/master/instrumentation/opentelemetry-instrumentation-wsgi\r\n\r\n# How Has This Been Tested?\r\n\r\nCI tests will confirm it works correctly.\r\n\r\nThe only reason I didn't add tests yet (and I didn't plan to until we get all the packages we want in) is because the tests introduced here depend on other packages that will be coming (very soon hopefully!) in future PRs.\r\n\r\nAfter the PRs with the packages are merged, I'll take the same approach I took in my large PR #47 where I got the tests to pass.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-instrumentation-wsgi",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #75 from NathanielRN/move-instrumentation-wsgi\n\nMove instrumentation wsgi"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662118a1ac254a19ac290eed",
    "number": 74,
    "body": "# Description\r\n\r\nMoves the `instrumentation/opentelemetry-instrumentation-tornado` from the core repo into the contrib repo.\r\n\r\nThe original code is being copied over from the Core repo here: https://github.com/open-telemetry/opentelemetry-python/tree/master/instrumentation/opentelemetry-instrumentation-tornado\r\n\r\n# How Has This Been Tested?\r\n\r\nCI tests will confirm it works correctly.\r\n\r\nThe only reason I didn't add tests yet (and I didn't plan to until we get all the packages we want in) is because the tests introduced here depend on other packages that will be coming (very soon hopefully!) in future PRs.\r\n\r\nAfter the PRs with the packages are merged, I'll take the same approach I took in my large PR #47 where I got the tests to pass.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-instrumentation-tornado",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use is_recording flag in jinja, celery, esearch, falcon instrumentations (#1241)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662118a1ac254a19ac290eee",
    "number": 73,
    "body": "# Description\r\n\r\nMoves the `instrumentation/opentelemetry-instrumentation-system-metrics` from the core repo into the contrib repo.\r\n\r\nThe original code is being copied over from the Core repo here: https://github.com/open-telemetry/opentelemetry-python/tree/master/instrumentation/opentelemetry-instrumentation-system-metrics\r\n\r\n# How Has This Been Tested?\r\n\r\nCI tests will confirm it works correctly.\r\n\r\nThe only reason I didn't add tests yet (and I didn't plan to until we get all the packages we want in) is because the tests introduced here depend on other packages that will be coming (very soon hopefully!) in future PRs.\r\n\r\nAfter the PRs with the packages are merged, I'll take the same approach I took in my large PR #47 where I got the tests to pass.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-instrumentation-system-metrics",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #73 from NathanielRN/move-instrumentation-system-metrics\n\nMove instrumentation system metrics"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662118a2ac254a19ac290eef",
    "number": 72,
    "body": "# Description\r\n\r\nMoves the `instrumentation/opentelemetry-instrumentation-starlette` from the core repo into the contrib repo.\r\n\r\nThe original code is being copied over from the Core repo here: https://github.com/open-telemetry/opentelemetry-python/tree/master/instrumentation/opentelemetry-instrumentation-starlette\r\n\r\n# How Has This Been Tested?\r\n\r\nCI tests will confirm it works correctly.\r\n\r\nThe only reason I didn't add tests yet (and I didn't plan to until we get all the packages we want in) is because the tests introduced here depend on other packages that will be coming (very soon hopefully!) in future PRs.\r\n\r\nAfter the PRs with the packages are merged, I'll take the same approach I took in my large PR #47 where I got the tests to pass.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-instrumentation-starlette",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "chore: bump dev version (#1235)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662118a3ac254a19ac290ef0",
    "number": 71,
    "body": "# Description\r\n\r\nMoves the `instrumentation/opentelemetry-instrumentation-sqlite3` from the core repo into the contrib repo.\r\n\r\nThe original code is being copied over from the Core repo here: https://github.com/open-telemetry/opentelemetry-python/tree/master/instrumentation/opentelemetry-instrumentation-sqlite3\r\n\r\n# How Has This Been Tested?\r\n\r\nCI tests will confirm it works correctly.\r\n\r\nThe only reason I didn't add tests yet (and I didn't plan to until we get all the packages we want in) is because the tests introduced here depend on other packages that will be coming (very soon hopefully!) in future PRs.\r\n\r\nAfter the PRs with the packages are merged, I'll take the same approach I took in my large PR #47 where I got the tests to pass.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-instrumentation-sqlite3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "chore: bump dev version (#1235)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662118a4ac254a19ac290ef1",
    "number": 70,
    "body": "# Description\r\n\r\nMoves the `instrumentation/opentelemetry-instrumentation-sqlalchemy` from the core repo into the contrib repo.\r\n\r\nThe original code is being copied over from the Core repo here: https://github.com/open-telemetry/opentelemetry-python/tree/master/instrumentation/opentelemetry-instrumentation-sqlalchemy\r\n\r\n# How Has This Been Tested?\r\n\r\nCI tests will confirm it works correctly.\r\n\r\nThe only reason I didn't add tests yet (and I didn't plan to until we get all the packages we want in) is because the tests introduced here depend on other packages that will be coming (very soon hopefully!) in future PRs.\r\n\r\nAfter the PRs with the packages are merged, I'll take the same approach I took in my large PR #47 where I got the tests to pass.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-instrumentation-sqlalchemy",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "chore: bump dev version (#1235)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662118a5ac254a19ac290ef2",
    "number": 69,
    "body": "# Description\r\n\r\nMoves the `instrumentation/opentelemetry-instrumentation-requests` from the core repo into the contrib repo.\r\n\r\nThe original code is being copied over from the Core repo here: https://github.com/open-telemetry/opentelemetry-python/tree/master/instrumentation/opentelemetry-instrumentation-requests\r\n\r\n# How Has This Been Tested?\r\n\r\nCI tests will confirm it works correctly.\r\n\r\nThe only reason I didn't add tests yet (and I didn't plan to until we get all the packages we want in) is because the tests introduced here depend on other packages that will be coming (very soon hopefully!) in future PRs.\r\n\r\nAfter the PRs with the packages are merged, I'll take the same approach I took in my large PR #47 where I got the tests to pass.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-instrumentation-requests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Adding metric collection as part of instrumentations - Django (#1230)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662118a6ac254a19ac290ef3",
    "number": 68,
    "body": "# Description\r\n\r\nMoves the `instrumentation/opentelemetry-instrumentation-redis` from the core repo into the contrib repo.\r\n\r\nThe original code is being copied over from the Core repo here: https://github.com/open-telemetry/opentelemetry-python/tree/master/instrumentation/opentelemetry-instrumentation-redis\r\n\r\n# How Has This Been Tested?\r\n\r\nCI tests will confirm it works correctly.\r\n\r\nThe only reason I didn't add tests yet (and I didn't plan to until we get all the packages we want in) is because the tests introduced here depend on other packages that will be coming (very soon hopefully!) in future PRs.\r\n\r\nAfter the PRs with the packages are merged, I'll take the same approach I took in my large PR #47 where I got the tests to pass.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-instrumentation-redis",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "chore: bump dev version (#1235)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662118a7ac254a19ac290ef4",
    "number": 67,
    "body": "# Description\r\n\r\nMoves the `instrumentation/opentelemetry-instrumentation-pyramid` from the core repo into the contrib repo.\r\n\r\nThe original code is being copied over from the Core repo here: https://github.com/open-telemetry/opentelemetry-python/tree/master/instrumentation/opentelemetry-instrumentation-pyramid\r\n\r\n# How Has This Been Tested?\r\n\r\nCI tests will confirm it works correctly.\r\n\r\nThe only reason I didn't add tests yet (and I didn't plan to until we get all the packages we want in) is because the tests introduced here depend on other packages that will be coming (very soon hopefully!) in future PRs.\r\n\r\nAfter the PRs with the packages are merged, I'll take the same approach I took in my large PR #47 where I got the tests to pass.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-instrumentation-pyramid",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "chore: bump dev version (#1235)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662118a8ac254a19ac290ef5",
    "number": 66,
    "body": "# Description\r\n\r\nMoves the `instrumentation/opentelemetry-instrumentation-pymysql` from the core repo into the contrib repo.\r\n\r\nThe original code is being copied over from the Core repo here: https://github.com/open-telemetry/opentelemetry-python/tree/master/instrumentation/opentelemetry-instrumentation-pymysql\r\n\r\n# How Has This Been Tested?\r\n\r\nCI tests will confirm it works correctly.\r\n\r\nThe only reason I didn't add tests yet (and I didn't plan to until we get all the packages we want in) is because the tests introduced here depend on other packages that will be coming (very soon hopefully!) in future PRs.\r\n\r\nAfter the PRs with the packages are merged, I'll take the same approach I took in my large PR #47 where I got the tests to pass.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-instrumentation-pymysql",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "chore: bump dev version (#1235)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662118a8ac254a19ac290ef6",
    "number": 65,
    "body": "# Description\r\n\r\nMoves the `instrumentation/opentelemetry-instrumentation-pymongo` from the core repo into the contrib repo.\r\n\r\nThe original code is being copied over from the Core repo here: https://github.com/open-telemetry/opentelemetry-python/tree/master/instrumentation/opentelemetry-instrumentation-pymongo\r\n\r\n# How Has This Been Tested?\r\n\r\nCI tests will confirm it works correctly.\r\n\r\nThe only reason I didn't add tests yet (and I didn't plan to until we get all the packages we want in) is because the tests introduced here depend on other packages that will be coming (very soon hopefully!) in future PRs.\r\n\r\nAfter the PRs with the packages are merged, I'll take the same approach I took in my large PR #47 where I got the tests to pass.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-instrumentation-pymongo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "chore: bump dev version (#1235)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662118a9ac254a19ac290ef7",
    "number": 64,
    "body": "# Description\r\n\r\nMoves the `instrumentation/opentelemetry-instrumentation-pymemcache` from the core repo into the contrib repo.\r\n\r\nThe original code is being copied over from the Core repo here: https://github.com/open-telemetry/opentelemetry-python/tree/master/instrumentation/opentelemetry-instrumentation-pymemcache\r\n\r\n# How Has This Been Tested?\r\n\r\nCI tests will confirm it works correctly.\r\n\r\nThe only reason I didn't add tests yet (and I didn't plan to until we get all the packages we want in) is because the tests introduced here depend on other packages that will be coming (very soon hopefully!) in future PRs.\r\n\r\nAfter the PRs with the packages are merged, I'll take the same approach I took in my large PR #47 where I got the tests to pass.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-instrumentation-pymemcache",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use is_recording flag in jinja, celery, esearch, falcon instrumentations (#1241)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662118aaac254a19ac290ef8",
    "number": 63,
    "body": "# Description\r\n\r\nMoves the `instrumentation/opentelemetry-instrumentation-psycopg2` from the core repo into the contrib repo.\r\n\r\nThe original code is being copied over from the Core repo here: https://github.com/open-telemetry/opentelemetry-python/tree/master/instrumentation/opentelemetry-instrumentation-psycopg2\r\n\r\n# How Has This Been Tested?\r\n\r\nCI tests will confirm it works correctly.\r\n\r\nThe only reason I didn't add tests yet (and I didn't plan to until we get all the packages we want in) is because the tests introduced here depend on other packages that will be coming (very soon hopefully!) in future PRs.\r\n\r\nAfter the PRs with the packages are merged, I'll take the same approach I took in my large PR #47 where I got the tests to pass.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-instrumentation-psycopg2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "chore: bump dev version (#1235)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662118abac254a19ac290ef9",
    "number": 62,
    "body": "# Description\r\n\r\nMoves the `instrumentation/opentelemetry-instrumentation-opentracing-shim` from the core repo into the contrib repo.\r\n\r\nThe original code is being copied over from the Core repo here: https://github.com/open-telemetry/opentelemetry-python/tree/master/instrumentation/opentelemetry-instrumentation-opentracing-shim\r\n\r\n# How Has This Been Tested?\r\n\r\nCI tests will confirm it works correctly.\r\n\r\nThe only reason I didn't add tests yet (and I didn't plan to until we get all the packages we want in) is because the tests introduced here depend on other packages that will be coming (very soon hopefully!) in future PRs.\r\n\r\nAfter the PRs with the packages are merged, I'll take the same approach I took in my large PR #47 where I got the tests to pass.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-instrumentation-opentracing-shim",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "chore: bump dev version (#1235)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662118acac254a19ac290efa",
    "number": 61,
    "body": "# Description\r\n\r\nMoves the `instrumentation/opentelemetry-instrumentation-mysql` from the core repo into the contrib repo.\r\n\r\nThe original code is being copied over from the Core repo here: https://github.com/open-telemetry/opentelemetry-python/tree/master/instrumentation/opentelemetry-instrumentation-mysql\r\n\r\n# How Has This Been Tested?\r\n\r\nCI tests will confirm it works correctly.\r\n\r\nThe only reason I didn't add tests yet (and I didn't plan to until we get all the packages we want in) is because the tests introduced here depend on other packages that will be coming (very soon hopefully!) in future PRs.\r\n\r\nAfter the PRs with the packages are merged, I'll take the same approach I took in my large PR #47 where I got the tests to pass.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-instrumentation-mysql",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "chore: bump dev version (#1235)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662118adac254a19ac290efb",
    "number": 60,
    "body": "# Description\r\n\r\nMoves the `instrumentation/opentelemetry-instrumentation-jinja2` from the core repo into the contrib repo.\r\n\r\nThe original code is being copied over from the Core repo here: https://github.com/open-telemetry/opentelemetry-python/tree/master/instrumentation/opentelemetry-instrumentation-jinja2\r\n\r\n# How Has This Been Tested?\r\n\r\nCI tests will confirm it works correctly.\r\n\r\nThe only reason I didn't add tests yet (and I didn't plan to until we get all the packages we want in) is because the tests introduced here depend on other packages that will be coming (very soon hopefully!) in future PRs.\r\n\r\nAfter the PRs with the packages are merged, I'll take the same approach I took in my large PR #47 where I got the tests to pass.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-instrumentation-jinja2",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use is_recording flag in jinja, celery, esearch, falcon instrumentations (#1241)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662118aeac254a19ac290efc",
    "number": 59,
    "body": "# Description\r\n\r\nMoves the `instrumentation/opentelemetry-instrumentation-grpc` from the core repo into the contrib repo.\r\n\r\nThe original code is being copied over from the Core repo here: https://github.com/open-telemetry/opentelemetry-python/tree/master/instrumentation/opentelemetry-instrumentation-grpc\r\n\r\n# How Has This Been Tested?\r\n\r\nCI tests will confirm it works correctly.\r\n\r\nThe only reason I didn't add tests yet (and I didn't plan to until we get all the packages we want in) is because the tests introduced here depend on other packages that will be coming (very soon hopefully!) in future PRs.\r\n\r\nAfter the PRs with the packages are merged, I'll take the same approach I took in my large PR #47 where I got the tests to pass.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-instrumentation-grpc",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662118afac254a19ac290efd",
    "number": 58,
    "body": "# Description\r\n\r\nMoves the `instrumentation/opentelemetry-instrumentation-fastapi` from the core repo into the contrib repo.\r\n\r\nThe original code is being copied over from the Core repo here: https://github.com/open-telemetry/opentelemetry-python/tree/master/instrumentation/opentelemetry-instrumentation-fastapi\r\n\r\n# How Has This Been Tested?\r\n\r\nCI tests will confirm it works correctly.\r\n\r\nThe only reason I didn't add tests yet (and I didn't plan to until we get all the packages we want in) is because the tests introduced here depend on other packages that will be coming (very soon hopefully!) in future PRs.\r\n\r\nAfter the PRs with the packages are merged, I'll take the same approach I took in my large PR #47 where I got the tests to pass.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-instrumentation-fastapi",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "chore: bump dev version (#1235)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662118afac254a19ac290efe",
    "number": 57,
    "body": "# Description\r\n\r\nMoves the `instrumentation/opentelemetry-instrumentation-elasticsearch` from the core repo into the contrib repo.\r\n\r\nThe original code is being copied over from the Core repo here: https://github.com/open-telemetry/opentelemetry-python/tree/master/instrumentation/opentelemetry-instrumentation-elasticsearch\r\n\r\n# How Has This Been Tested?\r\n\r\nCI tests will confirm it works correctly.\r\n\r\nThe only reason I didn't add tests yet (and I didn't plan to until we get all the packages we want in) is because the tests introduced here depend on other packages that will be coming (very soon hopefully!) in future PRs.\r\n\r\nAfter the PRs with the packages are merged, I'll take the same approach I took in my large PR #47 where I got the tests to pass.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-instrumentation-elasticsearch",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use is_recording flag in jinja, celery, esearch, falcon instrumentations (#1241)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662118b0ac254a19ac290eff",
    "number": 56,
    "body": "# Description\r\n\r\nMoves the `instrumentation/opentelemetry-instrumentation-dbapi` from the core repo into the contrib repo.\r\n\r\nThe original code is being copied over from the Core repo here: https://github.com/open-telemetry/opentelemetry-python/tree/master/instrumentation/opentelemetry-instrumentation-dbapi\r\n\r\n# How Has This Been Tested?\r\n\r\nCI tests will confirm it works correctly.\r\n\r\nThe only reason I didn't add tests yet (and I didn't plan to until we get all the packages we want in) is because the tests introduced here depend on other packages that will be coming (very soon hopefully!) in future PRs.\r\n\r\nAfter the PRs with the packages are merged, I'll take the same approach I took in my large PR #47 where I got the tests to pass.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-instrumentation-dbapi",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "chore: bump dev version (#1235)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662118b1ac254a19ac290f00",
    "number": 55,
    "body": "# Description\r\n\r\nMoves the `instrumentation/opentelemetry-instrumentation-celery` from the core repo into the contrib repo.\r\n\r\nThe original code is being copied over from the Core repo here: https://github.com/open-telemetry/opentelemetry-python/tree/master/instrumentation/opentelemetry-instrumentation-celery\r\n\r\n# How Has This Been Tested?\r\n\r\nCI tests will confirm it works correctly.\r\n\r\nThe only reason I didn't add tests yet (and I didn't plan to until we get all the packages we want in) is because the tests introduced here depend on other packages that will be coming (very soon hopefully!) in future PRs.\r\n\r\nAfter the PRs with the packages are merged, I'll take the same approach I took in my large PR #47 where I got the tests to pass.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-instrumentation-celery",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Use is_recording flag in jinja, celery, esearch, falcon instrumentations (#1241)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662118b2ac254a19ac290f01",
    "number": 54,
    "body": "# Description\r\n\r\nMoves the `instrumentation/opentelemetry-instrumentation-botocore` from the core repo into the contrib repo.\r\n\r\nThe original code is being copied over from the Core repo here: https://github.com/open-telemetry/opentelemetry-python/tree/master/instrumentation/opentelemetry-instrumentation-botocore\r\n\r\n# How Has This Been Tested?\r\n\r\nCI tests will confirm it works correctly.\r\n\r\nThe only reason I didn't add tests yet (and I didn't plan to until we get all the packages we want in) is because the tests introduced here depend on other packages that will be coming (very soon hopefully!) in future PRs.\r\n\r\nAfter the PRs with the packages are merged, I'll take the same approach I took in my large PR #47 where I got the tests to pass.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-instrumentation-botocore",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "chore: bump dev version (#1235)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662118b3ac254a19ac290f02",
    "number": 53,
    "body": "# Description\r\n\r\nMoves the `instrumentation/opentelemetry-instrumentation-boto` from the core repo into the contrib repo.\r\n\r\nThe original code is being copied over from the Core repo here: https://github.com/open-telemetry/opentelemetry-python/tree/master/instrumentation/opentelemetry-instrumentation-boto\r\n\r\n# How Has This Been Tested?\r\n\r\nCI tests will confirm it works correctly.\r\n\r\nThe only reason I didn't add tests yet (and I didn't plan to until we get all the packages we want in) is because the tests introduced here depend on other packages that will be coming (very soon hopefully!) in future PRs.\r\n\r\nAfter the PRs with the packages are merged, I'll take the same approach I took in my large PR #47 where I got the tests to pass.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-instrumentation-boto",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "chore: bump dev version (#1235)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662118b4ac254a19ac290f03",
    "number": 52,
    "body": "# Description\r\n\r\nMoves the `instrumentation/opentelemetry-instrumentation-asyncpg` from the core repo into the contrib repo.\r\n\r\nThe original code is being copied over from the Core repo here: https://github.com/open-telemetry/opentelemetry-python/tree/master/instrumentation/opentelemetry-instrumentation-asyncpg\r\n\r\n# How Has This Been Tested?\r\n\r\nCI tests will confirm it works correctly.\r\n\r\nThe only reason I didn't add tests yet (and I didn't plan to until we get all the packages we want in) is because the tests introduced here depend on other packages that will be coming (very soon hopefully!) in future PRs.\r\n\r\nAfter the PRs with the packages are merged, I'll take the same approach I took in my large PR #47 where I got the tests to pass.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-instrumentation-asyncpg",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "chore: bump dev version (#1235)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662118b5ac254a19ac290f04",
    "number": 51,
    "body": "# Description\r\n\r\nMoves the `instrumentation/opentelemetry-instrumentation-asgi` from the core repo into the contrib repo.\r\n\r\nThe original code is being copied over from the Core repo here: https://github.com/open-telemetry/opentelemetry-python/tree/master/instrumentation/opentelemetry-instrumentation-asgi\r\n\r\n# How Has This Been Tested?\r\n\r\nCI tests will confirm it works correctly.\r\n\r\nThe only reason I didn't add tests yet (and I didn't plan to until we get all the packages we want in) is because the tests introduced here depend on other packages that will be coming (very soon hopefully!) in future PRs.\r\n\r\nAfter the PRs with the packages are merged, I'll take the same approach I took in my large PR #47 where I got the tests to pass.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-instrumentation-asgi",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "chore: bump dev version (#1235)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662118b6ac254a19ac290f05",
    "number": 50,
    "body": "# Description\r\n\r\nMoves the `instrumentation/opentelemetry-instrumentation-aiopg` from the core repo into the contrib repo.\r\n\r\nThe original code is being copied over from the Core repo here: https://github.com/open-telemetry/opentelemetry-python/tree/master/instrumentation/opentelemetry-instrumentation-aiopg\r\n\r\n# How Has This Been Tested?\r\n\r\nCI tests will confirm it works correctly.\r\n\r\nThe only reason I didn't add tests yet (and I didn't plan to until we get all the packages we want in) is because the tests introduced here depend on other packages that will be coming (very soon hopefully!) in future PRs.\r\n\r\nAfter the PRs with the packages are merged, I'll take the same approach I took in my large PR #47 where I got the tests to pass.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-instrumentation-aiopg",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662118b6ac254a19ac290f06",
    "number": 49,
    "body": "# Description\r\n\r\nMoves the `instrumentation/opentelemetry-instrumentation-aiohttp-client` from the core repo into the contrib repo.\r\n\r\nThe original code is being copied over from the Core repo here: https://github.com/open-telemetry/opentelemetry-python/tree/master/instrumentation/opentelemetry-instrumentation-aiohttp-client\r\n\r\n# How Has This Been Tested?\r\n\r\nCI tests will confirm it works correctly.\r\n\r\nThe only reason I didn't add tests yet (and I didn't plan to until we get all the packages we want in) is because the tests introduced here depend on other packages that will be coming (very soon hopefully!) in future PRs.\r\n\r\nFor example the files in this PR have these import statements:\r\n\r\n```\r\nfrom opentelemetry.instrumentation.instrumentor import BaseInstrumentor\r\nfrom opentelemetry.instrumentation.utils import (\r\n    http_status_to_canonical_code,\r\n    unwrap,\r\n)\r\n```\r\n\r\nBoth of which don't exist yet in this repo until I add them, in future PRs.\r\n\r\nAfter the PRs with the packages are merged, I'll create a final PR to add tests. (And I count on it working based on my big #47 PR)\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n~- [ ] Changelogs have been updated~\r\n~- [ ] Unit tests have been added~\r\n~- [ ] Documentation has been updated~\r\n",
    "head_branch": "move-instrumentation-aiohttp-client",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "chore: bump dev version (#1235)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662118b7ac254a19ac290f07",
    "number": 48,
    "body": "Please review #49 instead!",
    "head_branch": "move-instrumentation-aiohttp-client",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662118b8ac254a19ac290f08",
    "number": 47,
    "body": "# Description\r\n\r\nThis PR moves over many files from the Core repo so that they can live in the Contrib repo with a basic CI setup.\r\n\r\n## Type of change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nAdding CI validates dependency code from Core repos is installed correctly.\r\n\r\n# Checklist:\r\n\r\n- [x] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "move-core-files-to-contrib",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662118b9ac254a19ac290f09",
    "number": 46,
    "body": "# Description\r\n\r\nAdding GitHub actions to run tests for the repo.\r\n\r\n# Checklist:\r\n\r\n- [ ] Followed the style guidelines of this project\r\n- [ ] Changelogs have been updated\r\n- [ ] Unit tests have been added\r\n- [ ] Documentation has been updated\r\n",
    "head_branch": "add-workflows",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662118baac254a19ac290f0a",
    "number": 44,
    "body": "The files removed in this change already have instrumentation in the opentelemetry-python repo. Removing them from this reference folder as they're no longer needed.",
    "head_branch": "rm-supported-instrumentation",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Removing reference to ported instrumentation (#44)\n\nThe files removed in this change already have instrumentation in the opentelemetry-python repo. Removing them from this reference folder as they're no longer needed."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662118bbac254a19ac290f0b",
    "number": 43,
    "body": "Addresses #42\r\n\r\nTODO: address pylint",
    "head_branch": "flands/inclusive",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Remove non-inclusive language (#43)\n\nAddresses #42\r\n\r\nTODO: address pylint"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662118bcac254a19ac290f0c",
    "number": 41,
    "body": "dummy pr to force easycla run",
    "head_branch": "patch-1",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662118bdac254a19ac290f0d",
    "number": 40,
    "body": "Testing moving one of the ext packages over to the contrib repo.",
    "head_branch": "codeboten/move-opencensus-exporter",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662118bdac254a19ac290f0e",
    "number": 39,
    "body": "",
    "head_branch": "mauricio/dependency",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662118beac254a19ac290f0f",
    "number": 37,
    "body": "This document is in a PR only to allow other folks to collaborate on it, I don't expect it to be merged to the repository, unless it is useful.",
    "head_branch": "codeboten/plan",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662118bfac254a19ac290f10",
    "number": 36,
    "body": "Moving the suggested steps on porting existing instrumentation into CONTRIBUTING.md, can be removed in the future. ",
    "head_branch": "codeboten/update-contrib",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge pull request #36 from codeboten/codeboten/update-contrib\n\nUpdating readme, adding contributing doc"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662118c0ac254a19ac290f11",
    "number": 34,
    "body": "Moving the pymongo code from the opentelemetry-python repo into the contrib repo. Using this as a first attempt at migrating some of the code over and ensuring we have all the pieces in place to make contributing as easy as possible.\r\n\r\nOne thing to note, I wanted to ensure the original authors attributions remained on the files/changes, I committed the changes with the `--author` flag. I'm open to suggestions if there's a better way to do this.\r\n\r\nSteps to move the instrumentation from opentelemetry-python to opentelemetry-python-contrib repo:\r\n1. copy code to instrumentation directory\r\n2. copy integration tests to instrumentation/opentelemetry-instrumentation-docker-tests directory\r\n3. get a list of the original authors: `git log . | grep Author | sort | uniq`\r\n4. commit the initial move with the list of authors as `Co-authored by:`\r\n5. add targets to tox",
    "head_branch": "codeboten/move-pymongo",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662118c1ac254a19ac290f12",
    "number": 31,
    "body": "",
    "head_branch": "codeboten/fix-eachdist",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "ignore _template (#31)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662118c2ac254a19ac290f13",
    "number": 29,
    "body": "Move tox and other configuration files to root folder. Add eachdist to make it\r\neasier to handle operations with different packages.\r\n\r\nThe eachdist is taken from opentelemetry but slighty modified to avoid ignoring\r\na given path.",
    "head_branch": "mauricio/add-each-dist",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add eachdist and move tox to root folder (#29)\n\nMove tox and other configuration files to root folder. Add eachdist to make it\r\neasier to handle operations with different packages.\r\n\r\nThe eachdist is taken from opentelemetry but slighty modified to avoid ignoring\r\na given path."
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662118c3ac254a19ac290f14",
    "number": 28,
    "body": "As a convenience to users, adding a package that would install all the contrib packages, as well as the opentelemetry-auto-instrumentation & opentelemetry-sdk.",
    "head_branch": "codeboten/instrumentors-all",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662118c3ac254a19ac290f15",
    "number": 27,
    "body": "- Remove .circle configuration\r\n- Update CODEOWNERS and ISSUE_TEMPLATE in .github",
    "head_branch": "mauricio/small_clean",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Small cleanup (#27)\n\n- Remove .circle configuration\r\n- Update CODEOWNERS and ISSUE_TEMPLATE in .github\r\n- Restore LICENSE files"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662118c4ac254a19ac290f16",
    "number": 26,
    "body": "Adding some instructions on how to get started porting instrumentation. More information to be added later once we have travis sorted out for testing.",
    "head_branch": "codeboten/add-instructions",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "adding instructions to port instrumentation (#26)\n\nAdding some instructions on how to port from the reference directory. More updates will be needed as tests are added. \r\n\r\nCo-Authored-By: Hector Hernandez <39923391+hectorhdzg@users.noreply.github.com>\r\n\r\nCo-authored-by: Mauricio Vásquez <mauricio@kinvolk.io>\r\nCo-authored-by: Hector Hernandez <39923391+hectorhdzg@users.noreply.github.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662118c5ac254a19ac290f17",
    "number": 25,
    "body": "Lots more changes to go to get CI in a good place just a starting point to get linting going on PRs. Only part of the work for #24 ",
    "head_branch": "codeboten/add-ci",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Adding travis config (#25)\n\n* adding travis config"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662118c6ac254a19ac290f18",
    "number": 23,
    "body": "It's a WIP. I'll force push and change many things before marking as ready.",
    "head_branch": "mauricio/port-requests",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662118c7ac254a19ac290f19",
    "number": 22,
    "body": "Porting the existing sqlalchemy instrumentation to using the OpenTelemetry API and the OpenTelemetry Auto-instrumentation Patcher interface.\r\n\r\nThe process to make this happen is pretty straight forward:\r\n\r\n1. move the redis code into the instrumentors directory\r\n2. move tests\r\n3. added setup/version files and move code into a similar directory structure to other opentelemetry integrations\r\n4. fixed relative import paths to using ddtrace package\r\n5. update the code to use opentelemetry API\r\n6. get tests running\r\n\r\nCouple of TODOs left:\r\n\r\n1. add to travis\r\n2. the original sqlalchemy instrumentation set a couple of metrics in the metadata, this could be a good opportunity to use the metrics API\r\n3. figure out if Pin is needed\r\n\r\nNOTE: This currently still uses some utility functions in the ddtrace package.\r\n\r\nfixes #13 ",
    "head_branch": "codeboten/instrumentor-sqlalchemy",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662118c8ac254a19ac290f1a",
    "number": 21,
    "body": "Porting the existing redis instrumentation to using the OpenTelemetry API and the OpenTelemetry Auto-instrumentation Patcher interface.\r\n\r\nThe process to make this happen is pretty straight forward:\r\n1. move the redis code into the instrumentors directory\r\n2. move tests\r\n3. added setup/version files and move code into a similar directory structure to other opentelemetry integrations\r\n4. fixed relative import paths to using `ddtrace` package\r\n5. update the code to use opentelemetry API\r\n6. update the tests\r\n7. add tests to tox\r\n\r\nCouple of TODOs left:\r\n1. the original redis instrumentation set a couple of metrics in the metadata, this could be a good opportunity to use the metrics API\r\n2. pin versions of API & SDK\r\n\r\nNOTE: This currently still uses some utility functions in the ddtrace package.\r\n\r\nfixes #15 ",
    "head_branch": "instrumentor-redis",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662118c9ac254a19ac290f1b",
    "number": 20,
    "body": "Fixes #10 ",
    "head_branch": "issue_10",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662118caac254a19ac290f1c",
    "number": 19,
    "body": "Adds common files for instrumentors. Fixes #18 ",
    "head_branch": "issue_18",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Add common files (#19)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662118cbac254a19ac290f1d",
    "number": 8,
    "body": "Fixes #7 ",
    "head_branch": "issue_7",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662118cbac254a19ac290f1e",
    "number": 6,
    "body": "Move all DD code into its own directory. This is done to keep the code close at hand for instrumentor development.\r\n\r\nFixes #3 ",
    "head_branch": "issue_3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Move DD code into its own directory (#6)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662118ccac254a19ac290f1f",
    "number": 5,
    "body": "Remove notice file - keep copyright in individual file headers\r\n\r\nSee discussion here: open-telemetry/community#305",
    "head_branch": "remove_notice_file",
    "is_a_fork": false,
    "comments": [],
    "commit_messages": [
      "Remove NOTICE file (#5)\n\nRemove notice file - keep copyright in individual file headers\r\n\r\nSee discussion here: open-telemetry/community#305"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662118cdac254a19ac290f20",
    "number": 4,
    "body": "WIP\r\nFixes #3 ",
    "head_branch": "issue_3",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [],
    "has_test_file": false,
    "was_merged": false,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662118ceac254a19ac290f21",
    "number": 2,
    "body": "OpenTelemetry doesn't support Python 2.7. Removing it from the tests and removing contrib packages that don't support Python 3. In this change:\r\n\r\n- removing pylons contrib\r\n- removing mysqldb contrib\r\n- updating minimum versions of flask (>=1.0), gevent (>=1.1)\r\n\r\nSigned-off-by: Alex Boten <aboten@lightstep.com>",
    "head_branch": "remove-py27",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Removing support for python 2.7 (#2)\n\nOpenTelemetry doesn't support Python 2.7. Removing it from the tests and removing contrib packages that don't support Python 3. In this change:\r\n\r\n- removing pylons contrib\r\n- removing mysqldb contrib\r\n- updating minimum versions of flask (>=1.0), gevent (>=1.1)\r\n\r\nSigned-off-by: Alex Boten <aboten@lightstep.com>"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  },
  {
    "_id": "662118cfac254a19ac290f22",
    "number": 1,
    "body": "https://github.com/DataDog/dd-trace-py/commit/1e87c9bdf7769032982349c4ccc0e1c2e6866a16",
    "head_branch": "otel-dd-merged",
    "is_a_fork": true,
    "comments": [],
    "commit_messages": [
      "Merge in latest from datadog/dd-trace-py (#1)"
    ],
    "has_test_file": false,
    "was_merged": true,
    "documentation_file_was_changed": false,
    "documentation_or_comments_in_code_were_changed": false
  }
]